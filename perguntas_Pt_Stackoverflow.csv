id_pergunta,titulo,pergunta,resposta1,score1,resposta2,score2,tags
548769,Problema ao usar pdfkit no cloud9 + lambda python,"
Olá, estou tentando usar python + pdfkit para gerar arquivos PDF com HTML porém estou com um problema, quando defino o caminho do executável no código , ele não encontra , testei localmente e funcionou , porém quando faço o deploy da aplicação ele não encontra. Abaixo , esta o trecho do código em que tento fazer a configuração, o erro , e a disposição dos arquivos.



",,,,,"['\npython', 'pdf', 'aws\n']"
548757,Preciso de ajuda resolvendo esse problema [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 horas atrás.




                        Melhore esta pergunta
                    



QUESTÃO 1: TAXA PERCENTUAL
Desenvolva uma função que recebe dois valores e retorna o percentual da diferença do primeiro em relação
ao segundo. Nomeia essa função como taxa.
Desenvolva um programa que recebe o faturamento de doze meses e retorna a taxa percentual resultante
entre esses meses, um a um, se a taxa for positiva exiba uma mensagem informando a situação de
crescimento, caso contrário, informe o decrescimento. Use a função taxa em seu programa
",,,,,['\npython\n']
548740,Maneira para executar um tipo de query em Django,"
Estou com dificuldades para executar um tipo específico de Query no Django.
Estou querendo trazer as aulas que estão vinculadas a um mesmo modulo, por exemplo:
aula 1, 2, 3 e 4 estão vinculadas ao modulo 1, mas quero trazer destas aulas as que pertencem ao mesmo professor (aula 1 e 2 são do professor 1). E gostaria que a query trouxesse apenas Aula 1 e 2, neste caso.
Como se fosse:
SELECT * 
FROM departamento_aulavinculamodulo DeAuMo
INNER JOIN departamento_aula DeAu
ON DeAu.id = DeAuMo.aula_id
WHERE DeAu.professor_id = 1;

Abaixo estão os models das tabelas em python/django
class Modulo(models.Model):
    modulo = models.CharField(max_length=50)
    cod_modulo = models.CharField(max_length=3)
    lingua = models.ForeignKey(Lingua, on_delete=models.DO_NOTHING)
    nivel = models.ForeignKey(NivelLingua, on_delete=models.DO_NOTHING)
    departamento = models.ForeignKey(Departamento, on_delete=models.CASCADE)

class Aula(models.Model):
    aula = models.CharField(max_length=250)
    conteudo = models.TextField()
    conteudo_download = models.FileField(
        upload_to='conteudo_aula/%Y/%m', blank=True, null=True
    )
    data_post = models.DateField(default=timezone.now)
    nivel = models.ForeignKey(NivelLingua, default=1,
                              on_delete=models.DO_NOTHING)
    modulo = models.ManyToManyField(
        Modulo, blank=True, through='AulaVinculaModulo')
    professor = models.ForeignKey(Professor, on_delete=models.DO_NOTHING)
    aula_gravada = models.FileField(upload_to='aula/%Y/%m')

    def __str__(self) -> str:
        return self.aula

class AulaVinculaModulo(models.Model):
    aula = models.ForeignKey(
        Aula, on_delete=models.CASCADE, related_name='modulos')
    modulo = models.ForeignKey(
        Modulo, on_delete=models.CASCADE, related_name='aulas')

","
Uma das formas que eu mais gosto de resolver esses problemas como Query no Django é trabalhando direto na View da model, lá eu consigo ter mais liberdade para resolver esse tipo de problema. Mas isso não quer dizer que esse seja o único método também o mais eficaz para o que você deseja fazer. Mas vamos lá resolver esse problema.
A primeira coisa que você tem que fazer é deixar todas as ForeignKey bem organizadas para não se perder quando chegar no arquivo View de seu projeto.
Para resolução desse problema eu criei 3 models: Modulos, Aulas e Professor. A model Modulos, é a principal e vai ser complementada pela model de Aulas, já essa segunda será dependente da model de Professor.

Models

from django.db import models


class Modulo(models.Model):
    modulo = models.CharField(max_length=255)
    cod_modulo = models.CharField(max_length=255)
    ligua = models.CharField(max_length=255)

    class Meta:
        verbose_name = 'Modulo'
        verbose_name_plural = 'Modulos'

    def __str__(self):
        return f'{self.modulo}'


class Professor(models.Model):
    professor = models.CharField(max_length=255)
    idade = models.IntegerField()

    class Meta:
        verbose_name = 'Professor'
        verbose_name_plural = 'Professores'

    def __str__(self):
        return f'{self.professor}'


class Aula(models.Model):
    modulo = models.ForeignKey(Modulo, related_name=""Aulas"", on_delete=models.CASCADE)
    professor = models.ForeignKey(Professor, related_name=""Professor"", on_delete=models.CASCADE)
    aula = models.CharField(max_length=255)
    conteudo = models.CharField(max_length=255)

    class Meta:
        verbose_name = 'Aula'
        verbose_name_plural = 'Aulas'

    def __str__(self):
        return f'{self.aula}'

Em um breve resumo do código acima, a model de Professor está sendo incluída dentro da model da aulas, dessa fora você pode vincular um professor a determinada aula. Já as aulas estão sendo incluídas dentro de determinado modulo, dessa mesma forma você consegue incluir a aula dentro de um modulo.

Serializer

from rest_framework import serializers
from .models import Modulo, Aula, Professor


class Serializers_Professor(serializers.ModelSerializer):
    class Meta:
        model = Professor
        fields = (
            'id',
            'professor',
            'idade'
        )


class Serializers_Aula(serializers.ModelSerializer):
    class Meta:
        model = Aula
        fields = (
            'id',
            'modulo',
            'aula',
            'conteudo',
            'professor'
        )


class Serializers_Modulo(serializers.ModelSerializer):
    Aulas = Serializers_Aula(many=True, read_only=True)

    class Meta:
        model = Modulo
        fields = (
            'id',
            'modulo',
            'cod_modulo',
            'ligua',
            'Aulas'
        )

No serializer coloquei um nested Aulas dentro do Serializers_Modulo, dessa forma vamos conseguir visualizar quais são as aulas que estão vinculadas a determinado modulo.

View

from .models import Aula, Modulo, Professor
from .serializers import Serializers_Aula, Serializers_Modulo, Serializers_Professor

from rest_framework import viewsets
from rest_framework.decorators import action
from rest_framework.response import Response


class View_Modulo(viewsets.ModelViewSet):
    queryset = Modulo.objects.all()
    serializer_class = Serializers_Modulo

    @action(detail=True, methods=['get'], url_path='professor/(?P<professor_pk>[^/.]+)')
    def professor(self, request, professor_pk, pk=None,):
        obj_Aulas = Aula.objects.filter(professor_id=professor_pk)
        serializer = Serializers_Aula(obj_Aulas, many=True)

        return Response(serializer.data)


class View_Aula(viewsets.ModelViewSet):
    queryset = Aula.objects.all()
    serializer_class = Serializers_Aula


class View_Professor(viewsets.ModelViewSet):
    queryset = Professor.objects.all()
    serializer_class = Serializers_Professor

Agora para a resolução do problema: Dentro da View da model Modulo, inserimos uma action (rota) do tipo get, e vamos personalizar ela para fazer uma Query personalizada para seu projeto.
A primeira coisa que vamos fazer é deixar o detail=True, dessa forma vamos conseguir acessar apenas 1 modulo em especifico, e na  mesma action vamos colocar o código url_path='professor/(?P<professor_pk>[^/.]+)'. O que fizemos nessa pequena parte de código já é praticamente toda a Query que você deseja fazer. Em resumo: estamos dizendo que a rota vai ser lida assim: 'modulos/1/professor/2/'. Já consegue ver a restApi se formando?
Após isso, dentro da função professor vamos adicionar um parâmetro chamado 'professor_pk', e vamos adicionar uma variável chamada 'modulo', e dentro dela vamos armazenar o modulo que iremos buscar, imagine que fizemos a parte 'modulos/1'. Agora na variável obj será a parte principal de nossa Query, vamos instanciar o model Aulas e vamos fazer dois filtros: o primeiro filtro é para que seja listado apenas determinado modulo e vamos passar nossa primeira variável, dessa forma filter(modulo=modulo), o segundo filtro será para filtrar o professor de determinado modulo, e vamos passar nosso parâmetro 'professor_pk', dessa forma filter(professor_id=professor_pk). Depois de tudo isso, basta serializar o obj com o Serializers_Aula e retornar para o usuário o que ele deseja ver. Lembre-se colocar o many=True, para que seja listada mais de 1 aula.
Caso você tenha ficado com alguma dúvida ou queira saber mais sobre as funções dentro da View, basta acessar a documentação do próprio Django: https://www.django-rest-framework.org/api-guide/viewsets/#viewset-actions
","
            0
        ",,,"['\npython', 'django\n']"
548737,Docker airflow não reconhece dotenv,"
Eu gostaria de usar variáveis de ambientes no meu projeto python dentro do airflow, porém sem sucesso
Estou usando assim
...
from dotenv import load_dotenv
import os
load_dotenv()

YOUR_S3_BUCKET = os.getenv('YOUR_S3_BUCKET')
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
...

E na raiz do projeto criei o arquivo .env com essas informações
Mas dentro do airflow ele nao encontra
Só fica com a mensagem
ModuleNotFoundError: No module named 'dotenv'


Como posso fazer ele reconher o dotenv?
O que está instalado atualmente é python-dotenv
",,,,,"['\npython', 'dotenv\n']"
548733,"Python: estava fazendo uma lista que não repetisse valores, mas sempre que eu testo o programa, o valor vem duplicado, e não sei o que causa isso [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 5 horas atrás.




                        Melhore esta pergunta
                    



q = p = i = []
n = int(input('Qual o seu primeiro valor? [0 pra cancelar] '))
while n != 0:
    while n in q:
        n = int(input('Digite um valor [0 pra cancelar]'))
        while n in q:
            n = int(input('Digite um valor não repetido [0 pra cancelar]'))
    q.append(n)
    if n % 2 == 0:
        p.append(n)
    else:
        i.append(n)
print(f'A lista formada foi {q}')
print(f'A lista apenas com números pares formada foi {p}')
print(f'A lista apenas com números ímpares formada foi {i}')

",,,,,"['\npython', 'lista\n']"
548730,Como fazer código reiniciar após a execução (colocar trecho de código em loop)? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 11 horas atrás.




                        Melhore esta pergunta
                    




Comecei a estudar python rencentemente e tenho esse código, queria colocá-lo em loop pra que depois que o código desse a resposta a respeito da temperatura da carne, o programa reiniciasse e perguntasse novamente a temperatura da carne

temp_carne = int(input('Qual é a temperatura da carne? '))

if  temp_carne < 48 :
    print('Cozinhar por mais alguns minutos')

elif temp_carne in range(49, 53):
    print('Carne crua')    

elif temp_carne in range(54, 59):
    print('Carne levemente crua')

elif temp_carne  in range(60, 64):
    print('Carne mal passada')

elif temp_carne  in range(65, 70):
    print('Carne ao ponto')  

elif temp_carne >= 65 and temp_carne < 71:
    print('Carne ao ponto quase bem passada')    

elif temp_carne >= 71:
    print('Carne bem passada')
        

",,,,,"['\npython', 'loop', 'if', 'else\n']"
548724,"pessoal, preciso de ajuda para responder essa questão. – Leia o fragmento, interprete o código Python em questão e responda as questões abaixo [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 17 horas atrás.




                        Melhore esta pergunta
                    




def remove(self, valor):
if self.head.data == valor:
self.head = self.head.nextItem
else:
before = None
navegar = self.head
while navegar and navegar.data != valor:
before = navegar
navegar = navegar.nextItem
if navegar:
before.nextItem = navegar.nextItem
else:
before.nextItem = None

",,,,,['\npython\n']
548703,Extração de dados via python no Facebook [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 20 horas atrás.




                        Melhore esta pergunta
                    



Boa tarde, pessoal.
Sou iniciante na linguagem e estou tentando realizar algumas atividades para estudo, me deparei com esse desafio que não estou conseguindo andar e gostaria de saber se algum de vocês já fez algo parecido: extrair dados de campanhas digitais do Facebook via API utilizando Python. Se sim, poderiam dar um norte de como tocar isso?
Dei uma pesquisada em alguns outros lugares mas as informações são bem escassas.
Agradeço desde já.
",,,,,"['\npython', 'api', 'facebook\n']"
548696,Duvida Python ordernar lista [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 16 horas atrás.




                        Melhore esta pergunta
                    



Estou desenvolvendo um programa em Python pra baixar videos do youtube. Uma das funções dele é baixar videos que eu coloco em um arquivo .txt.
A duvida é a seguinte, quando eu baixo por exemplo, 3 videos, não necessariamente o video que eu coloquei em primeiro vai ser o primeiro. Eu gostaria de inumerar esses videos, por exemplo, o primeiro video q eu coloquei no arquivo txt eu queria que o nome dele ficasse #1 -Video, #2 - Video2. Porém não to conseguindo.
def organizar_pastas(nome_pasta, lista_de_videos):
    Path(f""{nome_pasta}"").mkdir()
    caminho = Path("""")
    arquivos = caminho.iterdir()
    print(arquivos)
    
    contador = 1
    for arquivo in arquivos:
        
        nome_arquivo = arquivo.name
        if nome_arquivo[-3:] == ""mp4"":
            for video in lista_de_videos:
                video = f""1 - "" + video + "".mp4""
                local_final = caminho / Path(f""{nome_pasta}/{video}"")
                shutil.move(arquivo, local_final)5
           
        elif nome_arquivo[-3:] == ""mp3"":
            local_final = caminho / Path(f""{nome_pasta}/{nome_arquivo}"")
            shutil.move(arquivo, local_final)
    
def unico_video():
    link = input(""Digite o link do video que deseja baixar: "")
    yt = YouTube(link)
    dw = yt.streams.get_highest_resolution()
    dw.download()
    print(Fore.RED + f""O video : {yt.title} foi baixado com sucesso."")

def baixar_por_lista():
    lista_videos = []
    with open(""lista.txt"", ""r"") as lista:
        for i in lista:
            yt = YouTube(i)
            try:
                dw = yt.streams.get_highest_resolution()
                print(Fore.RED + f""Baixando.."")
                dw.download()
                print(Fore.RED + f""O download do video : {yt.title} foi concluído."")
                lista_videos.append(yt.title)
            except:
                print(""Download error"")

    pasta = ""Lista de Videos""
    organizar_pastas(pasta, lista_videos)

def baixar_playlist_video():
    link = input(""Insira o link da playlist de video: "")
    yt = Playlist(link)
    for url in yt.video_urls:
        print(f""Titulo: {yt.title}"")
        ys = YouTube(url)
        v = ys.streams.get_highest_resolution()
        v.download()
        print(Fore.RED + ""Baixando.."")
    
    organizar_pastas(yt.title)

def playlist_mp3():
    link = input(""Insira o link da playlist: "")
    yt = Playlist(link)

    for url in yt.video_urls:

        ys = YouTube(url)
        print(Fore.RED + f""Baixando - {ys.title}"")
        v = ys.streams.get_audio_only()
        out_file = v.download()
        base, ext = os.path.splitext(out_file)
        new_file = base + "".mp3""
        os.rename(out_file, new_file)

    print(Fore.RED + ""A playlist foi baixada =)"")
    
    organizar_pastas(yt.title)

def iniciar():

    opcao = ''
    while opcao != '5':
        print(Fore.GREEN + ""### MENU ###"")
        
        opcao = input(f""Digite para o que deseja fazer:\n1 - Baixar video por link \n2 - Baixar uma lista de video \n3 - Baixar playlist de video \n4 - Baixar playlist mp3 \n5 - Sair \n"")

        if opcao == ""1"":
            unico_video()  
        elif opcao == '2':
            baixar_por_lista()   
        elif opcao == '3':
            baixar_playlist_video()
        elif opcao == '4':
            playlist_mp3()             
        elif opcao == '5':
            print(Fore.RED + ""Finalizando programa..."")
            exit()
            
        else:
            print(""Opção invalida!"")
    
iniciar()

",,,,,['\npython\n']
548690,O que é a função aiter(async_iterable)?,"
Alguém pode me dizer para que serve a função aiter(async_iterable) e me dar um exemplo em que utilizar ela?
",,,,,['\npython\n']
548679,Extrair dados da API de Marketing do Facebook com Python,"
estou tentando puxar os dados das minhas campanhas do Facebook, como: Nome da Campanha, Conjunto de Anúncios, CPC, CTR, Gastos...
Olhei a documentação da API de Marketing do Facebook de cima para baixo e não achei ela intuitiva, pois ainda está atualizada com o Python 2 (uso o 3).
Consegui estabelecer a conexão com a API com sucesso utilizando:
import json
import pandas as pd

from facebook_business.adobjects.adaccountactivity import AdAccountActivity
from facebook_business.adobjects.adaccount import AdAccount
from facebook_business.adobjects.campaign import Campaign
from facebook_business.adobjects.adset import AdSet
from facebook_business.adobjects.adsinsights import AdsInsights

my_app_id = '****'
my_app_secret = '****'
my_access_token = '***'


Porém, não sei como pegar os dados agora, tentei usar alguns códigos abertos do Github mas deu erro.
Conseguem me dar uma dica de como puxar por exemplo o nome da conta de anúncios ou os nomes das camapanhas?
Eu sabendo disso já consigo gerar uma tabela e exportar com o Pandas.
Tentei utilizar esse código também:
def date_validation(date_text):
    try:
        while date_text != datetime.datetime.strptime(date_text, '%Y-%m-%d').strftime('%Y-%m-%d'):
            date_text = input('Please Enter the date in YYYY-MM-DD format\t')
        else:
            return datetime.datetime.strptime(date_text,'%Y-%m-%d')
    except:
        raise Exception('get_fb_data_query : year does not match format yyyy-mm-dd')
 
def get_facebook_campaign_data(app_id,app_secret,access_token,account,org_id,s_date,e_date,qry_type,camapign_type_json):
 
    try:
        FacebookAdsApi.init(app_id, app_secret, access_token)
        account = AdAccount(""act_""+account)
        campaigns = account.get_campaigns(fields=['id','name','account_id'])
        print(""Total number of Campaigns :"",len(campaigns))
        
        #calling date validation funtion for start date format check
        startDate = date_validation(s_date)
        dt = startDate+timedelta(1)
        week_number = dt.isocalendar()[1]
        #calling date validation funtion for end date format check
        endDate = date_validation(e_date)
 
        #create a dataframe with needed column name
        campaign_data_df = pandas.DataFrame(columns=['account_name','account_id','campaign_name','campaign_id',
                            'impressions','conversions','spend',
                            'reach','clicks','date_start','date_stop','objective','campaignType'])
        
        #define field to be extracted from facebook campaign
        fields=['impressions','conversions','spend','reach','clicks','account_id','account_name','campaign_name','campaign_id','objective','cpc']
        
        #extract data/insights from each campaigns
        for campaign in campaigns:
            for camp_insight in campaign.get_insights(fields=fields,params={'time_range':{'since':s_date,'until':e_date}}):
                
                campaign_obj = camp_insight[""objective""]
                if campaign_obj in camapign_type_json[""off_site""]:
                    camp_insight.update({""campaignType"":""off_site""})
                elif campaign_obj in camapign_type_json[""on_site""]:
                    camp_insight.update({""campaignType"":""on_site""})
                else:
                    print("" ### campaign ObjectiveType doesent match CampaignType references ###"")
 
                #adding cam_insight data to dataframe by converting result to dictionary
                campaign_data_df = campaign_data_df.append(dict(camp_insight),ignore_index = True)
 
        campaign_data_df[""org_id""] = org_id
 
        campaign_data_df[""impressions""] = pandas.to_numeric(campaign_data_df[""impressions""])
        campaign_data_df[""conversions""] = pandas.to_numeric(campaign_data_df[""conversions""])
        campaign_data_df[""spend""] = pandas.to_numeric(campaign_data_df[""spend""])
        campaign_data_df[""clicks""] = pandas.to_numeric(campaign_data_df[""clicks""])
        campaign_data_df[""reach""] = pandas.to_numeric(campaign_data_df[""reach""])
        campaign_data_df[""cpc""] = pandas.to_numeric(campaign_data_df[""cpc""])
        campaign_data_df[""startDate""] = pandas.to_datetime(campaign_data_df[""date_start""])
        campaign_data_df[""endDate""] = pandas.to_datetime(campaign_data_df[""date_stop""])
        
        if qry_type in [""week"",""weekly""]:
            campaign_data_df[""week""] = week_number
        elif qry_type in [""month"",""monthly""]:
            campaign_data_df[""month""] = startDate.month
 
        return campaign_data_df
    except:
        print(""get_fb_data_query Failed"",sys.exc_info())

",,,,,"['\npython', 'python-3.x', 'api', 'facebook-graph-api\n']"
548672,O plt.title não reconhece a string e apresenta um erro,"
Esse erro começou a apresentar no meu Notebook todo, após algumas tentativas de Criar uma função para plotar gráficos.
Codigo:
plt.figure(figsize = (14,8))
sns.boxplot(x='Q006',y = 'NU_NOTA_TOTAL',
            data = dados_sem_nota_zero,
            hue = ""TP_SEXO"",
            order = renda_ordenada)
plt.title('Notas por Renda / Sexo')```

Erro:
TypeError                                 Traceback (most recent call last)
<ipython-input-245-9defcbffda6f> in <module>()
      4             hue = ""TP_SEXO"",
      5             order = renda_ordenada)
----> 6 plt.title('Notas por Renda / Sexo')

TypeError: 'str' object is not callable



Função de criar graficos que desencadeou o erro:
def cria_grafico (x,y,titulo):
  plt.figure(figsize = (10,8))
  sns.boxplot(x=x,y = y, data=dados,order=renda_ordenada)
  plt.title(""titulo"")
  plt.show

","
Sua função rodou normal aqui, eu apenas retirei o parâmetro order, pois testei num dataframe qualquer aqui.
Como disse que ficou a fazer várias tentativas até concluir a função, pode ser que tenha deixado solta alguma variável com o mesmo nome da função e, nisso, o programa não consegue chamar a função (palpite). Pode tentar reiniciar o kernel e rodar seu Notebook célula por célula até a chamada da função e ver se dá certo.
","
            0
        ",,,"['\npython', 'matplotlib\n']"
548666,Python: Como importar um modulo que ja está importando outro?,"
Bem tenho a seguinte pasta:
src/
|- __init__.py
|- main.py
|_
  jogo/
  |-- __init__.py
  |-- play.py
  |_
    personagens/
    |--- __init__.py
    |--- heroi.py

heroi.py
def personagem_heroi():
  print(""heroi"")

play.py
import personagens.heroi

def iniciar_jogo():
  personagens.heroi.personagem_heroi()
  print(""play"")

Agora como faço para chamar o play atraves do main.py?
main.py
import jogo.play

jogo.pay.iniciar_jogo()

#ao importar aparece um erro de 

import personagens.heroi
ModuleNotFoundError: No module named 'personagens'
[Program finished]
",,,,,"['\npython', 'packages', 'import', 'module\n']"
548648,Python - Webscraping - Selecionar item no dropdown,"

Sou iniciante no Python e estou tendo algumas dificuldades com o
webscraping no python.
Estou tentando selecionar um item no dropdown e não estou conseguindo,
ele para na parte do dropdown e não seleciona o item que eu quero que
no caso é o ""CBIO - Crédito de descarbonização"" que fica dentro do
primeiro dropdown. Podem me ajudar?? Muito obrigado.

##o código que não está funcionando##
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager
from pandas import ExcelWriter
import time
from selenium.webdriver.support.select import Select
import select
from selenium.webdriver.support.ui import Select
from bs4 import BeautifulSoup



driver = webdriver.Chrome(ChromeDriverManager().install())

driver = webdriver.Chrome()

driver.get('http://estatisticas.cetip.com.br/astec/series_v05/paginas/lum_web_v05_series_introducao.asp?str_Modulo=Ativo&int_Idioma=1&int_Titulo=6&int_NivelBD=2/')
driver.find_element_by_xpath('//*[@id=""divContainerIframeBmf""]/div/dl/dd[2]/a').click()
find_dp1 = \
driver.find_element(By.NAME,""ativo"")
select_find_dp1 = Select(find_dp1)
select_find_dp1.select_by_visible_text(""CBIO - Crédito de descarbonização"")

time.sleep(3)

","
Importando
import time 
from selenium import webdriver
from selenium.webdriver import Chrome
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select, WebDriverWait
from selenium.webdriver.support.select import Select
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options

from webdriver_manager.chrome import ChromeDriverManager

options = Options()
options.use_chromium = True
options.add_argument(""--window-size=1920,1080"")
options.add_argument(""disable-gpu"")

Url base, baixando o driver do selenium e acessando a página
url = 'http://estatisticas.cetip.com.br/astec/series_v05/paginas/lum_web_v05_series_introducao.asp?str_Modulo=Ativo&int_Idioma=1&int_Titulo=6&int_NivelBD=2/'

driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
driver.get(url)

Aguardando o elemento estar disponível para o clique
WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '/html/body/div/div[1]/div/div/div/dl/dd[2]/a'))).click()

O elemento que você deseja está dentro de um iframe por isso devemos utilizar o switch_to do selenium
driver.switch_to.frame(driver.find_element(By.ID, 'dados_corpo'))
driver.switch_to.frame(driver.find_element(By.TAG_NAME, 'frameset').find_elements(By.TAG_NAME, 'frame')[0])

Transformamos o dropdown em um select e assim podemos utilizar o método  select_by_visible_text, que seleciona o valor com o texto que passamos como parametro
time.sleep(1)
ativos = Select(driver.find_element(By.NAME, 'ativo'))
ativos.select_by_visible_text('CBIO - Crédito de descarbonização')

Voltamos ao contexto padrão para acessar um iframe diferente e repetimos a operação anterior mas dessa vez com outro dropdown
driver.switch_to.default_content()
driver.switch_to.frame(driver.find_element(By.ID, 'dados_corpo'))
driver.switch_to.frame(driver.find_element(By.TAG_NAME, 'frameset').find_elements(By.TAG_NAME, 'frame')[1])

time.sleep(1)
informacoes = Select(driver.find_element(By.NAME, 'selectopcoes'))
informacoes.select_by_visible_text('Estoque')

Preenchemos os parâmetros da pesquisa
driver.switch_to.default_content()
driver.switch_to.frame(driver.find_element(By.ID, 'dados_corpo'))
driver.switch_to.frame(driver.find_element(By.TAG_NAME, 'frameset').find_elements(By.TAG_NAME, 'frame')[2])

time.sleep(1)
# Data Inicial 
driver.find_element(By.NAME, 'DT_DIA_DE').send_keys('10')
driver.find_element(By.NAME, 'DT_MES_DE').send_keys('10')
driver.find_element(By.NAME, 'DT_ANO_DE').send_keys('2021')

# Data Final
driver.find_element(By.NAME, 'DT_DIA_ATE').send_keys('01')
driver.find_element(By.NAME, 'DT_MES_ATE').send_keys('02')
driver.find_element(By.NAME, 'DT_ANO_ATE').send_keys('2022')

Finalmente enviamos o formulario
driver.find_elements(By.CLASS_NAME, 'button')[1].click()

","
            0
        ",,,"['\npython', 'selenium-webdriver', 'web-scraping', 'webdriver\n']"
548636,como resolvo esse problema?//how to solve this problem? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada ontem.




                        Melhore esta pergunta
                    



Traceback (most recent call last):
File ""C:\Users\TORRES\Desktop\PAINEL\CADASTRO.py"", line 15, in 
eventos, valores = janela.read()
File ""C:\Users\TORRES\AppData\Local\Programs\Python\Python310\lib\site-packages\PySimpleGUI\PySimpleGUI.py"", line 9605, in read
results = self._read(timeout=timeout, timeout_key=timeout_key)
File ""C:\Users\TORRES\AppData\Local\Programs\Python\Python310\lib\site-packages\PySimpleGUI\PySimpleGUI.py"", line 9671, in _read
self._Show()
File ""C:\Users\TORRES\AppData\Local\Programs\Python\Python310\lib\site-packages\PySimpleGUI\PySimpleGUI.py"", line 9396, in _Show
self.NumCols = max(len(row) for row in self.Rows)
ValueError: max() arg is an empty sequence
",,,,,['\npython\n']
548630,Dúvidas função em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada ontem.




                        Melhore esta pergunta
                    



Crie uma classe representando os alunos de um determinado curso. A classe deve
conter os atributos matr´ıcula do aluno, nome, nota da primeira prova, nota da segunda
prova e nota da terceira prova. Crie metodos para acessar o nome e a m ´ edia do aluno. ´
(a) Permita ao usuario entrar com os dados de 5 alunos. ´
(b) Encontre o aluno com maior media geral. ´
(c) Encontre o aluno com menor media geral ´
ficou um pouco grande poderia me ajudar..
",,,,,"['\npython', 'funções', 'classes\n']"
548629,Como transformar arquivo python em executável [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada ontem.




                        Melhore esta pergunta
                    



Olá,
para começar, eu separei em dois arquivos dentro do pycharm o meu código, o primeiro serve oara criar um banco de dados pelo sqlite3, e pus separado pois se toda vez que eu executar ele, ele vai dar erro pelo banco de dados já existir. Esse arquivo teria que rodar uma vez só, o outro arquivo faz uma busca de CEPs e esse tem que rodar enquanto uma condição se manter verdadeira, mas a condição é retirada de uma planilha excel, como faço para transformar em um executável? Eu testei com o pyinstaller mas não deu sucesso. Tem como tudo ser um arquivo ou preciso fazer separado?
",,,,,"['\npython', 'pycharm', 'pyinstaller\n']"
548611,(Python) como quebrar imagem em pedaços iguais e classificar com machine Learning,"
Boa tarde pessoal.
Sou iniciante em machine learning, e estou com um desafio na faculdade, onde eu tenho fotos de imagens de satelite como essa:

As regiões mais escuras, são vegetações em ""subdesenvolvimento"", ou seja, a vegetação está com baixa qualidade.
Gostaria de saber qual técnica vocês indicam utilizar, para que eu quebre essa imagem em pedaços iguais, para classificar cada pedaço como ""saudável"" ou ""subdesenvolvimento"".
Existe algum algoritmo que ja faça isso automaticamente ou teria que quebrar na mão com o cv2?
Obrigado
",,,,,"['\npython', 'processamento-de-imagens', 'machine-learning', 'deep-learning\n']"
548607,Apenas última interação do FOR está ocorrendo [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada ontem.




                        Melhore esta pergunta
                    



Somente a última interação do FOR está ocorrendo; como fazer com que todas as interações sejam realizadas?

Para isso estou utilizando o seguinte código:
############################################

from pydub import AudioSegment

import csv

with open('testar.csv', encoding='utf-8') as arquivo_referencia:

  tabela = csv.reader(arquivo_referencia, delimiter=';')

  for l in tabela:

    parte1 = l[0]
    parte2 = l[1]
    nome_final = l[2]

  left_channel = AudioSegment.from_file(l[0])

  right_channel = AudioSegment.from_file(l[1])

  stereo_sound = left_channel.overlay(right_channel)

  stereo_sound.export(str(nome_final), format='wav')

##########################################################

",,,,,"['\npython', 'for\n']"
548590,Analise RFM em Pyton [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 2 dias atrás.




                        Melhore esta pergunta
                    



Alguém consegue me ajudar com esse código ?
Criando os níveis de R, F e M - 5 níveis
niveis_r =range(5,0,-1)
niveis_f=range(1,6)
niveis_m=range(1,6)
Dividindo a lista de clientes em 5 quintis (dividindo nos quartis)
r_quintis = pd.qcut(rfm['Recência'], q=5, labels = niveis_r)
f_quintis = pd.qcut(rfm['Frequência'],q= 5, labels = niveis_f)
m_quintis = pd.qcut(rfm['ValorMonetario'],q=5,labels = niveis_m)
rfm = rfm.assign(R=r_quintis,F=f_quintis,M=m_quintis)
Criando tabelatribuindo níveis RFM e avaliação a RFM (soma dos níveis)
def add_rfm(x) : return str(x['R']) + str(x['F']) + str(x['M'])
rfm['RFM_cluster'] = rfm.apply(add_rfm,axis=1 )
rfm['RFM_score'] = rfm[['R','F','M']].sum(axis=1)
rfm[' FM_media'] = rfm[['F','M']].mean(axis=1).round()
rfm = rfm.reset_index()
display(rfm)
Ele da o seguinte erro:

ValueError                                Traceback (most recent call last)
C:\Users\WESLEY~1.RIB\AppData\Local\Temp/ipykernel_42644/3425295773.py in 
5 # Dividindo a lista de clientes em 5 quintis (dividindo nos quartis)
6 r_quintis = pd.qcut(rfm['Recência'], q=5, labels = niveis_r)
----> 7 f_quintis = pd.qcut(rfm['Frequência'],q= 5, labels = niveis_f)
8 m_quintis = pd.qcut(rfm['ValorMonetario'],q=5,labels = niveis_m)
9 rfm = rfm.assign(R=r_quintis,F=f_quintis,M=m_quintis)
~\Anaconda3\lib\site-packages\pandas\core\reshape\tile.py in qcut(x, q, labels, retbins, precision, duplicates)
370         quantiles = q
371     bins = algos.quantile(x, quantiles)
--> 372     fac, bins = _bins_to_cuts(
373         x,
374         bins,
~\Anaconda3\lib\site-packages\pandas\core\reshape\tile.py in _bins_to_cuts(x, bins, right, labels, precision, include_lowest, dtype, duplicates, ordered)
411     if len(unique_bins) < len(bins) and len(bins) != 2:
412         if duplicates == ""raise"":
--> 413             raise ValueError(
414                 f""Bin edges must be unique: {repr(bins)}.\n""
415                 f""You can drop duplicate edges by setting the 'duplicates' kwarg""
ValueError: Bin edges must be unique: array([ 1.,  1.,  3.,  6., 14., 53.]).
You can drop duplicate edges by setting the 'duplicates' kwarg
",,,,,"['\npython', 'estrutura-de-dados', 'princípios-de-programação\n']"
548581,Fazendo JOIN no Pandas com intervalos de tempo,"
Olá, estou tentando solucionar um problema de faculdade.
Eu tenho os seguintes dataframes:
df_equip




Equipamento
Data
Operador




X
2022-01-03 12:09:00
NaN


X
2022-01-03 12:19:00
NaN


X
2022-01-03 12:29:00
NaN


X
2022-01-03 13:19:00
NaN


Y
2022-01-03 12:13:00
NaN


Y
2022-01-03 12:34:00
NaN


X
2022-01-03 13:49:00
NaN


X
2022-01-03 14:49:00
NaN


X
2022-01-03 15:29:00
NaN


X
2022-01-03 18:49:00
NaN




df_login




Operador
Status
Data
Equipamento




A01
Login
2022-01-03 12:10:00
X


A02
Login
2022-01-03 12:11:00
Y


A02
Logout
2022-01-03 12:14:32
Y


A01
Logout
2022-01-03 13:15:00
X


A03
Login
2022-01-03 14:10:00
X


A03
Logout
2022-01-03 16:10:00
X




Eu preciso inserir na df_equip['Operador'] o código relacionado ao operador contido em df_login['Operador'] levando em consideração o tempo em que ele está com o login ativo. Sendo que a coluna DATA dos dois dataframes contém valores distintos.
Gostaria de saber se há algum jeito de usar esse intervalo de tempo entre login e logout para fazer o JOIN entre as duas tabelas e inserir o valor que eu preciso.
PS: O equipamento pode estar ligado sem nenhum operador logado
","
Infelizmente ainda não existe uma forma nativa no pandas para unir 2 DataFrames por um intervalo de datas.
Para o seu problema eu resolveria isso com os seguintes passos:

Transformar as colunas Data para o tipo datetime com to_datetime
Remover a coluna Operador do df_equip com o drop
Transformar o Status em colunas com a fução pivot
Unir os DFs com .merge pela coluna Equipamento
Criar coluna dummy para saber quem estava loggado no momento com .between
Mudar para NaN o Operador quando ele não estava logado com mask
E remover os itens duplicados com .drop_duplicates, .sort_values e .drop 

Segue o código:
df_equip['Data'] = pd.to_datetime(df_equip['Data'])
df_login['Data'] = pd.to_datetime(df_login['Data'])

df_equip.drop(columns=['Operador'], inplace=True)

df_login = df_login.pivot(index=['Operador', 'Equipamento'], columns='Status', values='Data').reset_index()

new_df = df_equip.merge(df_login, on = 'Equipamento', how = 'left')

new_df['is_logged'] = new_df['Data'].between(new_df['Login'], new_df['Logout'])

new_df = (
     new_df.sort_values('Operador')
    .drop_duplicates(['Equipamento', 'Data'])
    .drop(columns=['Login', 'Logout', 'is_logged'])
    .sort_values('Data')
)

new_df.head(10)
#saida:
    Equipamento Data                Operador
0   X           2022-01-03 12:09:00 NaN
8   Y           2022-01-03 12:13:00 A02
2   X           2022-01-03 12:19:00 A01
4   X           2022-01-03 12:29:00 A01
9   Y           2022-01-03 12:34:00 NaN
6   X           2022-01-03 13:19:00 NaN
10  X           2022-01-03 13:49:00 NaN
13  X           2022-01-03 14:49:00 A03
15  X           2022-01-03 15:29:00 A03
16  X           2022-01-03 18:49:00 NaN

","
            0
        ",,,"['\npython', 'pandas', 'join', 'dataframe', 'numpy\n']"
548561,Como resolvo este problema de NLP com spacy?,"
modelo = spacy.blank('en')
categorias = modelo.create_pipe(""textcat"")
categorias.add_label('POSITIVE')
categorias.add_label('NEGATIVE')
modelo.add_pipe(categorias)
historico = []

O problema:
ValueError: [E966] nlp.add_pipe now takes the string name of the registered component factory, not a callable component. Expected string, but got <spacy.pipeline.textcat.TextCategorizer object at 0x7f727b969130> (name: 'None').

If you created your component with nlp.create_pipe('name'): remove nlp.create_pipe and call nlp.add_pipe('name') instead.

If you passed in a component like TextCategorizer(): call nlp.add_pipe with the string name instead, e.g. nlp.add_pipe('textcat').

If you're using a custom component: Add the decorator @Language.component (for function components) or @Language.factory (for class components / factories) to your custom component and assign it a name, e.g. @Language.component('your_name'). You can then run nlp.add_pipe('your_name') to add it to the pipeline.


",,,,,['\npython\n']
548548,Function for loop stops after 2 loops using Python and selenium,"
Eu quero extrair elementos dentro de uma lista de vários elementos que busco pelo selenium em uma página da web. Funciona bem no primeiro Loop, mas depois trava. Aqui está o código:
n = 1
trList= driver.find_elements_by_css_selector('#table > tbody')
time.sleep(3)    

for tr in trList:
    tdcontact = driver.find_element_by_css_selector('#table > tbody > tr:nth-child(' + str(n) + ') > td:nth-child(6) > input[type=text]')    
    valor=tdcontact.get_property(""value"")
    print (""tdcontact Result = "" + tdcontact.text)
    print (""-----------------""+str(n)+""------------------"")
    n += 1

Como não há erros, não sei o que está acontecendo. Agradeço a ajuda!
",,,,,"['\npython', 'loop', 'selenium', 'elementos\n']"
548542,Flask mail - Fim da permissão de aplicativos menos seguros google [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 2 dias atrás.




                        Melhore esta pergunta
                    



Eu uso flask mail para enviar emails de reset de senha do meu aplicativo, mas eles anunciaram o fim da conectividade com aplicativos menos seguros a partir de 20 Maio. Alguém sabe como contornar esse problema continuando com flask?
",,,,,"['\npython', 'flask\n']"
548534,pip install zip erro ao instalar,"
Estou fazendo um bot e preciso transformar meu arquivo em .zip, mas ao instalar o zip ele está dando erro. Segue o código:
error: subprocess-exited-with-error

  × python setup.py egg_info did not run successfully.
  │ exit code: 1
  ╰─> [9 lines of output]
      Traceback (most recent call last):
        File ""<string>"", line 2, in <module>
        File ""<pip-setuptools-caller>"", line 34, in <module>
        File ""C:\Users\gusta\AppData\Local\Temp\pip-install-s_vau_x_\wsgiref_80a8b6b0e6a5455dbd170f08d5dc0233\setup.py"", line 5, in <module>
          import ez_setup
        File ""C:\Users\gusta\AppData\Local\Temp\pip-install-s_vau_x_\wsgiref_80a8b6b0e6a5455dbd170f08d5dc0233\ez_setup\__init__.py"", line 170
          print ""Setuptools version"",version,""or greater has been installed.""
                ^
      SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""Setuptools version"",version,""or greater has been installed."")?
      [end of output]

  note: This error originates from a subprocess, and is likely not a problem with pip.
error: metadata-generation-failed

× Encountered error while generating package metadata.
╰─> See above for output.

note: This is an issue with the package mentioned above, not pip.
hint: See above for details.

",,,,,"['\npython', 'pip\n']"
548530,Dar process finished depois depois do input,"
Eu estou tentando fazer um sistema de cadastro, porém, o cadastro só deve ocorrer caso o usuário seja maior de idade, caso contrário, eu quero que diga que o indivíduo é menor, e finalizar o processo, não quero que apareça mais nada.
Eu já tentei colocar lá no final do código, para não aparecer os outros inputs depois de dizer que é menor de idade e não é possível se cadastrar. Mas não funciona!
if ano <=2004:
    print(""Você foi aprovado(a)!"")
else:
    print('Você é menor de idade')
time.sleep(2)
print()
print(""Agora você pode concluir seu cadastro"")
time.sleep(1)
print()
email = input(""Digite seu e-mail: "")
sen = input(""Digite sua senha: "")

Alguém poderia me ajudar? Eu comecei recentemente a programar.
",,,,,"['\npython', 'input\n']"
548520,Criar script em C [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Como eu faço para criar um executável em C para rodar um script Python?
Tenho um programa para desktop escrito em Python, porém gerar executáveis Python é complicado, porque na maioria das vezes geram erros, além de ser um executável extremamente pesado.
A alternativa que pensei foi instalar o Python na máquina que vai rodar o programa e usar um programa em C somente para chamar o script Python.
Sei que poderia somente deixar o script ali para para o usuário das 2 cliques, porém existe o perigo de alguém abrir o código e alterar algum comando.
Obs.: Meu script Python usa uma interface Qt. Trata-se um programa de controle de entradas, saídas e estoque de grãos.
",,,,,"['\npython', 'c\n']"
548519,Intersecção entre Listas (Arrays) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 22 horas atrás.




                        Melhore esta pergunta
                    



Eu estou desenvolvendo um código para fazer o cálculo do MDC (máximo divisor comum) entre 2 números.
Eu consegui decompor os números em fatores primos, gerando assim uma lista (array) para cada de números primos.
A solução final seria extrair um novo array com a intersecção entre os 2 arrays da decomposição dos números e calcular o produto entre seus itens. No entanto, não estou conseguindo fazer isso.
Tentei fazer pelas técnicas de conjuntos (set), mas não deu certo:
   conj1 = set(list1)
   conj2 = set(list2)
   conj_inter = conj1.intersection(conj2)

Segue o repositório no GitHub: https://github.com/rigueti-bruno/Projetos_Python/tree/main/calcular-mmc-mdc
Alguém teria alguma dica de como eu poderia resolver isso?
","
O que exatamente não deu certo? Seja mais específico. Esse trecho está funcionando devidamente, ele devolve a intersecção de dois conjuntos. Aliás, se não quiser usar o método intersection, há o operador & que também devolve a intersecção de conjuntos.
De qualquer modo, não gosto desse jeito. Converter para conjuntos pode comprometer a ordem dos elementos (conjuntos são estruturas não ordenadas); se a ordem for importante no seu caso, já é inviável usar essa abordagem.
Um laço encadeado já resolveria seu problema:
lista1 = [1,2,3,4]
lista2 = [3,4,5,6]
intersec = []

for item in lista1:
    if item in lista2 and item not in intersec:
        intersec.append(item)

Claro que é mais sofisticado se usarmos uma list comprehension:
intersec = [x for x in set(lista1) if x in lista2]

Aqui foi necessário converter para conjunto para garantir que não houvesse duplicatas. Se você puder garantir previamente que não há duplicatas em pelo menos uma das listas, pode iterar sobre ela sem fazer a conversão, o que preserva a ordem dos elementos. Se tiver como saber de antemão qual a menor lista, também poderá preferir lançar sobre ela a iteração (menos tempo de execução).
","
            1
        ",,,"['\npython', 'array', 'matemática', 'set\n']"
548512,Como copiar um arquivo em python com sendkeys,"
Estou criando um programa que envia imagens automaticamente, e quero que meu programa copie a imagem para mim colar com Sendkeys, tentei usar o Ctrl C do Pyautogui mas não sei como me referenciar ao arquivo
  def file_up():

   tipos = [('Jpg Files','*.jpg')]
   local_imagem = filedialog.askopenfilename(filetypes=tipos)    << aqui é um selecionador de imagens

quero copiar a imagem selecionada do meu computador para mim colar em outro lugar.
",,,,,['\npython\n']
548498,Parent class com uma lista de child class [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Estou aprendendo POO em Python e me surgiram algumas dúvidas. Gostaria de saber como uma classe poderia ter um atributo, onde este será uma lista de instâncias de uma classe filho.
Para exemplificar melhor:
class Veiculo(Roda):

    def __init__(self, marca: str):
        self.__marca = marca
        self.__id: str = str(randint(0,4))
        self.__distanciaPercorrida: float = uniform(0, 100)
        self.__ipva: bool = bool(choice([True, False]))

        self.__quantidadeRodas: int = randint(2, 4)
        #self.__rodas = super().__init__()

class Roda:
    def __init__(self):
        self.__calibragemPneu: bool = bool(choice([True, False]))

    def setCalibragem(self, novaCalibragem: bool):
        self.__calibragemPneu = novaCalibragem

    def getCalibragem(self):
        return self.__calibragemPneu

Gostaria de saber alguma forma de a variável rodas, da classe veículo, receber entre 2 a 4 instâncias da classe roda
Gratidão se alguém conseguir me ajudar
",,,,,"['\npython', 'python-3.x', 'orientação-a-objetos\n']"
548497,TypeError: EnviaMenssagem() missing 1 required positional argument: 'self' [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



I'm trying to create a program that sends messages through WhattsApp, but it's giving this error and I don't understand why
TypeError: EnviaMenssagem() missing 1 required positional argument: 'self'

    from selenium import webdriver
    import time
    
    class WhattsBot:
        def __init__(self) -> None:
            self.menssagem = ""Ola Crypto investimentos (Mensagem enviada por bot)""
            self.grupos = [""Crypto Investimentos""]
            opições = webdriver.ChromeOptions
            opições.add_argument('lang=pt-br')
            self.driver = webdriver.Chrome(executable_path=r'./chromedriver.exe')
    
        def EnviaMenssagem(self):
            #span title=""Crypto Investimentos""
            #class=""p3_M1""
            #<button class=""_4sWnG""><span data-testid=""send"" data-icon=""send"" class=""""><svg viewBox=""0 0 24 24"" width=""24"" height=""24"" class=""""><path fill=""currentColor"" d=""M1.101 21.757 23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z""></path></svg></span></button>
    
            self.driver.get('https://web.whatsapp.com/')
            time.sleep(20)
            for grupo in self.grupos:
                grupo = self.driver.find_element_by_xpath(f'//span[@title=""{grupo}""]')
                time.sleep(3)
                grupo.click()
                Chatbuto = self.driver.find_element_by_class_name('p3_M1')
                time.sleep(3)
                Chatbuto.click()
                Chatbuto.send_keys(self.menssagem)
                Botão_env = self.driver.find_element_by_xpath('//span[@data-icon=""send""]')
                time.sleep(3)
                Botão_env.click()
                time.sleep(5)
    
    Bot = WhattsBot
    Bot.EnviaMenssagem()

``

",,,,,"['\npython', 'selenium-webdriver\n']"
548496,PYTHON E SELENIUM [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Olá!
Preciso enviar somente o número pego da noticia para a caixa de pesquisa do google, porém não estou conseguindo enviar, poderiam me ajudar? Obrigado.
from selenium import webdriver

browser = webdriver.Chrome()
browser.get('https://www.radiotaquara.com.br/novo/desassoreamento-do-rio-paranhana-devera-se-estender-por-30-dias/')
CODF = browser.find_element_by_xpath('/html/body/div[2]/div[3]/section[1]/main/article/header/h1').get_attribute('innerHTML')
CODF1 = [int(temp)for temp in CODF.split() if temp.isdigit()]


print(CODF1)
browser.get('https://www.google.com.br/')
WebDriverWait(browser, 20).until(EC.element_to_be_clickable((By.XPATH,'/html/body/div[1]/div[3]/form/div[1]/div[1]/div[1]/div/div[2]/input'))).send_keys(CODF1)

O erro que aparece:
TypeError: sequence item 0: expected str instance, int found
",,,,,"['\npython', 'selenium', 'selenium-webdriver\n']"
548487,Raiz Quadrada com dizima periódica,"
Quando tentamos executar o código acima, em raiz de 2, ele trava e não executa, pois possui uma dizima periódica, levando em consideração que podemos receber um número aproximado como resposta da raiz de 2, faça esses exemplo funcionar. apresentando a resposta em código se possível, ou de forma explicativa.
meu código
def raiz2(num, menor, maior):
    media = (menor + maior) / 2
    rm = media * media
    if rm == num:
        return media
    elif rm > num:
        return raiz2(num, menor, media)
    else:
        return raiz2(num, media, maior)


def raiz(num, menor, maior):
    r1 = menor * menor
    r2 = maior * maior
    if r1 == num:
        return menor
    elif r2 == num:
        return maior
    elif num > r1 and num < r2:
        return raiz2(num, menor, maior)
        
    else:
        return raiz(num, menor + 1, maior + 1)


def RQ(N):
    return raiz(N, 0, 1)


N = float(input(""Digite o valor: ""))
print(RQ(N))

print(""FIM"")

","
O problema que está ocorrendo no programa não é ""dízima periódica"" e sim,
um problema de representação de números do tipo ponto flutuante (float)
na memória do computador e como eles são comparados.
Mais especificamente, quando você compara 2 números float (após o cálculo
da média e do quadrado):
if rm == num:

O resultado desta comparação para encontrar a raiz quadrada de 2 sempre será
falsa, pois esse resultado é um número irracional (e não uma dízima).
Se você imprimir esses valores, verá que eles estão próximos:
rm=1.9999999999999996
num=2.0  

Mas não são e não serão iguais, portanto, a recursão não termina e o programa ""trava"".
Você encontrará ótimas explicações sobre o porquê isto acontece nas respostas
das perguntas abaixo:
Qual a forma correta de usar os tipos float, double e decimal?
O que é ""zero positivo"" e ""zero negativo"" em tipos float e double?
ou em inglês:
What Every Computer Scientist Should Know About Floating-Point Arithmetic
Como você está utilizando um algoritmo parecido com o Método da bisseção
para encontrar a raiz, uma possibilidade para solucionar o problema é você
definir um erro absoluto (ou tolerância TOL), e quando a diferença
absoluta entre rm e num for menor que esse erro, você retorna o valor
media:
ϵ = 0.0001

se ǀrm - numǀ < ϵ; raiz2 = media

Porém:

o resultado precisa ser arredondado de acordo com o valor da tolerância,
para que não ocorra o mesmo problema (de ponto flutuante);

a tolerância precisa ser um pouco maior do que a precisão que você pretende
imprimir o resultado, para evitar erros de arredondamento


Uma forma de implementar esta alteração no seu programa sem utilizar nenhuma
biblioteca é:
# Número de casas decimais de precisão
DECIMAIS = 6
# Aumento na precisão
PRECISAO = 2
# Define a tolerância. Neste exemplo: 1e-8
TOL = 10**-(DECIMAIS+PRECISAO)

def raiz2(....):
    ...    
    if abs(rm - num) < TOL:
        return media
    

e ao final do algoritmo, para imprimir o resultado correto:
N = float(input(""Digite o valor: ""))
resultado = RQ(N)
print(f""{resultado:.{DECIMAIS+PRECISAO}f}""[:-PRECISAO])
print(""FIM"")


No Python, a biblioteca math já tem uma função que ajusta a comparação de
números ponto flutuantes e a implementação fica muito mais simples:
import math

def raiz2(....):
    ...    
    if math.isclose(rm, num):
        return media

A função isclose() verifica se os 2 números estão ""próximos"" (conforme a teoria
dos números ponto flutuante) e retorna verdadeiro, caso estejam.
Também, é possível definir a tolerância nesta função (consulte a documentação da
função).
Porém, o ajuste para imprimir o resultado sem erros de arredondamento, também é
necessário.
Caso você precise de uma precisão maior no resultado, você pode utilizar a
biblioteca decimal.

Importante
Independente da implementação que você for utilizar, a representação dos
números ponto flutuante na memória tem um limite e, caso você ultrapasse
este limite, o problema de recursão irá ocorrer.
","
            2
        ",,,"['\npython', 'python-3.x', 'python-2.7\n']"
548476,me ajudem por favor [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Uma lavanderia oferece ao cliente duas opções de cobrança: R$ 7,00 por peça de roupa ou R$5,00 por quilo. Caso a lavagem seja a seco, é acrescentada uma taxa de R$ 3,50. Escreva um programa que receba como entrada os dados dos últimos 5 pedidos de lavagem e exiba o valor a ser pago por cada um dos pedidos, o total arrecadado pela lavanderia e a quantidade de lavagens a seco solicitadas. Para cada pedido de lavagem, o usuário deve informar o tipo da lavagem (peça ou peso), a quantidade de peças ou de quilos (a depender do tipo de lavagem informado), e, se a lavagem deve ser a seco (sim ou não). *
",,,,,['\npython\n']
548467,Como selecionar arquivo e enviar para a impressora no python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Oi, gente! Tudo bem?
Estou criando um programa em python para imprimir um arquivo em excel. Estou usando a interface do Tkinter e gostaria que o usuário pudesse selecionar a impressora na qual deseja realizar a impressão e o arquivo que deverá ser impresso. Como eu poderia fazer isso?
",,,,,"['\npython', 'excel', 'tkinter', 'impressão', 'automatização\n']"
548464,What is the difference between SARIMAX forecast and predict from Statsmodels? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



I am using the Statsmodels SARIMAX library to predict and forecast a time series and I'm getting different results from both methods. I would like to know what is the differenc between both.
",,,,,"['\npython', 'time', 'machine-learning', 'forecast\n']"
548458,Gostaria de fechar uma aba no playwright sem fechar o navegador [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 3 dias atrás.




                        Melhore esta pergunta
                    



Tentei com ambos tab.close() e pagina.on(""close""), mas não obtive resultado.
Meu código:
from playwright.sync_api import sync_playwright

with sync_playwright() as p:
    navegador = p.chromium.launch(headless=False)
    pagina = navegador.new_page()

    #ACESSANDO O SITE DO PASS (AUTENTICADOR)
    pagina.goto(""https://sistemas.saude.rj.gov.br/Login.aspx?urlRedirect=http%3a%2f%2f10.42.7.213%3a81%2fdefault.aspx"")
    pagina.click('.btn.btn-primary.modal-btn')
    pagina.wait_for_timeout(2000)

    #FAZENDO LOGIN 
    pagina.fill(""#MainContent_txtLogin"",""login"")
    pagina.fill(""#MainContent_txtSenha"",""senha"")
    pagina.click(""#MainContent_btnEntrar"")
    pagina.wait_for_timeout(2000)

    #ACESSANDO A SPMSO
    pagina.click(""a.acesso-sistemas"")
    pagina.wait_for_timeout(2000)
    tab.close()

    #ABRIR MENU
    pagina.goto(""http://sistemas.saude.rj.gov.br/periciamedicamanutencao/Relatorios/ConsultaLicencaPorDia.aspx"")
    pagina.wait_for_timeout(2000)
    print(pagina.title())

",,,,,['\npython\n']
548440,Python - Número do telefone - pyTelegramBotAPI4.4.0,"
Olá
Estou usando o pyTelegramBotAPI
4.4.0 para criar um robo e gostaria de saber se alguém sabe me dizer uma maneira de conseguir pegar o número do telefone da pessoa que mandou a mensagem.
",,,,,"['\npython', 'chatbot', 'telegram-bot\n']"
548428,Agrupar ou dividir o dataframe a cada valor específico na linha,"
Tenho um dataframe de uma coluna e várias linhas com dados de notas fiscais e produtos com a seguinte estrutura:
    NF  
0   100     
1   500     
2   200    
3   200
4   100
5   500
6   200
7   100
8   500
9   200
10  100

O número 100 indica uma nova nota fiscal os numeros 200 e 500 são produtos dessa nota. Eu gostaria agrupar ou dividir o dataframe a cada vez que aparece o número 100. Ficando assim:
    NF  
0   100     
1   500     
2   200    
3   200

4   100
5   500
6   200

7   100
8   500
9   200

10  100

Obrigado pela ajuda!
","
Se a ideia é agrupar as notas fiscais, você pode usar o cumsum() para criar um identificador/ID para todas as linhas que só muda quando um novo valor igual a 100 é encontrado
df['nota_fiscal_id'] = (df['NF'] == 100).cumsum()
#saida:
    NF  nota_fiscal_id
0   100 1
1   500 1
2   200 1
3   200 1
4   100 2
5   500 2
6   200 2
7   100 3
8   500 3
9   200 3
10  100 4

","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
548408,Como faço para o contador não zerar ao sair de uma função?,"
Exemplo:
def cadastrarPeca(codigo)
quero que esse código seja um contador, para utilizar ele como identificador único em um cadastro.
só que toda vez que estou dentro da função ele soma, quando eu saio para a função menu() ele volta a zerar esse contador.
estou criando um dicionario, e esse codigo será a identificação para mostrar os valores desejados.
Muito obrigado!
","
Olá,
uma forma simples de resolver isso é usar variáveis globais.

Crie uma variável global fora da função.
Referencie a variável global dentro da função.
Faça a operação aritmética que quiser com a variável global dentro da função.

Pronto, agora todas as operações feitas com a variável global dentro da função serão vistas no restante do programa.
Abaixo deixo o exemplo de código genérico para essa função.
    contador = 10
    def f1():
        global contador
        contador += 1
    
    f1()
    print (contador)

Espero que ajude.
[ ]s
","
            0
        ","
Uma possível solução seria a função cadastrarPeca() retornar a variável codigo:
def cadastrarPeca(codigo):
    codigo += 1
    return codigo


def menu():
    codigo = 20
    codigo = cadastrarPeca(codigo) # agora codigo recebe o valor incrementado

","
            -1
        ","['\npython', 'contador\n']"
548402,"Galera, alguém consegue me ajudar com esse exercício? [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Nao estou entendendo praticamente nada, nao consigo fazer o contador sair da função, e nao entendi como funciona o uso ne Tuplas e Dicionarios em pratica
Enunciado: Imagina-se que você está desenvolvendo um software de controle de estoque para uma bicicletaria. Este software deve ter o seguinte menu e opções:

Cadastrar Peça
Consultar Peça


Consultar Todas as Peças
Consulta Peças por Código
Consulta Peças por Fabricante
Retornar


Remover Peça
Sair
Elabore um programa em Python que:
Deve-se codificar uma função cadastrarPeca (código) (EXIGÊNCIA 1);
o   Essa função recebe como parâmetro um código exclusivo para cada cliente cadastrado (DICA: utilize um contador como parâmetro)
o   Dentro da função perguntar o nome da peça;
o   Dentro da função perguntar o fabricante da peça;
o   Dentro da função perguntar o valor da peça
o   Cada peça cadastrada deve ter os seus dados armazenados num DICIONÁRIO (DICA: Conferir material escrito da p. 22 até p24  da AULA 06)
Deve-se codificar uma função consultarPeca(EXIGÊNCIA 2);
o   Dentro da função ter um menu com as seguintes opções:
   Consultar Todas as Peças
   Consultar Peças por Código
   Consultar Peças por Fabricante
   Retornar
Deve-se codificar uma função chamada removerPeca (EXIGÊNCIA 3);
o   Dentro da função perguntar qual o código do produto que se deseja remover do cadastro (da lista de dicionário)

",,,,,"['\npython', 'contador\n']"
548394,Python Selenium Capturar fechamento indevido do browser durante teste,"
Estou fazendo uma manipulação longa do sistema pelo browser e quero registrar um log em banco de dados caso o usuário feche o browser no meio do processo.
Já tentei utilizar um try exception capturando erros do selenium porém não consegui definir qual evento devo capturar:
            try:
                processa_pedido(driver, pedido[0], usuario)
                sleep(1.5)
            except WebDriverException as error:
                print(""Problema com o navegador!\n"" + error.__str__())
                incrementa_numero_de_execucoes(pedido.NU_PEDIDO)
            except UnknownMethodException as error:
                print(""Problema com o navegador!\n"" + error.__str__())
                incrementa_numero_de_execucoes(pedido.NU_PEDIDO)
            except NoSuchWindowException as error:
                print(""Problema com o navegador!\n"" + error.__str__())
                incrementa_numero_de_execucoes(pedido.NU_PEDIDO)

Alguém sabe como capturo esse encerramento do browser pelo webdriver?
",,,,,"['\npython', 'selenium', 'exceção', 'selenium-webdriver\n']"
548393,Erro: Acesso negado ao tentar criar um ambiente virtual com virtualenv [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Estou tentando criar um ambiente virtual na minha máquina com a configuração virtualenv.
1º passo: No terminal (cmd) digitei o comando:
pip instalar virtualenv
Até agora tudo bem, foi instalado com sucesso.
2º Passo: Tentei criar um ambiente virtual na pasta chamada programaria com o comando:
programaria virtualenv
Porém, nesta etapa após digitar o comando ""virtualenv programaria"" ele retorna um erro, aparece a mensagem ""Acesso negado""
Também tentei abrir o cmd como administrador e o problema persiste.

",,,,,"['\npython', 'cmd', 'prompt', 'virtualenv\n']"
548385,Python - Conversão de valor do dataframe para número decimal [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Tenho uma coluna de um dataframe onde os ultimos dois valores são as casas decimais nesse formato ""0000000028060"", gostaria de converter esse valor para um número decimal de modo que o resultado seja 280,60.
Qual procedimento poderia ser feito nesse caso?
",,,,,['\npython\n']
548380,"Estou fazendo um Gerenciador de Assistência para o meu curso de programação, na minha treeview, os dados aparecem na linha errado","
import os
import pickle
import sys
from tkinter import *
from tkinter import messagebox
from tkinter import ttk
from view import *
import view
import sqlite3
Configuração das Cores
co0 = ""#f0f3f5""  # Preta
co1 = ""#f0f3f5""  # cizenta / grey
co2 = ""#feffff""  # branca
co3 = ""#38576b""  # preta / black
co4 = ""#403d3d""  # letra
co5 = ""#6f9fbd""  # azul
co6 = ""#ef5350""  # vermelha
co7 = ""#93cd95""  # verde
co8 = ""#FFFF00""  # amarela
cad_produto = Tk()
class Funcao():
def limpa_tela(self):
self.e_id_produto.delete(0, END)
self.e_produto.delete(0, END)
self.e_cor.delete(0, END)
self.e_valor_compra.delete(0, END)
self.e_valor_venda.delete(0, END)
self.e_estoque.delete(0, END)
self.e_produto.focus()
def conecta_bd(self):
    self.conn = sqlite3.connect('gerenciador.db')
    self.cursor = self.conn.cursor()

def desconecta_bd(self):
    self.conn.close()

def montatabelas(self):
    self.conecta_bd()
    self.cursor.execute(""""""
            CREATE TABLE IF NOT EXISTS cad_produto(
            id_produto INTEGER PRIMARY KEY AUTOINCREMENT,
            produto VARCHAR(100) NOT NULL,
            cor VARCHAR(100),
            valor_compra FLOAT,
            valor_venda FLOAT,
            estoque INTEGER
        );
    """""")

    self.conn.commit();
    self.desconecta_bd()

def produtos_Variaveis(self):
    self.id_produto = self.e_id_produto.get()
    self.produto = self.e_produto.get()
    self.cor = self.e_cor.get()
    self.valor_compra = self.e_valor_compra.get()
    self.valor_venda = self.e_valor_venda.get()
    self.estoque = self.e_estoque.get()

def adiciona_Produto(self):
    self.produtos_Variaveis()
    if self.e_produto.get() == """" or self.e_cor.get() == """":
        messagebox.showerror(title=""Cadastro de Produto"", message=""Campos Vazios"")
    else:
        self.conecta_bd()
        self.cursor.execute(""""""
            INSERT INTO cad_produto (produto, cor, valor_compra, valor_venda, estoque)
            VALUES (?, ?, ?, ?, ?);"""""", (self.produto, self.cor, self.valor_compra, self.valor_venda, self.estoque))
        messagebox.showinfo(title=""Cadastrado de Produto"", message=""Produto Cadastro com Sucesso"")
    self.conn.commit()
    self.desconecta_bd()
    self.select_Produto()
    self.limpa_tela()

def select_Produto(self):
    self.listaproduto.delete(*self.listaproduto.get_children())
    self.conecta_bd()
    lista = self.cursor.execute(
        """""" SELECT id_produto, produto, cor, valor_compra, valor_venda, estoque FROM cad_produto WHERE produto LIKE '%'; """""")
    for i in lista:
        self.listaproduto.insert("""", END, values=i)
    self.desconecta_bd()

def duplo_Clique(self, event):
    self.limpa_tela()
    self.listaproduto.selection()

    for n in self.listaproduto.selection():
        col0, col1, col2, col3, col4, col5 = self.listaproduto.item(n, 'values')
        self.e_id_produto.insert(END, col0)
        self.e_produto.insert(END, col1)
        self.e_cor.insert(END, col2)
        self.e_valor_compra.insert(END, col3)
        self.e_valor_venda.insert(END, col4)
        self.e_estoque.insert(END, col5)

def deleta_Produto(self):
    self.produtos_Variaveis()
    self.conecta_bd()
    self.cursor.execute(""""""DELETE FROM cad_produto WHERE id_produto = ? """""", (self.id_produto,))
    self.conn.commit()
    self.desconecta_bd()
    self.limpa_tela()
    self.select_Produto()

def altera_Produto(self):
    self.produtos_Variaveis()
    self.conecta_bd()
    self.cursor.execute(
        """"""UPDATE cad_produto SET produto = ?, cor = ?, valor_compra = ?, valor_venda = ?, estoque = ? WHERE id_produto = ?"""""",
        (self.produto, self.cor, self.valor_compra, self.valor_venda, self.estoque, self.id_produto))
    self.conn.commit()
    self.desconecta_bd()
    self.select_Produto()
    self.limpa_tela()

def buscar_Produto(self):
    self.conecta_bd()
    self.listaproduto.delete(*self.listaproduto.get_children())
    self.e_produto.insert(END, ""%"")
    produto = self.e_produto.get()
    self.cursor.execute(
        """""" SELECT id_produto, produto, cor, valor_compra, valor_venda, estoque FROM cad_produto WHERE produto LIKE '%s' ORDER BY produto ASC"""""" % produto, )
    buscaproduto = self.cursor.fetchall()
    for i in buscaproduto:
        self.listaproduto.insert("""", END, values=i)
    self.limpa_tela()
    self.desconecta_bd()

class Aplicacao_Produto(Funcao):
def init(self):
self.cad_produto = cad_produto
self.tela_cadastro_produto()
self.frames_cad_produto()
self.labels_entry()
self.botoes()
self.grid_produto()
self.montatabelas()
self.select_Produto()
self.cad_produto.mainloop()
def tela_cadastro_produto(self):
    self.cad_produto.title(""Cadastro de Produto"")
    self.cad_produto.config(bg=""#333333"")
    self.cad_produto.state(""zoomed"")

def frames_cad_produto(self):
    self.frame_superior = Frame(self.cad_produto, bd=4, bg=""#8F8FBD"", highlightbackground=""#759fe6"",
                                highlightthickness=5)
    self.frame_superior.place(x=10, y=10, height=250, width=1345)

    self.frame_grid = Frame(self.cad_produto, height=418, width=1365, bg=""white"")
    self.frame_grid.place(x=0, y=280)

def labels_entry(self):
    self.l_id_produto = Label(self.frame_superior, text=""Código:"", font=(""Courier"", 13, ""italic"", ""bold""),
                              bg=""#8F8FBD"", fg='black')
    self.l_id_produto.place(x=95, y=10)
    self.e_id_produto = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_id_produto.place(x=180, y=10)

    self.l_produto = Label(self.frame_superior, text=""Produto:"", font=(""Courier"", 13, ""italic"", ""bold""),
                           bg=""#8F8FBD"", fg='black')
    self.l_produto.place(x=85, y=35)
    self.e_produto = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_produto.place(x=180, y=35)

    self.l_cor = Label(self.frame_superior, text=""Cor:"", font=(""Courier"", 13, ""italic"", ""bold""), bg=""#8F8FBD"",
                       fg='black')
    self.l_cor.place(x=125, y=60)
    self.e_cor = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_cor.place(x=180, y=60)

    self.l_valor_compra = Label(self.frame_superior, text=""Valor de Compra:"",
                                font=(""Courier"", 13, ""italic"", ""bold""), bg=""#8F8FBD"", fg='black')
    self.l_valor_compra.place(x=5, y=82)
    self.e_valor_compra = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_valor_compra.place(x=180, y=85)

    self.l_valor_venda = Label(self.frame_superior, text=""Valor de Venda:"", font=(""Courier"", 13, ""italic"", ""bold""),
                               bg=""#8F8FBD"", fg='black')
    self.l_valor_venda.place(x=15, y=110)
    self.e_valor_venda = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_valor_venda.place(x=180, y=110)

    self.l_estoque = Label(self.frame_superior, text=""Estoque:"", font=(""Courier"", 13, ""italic"", ""bold""),
                           bg=""#8F8FBD"", fg='black')
    self.l_estoque.place(x=85, y=135)
    self.e_estoque = Entry(self.frame_superior, width=45, justify='left', relief='raised')
    self.e_estoque.place(x=180, y=135)

def botoes(self):
    self.b_procurar = Button(self.frame_superior, text=""Procurar:"", command=self.buscar_Produto, width=10,
                             font=('Ivy 8 bold'), bg=co7, fg=co4, relief=RAISED, overrelief=RIDGE)
    self.b_procurar.place(x=500, y=15)

    self.b_adicionar = Button(self.frame_superior, text=""Adicionar:"", command=self.adiciona_Produto, width=10,
                              font=('Ivy 8 bold'), bg=co7, fg=co4, relief=RAISED, overrelief=RIDGE)
    self.b_adicionar.place(x=500, y=50)

    self.b_alterar = Button(self.frame_superior, text=""Alterar:"", command=self.altera_Produto, width=10,
                            font=('Ivy 8 bold'), bg=co8, fg=co4, relief=RAISED, overrelief=RIDGE)
    self.b_alterar.place(x=500, y=85)

    self.b_excluir = Button(self.frame_superior, text=""Excluir:"", command=self.deleta_Produto, width=10,
                            font=('Ivy 8 bold'), bg=co6, fg=co4, relief=RAISED, overrelief=RIDGE)
    self.b_excluir.place(x=500, y=120)

    self.b_limpar = Button(self.frame_superior, text=""Limpar"", command=self.limpa_tela, width=10,
                           font=('Ivy 8 bold'), bg=co6, fg=co4, relief=RAISED, overrelief=RIDGE)
    self.b_limpar.place(x=500, y=155)

def grid_produto(self):
    self.listaproduto = ttk.Treeview(self.frame_grid, columns=(""col0"", ""col1"", ""col2"", ""col3"", ""col4""))

    self.listaproduto.heading(""#0"", text=""Código"")
    self.listaproduto.heading(""#1"", text=""Produto"")
    self.listaproduto.heading(""#2"", text=""Cor"")
    self.listaproduto.heading(""#3"", text=""Valor de Compra"")
    self.listaproduto.heading(""#4"", text=""Valor de Venda"")
    self.listaproduto.heading(""#5"", text=""Estoque"")

    self.listaproduto.column(""#0"", width=50)
    self.listaproduto.column(""#1"", width=125)
    self.listaproduto.column(""#2"", width=125)
    self.listaproduto.column(""#3"", width=125)
    self.listaproduto.column(""#4"", width=125)
    self.listaproduto.column(""#5"", width=125)

    self.listaproduto.place(relx=0.01, rely=0.1, relwidth=0.95, relheight=0.85)
    #self.listaproduto.place(x=10, y=10, height=480, width=1340)

    self.barra_vertical = ttk.Scrollbar(self.frame_grid, orient='vertical', command=self.listaproduto.yview)
    self.barra_vertical.place(x=1350, y=0, height=410, width=15)

    self.barra_horizontal = ttk.Scrollbar(self.frame_grid, orient='horizontal', command=self.listaproduto.xview)
    self.barra_horizontal.place(x=0, y=408, height=15, width=1366)

    self.listaproduto.configure(yscrollcommand=self.barra_vertical.set, xscrollcommand=self.barra_horizontal.set)

    self.listaproduto.bind(""<Double-1>"", self.duplo_Clique)

Aplicacao_Produto()
",,,,,['\npython\n']
548345,"As informações colocado no comando ""SETUP"" não aparece no arquivo exe","
Tentei de todas as maneiras que as informações que eu coloco no meu compiler.py no VScode para gerar o meu exe aparece,mas ao compilar ele, tudo funciona bem, porém, quando clico com o botão direito do mouse para ver as propriedades do arquivo, vou no aba ""detalhes"" para ver a ""versão, nome, etc"", elas estão em branco, não estou conseguindo que as informações que eu coloco no arquivo apareça.
Já tentei pela linha de comando e por diversas maneiras, mas nada acontece. Alguém pode me ajudar dizendo aonde estou errando?
O script está assim:
import sys
from cx_Freeze import setup, Executable
import nmap
import pyfiglet
import pandas as pd
from datetime import date
from copy import deepcopy
from os.path import exists
from pyexcel_ods import save_data, get_data
from collections import OrderedDict


build_exe_options = {""packages"": [""os""], ""excludes"": [""tkinter""]}


base = None
icon = ""teste.ico""

if sys.platform == ""win32"":
    base = ""Win32GUI""

setup(  name = ""PORTSCANN"",
        version = ""1.0"",
        description = ""Scan de Vulnerabilidades na rede!"",
        options = {""build_exe"": build_exe_options},
        author = ""ROBERTO"",
        executables = [Executable(""d:\SCRIPTS\PYTHON SCRIPT\portscanner.py"", base=base, icon=""D:\SCRIPTS\PYTHON SCRIPT\teste.ico"")])

",,,,,"['\npython', '.exe', 'setup\n']"
548344,Como centralizar um texto na Biblioteca ImageDraw,"
minha empresa estava precisando de um gerador de certificado e resolvi pegar um do github e adequar para mim. No entanto preciso que o nome que vai ser gerado por esse certificado fique centralizado, mas não estou conseguindo fazer.
Vou deixar o código para melhor exemplificar e se alguém conseguir me ajudar ficarei muito grato!
for aluno in self.lista_alunos:    
        im = Image.open(""certificado_modelo3.png"").convert('RGBA')
        txt = Image.new('RGBA', im.size, (255,255,255,0))
        fnt = ImageFont.truetype('font/Constantia/constantia.ttf', 200)
        d = ImageDraw.Draw(txt)
        fnt_bold = ImageFont.truetype('font/Imprint MT Shadow/imprint-mt-std-bold.otf', 80)
        fnt_descrição = ImageFont.truetype('font/Constantia/constantia.ttf', 78)
        fnt_titulo = ImageFont.truetype('font/Constantia/constanb.ttf', 180)
        fnt_subtitulo = ImageFont.truetype('font/Constantia/constanb.ttf', 60)
        fnt_nome = ImageFont.truetype('font/Constantia/constanb.ttf', 150)

        if len(aluno) <= 50:
            #gambiarra master
            cpf_invertido = aluno[::-1]
            cpf_num = cpf_invertido[0:14] #numero de caracteres do CPF
            cpf_final = cpf_num [::-1]
            #final da gambiarra master

            #gambiarra master master
            #remover = cpf_invertido[0:11]
            remover = cpf_final + aluno[0:3] 
            string = cpf_invertido
            characters = remover

            nome_final = ''.join( x for x in string if x not in characters)
            nome_final = nome_final[::-1]
            #final da gambiarra master master

            d.text((1000,130), f""CERTIFICADO"" , font=fnt_titulo, fill=(0,0,0,255))
            d.text((750,370), f""A empresa Panitz Equipamentos Contra Incêndio certifica que:"" , font=fnt_subtitulo, fill=(0,0,0,255))
            d.text((1230,500), f""{nome_final[0::]}"" , font=fnt_nome, fill=(0,0,0,255))

",,,,,"['\npython', 'certificado\n']"
548337,Como funcionam decoradores em Python?,"
O @Elizeu Santos perguntou no grupo de Python em português do facebook o seguinte:

""Fala galera, to estudando python e uma coisa que não estou entendendo
  são os decorators. Dei de cara com eles fazendo o tuto de flask, podem
  me esclarecer?""

(O facebook não é legal para responder perguntas que incluam português e código misturado nos comentários - aqui é muito melhor formatado pra isso - então trouxe a pergunta pra cá, para colar a resposta que eu escrevi pra ele)
","
Uma função em Python é um objeto como qualquer outro - quando fazemos def func(): ..., o nome func fica associado ao corpo da função que é definido depois do comando def.
Um decorator é uma função (ou outro objeto chamável) que recebe uma função como parâmetro e retorna uma função. Essa nova função que é retornada pelo decorator é que fica associada ao nome da função original.
Ou seja, suponha um decorator deco, se for usado com a sintaxe de 
@ faz exatamente o mesmo que isso aqui:
def func():
   # faz coisas
func = deco(func)

Esse trecho de código é o mesmo que:
@deco
def func():
   #faz coisas

Nos dois casos, depois desse trecho de código, o nome func fica associado ao objeto que foi retornado pela chamada a função deco. Em geral esse objeto é uma função que chama a função func original, mas faz alguma coisa antes ou depois de chamá-la.
Por exemplo, um decorador que simplesmente registra quantas vezes as funções que ele decora foram chamadas, numa variável global contador pode ser declarado assim:
contador = 0

def contar_acessos(funcao_decorada):
    # não sabemos quantos parâmetros existirão na chamada
    # da função funcao_decorada, então recebemos *args e **kw
    def nova_func(*args, **kw):
         global contador
         contador += 1
         # e chamamos a função original, com os parâmetros recebidos:
         return funcao_decorada(*args, **kw)
    # retornamos a função ""nova_func"" - que só faz 
    # incrementar o contador e  retornar o valor da chamada à função original
    return nova_func

# agora vamos usar o decorador:
@contar_acessos
def soma(a, b):
    return a + b


E quando colamos esse código no interpretador interativo e chamamos soma algumas vezes, temos:
>>> contador
0
>>> soma(2,2)
4
>>> soma(3,2)
5
>>> soma(""a"", ""b"")
'ab'
>>> contador
3


Então, nesse caso simples, tudo o que é feito é aumentar o valor da variável contador antes de chamar a mesma função que foi decorada (e que dentro da função nova_funcao está com o nome de funcao_decorada já que ela é passada como parâmetro para a função de fora, a contar_acessos).
Mas você pode sofisticar a coisa - pode-se criar uma função que guarde o valor de retorno da função decorada num dicionário, por exemplo, daí você faz um cache simples (memoize). Pode-se simplesmente registrar a função decorada numa lista de ""funções que fazem algo"", e retornar ela mesma, sem criar uma nova função decoradora. Acredito que é isso que o Flask faz - anota a sua função decorada como uma função que responde a um endereço na URL.
","
            42
        ",,,"['\npython', 'decorator-pattern', 'sintaxe\n']"
548335,Erro na conexão do python com sqllite3 [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



    def conecta_db(self):
            self.conn = sqlite3.connect('clientes.db') #conecta db
            self.cursor = self.conn.cursor();

    def desconecta_db(self):
            self.conn.close();
            print(""Desconectando do banco de dados"")

    def montaTabela(self):
            self.conecta_db();
            print(""Conectando ao banco de dados"")
            self.cursor.executescript(""""""
             CREATE TABLE IF NOT EXISTS clientes (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    entrada FLOAT NOT NULL,
                    stop FLOAT,
                    saida FLOAT NOT NULL,
                    ativo VARCHAR(5) NOT NULL,
                    compravenda VARCHAR(6) NOT NULL,
                    quant INTEGER,
                    data DATE NOT NULL);
                    gain VARCHAR(5) NOT NULL,
                    oper VARCHAR(12)

);
"""""")
self.conn.commit();print(""Banco de dados criado"")
self.desconecta_db()
    def insert_entrada(self):
            self.preco_entrada = self.campo_novo.get()
            self.preco_stop = self.campo_stop.get()
            self.preco_alvo = self.campo_saida.get()
            self.ativo = self.campo_ativo.get()
            self.compravenda = self.campo_compravenda.get()
            self.quantidade = self.campo_quantidade.get()
            self.data = self.campo_data.get()
            self.gain_loss = self.campo_gain_loss.get()
            self.oper = self.campo_oper.get()
            self.conecta_db()

            try:
                    self.tabela1.insert('','end',values=(float(self.preco_entrada),float(self.preco_stop),float(self.preco_alvo),
                    str(self.ativo),str(self.compravenda),int(self.quantidade),
                    str(self.data), str(self.gain_loss), str(self.oper)))
            except:
                    messagebox.showinfo(title='Atenção!',message='Entre com os dados corretos!')


            self.cursor.executescript('''INSERT INTO clientes (id,entrada,stop,saida,compravenda,quant,data,gain,oper)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)''',(self.preco_entrada,self.preco_stop,self.preco_alvo,self.ativo,self.compravenda,self.quantidade,self.data,self.gain_loss,self.oper))
            self.conn.commit()
            self.desconecta_db()
            self.select_lista()
            self.limpa_tela()

==========================
Traceback (most recent call last):
File ""C:\Users\Carelli\PycharmProjects\pythonProject\Trade\main.py"", line 251, in 
Aplication()
File ""C:\Users\Carelli\PycharmProjects\pythonProject\Trade\main.py"", line 107, in init
self.montaTabela()
File ""C:\Users\Carelli\PycharmProjects\pythonProject\Trade\main.py"", line 39, in montaTabela
self.cursor.executescript(""""""
sqlite3.OperationalError: near ""gain"": syntax error
",,,,,"['\npython', 'sqlite\n']"
548323,Como buscar um arquivo excel no google drive usando pandas,"
Tenho uma planilha excel no google drive q sempre atualizo pra uma no meu PC e o pandas roda perfeitamente. Porém, sempre essas atualizações de dados se corrompe e eu preciso refazer a operação de salvar o arquivo da nuvem pro PC. Como faço pro pandas buscar diretamente os dados da planilha no google drive?
import pandas as pd

db = pd.read_excel(r'planilha.xlsx', sheet_name='Planilha1')

print(db)

",,,,,"['\npython', 'excel', 'pandas\n']"
548316,image ‘pyimage56’ doesn't exist [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Estou manipulando umas imagens com duas janelas, uma pequena no monitor principal e outra no segundo monitor em tela cheia. Uma com Tk() e outra em TopLevel(), mas retorna esse erro no TopLevel():
image ‘pyimage56’ doesn't exist

Não acredito que o erro esteja no código, pois no VS Code ele funciona perfeitamente, mas quando o transformo em um executável ele retorna esse erro. Acaba sendo cansativo, pois preciso torná-lo executável toda vez para fazer os testes. Alguém sabe o que pode ser isso? Está sendo desgastante. Uso o pyinstaller pra gerar o executável com o comando:
pyinstaller -i ico.ico -w --hidden-import=""pkg_resources.py2_warn"" --version-file file_version_info.txt ""projeto.py""

",,,,,"['\npython', 'python-3.x', 'tkinter\n']"
548300,Abrir uma pasta na tela utilizando python [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Como posso abrir um diretório na tela utilizando algum comando em python?
",,,,,['\npython\n']
548295,como faço para pegar um texto dentro de um input com selenium python,"
tem um site que da emails temporarios e esse site mostra o email dentro de uma caixa input,
e eu nao consigo retirar o email dentro dessa caixa, procurei pelo email dentro do html e percebi que ele nem manda o email para o codigo htlm, tem alguma forma de eu conseguir obter esse email?
obs: o email aparece na tela mas não no codigo.
o input esta assim: 
",,,,,"['\nhtml', 'python', 'input', 'selenium\n']"
548290,Crie uma função chamada printTable() que receba uma lista de listas de strings [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 5 dias atrás.




                        Melhore esta pergunta
                    



Pergunta: Crie uma função chamada printTable() que receba uma lista de listas de strings e a exiba em uma tabela bem organizada, com cada coluna justificada à direita. Suponha que todas as listas internas contenham o mesmo número de strings.
Não consigo resolver esse problema. Já tentei de várias maneiras. Se alguém puder desenvolver o código e postar, gratidão.
",,,,,['\npython\n']
548289,Como incluir o java abaixo em uma aplicação python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Pessoal estou aprendendo python, estou fazendo uma aplicação usando o TK INTER (biblioteca). Alguém sabe como consigo incluir o código abaixo JS no python ?


  
  Gráfico AAPL por TradingView
  
  
  new TradingView.widget(
  {
  ""container_id"": ""watchlist-chart-demo"",
  ""width"": ""100%"",
  ""height"": ""100%"",
  ""autosize"": true,
  ""symbol"": ""NASDAQ:AAPL"",
  ""interval"": ""D"",
  ""timezone"": ""exchange"",
  ""theme"": ""dark"",
  ""style"": ""1"",
  ""toolbar_bg"": ""#f1f3f6"",
  ""withdateranges"": true,
  ""allow_symbol_change"": true,
  ""save_image"": false,
  ""watchlist"": [
    ""AAPL"",
    ""IBM"",
    ""TSLA"",
    ""AMD"",
    ""MSFT"",
    ""GOOG""
  ],
  ""locale"": ""br""
}
  );
  


    ",,,,,"['\njavascript', 'python\n']"
548279,problema com python no vscode [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 5 dias atrás.




                        Melhore esta pergunta
                    



[Running] venv\Scripts\python.exe -u ""c:\Users\victo\vk.py""
O sistema n�o pode encontrar o caminho especificado.
[Done] exited with code=1 in 0.075 seconds
o meu sempre fala isso por favor me ajudaaaa!!!
",,,,,['\npython\n']
548252,Acentos não aparecendo no Docstring em PYTHON,"
Eu estou aprendendo agora Docstrings em python, só que um problema que eu estou enfrentando é que o terminal do vscode não está mostrando os acentos e retorna um caractere totalmente diferente, por exemplo:
""""""Aqui é a documentação""""""
e então eu tento usar o help() e retorna isso
NAME modulo - Aqui Ú a documentaþÒo
não faço a menor ideia do que seja porque no print sai normal, porém quando tento executar pelo help() fica dessa forma
",,,,,"['\npython', 'python-3.x', 'visual-studio-code\n']"
548246,Acesso ao localhost do meu container (Docker),"
estou com um pequeno problema, criei um container no Docker usando a porta 8080, quando entro no navegador e digito
Localhost:8080

O meu container da erro
""Não é possível acessar esse site""

Quando início o programa pelo Python usando o framework Flask, o programa funciona, mas a partir do momento em que insiro ele dentro do container ele não é visualizado na porta selecionada.
Alguém poderia me ajudar com isto por favor? :)
",,,,,"['\npython', 'flask\n']"
548242,BeatifulSoap retornando apenas uma linha,"
Quando faço um scraping nessa página: https://ipinfo.io/countries/br, o for está me retornando apenas o primeiro registro encontrado da tabela, já tentei de várias formas, alterando as tags e sintaxes mas não está funcionando e não achei nada no material que me ajude. Onde eu estou errando?
from urllib.request import urlopen
from bs4 import BeautifulSoup

html = urlopen(""https://ipinfo.io/countries/br"")
bs = BeautifulSoup(html, ""html.parser"")

linhas = bs.find_all('table', {'class': 'table table-responsive'})

for i in linhas:
    filhas = i.findChildren('td')
    print(filhas[0])
    print(filhas[1])
    print(filhas[2])
    
asn, empresa, ips = [], [], []
for i in linhas:
    children = i.findChildren('td')
    asn.append(children[0].text)
    empresa.append(children[1].text)
    ips.append(children[2].text)
    
import pandas as pd

df = pd.DataFrame({'ASN': asn, 'Empresa': empresa, 'Qtde IP': ips})

df.head()

Saída:





ASN
Empresa
Qtde IP




0
AS26599
TELEFÔNICA BRASIL S.A
12,060,672



 ","
Seguindo um pouco da sua lógica implementei o seguinte código:
import pandas as pd
import requests
from bs4 import BeautifulSoup

url_base = 'https://ipinfo.io/countries/br'

r = requests.get(url_base)
soup = BeautifulSoup(r.content, 'html.parser')

Aqui pegamos a table que você deseja usar
table = soup.find('table', {'class':'table table-responsive'})

De dentro da tabela extraímos o cabeçalho que será usado no data frame
header = [th.text for th in table.find_all('th')]

Aqui extraímos as td com os seus respectivos textos, serão os registros do data frame
td = [[td.text for td in tr.find_all('td', {'class': 'p-3'}) if td] for tr in table.find_all('tr')[1:]]

Aqui criamos o data frame
df = pd.DataFrame(td, columns=header)
df

Saída:





ASN
Name
Num IPs




0
AS26599
TELEFÔNICA BRASIL S.A
12,060,672


1
AS26615
TIM S/A
9,623,296


2
AS28573
CLARO S.A.
9,553,408


3
AS7738
Telemar Norte Leste S.A.
7,709,696


4
AS4230
CLARO S.A.
5,585,152


...
...
...
...


2495
AS264247
Maila Networks
1,024


2496
AS264246
Globaltech Telecomunicações e Informatica Ltda ME
1,024


2497
AS264245
Turkeynet Ltda.
1,024


2498
AS264244
SPEED NET SERVIÇOS DE TELECOMUNICAÇOES LTDA-ME
1,024


2499
AS264242
Diogo Cássio Cabral Me
1,024




Uma forma mais simples de fazer é utilizando o read_html do pandas:
df = pd.read_html(url_base)[0]

df

Saída:





ASN
Name
Num IPs




0
AS26599
TELEFÔNICA BRASIL S.A
12060672


1
AS26615
TIM S/A
9623296


2
AS28573
CLARO S.A.
9553408


3
AS7738
Telemar Norte Leste S.A.
7709696


4
AS4230
CLARO S.A.
5585152


...
...
...
...


2495
AS264247
Maila Networks
1024


2496
AS264246
Globaltech Telecomunicações e Informatica Ltda ME
1024


2497
AS264245
Turkeynet Ltda.
1024


2498
AS264244
SPEED NET SERVIÇOS DE TELECOMUNICAÇOES LTDA-ME
1024


2499
AS264242
Diogo Cássio Cabral Me
1024



 ","
            1
        ",,,"['\npython', 'web-scraping', 'beautifulsoup\n']"
548203,Validação de pagina,"
Tenho que criar um script com python/selenium onde eu pego as informações de uma pagina e guardo, clico para edita-la e salvo sem alterar nada e depois preciso que o codigo valide se as informações estão exatamente iguais ao inicio, tem algum jeito de fazer isso? Se sim como? tem algum codigo base?
",,,,,"['\npython', 'selenium', 'selenium-webdriver\n']"
548199,Como eu junto duas listas de forma que ela seja de tamanho variavel? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 5 dias atrás.




                        Melhore esta pergunta
                    



Preciso juntar nomes, possuo duas listas uma de nomes e sobrenomes, porém essas listas são baseadas em uma quantidade dada pelo usuario, por exemplo se o usuario pedir 4 nomes ele vai pegar 4 nomes aleatorios de uma lista maior o mesmo com o sobrenomes, porém fiz com que formasse 2 listas de nomes e sobrenomes usando append e random, agora não sei como usar as duas para formar nomes completos. Consegui chegar a formas as listas, mas preciso junta-las. Posso usar por vetores?
Exemplo de como está:

A imagem 1 é uma situação e a imagem 2 é outra. Preciso que funcione de acordo com o numero de nomes que o usuario pede

",,,,,"['\npython', 'lista\n']"
548192,Appdata e Usuario,"
Olá estou tentando fazer um programa que muda alguns arqivos da AppData\Roaming.minecraft
porém como vou fazer o codigo chegar até o appdata da pessoa que executar, pois a pessoa que executar tem um usuario do windows diferente do meu...
esse é o meu código atualmente. A eu quero substituir os arquivos da appdata da pessoa pelos arquivos que estão no meu script.

",,,,,['\npython\n']
548181,Puxar dados de um banco de dados e cadastrar com python em uma planilha do Google Sheeets,"
Estou criando um sistema com API que integra o tiny, o google sheets e aplicativos de controle de task e etc como o trello. Eu ja puxei tudo o que precisava do tiny e registrei no banco de dados. Agora estou tentando fazer a requisição de dados do pgSql e cadastrar em planilha, o query está funcionando perfeitamente porém na hora de passar esses dados para um planilha ele acontece o seguinte erro:
 *raise HttpError(resp, content, uri=self.uri) googleapiclient.errors.HttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets/spreadsheetsid/values/P%C3%A1gina1%21A2?valueInputOption=USER_ENTERED&alt=json returned ""Invalid values[1][0]: list_value {

values {
number_value: 1280.0
}*
O código que estou usando para as requisições do banco de dados é esse:
*query2 = 'select nome from produto_tiny order by codigo ASC'
cur.execute(query2)
nome_produto = cur.fetchall()*

O código que estou usando para inserir nas planilhas é esse:
*for i in range(0,7600,1):
 values = [
   [nome_produto[i]]
]
body = {
    'values': values
}
print(values)
result = service.spreadsheets().values().update(spreadsheetId=""'"" + spreadsheet_id + ""'"",range='Página1!A'+str(i+2), valueInputOption='USER_ENTERED',body={'values': values}).execute()*

Quando eu jogo os dados para a planilha dento de strings ele funciona, ex:
values = [
    [str(nome_produto[i],]
]

Só que na hora de mandar para o google data studio os dados ficam com formatações erradas.
",,,,,"['\npython', 'postgresql', 'api', 'google-sheets\n']"
548175,Manipulação de arquivo txt em list [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Estou tentando manipular um arquivo txt de forma a encontrar informações específicas dentro do arquivo, porém ao tentar acessar a list, dá erro list index out of range.
 def copiar():
orig = open(arq.txt, ""r"")
dest = open(resul.txt, ""w"")
onde=[]
for linha in orig:
    onde.append(linha.split())
    print(onde)
orig.close()
dest.close()
return None

O arquivo txt é uma sequência de linhas do tipo:
float  texto   texto  texto
float  texto   texto  texto
float  texto   texto  texto

Sendo que em dado momento, aparece a string ""AAA"", pela lógica, sempre no segundo texto (lista[2], que eu gostaria de localizar. Do jeito que o código está, executa sem erros, porém quando tento fazer print(onde[2]) ou if onde[2] ==""AAA"" dá erro  list index out of range.
","
Esse erro está acontecendo pq você declarou a variável onde como uma lista vazia e está tentando acessar o 3 elemento dela. Recomendo que dentro do próprio laço de repetição for, você crie um if para verificar se a linha do arquivo tenha ""AAA"" ou seja igual à ""AAA"", como no exemplo abaixo:
def copiar():
    orig = open('texto.txt', ""r"")
    dest = open('resul.txt', ""w"")

    for linha in orig:
        ln = linha.split()
        if ""AAA"" in ln or ln == ""AAA"":
            print(ln)    

    orig.close()
    dest.close()
    return None

","
            -5
        ","









Trancado por 2 dias. Comments on this answer have been disabled, but it is still accepting other interactions. Learn more.
                        
                    





Não entendi bem onde quer chegar.
No lugar de:
orig = open(arq.txt, ""r"")

Coloque:
orig = open(""arq.txt"", ""r"").read()

Retire:
orig.close()

No for coloque:
for linha in orig.split('\n'):

Fica:
def copiar():
    orig = open('arq.txt', 'r').read()
    dest = open('resul.txt', 'w')
    onde=[]
    for linha in orig.split('\n'):
        onde.append(linha.split())
        print(onde)
    dest.close()
    return None

","
            -7
        ","['\npython', 'python-3.x\n']"
548169,"Preciso gerar n nomes aleatorios a partir de uma lista, porém conseguir trabalhar com eles depois [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 4 dias atrás.




                        Melhore esta pergunta
                    



Preciso de ajuda com meu projeto da faculdade, a minha duvida é como eu consigo pegar a partir de uma lista e usando random posso ter n nomes de acordo com que o usuario pede, porém podendo trabalhar com cada um deles depois do resultado.
Isso foi o que eu pensei, porém não consigo trabalhar com eles depois.

","
Substitua o print por uma variável.
import random

for n in range(0, x):
    name_fem = random.choice(nomes_fem)
    name_masc = random.choice(nomes_masc)

","
            -2
        ",,,"['\npython', 'lista', 'random\n']"
548151,Como editar um registro em tupla? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.
Uma edição foi enviada para análise 6 dias atrás.




                        Melhore esta pergunta
                    



Pessoal tenho o seguinte cenario:
Em uma tupla de produtos[], tenho as categorias:
{nome}, {quantidade}, {valor_custo} e {valor_venda}.
No caso para consultar um produto fiz da seguinte forma:
def buscar_produto(produtos):
    nome_produto = input('Qual o produto? ')
    for produto in produtos:
        nome, quantidade, valor_custo, valor_venda = produto
        if nome == nome_produto:
            print(f'Nome: {nome}, Quantidade: {quantidade}, Custo: {valor_custo}, Venda: {valor_venda}')
            break
    else:
        print(f'Produto com nome {nome_produto} não encontrado')

Agora para buscar um produto e editar o valor de alguma categoria dele (quantidade, nome, etc...). Como eu poderia fazer?
",,,,,['\npython\n']
548136,ValueError: invalid literal for int() with base 10: 's' [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



Preciso dar a opção ao usuário de escolher mais de uma opção, ou simplesmente finalizar escolhendo apenas um produto. Mas, ao responder s ou n, dá o erro:

Traceback (most recent call last):   File
""C:\Users\usuario\PycharmProjects\pythonProject2\main.py"", line 35, in

resposta=int(input('Deseja pedir algo mais? (s/n)'))
ValueError: invalid literal for int() with base 10: 's'

Comecei agora e não to conseguindo identificar o erro. Será que conseguem me ajudar?
acumulador = 0
print('Bem vindo a Lanchonete da Karolyne Coutinho Coelho')
while True:
    print('               Opções de lanche              ')
    print(' Código           Descrição             Valor')
    print('  100          Cachorro-quente         R$ 9,00')
    print('  101          Cachorro-quente duplo   R$ 11,00')
    print('  102                X-EGG             R$ 12,00')
    print('  103              X-Salada            R$ 13,00')
    print('  104              X-Bacon             R$ 14,00')
    print('  105              X-Tudo              R$ 17,00')
    print('  200          Refrigerante lata       R$ 5,00')
    print('  201             Chá Gelado           R$ 4,00')
    codigo= input('Digite o código que deseja:')
    if codigo!='100':
        acumulador=acumulador+9.00
    elif codigo!='101':
        acumulador=acumulador+11.00
    elif codigo!='102':
        acumulador=acumulador+12.00
    elif codigo!='103':
        acumulador=acumulador+13.00
    elif codigo!='104':
        acumulador=acumulador+14.00
    elif codigo!='105':
        acumulador=acumulador+17.00
    elif codigo!='200':
        acumulador=acumulador+5.00
    elif codigo!='201':
        acumulador=acumulador+4.00
    else:
        print('Código inválido')
        continue
    resposta=input('Deseja pedir algo mais? (s/n)')
    if resposta!='s':
        continue
    else:
        print('O valor final da conta é: {:.2f}'.format(acumulador))
        break

",,,,,['\npython\n']
548133,"Criei um programa para tirar IMPAR ou PAR contra o computador, mas sempre que o computador vence da erro (Iniciante Python) [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



from random import randint

cores = {'limpa': '\033[m',
         'azul': '\033[1;34m',
         'amarelo': '\033[33m',
         'pretoebranco': '\033[7;30m',
         'vermelho': '\033[1;31m',
         'verde': '\033[1;32m'}
escolha = str(input('Escolha entre IMPAR ou PAR: ')).strip().lower()
num = int(input('Escolha um numero para jogar contra o {}Computador{}: '.format(cores['vermelho'], cores['limpa'])))
computador = randint(0, 7)
resultado = (num + computador) % 2
final = num + computador
if resultado == 0 and 'par' in escolha:
    print('Você escolheu PAR e o COMPUTADOR escolheu'
          ' {} resultado foi {}{}{} '
          '{}PARABENS VOCÊ GANHOU!{}'.format(computador,
                                             cores['verde'],
                                             final,
                                             cores['limpa'],
                                             cores['azul'],
                                             cores['limpa']))
if resultado == 1 and 'impar' in escolha:
    print('Você escolheu IMPAR e o COMPUTADOR escolheu {} '
          'resultado foi {}{}{} PARABENS VOCÊ GANHOU!!{}'
          .format(computador,
                  cores['verde'],
                  final,
                  cores['limpa'],
                  cores['azul'],
                  cores['limpa']))
else:
    print('Você perdeu, o COMPUTADOR escolheu {} resultado'
          ' foi {}{}{} {}O COMPUTADOR GANHOU!'.format(computador,
                                                      cores['amarelo'],
                                                      final,
                                                      cores['limpa'],
                                                      cores['vermelho']))

",,,,,['\npython\n']
548120,Gostaria de saber se posso implementar 2f no .math ou se posso usar somente um dos 2 [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



import math
num = int(input('digite um número'))
raiz = math.sqrt(num)
print(f'a raiz do número {num} é { math.trunc:2f(raiz)}')
TypeError: unsupported format string passed to builtin_function_or_method.__format__

",,,,,"['\npython', 'python-3.x', 'matemática', 'float', 'importação\n']"
548108,API que se comunica com banco de dados utilizando Django,"
A API precisa ser feita em Django, e no banco de dados só precisa de duas tabelas.
Em uma tabela irá ter uma coluna com nomes, e na segunda tabela uma coluna irá ter objetos e outra uma foreign key que se associa ao nome da primeira tabela.
Qual modelo devo usar para essa foreign key?
    from django.db import models
    
    # Create your models here.
    
    
    class Fruits(models.Model):
        fruits = models.CharField(max_length=255)
        id_region = models.ForeignKey()
    
    class Region(models.Model):
        region = models.CharField(max_length=255)


","
Se a model Region é a principal de seu banco de dados, quem recebera a foreignKey será a fruits. Exemplo:
class Region(models.Model):
    region = models.CharField(max_length=255)

class Fruits(models.Model):
    fruits = models.CharField(max_length=255)
    id_region = models.ForeignKey(Region, related_name=""fruits"", on_delete=models.CASCADE)

Dessa forma você consegue acessar a região e saber qual a fruta da mesma, basta fazer um simples nested no serializer, exemplo:
class Fruists_Serializer(serializers.ModelSerializer):

    class Meta:
        model = Fruits
        fields = {'id',
                  'fruits',
                  'id_region'
                  }

class Region(serializers.ModelSerializer):
    fruits = Fruists_Serializer(many=True, read_only=True)

    class Meta:
        model = Region
        fields = {
            'id',
            'region'
            'fruits'
        }

Na serialização da região, invocamos o serializer de fruits e pedimos a tabela de fruits quais são as frutas que estão sendo vinculada aquela região. É um pouco complexo de entender a lógica, mas o que fizemos foi: pegamos todas as frutas que estão vinculadas aquela região, logo depois serializamos ela e enviamos para o serializer da Region.
Você consegue ver todos os métodos da ForeingKey no site do próprio django: https://www.django-rest-framework.org/api-guide/relations/
","
            0
        ","
A Documentação Django explica bem a utilização do ForeingKey, e aqui traz um exemplo de relacionamentos Many-to-one (que acredito se encaixar melhor nos seus modelos):
class Fruits(models.Model):
        fruits = models.CharField(max_length=255)
        id_region = models.ForeignKey('Region', on_delete=models.CASCADE)

class Region(models.Model):
        region = models.CharField(max_length=255)

Um relacionamento ""Many-to-one"" requer dois argumentos: a classe para qual o modelo está relacionada e a opção ""on delete"".
Quando a classe a ser relacionada ainda não foi declarada, pode ser utilizada o nome da classe como uma string (como o exemplo mostrado na pergunta).
Opções on_delete:

CASCADE: ao deletar Region deletará também as Fruits relacionadas
PROTECT: retorna um ProtectedError ao tentar deletar uma região que possui Fruits  relacionadas
RESTRICT: evita deleção e retorna um RestrictedError, porém, diferentemente do PROTECT, permite a deleção quando esta referencia a deleção de outro objeto com a opção CASCADE na mesma operação.

PS.: Não realizei nenhum teste, a resposta foi escrita com base na documentação já referenciada.
","
            0
        ","['\npython', 'api', 'django', 'django-rest-framework\n']"
548102,Criei o programa com banco de dados no mysql. Como posso gerar um executavel ou um instalador pra passar os sistema para o cliente?,"
este é só o iniciou do código pois ele tem muito linhas.
Neste sistema tem funções que manipula dados no bando de dados, este BD foi criado o MySQLWorkbench hospedado no MysqlServer.
acredito que preciso criar um instalador que instale o sistema e o bando de dados. Como fazer isso?
   from PyQt5 import uic, QtWidgets, QtGui
from PyQt5.QtWidgets import QMessageBox, QTableWidget, QTableWidgetItem
import mysql.connector
import mysql.connector.errors

# Conexão com o bando de dados MySQL
banco = mysql.connector.connect(
    host=""localhost"",
    user=""root"",
    passwd=""cofggcvf"",
    database=""cotacao""
)

",,,,,"['\nmysql', 'python\n']"
548101,soma de elementos em uma lista com um passo para formar uma nova lista [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



Estou tentando criar uma nova lista a partir de uma lista maior na qual os elementos dessa nova lista são os elementos da lista maior somadas com as distancias do passo entre elas.
por exemplo, se uma lista é x=[1,2,3,4,5,6,7,8,9] e eu quero um passo=3, a lista nova deveria ser: y=[1+4+7,2+5+8,3+6+9]=[12,15,18]
",,,,,"['\npython', 'lista', 'soma', 'elementos\n']"
548098,Django models.field baseado em outro field de outro model,"
Tenho 2 models Pedidos e Pratos:
É possível fazer um field que seja interligado com outro field de varios outros models?
O model Prato:
Prato(models.Model):
   nome = models.CharField(max_length=255, unique=True)
   info = models.CharField(max_length=255)
   valor = models.IntegerField()

o modelo Pedido:
Pedido(models.Model):
   Pratos = models.ManyToManyField(Prato)
   valor_total = ## aqui seja o valor total juntando o valor de todos os Pratos

",,,,,"['\npython', 'sql', 'django', 'django-rest-framework\n']"
548083,"Estou realizando uma autorização com pyautogui, mas quero que faço isso varias vezes, como posso fazer isso?","
import pyautogui
import pyperclip
import time

pyautogui.press('winleft')
pyautogui.write('teste_email_automarico')
pyautogui.press('enter')
pyautogui.click(1196,306)
pyautogui.PAUSE=4
pyautogui.press('winleft')
pyautogui.write(""Google"")
pyautogui.PAUSE=2
pyautogui.press('enter')
pyperclip.copy(""https://outlook.office.com/"")
pyautogui.PAUSE=5
pyautogui.hotkey(""ctrl"", ""v"")
pyautogui.PAUSE=2
pyautogui.press(""enter"")
pyautogui.PAUSE=7
pyautogui.click(x=161, y=149)
pyautogui.PAUSE=5
pyautogui.click(556,747)
time.sleep(3)
pyautogui.click(740,270)
pyautogui.hotkey('ctrl', 'c')
pyautogui.moveTo(118,748)
pyautogui.click(331,638)
pyautogui.PAUSE=2
pyautogui.click(x=862, y=248)
pyautogui.hotkey('ctrl', 'v')
pyautogui.click(851,394)
pyautogui.PAUSE=5
pyautogui.moveTo(558,738)
pyautogui.click(580,685)
pyautogui.PAUSE=5
pyautogui.click(989,265)
pyautogui.hotkey('ctrl', 'c')
pyautogui.moveTo(118,748)
pyautogui.click(331,638)
pyautogui.PAUSE=2
pyautogui.click(784,400)
pyautogui.hotkey('ctrl', 'v')
pyautogui.PAUSE=5
pyautogui.click(813,484)
pyautogui.PAUSE=5
pyautogui.write(""\n Olá!""
""\n Você está recebendo esse email com os pedidos que temos em ATRASO com sua empresa.""
""\n Favor, verificar cada item e informar OBJETIVAMENTE o motivo do atraso e novo prazo de entrega;""
""\n Caso haja algum problema com algum pedido, favor sinalizar.""
""\n**Atenção: Manter em cópia o comprador responsavel pela negociação!**""
""\n Este relatório será enviado periodicamente e deve ser respondido em no MÁXIMO 2 dias úteis, sob risco de cancelamento dos pedidos.""

""\n Contamos com seu apoio!"")
pyautogui.PAUSE=5
pyautogui.click(773,648)

",,,,,['\npython\n']
548079,Remover Registros Duplicados em apenas uma coluna de um data-frame,"
tudo bem ?
Estou com uma duvida relacionada a Pandas no Python e após muito quebrar a cabeça, não cheguei a uma conclusão do que posso fazer.
Após alguns cruzamentos eu fico com um produto cartesiano repetindo as chamadas para cada data do meu DF, oque faz o meu volume de informações se repetir varias vezes na coluna.
Deixo a baixo uma amostra de 12 linhas deste DataFrame;
 import pandas as pd 

carteira = [ 'BRASILIA - GERAL','Cosern - Telecobranca',
            'Cosern - Telecobranca Obrigatoria','Elektro - Geral',
            'BRASILIA - GERAL','Cosern - Telecobranca','Cosern - Telecobranca Obrigatoria',
            'Elektro - Geral','BRASILIA - GERAL','Cosern - Telecobranca',
            'Cosern - Telecobranca Obrigatoria','Elektro - Geral' ]

data = ['25/03/2022','25/03/2022','25/03/2022','25/03/2022','25/03/2022','25/03/2022',
        '25/03/2022','25/03/2022','25/03/2022','25/03/2022','25/03/2022','25/03/2022'] 

agente = [3587, 3587, 3587, 3587, 5348, 5348, 5348, 5348, 5349, 5349, 5349,5349]

operador = ['Bruna', 'Bruna', 'Bruna', 'Bruna','Ana','Ana','Ana','Ana', 'Edneia','Edneia','Edneia','Edneia'] 

acordo = [3,4,10,7,3,7,7,1,8,3,8,3 ] 

Chamadas_agente = [292,292,292,292,206,206,206,206,239,239,239,239] 



# obtenha a lista de tuplas de duas listas e mescle-as usando zip().
lista_de_tuplas = list(zip(carteira, data, agente, operador, acordo, Chamadas_agente))  

# Convertendo listas de tuplas em Dataframe do pandas.
df = pd.DataFrame(
    lista_de_tuplas,
    columns=['carteira', 'data','agente','operador','acordo','Chamadas_agente']
)

display(df)


                             carteira        data  agente operador  acordo  \
0                    BRASILIA - GERAL  25/03/2022    3587    Bruna       3   
1               Cosern - Telecobranca  25/03/2022    3587    Bruna       4   
2   Cosern - Telecobranca Obrigatoria  25/03/2022    3587    Bruna      10   
3                     Elektro - Geral  25/03/2022    3587    Bruna       7   
4                    BRASILIA - GERAL  25/03/2022    5348      Ana       3   
5               Cosern - Telecobranca  25/03/2022    5348      Ana       7   
6   Cosern - Telecobranca Obrigatoria  25/03/2022    5348      Ana       7   
7                     Elektro - Geral  25/03/2022    5348      Ana       1   
8                    BRASILIA - GERAL  25/03/2022    5349   Edneia       8   
9               Cosern - Telecobranca  25/03/2022    5349   Edneia       3   
10  Cosern - Telecobranca Obrigatoria  25/03/2022    5349   Edneia       8   
11                    Elektro - Geral  25/03/2022    5349   Edneia       3   

    Chamadas_agente  
0               292  
1               292  
2               292  
3               292  
4               206  
5               206  
6               206  
7               206  
8               239  
9               239  
10              239  
11              239  
​

Devido a coluna carteira não estar não ter relação com as outras informações, o campo Chamadas_agente acaba repetindo o valor diversas vezes por data.
Para uma solução rápida e que me atenderia, eu pendei em apagar os registros duplicados da coluna Chamadas_agente, mantendo apenas um registro por data.
o retorno final seria mais ou menos assim como a a baixo, mantendo apenas uma chamada por dia.
de alguma forma eu consigo fazer isso
 carteira        data  agente operador  acordo  \
0                    BRASILIA - GERAL  25/03/2022    3587    Bruna       3   
1               Cosern - Telecobranca  25/03/2022    3587    Bruna       4   
2   Cosern - Telecobranca Obrigatoria  25/03/2022    3587    Bruna      10   
3                     Elektro - Geral  25/03/2022    3587    Bruna       7   
4                    BRASILIA - GERAL  25/03/2022    5348      Ana       3   
5               Cosern - Telecobranca  25/03/2022    5348      Ana       7   
6   Cosern - Telecobranca Obrigatoria  25/03/2022    5348      Ana       7   
7                     Elektro - Geral  25/03/2022    5348      Ana       1   
8                    BRASILIA - GERAL  25/03/2022    5349   Edneia       8   
9               Cosern - Telecobranca  25/03/2022    5349   Edneia       3   
10  Cosern - Telecobranca Obrigatoria  25/03/2022    5349   Edneia       8   
11                    Elektro - Geral  25/03/2022    5349   Edneia       3   

    Chamadas_agente  
0               292  
1                 
2                
3                 
4               206  
5                 
6                 
7                 
8               239  
9                 
10                
11       
         

","
Uma alternativa seria agrupar por agente, gerar um rank desse agente e filtar pelo rank 1:
df['Chamadas_agente'] = df['Chamadas_agente'][df.groupby('agente')['Chamadas_agente'].rank(method='first') == 1]

Mudando o tipo e preenchendo valores nulos
df['Chamadas_agente'] = df['Chamadas_agente'].fillna(-1).astype('int').astype('str').str.replace('-1', '')

Saída:





carteira
data
agente
operador
acordo
Chamadas_agente




0
BRASILIA - GERAL
25/03/2022
3587
Bruna
3
292


1
Cosern - Telecobranca
25/03/2022
3587
Bruna
4



2
Cosern - Telecobranca Obrigatoria
25/03/2022
3587
Bruna
10



3
Elektro - Geral
25/03/2022
3587
Bruna
7



4
BRASILIA - GERAL
25/03/2022
5348
Ana
3
206


5
Cosern - Telecobranca
25/03/2022
5348
Ana
7



6
Cosern - Telecobranca Obrigatoria
25/03/2022
5348
Ana
7



7
Elektro - Geral
25/03/2022
5348
Ana
1



8
BRASILIA - GERAL
25/03/2022
5349
Edneia
8
239


9
Cosern - Telecobranca
25/03/2022
5349
Edneia
3



10
Cosern - Telecobranca Obrigatoria
25/03/2022
5349
Edneia
8



11
Elektro - Geral
25/03/2022
5349
Edneia
3





Caso queira agrupar por data basta adicionar ao groupby:
df['Chamadas_agente'] = df['Chamadas_agente'][df.groupby(['agente','data'])['Chamadas_agente'].rank(method='first') == 1]

df['Chamadas_agente'] = df['Chamadas_agente'].fillna(-1).astype('int').astype('str').str.replace('-1', '')

Saída:





carteira
data
agente
operador
acordo
Chamadas_agente




0
BRASILIA - GERAL
25/03/2022
3587
Bruna
3
292


1
Cosern - Telecobranca
25/03/2022
3587
Bruna
4



2
Cosern - Telecobranca Obrigatoria
25/03/2022
3587
Bruna
10



3
Elektro - Geral
25/03/2022
3587
Bruna
7



4
BRASILIA - GERAL
25/03/2022
5348
Ana
3
206


5
Cosern - Telecobranca
25/03/2022
5348
Ana
7



6
Cosern - Telecobranca Obrigatoria
25/03/2022
5348
Ana
7



7
Elektro - Geral
25/03/2022
5348
Ana
1



8
BRASILIA - GERAL
25/03/2022
5349
Edneia
8
239


9
Cosern - Telecobranca
25/03/2022
5349
Edneia
3



10
Cosern - Telecobranca Obrigatoria
25/03/2022
5349
Edneia
8



11
Elektro - Geral
25/03/2022
5349
Edneia
3



12
BRASILIA - GERAL
26/03/2022
3587
Bruna
3
292


13
Cosern - Telecobranca
26/03/2022
3587
Bruna
4



14
Cosern - Telecobranca Obrigatoria
26/03/2022
3587
Bruna
10



15
Elektro - Geral
26/03/2022
3587
Bruna
7



16
BRASILIA - GERAL
26/03/2022
5348
Ana
3
206


17
Cosern - Telecobranca
26/03/2022
5348
Ana
7



18
Cosern - Telecobranca Obrigatoria
26/03/2022
5348
Ana
7



19
Elektro - Geral
26/03/2022
5348
Ana
1



20
BRASILIA - GERAL
26/03/2022
5349
Edneia
8
239


21
Cosern - Telecobranca
26/03/2022
5349
Edneia
3



22
Cosern - Telecobranca Obrigatoria
26/03/2022
5349
Edneia
8



23
Elektro - Geral
26/03/2022
5349
Edneia
3




 ","
            2
        ",,,"['\npython', 'pandas', 'dataframe\n']"
548049,Como transformar uma coluna no tipo porcentagem? Python,"
Criei uma lista vazia chamada table[]
Em outra variável 'linha' recebo os dados e faço um split pra separar todos os dados, daí vira uma lista assim =
['/dev/sda3', '425G', '347G', 56, '87%', '/', 'Santos']
Caso queiram um código pra usar de teste segue abaixo:
table = []
central = 'Teste'
linha = '/dev/sda3       982G   27G  906G   3% /'

linha = linha.split()
linha.append(central)

table.append(linha)

Faço um table.append(linha) pra no final usar essa lista pra fazer o excel.
Agora segue o tratamento da planilha
import time
timestr = time.strftime(""%Y%m%d"")

import pandas as pd

df = pd.DataFrame(table, columns=['Armazenamento', 'Tamanho', 'Usado', 'Disponível G', 'Uso %', 'ND', 'Central'])

#Deletar a sexta coluna
df = df.drop(columns=['ND'])
#df['Uso%'].astype(float) - tentativa de mudar o tipo mal sucedida

#criando o excel
writer = pd.ExcelWriter(f'relatorioSDB_{timestr}.xlsx', engine='xlsxwriter')
print(f'relatorioSDB_{timestr}.xlsx')
df.to_excel(writer, sheet_name='Armazenamento Disco', index=False, header=True)
writer.save()

A questão é que, quando eu abro esse excel ele da um erro falando que deveria ser um número e está como texto... sei que é só clicar em converter em número que resolve, mas gostaria que esse erro não aparecesse.

Já tentei transformar esse index da lista em int ou float mas ele não aceita pcausa do caractere '%'
O que eu posso fazer - ou no tratamento do excel ou na tipação dele - pra ele ficar como porcentagem e não aparecer esse erro no excel?
","
Note o seguinte: se você já está indicando no cabeçalho da coluna que os valores serão exibidos em porcentagem (Uso %), não há porque também colocar o mesmo símbolo de porcentagem junto com cada valor.
Veja que ao rodar o comando df.info(), retornará o seguinte:
`<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1 entries, 0 to 0
Data columns (total 7 columns):
 #   Column         Non-Null Count  Dtype 
---  ------         --------------  ----- 
 0   Armazenamento  1 non-null      object
 1   Tamanho        1 non-null      object
 2   Usado          1 non-null      object
 3   Disponível G   1 non-null      object
 4   Uso %          1 non-null      object
 5   ND             1 non-null      object
 6   Central        1 non-null      object
dtypes: object(7)
memory usage: 184.0+ bytes`

Observe que todas as colunas são do tipo objeto. Bom, não sei se estou certo, é apenas meu palpite, pois não testei a conversão para o Excel.
Converta a coluna Uso % para o tipo numérico:
df['Uso %'] = pd.to_numeric(df['Uso %'])
Verificando novamente com o df.info() verá que a coluna, em questão, foi convertida para o tipo float64. Veja se dá certo.
","
            -1
        ",,,"['\npython', 'pandas', 'tipagem', 'dataframe', 'porcentagem\n']"
548031,Adblock para browser feito em python,"
Criei um web browser (navegador) em python e gostaria de implementar um Adblock contra anúncios do YouTube e outros sites, alguém poderia me passar uma ideia de como poderia ser feito isso?
","
Acredito que você teria que fazer algo estilo whitelists, usar domínios que são específico para ADS bloqueando e permitindo, exemplo: o bloqueador compara cada uma das solicitações dela com as listas de filtros que foram adicionadas ao programa.
Um exemplo seria usar uma Whitelist ""EasyList""
EasyList é a principal lista de filtros que remove a maioria dos anúncios de páginas da web internacionais, incluindo quadros, imagens e objetos indesejados. É a lista mais popular usada por muitos bloqueadores de anúncios e forma a base de mais de uma dúzia de listas de filtros combinados e complementares.
https://easylist.to/
Você poderia ver ter uma lógica em js algo por exemplo (Added deprecation notice to the repository) https://hg.adblockplus.org/adblockplus/file/tip/lib/ui.js#l1517
","
            -1
        ",,,"['\npython', 'aplicação-web', 'navegador', 'webbrowser\n']"
548018,Erro na Criação de Pastas Padronizadas Dentro de Diretorio Indicado Via Tkinter [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    



pode parecer uma pergunta ou problema fácil de se resolver. Mais estou tendo um pouco de dificuldades para conseguir fazer esse algoritmo realizar a sua tarefa.
Montei uma tela utilizando o TKINTER onde o usuário ira visualizar dois botões um para indicar uma pasta de aplicação que irei trabalhar posteriormente nesse algoritmo, e um outro botão onde ele ira indicar a pasta de saída.
Logo em seguida, ele ira ter um menu com algumas opções ""TESTE 01 / TESTE 02 / TESTE 03"", entre outros onde ele ira ter que selecionar uma dessas opções.
Logo abaixo desse menu de opções, ele terá um outro botão chamado ""Organizar Pastas"". Ao clicar nesse botão, o script terá que pegar a informação do diretório de saída e criar uma pasta nesse diretório com o nome da opção selecionado pelo usuário na janela de menus.

Segue o codigo que desenvolvi ate o momento para que possam me dar um suporte.
import os
from tkinter import *
import tkinter.filedialog

janela = Tk()
janela.title('TESTE ARQUIVOS E PASTAS')
janela.geometry('500x500')

def pastaAplicacao():
    sourcePathAplicacao = filedialog.askdirectory()
    labelAplicacao.insert(0,sourcePathAplicacao)

def pastaSaida():
    sourcePath = filedialog.askdirectory()    
    selecaoEquipamento(sourcePath)
    labelSaida.insert(0,sourcePath)
    
def selecaoEquipamento(sourcePath):
    opcaoSelecionada = menuEquipamento.get()
    if opcaoSelecionada == 'TESTE 01':
        print('Opção selecionada TESTE 01')
        os.chdir(sourcePath)
        diretorio = 'TESTE01'
        os.makedirs(diretorio)
    elif opcaoSelecionada == 'TESTE 02':
        print('Opção selecionada TESTE 02')
        os.chdir(sourcePath)
        diretorio = 'TESTE02'
        os.makedirs(diretorio)
    elif opcaoSelecionada == 'TESTE 03':
        print('Opção selecionada TESTE 03')
        os.chdir(sourcePath)
        diretorio = 'TESTE03'
        os.makedirs(diretorio)
    elif opcaoSelecionada == 'TESTE 04':
        print('Opção selecionada TESTE 04')
        os.chdir(sourcePath)
        diretorio = 'TESTE04'
        os.makedirs(diretorio)
    elif opcaoSelecionada == 'TESTE 05':
        print('Opção selecionada TESTE 05')
        os.chdir(sourcePath)
        diretorio = 'TESTE05'
        os.makedirs(diretorio)
    
arquivoAplicacao = Button(janela, text='Diretorio Teste:', width=15, command=pastaAplicacao)
arquivoAplicacao.grid(column=0, row=0, padx=10, pady=10)

labelAplicacao = Entry(janela, borderwidth=2, width=50)
labelAplicacao.grid(column=1, row=0, padx=10, pady=10, columnspan=2)    

labelFile = Button(janela, text='Diretorio de Saida:', width=15, command=pastaSaida)
labelFile.grid(column=0, row=1, padx=10, pady=10)

labelSaida = Entry(janela, borderwidth=2, width=50)
labelSaida.grid(column=1, row=1, padx=10, pady=10, columnspan=2)

opcoes = ['TESTE 01', 'TESTE 02', 'TESTE 03', 'TESTE 04', 'TESTE 05']

menuEquipamento = StringVar()
menuEquipamento.set(""Select an Option"")
drop = OptionMenu(janela, menuEquipamento, *opcoes)
drop.grid(column=0, row=2, padx=10, pady=10, columnspan=3)

botaoAjuste = Button(janela, text='Organizar Pastas', width=35, command=selecaoEquipamento)
botaoAjuste.grid(column=0, row=3, padx=10, pady=10, columnspan=4)

janela.mainloop()

Segue o erro que esta ocorrendo ao rodar o algoritmo.

Agradeço desde já.
Atenciosamente.
",,,,,"['\npython', 'tkinter\n']"
548011,How to calculate correlation between all columns and remove highly correlated ones by function [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    



how do i remove these high correlated variables in this function
# function to indicate which columns are correlated using threshold 0.85

def correlate_columns(dataset,threshold=0.85):
    return(dataset.corr().
    pipe(lambda df1:pd.DataFrame(np.tril(df1, k=-1), columns = dataset.columns, index= dataset.columns)).stack().rename(""pearson"").
    pipe(lambda s:s[s.abs() > threshold].reset_index().query(""level_0 not in level_1""))

checking which variables are correlated
df_corr= correlate_columns(df)
df_corr.style.format({""pearson"":""{:.2f}""})


",,,,,['\npython\n']
548003,Preciso de ajuda para diminuir o tempo de execução do meu código [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    



import math
while True:
    linha = input().split()
    k = int(linha[0])
    l = int(linha[1])
    lista = []
    if k == 0 and l == 0:
        break
    for c in range(4, int(math.sqrt(k))+1):
        if k % c == 0:
            lista.append(c)

    if lista[0] < l:
        print(f""BAD {lista[0]}"")
    else:
        print(""GOOD"")

",,,,,['\npython\n']
548002,Diferença entre o override e overload - polimorfismo [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    




Citação Ao sobrescrever os métodos mágicos, utilizamos outra importante técnica da OO, o polimorfismo. Essa técnica, vale dizer, pode ser utilizada em qualquer método, não somente nos mágicos. Construir métodos com diferentes comportamentos pode ser feito sobrescrevendo (override) ou sobrecarregando (overload) métodos. No primeiro caso, a classe-filho sobrescreve um método da classe-base, por exemplo, o construtor, ou qualquer outro método. No segundo caso, da sobrecarga, um método é escrito com diferentes assinaturas para suportar diferentes comportamentos.

Alguém poderia me ajudar com exemplos de sobrecarga de métodos (overload) ? Não ficou muito claro pra mim
",,,,,"['\npython', 'orientação-a-objetos', 'polimorfismo\n']"
547991,"O que é melhor na união de pandas dataframes para o meu caso? Pandas merge, concat ou join? [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    



Estou fazendo um projeto de predição em ciência de dados com os dados de casos de covid19 do estado de São Paulo. Fora algumas colunas de dados de identificação, a grande maioria das colunas tem como index o nome da doença e o valor da célula podia ser SIM, NAO ou IGNORADO para dizer se a pessoa examinada tinha a determinada doença pré-existente ou não. Então a maioria são dados categóricos não ordinais.

Sei que na biblioteca do Scikit learn tem métodos para fazer a transformação automática (como o one-hot-enconder) mas eu quero fazer a transformação de forma mais manual para aprender um pouco do funcionamento das coisas. Sei também que posso usar o metodo python .replace() pra modificar os valores alvo para 0 ou 1 e o estou utilizando em conjunto com  df.loc[df[""DOENCA_x""]== 'SIM'], df.loc[df[""DOENCA_x""]== 'NÃO'] ou df.loc[df[""DOENCA_x""]== 'IGNORADO'] para selecionar só os valores correspondestes e já fazer o .replace() por 0 ou 1.
Mas se eu estivesse gerando um novo dataframe para cada coluna que realizar a ação do tipo df.loc[df[""DOENCA_x""]== 'SIM'], qual método de integração de dataframes é melhor ou quais parâmetros usar uma vez que cada novo dataframe ainda manterá o mesmo valor de index no eixo 0 mas eu quero unificar apenas a coluna em que todos o valores são SIM ao dataframe que será utilizado no treinamento?
Por exemplo:
Na imagem acima mostra o dataframe resultado de df.loc[df['Asma']=='SIM'] que compartilha no index da row '4075' um SIM com a coluna Cardiopatia. Logo quando eu criar df.loc[df['Cardiopatia']=='SIM'] ainda terá essa intersecção, no entanto haverão vários valores  NÃO para outras doenças. Como criar um novo dataframe usando essas intersecções por meio do index  colocando valores NaN nos valores diferentes de SIM e não perder linhas ou misturar linhas de diferente index utilizando o join, merge ou concat? Ou seja, como posso evitar misturar informações de diferentes pessoas?
Sei que poderia fazer  .reset_index() ou usar o index direto como opção logica de integração  mas não sei como fazer e como seria mais eficiente. Agora eu não sei qual será a melhor opção para juntar essas tabelas de forma que depois eu possa treinar um modelo a partir do novo dataframe. O que é melhor nesse caso e como devo aplicar?
","
Você pode criar uma nova coluna usando a função where do numpy. Ele testa uma condição, se o valor for verdadeiro ele coloca um valor, se o valor for falso ele coloca outro valor.
df['Asma Exemplo'] = numpy.where(
    df['Asma'] == 'SIM',
    1,
    0
)

","
            0
        ",,,"['\npython', 'pandas', 'join', 'dataframe', 'data-science\n']"
547982,Numpy linalg.inv() está a retornar valores errados [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 7 dias atrás.




                        Melhore esta pergunta
                    



Num programa que estou a desenvolver tenho uma matriz 15x15 que é constituida por valores de outras matrizes mais pequenas.
Para efetuar um cálculo preciso da matriz inversa da matriz 15x15. Para isso estou a usar a funcção do numpy: linalg.in(), no entanto os valores que esta função retorna estão errados (já confirmei coma matriz identidade e no excel). O que pode estar a causar isto?
Código completo:
import math as mt
import csv
import numpy as np
import warnings




#Definir dimensões

v = 10 #(Vão em metros)
h = 5 #(""Altura do pilar em metros:"")
ht = 7 #(""Altura total metros:"")
nm = 7 #(""Número de madres por asna:"")
npo = 5 #(""Número de pórticos em metros:"")
dp = 5 #(""Distância entre pórticos em metros:"")

alfa = (mt.atan((int(ht)-int(h))/(int(v)/2)))*180/((mt.pi))
print(""Ângulo da vertente:"", round(alfa, 1), ""º"")

lasna = ((v/2) ** 2 + (ht-h) ** 2) ** 0.5
print(""Comprimento de cada asna: "", round(lasna, 2), ""m"")

dm = lasna / nm
print((""Distância entre madres da cobertura em metros:""), round(dm, 2), ""m"")    

lp = npo * dp
print(""Comprimento total do pavilhão:"", round(lp, 1), ""m"")

#Definir perfis

perfis = open(r'C:\Users\tomas\Documents\ISEP\5º Ano\TESE\PROGRAMA\PERFIS.csv', newline='')
csv_file = csv.reader(perfis, delimiter="";"")

def pilar():  
    pilar = input(""Perfil do pilar:"")
     
    for row in csv_file:   
   
         if pilar in row[0]:
             print(""Pilar: "", pilar)
             caracteristicaspilar = []
             caracteristicaspilar.append(row[1]) #peso próprio pilar
             caracteristicaspilar.append(row[7]) #área secção-cm^2
             caracteristicaspilar.append(row[9]) #inércia y cm^4
             caracteristicaspilar.append(row[17]) #raio de giração segundo z cm^4
             caracteristicaspilar.append(row[10]) #módulo de resistência elástico - cm^3
             caracteristicaspilar.append(row[11]) #módulo de resistência plástico - cm^3
         
             return caracteristicaspilar
             
perfilpilar = pilar() 

pppilar = float(perfilpilar[0]) #variavel do peso próprio do pilar
arpilar = float(perfilpilar[1]) * 10 ** -4 #variavél da área de secção do pilar - m^2
inypilar = float(perfilpilar[2]) * 10 ** -8 #variavél da inércia pilar segundo y - m^4
rgzpilar = float(perfilpilar[3]) #variável raio de giração segundo z cm^4
welpilar = float(perfilpilar[4]) * 10 ** - 6 #variável do módulo de resistência elástico - m^3
wplpilar = float(perfilpilar[5]) * 10 ** - 6 #variável do módulo de resistência plástico - m^3

def asna():
    perfis.seek(0)
    asna = input(""Perfil da asna:"")

    for row in csv_file:   
   
         if asna in row[0]:
             print(""Asna: "", asna)
             caracteristicasasna = []
             caracteristicasasna.append(row[1]) #peso próprio pilar
             caracteristicasasna.append(row[7]) #área secção-cm^2
             caracteristicasasna.append(row[9]) #inércia y cm^4
             caracteristicasasna.append(row[10]) #módulo de resistência elástico - cm^3
             caracteristicasasna.append(row[11]) #módulo de resistência plástico - cm^3
             return caracteristicasasna
             
perfilasna = asna()

ppasna = float(perfilasna[0]) #variavel do peso próprio da asna
arasna = float(perfilasna[1]) * 10 ** -4 #variavél da área de secção do pilar - m^2
inyasna = float(perfilasna[2]) * 10 ** -8 #variavél da inércia pilar - m^4
welasna = float(perfilasna[3]) * 10 ** - 6 #variável do módulo de resistência elástico - m^3
wplasna = float(perfilasna[4]) * 10 ** - 6 #variável do módulo de resistência plástico - m^3



#Elementos finitos - Reações e deslocamentos

E = 210 * 10 ** 9 #módulo de elasticidade do aço em Pa

#Elemento 1 - asna1

a1 = E * arpilar / h
b1 = 12 * E *inypilar / h**3
c1 = 6 * E * inypilar / h**2
d1 = 4 * E * inypilar / h
e1 = 2 * E *inypilar / h

alfa1 = 90 * mt.pi / 180

l1 = mt.cos(alfa1)
m1 = mt.sin(alfa1)

t1 = np.matrix([[l1, m1, 0, 0, 0, 0],
                [-m1, l1, 0, 0, 0, 0],
                [0, 0 , 1, 0, 0, 0],
                [0, 0, 0, l1, m1, 0],
                [0, 0, 0, -m1, l1, 0],
                [0 , 0, 0, 0, 0, 1]])


k1local = np.matrix([[a1, 0, 0, -a1, 0, 0],
                     [0, b1, c1, 0, -b1, c1],
                     [0, c1, d1, 0, -c1, e1],
                     [-a1, 0, 0, a1, 0, 0],
                     [0, -b1, -c1, 0, b1, -c1],
                     [0, c1, e1, 0, -c1, d1]])

invt1 = np.matrix.transpose(t1)

k1global = np.linalg.multi_dot([invt1, k1local, t1])

#Elmento 2 - asna 1

a2 = E * arasna / lasna
b2 = 12 * E *inyasna / lasna**3
c2 = 6 * E * inyasna / lasna**2
d2 = 4 * E * inyasna / lasna
e2 = 2 * E *inyasna / lasna

alfa2 = (int(alfa) * mt.pi) / 180

l2 = mt.cos(alfa2)
m2 = mt.sin(alfa2)

t2 = np.matrix([[l2, m2, 0, 0, 0, 0],
                [-m2, l2, 0, 0, 0, 0],
                [0, 0 , 1, 0, 0, 0],
                [0, 0, 0, l2, m2, 0],
                [0, 0, 0, -m2, l2, 0],
                [0 , 0, 0, 0, 0, 1]])

k2local = np.matrix([[a2, 0, 0, -a2, 0, 0],
                     [0, b2, c2, 0, -b2, c2],
                     [0, c2, d2, 0, -c2, e2],
                     [-a2, 0, 0, a2, 0, 0],
                     [0, -b2, -c2, 0, b2, -c2],
                     [0, c2, e2, 0, -c2, d2]])

invt2 = np.matrix.transpose(t2)

k2global = np.linalg.multi_dot([invt2, k2local, t2])

#Elmento 3 - asna 2

a3 = E * arasna / lasna
b3 = 12 * E *inyasna / lasna**3
c3 = 6 * E * inyasna / lasna**2
d3 = 4 * E * inyasna / lasna
e3 = 2 * E *inyasna / lasna

alfa3 = (-alfa * mt.pi) / 180

l3 = mt.cos(alfa3)
m3 = mt.sin(alfa3)

t3 = np.matrix([[l3, m3, 0, 0, 0, 0],
                [-m3, l3, 0, 0, 0, 0],
                [0, 0 , 1, 0, 0, 0],
                [0, 0, 0, l3, m3, 0],
                [0, 0, 0, -m3, l3, 0],
                [0 , 0, 0, 0, 0, 1]])

k3local = np.matrix([[a3, 0, 0, -a3, 0, 0],
                     [0, b3, c3, 0, -b3, c3],
                     [0, c3, d3, 0, -c3, e3],
                     [-a3, 0, 0, a3, 0, 0],
                     [0, -b3, -c3, 0, b3, -c3],
                     [0, c3, e3, 0, -c3, d3]])

invt3 = np.matrix.transpose(t3)

k3global = np.linalg.multi_dot([invt3, k3local, t3])

#Elmento 4 - pilar 2

a4 = E * arpilar / h
b4 = 12 * E *inypilar / h**3
c4 = 6 * E * inypilar / h**2
d4 = 4 * E * inypilar / h
e4 = 2 * E *inypilar / h

alfa4 = -(90 * mt.pi/180)

l4 = mt.cos(alfa3)
m4 = mt.sin(alfa3)

t4 = np.matrix([[l4, m4, 0, 0, 0, 0],
                [-m4, l4, 0, 0, 0, 0],
                [0, 0 , 1, 0, 0, 0],
                [0, 0, 0, l4, m4, 0],
                [0, 0, 0, -m4, l4, 0],
                [0 , 0, 0, 0, 0, 1]])

k4local = np.matrix([[a4, 0, 0, -a4, 0, 0],
                     [0, b4, c4, 0, -b4, c4],
                     [0, c4, d4, 0, -c4, e4],
                     [-a4, 0, 0, a4, 0, 0],
                     [0, -b4, -c4, 0, b4, -c4],
                     [0, c4, e4, 0, -c4, d4]])

invt4 = np.matrix.transpose(t4)

k4global = np.linalg.multi_dot([invt4, k4local, t4])


kportico = np.matrix([[k1global[0,0], k1global[0,1], k1global[0,2], k1global[0,3], k1global[0,4], k1global[0,5], 0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [k1global[1,0], k1global[1,1], k1global[1,2], k1global[1,3], k1global[1,4], k1global[1,5], 0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [k1global[2,0], k1global[2, 1], k1global[2, 2], k1global[2, 3], k1global[2, 4], k1global[2, 5], 0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [k1global[3, 0], k1global[3, 1], k1global[3, 2], k1global[3, 3]+k2global[0, 0], k1global[3, 4] + k2global[0, 1], k1global[3, 5] + k2global[0, 2], k2global[0, 3], k2global[0, 4], k2global[0, 5], 0, 0, 0, 0, 0, 0],
                      [k1global[4, 0], k1global[4, 1], k1global[4, 2], k1global[4, 3]+k2global[1, 0], k1global[4, 4] + k2global[1, 1], k1global[4, 5] + k2global[1, 2], k2global[1, 3], k2global[1, 4], k2global[1, 5], 0, 0, 0, 0, 0, 0],
                      [k1global[5, 0], k1global[5, 1], k1global[5, 2], k1global[5, 3]+k2global[2, 0], k1global[5, 4] + k2global[2, 1], k1global[5, 5] + k2global[2, 2], k2global[2, 3], k2global[2, 4], k2global[2, 5], 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, k2global[3, 0], k2global[3, 1], k2global[3, 2], k2global[3, 3] + k3global[0, 0], k2global[3, 4] + k3global[0, 1], k2global[3, 5] + k3global[0, 2], k3global[0, 3], k3global[0, 4], k3global[0, 5], 0, 0, 0],
                      [0, 0, 0, k2global[4, 0], k2global[4, 1], k2global[4, 2], k2global[4, 3] + k3global[1, 0], k2global[4, 4] + k3global[1, 1], k2global[4, 5] + k3global[1, 2], k3global[1, 3], k3global[1, 4], k3global[1, 5], 0, 0, 0],
                      [0, 0, 0, k2global[5, 0], k2global[5, 1], k2global[5, 2], k2global[5, 3] + k3global[2, 0], k2global[5, 4] + k3global[2, 1], k2global[5, 5] + k3global[2, 2], k3global[2, 3], k3global[2, 4], k3global[2, 5], 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, k3global[3, 0], k3global[3, 1], k3global[3, 2], k3global[3, 3] + k4global[0, 0], k3global[3, 4] + k4global[0, 1], k3global[3, 3] + k4global[0, 2], k4global[0, 3], k4global[0, 4], k4global[0, 5]],
                      [0, 0, 0, 0, 0, 0, k3global[4, 0], k3global[4, 1], k3global[4, 2], k3global[4, 3] + k4global[1, 0], k3global[1, 4] + k4global[1, 1], k3global[4, 3] + k4global[1, 2], k4global[1, 3], k4global[1, 4], k4global[1, 5]],
                      [0, 0, 0, 0, 0, 0, k3global[5, 0], k3global[5, 1], k3global[5, 2], k3global[5, 3] + k4global[2, 0], k3global[5, 4] + k4global[2, 1], k3global[5, 3] + k4global[2, 2], k4global[2, 3], k4global[2, 4], k4global[2, 5]],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0, k4global[3, 0], k4global[3, 1], k4global[3, 2], k4global[3, 3], k4global[3, 4], k4global[3, 5]],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0, k4global[4, 0], k4global[4, 1], k4global[4, 2], k4global[4, 3], k4global[4, 4], k4global[4, 5]],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0, k4global[5, 0], k4global[5, 1], k4global[5, 2], k4global[5, 3], k4global[5, 4], k4global[5, 5]]])

kporticoinv = np.linalg.inv(kportico)

",,,,,"['\npython', 'array', 'matriz\n']"
547979,Identificar palavra repetida em uma lista QtableWidget Pyqt5 /Pyside,"
estou tentando fazer uma funcao que vai rodar uma coluna com 50 linhas e identifique se contem uma palavra repetida e tentei com a seguinte funcao:
def verifica_descricao_repetida(self):
    (""em execucao"")
    def verificas():
        while True:
            for i in range(50):
                sleep(0.1)
                try:
                    lista = self.tablejaneiro_4.item(i,3).text()
                    palavra = 'CARTAO'
                    if palavra in lista > 1:
                        print(""palavra repetida"")
                        #faz alguma função
                        
                except:
                    print(""NAO LOCALIZADO PALAVRA REPETIDA"")
            print(""tentativa"",i)    
    thread = threading.Thread(target=verificas)
    thread.start()

o estranho é que ele sempre executa o print do except com a mesma quantidade de strings repetidas da coluna. e sempre cai no print(""NAO LOCALIZADO PALAVRA REPETIDA"")
",,,,,"['\npython', 'pyqt-5', 'pyqt', 'pyqt-4', 'pyside\n']"
547947,"pyinstaller não resolve o import do win32file, mas resolve os outros imports","
tenho os seguintes imports
import os, shutil
import win32file
from tkinter import *
from tkinter import ttk
from string import ascii_uppercase as upc
quando executo o .py funciona mas quando eu rodo o .exe dá o seguinte erro:
Traceback (most recent call last):
File ""game_install.py"", line 2, in 
ImportError: DLL load failed while importing win32file: Não foi possível encontrar o módulo especificado.
","
Eu mesmo resolvi.
Reinstalei o python com a opção para todos os usuários
","
            -5
        ",,,"['\npython', 'import\n']"
547937,como usar o on_raw_reaction_add para dar cargos no discord?,"
estou tentando fazer com que o bot entregue um cargo para quem reagir, mandando 👍 em uma mensagem, mas sempre da erro na hora de dar esse cargo a alguém, aqui o código:
@commands.Cog.listener()
async def on_raw_reaction_add(self, payload):
    emoji = payload.emoji.name
    guild = self.client.get_guild(payload.guild_id)
    member = payload.member
    if emoji == '👍':
        role = discord.utils.get(guild.roles, name='adm')
        await payload.member.add_roles(guild, member.id, role, reason='adm')

",,,,,"['\npython', 'discord.py\n']"
547932,Acessar servidor sem usuário root,"
Fala galera,
sou no em python e estou precisando de uma ajuda.
Estou utilizando o paramiko para fazer atualizações em vários servidores CentOs,porém estou encontrando dificuldades. Para não utilizar o usuário root criei um novo, porém ao aplicar o comando sudo -i para ter permissão de root e realizar autenticação não acontece nada no script.
# Importando do Paramiko (Acesso SSH)
import paramiko

import datetime
agora = datetime.datetime.now()

# Dados de acesso aos servidores
ip = '10.6.248.1'  # Servidor de teste

# Usuário e senha de acesso aos Servidores
usuario = 'teste_ssn'  # Usuário de acesso
senha = 'Teste@123'  # Senha de acesso

print('\n',3*'\t',70*'-','\n',3*'\t',2*'\t','Atualização de Servidores Linux', agora, '\n',3*'\t',70*'-',2*'\n')

print(34*'-','Servidor de Teste',34*'-')

# Criando a conexão SSH com o servidor de teste

ssh = paramiko.SSHClient()
ssh.load_system_host_keys()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh.connect(ip, username=usuario, password=senha)


stdin, stdout, stderr = ssh.exec_command('sudo fdisk -l\n')
stdin.write('Teste@123\n')
stdin.flush()
print (stdout.readlines())

# Encerrando a conexão SSH com servidor de Teste

ssh.close()

Saída do Script
             ---------------------------------------------------------------------- 
                     Atualização de Servidores Linux 2022-03-28 12:37:26.285950 
             ---------------------------------------------------------------------- 


---------------------------------- Servidor de Teste ----------------------------------


[]


---------------------------------- Servidor Finalizado ---------------------------------- 

",,,,,"['\npython', 'ssh\n']"
547903,no module named requests,"
Recentemente fui tentar instalar e importar o modulo requests do python e tive a seguinte mensagem
''' no modulo named requests'''
Obs: Tenho python 3 e pip instalados
","
Você está utilizando um ambiente virtual como venv ou algo do tipo? Se sim, você pode não ter instalado dentro do seu ambiente virtual.
Caso, você não esteja utilizando, pode ser que você tenha instalado a biblioteca de requests da forma errada.
Você pode tentar instalar das seguintes formas:
python -m pip install requests
ou
python3 -m pip install requests
ou
pip3 install requests - aqui você deve usar pip ou pip3 dependendo da versão que você estiver utilizando.
","
            0
        ",,,"['\npython', 'pip\n']"
547896,Python: procura e comparação de valores em Dicionários,"
O meu projeto envolve duas fontes de dados. Pra ser simples, vamos dizer duas planilhas. Ambas com cinco linhas, com Id e valor.
No cenário real, seria uma planilha .xlsx e uma consulta SQL.
id valor          id valor
5   10            1   20
1   20            2   50
2   50            5   0
4   100           3   150
3   150           4   100

Leio elas com ""read_excel"" e transformo as planilhas em dicionário com o ""to_dict"" da biblioteca ""pandas"".
No cenário real, as planilhas não serão do mesmo tamanho, estariam tudo misturadas.
Então dentro de um loop, como posso fazer com que o python procure o id da planilha1 dentro da planilha2 e compare o valor das duas planilhas?Ele identificaria se o id ""5"" está na planilha2, e se sim, compararia o valor da planilha1 e planilha2.
Se for igual, ""printa"" a linha comparada da planilha1.
Tenho ideias como vai ser o meu output final, tipo uma nova coluna booleana na 1ª planilha, mas eu só estou empacado na comparação mesmo.
Se tiver outra maneira de fazer isso, me avise.
import pandas as pds

file = ('planilha 1.xlsx')
df = pds.read_excel(file)
file2 = ('planilha 2.xlsx')
df2 = pds.read_excel(file2)

planilha1 = df.to_dict(orient='records')
planilha2 = df2.to_dict(orient='records')

","
Não ficou claro na pergunta mas pelo escopo que você trouxe não há motivos ou necessidade de transformar os DataFrames carregados em dicionários, é possível resolver tudo isso diretamente com o Pandas :)
Para que tu consiga verificar as linhas que possuem a id e valor iguais sem perder informação eu usaria o .merge por id para unir as tabelas e criaria uma coluna booleana que assinala onde o valor é igual entre elas, desta forma:
#Carregar os dados
df1 = pd.DataFrame({'id' : [5,1,2,4,3],
               'valor': [10,20,50,100,150]})

df2 = pd.DataFrame({'id' : [1,2,5,3,4],
               'valor': [20,50,0,150,100]})

#Fazer a união entre os DaTaFrames
new_df = df1.merge(df2, on=['id'])
#Criar a coluna booleana que marca as linhas iguais
new_df = new_df.assign(is_equal = new_df['valor_x'].eq(new_df['valor_y']))
new_df.head()
#saida:

    id  valor_x valor_y is_equal
0   5   10      0       False
1   1   20      20      True
2   2   50      50      True
3   4   100     100     True
4   3   150     150     True

Agora se o que você busca é apenas as ocorrências que são iguais, é só moditficar o .merge para bater em ambas as colunas do DataFrame
new_df = df1.merge(df2, on=['id', 'valor'])
new_df.head()
#saida:

    id  valor
0   1   20
1   2   50
2   4   100
3   3   150

Se a ideia é preservar todas ocorrências da primeira planilha e verificar quais linhas são iguais a segunda, você pode fazer o .merge passando os parâmetros  how = ""LEFT"" e indicator = True
new_df = df1.merge(df2, on=['id', 'valor'], how = 'left', indicator = True)
new_df.head()
#saida
    id  valor   _merge
0   5   10      left_only
1   1   20      both
2   2   50      both
3   4   100     both
4   3   150     both

Mais informações sobre o comando .merge podem encontradas na documentação
","
            1
        ",,,"['\npython', 'pandas', 'comparação', 'planilhas\n']"
547884,get_loc return self._range.index(new_key),"
PERGUNTA
Por que meu código da esse erro, alguém poderia me ajudar?
CÓDIGO
import pandas as pd

#faz a leitura do arquivo excel Dados
dados = pd.read_excel(r""C:\Users\RCAMINA\Desktop\Dados.xlsx"")

#define 2 indexadores, linha (row) e coluna (col)
row = 1
col = 0

#faz um loop que roda o código enquanto o index linha for diferente de !9999
while row != 9999:
        #define um contador i
        i = 1
        #pede para o usuario digitar o ID
        ID = str(input(""Passe a carteirinha no leitor: ""))
         #Enquanto o contador for menor ou igual ao indexador row, ele ira ver se o ID que o usuario digitou ja esta na tabela
        while i <= row:
            if ID == dados.loc[i,""ID""] :
                print(""Usuario ja cadastrado!"")
                #Se tiver ele printa a frase a cima e sai do loop
                break
            else:
                #se nao soma um ao contador, para que possa comparar o ID fornecido com o ID da linha seguinte da tabela
                i += 1
        #se o contador for maior que row, ele ira cadastrar o ID na tabela e pedir o nome para associar a ele
        if i > row:
            dados.loc[row,col+1] = ID
            nome = str(input(""Digite seu nome: ""))
            l = nome.lower()
            x = l.title()
            dados.loc[row,col] = x
            row += 1
            print(""Obrigado, %s, seus dados foram cadastrados com sucesso!"" %x)
        #ve se o usuario quer continuar a usar o codigo
        w = str(input(""Digite (s) se deseja continuar e (n) se deseja parar: ""))
        p = w.lower()
        if p == ""n"":
             break

RESULTADO
runfile('C:/Users/RCAMINA/.spyder-py3/CODIGOS/COLETA_DE_DADOS.py', wdir='C:/Users/RCAMINA/.spyder-py3/CODIGOS')

Passe a carteirinha no leitor: 5DBEF04B
Traceback (most recent call last):

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexes\range.py"", line 385, in get_loc
    return self._range.index(new_key)

ValueError: 1 is not in range


The above exception was the direct cause of the following exception:

Traceback (most recent call last):

  File ""C:\Users\RCAMINA\.spyder-py3\CODIGOS\COLETA_DE_DADOS.py"", line 23, in <module>
    if ID == dados.loc[i,""ID""] :

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexing.py"", line 925, in __getitem__
    return self._getitem_tuple(key)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexing.py"", line 1100, in _getitem_tuple
    return self._getitem_lowerdim(tup)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexing.py"", line 838, in _getitem_lowerdim
    section = self._getitem_axis(key, axis=i)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexing.py"", line 1164, in _getitem_axis
    return self._get_label(key, axis=axis)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexing.py"", line 1113, in _get_label
    return self.obj.xs(label, axis=axis)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\generic.py"", line 3776, in xs
    loc = index.get_loc(key)

  File ""C:\Users\RCAMINA\Anaconda3\lib\site-packages\pandas\core\indexes\range.py"", line 387, in get_loc
    raise KeyError(key) from err

KeyError: 1

",,,,,"['\npython', 'excel', 'pandas', 'dataset\n']"
547881,Qual a melhor biblioteca em Python para apresentar relatórios e gráficos em uma empresa? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada 8 dias atrás.




                        Melhore esta pergunta
                    



Bom dia, galera!
Estou precisando apresentar um relatório gerencial, e gostaria de contruir em Python com gráficos e Dashboards!
Poderiam indicar as melhores bibliotecas em Python?
Obrigada!=)
",,,,,"['\npython', 'flexdashboard\n']"
547868,"Python, Selenium - Não consigo abrir o navegador. estou montando o código com funções. OBS: sem ultilizar as funções (def), o código funciona OK [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 8 dias atrás.




                        Melhore esta pergunta
                    



from selenium import webdriver
from selenium.webdriver.firefox.options import Options

def Set_Browser():
    browser_set = {}

    browser_set['os_used']= str(input(""your opering system: ""))#definir qual o sistema operacional
    browser_set['browser_used']= str(input(""your browser: "")) #definir qual o navegador
    u= input(""do you want use your browser profile? [y/n]  "")#usar perfil no navegador
    
    if u in 'y':
        browser_set['profile']= True
        browser_set['profile_path']= input(""Your profile browser path: "")#definir qual o diretorio do perfil (usar balão de ajudar para encontrar o dir)
    elif u in 'n':
        browser_set['profile']= False        
    u= input(""do you want show the browsers windows? [y/n]  "")#definir mode headless
    
    if u in 'y':
        browser_set['u_headless']= False
    elif u in 'n':
        browser_set['u_headless']= True
   
    browser_set['roll_time']= int(input('how long does roll taken? [min]  '))#definir qual o intervalo de tempo dos ""rolls""       
    return browser_set

def Init_Browser():
    my_options= Options()
    my_options.headless= user_browser_set['u_headless']

    if user_browser_set['profile']:
        browser_profile= webdriver.FirefoxProfile(user_browser_set['profile_path'])
        browser= webdriver.Firefox(options=my_options, firefox_profile=browser_profile)
    
    browser= webdriver.Firefox(options=my_options)
    return browser

user_browser_set= Set_Browser()
drive= Init_Browser()
drive.get('https://google.com')

",,,,,"['\npython', 'funções', 'lógica', 'selenium', 'selenium-webdriver\n']"
547859,Trocar o interpretador Python no VSCode,"

Gostaria de alterar o interpretador para utilizar o ambiente virtual, atualmente está em git. Alguém sabe?
",,,,,"['\npython', 'git', 'visual-studio-code', 'virtualenv\n']"
547828,Como acessar parametro de classe Python,"
Bom dia amigos,
Estou fazendo uma script para uma GUI com o Tkinter para um projeto de gerador de senha. Criei inicialmente duas classe: uma que cria o container principal (myApp) e outra que cria o primeiro Frame da tela (Frame1). Agora precisa criar uma segundo Frame (Frame2) logo abaixo do top porém preciso acessar um parametro da classe Frame1 dentro da classe Frame2 e não estou conseguindo fazer.
from tkinter import *
from geradorSenha import *

class Frame1(LabelFrame):
    def __init__(self, container):
        super().__init__(container)
        self.config(text=""Escolha seu tipo de senha"", width=400,
                    height=100)
        self.columnconfigure(0, minsize=400)
        self.grid(row=0, padx=10)

        self.var = IntVar()

        self.Rb1 = Radiobutton(self, text=""Somente letras"",
                               variable=self.var, value=1)
        self.Rb1.grid(column=0, row=0, sticky=W)

        self.Rb2 = Radiobutton(self, text=""Somente números"",
                               variable=self.var, value=2)
        self.Rb2.grid(column=0, row=1, sticky=W)

        self.Rb3 = Radiobutton(self, text=""Letras mais números"",
                               variable=self.var, value=3)
        self.Rb3.grid(column=0, row=2, sticky=W)

        self.Rb4 = Radiobutton(self, text=""Letras mais caracteres especiais"",
                               variable=self.var, value=4)
        self.Rb4.grid(column=0, row=3, sticky=W)

        self.Rb5 = Radiobutton(self, text=""Letras, caracteres especiais e números"",
                               variable=self.var, value=5)
        self.Rb5.grid(column=0, row=4, sticky=W)

        self.escolha_button = Button(self, text='Escolha')
        self.escolha_button.grid(column=0, row=5, pady=5)
        self.escolha_button.config(command=self.escolha)

    def escolha(self):
        return self.var.get()


class Frame2(LabelFrame):
    def __init__(self, container):
        super().__init__(container)
        self.config(text=""Frame 2"", width=200,
                    height=100)
        self.columnconfigure(1, minsize=200)
        self.etiqueta = Label(self, text=Frame1.escolha) #QUERO PEGAR O PARAMETRO DA CLASSE FRAME1 AQUI
        self.etiqueta.grid(column=0, row=1)
        self.grid(row=1)


class myApp(Tk):
    def __init__(self):
        super().__init__()
        self.title(""Gerador de Senhas"")
        self.geometry(""420x400"")


myGui = myApp()
frame1 = Frame1(myGui)
frame2 = Frame2(myGui)
myGui.mainloop()

","
Você tem duas classes Frame1 e Frame2, se você deseja acessar um parâmetro do Frame1 dentro do Frame2, nesse caso do teu código é necessário passar no momento da criação do Frame2, exemplo:
Primeiro você define que a Classe Frame2 vai receber um novo parâmetro, nesse caso com nome parametro_que_voce_deseja.
class Frame2(LabelFrame):
    def __init__(self, container, parametro_que_voce_deseja):
        super().__init__(container)
        self.parametro_que_voce_deseja = parametro_que_voce_deseja
        # Resto do código aqui

No momento da criação do Frame2, você passa o parametro_que_voce_deseja (do Frame1) para dentro de Frame2.
myGui = myApp()
frame1 = Frame1(myGui)
frame2 = Frame2(myGui, frame1.parametro_que_voce_deseja)
myGui.mainloop()

","
            0
        ",,,"['\npython', 'classes', 'tkinter', 'método', 'gui\n']"
547827,como ocultar um app em Django (python) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 8 dias atrás.




                        Melhore esta pergunta
                    



Segui a documentação oficial e criei um painel admin do django, adicionei outros apps ao painel mas gostaria de ocultar o app admin ou encontrar outra forma de criar um painel admin sem as informações de grupo e usuário.
",,,,,"['\npython', 'django\n']"
547776,"Extrair linha com Split em TXT, dando erro de AttributeError ao printar","
Estou aprendendo POO e preciso entender o porque de nao conseguir extrair uma linha do .txt
Montei o código e na hora de executar a extração ele da erro de attributo, vou mostrar pra facilitar.
Vou mostrar o exercício para ficar mais claro
1. Classe para ler arquivos de texto
Crie a classe ArquivoTexto. Ela deve conter os seguintes atributos:

self.arquivo: Atributo do tipo str com o nome do arquivo;
self.conteudo: Atributo do tipo list onde cada elemento é uma linha do arquivo;
A classe também deve conter o seguinte método:

self.extrair_linha: Método que recebe como parâmetro o número da linha e retorna o seu conteúdo.
Arquivo de música.txt

%%writefile musica.txt
Roda Viva
Chico Buarque

Tem dias que a gente se sente
Como quem partiu ou morreu
A gente estancou de repente
Ou foi o mundo então que cresceu
A gente quer ter voz ativa
No nosso destino mandar
Mas eis que chega a roda viva
E carrega o destino pra lá

Roda mundo, roda-gigante
Roda moinho, roda pião

O tempo rodou num instante
Nas voltas do meu coração
A gente vai contra a corrente
Até não poder resistir
Na volta do barco é que sente
O quanto deixou de cumprir
Faz tempo que a gente cultiva
A mais linda roseira que há
Mas eis que chega a roda viva
E carrega a roseira pra lá

Roda mundo, roda-gigante
Roda moinho, roda pião

agora meu código
class ArquivoTexto(object):

  def __init__(self, arquivo: str):
    self.arquivo = str(arquivo)
    self.conteudo = list(arquivo.readline)
    self.linhas= self._extrairlinha()

    def _extrair_conteudo(self):
      conteudo = None
      with open(file=self.arquivo, mode=""r"", encoding=""utf8"") as arquivo:
        conteudo = arquivo.readlines()
        return conteudo

def extrair_linhas(self, numero_linha: int):
        linha = []
        for linha in self.conteudo():
          conteudo_linha = linha.strip().split(sep=""\n"")
          linha.append(conteudo_linha[numero_linha])
          return


E o restante do exercício:
arquivo_texto = ArquivoTexto(arquivo='musica.txt')

numero_linha = 1
print(arquivo_texto.extrair_linha(numero_linha=numero_linha)) # Roda Viva

numero_linha = 10
print(arquivo_texto.extrair_linha(numero_linha=numero_linha)) # Mas eis que chega a roda viva

Na hora de rodar o print ta dando o seguinte erro:
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-33-85a5fe4a42c0> in <module>()
----> 1 arquivo_texto = ArquivoTexto(arquivo='musica.txt')
      2 
      3 numero_linha = 1
      4 print(arquivo_texto.extrair_linha(numero_linha=numero_linha)) # Roda Viva
      5 

<ipython-input-32-5e0b81ae78cd> in __init__(self, arquivo)
      3   def __init__(self, arquivo: str):
      4     self.arquivo = str(arquivo)
----> 5     self.conteudo = list(arquivo.readline)
      6     self.linhas= self._extrairlinha()
      7 

AttributeError: 'str' object has no attribute 'readline'

",,,,,"['\npython', 'atributos\n']"
547728,Existe uma maneira de deixar esse código menor? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 8 dias atrás.




                        Melhore esta pergunta
                    



sou novo na programação de python (não sei nem os básicos direito) e acabei criando esse código em um exercício:
uftop = []
while True:
    top = ""Choose your pizza toppings""
    top += ""\nWrite 'quit' to exit:""
    user_top = input(top)
    uftop.append(user_top)
    if user_top == 'quit':
        uftop.remove('quit')
        
    if user_top == 'quit':
        break
if len(uftop) >= 1:
    print(uftop)

O objetivo do código seria de você escrever coisas para colocar em uma pizza, e quando você achar que está suficiente é so escrever a palavra quit, desse jeito a lista criada de coisas para colocar na pizza aparecerá na tela. O problema era que quando escrevia 'quit', quit era imprimido na tela mesmo assim, então tive que resolver o problema colocando uma condição em que se quit fosse a palavra, ela não seria adicionada a lista.
Aí surgiu outro problema: A lista era imprimida mesmo vazia. Então coloquei uma condição que se a lista fosse vazia ela não deveria ser imprimida. Gostaria de saber se tem como fazer isso de um jeito mais legivel e curto. Agradeço a ajuda.
","
Olá, seguinte, primeiro de tudo, eu alterei o nome das variáveis para ficar mais legível o código, e a partir disso, faria as seguintes modificações com as devidas explicações:

Colocaria a mensagem padrão fora do loop while para não ficar reescrevendo sem necessidade.

Colocar um if para verificar se a palavra é quit, se for quit então sai do loop (break). Caso seja diferente de quit, ele adiciona em uma lista de pedidos da pizza.

No fim, para não printar a lista vazia, ele verifica se há algum item na lista, se tiver, ele mostra o conteúdo da pizza.


Ficar assim:
lista_de_ingredientes = []
message = ""Choose your pizza toppings \nWrite 'quit' to exit:""
while True:
    novo_ingrediente = input(message)
    if novo_ingrediente == ""quit"":
        break
    else:
        lista_de_ingredientes.append(novo_ingrediente)

if lista_de_ingredientes:
    print(lista_de_ingredientes)

","
            -2
        ",,,"['\npython', 'python-3.x\n']"
547719,Problemas com caminho do arquivo e biblioteca shutil no windows,"
Eu desenvolvi um código que basicamente pega as pastas que estão dentro de um diretório, faz uma cópia delas e as armazena com um nome diferente em um outro diretório chamado recuperados, tudo isso por causa dos nomes que estavam sendo utilizado nas pastas, que tornava horrível a identificação delas. O código é o seguinte:
import os
import shutil
try:
    os.mkdir('recuperados')
except:
    shutil.rmtree('recuperados')
    os.mkdir('recuperados')

for (root, diretorios, arquivos) in os.walk('.'):

    if len(arquivos) > 1:
        for arq in arquivos:
            if '.txt' in arq: break

        try:
            with open(f'{root}{os.sep}{arq}', encoding='utf-8') as arquivo:
                pasta = arquivo.readline()[:19]
                os.mkdir(f'recuperados{os.sep}{pasta}')
        except:
            exit()

        for arq in arquivos:
            shutil.copy(f'{root}{os.sep}{arq}', f'recuperados{os.sep}{pasta}')

Ao rodar esse código no sistema linux, obtive o resultado esperado. Todavia, no windows, ocorreram erros tanto na utilização da biblioteca shutil, como no caminho do arquivo. Segue os erros:
    Traceback (most recent call last):
  File ""c:\Users\souza\Documents\Ignorância Zero - Exercícios\aula_113\organizador.py"", line 4, in <module>
    os.mkdir('recuperados')
FileExistsError: [WinError 183] Não é possível criar um arquivo já existente: 'recuperados'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""c:\Users\souza\Documents\Ignorância Zero - Exercícios\aula_113\organizador.py"", line 6, in <module>
    shutil.rmtree('recuperados')
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 739, in rmtree
    return _rmtree_unsafe(path, onerror)
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 612, in _rmtree_unsafe 
_rmtree_unsafe(fullname, onerror)
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 621, in _rmtree_unsafe 
onerror(os.rmdir, path, sys.exc_info())
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 619, in _rmtree_unsafe
    os.rmdir(path)
FileNotFoundError: [WinError 2] O sistema não pode encontrar o arquivo especificado: 'recuperados\\Aulas Python - 106 '

Esse erro ocorre quando a pasta recuperados já está devidamente criada. Quando ela ainda não existe, o erro é o seguinte:
    Traceback (most recent call last):
  File ""c:\Users\souza\Documents\Ignorância Zero - Exercícios\aula_113\organizador.py"", line 23, in <module>
    shutil.copy(f'{root}{os.sep}{arq}', f'recuperados{os.sep}{pasta}')
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 417, in copy
    copyfile(src, dst, follow_symlinks=follow_symlinks)
  File ""C:\Users\souza\AppData\Local\Programs\Python\Python310\lib\shutil.py"", line 256, in copyfile        
    with open(dst, 'wb') as fdst:
FileNotFoundError: [Errno 2] No such file or directory: 'recuperados\\Aulas Python - 106 \\106.kdenlive'    

",,,,,"['\npython', 'python-3.x\n']"
547706,Abrir uma janela de txt para o usuário com Python,"
Criei um gerador de senha próprio para mim, e coloquei um script para ele salvar a lista de senhas geradas no password.txt . Eu queria alguma forma de que o script abrisse um editor de texto e mostrasse o foi salvo quando terminasse de salvar o arquivo. É possível? Não necessitaria de abrir o editor com texto e mostrando os resultados sendo salvos em tempo real. Apenas que abrisse o editor com o password.txt para o usuário.
import random
import os
list_pass = []
lower_case = 'abcdefghijklmnopqrstuvwxyz'
upper_case = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
nums = '0123456789'
symbols = '[]{}#()*;._-'

while True:
    length = int(input('Enter the length up to 74 or 0 to end: '))
    if length <= 0:
        break
    ans = lower_case + upper_case + nums + symbols
    password = """".join(random.sample(ans,length))
    list_pass.append(password)
    print(f'Password generated: {password}')

txt_generator_answer = str(input('Generate list in a text file? y/n: ')).strip().upper()[0]
while txt_generator_answer not in 'YN':
    txt_generator_answer = str(input('Generate list in a text file? y/n: ')).strip().upper()[0]
if txt_generator_answer == 'Y':
    with open('password.txt','w') as archive:
        for passwords in list_pass:
            archive.write(str(passwords) + '\n')
        print('password.txt generated!')
else:
    pass
os.system(""PAUSE"")

",,,,,"['\npython', 'python-3.x', 'txt\n']"
547703,Mais de um excel em Pandas [duplicada],"






Essa pergunta já tem uma resposta aqui:
                        
                    



Python pandas unindo planilhas que estão dentro de um array

                                (1 resposta)
                            

Fechada 10 dias atrás.



Boa tarde,
Gostaria de saber se alguem poderia me ajudar. Preciso abrir em meu projeto mais de um arquivo .xlsx com a ferramenta read_excel do pandas, mas nao sei a forma correta de fazer isso, pandas e novo pra mim. Os arquivos tem nomes direferentes, porem todos no mesmo diretorio e com o formato .xlsx.
Queria que, na hora de chamar o display(variavel_df) ou print(variavel_df), mostrasse todos os arquivos excel que contem no diretorio.
Alguem conseguiria me ajudar? Consequentemente me ensinar.
","
Se você sabe os arquivos que quer printar e já tem eles carregados em variáveis independentes então pode criar uma variável temporária e nela usar o concat pra unir os conteúdos e depois printá-los de uma vez só. Mais ou menos assim:
import pandas as pd

df1 = pd.read_csv(r""C:...\df1.csv"", encoding='UTF-8')
df2 = pd.read_csv(r""C:...\df2.csv"", encoding='UTF-8')

novo_df = pd.DataFrame()
novo_df = pd.concat([df1, df2])  

print(novo_df)

Mas se você não souber a quantidade de .csv na pasta pode fazer algo do tipo:
import os
import pandas as pd

novo_df = pd.DataFrame()
for x in os.listdir(f""{sua pasta onde estão os arquivos}""):
    novo_df = pd.concat([novo_df, x])  

print(novo_df)

","
            0
        ",,,"['\npython', 'pandas\n']"
547642,Erro no carregamento de modelo Spacy,"
Estou tentando carregar um modelo NER já treinado, que estava carregando normal até hoje, mas estou  recebendo o seguinte erro, seja importando o modelo treinado, seja importando pt_core_news_lg:
nlp4 = spacy.load('/content/gdrive/My Drive/spacy_NER4')
ValueError: Cannot create vectors table with dimension 0.
If you're using pre-trained vectors, are the vectors loaded?
Estou no Google Colab, seguindo as instalações:
!pip install spacy==2.3.4
!python -m spacy download pt_core_news_lg
Quando importo o meu modelo, gera esse erro. Alguém teria uma dica ou solução para esse problema?
Se eu instalar o spacy-nightly, gera outro erro:
OSError: [E053] Could not read config.cfg from /content/gdrive/My Drive/spacy_NER4/config.cfg
Entretanto, ao carregar o pt_core_news_lg, ele carrega normal
","
Resolvi o problema mudando de conta, fazendo o backup dos modelos para outra conta no colab. Por enquanto, essa foi a maneira que achei para resolver isso
","
            -2
        ",,,['\npython\n']
547604,"Alguem consegue me explicar porque o 'u' no range, quando eu faço u-=1 ele conta no debug e quando vai pro range ele sobe de 1 pra 3 [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 10 dias atrás.




                        Melhore esta pergunta
                    



    for u in range(5):
      posicao_atual=lista[i][u] 
      if posicao_atual=='0':
        distancia+=1
      elif posicao_atual=='B' or posicao_atual=='A' or posicao_atual=='C' or posicao_atual=='D' :
        visitadas.append(lista[i][u]) 
        i-=1
        u-=1```

","
Isso acontece porque o for simplesmente itera na sequência, então, independente da operação que você fizer com o 'u', quando o for voltar para o início ele simplesmente vai pegar o próximo elemento que estava na sequência. Então como você falou, em certo momento da execução do seu programa temos:
u == 2

E você realiza a seguinte operação:
u -= 1

Essa operação de fato faz com que o u vire 1 naquele momento. Todavia, não altera o próximo elemento da sequência, que continua sendo 3 e, portanto, o próximo a ser atribuído ao valor de u. Se você quiser uma estrutura que tenha esse efeito teria que ser utilizado o while, visto que ele não itera sobre uma sequência, e sim sobre uma variável de controle. Então, transformando esse código em while:
u = 0
while u < 5:
    posicao_atual=lista[i][u] 
    if posicao_atual=='0':
        distancia+=1
    elif posicao_atual=='B' or posicao_atual=='A' or posicao_atual=='C' or 
        posicao_atual=='D' :
        visitadas.append(lista[i][u]) 
        i-=1
        u-=1

    u += 1

Nesse caso, o código de fato surtiria o efeito que você estava esperando.
Adendo:
Isso faria com que o código na próxima iteração do while utilizasse o u como sendo 2, visto que somamos 1 no final. Se quiser que o u seja 1, é só adicionar um:
continue

na linha seguinte a
u -= 1

Isso vai pular direto para a próxima iteração, sem realizar o:
u += 1

Você pode encontrar mais informações sobre o uso do for e do while clicando aqui.
","
            1
        ",,,['\npython\n']
547564,shadow Selenium and CSS python,"
Boa tarde pessoal, sou iniciante total em programação e estou fazendo algumas automações e travei em uma que esta usando shadow e não tenho conhecimento suficiente para resolver este problema. Se puderem me ajudar eu agradeço!

Segue códigos que já tentei e não consegui selecionar o nome ""DE SEGS LTDA""
Tentativa 1 Selecionar via Xpath (Sem Sucesso)
wait_and_click(navegador, '(//ion-label[@id=""ion-rb-0-lbl""])1')
Tentativa 2 Selecionar via css (Sem Sucesso) Pode ser que eu não esteja usando da forma certa, sou novato total com isso
element = navegador.find_element_by_css_selector(""label[for='ion-rb-0']"")
element.click()
Tentativa 3 Selecionar via shadow e css (Sem Sucesso) Pode ser que tb não esteja usando da forma certa, sou novato total com isso
shadow = Shadow(navegador)
element = shadow.find_element(""label[for='ion-rb-0']"")
element.click()
Já gostaria de agradecer a todos pelo tempo e a paciência destinada aqui na plataforma e que sempre me ajuda muito, com muitos aprendizados!!! Valeu pessoal
",,,,,"['\npython', 'css', 'selenium\n']"
547554,Alguém sabe o Por que deste erro?,"
NameError                                 Traceback (most recent call last)
C:\Users\GABRIE~1.BAS\AppData\Local\Temp/ipykernel_8496/4220264176.py in <module>
----> 1 pyautogui.alert ('O COMPUTADOR VAI ENTRAR EM OPERAÇÃO, POR FAVOR NÃO UTILIZE')
      2 
      3 pyautogui.press('win')
      4 
      5 time.sleep (2)

NameError: name 'pyautogui' is not defined

Estou usando jupyter para fazer uma macro, e quando dou run ele apresenta essa mensagem.
",,,,,"['\npython', 'pyautogui\n']"
547535,Uma variável pode receber uma condicional?,"
Gostaria de fazer com que a variável pvs recebesse uma condicional em que se o valor de outra variável (resist) multiplicado por 5 e, se e o valor da variável resist for zero, a variável pvs receba 1.

","
Você precisa definir primeiro o resultado antes de declarar o teste lógico! Exemplo literal de teste lógico: O personagem tem 1 ponto de vida if resist == 0 (Caso contrário) else O personagem tem X pontos de vida.
Exemplo do código:
resist = 5
pvs = print(""O personagem possui 1 ponto de vida"") if resist == 0 else print(
    f'O personagem possui {resist * 5} pontos de vida')

","
            -3
        ",,,"['\npython', 'python-3.x\n']"
547520,Comando de bloquear a tela com timer no Windows!,"
Estou querendo bloquear o Windows com o timer de 1 hora em específico. Encontrei um código, mas não entendi bem o que ele faz (Foi em JAVA).
Minhas Dúvidas são:
1 - É possível criar um comando/programa que bloqueie o Windows com um time ? (Pode ser em qualquer linguagem)
2 - Se for possível tem como colocar uma senha Aleatória ou específica para desbloquear ?
Sendo essa, uma senha diferente do computador.
import java.awt.Robot;
import javax.swing.JFrame;


public class WindowsSecurity implements Runnable 
{
  private JFrame frame;
  private boolean running;

  public WindowsSecurity(JFrame yourFrame)
  {
    this.frame = yourFrame;
    new Thread(this).start();
  }

  public void stop()
  {
     this.running = false;
  }

  public void run() {
    try {
      this.terminal.getParentFrame().setAlwaysOnTop(true);
      this.terminal.getParentFrame().setDefaultCloseOperation(0);
      kill(""explorer.exe""); // Kill explorer
      Robot robot = new Robot();
      int i = 0;
      while (running) {
         sleep(30L);
         focus();
         releaseKeys(robot);
         sleep(15L);
         focus();
         if (i++ % 10 == 0) {
             kill(""taskmgr.exe"");
         }
         focus();
         releaseKeys(robot);
      }
      Runtime.getRuntime().exec(""explorer.exe""); // Restart explorer
    } catch (Exception e) {

    }
  }

  private void releaseKeys(Robot robot) {
    robot.keyRelease(17);
    robot.keyRelease(18);
    robot.keyRelease(127);
    robot.keyRelease(524);
    robot.keyRelease(9);
  }

  private void sleep(long millis) {
    try {
      Thread.sleep(millis);
    } catch (Exception e) {

    }
  }

  private void kill(String string) {
    try {
      Runtime.getRuntime().exec(""taskkill /F /IM "" + string).waitFor();
    } catch (Exception e) {
    }
  }

  private void focus() {
    this.frame.grabFocus();
    this.frame.requestFocus();
  }
}

",,,,,"['\njava', 'python', 'windows\n']"
547519,Como fazer um sorteio infinito de nomes em PYTHON? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 11 dias atrás.




                        Melhore esta pergunta
                    



Estou tentando mas ele só está printando a primeira letra do último nome escolhido. Gostaria que sorteasse um nome aleatório.
    import random
    alunos = 0
    sorteio = 0
    while alunos != '0':
alunos = str(input(
    'Vamos descobrir quem é o aluno sorteado. (digite 0 para parar o sorteio). Digite o nome da pessoa: '))
      if alunos != '0':
    sorteio = random.choice(alunos)
    print(sorteio, 'é o sorteado!!!')

","
import random
alunos = []
novo_aluno = ""Ninguem""
sorteado = ""sortudo""
while novo_aluno != ""0"":
    novo_aluno = str(input('Vamos descobrir quem é o aluno sorteado. (digite 0 para parar o sorteio). Digite o nome da pessoa: '))
    if novo_aluno == '0':
        break
    alunos.append(novo_aluno)
if alunos != []:
    sorteado = random.choice(alunos)
    print(f""{sorteado} foi o sorteado"")
else:
    print(""Lista vazia"")

","
            0
        ","
import random
alunos = []
sorteio = 0
while True:
    aluno = str(input('Vamos descobrir quem é o aluno sorteado. (digite 0 para parar o sorteio). Digite o nome da pessoa: '))
    if aluno == '0':
        break
    else:
        alunos.append(aluno)
if alunos != '0':
    sorteio = random.choice(alunos)
    print(sorteio, 'é o sorteado!!!')


Teste2

import random
alunos = []
sorteio = 0
c = -1
while True:
    aluno = str(input('Vamos descobrir quem é o aluno sorteado. (digite 0 para parar o sorteio). Digite o nome da pessoa: '))
    if aluno == '0':
        break
    else:
        alunos.append(aluno)
        c += 1

if alunos != '0':
    sorteio = alunos[random.randint(0, c)]
    print(sorteio, 'é o sorteado!!!')

Tente usar o método randint.O jeito usado antes estava funcionando aqui.
","
            -1
        ",['\npython\n']
547517,Filas em python: Como executar uma função especifica de acordo com o menor tempo gerado por uma variável,"
Essa é apenas uma amostra do código. Em geral o código vai gerar filas de atendimento, passar 1 pessoa da fila para um dos 4 atendentes disponiveis e após finalizar puxa outro cliente para atender. Esse ciclo se repete até todos os clientes serem atendidos.
O problema em questão é, como eu faço para realizar os 4 atendimentos simultanameanete, e na ordem em quem for terminando primeiro.
Por exemplo: Se o atendente 1 teve o menor tempo de atendimento, ele vai puxar para lista dele um novo cliente, enquanto os outros 3 atendentes ainda estão fazendo o atendimento anterior. E cada função de atendimento vai ser executada conforme o funcionario vai ficando livre. Sem uma ordem pre-determinada
   #Gerar tempo de atendimento aleatoriamente
tempo_atendimento_1 = random.randint(5, 15)
tempo_atendimento_2 = random.randint(5, 15)
tempo_atendimento_3 = random.randint(5, 15)
tempo_atendimento_4 = random.randint(5, 15)    

#Realizar os atendimentos
def conclusao_atendimento():
    global tempo_atendimento_1
    global tempo_atendimento_2
    global tempo_atendimento_3
    global tempo_atendimento_4
    global atendente_1_finalizado, atendente_2_finalizado, atendente_3_finalizado, atendente_4_finalizado
    global hora
    global atender_1
    global atender_2
    global atender_3
    global atender_4
    global passaParaLista

    #Realiza o atendimento 1 e apos finalizar puxa um novo cliente para atender
    def atender_1():
        global passarNovamente

        while True:
            novos_clientes()
            if len(atendente_1) < 1:
                passarNovamente = fila.pop()
                atendente_1.append(passarNovamente)
            else:
                print(f""Tempo de atendimento (1): {tempo_atendimento_1} minutos"")
                time.sleep(tempo_atendimento_1)
                atendido = atendente_1.pop()
                finalizados.append(atendido)
                hora += tempo_atendimento_1
                atendente_1_finalizado += 1
                print(f""Atendente 1 terminou total de: {atendente_1_finalizado}"")
                print(f""Atendente 1: {atendente_1} "")
                print(f""Fim de atendimento: {finalizados}\n "")
                print("""")
                passarNovamente = fila.pop()
                atendente_1.append(passarNovamente)
                print(f""Atendente 1 atualizado: {atendente_1} "")

                break

    #Realiza o atendimento 2 e apos finalizar puxa um novo cliente para atender
    def atender_2():
        global passarNovamente

        while True:
            novos_clientes()
            if len(atendente_2) < 1:
                passarNovamente = fila.pop()
                atendente_2.append(passarNovamente)
            else:
                print(f""Tempo de atendimento (2): {tempo_atendimento_2} minutos"")
                time.sleep(tempo_atendimento_2)
                atendido = atendente_2.pop()
                finalizados.append(atendido)
                hora += tempo_atendimento_2
                atendente_2_finalizado += 1
                print(f""Atendente 2 terminou total de:{atendente_2_finalizado}"")
                print(f""Atendente 2: {atendente_2} "")
                print(f""Fim de atendimento: {finalizados}\n "")
                print("""")
                passarNovamente = fila.pop()
                atendente_2.append(passarNovamente)
                print(f""Atendente 2 atualizado: {atendente_2} "")
                break

    #Realiza o atendimento 3 e apos finalizar puxa um novo cliente para atender
    def atender_3():
        global passarNovamente

        while True:
            novos_clientes()
            if len(atendente_3) < 1:
                passarNovamente = fila.pop()
                atendente_3.append(passarNovamente)
            else:
                print(f""Tempo de atendimento (3): {tempo_atendimento_3} minutos"")
                time.sleep(tempo_atendimento_3)
                atendido = atendente_3.pop()
                finalizados.append(atendido)
                hora += tempo_atendimento_3
                atendente_3_finalizado += 1
                print(f""Atendente 3 terminou total de:{atendente_3_finalizado}"")
                print(f""Atendente 3: {atendente_3} "")
                print(f""Fim de atendimento: {finalizados}\n "")
                print("""")
                passarNovamente = fila.pop()
                atendente_3.append(passarNovamente)
                print(f""Atendente 3 atualizado: {atendente_3} "")
                break

    #Realiza o atendimento 4 e apos finalizar puxa um novo cliente para atender
    def atender_4():
        global passarNovamente

        while True:
            novos_clientes()
            if len(atendente_4) < 1:
                passarNovamente = fila.pop()
                atendente_4.append(passarNovamente)
            else:
                print(f""Tempo de atendimento (4): {tempo_atendimento_4} minutos"")
                time.sleep(tempo_atendimento_4)
                atendido = atendente_4.pop()
                finalizados.append(atendido)
                hora += tempo_atendimento_4
                atendente_4_finalizado += 1
                print(f""Atendente 4 terminou total de:{atendente_4_finalizado}"")
                print(f""Atendente 4: {atendente_4} "")
                print(f""Fim de atendimento: {finalizados}\n "")
                print("""")
                passarNovamente = fila.pop()
                atendente_4.append(passarNovamente)
                print(f""Atendente 4 atualizado: {atendente_4} "")
                break
    
    passaParaLista()

",,,,,"['\npython', 'python-3.x', 'array', 'random\n']"
547464,Fazer com que o Python remova um termo específico de uma str que será adicionada a um arquivo .txt,"
A proposta desse código é adicionar termos em uma mesma linha de um arquivo plain text, sem repetir termos.
Consegui chegar até o seguinte código sozinho:
lista = []

x = int(input('Digite 1 para começar o programa e 0 para pará-lo: '))

if x == 1:

    while x == 1:
        y = input('Digite o nome que você gostaria de adicionar e 0 quando quiser parar: ')
        if y == '0':
            break
        lista.append(y)

        for z in range(len(lista)):
            if lista[z] == '':
                del(lista[z])

    listaOrdem = sorted(lista)

    with open('arquivolista.txt', 'a') as arquivo:
        arquivo.write(str(listaOrdem))
    with open('arquivolista.txt', 'r') as arquivo:
        print(arquivo.read())

else:
    print('O programa foi encerrado.')


Agora, preciso de uma forma para fazer com que o Python identifique quais termos já estão presentes no arquivo e não os adicione novamente. Também preciso que o output saia organizado, sendo assim, preciso que os colchetes extras sejam apagados.

Exemplo:

Quando rodo o programa pela primeira vez e adiciono os termos:


""Gorila"", ""Cachorro"" e ""Girafa""


O arquivo plain text fica:


['Cachorro', 'Girafa', 'Gorila']


Quando rodo pela segunda vez e adiciono os termos:


""Leão"", ""Girafa"", ""Pantera"" e ""Baleia""


O arquivo plain text fica:


['Cachorro', 'Girafa', 'Gorila']['Baleia', 'Girafa', 'Leão', 'Pantera']


Preciso fazer com que o termo 'Girafa' não se repita e que os colchetes extras sejam apagados, para que o output final seja:


['Baleia', 'Cachorro', 'Girafa', 'Gorila', 'Leão', 'Pantera']

","
Bem cara, existem algumas formas legais de se fazer isso e eu procurei fazer da forma que abordasse mais assuntos para ajudar você a estudar mais coisas.
lista = []

x = int(input('Digite 1 para começar o programa e 0 para pará-lo: '))

if x == 1:

    while x == 1:
        y = input(
            'Digite o nome que você gostaria de adicionar e 0 quando quiser parar: ')
        if y == '0':
            break
        lista.append(y)

        for z in range(len(lista)):
            if lista[z] == '':
                del(lista[z])

    with open('arquivolista.txt', 'a+') as arquivo:
        # Primeiro vamos ler o que já temos
        dados = arquivo.read()
        # Apos isso vamos retirar os [] e '
        dados = dados.replace('[', '').replace(']', '')
        dados = dados.replace(""'"", """").replace('""', '')
        # Agora vamos separar os termos em uma list
        if dados == '':
            dados = []
        else:
            dados = dados.split(', ')
        # o extends add os termos de uma lista em uma já existente
        dados.extend(lista)
        # Agora vem a parte legal, vamos usar um set que nada mais é que um conjunto
        # e assim como na matemática conjutos não contém repetições
        dados = set(dados)
        # Agora é só salvar! E re-transformar em uma lista
        listaOrdem = sorted(list(dados))
    # Abrindo ele no modo W ele apaga tudo que existe
    with open('arquivolista.txt', 'w') as arquivo:
        arquivo.write(str(listaOrdem))

    with open('arquivolista.txt', 'r') as arquivo:
        print(arquivo.read())

else:
    print('O programa foi encerrado.')


","
            -1
        ",,,"['\npython', 'lista', 'arquivo', 'txt', 'python-requests\n']"
547418,Como ler arquivos CSV usando python e plotar gráficos,"
Gostaria de saber como faço para chamar dois arquivos em csv, ler e plotar um gráfico com as medias dos dois arquivos csv.
","
Olá. Maria,
você pode usar a biblioteca csv
Para usá-la use import csv

import csv

#Aqui você vai abrir seu arquivos
csv1 = open(""pasta_do_arquivo\nome.csv"", ""r"")
csv2 = open(""pasta_do_arquivo\nome2.csv"", ""r)

#Para ler os arquivos csv
leitor_csv1 = csv.reader(csv1, delimiter="""")#nao esqueça de colocar qual o tipo de delimitador entre cada célula se é , ; :
leitor_csv2 = csv.reader(csv2, delimiter="""")

#para obter cada linha use um for
for linha in leitor_csv1:
    print(linha)#se tiver mais de um dado em uma linha, ele retorna uma lista


Se quiser saber mais, acesso documentação
https://docs.python.org/3/library/csv.html
Para plotar gráficos você pode usar matplotlib
para instalarpip install matplotlib
Na documentação do matplotlib tem uma série de tutoriais que como fazer cada tipo de gráfico
Documentação MatplotLib
","
            -2
        ",,,"['\npython', 'csv', 'gráfico\n']"
547402,INTEGRAÇÃO API COM VBA,"
sou gestor financeiro e estou implantando um sistema pra uso exclusivo do setor, porém, este irá depender da troca de informações com o ERP que já utilizamos.
O problema é que nosso ERP atual utiliza a linguagem VBA (bem antigo), e no mercado, a maioria desses sistemas não possuem a opção do VBA para conversação direta via API.
Conheço pouco de programação e gostaria de entender se existe alguma forma de integrar o VBA com uma linguagem mais atual, seja direta ou indiretamente.
Abaixo está o link com as APIs e linguagens aceitas da ferramenta que estamos implantando:
BomControle
https://documenter.getpostman.com/view/1797561/SWT7BKWo?version=latest
Me salvem! hahahah
",,,,,"['\npython', 'api', 'vba', 'conversão-de-tipo', 'integração\n']"
547379,Como salvar PDF em banco e ter opção para o usuário baixar?,"
Olá, estou com o seguinte problema:
Em um site o usuário entra com login e senha, ja está feito essa parte. Eu preciso guardar PDF's em um banco de dados ou então salva-los em um diretório e usar o banco de dados apenas com o caminho deles. Nessa aplicação o usuario, quando logado, teria como baixar o seu certificado, sem ter acesso a certificados de outros usuários, claro.
Eu gostaria de usar python para isso.
Não tenho experiência em projetos assim, seria meu primeiro. Eu tenho apenas essa noção do que fazer, mas não sei como implementar ou que ferramentas posso utilizar. Poderiam me ajudar nisso e dar dicas de material de estudo, vídeos, documentação e etc pra eu fazer essa aplicação web?
","
Crie um bucket no s3, ou outro serviço de bucket. Crie o endpoint para salvar o arquivo nesse bucket. Será retornado um link para acesso ao arquivo (tenha certeza que seja um id unico, GUID ou um outro hash). No seu banco crie uma relacao tipo usuario x link do s3.
Crie outro endpoint para fazer o download deste arquivo (apenas o usuario dono tem acesso)
Material que pode ajudar -> s3 aws, authenticação usando token. Se for usar Django, o proprio tem biblioteca para autenticar.
","
            0
        ",,,"['\npython', 'banco-de-dados', 'django', 'reportlab\n']"
547374,Não consigo deixar a leitura da serial aberta,"
Quando eu coloco o programa para conectar direto ao abrir a leitura da serial funciona legal, mas como preciso selecionar a porta COM antes de conectar, a leitura da serial não funciona.(estou começando agora na programação, é o meu primeiro programação)
import tkinter
import threading
from tkinter import ttk
import serial
import serial.tools.list_ports
from tkinter import *


janela = Tk()
janela.geometry(""800x680"")
janela.resizable(0, 0)
janela.title('Testador de Sirenes')


class App:
    def __init__(self):
        self.serial = serial.Serial()
        self.serial.baudrate = 115200

    def connect_serial(self):
        self.serial.port = combobox.get()
        self.serial.open()
        if self.serial.isOpen():
            print('Conectado!')
        else:
            print('Houve algum problema!')


    def read_serial(self):
        if self.serial.isOpen():
            for i in range(10000):
                dataRead = self.serial.read(16).hex()
                display = tkinter.Label(janela, text=dataRead, bg='white', relief='groove')
                display.place(width=770, height=340, x=15, y=10)

    def send_serial(self):
        if self.serial.isOpen():
            dataSend = input('digite o comando hex')
            self.serial.write(dataSend.encode())

# funções dos botões
    def som_um(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF1\x48\x4E'
            self.serial.write(dataSend)

    def som_dois(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF3\xC9\x8F'
            self.serial.write(dataSend)

    def som_tres(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF7\xC8\x4C'
            self.serial.write(dataSend)

    def som_quatro(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xFF\xC9\x8A'
            self.serial.write(dataSend)

    def desligar_saidas(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\x00\x89\xCA'
            self.serial.write(dataSend)

    def ligar_giroled(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\x10\x88\x06'
            self.serial.write(dataSend)

    def saidas_ativas(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x01\x00\x00\x00\x0F\x7C\x0E'
            self.serial.write(dataSend)

    def verificar_temperatura(self):
        if self.serial.isOpen():
            dataSend = b'\x03\x04\x31\x10\x00\x01\x3F\x11'
            self.serial.write(dataSend)

    def verificar_bateria(self):
        if self.serial.isOpen():
            dataSend = b'\x03\x04\x31\x04\x00\x01\x7F\x15'
            self.serial.write(dataSend)

    def tensao_corrente_id3(self):
        if self.serial.isOpen():
            dataSend = b'\x03\x04\x31\x0C\x00\x02\xBE\xD6'
            self.serial.write(dataSend)

    def tensao_corrente_id4(self):
        if self.serial.isOpen():
            dataSend = b'\x04\x04\x31\x0C\x00\x02\xBF\x61'
            self.serial.write(dataSend)

    def tensao_corrente_pv(self):
        if self.serial.isOpen():
            dataSend = b'\x03\x04\x31\x00\x00\x02\x7E\xD5'
            self.serial.write(dataSend)

    def valor_memoria(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x03\x00\x00\x00\x01\x84\x0A'
            self.serial.write(dataSend)

    def ligar_carga_id3(self):
        if self.serial.isOpen():
            dataSend = b'\x03\x05\x00\x02\xFF\x00\x2C\x18'
            self.serial.write(dataSend)

    def ligar_carga_id4(self):
        if self.serial.isOpen():
            dataSend = b'\x04\x05\x00\x02\xFF\x00\x2D\xAF'
            self.serial.write(dataSend)

    def ligar_carga_id4(self):
        if self.serial.isOpen():
            dataSend = b'\x04\x05\x00\x02\xFF\x00\x2D\xAF'
            self.serial.write(dataSend)

    def getTextInputUm(self):
        result = entrada_Um.get(""1.0"", ""end"").encode()
        self.serial.write(result)

    def getTextInputDois(self):
        result = entrada_Dois.get(""1.0"", ""end"")
        self.serial.write(result)

    def getTextInputTres(self):
        result = entrada_Tres.get(""1.0"", ""end"")
        self.serial.write(result)

    def getTextInputQuatro(self):
        result = entrada_Quatro.get(""1.0"", ""end"")
        self.serial.write(result)

    def getTextInputCinco(self):
        result = entrada_Cinco.get(""1.0"", ""end"")
        self.serial.write(result)

    def getTextInputSeis(self):
        result = entrada_Seis.get(""1.0"", ""end"")
        self.serial.write(result)


ser = App()
# seleção de porta COM
portlist = [port.device for port in serial.tools.list_ports.comports()]
portlist_var = tkinter.StringVar(value=portlist)
combobox = ttk.Combobox(janela, values=portlist)
combobox.place(width=80, height=23, x=580, y=364)
combobox.current(1)
# conectar porta COM
get_Com = tkinter.Button(janela, height=1, width=10, text=""Conectar"", command=ser.connect_serial)
get_Com.place(width=129, height=30, x=662, y=360)
# input comando
entrada_Um = tkinter.Text(janela, height=10)
entrada_Dois = tkinter.Text(janela, height=10)
entrada_Tres = tkinter.Text(janela, height=10)
entrada_Quatro = tkinter.Text(janela, height=10)
entrada_Cinco = tkinter.Text(janela, height=10)
entrada_Seis = tkinter.Text(janela, height=10)
# posição do input comando
entrada_Um.place(width=300, height=30, x=360, y=440)
entrada_Dois.place(width=300, height=30, x=360, y=480)
entrada_Tres.place(width=300, height=30, x=360, y=520)
entrada_Quatro.place(width=300, height=30, x=360, y=560)
entrada_Cinco.place(width=300, height=30, x=360, y=600)
entrada_Seis.place(width=300, height=30, x=360, y=640)
# botões dos comandos
get_Um = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputUm)
get_Dois = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputDois)
get_Tres = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputTres)
get_Quatro = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputQuatro)
get_Cinco = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputCinco)
get_Seis = tkinter.Button(janela, height=1, width=10, text=""Enviar"", command=ser.getTextInputSeis)
# posição dos botões dos comandos
get_Um.place(width=129, height=30, x=662, y=440)
get_Dois.place(width=129, height=30, x=662, y=480)
get_Tres.place(width=129, height=30, x=662, y=520)
get_Quatro.place(width=129, height=30, x=662, y=560)
get_Cinco.place(width=129, height=30, x=662, y=600)
get_Seis.place(width=129, height=30, x=662, y=640)
# botões da sirene
button1 = Button(text=""Som 1"", width=30, command=ser.som_um)
button2 = Button(text=""Som 2"", width=30, command=ser.som_dois)
button3 = Button(text=""Som 3"", width=30, command=ser.som_tres)
button4 = Button(text=""Som 4"", width=30, command=ser.som_quatro)
button5 = Button(text=""Desligar Saídas"", width=30, command=ser.desligar_saidas)
button6 = Button(text=""Apenas o Giroled"", width=30, command=ser.ligar_giroled)
button7 = Button(text=""Saídas Ativas "", width=30, command=ser.saidas_ativas)
button8 = Button(text=""Temperatura "", width=30, command=ser.verificar_temperatura)
button9 = Button(text=""Verificar Bateria "", width=30, command=ser.verificar_bateria)
#button10 = Button(text=""Tensão da Bateria "", width=30, command=ser.tensao_bateria)
button11 = Button(text=""Tensão e Corrente ID3 "", width=30, command=ser.tensao_corrente_id3)
button12 = Button(text=""Tensão e Corrente ID4 "", width=30, command=ser.tensao_corrente_id4)
button13 = Button(text=""Tensão e Corrente PV "", width=30, command=ser.tensao_corrente_pv)
button14 = Button(text=""Valor na Memória "", width=30, command=ser.valor_memoria)
button15 = Button(text=""Ligar a Carga ID3 "", width=30, command=ser.ligar_carga_id3)
button16 = Button(text=""Ligar a Carga ID4 "", width=30, command=ser.ligar_carga_id4)
# posição dos botões
button1.place(width=129, height=30, x=14, y=360)
button2.place(width=129, height=30, x=14, y=400)
button3.place(width=129, height=30, x=14, y=440)
button4.place(width=129, height=30, x=14, y=480)
button5.place(width=129, height=30, x=14, y=520)
button6.place(width=129, height=30, x=14, y=560)
button7.place(width=129, height=30, x=14, y=600)
button8.place(width=129, height=30, x=14, y=640)
button9.place(width=129, height=30, x=155, y=360)
#button10.place(width=129, height=30, x=155, y=400)
button11.place(width=129, height=30, x=155, y=440)
button12.place(width=129, height=30, x=155, y=480)
button13.place(width=129, height=30, x=155, y=520)
button14.place(width=129, height=30, x=155, y=560)
button15.place(width=129, height=30, x=155, y=600)
button16.place(width=129, height=30, x=155, y=640)
threading.Thread(target=ser.read_serial).start()
janela.mainloop()
'''

",,,,,['\npython\n']
547352,App travando ao clicar em fechar,"
Sou iniciante em python e criei um ""bot"" pra não ficar afk em um jogo. Ele basicamente só clica de um lado pro outro repetidamente até eu dar um comando (F12) pra parar.
O problema é que encontrei dois erros nele:
1 - Quando o app abre se eu apertar F12 antes de apertar pra iniciar, nada acontece.
2 - Se abro o app e em seguida clico no X pra fechar, ele trava.
Então só está funcionando se abro o app, clico em iniciar e depois aperto F12.
Não sei o que fazer agora!
import pyautogui
from PySimpleGUI import  PySimpleGUI as sg
from pynput import keyboard
import threading
import os
import keyboard

# layout
sg.theme('Reddit')
layout = [
    [sg.Button('Iniciar', size=(20,4),key='Iniciar'),sg.Button('F12 PARA SAIR', size=(20,4),key='Parar')]
]

# janela
janela = sg.Window('Anti AFK Lost Ark by Eliel',layout, keep_on_top=True)

# ler os eventos
eventos, valores = janela.read()

def verificar():
        while True:
            if keyboard.is_pressed('f12'):
                os._exit(0)

def rodar():
    while True:
        if eventos =='Iniciar':
            pyautogui.rightClick(1452, 584)
            pyautogui.sleep(2)
            pyautogui.rightClick(361, 500)
            pyautogui.sleep(2)


threading.Thread(target=verificar).start()
threading.Thread(target=rodar).start()

",,,,,"['\npython', 'pyautogui\n']"
547346,identificando provedor de email na lista,"
acredito que não exista pergunta irrelevante então lá vai:
Estou começando a estudar python para data analytics e me deparei com um desafio de ler um .csv com alguns emails e separa os provedores deste arquivo em variaveis. A lógica eu até consigo compreender, mas por falta de conhecimento, estou apanhando para a sintaxe da linguagem.
Segue a minha tentativa muito falha: https://drive.google.com/drive/folders/1u2sGyeOw9rZlxStlslE3euot8j1zn_i3?usp=sharing
",,,,,"['\npython', 'sistema-de-arquivos\n']"
547342,TypeError: Pessoa.showAllData() missing 1 required positional argument: 'self',"
Erro: TypeError: Pessoa.showAllData() missing 1 required positional argument: 'self'
Eu estou tendo esse problema repetidas vezes do meu código e não to conseguindo entender o por quê. Por qual motivo ele ta me pedindo o self se ele é interno? é por que estou usando set/get?
from datetime import date

class Pessoa:

    currentYear = date.today()
    currentYear = currentYear.strftime(""%d/%m/%Y"")

    def __init__(self, name, dateOfBirth, height):
        self.__name = name
        self.__dateOfBirth = dateOfBirth
        self.__height = height


    def setName(self, name):
        self.__name = name

    def setDateOfBirth(self, dateBirth):
        self.__dateOfBirth = dateBirth

    def setHeight(self, height):
        self.__height = height


    def getName(self):
        return self.__name

    def getDateOfBirth(self):
        return self.__dateOfBirth

    def getHeight(self):
        return self.__height


    def showAllData(self):
        return print(f""Dados da Pessoa:\nNome: {self.__name}\nData de Nascimento: {self.__dateOfBirth}\nAltura: {self.__height}"")

#   def ageCalculator(self, ):

pessoa1 = Pessoa(""Jolie"", ""16/10/1998"", 1.59)
Pessoa.showAllData()

","
Você está chamando o método showAllData através da classe Pessoa, mas o que você provavelmente queria fazer é chamá-lo pela instância pessoa1.
Mudando o código da última linha, temos o output:
print(pessoa1.showAllData())

# output:
# Dados da Pessoa:
# Nome: Jolie
# Data de Nascimento: 16/10/1998
# Altura: 1.59

O Python até permite usar a classe para chamar um método, mas nesse caso você precisa providenciar a instância manualmente - experimente com:
print(Pessoa.showAllData(pessoa1))

# mesmo output

","
            3
        ",,,"['\npython', 'self\n']"
547340,Como eu consigo retirar uma string de uma coluna no pandas comparando com uma tabela,"
Eu tenho dois datasets: 1) tem uma coluna de endereço completo; 2) tem apenas as cidades da Argentina.
Eu preciso identificar qual é a cidade do segundo dataset que também está no primeiro. E quando encontrar, copiar para uma nova coluna.
Já tentei com .find() e até mesmo com lambda, porém não consegui nenhum resultado, abaixo tem uma imagem de como está o meu dataset com o endereço completo.

",,,,,"['\npython', 'python-3.x', 'pandas', 'numpy\n']"
547331,Como posso alterar as labels de um gráfico no matplotlib?,"
Meu código:
dados.boxplot(column='NU_NOTA_LC', by = ""TP_LINGUA"",vert = 0)
plt.xlabel('Nota')
plt.ylabel('Linguas')


Como faço para alterar a legenda de 0 e 1 para respectivamente Inglês e Espanhol?
","
Você pode usar a função plt.yticks() tanto para pegar quanto para setar as posições (ticks) e os rótulos (labels) do eixo Y (existe também a função análoga plt.xticks() para o eixo X).
Portanto, podemos chamar a função uma vez para pegar as posições, e uma segunda vez para setar os rótulos nas mesmas posições mas mudando o seu texto. Segue exemplo:
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Dados simulados
dados = pd.DataFrame({
    'NU_NOTA_LC': np.random.normal(loc=500, scale=100, size=1000),
    'TP_LINGUA': np.random.choice([0, 1], size=1000),
})
dados.boxplot(column='NU_NOTA_LC', by='TP_LINGUA', vert=0)
plt.xlabel('Nota')
plt.ylabel('Linguas')

# Código relevante para a pergunta
ticks, labels = plt.yticks()
plt.yticks(ticks, labels=['Inglês', 'Espanhol'])

plt.tight_layout()  # apenas pra facilitar a visualização
plt.show()

Figura gerada:

","
            0
        ",,,"['\npython', 'matplotlib', 'seaborn\n']"
547276,Python - dataframe não aparece se tiver em função,"
Fala pessoal, bom dia. Estou criando um projeto, onde eu importo dois arquivos excel, trato eles cada um em sua função.
Ao criar uma terceira função para unir os dados da função 1 e função 2, o sistema me apresenta uma msg dizendo que não localizou a variável.
exemplo de código:

import pandas as pd

def ler_tratar_planilha_gerada():
    arquivo01 = pd.read_excel(""Resultado.xlsx"")
    dataframe1 = pd.DataFrame(arquivo01, columns=['Cod_Barra_De', 'Nome_Barra_De','Cod_Barra_Para', 'Nome_Barra_Para', 'Num_NC', 'MW'])

def carregar_planilha_agregadora():
    arquivo_agregador = pd.read_excel(""agregador_rede_basica.xlsx"", sheet_name='Linhas')
    dataframe2 = pd.DataFrame(arquivo_agregador, columns=['Circuito ID', 'Barra_de', 'Barra_para', 'NumCirc','nome barra de', 'nome barra para', 'Concatenado', 'Agregador', 'Subestação'])

def juncao_planilhas():
    dataframe3 = pd.merge(dataframe1, dataframe2[['Concatenado', 'Agregador']], on=['Concatenado'], how='left')


A função juncao_planilhas não consegue enxergar o dataframe1 e o dataframe2.
Essas funções estão resumidas.
Tem alguma forma para fazer a ultima função conseguir visualizar as variaveis anteriores?
Obrigado desde já.
",,,,,"['\npython', 'pandas\n']"
547256,Como remover a quebra de linha automática ao adicionar uma imagem no Word via Python DOCX?,"
Sempre que colocamos uma nova imagem no word via DOCX ela cria um parágrafo pra si.
gostaria de saber se há uma forma de cancelar essa ação natural do múdulo DOCX para que eu possa colocar uma imagem ao lado da outra (como na imagem)?
from docx import Document
import os

document = Document()

temporary_folder = r'C:\Users\wjunior.DIGICORNER\Desktop\imagens aqui\temporary_folder'

for root, dirs, files in os.walk(temporary_folder):
    for file in files:
        document.add_picture(os.path.join(temporary_folder, file))      
        
document.save('demonstracao.docx')


Sendo essa temporary_folder uma pasta com imagens qualquer.


","

Entendendo imagens e outras formas
Conceitualmente, os documentos do Word têm duas camadas , uma camada de texto
e uma camada
de desenho . Na camada de texto, os objetos de texto fluem da esquerda
para a direita e de cima para baixo, iniciando uma nova página quando
a anterior for preenchida. Na camada de desenho, objetos de desenho,
chamados de formas , são colocados em posições arbitrárias. Às vezes,
eles são chamados de formas flutuantes.
Uma imagem é uma forma que pode aparecer no texto ou na camada de
desenho. Quando aparece na camada de texto, é chamado de forma
embutida ou, mais especificamente, de imagem embutida .
As formas inline são tratadas como um caractere de texto grande (um
glifo de caractere ). A altura da linha é aumentada para acomodar a
forma e a forma é quebrada em uma linha na qual caberá na largura,
assim como o texto. Inserir texto na frente dele fará com que ele se
mova para a direita. Muitas vezes, uma imagem é colocada em um
parágrafo sozinha, mas isso não é obrigatório. Ele pode ter texto
antes e depois dele no parágrafo em que é colocado.
No momento da escrita, python-docxsuporta apenas imagens em linha.
Imagens flutuantes podem ser adicionadas. Se você tiver um caso de uso
ativo, envie uma solicitação de recurso no rastreador de problemas. O
Document.add_picture()método adiciona uma imagem especificada ao final
do documento em um parágrafo próprio. No entanto, cavando um pouco
mais fundo na API, você pode colocar texto em ambos os lados da imagem
em seu parágrafo, ou em ambos.
Fonte: documentação do python-docx 0.8.11

Como visto na documentação se adicionar diretamente uma imagem a um documento essa imagem será adicionada ao final do documento e como a lib não dá suporte a imagens flutuantes essas não podem ser reposicionadas gerando então o comportamento que não quer que ocorra.
Uma solução é manipular os parágrafos e inserir suas imagens dentro dum objeto run:

O objeto parágrafo é o container principal em nível de bloco para conteúdo em um documento ooxml.
O objeto run reside dentro dum paragrafo como um conjunto de objetos contendo propriedades em comum.

Use os métodos:

Document.add_paragraph() para adicionar um paragrafo ao documento.
Paragraph.add_run() para adicionar um run a um paragrafo.
Run.add_picture() para adicionar uma imagem ao respectivo run.

Usando como exemplo essas quatro imagens(img1, img2, img3, img4) e traduzindo isso em código:
from docx import Document
from docx.shared import Inches                   #O módulo só foi utilizado para fazer escalonamento das imagens para que caibam num mesmo parágrafo. 

document = Document()

paragraph = document.add_paragraph()             #Cria um novo parágrafo.
run = paragraph.add_run()                        #Adiciona um run ao parágrafo.

run.add_picture(""dog1.jpg"", width=Inches(1.25))  #Adiciona varias imagens ao parágrafo...
run.add_picture(""dog2.jpg"", width=Inches(1.25)) 
run.add_picture(""dog3.jpg"", width=Inches(1.25)) 
run.add_picture(""dog4.jpg"", width=Inches(1.25)) 
        
document.save('demonstracao.docx')               #Salva o arquivo docx.

Teste o código no Replit
Resultando no documento:

","
            2
        ",,,['\npython\n']
547202,Gerenciar cores das barras de arquivo Excel gerado por Python usando openpyxl,"
Usando um arquivo de excel criado previamente, puxei os seguintes dados para fazer um gráfico:

Eis o código para gerar o gráfico:
import openpyxl
from openpyxl.chart import BarChart, Series, Reference

wb = openpyxl.load_workbook(""02_Excel_data.xlsx"")
olimpiadas = wb['Olimpiadas']

data = openpyxl.chart.Reference(olimpiadas, min_col=5, min_row=2, max_col=5, max_row=7)
categs = openpyxl.chart.Reference(olimpiadas, min_col=1, min_row=2, max_row=7)

chart1 = BarChart()
chart1.type = ""col""
chart1.style = 3

chart1.title = ""Medalhas Olímpicas""

chart1.add_data(data)
chart1.set_categories(categs)
chart1.shape = 0
olimpiadas.add_chart(chart1, ""A10"")
wb.save(""02_Excel_data.xlsx"")

O resultado mesmo alterando o valor de styles foi esse:

Como faço para chegar neste resultado?

",,,,,"['\npython', 'excel', 'openpyxl\n']"
547116,Python | Global Dict Somente um uso,"
Boa noite, estou com uma dificuldade em um dicionário global tenho o seguinte código:
import csv

def fun1():
    global reader
    reader = csv.DictReader(open('teste.csv', encoding=""utf-8-sig""))
    row_count = sum(1 for row in reader)
    print('fun1',row_count)

def fun2():
    for user in reader:
        print('fun2',user)
            
fun1()
fun2()

Dessa forma ele me retorna:
fun1 3


Porém se eu remover as linha de count da fun1 dessa forma:
import csv

def fun1():
    global reader
    reader = csv.DictReader(open('teste.csv', encoding=""utf-8-sig""))

def fun2():
    for user in reader:
        print('fun2',user)
            
fun1()
fun2()


Meu resultado vem como eu esperava, na fun2 retorna meu arquivo CSV.
fun2 {'id': '1', 'nome': 'Nome1'}
fun2 {'id': '2', 'nome': 'Nome2'}
fun2 {'id': '3', 'nome': 'Nome3'}

É Como se meu dict global pudesse ser usada somente uma vez, caso eu coloque o count no inicio da fun2:
import csv

def fun1():
    global reader
    reader = csv.DictReader(open('teste.csv', encoding=""utf-8-sig""))

def fun2():
    row_count = sum(1 for row in reader)
    print('fun2',row_count)
    for user in reader:
        print('fun2',user)
            
fun1()
fun2()


retorna:
fun2 3

E caso eu coloque no fim as linha de count:
import csv

def fun1():
    global reader
    reader = csv.DictReader(open('teste.csv', encoding=""utf-8-sig""))

def fun2():
    for user in reader:
        print('fun2',user)
    row_count = sum(1 for row in reader)
    print('fun2',row_count)
    
fun1()
fun2()


retorna:
fun2 {'id': '1', 'nome': 'Nome1'}
fun2 {'id': '2', 'nome': 'Nome2'}
fun2 {'id': '3', 'nome': 'Nome3'}
fun2 0


Alguém pode me ajudar, vlw galera.
",,,,,"['\npython', 'funções', 'dicionário', 'global\n']"
547095,PYTHON - PROBLEMA COM 3 VETORES,"
Estou penando para fazer um programa que deve ler 2 vetores de 10 posições, e a partir destes criar um terceiro com os seguinte critérios:
1 - Nas posições pares, o programa deve adicionar os valores do vetor 1.
2 - Nas posições ímpares, o programa deve adicionar os valores do vetor 3.
A parte que não estou conseguindo fazer é justamente a parte onde você especifica a posição que o valor vai entrar, segue o código:
vetor1 = []
vetor2 = []
vetor3 = []


for n in range(0, 10):
    valor1 = int(input('digite um valor para o vetor 1: '))
    vetor1.append(valor1)

    valor2 = int(input('digite um valor para o vetor 2: '))
    vetor2.append(valor2)

for numero in vetor1:
    posicao = 0
    while posicao != 18:
    if numero % 2 == 0:
        vetor3.insert(posicao, numero)
        posicao += 2


for numero in vetor2:
   posicao = 1
   while posicao != 19:
   if numero % 2 != 0:
       vetor3.insert(posicao, numero)
       posicao += 2
print(vetor3)

essa foi minha tentativa final de seguir a minha lógica de que para o programa rodar eu precisaria iterar também sobre o valor 'posição' informado no insert, quando eu utilizei o while como está acima o programa não dá erro mas não retorna absolutamente nenhum valor, o programa também não termina, ele fica rodando, rodando, rodando, sem resultado.
eu tentei também utilizar o for, da seguinte forma:
for numero in vetor1:
    if numero % 2 == 0
        for n in range(0, 18, 2)
            vetor3.insert(n, numero)

a minha ideia com isso fazer com que o programa verificasse se o numero era par, e colocasse na posição n, eu fiz com que o range fosse pulando de 2 em 2,partindo do 0, pra adicionar os valores do vetor1 nas posições: 0, 2, 4, 6, 8, 10, 12, 14, 16 e 18, que é o que o programa pede.
No entanto, quando eu rodei esse programa, o resultado foi uma lista gigante, completamente fora do que eu esperava.
","

Fiz de uma maneira um pouco de diferente, veja se é esse mesmo o resultado que você está querendo.
vetores = {""vetor1"":[],""vetor2"":[]}


vezes_que_vai_rodar=3

def input_of_user(vezes_que_vai_rodar):
    for times in range(0,vezes_que_vai_rodar):
        valor1 = int(input('digite um valor para o vetor 1: '))
        vetores['vetor1'].append(valor1)

        valor2 = int(input('digite um valor para o vetor 2: '))
        vetores['vetor2'].append(valor2)

def create_a_array_with_two_differents_arrays(vetores_of_input):
    print(vetores_of_input)
    print(f""Primeiro Array {vetores_of_input['vetor1']}\n Segundo Array {vetores_of_input['vetor2']}"")
    array_ordered=list()

    for vetor1,vetor2 in zip(vetores_of_input[""vetor1""], vetores_of_input[""or2""]):
        print(vetor1,vetor2)
        array_ordered.append(vetor1)
        array_ordered.append(vetor2)
    return array_ordered


input_of_user(vezes_que_vai_rodar)
array_finished:list = 
create_a_array_with_two_differents_arrays(vetores)

print(f""Array terminado e ordenado {array_finished}"")

","
            -3
        ",,,"['\npython', 'for', 'collection\n']"
547042,Printar no terminal a soma de uma coluna em SQL sem erros,"
estou tentando printar uma soma de uma coluna de SQLITE no terminal para eu conseguir manipular esse valor na minha aplicação, porem ele retorna o valor como a foto abaixo:

fica com esses [()] entre os valores, ja tentei da seguinte forma tentar printar sem isso :
        try:
            banco=sqlite3.connect('banco_de_valores.db')
            cursor=banco.cursor()
            cursor.execute(""SELECT SUM (valor) FROM dados "")
            dadoslidos2=cursor.fetchall()
            dadoslidos23 = str(dadoslidos2)
            print(dadoslidos23)

porem retorna a mesma coisa, tem alguma forma de eu conseguir manipular para sair apenas o valor sem parentes e colchetes? obrigado desde já
","
Você está retornando um array de tuplas, para acessar o valor precisa acessar o primeiro elemento do array (que retorna uma tupla), em seguida acessar o primeiro elemento da tupla (que é o valor que você deseja)
print(dadoslidos23[0][0])

","
            0
        ",,,"['\npython', 'sql', 'sqlite', 'pyqt-5', 'pyside\n']"
547012,Matriz de ocorrência dos pares ordenados x e y em Python,"
Olá, tenho um dataframe com as colunas x , y e n, onde n é a quantidade de ocorrência do par ordenado x e y.
import pandas as pd

data = {'x': [1, 2, 3, 1, 2, 1], 'y': [1, 2, 3, 1, 2, 2]}  

# criar DataFrame  
df = pd.DataFrame(data)
ocorrencia = df.groupby(['x', 'y']).size().sort_values(ascending=False)

ocorrencia_df=ocorrencia.to_frame() 

ocorrencia_df.reset_index(inplace=True) 

ocorrencia_df.columns = [ 'x','y','n'] #nomear as colunas

Gostaria de fazer uma matriz assim (coloquei as cores para melhor visualização, onde n é a cor azul, x é amarelo e y é verde), mas não estou conseguindo

E depois de pronta pretendo usar o heatmap para destacar qual que teve a maior ocorrência
Desde já ,a gradeço pela ajuda
","
Para chegar no resultado que você deseja, basta utilizar o método pivot.
Esse método basicamente retorna um dataframe organizado conforme as colunas fornecidas por você.
Exemplo: Seguindo o código a partir do ponto que você parou
import pandas as pd

data = {'x': [1, 2, 3, 1, 2, 1], 'y': [1, 2, 3, 1, 2, 2]}  

df = pd.DataFrame(data)

ocorrencia = df.groupby(['x', 'y']).size().sort_values(ascending=False)

ocorrencia_df=ocorrencia.to_frame() 

ocorrencia_df.reset_index(inplace=True) 

ocorrencia_df.columns = [ 'x','y','n']

print(ocorrencia_df)

# Saída: ocorrencia_df
#    x  y  n
# 0  1  1  2
# 1  1  2  1
# 2  2  2  2
# 3  3  3  1

Aplicando o método pivot no dataframe resultante, obtemos:
ocorrencia_df = ocorrencia_df.pivot(index='y', columns='x', values='n')

print(ocorrencia_df)
# Saída: ocorrencia_df
# x    1    2    3
# y               
# 1  2.0  NaN  NaN
# 2  1.0  2.0  NaN
# 3  NaN  NaN  1.0

Existe outro método bem parecido só que expande ainda mais as possibilidades de se trabalhar com geração de pivô no pandas, é o pivot_table. Recomendo a leitura dos dois métodos, pode ajudar você futuramente em muitas coisas.
Referências:

https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table

","
            1
        ",,,"['\npython', 'pandas', 'matriz', 'contador', 'heatmap.js\n']"
547000,Append de uma lista em um dataframe,"
Estou tentando fazer um append de uma lista em um dataframe no Python
Quero colocar os 6 primeiros números na mesma linha e depois ir adicionando linha por linha, até completar as colunas
Eu tentei gerar os dados para facilitar, abaixo:
import pandas as pd
import random

randomlist = []
for i in range(0,30):
    n = random.randint(1,30)
    randomlist.append(n)

randomlist = [30, 11, 18, 11, 28, 18, 22, 18, 20, 10, 11, 6, 29, 1, 11, 15, 3, 4, 17, 11, 17, 18, 27, 25, 11, 10, 7, 4, 18, 27]

lista_colunas = ['Carro', 'Moto', 'Barco', 'Patinete', 'Mobilete', 'Skate']
lista_index = ['Entre 1 a 5', 'Entre 6 a 10', 'Entre 11 a 15', 'Entre 16 a 20', 'Entre 21 a 25']

Abaixo o resultado desejado:

","
Usando ao DataFrames definido abaixo como base para o exercício mental:
import pandas as pd
import numpy as np

lista_colunas = ['Carro', 'Moto', 'Barco', 'Patinete', 'Mobilete', 'Skate']
lista_index = ['Entre 1 a 5', 'Entre 6 a 10', 'Entre 11 a 15', 'Entre 16 a 20', 'Entre 21 a 25']

df = pd.DataFrame(data=None, index=lista_index, columns=lista_colunas)
print(df)

              Carro Moto Barco Patinete Mobilete Skate
Entre 1 a 5     NaN  NaN   NaN      NaN      NaN   NaN
Entre 6 a 10    NaN  NaN   NaN      NaN      NaN   NaN
Entre 11 a 15   NaN  NaN   NaN      NaN      NaN   NaN
Entre 16 a 20   NaN  NaN   NaN      NaN      NaN   NaN
Entre 21 a 25   NaN  NaN   NaN      NaN      NaN   NaN

Ao trabalhar com DataFrames acesse um grupo de colunas ou linhas pelo índice com pandas.DataFrame.iloc[].
Também considere o uso do Numpy. A função numpy.random.randint() retorna uma ndarray de inteiros aleatórios, no exemplo abaixo é retornada uma matriz de cinco linhas por seis colunas onde cada linha substituirá a linha correspondente do DataFrame:
randomlist = np.random.randint(30, size=(5,6))   #Cria um a matriz de 5 linhas por 6 colunas de inteiros com aleatórios no intervalo [0,30[.
df.iloc[:] = randomlist                          #Substitui linha a linha no df pelas linhas de randomlist
print(df)

              Carro Moto Barco Patinete Mobilete Skate
Entre 1 a 5      12    2     5       16        3     6
Entre 6 a 10     21   24    10        1       13     2
Entre 11 a 15    29   15     8        3        1    10
Entre 16 a 20    17   16     4       21       20    12
Entre 21 a 25    18   10    27       26       26     4

Caso a entrada venha obrigatoriamente de lista, use a função np.array para obter o ndarray de inteiros com a função numpy.split() para quebrar o array em matriz de cinco linhas e seis colunas:
randomlist = np.array([30, 11, 18, 11, 28, 18, 22, 18, 20, 10, 11, 6, 29, 1, 11, 15, 3, 4, 17, 11, 17, 18, 27, 25, 11, 10, 7, 4, 18, 27])
df.iloc[:] = np.split(randomlist, 5)            #Quebra o array de 30 elementos  numa matriz de 5 linhas por 6 colunas.
print(df)

              Carro Moto Barco Patinete Mobilete Skate
Entre 1 a 5      30   11    18       11       28    18
Entre 6 a 10     22   18    20       10       11     6
Entre 11 a 15    29    1    11       15        3     4
Entre 16 a 20    17   11    17       18       27    25
Entre 21 a 25    11   10     7        4       18    27

Caso não queira usar Numpy ou por achar Numpy uma solução overkill ou por simplesmente não gostar do Numpy pode fazer usando compreensão de lista para quebrar a lista em questão a cada seis elementos:
randomlist = [30, 11, 18, 11, 28, 18, 22, 18, 20, 10, 11, 6, 29, 1, 11, 15, 3, 4, 17, 11, 17, 18, 27, 25, 11, 10, 7, 4, 18, 27]
df.iloc[:] = [randomlist[i:i+6] for i in range(0, len(randomlist), 6)]
df

              Carro Moto Barco Patinete Mobilete Skate
Entre 1 a 5      30   11    18       11       28    18
Entre 6 a 10     22   18    20       10       11     6
Entre 11 a 15    29    1    11       15        3     4
Entre 16 a 20    17   11    17       18       27    25
Entre 21 a 25    11   10     7        4       18    27

Teste os exemplos acima no Colab
","
            3
        ","
Uma possível solução é usando dict comprehension (ou ""compreensão de dicionário"") fracionando randomlist em partes iguais de acordo com a quantidade de colunas de lista_colunas.
>>> qtd_linhas = len(randomlist) / len(lista_colunas)
>>> data = { lista_colunas[n] : randomlist[qtd_linhas * n : qtd_linhas * (n + 1)]
               for n in range(qtd_linhas + 1) }
>>> print(data)
{'Barco': [11, 6, 29, 1, 11], 'Carro': [30, 11, 18, 11, 28], 'Moto': [18, 22, 18, 20, 10], 'Patinete': [15, 3, 4, 17, 11], 'Skate': [10, 7, 4, 18, 27], 'Mobilete': [17, 18, 27, 25, 11]}

Para ilustrar melhor a composição desse dicionário, é feito um slice em randomlist de acordo com o valor de n (vai de 0 até 5 neste exemplo) e qtd_linhas (neste exemplo, 5):
# qtd_linhas = 5
# n = 0
randomlist[0:5] # resultado de randomlist[5 * 0 : 5 * (0 + 1)]
# n = 1
randomlist[5:10] # resultado de randomlist[5 * 1 : 5 * (1 + 1)]
# n = 2
randomlist[10:15] # resultado de randomlist[5 * 2 : 5 * (2 + 1)]
.
.
.
# n = 5
randomlist[25:30] # resultado de randomlist[5 * 5 : 5 * (5 + 1)]

Por fim, a criação do dataframe:
>>> pd.DataFrame(data)
   Barco  Carro  Mobilete  Moto  Patinete  Skate
0     11     30        17    18        15     10
1      6     11        18    22         3      7
2     29     18        27    18         4      4
3      1     11        25    20        17     18
4     11     28        11    10        11     27


EDIT: A variável lista_index me passou despercebida quando respondi a pergunta originalmente, portanto em vez da divisão para obter a quantidade de linhas o melhor a fazer seria simplesmente verificar o tamanho dessa lista com:
qtd_linhas = len(lista_index)

Ainda utilizando a variável lista_index, ficou faltando especificar a adição dos índices por linha do dataframe:
df = pd.DataFrame(data)
df.index = lista_index

","
            1
        ","['\npython', 'pandas\n']"
546998,"Por que os eventos não executam as funções, pysimplegui","
'''
import PySimpleGUI as sg
from PIL import Image, ImageTk
import io, base64, glob, shutil, os
sg.theme('DarkAmber')
def new_layout(i):
return [[sg.T(""Divisão: ""), sg.InputText(key=(""-DIV-"", i))]]
def parse_folder(path):
images = glob.glob(f""{path}/.{extensions}"")
def load_images(path, window):
try:
image = Image.open(path)
image.thumbnail((400,400))
photo_img = ImageTk.PhotoImage(image)
window[""image""].update(data=photo_img)
except:
return
def move_photo(divsion):
pass
extensions = [
""jpg"",
""png"",
""jpeg""
]
#ICONE DE PLUS
PLUS_ICO = b''
buffer = io.BytesIO()
imgdata = base64.b64decode(PLUS_ICO)
img = Image.open(io.BytesIO(imgdata))
new_img = img.resize((20, 20))
new_img.save(buffer, format=""PNG"")
img_b64 = base64.b64encode(buffer.getvalue())
#COLUNA BASE
column_layout = [
[sg.T(""Divisão: ""), sg.InputText(key=(""-DIV-"", 0)),
sg.Button(enable_events=True, image_data=img_b64, key=""-plus-"", image_size=(20,20), size=(20,20))]
]
----------- Layouts a serem exibidos -----------
layout1 = [ #ADICIONA DIVISÃO
[sg.Column(column_layout, key='-Column-')],
[sg.Submit(button_text=""OK""), sg.Cancel(button_text=""Cancel"")],
]
layout2 = [ #Seleciona as pastas
[
sg.Text(""Selecione a pasta das fotos: ""), #SELECT FOLDER WHERE ARE THE PHOTOS
sg.Input(size=(25,1), enable_events=True, key='-INP-' ),
sg.FolderBrowse()
],
[
sg.Text(""Selecione a pasta destino: ""), #SELECT WHERE YOU WANT YOUR PHOTOS
sg.Input(size=(25,1), enable_events=True, key=""-folder-""),
sg.FolderBrowse()
],
[
sg.Image(key=""image"")
]
]
----------- Cria um layout atual onde altera com os butões
layout = [
[sg.Column(layout1, key='-COL1-'), sg.Column(layout2, visible=False, key='-COL2-')]
]
window = sg.Window(""Adicionar organizadores"", layout, resizable=True)
aumount_divs = 1
layout = 1
name_of_divs = []
location = 0
while True:
event, values = window.read()
if event in (sg.WIN_CLOSED, 'Exit', 'Cancel'):
break
if event == '-plus-':
if aumount_divs < 5:
window.extend_layout(window['-Column-'], new_layout(aumount_divs))
aumount_divs += 1
    if aumount_divs == 5:
        sg.popup(""Maximo de divisões inseridas"") # MAX OF DIVS ADD
elif event == ""OK"":       
    window[f'-COL{layout}-'].update(visible=False)
    layout = layout + 1 
    window[f'-COL{layout}-'].update(visible=True)
    
    for x in range(0, aumount_divs): #ADD DIVISION LIST
        qnt_divs = values[(""-DIV-""), x]
        for dived in qnt_divs:
            window.extend_layout(window, [[sg.Button(qnt_divs)]])
            name_of_divs.append(qnt_divs)
            name_of_divs[1:]

    if event == ""-folder-"":
        root_path = (values[""-folder-""])          
        for folder in name_of_divs:
            os.mkdir(os.path.join(root_path, str(folder)))

    if event == ""-INP-"":
        images = parse_folder(values[""-INP-""])
        if images:
            load_images(images[0], window)

    print(values[(""-DIV-"", 0)])


print(values, event)

event, values = window.read()
window.close()
'''
Eu gostaria de saber o motivo dos botões que selecionam a pasta e mostram as imagens e o que cria as pastas com os nomes das divisões não executam suas funções?
",,,,,"['\npython', 'python-3.x', 'funções', 'image\n']"
546957,Trabalhando com tuplas no panda e criar um heatmap,"
Eu estou precisando  criar um heatmap desses dados.
Esse código aqui está só como um exemplo de até aonde eu fiz
A ideia desse código é contar todas  as combinações de Nome e Sobrenome e quantas vezes cada tupla (Nome, Sobrenome) se repetem
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from collections import Counter

data = {'Nome': ['Joao', 'Paulo', 'Paulo', 'Joao'], 'Sobrenome': ['Silva','Pereira', 'Silva', 'Silva' ]}  
  
# Create DataFrame  
df = pd.DataFrame(data)
res = df.groupby(['Nome', 'Sobrenome']).size().sort_values(ascending=False)
# até aqui cria um vetor com a tupla Nome SobreNome e uma variavel com o numero de vezes que ocorre cada par existente 

Nesse res, ficam os dados que eu quero que seja feito o heatmap.
mas eu não estou sabendo manipular os dados na tupla, usar o Nome como eixo X e Sobrenome como eixo Y e o contador aparecendo no heatmap
",,,,,"['\npython', 'pandas', 'matplotlib', 'seaborn\n']"
546945,Como tornar um campo obrigatório em um model de acordo com uma condição? - Django,"
Eu possuo o seguinte model:
class Paciente(models.Model):
usuario = models.ForeignKey(Usuario, on_delete=models.CASCADE)
genero = models.IntegerField(choices=GENERO_PACIENTE_CHOICES)
dt_nasc = models.DateField()
responsavel = models.ForeignKey(PacienteResponsavel, on_delete=models.RESTRICT, null=True)

@property
def idade(self):
    return int((datetime.now().date() - self.dt_nasc).days / 365.25)

Meu objetivo é: quando a idade do paciente for inferior a 18, o campo responsavel deve ser preenchido. Como eu poderia fazer essa validação?
","
Você pode utilizar o método clean() no seu form para verificar a condição:
def clean(self):
    cleaned_data = super(NomeDoSeuForm, self).clean()
    field = cleaned_data.get(""field"")
    field2 = cleaned_data.get(""field2"")

    if field == ""xxx"":
        msg = forms.ValidationError(""Esse campo é obrigatóio."")
        self.add_error('field2', msg)

    return cleaned_data

","
            -2
        ",,,"['\npython', 'django\n']"
546938,Python. Como pegar a chave de um dicionário baseado no valor? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 17 dias atrás.




                        Melhore esta pergunta
                    



Tenho a seguinte dúvida:
Gostaria de saber como pegar a chave de um dicionário, dado um valor que obedeça a uma condição, e no final retornar uma lista somente com as chaves e outra lista somente com os valores. Um exemplo da dúvida encontra-se abaixo:
dicionario = {30:2, 31:5, 32:7}
Se por exemplo eu quiser pegar as chaves cujo valor é 5 ou 7, como seria o procedimento?
O resultado esperado deste exemplo seria:
chaves = [31, 32]
valores = [5,7]
","
Você pode iterar pelas chaves do dicionário e verificar se os valores correspondentes às chaves estão dentro dos valores que você quer, usando o método keys:
dicionario = {30:2, 31:5, 32:7}

valores_desejados = [5, 7]

lista_chave_valor = [(chave, dicionario[chave]) for chave in dicionario.keys() if dicionario[chave] in valores_desejados]

chaves = [item[0] for item in lista_chave_valor]
valores = [item[1] for item in lista_chave_valor]

print('chaves: {}'.format(chaves))
print('valores: {}'.format(valores))

Executando o código acima, a saída será:
chaves: [31, 32]
valores: [5, 7]

","
            1
        ",,,"['\npython', 'dicionário\n']"
546923,atributos de imagem (Error The 'image' attribute has no file associated with it),"
Estou desenvolvendo um app para cadastro de usuário, o qual ele terá a opção de postar uma foto de perfil. Porém ao se cadastrar o mesmo fara seu primeiro acesso ao app e ai que ocorre o erro -- O atributo 'image' não tem nenhum arquivo associado a ele --. preciso de uma ajuda na questão. Tentei a implementação de diversas logicas sem sucesso.
Models
class Vendedor(Base, AbstractUser):
    cpf = models.CharField('CPF', max_length=11)
    whatsapp = models.CharField('WhatsApp', max_length=11)
    img_perfil = models.ImageField(blank=True, upload_to='ImagemPerfil/%Y', null=True)

Template
<a href=""{% url 'perfil' %}"">

    {% if not Vendedor.img_perfil %}
        <img src=""{{ user.img_perfil.url }}"" alt=""imagem_de_perfil"" style=""width: 50px; 
         height: 50px"">

    {% else %}
         <img src=""{% static 'image/imgperfil.png' %}"" alt="""">
    {% endif %}

 </a>
                    

",,,,,"['\npython', 'django\n']"
546919,Como criar um array contando os elementos de outro array em python?,"
Por exemplo, eu tenho o seguinte array:
omissoes = [234, 236, 467, 4546, 5667]
e quero fazer um novo array com a quantidade de elementos que tem no array ""omissões""
ficando assim:
quantidade = [1, 2, 3, 4, 5]
Até agora só pensei em fazer algo assim
count = 0
for x in omissoes:
  if x != 0:
    count += 1

mas aparece o exato array e não a contagem
",,,,,['\npython\n']
546914,Comparando indexes de um dataframe baseado em arquivo externo,"
Tenho um dataset de 60 milhões de registros que, mês passado, efetuei um recorte e restaram 45 milhões. Pois bem, pensando que poderia precisar destes 15 milhões um dia, salvei o index destes registros excluídos em um .csv a parte.
O dia chegou e, hoje, estou tentando, sem sucesso, aplicar este arquivo .csv com os index sobre o arquivo de 60 milhões original para gerar um arquivo contendo apenas os registros que foram excluídos na última operação.
Como posso gerar uma nova lista booleana de indexes usando o arquivo original e passando apenas os indexes salvos no arquivo a parte como true? Esta é a estrutura do meu arquivo com os indexes:
0              38424
1               3606
2           60994093
3              23182
4              25694

Entre outras coisas, tentei o seguinte:
new_df = df[df.index == index_excluidos]

P.S. Já converti o index_excluidos para series.
","
Uma alternativa é o método isin do pandas:
import pandas as pd

Simulando os índices dentro do csv
indices = [1,3,4,5,1]

Criando o data frame
coluna = ['a','b','c','d','e','f']
df = pd.DataFrame({'Letras':coluna})

Mostrando o data frame
df






Letras




0
a


1
b


2
c


3
d


4
e


5
f




Utilizando o isin do pandas
df[df['Letras'].index.isin(indices)]






Letras




1
b


3
d


4
e


5
f




Ou simplesmente:
df['Letras'].index.isin(indices)

para retornar um array de True ou False
array([False,  True, False,  True,  True,  True])

Para casos assim o isin geralmente tem uma performance melhor.
","
            1
        ","
Acabou que a resposta era mais siples do que eu imaginava: Precisa usar o iloc. Segue a solução completa, caso alguém chegue aqui com o mesmo problema:
new_df = df.iloc[index_excluidos]

","
            0
        ","['\npython', 'pandas', 'data-science\n']"
546908,Duplicate entry '0' for key 'PRIMARY' ajuda,"
Gostaria de saber aonde esta o erro no meu código fiz um banco de dados e um comando para inserção dos dados no banco de dados porem aparece este erro tegrityError: 1062 (23000): Duplicate entry '0' for key 'PRIMARY'
Só consigo inserir dados na tabela BENEFICIO;
Segue os códigos;
#Tabelas

CREATE TABLE BENEFICIO(
    ID_BENEFICIO INT PRIMARY KEY AUTO_INCREMENT,
    NUMERO_BENEFICIO INT (20) NOT NULL,
    ESPECIE VARCHAR(30) NOT NULL,
    ONDE_OCORREU VARCHAR(30) NOT NULL,
    ENVOLVIMENTO_SERVIDOR VARCHAR(30) NOT NULL,
    MOTIVO_DO_RESSARCIMENTO VARCHAR(30) NOT NULL,
    TIPO_DE_IRREGULARIDADE VARCHAR (30) NOT NULL
);

CREATE TABLE DATAS(
    ID_DATAS INT PRIMARY KEY AUTO_INCREMENT,
    DATA_INICIO_RECEBIMENTO_INDEVIDO DATE,
    DATA_FIM_RECEBIMENTO_INDEVIDO DATE,
    DATA_SOLICITACAO_PARCELAMENTO DATE,
    DATA_EMISSAO_GUIA_UNICA DATE,
    FOREIGN KEY(ID_DATAS) REFERENCES BENEFICIO(ID_BENEFICIO) 
);

CREATE TABLE DADOS_SEGURADO(
    ORDEM INT PRIMARY KEY AUTO_INCREMENT,
    CPF INT (14)  NOT NULL,
    NOME VARCHAR (30) NOT NULL,
    FOREIGN KEY (ORDEM) REFERENCES BENEFICIO (ID_BENEFICIO)
);

CREATE TABLE DEVEDOR(
    ID_DEVEDOR INT PRIMARY KEY AUTO_INCREMENT,
    CPF_CNPJ INT (14) NOT NULL,
    NOME VARCHAR (30) NOT NULL,
    NIT INT (20) NOT NULL,
    FOREIGN KEY (ID_DEVEDOR) REFERENCES DADOS_SEGURADO (ORDEM)
);

CREATE TABLE ENDERECO(
    ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
    CEP INT (20) NOT NULL,
    RUA VARCHAR(30) NOT NULL,
    BAIRRO VARCHAR (30) NOT NULL,
    MUNICIPIO VARCHAR(30) NOT NULL,
    FOREIGN KEY (ID_ENDERECO) REFERENCES DADOS_SEGURADO (ORDEM)
);

CREATE TABLE ENDERECO_DEVEDOR(
    ID_ENDERECO_DEVEDOR INT PRIMARY KEY AUTO_INCREMENT,
    CEP INT (20) NOT NULL,
    RUA VARCHAR(30) NOT NULL,
    BAIRRO VARCHAR (30) NOT NULL,
    MUNICIPIO VARCHAR (30) NOT NULL,
    FOREIGN KEY (ID_ENDERECO_DEVEDOR) REFERENCES DADOS_SEGURADO (ORDEM)
);

CREATE TABLE FINANCEIRO(
    ID_FINANCEIRO INT PRIMARY KEY AUTO_INCREMENT,
    RENDA_MENSAL FLOAT,
    VALOR_PARCELA FLOAT,
    QUANTIDADE_PARCELAS INT (20) NOT NULL,
    QUANTIDADE_PARCELAS_RESTANTES INT (20) NOT NULL,
    VALOR_NOVA_PARCELA FLOAT,
    VALOR_CORRIGIDO_CAMVRI FLOAT,
    VALOR_CAMVRI_E_OU_SISCALC FLOAT,
    FOREIGN KEY (ID_FINANCEIRO) REFERENCES DADOS_SEGURADO (ORDEM)
);

CREATE TABLE APS(
    ID_APS INT PRIMARY KEY AUTO_INCREMENT,
    APS_CONCESSORA VARCHAR (30) NOT NULL,
    APS_MANTENEDORA VARCHAR (30) NOT NULL,
    SEI_MOBDigital_GET INT (30) NOT NULL,
    FOREIGN KEY (ID_APS) REFERENCES DADOS_SEGURADO (ORDEM)
);

",,,,,"['\nmysql', 'python\n']"
546900,O que pode levar um automações Selenium não rodas em maquinas diferentes?,"
Estou fazendo alguns robôs que fiz utilizando Selenium com a linguagem Python 3.7.0 - para fazer digitação em formulários, bom esse meu robô funciona perfeitamente rodando em minha maquina, da forma como eu espero. Porém é quando eu gero o .exe para executar esse código em outras maquinas, ele acaba quebrando me outros lugares onde não acontece na minha maquina, como por exemplo nesse fragmento de código
element = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, '//*[@id=""btn-aplicar-filtro""]')))
element.click()

element = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, '//*[@id=""caixas-status""]/div/div/div/div/div[2]')))
element.click()

onde algo simples ele acaba não encontrando ou errando o calculo de click.
Fiz vários testes mudando código a forma como ele encontra e sempre obtenho resultado diferentes em maquinas diferentes.
mas a questão em si é o que eu devo considerar na hora de fazer um código que devera rodar em maquinas diferentes usando a tecnologia do Selenium?
","
Muitas coisas como:

Versão do navegador
Velocidade do computador
Velocidade da internet
Versão do sistema operacional
Comportamento do site

E muito mais coisas que não consigo pensar agora.
Para alguns desses itens, você consegue ter controle (Como versão do navegador ou sistema operacional. Para garantir um ambiente igual é possível rodar as coisas dentro do docker ou usando algum serviço terceiro como Browserstack), outros você pode aumentar o tempo de espera até cada elemento estiver visível.
","
            0
        ",,,"['\npython', 'python-3.x', 'selenium\n']"
546849,How to scrapt all Elon Musk tweets using Tweepy?,"
I would like to extract all all from a specific user, in this case elon musk. with this code i am extracting data with elon musk keyword. How do I select the user and remove the retweets, please?
Follow the code!
class TwitterClient(object):
def init(self):
#Initialization method.
try:
# create OAuthHandler object
auth = OAuthHandler(consumer_key, consumer_secret)
# set access token and secret
auth.set_access_token(access_token, access_token_secret)
# create tweepy API object to fetch tweets
# add hyper parameter 'proxy' if executing from behind proxy ""proxy='http://172.22.218.218:8085'""
self.api = tweepy.API(auth, wait_on_rate_limit=True, wait_on_rate_limit_notify=True)
    except tweepy.TweepError as e:
        print(f""Error: Tweeter Authentication Failed - \n{str(e)}"")

def get_tweets(self, query, maxTweets = 1000):

     
    #Function to fetch tweets. 
    # empty list to store parsed tweets 
    tweets = [] 
    sinceId = None
    max_id = -1
    tweetCount = 0
    tweetsPerQry = 100
    

    while tweetCount < maxTweets:
        try:
            if (max_id <= 0):
                if (not sinceId):
                    new_tweets = self.api.search(q=query, count=tweetsPerQry)
                    
                else:
                    new_tweets = self.api.search(q=query, count=tweetsPerQry,
                                            since_id=sinceId)
                    
            else:
                if (not sinceId):
                    new_tweets = self.api.search(q=query, count=tweetsPerQry,
                                            max_id=str(max_id - 1))
                    
                else:
                    new_tweets = self.api.search(q=query, count=tweetsPerQry,
                                            max_id=str(max_id - 1),
                                            since_id=sinceId)
                    
            if not new_tweets:
                print(""No more tweets found"")
                break

            for tweet in new_tweets:
                parsed_tweet = {} 
                parsed_tweet['tweets'] = tweet.text
                parsed_tweet['data'] = tweet.created_at
           

                # appending parsed tweet to tweets list 
                if tweet.retweet_count > 0: 
                    # if tweet has retweets, ensure that it is appended only once 
                    if parsed_tweet not in tweets: 
                        tweets.append(parsed_tweet) 
                else: 
                    tweets.append(parsed_tweet) 
                    
            tweetCount += len(new_tweets)
            print(""Downloaded {0} tweets"".format(tweetCount))
            max_id = new_tweets[-1].id

        except tweepy.TweepError as e:
            # Just exit if any error
            print(""Tweepy error : "" + str(e))
            break
    
    return pd.DataFrame(tweets)

",,,,,"['\npython', 'web-scraping\n']"
545839,Como eu faço pra pegar esse 'title' dentro de um <h3> com o BeautifulSoup,"
Estou pegando essa classe no Beautifulsoup e preciso colher o título dentro do a que está dentro do h3
<article class=""product_pod"">
    <div class=""image_container"">
    <a href=""catalogue/a-light-in-the-attic_1000/index.html""><img alt=""A Light in the Attic"" class=""thumbnail"" src=""media/cache/2c/da/2cdad67c44b002e7ead0cc35693c0e8b.jpg""/></a>
    </div>
    <p class=""star-rating Three"">
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    </p>
    <h3><a href=""catalogue/a-light-in-the-attic_1000/index.html"" title=""A Light in the Attic"">A Light in the ...</a></h3>
    <div class=""product_price"">
    <p class=""price_color"">£51.77</p>
    <p class=""instock availability"">
    <i class=""icon-ok""></i>

Eu já tentei pegar tanto buscando tanto pelo 'h3' quanto pelo 'a' mas parece que o primeiro registro de 'a' não tem o título e isso causa um none no resultado
eu já tentei
title = soup.find('a') e -> h3
print(title.get('title')

e
title = soup.find('a') e -> h3
print(title['title'])

e também quando eu dou .findAll no 'a' ele retorna apenas o href
","
Para acessar o atributo title é necessário setar o parâmetro title do método find_all como True e extrair as informações da lista resultante.
Exemplo:
from bs4 import BeautifulSoup

html_doc = """"""<article class=""product_pod"">
    <div class=""image_container"">
    <a href=""catalogue/a-light-in-the-attic_1000/index.html""><img alt=""A Light in the Attic"" class=""thumbnail"" src=""media/cache/2c/da/2cdad67c44b002e7ead0cc35693c0e8b.jpg""/></a>
    </div>
    <p class=""star-rating Three"">
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    <i class=""icon-star""></i>
    </p>
    <h3><a href=""catalogue/a-light-in-the-attic_1000/index.html"" title=""A Light in the Attic"">A Light in the ...</a></h3>
    <div class=""product_price"">
    <p class=""price_color"">£51.77</p>
    <p class=""instock availability"">
    <i class=""icon-ok""></i>""""""

soup = BeautifulSoup(html_doc, 'html.parser')

Utilize o método find_all para capturar o texto que você deseja:
for r in soup.find_all(""a"", title=True):
    print(r['title'])

# A Light in the Attic
# ...

","
            -1
        ","
Levando em consideração que tem n catalogos com a classe product_pod...
from collections import namedtuple

row = namedtuple('Row', 'title price')
catalog_list = soup.findAll('article', {'class': 'product_pod'})
[row(x.find('h3').find('a')['title'], 
     x.find('p', {'class': 'price_color'}).text
 ) for x in catalog_list
]

Coloquei o preço também, mas os outros deixei de lado por não ser explícito a forma que funciona.
","
            -1
        ","['\npython', 'web-scraping', 'beautifulsoup\n']"
545768,BOT Telegram no python funciona no idle mas não roda executando o arquivo.py,"
Fiz um programa simples em python para enviar uma mensagem em um grupo no telegram. O programa funciona normalmente no IDLE (Jupyter/Spyder), porém o programa.py não funciona quando o executo diretamente pelo python.exe
import telegram

TELEGRAM_BOT_TOKEN = '5xxxxxxxxx:AXXXXXXXXXXXXXXXXXXXXXXXXXXXXXM'
TELEGRAM_CHAT_ID = '-7XXXXXXXX'


bot = telegram.Bot(token=TELEGRAM_BOT_TOKEN)

bot.send_message(chat_id=TELEGRAM_CHAT_ID, text="" Teste "")

Obs: Os demais programas (outras bibliotecas) funcionam normalmente. Ambos estão sendo utilizados na mesma versão Python 3.9.7. Onde o problema pode estar ?
",,,,,"['\npython', 'python-3.x', 'telegram-bot', 'idle-ide\n']"
545743,Printar valor de um item QTableWidget Pyqt5,"
Estou tentando fazer um simples print em um valor seja int ou str de um item (célula) que foi preenchido por mim.
Exemplo:
item = self.tablejan_3.item(0, 0)
item.setText(_translate(""MainWindow"", ""celulajan""))

Já tentei printar da seguinte forma:
def testedb (self):
    data = lambda:self.tablefevereiro.currentItem(0,0)
    print(data)

Porém retorna o erro

function salva_dados.testedb.. at 0x0000026680E6DAF0>

Tentei converter o tipo da célula para int e str e continua a mesma coisa.
Segue a string dentro da célula que quero fazer o print no terminal:

OBS: O print no terminal vai acontecer quando eu clicar em um botão já configurado na função testedb.
","
Sua variável data é apenas um lambda, isto é, uma função anônima. Você não está executando a função, então o valor printado é o do próprio objeto da função.
Não sei qual era seu intuito a usar lambda: ..., mas recomendo fazer da seguinte forma:
def testedb(self):
    data = self.tablefevereiro.currentItem().text()
    print(data)

O código vai printar o valor da célula que está selecionada na tabela.
","
            2
        ","

QTableWidgetItem   <----  *QTableWidget::currentItem() const
Returns the current item.


QString  <----  QTableWidgetItem::text() const
Returns the item's text.

from PyQt5.Qt import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u""MainWindow"")
        MainWindow.resize(320, 240)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u""centralwidget"")
        self.gridLayout = QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName(u""gridLayout"")
        self.pushButton = QPushButton(self.centralwidget)
        self.pushButton.setObjectName(u""pushButton"")
        self.gridLayout.addWidget(self.pushButton, 1, 0, 1, 1)
        self.tablejan_3 = QTableWidget(self.centralwidget)
        self.tablejan_3.setColumnCount(2)
        __qtablewidgetitem = QTableWidgetItem()
        self.tablejan_3.setHorizontalHeaderItem(0, __qtablewidgetitem)
        __qtablewidgetitem1 = QTableWidgetItem()
        self.tablejan_3.setHorizontalHeaderItem(1, __qtablewidgetitem1)
        self.tablejan_3.setRowCount(3)
        __qtablewidgetitem2 = QTableWidgetItem()
        self.tablejan_3.setVerticalHeaderItem(0, __qtablewidgetitem2)
        __qtablewidgetitem3 = QTableWidgetItem()
        self.tablejan_3.setVerticalHeaderItem(1, __qtablewidgetitem3)
        __qtablewidgetitem4 = QTableWidgetItem()
        self.tablejan_3.setVerticalHeaderItem(2, __qtablewidgetitem4)
        self.tablejan_3.setObjectName(u""tablejan_3"")
        self.tablejan_3.horizontalHeader().setDefaultSectionSize(130)
        self.gridLayout.addWidget(self.tablejan_3, 0, 0, 1, 1)
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u""menubar"")
        self.menubar.setGeometry(QRect(0, 0, 320, 21))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u""statusbar"")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate(""MainWindow"", u""MainWindow"", None))
        self.pushButton.setText(QCoreApplication.translate(""MainWindow"", ""Click me"", None))
        ___qtablewidgetitem = self.tablejan_3.horizontalHeaderItem(0)
        ___qtablewidgetitem.setText(QCoreApplication.translate(""MainWindow"", ""DATA"", None));
        ___qtablewidgetitem1 = self.tablejan_3.horizontalHeaderItem(1)
        ___qtablewidgetitem1.setText(QCoreApplication.translate(""MainWindow"", ""PLANO"", None));
        ___qtablewidgetitem2 = self.tablejan_3.verticalHeaderItem(0)
        ___qtablewidgetitem2.setText(QCoreApplication.translate(""MainWindow"", u""1"", None));
        ___qtablewidgetitem3 = self.tablejan_3.verticalHeaderItem(1)
        ___qtablewidgetitem3.setText(QCoreApplication.translate(""MainWindow"", u""2"", None));
        ___qtablewidgetitem4 = self.tablejan_3.verticalHeaderItem(2)
        ___qtablewidgetitem4.setText(QCoreApplication.translate(""MainWindow"", u""3"", None));
        

class MainWindow(QMainWindow, Ui_MainWindow):   
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        
        self.pushButton.clicked.connect(self.button_clicked)
        
        item = QTableWidgetItem()
        item.setText(""celulajan"")             
        self.tablejan_3.setItem(0, 0, item) 
        
    def button_clicked(self):
        item = self.tablejan_3.currentItem()
        if item:
            print(f'{item.text()}')  


if __name__ == ""__main__"":
    import sys
    app = QApplication(sys.argv)
    app.setFont(QFont(""Times"", 10, QFont.Bold))
    w = MainWindow()
    w.resize(320, 240)
    w.show()
    sys.exit(app.exec_())


","
            1
        ","['\npython', 'pyqt-5', 'pyqt\n']"
545707,Como receber um valor printado pelo console em C#,"
Tenho um código em c# para aplicação desktop WPF, nele eu executo um script em python pra realizar validações de login em um sistema hipotético, esse script gera uma saída com print, gostaria de saber se existe uma forma de receber o valor de saída no console, seja como int ou string.
    private void btnLogin_Click(object sender, RoutedEventArgs e)
    {
        
        string execucao = ""python consulta_login.py "" + txtLogin.Text + "" "" + txtSenha.Password;
        Process.Start(execucao);
    }

Meu script em python
import conecta_sql
import sys
login_texto = sys.argv[1]
senha_texto = sys.argv[2]

cursor = conecta_sql.conectar_banco.cursor()

cursor.execute(""select * from usuarios;"")

linhas = cursor.fetchall()
print(""Numero de registros retornados: "", cursor.rowcount)

validacaologin = 0
validacaosenha = 0


for linha in linhas:

if linha[1] == login_texto:
    validacaologin = 1
    if linha[2] == senha_texto:

        validacaosenha = 1

if validacaologin != 1:
    print(""Usuario/Login incorretos\nTente novamente ou contate um administrador de sistemas"")
    exit()
if validacaosenha != 1:
    print(""Usuario/Login incorretos\nTente novamente ou contate um administrador de sistemas"")
    exit()

Tentei utilizar um método que a microsoft  nesse exemplo aqui que utiliza o stringbuilder, porém ele diz que não consegue executar o processo
    private static StringBuilder output = new StringBuilder();
    //essa funcao realiza o login
    private void btnLogin_Click(object sender, RoutedEventArgs e)
    {
        
        string execucao = ""python consulta_login.py "" + txtLogin.Text + "" "" + txtSenha.Password;
        
        Process processo = new Process();
        processo.StartInfo.FileName = execucao;
        processo.StartInfo.UseShellExecute = false;
        processo.StartInfo.RedirectStandardOutput = true;
        processo.OutputDataReceived += new DataReceivedEventHandler((sender, e) =>
        {
            if (!String.IsNullOrEmpty(e.Data))
            {
                output.Append("""" + e.Data);
            }
        });

        processo.Start();
        processo.BeginOutputReadLine();
        processo.WaitForExit();
        Console.WriteLine(output);
        processo.WaitForExit();
        processo.Close();




    }

",,,,,"['\nc#', 'python', 'console\n']"
545703,How can I insert a marker cluster into my map [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



I'm trying to insert a marker cluster folium into my map. however I can't. I'm using this code:
folium.plugins.MarkerCluster(
    locations=df_2['latitude'], df_2['longitude'],
    popups=None, 
    icons=None, 
    name='Regionais', 
    overlay=True, 
    control=True, 
    show=True, 
    icon_create_function=None, 
    options=None)

I need to clusterize my other markers into the locations of the df_2. How can I do it?
",,,,,"['\npython', 'map\n']"
545697,Graficar com loops FOR,"
Boa tarde, estou precisando ajuda com parte do meu codigo, preciso graficar diversas informações desde um dataframe. Eu pensei que ia conseguir fazer com uns bucles for, mas não deu certo.
Ya tentei o seguinte:

Rango = list(range(1, len(Loads)))
last = Rango[-1] + 1
Rango.append(last)

Range_X = list(range(1, Eixo_x))
last = Range_X[-1] + 1
Range_X.append(last)

for i in Rango:

    ax = fig.add_subplot(len(Rango), 2, i)
    j = Loads[i-1]
    Carga_Obs = Hola.query(f""Carga=={j}"")
    ax.set_title(f'Carga = {j} [kW]')
    
    for x in Range_X:
        for y in range(2):
            
            sns.lineplot(x = 'Resistência', y = 'VCarga [V]',data = Carga_Obs, ax = axes[x,y])
    fig.tight_layout(pad=1)  # sólo para que no se solapen los títulos
    ax.set_xlabel(""Resistência [\u03A9]"")
    ax.set_ylabel(""Tensão [kV]"")

Porém, só consegui criar os subplots sem carregar a info do meu dataframe.

Finalmente, esse aqui é parte do meu dataframe:

A minha ideia é graficar em cada subplot a coluna de Resistência (para o eixo X) e a coluna de VCarga [V] (para o eixo y). Cada subplot representa um valor de carga, como mostrado na primeira figura.
Agradeço muito quem puder me ajudar.
",,,,,"['\npython', 'for', 'gráfico\n']"
545688,Estou aprendendo python. Como usar um if com um código e depois executar outro if com outro código? é possível?,"
import numpy as np

print('\n\nBem vindo!!!!!\n\n')
print('------------JOGO DA LOTERIA------------\n\n')

jogo = int(input('Deseja jogar qual modalidade: \n(1) Mega-Sena\n(2) Quina\n(3) Sair\n\nDigite qual a sua opção de jogo: \n'))
    

if jogo == 1:
    print('Você está apostando na Mega-Sena!!\n')
elif jogo == 2:
    print('Você está apostando na Quina!!\n')
elif jogo == 3:
    print('Volte sempre!!\n')
else:
    print('Opção inválida')
        
sorteados_mega = sample(range(1, 61), 6)
sorteados_mega = sorted(sorteados_mega)
#print(sorteados_mega)

palpite = []

for i in range (1, 7):
    num = 0
    while num <1 or num > 60 or num in palpite:
        num = int(input(f' {i}º número - Digite um número de 1 á 60: \n'))
    palpite.append(num)
    
palpite = sorted(palpite)
print('\n\n Sua aposta é: ', palpite)


resultado = np.in1d(palpite, sorteados_mega)
acertos = len(np.intersect1d(palpite, sorteados_mega))

print('\n\nVocê ganhou na Mega-Sena!!!') if resultado.all() else print(f'\n\nVocê perdeu e acertou {acertos} numeros(s).')

print('Sorteados: ', sorteados_mega)
print('Sua aposta: ',palpite)```

    


 #Quando eu escolho a opção jogo 1, ele roda legal. quando coloco jogo 2, ele roda o jogo um, a opção 3 também...
 #a intenção é que na opção 2, eu faça rodar o jogo com os parâmetros da Quina, e a opção 3 apareça um volte sempre.
 #Se alguém puder me ajudar, agradeço.

","
Comentei ali como poderia fazer o modo mais simples e montei aqui. Veja se é isso que você imagina.
import numpy as np
import random

print('\n\nBem vindo!!!!!\n\n')
print('------------JOGO DA LOTERIA------------\n\n')

jogo = int(input('Deseja jogar qual modalidade: \n(1) Mega-Sena\n(2) Quina\n(3) Sair\n\nDigite qual a sua opção de jogo: \n'))
    

if jogo == 1:
    print('Você está apostando na Mega-Sena!!\n')
        
    sorteados_mega = random.sample(range(1, 61), 6)
    sorteados_mega = sorted(sorteados_mega)
    print(sorteados_mega)

    palpite = []

    for i in range (1, 7):
        num = 0
        while num <1 or num > 60 or num in palpite:
            num = int(input(f' {i}º número - Digite um número de 1 á 60: \n'))
        palpite.append(num)
        
    palpite = sorted(palpite)
    print('\n\n Sua aposta é: ', palpite)


    resultado = np.in1d(palpite, sorteados_mega)
    acertos = len(np.intersect1d(palpite, sorteados_mega))

    print('\n\nVocê ganhou na Mega-Sena!!!') if resultado.all() else print(f'\n\nVocê perdeu e acertou {acertos} numeros(s).')

    print('Sorteados: ', sorteados_mega)
    print('Sua aposta: ',palpite)
    
    
elif jogo == 2:
    print('Você está apostando na Quina!!\n')
    
    
    sorteados_quina = random.sample(range(1, 81), 5)
    sorteados_quina = sorted(sorteados_quina)
    print(sorteados_quina)

    palpite = []

    for i in range (1, 6):
        num = 0
        while num <1 or num > 80 or num in palpite:
            num = int(input(f' {i}º número - Digite um número de 1 á 80: \n'))
        palpite.append(num)
        
    palpite = sorted(palpite)
    print('\n\n Sua aposta é: ', palpite)


    resultado = np.in1d(palpite, sorteados_quina)
    acertos = len(np.intersect1d(palpite, sorteados_quina))

    print('\n\nVocê ganhou na Quina!!!') if resultado.all() else print(f'\n\nVocê perdeu e acertou {acertos} numeros(s).')

    print('Sorteados: ', sorteados_quina)
    print('Sua aposta: ',palpite)
    
        
elif jogo == 3:
    print('Volte sempre!!\n')
else:
    print('Opção inválida')
        

","
            -1
        ",,,['\npython\n']
545683,Criação de Formulário,"
Eu preciso criar um formulário que terá 3 campos: Matrícula, Nome e Gestor. Eu tenho uma planilha com essas informações, eu queria saber uma forma para quando o usuário escrever a matrícula dele automaticamente puxar da planilha e preencher o seu nome e o nome do seu gestor. Estou usando o Selenium e Python
",,,,,"['\njavascript', 'html', 'python', 'formulário\n']"
545642,Erro de worksheet no airflow [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada 6 dias atrás.




                        Melhore esta pergunta
                    



O meu código tem que ler um arquivo em excel numa pasta do GCP e quando rodo o airflow ele dá essa mensagem de erro...ERROR - Object passed is not an instance of type worksheet.
Tentei muita coisa sem sucesso, gostaria de saber realmente qual é esse problema e como corrigir.
",,,,,['\npython\n']
545637,Como pegar todos os itens de uma Div que carrega dinamicamente,"
Estou utilizando Seleniun e BeautifulSoup
Estou fazendo uma raspagem de dados em um site de medicamentos.
A tabela carrega automaticamente com o rolar do scroll, então consigo
pegar apenas uma parte do resultado.
E a coisa piora quando coloco no modo headless, que retorna apenas 5 resultados.
Tive bastante dificuldade para pegar os campos nesse site já que muitas divs utilizam a mesma class.
",,,,,"['\njavascript', 'python\n']"
545628,Como buscar diferentes extensões de arquivos [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 18 dias atrás.




                        Melhore esta pergunta
                    



Estou procurando uns arquivos com o final .jar, .py e .sh, porém só quando coloco um deles o código roda.
finded = re.findall(r'\w*.jar\b'|'\w*.sh\b'|'\w*.py\b', text)
Mensagem de erro:

TypeError: unsupported operand type(s) for |: 'str' and 'str'

","
Não é necessário repetir a regex inteira. No caso do seu código nem faz sentido, porque você está tentando ""combinar"" várias strings com o operador | e Python não aceita este tipo de construção até onde eu sei.
O que você precisa é usar estes operadores para combinar diferentes padrões aceitos na regex.
Uma regex que funciona seria: \w*\.(jar|sh|py)\b, onde:

\w: Qualquer caracter
*: Zero ou mais do padrão anterior
\.: Encontra o literal para ponto
(jar|sh|py): Encontra um dos literais (jar ou sh ou py)

import re
found = re.findall(r'(\w*\.(jar|sh|py)\b)', 'teste.jar script.sh program.exe script.bat')
print(found) # [('teste.jar', 'jar'), ('script.sh', 'sh')]

Veja funcionando no Repl.it
","
            5
        ","
Primeiro veja bem o que você fez. Você criou três strings e colocou | entre elas:
     finded = re.findall(r'\w*.jar\b'|'\w*.sh\b'|'\w*.py\b', text)
#                         ^         ^ ^        ^ ^        ^
     #                    |         | |        | |        |
     #                    |         | |        | |        |
# aqui começa a           |         | |        | |        \__ aqui termina a terceira string
# primeira string ________/         | |        | |
     #                              | |        | |
     #                              | |        | |
     #                              | |        | \__ aqui começa a terceira string
     #                              | |        |
     #                              | |        \__ aqui termina a segunda string
     #                              | |        
# aqui termina a primeira string ___/ \___ aqui começa a segunda string

Ou seja, você está tentando fazer string | outra_string | e_mais_outra_string. Só que o | não é um operador válido para strings, daí o erro.
Para resolver bastaria eliminar as aspas do meio, deixando tudo em uma única string:
re.findall(r'\w*.jar\b|\w*.sh\b|\w*.py\b', text)

Mas tem muita redundância aí. Você pode fazer como a outra resposta ((\w*.(jar|sh|py)\b)), mas eu sugiro algumas alterações:

\w* significa ""zero ou mais letras, dígitos ou _"". Isso quer dizer que se o nome do arquivo for apenas .jar, será aceito (pois tem zero caracteres antes do ponto). Você pode trocar para \w+ (uma ou mais ocorrências), pois aí garante que deve ter pelo menos um caractere antes do ponto (a menos, é claro, que você queira mesmo pegar nomes como .jar)
O ponto corresponde a qualquer caractere (exceto quebras de linha), então se quiser somente o caractere ., tem que ser \.
os parênteses formam grupos de captura, e quando estes estão presentes, findall retorna todos os grupos. No caso, a extensão está em um grupo, então além do nome do arquivo, será retornado também a extensão separadamente. Mas se quer apenas os nomes dos arquivos, pode trocar para grupos de não-captura, usando (?: em vez de apenas (

Ou seja:
import re

text = 'abc.txt def.jar g123.sh aaa.c xyz.py'
arquivos = re.findall(r'\w+\.(?:jar|sh|py)\b', text)
print(arquivos) # ['def.jar', 'g123.sh', 'xyz.py']


Indo um pouco além, nomes de arquivos não se resumem a letras, números e _ (que é o que o \w reconhece). Podemos ter nomes como abc-def-1.0.15.tar.gz e até mesmo nomes com espaços. Neste caso, o \w não é suficiente, e teria que ser algo assim:
import re

# o nome com espaços tem \ antes do espaço para diferenciar do espaço que separa dois arquivos
text = r'abc-def-1.0.15.jar nome\ com\ espaços.sh'
arquivos = re.findall(r'\b(?:[\w\-.]|\\ )+\.(?:jar|sh|py)\b', text)
print(arquivos) # encontra os dois arquivos

Ou seja, agora antes da extensão o nome pode ter \w (letras, números e _), hífen e ponto, além de espaços (desde que seja escapado por \).
Mas enfim, já estamos indo além da pergunta, foi só para mostrar que regex não é algo ""mágico"", e que quanto mais complicados os casos, pior ela vai ficando.
Por fim, se estiver fazendo a busca no sistema de arquivos (pois não é dito de onde vem o text), tem maneiras melhores de resolver.
","
            4
        ","['\npython', 'regex\n']"
545614,Apenas um campo como True por id de outra tabela,"
Possuo uma tabela contendo produtos e outra contendo as imagens relacionadas. Consegui fazer com que apenas um item ficasse com o campo ""padrao"" como True, mas isso está aplicando na tabela como um todo. O que eu gostaria é que apenas uma imagem ficasse como padrão, porém por produto. Essa padrão vai ser utilizada como thumbnail. O método save esta impedindo que tenha mais de um campo 'padrao' como true, pra evitar de pegar 2 imagens no thumbnail. O que eu estou tentando fazer seria uma espécie de filtro onde esse lance de apenas um true seja aplicado por produto, e não todos os produtos da tabela.
Exemplo de como estou tentando fazer:
Produto_1.Imagem1.padrao = True
Produto_1.Imagem2.padrao = False
Produto_1.Imagem3.padrao = False

Produto_2.Imagem1.padrao = False
Produto_2.Imagem2.padrao = True
Produto_2.Imagem3.padrao = False

Exemplo de como está:
Produto_1.Imagem1.padrao = True
Produto_1.Imagem2.padrao = False
Produto_1.Imagem3.padrao = False
Produto_2.Imagem1.padrao = False
Produto_2.Imagem2.padrao = False
Produto_2.Imagem3.padrao = False

Produtos.models.py (resumido):
class Produto(models.Model):
    nome = models.CharField(max_length=255, unique=True)

class ProdutoImagem(models.Model):
    produto = models.ForeignKey(Produto, on_delete=models.CASCADE, null=False, blank=False)
    padrao = models.BooleanField(default=False)
    imagem = models.ImageField(upload_to='produto/produto', max_length=255, null=False, blank=False)

    def save(self):

        #  SÓ UMA IMAGEM COMO PADRÃO
        if self.padrao:
            produto_imagens = ProdutoImagem.objects.filter(padrao=True)
            for produto_imagem in produto_imagens:
                produto_imagem.padrao = False
                produto_imagem.save()
        super().save()

","
RESOLVIDO
Por fim tentei a coisa mais simples e só adicionei mais um campo para filtrar no método save. Obrigado Rfroes87 pela luz.
class ProdutoImagem(Base):
    produto = models.ForeignKey(Produto, on_delete=models.CASCADE, null=False, blank=False)
    padrao = models.BooleanField(default=False)
    imagem = models.ImageField(upload_to='produto/produto', max_length=255, null=False, blank=False)    

    def save(self):
        if self.padrao:
            produto_imagens = ProdutoImagem.objects.filter(padrao=True, produto=self.produto.pk)
            for produto_imagem in produto_imagens:
                produto_imagem.padrao = False
                produto_imagem.save()
        super().save()

","
            -2
        ",,,"['\npython', 'django', 'imagem', 'back-end', 'model\n']"
545587,Como extrair um pedaço de texto de dentro de uma célula de excel com python?,"
Oii, tudo bom?
Preciso extrair uma parte de um texto de dentro de uma célula de excel, em um código que transforma os dados de um excel em outro excel. Porém, nem ideia por onde começar. Conseguem me dar uma ideia, pls?
A parte do código que preciso mudar pra trazer esse texto é:
new_sheet_data['DADOS DA IMPORTAÇÃO -  GJM0011/22'].append(locale.currency(fechamento.iat[30,3]))

No caso, o texto da célula do excel original é ""DADOS DA IMPORTAÇÃO -  GJM0011/22"", e preciso extrair somente GJM0011/22. Esse texto muda de acordo com o excel que está sendo processado, mas o formato é sempre o mesmo.
Valeus!
",,,,,"['\npython', 'excel', 'visual-studio-code\n']"
545566,Não consigo trabalhar com RDDs no pyspark,"
Instalei a versão 3.2.1 do Apache Spark, fiz as devidas configurações das variáveis de ambiente e também instalei o java de maneira a trabalhar com o pyspark no jupyter notebook. Ele abre no jupyter notebook, consigo usar o sparksql e trabalhar com Dataframes, mas não consigo efetuar nenhuma operação com RDDs como por exemplo .count() ou .take(), pois aparece sempre uma mensagem de erro do tipo ""Py4JJavaError"". Já pesquisei muito na internet, inclusive já mudei a versão do java de 17 para 8, mas ainda assim o erro continua e não consigo encontrar nada que resolva o problema.
Abaixo está o código que eu utilizei:
import findspark
findspark.init()
from pyspark import SparkContext
sc = SparkContext.getOrCreate()
lst = [25, 90, 81, 37, 776, 3320]
testData = sc.parallelize(lst)
testData.count()
testData.collect()

Abaixo está a mensagem de erro que aparece:
Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 1.0 failed 1 times, most recent failure: Lost task 0.0 in stage 1.0 (TID 8) (EtianethMiguel.home executor driver): org.apache.spark.SparkException: Python worker failed to connect back.
    at org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker(PythonWorkerFactory.scala:188)
    at org.apache.spark.api.python.PythonWorkerFactory.create(PythonWorkerFactory.scala:108)
    at org.apache.spark.SparkEnv.createPythonWorker(SparkEnv.scala:121)
    at org.apache.spark.api.python.BasePythonRunner.compute(PythonRunner.scala:162)
    at org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:65)
    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
    at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
    at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
    at org.apache.spark.scheduler.Task.run(Task.scala:131)
    at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
    at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.SocketTimeoutException: Accept timed out
    at java.net.DualStackPlainSocketImpl.waitForNewConnection(Native Method)
    at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
    at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:535)
    at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:189)
    at java.net.ServerSocket.implAccept(ServerSocket.java:545)
    at java.net.ServerSocket.accept(ServerSocket.java:513)
    at org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker(PythonWorkerFactory.scala:175)
    ... 14 more

Driver stacktrace:
    at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2454)
    at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2403)
    at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2402)
    at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
    at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
    at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
    at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2402)
    at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1160)
    at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1160)
    at scala.Option.foreach(Option.scala:407)
    at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1160)
    at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2642)
    at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2584)
    at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2573)
    at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
    at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:938)
    at org.apache.spark.SparkContext.runJob(SparkContext.scala:2214)
    at org.apache.spark.SparkContext.runJob(SparkContext.scala:2235)
    at org.apache.spark.SparkContext.runJob(SparkContext.scala:2254)
    at org.apache.spark.SparkContext.runJob(SparkContext.scala:2279)
    at org.apache.spark.rdd.RDD.$anonfun$collect$1(RDD.scala:1030)
    at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
    at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
    at org.apache.spark.rdd.RDD.withScope(RDD.scala:414)
    at org.apache.spark.rdd.RDD.collect(RDD.scala:1029)
    at org.apache.spark.api.python.PythonRDD$.collectAndServe(PythonRDD.scala:180)
    at org.apache.spark.api.python.PythonRDD.collectAndServe(PythonRDD.scala)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
    at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
    at py4j.Gateway.invoke(Gateway.java:282)
    at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
    at py4j.commands.CallCommand.execute(CallCommand.java:79)
    at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
    at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
    at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.spark.SparkException: Python worker failed to connect back.
    at org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker(PythonWorkerFactory.scala:188)
    at org.apache.spark.api.python.PythonWorkerFactory.create(PythonWorkerFactory.scala:108)
    at org.apache.spark.SparkEnv.createPythonWorker(SparkEnv.scala:121)
    at org.apache.spark.api.python.BasePythonRunner.compute(PythonRunner.scala:162)
    at org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:65)
    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
    at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
    at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
    at org.apache.spark.scheduler.Task.run(Task.scala:131)
    at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
    at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    ... 1 more
Caused by: java.net.SocketTimeoutException: Accept timed out
    at java.net.DualStackPlainSocketImpl.waitForNewConnection(Native Method)
    at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
    at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:535)
    at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:189)
    at java.net.ServerSocket.implAccept(ServerSocket.java:545)
    at java.net.ServerSocket.accept(ServerSocket.java:513)
    at org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker(PythonWorkerFactory.scala:175)
    ... 14 more

",,,,,"['\npython', 'spark\n']"
545560,Mostrando Resultados diferentes em python,"

segue abaixo em foto o problema que estou enfrentando
eu já sei como colocar arquivo em saída e escrever(pelo menos de uma forma básica)
mas eu queria a ajuda na lógica de rodar as linhas dos dois arquivos e comparar e sua diferença
alguém poderia me ajudar?
eu tenho o seguinte código para sua execução de comparação
with open('doc1.txt', 'r') as arquivo1:
    texto1= arquivo1.readlines()
    with open('doc 2.txt', 'r') as arquivo2:
        texto2= arquivo2.readlines()

        if texto2 == texto1:
            print ('igual')
        else:
            print('diferente')

mas além de mostrar se o arquivo é diferente ou igual
eu queria mostrar os elementos de cada arquivo e sua linha e fazer a diferença dos dois em um outro arquivo txt
por exemplo
1 = 1 = 0
2 != 1 = 1

alguém pode me ajudar?
ou então linha 1 ok
linha 2 difere
",,,,,"['\npython', 'txt', 'comparação', 'data-science\n']"
545553,Planilha gerada com Openpyxl com erro de conteúdo,"
Estou executando um código Python que gera uma planilha, o código é executado até o final sem apresentar nenhum erro, porém quando eu vou abrir a planilha apresenta o erro "" Estamos com um problema em um conteúdo da planilha. Você quer que tentemos recuperar o máximo que der?""
o código que usei para gerar a planilha é este:
from openpyxl import load_workbook, Workbook

#lista_planilha_excedente é uma lista que o método abaixo recebe por parâmetro

def criar_planilha_caracteres(self,lista_planilha_excedente):

        wb = Workbook()
        ws1 = wb.active
        ws1.title = ""Linhas com campos com execesso de caracteres""

        ws1.cell(row=1,column=1,value=""Campo1"")
        ws1.cell(row=1,column=2,value=""Campo2"")
        ws1.cell(row=1,column=3,value=""Campo3"")
        ws1.cell(row=1,column=4,value=""Campo4"")
        ws1.cell(row=1,column=5,value=""Campo5"")
        ws1.cell(row=1,column=6,value=""Campo6"")
        ws1.cell(row=1,column=7,value=""Campo7"")
        ws1.cell(row=1,column=8,value=""Campo8"")
        ws1.cell(row=1,column=9,value=""Campo9"")
        ws1.cell(row=1,column=10,value=""Campo10"")
        ws1.cell(row=1,column=11,value=""Campo11"")
        ws1.cell(row=1,column=12,value=""Campo12"")
        ws1.cell(row=1,column=13,value=""Campo13"")
        ws1.cell(row=1,column=14,value=""Campo14"")
        ws1.cell(row=1,column=15,value=""Campo15"")
        ws1.cell(row=1,column=16,value=""Campo16"")

        ind_linha_planilha = 2
        for lista_da_linha in lista_planilha_excedente:
            ind_coluna_planilha = 1
            for celula in lista_da_linha:
                ws1.cell(row=ind_linha_planilha,column=ind_coluna_planilha,value=celula)
                ind_coluna_planilha +=1
            ind_linha_planilha +=1
        
        wb.save('Linhas com excesso Caractere.xlsx')

","
Descobri o motivo do erro:
está nesta linha:
ws1.title = ""Linhas com campos com execesso de caracteres""
o nome dado a planilha está com mais de 31 caracteres, reduzi o nome e funcionou.
","
            0
        ",,,"['\npython', 'openpyxl\n']"
545548,TypeError: Object of type module is not JSON serializable,"

Ao executar a aparece esse erro TypeError: Object of type module is not JSON serializable


Abaixo segue o bloco onde é dado o erro

with open('export.json', 'w', encoding='utf-8') as f:
json.dump(response, f, ensure_ascii=False, indent=4)
print(json.dumps(response, indent=4))
",,,,,"['\npython', 'json\n']"
545542,Extrair coluna de arquivo csv e converter o tipo de dado,"
Estou tentando fazer uma função para extrair os dados de um arquivo .csv em uma lista, e preciso usar os condicionais if/elif/else para fazer a conversão do tipo de dado (de str para int). Só que não estou conseguindo fazer essa conversão, e continua me retornando a lista em str apenas.
A função:
def extrai_coluna_csv(nome_arquivo: str, indice_coluna: int, tipo_dado: str):
  coluna = []
  with open (file = nome_arquivo, mode ='r', encoding = 'utf8' ) as arquivo:
    linha = arquivo.readline()
    linha = arquivo.readline()
    
    while linha:
      linha_separada = linha.split(sep = ',')
      if tipo_dado=='str':
        coluna.append(linha_separada[indice_coluna])   
      elif tipo_dado=='int':
        coluna.append(linha_separada[indice_coluna])
               
      else:
        print(""erro"")

      linha = arquivo.readline()

  return coluna

O teste dela com o retorno dando errado:
# extrair a coluna pessoas
pessoas = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=4, tipo_dado='int')
print(pessoas) # deve retornar [2, 2, 2, ...]


Como posso resolver esse problema? Obrigada!
","
Parece que você não está convertando o dado do tipo string para int. Pelo que eu entendi, caso você passe o valor de tipo_dado como ""int"", você deve converter os números de string para int antes de adicioná-los na array ""colunas"".
elif tipo_dado=='int':
        coluna.append(int(linha_separada[indice_coluna]))

","
            0
        ",,,"['\npython', 'funções', 'csv', 'conversão-de-tipo\n']"
545534,Python pandas unindo planilhas que estão dentro de um array,"
Comunidade, eu tenho um diretório que contém várias planilhas "".xls"" e gostaria de unir essas planilhas em um único DataFrame e como bônus exportar esse novoDataFrame em "".xlsx"".
Estou usando o for para percorrer o diretório em busca dos arquivos "".xls"" salvo eles na variável files_xlsx e gostaria de juntar (merge) dessas planilhas, segue o código abaixo:
from numpy import append
import pandas as pd
import os
from openpyxl.workbook import Workbook
path = r'/Users/danilobrun/Downloads/temp/pandasimovelacao'
files = os.listdir(path)

files_xlsx = [path + '/' + f for f in files if f[-3:] == 'xls']
print(files_xlsx)
for f in files_xlsx:
    data = pd.read_excel(f)
    df = pd.merge(data, data, how = 'outer')
    
print(f'Meu DataFrame completo {df}')

","
*Resposta adaptada e traduzida do Stack Overflow em inglês*
Import multiple excel files into python pandas and concatenate them into one dataframe
Um exemplo usando 5 arquivos Excel idênticos que são anexados (""appended"") sequencialmente.
(1) Imports
import os
import pandas as pd

(2) Listando arquivos:
>>> caminho_atual = os.getcwd()
>>> arquivos = os.listdir(caminho_atual)
>>> print(arquivos)
['.DS_Store',
 '.ipynb_checkpoints',
 '.localized',
 'Screen Shot 2013-12-28 at 7.15.45 PM.png',
 'test1 2.xls',
 'test1 3.xls',
 'test1 4.xls',
 'test1 5.xls',
 'test1.xls',
 'Untitled0.ipynb',
 'Werewolf Modelling',
 '~$Random Numbers.xlsx']

(3) Filtrar por arquivos 'xls':
>>> arquivos_xls = [arquivo for arquivo in arquivos if arquivo[-3:] == 'xls']
>>> print(arquivos_xls)
['test1 2.xls', 'test1 3.xls', 'test1 4.xls', 'test1 5.xls', 'test1.xls']

(4) Inicializar dataframe vazio:
df = pd.DataFrame()

(5) Iterar sobre lista de arquivos para anexá-los (""append"") ao dataframe vazio:
for arquivo in arquivos_xls:
    dados = pd.read_excel(arquivo, 'Sheet1')
    df = df.append(dados)

Saída
xlsx
df.to_excel('dataframe_mesclado.xlsx', engine='xlsxwriter')

stdout
>>> print(df)
  Result  Sample
0      a       1
1      b       2
2      c       3
3      d       4
4      e       5
5      f       6
6      g       7
7      h       8
8      i       9
9      j      10
0      a       1
1      b       2
2      c       3
3      d       4
4      e       5
5      f       6
6      g       7
7      h       8
8      i       9
9      j      10
0      a       1
1      b       2
2      c       3
3      d       4
4      e       5
5      f       6
6      g       7
7      h       8
8      i       9
9      j      10
0      a       1
1      b       2
2      c       3
3      d       4
4      e       5
5      f       6
6      g       7
7      h       8
8      i       9
9      j      10
0      a       1
1      b       2
2      c       3
3      d       4
4      e       5
5      f       6
6      g       7
7      h       8
8      i       9
9      j      10

OBS: Pode ser necessário ter que instalar o módulo xlsxwriter para escrever o arquivo ""dataframe_mesclado.xlsx"". Para isso basta executar o seguinte comando do pip:
python -m pip install -U xlsxwriter

EDIT: Conforme comentado pelo @AugustoVasques, a partir da versão 1.4.0 do pandas o método pandas.DataFrame.append foi depreciado portanto o método recomendado agora é pd.concat:
* Revisão dos passos (4) e (5) *
df = pd.concat(pd.read_excel(arquivo, 'Sheet1') for arquivo in arquivos_xls)

","
            2
        ",,,"['\npython', 'pandas', 'xls\n']"
545527,Consumir API python em javascript,"
Ola pessoal eu queria saber como eu posso consumir uma API de um metodo de pagamento aqui no meu pais so que ela esta disponivel para python e java e eu queria saber como posso consumir em javascript para usar no meu site!
",,,,,"['\njavascript', 'python', 'api-gateway\n']"
545524,Como alterar os registros de várias linhas de um Dataframe utilizando python,"
tenho um dataframe com imoveis a venda na minha cidade, fiz o webscrapping de 2 sites, o primeiro me trás na coluna endereço o bairro e a cidade, o outro só me traz o bairro sem a cidade, vocês poderiam dar uma luz de como implementar um codigo em python para adicionar a cidade nos registros que estão faltando?
obs: estou utilizando pandas
Muito Obrigado!

",,,,,"['\npython', 'pandas\n']"
545512,Automação de Lançamentos com pyautogui,"
Estou construindo uma automação para lançamento de dados que estão em uma planilha no ERP.
Ao rodar o programa o mesmo retoma erro, pois não consegue fazer a leitura dos dados.
Como faço para que o pyton consiga ler a informação da planilha e inserir no sistema?
Abaixo parte do código que não está funcionando:

import pyautogui
import pyperclip
import time
import pandas as pd

tabela = pd.read_excel('ALVO FOLHA 04MAR22_v2.xlsx')
for i , (ID) in enumerate (tabela[""ID""]):
    (valorLiquido) = tabela.loc[i,""Valor Liquido""]
    (dataPagamento) = tabela.loc[i,""DataPagto""]
    # print (i,dataPagamento)
    #efetua o lançamento
    pyautogui.hotkey(""alt"",""n"")
    pyautogui.press(""up"")
    pyautogui.press(""tab"")
    pyautogui.write("""".join(ID)) #Informar o Id da pessoa
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.write(""01032022"") #informa data de emissão
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.write(""folha/02/2022"") #informa documento
    pyautogui.press(""tab"")
    #pyautogui.write(""1"") #informa codigo do historico padrão para conciliação automatica
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    #pyautogui.press(""end"");pyautogui.press(""espace"");pyautogui.write(""teste"") # informa historio (texto livre)
    pyautogui.press(""tab"")
    pyautogui.write("""".join(dataPagamento)) # informa o vencimento da despesa
    pyautogui.press(""tab"")
    pyautogui.press(""tab"")
    pyautogui.write("""".join(valorLiquido)) # informa o valor da despesa
    pyautogui.press(""tab"")
    pyautogui.hotkey(""alt"",""g"")
    pyautogui.write(""24"")
    pyautogui.press(""tab"")
    pyautogui.hotkey(""alt"",""g"")
    pyautogui.hotkey(""alt"",""s"")
    pyautogui.write(""91"")
    pyautogui.press(""tab"")
    pyautogui.hotkey(""alt"",""g"")
    pyautogui.hotkey(""alt"",""s"") 

Erro ao rodar o programa:
TypeError                                 Traceback (most recent call last)
C:\Users\FATTB1~1.GRU\AppData\Local\Temp/ipykernel_16580/3135289636.py in <module>
      7     pyautogui.press(""up"")
      8     pyautogui.press(""tab"")
----> 9     pyautogui.write("""".join(ID)) #Informar o Id da pessoa
     10     pyautogui.press(""tab"")
     11     pyautogui.press(""tab"")

TypeError: can only join an iterable

",,,,,"['\npython', 'pandas', 'pyautogui\n']"
545449,"Ao imprimir o resultado de uma função, é mostrado ""None"" [duplicada]","






Essa pergunta já tem uma resposta aqui:
                        
                    



Função retornando None

                                (1 resposta)
                            

Fechada 21 dias atrás.



Gostaria de saber porque o retorno de None dentro do print.
Por acaso não poderia ter usado as variáveis antes?
x = int(input('a'))
y = int(input('b'))

def soma (x,y):
    if x >= 0:
        print('É possível!')
    else:
        print('Não é possível')

print(soma(x,y))

","
Para que o resultado de uma função seja atribuído a uma variável ou a um parâmetro de outra função, você precisa que ela tenha retorno, ou seja, no corpo da sua função deve ter return ALGUMACOISA. Exemplo:
x = int(input('a'))
y = int(input('b'))

def soma (x,y):
    return x + y

print(soma(x,y))


No print será exibido o valor da soma entre x e y.
","
            -1
        ",,,['\npython\n']
545445,Filtro de Coluna em DataFrame,"
Boa Tarde,
Estou iniciando em python e tambem aqui no Stack.
fiz algumas pesquisas, mas acredito que minha falta de experiência não esteja permitindo filtrar de forma adequada o que necessito.
supondo um DF de 5 linhas e 3 colunas, preenchidos apenas com 0 e 1 (representação visual):
ABC
1 000
2 101
3 100
4 011
5 001
eu gostaria de chamar por exemplo, somente os valores '1' da coluna ""A"", não a coluna inteira como em :
filtro = df[['A']]
print(filtro)
o grande porém é que me foi solicitado fazer isso com notação abreviada em indexação lógica.
Peço desculpas se a exemplificação ficar ruim.
Agradeço de antemão a todos.
","
Você pode filtrar linhas à partir de colunas usando o .loc:
import pandas as pd

df = pd.DataFrame({
    'A': [0,1,1,0,0],
    'B': [0,0,0,1,0],
    'C': [0,1,0,1,1],
})

filtrados = df.loc[df['A'] == 1]

print(filtrados)

Saída:
   A  B  C
1  1  0  1
2  1  0  0

ou pegar a Série da coluna A:
colunaA = df.loc[df['A'] == 1, 'A']

print(colunaA)

Saída:
1  1 
2  1  

","
            -1
        ",,,"['\npython', 'dataframe\n']"
545440,Python. Transformar string de um objeto em uma lista,"
Como eu posso conseguir pegar a string 'banana morango abacaxi' e transformá-la em uma lista, separando cada fruta como um item?
Código:
class Exemplo(object):

      def __init__(self, atributo:str = None):
          self.atributo = atributo

Testando com um exemplo:
objeto = Exemplo('banana morango abacaxi')

print(objeto)

Resultado:
<__main__.Exemplo object at 0x7fd598aea590>

","
Você pode definir um método __iter__, que retorna algo ""iterável"", que pode ser usado em loops ou transformado em lista, e o método __str__, que retorna uma string, pra quando alguma outra função precisar transformar seu objeto em string essa __str__ será chamada, e, no caso, vai fazer a representação de string da nossa nova lista:

class Exemplo:
    def __init__(self, atributo:str = None):
        self.atributo = atributo


    def __iter__(self):
        return iter(self.atributo.split())

    def __str__(self):
        return str(list(self))

    
print(list(Exemplo('banana morango abacaxi')))


print()

for item in Exemplo('cafe feijão'):
    print(item)

print()

obj = Exemplo('arroz farinha')

print(obj)

for item in obj:
    print(item)


Saída:
['banana', 'morango', 'abacaxi']

cafe
feijão

['arroz', 'farinha']
arroz
farinha

","
            0
        ",,,['\npython\n']
545436,Preciso criar uma condição para aparecer quando não há ganhadores e não sei onde colocar isso no meu código,"
Você deve fazer um programa que descubra o número de ganhadores da mega-quarta, uma modalidade de jogo de azar da Bachatóvia muito similar à mega-sena ondeapenas 4 dezenas são sorteadas.
Assuma que cada aposta sempre é constituída de 4 dezenas, de 00 até 40. Seu programa deve ler o número de jogadores n, as apostas de 4 dezenas de cada jogador e, por último, ler as 4 dezenas sorteadas. Após as leitura das dezenas sorteadas, seu programa deve informar quais são os jogadores vencedores, se houver algum.
Fiz isso :
#05)
def main():   
    numJogadores = int(input(""Entre com o numero de jogadores: ""))
    
    jogadas = []
    for i in range(numJogadores):
        print()
        jogaTemp = []
        for j in range(4):
            jogaTemp.append(int(input(""Dezena ""+ str(j+1) + "" do jogador ""+ str(i+1) + "": "")))
        jogadas.append(jogaTemp)

    print()
    sorteio = []
    for i in range(4):
        sorteio.append(int(input(""Dezena ""+ str(j+1) + "" do sorteio ""+ str(i+1) + "": "")))

    print(""\nVencedores da mega-quarta:"")
    for i in range(numJogadores):
        if(verificaGanhadores(jogadas[i], sorteio)):
            print(""jogador "" + str(i+1))

    
def verificaGanhadores(listaJogada, listaSorteio):
    qdtIguais = 0
    for i in range(len(listaJogada)):
        if(listaJogada[i] in listaSorteio):
            qdtIguais += 1

    if(qdtIguais == len(listaSorteio)):
        return True
    else:
        return False

main()   

","
Podemos criar um booleano e marcar como verdadeiro se houver vencedores. Se for falso imprimimos uma mensagem a dizer que não há vencedores.
    existemVencedores = False
    for i in range(numJogadores):
        if(verificaGanhadores(jogadas[i], sorteio)):
            print(""jogador "" + str(i+1))
            existemVencedores = True

    if not existemVencedores:
        print(""Não há vencedores."")

","
            0
        ",,,['\npython\n']
545433,Descobrir o valor RGB e HSV do pixel máximo e mínimo dentro de uma faixa de cor,"
Abaixo duas formas de obter o valor do pixel máximo e mínimo.
smallest = np.amin(image, axis=(0, 1))
largest = np.amax(image, axis=(0, 1))

Mas por alguma razão estes são mais rápidos:
smallest = image.min(axis=0).min(axis=0)
biggest = image.max(axis=0).max(axis=0)

Como posso descobrir o valor RGB e HSV do pixel máximo e mínimo dentro de uma faixa de cor, por exemplo: azul  ?
",,,,,"['\npython', 'opencv\n']"
545426,Como clicar em um botão usando Selenium em Python - Jupyter Notebook,"
Sou novo em Python e Selenium e estou querendo clicar no botão abaixo. Já tentei diversas formas (não sei se da maneira correta) como XPATH, CLASS NAME, BUTTON TEXT etc e nenhuma funciona. Alguém consegue me ajudar em como selecionar e clicar esse botão?
<button ng-if=""!usuarioLogadoSemContrato &amp;&amp; !dtoAutenticacao.usuario.contrato.isentoDePonto"" type=""button"" class=""btn blue-madison btn-lg btn-block ng-scope"" ng-class=""{'hidden': usuarioLogadoSemContrato}"" ng-click=""confirmarMarcacao()"" style="""">
                    <i class=""fa fa-dot-circle-o""></i>
                    <span class=""ng-binding"">Marcar Ponto</span>
                </button>

","
Nao ficou claro na pergunda quais foram os testes utilizados.
Mas se você conseguiu chegar até no botão usando o selenium, pode usar uma das duas alternarivas (depende da situação).
driver.find_element_by_xpath(""/html/body/div[2]/div//button/span"").click()
driver.find_element_by_xpath(""//div[@class='comp-save-btn']//button"").submit()

Espero ter ajudado.
","
            0
        ",,,"['\npython', 'selenium', 'jupyter-notebook\n']"
545411,Ocorreu um erro ao usar PyPdf2 PdfFileMerger em Python,"
Eu tenho criado um programa Python usando PyPdf2 para mesclar vários arquivos pdf.
Aqui está o código
import os

from PyPDF2 import PdfFileMerger

path = 'C:\\Users\\sfker\\Python\\pdf'

pdfs = []

#Encontre todos arquivos pdf em uma pasta
for file in os.listdir(path):
    if file.lower().endswith('.pdf'):
        pdfs.append(file)

#PDF são mesclados
merger = PdfFileMerger()
for pdf in pdfs:
    merger.append(pdf)
    
#Saída como um arquivo pdf mesclado
merger.write('merged2.pdf')
merger.close()

ao executar o código, encontrei o seguinte erro:
Traceback (most recent call last):
  File ""c:/Users/sfker/Python/pdfv15.py"", line 21, in <module>
    merger.append(pdf)
  File ""C:\Users\sfker\anaconda3\lib\site-packages\PyPDF2\merger.py"", line 203, in append
    self.merge(len(self.pages), fileobj, bookmark, pages, import_bookmarks)
  File ""C:\Users\sfker\anaconda3\lib\site-packages\PyPDF2\merger.py"", line 114, in merge
    fileobj = file(fileobj, 'rb')
FileNotFoundError: [Errno 2] No such file or directory: 'Processo_0000018-86.2018.5.23.0046.pdf'     
ERROR conda.cli.main_run:execute(33): Subprocess for 'conda run ['python', 'c:/Users/sfker/Python/pdfv15.py']' command failed.  (See above for error)

",,,,,"['\npython', 'pdf\n']"
545400,O texto não aparece na label,"
Não consigo fazer aparecer o que a serial está lendo na label
import tkinter

import serial
from tkinter import *

janela = Tk()
janela.geometry(""800x680"")
janela.resizable(0, 0)
janela.title('Testador de Sirenes')


class App:
    def __init__(self):
        self.serial = serial.Serial()
        self.serial.port = 'COM2'
        self.serial.baudrate = 115200

    def connect_serial(self):
        self.serial.open()

    def read_serial(self):
        for i in range(10000):
            dataRead = self.serial.read(16)
            print(dataRead)

    def send_serial(self):
        if self.serial.isOpen():
            dataSend = input('digite o comando hex')
            self.serial.write(dataSend.encode())

# funções dos botões
    def som_um(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF1\x48\x4E'
            self.serial.write(dataSend)

    def som_dois(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF3\xC9\x8F'
            self.serial.write(dataSend)

    def som_tres(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xF7\xC8\x4C'
            self.serial.write(dataSend)

    def som_quatro(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\xFF\xC9\x8A'
            self.serial.write(dataSend)

    def desligar_saidas(self):
        if self.serial.isOpen():
            dataSend = b'\x01\x06\x00\x00\x00\x00\x89\xCA'
            self.serial.write(dataSend)


ser = App()
ser.connect_serial()
# label
display = tkinter.Label(janela, text=ser.read_serial, bg='white', relief='groove')
display.place(width=770, height=340, x=15, y=10)
# botões
button1 = Button(text=""Som 1"", width=30, command=ser.som_um)
button2 = Button(text=""Som 2"", width=30, command=ser.som_dois)
button3 = Button(text=""Som 3"", width=30, command=ser.som_tres)
button4 = Button(text=""Som 4"", width=30, command=ser.som_quatro)
button5 = Button(text=""Desligar Saídas"", width=30, command=ser.desligar_saidas)
# posição dos botões
button1.place(width=129, height=30, x=10, y=480)
button2.place(width=129, height=30, x=10, y=520)
button3.place(width=129, height=30, x=10, y=560)
button4.place(width=129, height=30, x=10, y=600)
button5.place(width=129, height=30, x=10, y=640)
threading.Thread(target=ser.read_serial).start()
janela.mainloop()

",,,,,['\npython\n']
545399,django.core.exceptions.ImproperlyConfigured: You're using the staticfiles app without having set the STATIC_ROOT setting to a filesystem path,"
Estou tentando adicionar a minha aplicação ao heroku, para que esteja disponível na web. Mas na hora de fazer o deploy recebo a seguinte mensagem de erro:
django.core.exceptions.ImproperlyConfigured: You're using the staticfiles app without having set the STATIC_ROOT setting to a filesystem path.

Error while running '$ python manage.py collectstatic --noinput'.

Já fiz diversas procuras na internet sobre essa mensagem de erro, ja alterei varias vezes o STATIC_ROOT , testei também com STATIC_URL mas nada resolve meu problema.
Segue abaixo o trecho de código do settings.py responsável pelo static.
if os.getcwd() == '/app':
   import dj_database_url
   DATABASES ={
    'default': dj_database_url.config(default='postgres://localhost')
   }

  #Honra o cabeçalho 'X-Forwarded-Proto' para request.is_secure()
  SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

  #Cabeçalho para permitir todos os hosts
  ALLOWED_HOSTS = ['*']

  #Configurações de recursos estáticos
  BASE_DIR = os.path.dirname(os.path.abspath(__file__))

  STATIC_ROOT = 'staticfiles'

  STATICFILES_DIRS = (
     os.path.join(BASE_DIR, 'static'),
  )

Trecho do código do wsgi.py
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'learning_log.settings')

application = Cling(get_wsgi_application())

E a organização dos arquivos e pasta está disposta nessa maneira:
-learning_log
     ---learning_log
     -----settings.py
     -----wsgi.py
     -----static
     --------placeholder.txt (.txt apenas para não deixar o static vazio)

","
Tenta adicionar o ""/"" antes do nome, assim por exemplo:
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

Caso seja a versão mais recente do Django use
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

E caso tenha arquivos estáticos dentro de uma app
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'app1/static'),
    os.path.join(BASE_DIR, 'app2/static')
]

","
            -2
        ",,,"['\npython', 'django', 'heroku', 'deploy\n']"
545342,Padronizar número de telefone no Python,"
Estou tentando padronizar a coluna 'Número' do seguinte dataset:
Alunos  Número
Amanda  +5585988001677
Amon    85 85460364
Ana     85 99221-8211
Ananda  (85) 9862-64842
Antonio (85)987989342
Antônia 85 9852-36542
Antônio 85 9971 19741
Beatriz 85986124985
Cândida 85 985374355
Dalete  85988881389
Daniel  85999202078

Gostaria de deixar todos no seguinte formato: 85989989342 sem nenhum caractere ou espaço.
Utilizei então o seguinte código:
import pandas as pd

colunanumeros = tabela['Número']

r = re.compile(r'\D')
n = (r.sub("""", str(colunanumeros)))

O problema é que quando eu dou um print em 'n', os numeros vem todos juntos como o exemplo abaixo:
print(n) #1385585988001677139858546036492859922182111678598626489314385987989394180859875425061169894754162785987036376164884679091458898832000086

Eu gostaria de saber, como faço para que a saída seja os números separados.
EX: 5585988001677, 8585456521,. 85989276545
Não sei se criando uma lista talvez. Tenho pesquisado mas ainda estou engatinhando em algumas coisas.
Estou usando o Pandas.
","
Muito obrigado, imonferrari. Eu fiz como sugerido em seu comentário:
tabela['Número] = tabela['Número'].str.replace('\D','', regex=True)

e deu certo.
","
            2
        ","
Você pode usar a biblioteca phonenumbers, que é um porte não oficial da Google libphonenumbers (JAVA, C++, Javascript);
https://github.com/daviddrysdale/python-phonenumbers
exemplo:
import pandas as pd
from phonenumbers import PhoneNumberFormat, parse as phone_parse, format_number as phone_format
from io import StringIO

csv = """"""Alunos;Número
Amanda;+5585988001677
Amon;85 85460364
Ana;85 99221-8211
Ananda;(85) 9862-64842
Antonio;(85)987989342
Antônia;85 9852-36542
Antônio;85 9971 19741
Beatriz;85986124985
Cândida;85 985374355
Dalete;85988881389
Daniel;85999202078
""""""

df = pd.read_csv(StringIO(csv), sep=';')

df['Número'] = df['Número'].apply(lambda n: phone_format(phone_parse(n, 'BR'), PhoneNumberFormat.E164))

df


A saída deve ser:
Alunos  Número
0   Amanda  +5585988001677
1   Amon    +558585460364
2   Ana     +5585992218211
3   Ananda  +5585986264842
4   Antonio +5585987989342
5   Antônia +5585985236542
6   Antônio +5585997119741
7   Beatriz +5585986124985
8   Cândida +5585985374355
9   Dalete  +5585988881389
10  Daniel  +5585999202078

Os padrões para formatação são:
PhoneNumberFormat.INTERNATIONAL   (Padrão internacional)
PhoneNumberFormat.NATIONAL        (Padrão do país do número, sem o DDI)
PhoneNumberFormat.E164            (Padrão internacional sem espaços e hífen)

","
            1
        ","['\npython', 'regex\n']"
545172,Criar uma lista a partir de um dicionário,"
tenho o seguinte dicionário
pessoas = [ 
   {'nome': 'Alex', 'idade': 45, 'cidade': 'São Paulo'},
   {'nome': 'Ana', 'idade': 23, 'cidade': 'Rio de Janeiro'},
   {'nome': 'Diego', 'idade': 25, 'cidade': 'Recife'}
   {'nome': 'Carol', 'idade': 41, 'cidade': 'Curitiba'}]

Como eu faço para criar uma lista com as cidades das pessoas com mais de 40 anos?
Eu fiz o seguinte código que imprimiu as cidades corretamente, mas não sei como transformar em uma lista por meio do laço de repetição:
cidades= []

for dados in pessoas:
    if dados['idade']>40:
        print(dados['cidade'])
    

","
Use list comprehensions:
cidades = [p[""cidade""] for p in pessoas if p[""idade""] > 40]

","
            0
        ","
Basicamente você só tem que criar uma lista e adicionar o nome da cidade das pessoas com mais de 40 anos, um exemplo seria:
cidades = list()

for dados in pessoas:
    if dados['idade'] > 40:
        # A função .append() adiciona o valor entre parênteses a lista
        cidades.append(dados['cidade'])

print(cidades)

Ao executar o código teremos o nome da cidade de Alex e Carol, pois são os únicos com mais de 40 anos no dicionário.
Output:
['São Paulo', 'Curitiba']

","
            -2
        ","['\npython', 'loop', 'for', 'condição\n']"
545144,for loop sobre dicionário com listas para obter values,"
Olá.
Preciso criar uma variável para as keys 'chefe_projeto' e 'funcionarios' (esta contém 2 dicionários internos) onde o conteúdo seria o valor de ""HorasProjeto"".
Exemplo:
horas_chefe = 3500
horas_funcionario1 = 500
horas_funcionario2 = 1100
dicionario = {
'chefe_projeto': {
'Nome': 'Juan', 
'Idade': 28, 
'Experiência': ['Gestão', 'Finanças', 'Basesdedados'], 
'Residência': 'Madrid', 
'HorasProjeto': 3500}, 
'funcionarios': [{
                   'Nome': 'Elena', 
                   'Idade': 26, 
                   'Experiência': ['JavaScript', 'Python'], 
                   'Residência': 'Madrid', 
                   'HorasProjeto': 500},
                   {
                   'Nome': 'Luis', 
                   'Idade': 31, 
                   'Experiência': ['Django', 'Flask', 'Pyramid'], 
                   'Residência': 'Barcelona', 
                   'HorasProjeto': 1100}]
}

Sei que consigo criar as tais variáveis dessa forma:
horas_chefe = dicionario['chefe_projeto']['HorasProjeto']

mas, seria possível criar usando for loop?
","
Você pode criar uma lista e preenchê-la com os valores de cada key ""HorasProjeto"", como segue:
*Colei seu dict no codigo e identei ele
thisdict = {
  'chefe_projeto': {
    'Nome': 'Juan', 
    'Idade': 28, 
    'Experiência': ['Gestão', 'Finanças', 'Basesdedados'], 
    'Residência': 'Madrid', 
    'HorasProjeto': 3500
  }, 
  'funcionarios': [
    {
        'Nome': 'Elena', 
        'Idade': 26, 
        'Experiência': ['JavaScript', 'Python'], 
        'Residência': 'Madrid', 
        'HorasProjeto': 500
    }, 
    {
        'Nome': 'Luis', 
        'Idade': 31, 
        'Experiência': ['Django', 'Flask', 'Pyramid'], 
        'Residência': 'Barcelona', 
        'HorasProjeto': 1100
    }
  ]
}

lista_horas = []

for x,y in thisdict.items():
    if type(y) is dict:
        lista_horas.append(y[""HorasProjeto""])
    elif type(y) is list:
        for obj in y:
            lista_horas.append(obj[""HorasProjeto""])

print(lista_horas)

Note que o método items() retorna um objeto dict_items, que contém os pares key/value do dicionário.
No loop for, a variável y representa o value de cada chave do dicionário thisdict, no caso, na primeira iteração, y representa os valores de 'chefe_projeto', e na segunda, os valores de 'funcionarios'.
A condição envolvendo type() serve pois o valor de 'funcionarios' é uma lista e o de 'chefe_projeto' e um dict.
","
            -1
        ",,,"['\npython', 'loop', 'dicionário\n']"
545109,Verificar se os itens de uma lista fazem parte de um conjunto de frases,"
Olá!
Eu gostaria de verificar se cada string que faz parte da minha lista (com tamanho varíavel, pois é um input do usuário) está contida nas frases que eu extraí de uma coluna de uma planilha excel através da biblioteca pandas.
Após importar a planilha excel, eu extrai apenas a coluna necessária para o projeto.

Eu consegui criar uma função que itera as frases que estão dentro desse DataFrame, porém as palavras que serão verificadas devem ser inseridas como argumento da função.

Eu gostaria de fazer um loop que fizesse isso automaticamente, puxando uma palavra por vez da minha lista com as palavras-chave inputadas pelo usuário. Eu pensei em duas opções que não funcionaram:

Utilizar um for dentro do for, mas não funcionou.

Utilizar lista[0] onde esse 0 seria incrementado até a última palavra da lista.


Poderiam me ajudar, por favor?
Obrigado desde já! :)
","
é possível realizar das duas maneiras que você tentou, percorrer iterando sobre o índice de cada palavra chave de sua lista ou iterando sobre os elementos da sua lista, em muitos casos quando não se sabe o tamanho da lista que será percorrida é melhor utilizar um while iterando sobre os índices.
Segue abaixo a maneira iterando sobre os elementos da lista diretamente.
def quantidade_respostas():        
    # lista_palavra_chave deve ser uma tupla ou uma lista de strings
    for palavra_chave in lista_palavra_chave: 
        contador=0
        for indice, linha in op_fisica.iteritems():
            contador+=1 if palavra_chave in linha else pass
        print(f'Quantidade de respostas com {}: {}'.format(palavra_chave, contador))

Segue abaixo a maneira iterando sobre os índices dos elementos da lista.
def quantidade_respostas():        
    index=0
    # lista_palavra_chave deve ser uma tupla ou uma lista de strings
    while index < len(lista_palavra_chave): 
        contador=0
        for indice, linha in op_fisica.iteritems():
            contador+=1 if lista_palavra_chave[index] in linha else pass
        print(f'Quantidade de respostas com {}: {}'.format(lista_palavra_chave[index], contador))
        index+=1

","
            -3
        ",,,"['\npython', 'pandas\n']"
545089,"Escrever uma função em Python que receba duas listas, uma com 10 valores ordenados de forma crescente e outra lista com até 10 valores","
Escrever uma função em Python que receba duas listas, uma com 10 valores ordenados de forma crescente e outra lista com até 10 valores (não necessariamente ordenados). A função deve inserir os valores da segunda lista, um a um, na primeira lista de forma que ela se mantenha ordenada em cada passo. A saída da função deve ser a primeira lista modificada.
OBS: para realização dos testes criar uma função insereOrdenado(lista1,lista2)
",,,,,['\npython\n']
545081,Python parou de funcionar,"
Não estou sabendo muito bem identificar o erro, então vou explicar o problema.
Contextualizando:
Estava eu, programando em Python, mais precisamente em Django, até que quis começar a dar um hello world na web 3.0 (começou aqui) onde o mesmo so funcionaria se eu atualiza-se o meu Microsoft Visual Studio, fiz o que me solicitou e finalmente consegui fazer o tal do hello world... Porém, no outro dia, não tive acesso mais a nenhuma função do python. (aqui de fato começou o pesadelo)
Pra mostrar a vocês, peguei um blog que fiz pra fazer essa analise com os senhores(as)...
Eu consigo entrar no meu ambiente virtual, normalmente e acessar a pasta onde está o manage.py ... (Mas não consigo criar)

Porem, notei que as bibliotecas que antes estavam instalados, aparecem no VScode que falta fazer a importação...

... Fui la e tentei instalar, mas aparece esse erro

... Ok, relevei o detalhe, e tento dar o comando py manage.py runserver (sempre funcionou normalmente) ... Porém o resultado e esse

Não consigo nem criar uma venv, que da o msm erro

... Ele chega a criar a pasta, mas não cria o arquivo .bat pra ativar o mesmo

Eu ja desinstalei e re-instalei diversas e diversas vezes
Tirei TODOS os arquivos Python do sistema windows e fiz as instalações normalmente
Porém toda vez da o mesmo erro.
Instalei a versão 3.4, 3.5, 3.6 ... até o 3.10 que até o presente dia é o que esta disponível como versão estável do Python, e nada, por fim, me mantive na versão 3.9 (sem critério).
Mesmo mudando o interpretador do VScode, não funciona, o erro se mantem o mesmo, tentei utilizar todos que estavam disponiveis

Procuro na internet em diversos sites, inclusive aqui e não tive sucesso.
Faz um tempo que estou com esse problema no meu notbook, quero evitar ao máximo formatar o memso, pois tenho muitos arquivos grandes e não tenho como upar no drive e nem em pendrive (Projetos de Unreal, Revit, 3dmax ...), fora muitos outros softwares ja instalados e configurados que uso no meu dia a dia.
Se alguem conseguir me ajudar, serei eternamente grato
","
Verifique se as variáveis de ambiente do S.O. e os caminhos da IDE estão configurados corretamente para a nova versão, pois acredito que como você não consegue criar um venv ou instalar uma lib/modulo parece que o python não está ""se localizando"".
","
            -1
        ",,,"['\npython', 'python-3.x\n']"
545080,como imprimir dados tabulado em python?,"
Olá, queria saber se existe alguma forma de organizar melhor um arquivo .txt, pois estou gravando os dados e os espaçamentos estão todos errados, não esta da forma que o exercício pede. Reparem que a minha saída a coluna está toda desorganizada, assim como a coluna de porcentagens, existe alguma dica para deixar tudo bonitinho, com as colunas alinhadas dentro do arquivo .txt? aqui está a saída do meu arquivo
essa é a forma que deveria sair
Aqui está o código, ele gera um controle de cota de disco, lendo um arquivo com o nome e a quantidade de bytes, depois gera um relatório com porcentagens e o uso da memoria em MB
def bytes_to_mb(l):
    j = 0
    total = 0
    while j < len(l):
        b = round(int(l[j][1])/1048576, 2)
        total += b
        l[j][1] = b
        j += 1
    return total


def percentual(total, l):
    j = 0
    while j < len(l):
        perc = (l[j][1] * 100)/total
        l[j].append(round(perc, 2))
        j += 1


if __name__ == '__main__':
    cont = 0
    with open('usuarios.txt') as arq:
        lista = []
        for linha in arq:
            dados = linha.split()
            lista.append(dados)
        utilizado = bytes_to_mb(lista)
        percentual(utilizado, lista)
    with open('relatorio.txt', 'w') as f:
        f.write('ACME Inc.           Uso do espaço em disco pelos usuários\n')
        f.write('-----------------------------------------------------------\n')
        f.write('Nr.  Usuário        Espaço utilizado     % do uso\n')
        for i in range(0, len(lista)):
            f.write('{}    {}       {} MB             {}%\n'.format(i+1, lista[i][0], str(lista[i][1]), str(lista[i][2])))
            cont += 1
        f.write('\nEspaço total ocupado: {} MB\n'.format(utilizado))
        f.write('Espaço médio ocupado: {:.2f} MB'.format(utilizado/cont))

","
Nesse código existe duas coisas que precisa ser adicionada por exemplo um alinhamento tabela e o separador das casas decimais que no Python padrão é .
Começando com o alinhamento de tabela com um exemplo:
d = [ [""Mark"", 12, 95],
     [""Jay"", 11, 88],
     [""Jack"", 14, 90]]
     
print (""{:<8} {:<15} {:<10}"".format('Name','Age','Percent'))

for v in d:
    name, age, perc = v
    print (""{:<8} {:<15} {:<10}"".format( name, age, perc))

Resultado:

Nesse caso você precisa definir limite de texto de cada campo usando {:>n} que é usado para alinhar para o lado direto,{:<n} para o lado esquerdo ou {:^n} para centralizar.
n = tamanho de limite do alinhamento.
Agora próxima fase é mudar o decimal separador que é algo bastante fácil que pode ser feito desse jeito:
def CustomtoString(num):
    return '{0:.2f}'.format(num).replace('.', ',')
CustomtoString(2)

Resultado:

2,00

Essa foi a solução do código:
def bytes_to_mb(l):
    j = 0
    total = 0
    while j < len(l):
        b = round(int(l[j][1])/1048576, 2)
        total += b
        l[j][1] = b
        j += 1
    return total

def MytoString(num):
    return '{0:.2f}'.format(num).replace('.', ',')

def percentual(total, l):
    j = 0
    while j < len(l):
        perc = (l[j][1] * 100)/total
        l[j].append(round(perc, 2))
        j += 1


if __name__ == '__main__':
    cont = 0
    with open('usuarios.txt') as arq:
        lista = []
        for linha in arq:
            dados = linha.split()
            lista.append(dados)
        utilizado = bytes_to_mb(lista)
        percentual(utilizado, lista)
    with open('relatorio.txt', 'w') as f:
        f.write('ACME Inc.           Uso do espaço em disco pelos usuários\n')
        f.write('-----------------------------------------------------------\n')
        f.write('Nr.  Usuário        Espaço utilizado     % do uso\n')
        for i in range(0, len(lista)):
            f.write('{:<4} {:<14} {:>7} MB           {:>6}%\n'.format(i+1, lista[i][0], MytoString(lista[i][1]), MytoString(lista[i][2])))
            cont += 1
        f.write('\nEspaço total ocupado: {} MB\n'.format(utilizado))
        f.write('Espaço médio ocupado: {} MB'.format(MytoString(utilizado/cont)))

Resultado:

Mais informações:
Imprimir dados em formato tabular em Python
Formatação de número flutuantes
Mudar o separador decimal
","
            -3
        ","
Para isso você pode usar a formatação do python e definir o espaço que o seu texto vai ocupar. Então, na linha de código:
f.write('{}    {}       {} MB             {}%\n'.format(i+1, lista[i][0], str(lista[i][1]), str(lista[i][2])))

você pode definir o espaço que cada variável vai ocupar na string e o alinhamento dela dentro desse espaço(esquerda, direita ou centro). Para fazer isso, dentro das chaves, colocamos o seguinte: "":alinhamento ('>' para alinhar a direita ou '<' para alinhar a esquerda ou '^' para alinhar ao centro) e o tamanho do espaço que o nosso texto vai ocupar. Exemplificando no código:
f.write('{:<5}{:<15}{:>7} MB{:>17}%\n'.format(i+1, lista[i][0], str(lista[i][1]), str(lista[i][2])))

Perceba que o primeiro item definimos para ocupar 5 espaços na string e ficar alinhado a esquerda, o segundo ocupa 15 espaços e fica alinhado a esquerda, o terceiro ocupa 7 espaços fica alinhado a direita, por fim o ultimo ocupa 17 espaços e fica alinhado a direita.
Se fizer isso, o texto fica alinhado como pede o exemplo.
","
            -3
        ",['\npython\n']
545073,Utilizar recursão em Python,"
Estou iniciando em Python. Fiz esta rotina, mas tenho que transformar para utilizar RECURSÃO, que para mim ainda é confuso:
def incomodam(n):
    incom = ''
    if n < 0:
        return incom
    elif n == 1:
        incom = 'incomoda '
        return incom
    for i in range(n):
        incom += 'incomodam '
    return incom


def elefante(n):
    elef = ''
    if n < 1:
        return elef
    if n == 1:
        elef = 'Um elefante ' + incomodam(n) + 'muita gente\n'
        return elef
    if n == 2:
        elef = str(n) + ' elefantes ' + incomodam(n) + 'muito mais\n'
        return elef
    else:
        elef = str(n-1) + ' elefantes incomodam muita gente\n'
        elef += str(n) + ' elefantes ' + incomodam(n) + 'muito mais\n'
        return elef

def elefantes(n):
    frase = ''
    i = 1   
    while i <= n:
        frase += (elefante(i))
        i += 1
    print(frase)

","
Com o seguinte código você teria uma função recursiva:
def elefantes(n, todos=True):
    if not todos:
        elef = ''
        if n == 1:
            elef = 'Um elefante incomoda muita gente\n'
            return elef
        elif n == 2:
            elef = '2 elefantes incomodam muito mais\n'
            return elef
        else:
            elef = f'{n - 1} elefantes incomodam muita gente\n'
            elef += f'{n} elefantes incomodam muitos mais\n'
            return elef
    if todos and n >= 1:
        frase = ''
        i = 1   
        while i <= n:
            frase += (elefantes(i, todos=False))
            i += 1
        print(frase)
    else:
        print()

Apesar disso, não é uma implementação muito interessante. O parâmetro opcional 'todos', que foi usado para conseguir tornar recursiva, basicamente faz um papel de dividir a função em duas completamente diferente uma da outra. Diferente de uma implementação para calcular um fatorial ou um fibonacci, por exemplo, que se utiliza da mesma função em todo o processo.
","
            -1
        ",,,"['\npython', 'recursão\n']"
545072,Como fazer append em lista dentro de um dicionário,"
Dentro do meu código em Python tenho o seguinte dicionário
itens_dict = {
        ""Shopid"": [],
        ""Itens"": [{
            ""Produto"" : [],
            ""Histórico vendas"" : [],
            ""Likes"": [],
            ""Views"": [],
            ""Preço"": [],
            ""Desconto"":[],
            ""Preço antes desc"": [],
            ""Marca"": []
        }]
    }

Gostaria de saber como faço para acessar as chaves dentro de ""Itens"" e fazer um append.
Inicialmente tentei utilizar
itens_dict['Itens']['Produto'].append(produto)

No entanto me aparece o erro 'TypeError: list indices must be integers or slices, not str'
","
Note que o erro ocorre pois a propriedade ""Itens"" é uma lista e não um dicionário, ou seja ela utiliza índices como orientação, e você está passando uma ""label"" de um dict. Para corrigir você deve espeficiar o índice do elemento da lista ""Itens"" que você deseja realizar o append do atributo ""Produto""
utilizando exatametne esta estrutura deveria ser
itens_dict['Itens'][0]['Produto'].append(produto)

","
            0
        ",,,"['\npython', 'python-3.x', 'dicionário', 'índices\n']"
545066,pyperclip.copy() não copia,"
Eu coloquei um pyperclip.copy no meu código, mas ele não quer copiar.
Aparece o seguinte erro:
QXcbClipboard::setMimeData: Cannot  setX11 selection owner
Alguém poderia me ajudar a resolver isso?
",,,,,['\npython\n']
545056,Error while trying to get ReceivedTime from Win32com Python bib,"
I'm receiving an error while I'm trying to save a code that gets an outlook's mail receivedTime. But I don't know what possibly could done wrong. See the error below:
Exception has occurred: TypeError
Excel does not support timezones in datetimes. The tzinfo in the datetime/time object must be set to None.

Can anyone help me?
The code:
from datetime import datetime
from operator import index
from typing import Pattern
import win32com.client
import openpyxl
from openpyxl import Workbook
from openpyxl.styles import Font, Color, PatternFill, fills, Border, Side


outlook = win32com.client.Dispatch(""outlook.application"")
mapi = outlook.GetNamespace(""MAPI"")
account = [i for i in mapi.Accounts][0]
inbox = mapi.GetDefaultFolder(6)
test_folder = inbox.Folders[""TravelAlertReport""]
items = test_folder.Items

wb= Workbook()
planilha = wb.worksheets[0]
ws=wb[""Sheet""]

#Header

list_header = [""Status"", ""Level"", ""Location"", ""Category"", ""Date"", ""Month"", ""Year"", ""Relevant?(Yes/No)"", ""Justification"", ""Used by TST"", ""Learning Required?""]

for index, header in enumerate(list_header):
    planilha[f'{chr(ord(""A"")+ index)}1'] = header
    font_style = Font(size=12,bold=True)
    planilha[f'{chr(ord(""A"")+ index)}1'].font = font_style
    bottom = Side(border_style=""thin"", color=""000000"")
    border= Border(bottom=bottom)
    planilha[f'{chr(ord(""A"")+ index)}1'].border=border

#filter

ws.auto_filter.ref= ""A1:K99999""
ws.auto_filter.add_filter_column(1,[""Status"", ""Level"", ""Location"", ""Category"", ""Date"", ""Month"", ""Year"", ""Relevant?(Yes/No)"", ""Justification"", ""Used by TST"", ""Learning Required?""] )

#Column width dimensions
list_dimensions = [""18"", ""22.33"", ""28"", ""62.28"", ""17.56"", ""6.56"", ""4.73"", ""17.67"", ""55"", ""11.44"", ""18.33""]

for index, dimensions in enumerate(list_dimensions):
    ws.column_dimensions[f'{chr(ord(""A"")+ index)}'].width = dimensions

#Rows' content    
for index,item in enumerate(items):
    
    if ""RE:"" in item.Subject or ""FW:"" in item.subject:
        
#Time
        date_time = item.ReceivedTime
        ws.cell(row=index+2, column = 5).value = date_time

wb.save(""Report.xlsx"")

",,,,,"['\npython', 'outlook\n']"
545022,Como converter o tipo de dado de uma coluna em um data frame,"
Olá, tenho uma dúvida, como fazer a conversão de tipos de dados em uma coluna de um Data Frame ?
Tenho o seguinte conjunto de dados:
d = pd.DataFrame({'Estado':['SP','MG','PR','PB'],
                'Valores':['1500,35','4500,66','17500,00','5000,45']}) ; d

A princípio eu tentei o seguinte:
d['Valores'].astype(float)

e tive esse erro:
ValueError: could not convert string to float: '1500,35'

Então pensei, ok vamos fazer isso:
d['Valores'].aplly(lambda x: str(x).replace(',','.'))

e esse foi meu resultado:
'Series' object has no attribute 'aplly'

Como proceder ? Gostaria de converter os valores que a princípio são strings em valores do tipo float !
","
Evite usar apply quando possível e aposte nas funções vetorizadas.
Para fazer o replace e a conversão para float, use:
d = d.assign(Valores = d['Valores'].str.replace(',','.').astype(float))

","
            5
        ","
Consigo imaginar duas maneiras.
Alterar o tipo na origem
Os dados já podem vir no formato correto antes de serem inseridos no dataframe. Por exemplo:
import pandas as pd

d = pd.DataFrame({'Estado':['SP','MG','PR','PB'],
                'Valores':[1500.35, 4500.66, 17500.00, 5000.45]})

Substituir vírgula por ponto e usar uma função de conversão
d['Valores'] = d['Valores'].str.replace(',','.').astype(float)
ou
d[""Valores""] = pd.to_numeric(d[""Valores""].str.replace("","", "".""))
astype é mais geral pois permite a conversão para outros tipos não numéricos, porém to_numeric pode receber o argumento ""coerce"" no parâmetro errors, permitindo um controle melhor de valores inválidos.
","
            3
        ","['\npython', 'pandas\n']"
545018,Como identificar usos de primeira pessoa e usos de tempos verbais no futuro?,"
Eu tenho um texto longo (em português) que preciso corrigir para ""linguagem acadêmica"". Neste processo, estou tentando localizar eventuais usos de primeira pessoa gramatical (""utilizei"", ""possamos"", ""meus"", etc) e tempos verbais no futuro (""será feito"", ""serão processados"", etc).
É possível fazer isso com algum pacote em Python? Como?
Baseando-me em 1, 2, 3, 4 e 5, eu comecei minha tentativa com o NLTK e cheguei ao código abaixo, mas não consegui avançar mais, especialmente na parte de separação da conjugação, pois parece que os tags gerados são genéricos (V em vez de VBC ou VBF).
import nltk
import colorama

import joblib
teste_tagger = joblib.load('POS_tagger_brill.pkl')

mark0 = colorama.Fore.RED + colorama.Style.BRIGHT
mark1 = colorama.Style.RESET_ALL
    
document = """"""Este é um documento de teste.
Irei pensar a respeito.
Embora só tivesse um, utilizei o último.
Esta frase será detectada como um erro.
Os dados serão processados no computador, independentemente da sua estrutura.
Esta frase é falsa.
Já esta também não possui verbos no futuro.
Este será um teste para que possamos revisar um texto."""""".replace('\n', ' ')

sentences = nltk.sent_tokenize(document)
words = [nltk.word_tokenize(sent) for sent in sentences]
tagged = [nltk.pos_tag(sent) for sent in words]

for i, sentence in enumerate(tagged):
    # Isso deveria identificar os verbos, mas não encontrou nada
    marked_words = {j for (j, word) in enumerate(sentence)
                    if word[1] in [""VBC"", ""VBF""]}
    # Não faço ideia de como localizar a pessoa gramatical
    # marked_word = marked_word.union(<marcar primeira pessoa>)
    if marked_words:
        marked_sentence = ' '.join(
            [f'{mark0}{word[0]}{mark1}' if j in marked_words else word[0]
             for (j, word) in enumerate(sentence)
             ])
        print(i, marked_sentence)

",,,,,"['\npython', 'nltk', 'natural-language\n']"
545009,Reconhecer a cor mínima e máxima de uma faixa de cor RGB em uma imagem,"
Eu preciso criar uma função simples que detecta a faixa de uma cor mínima e máxima em uma imagem, preferencialmente usando um histograma.
Por exemplo, eu sei que para uma faixa de cor “azul” os valores podem ser:
Por exemplo, eu sei que para um faixa de cor ""azul"" os valores podem ser:
  # definir faixa de cor azul de RGB para HSV
  azul_i = np.array([100, 128, 0])
  azul_f = np.array([215, 255, 255])

O problema é que eu não tenho ideia de como fazer isso (achar azul_i e azul_f). Não posso usar esses valores (100, 128, 0) e (215, 255, 255) arbitrariamente (embora eu sei que eles me atendem).
Existe alguma biblioteca em python que detecta a cor e dá o valor dela em RGB?
",,,,,"['\npython', 'opencv\n']"
544947,Como se autenticar na API do Gmail de forma definitiva,"
Tenho uma cloud function que é ativada via tópicos de Pub/Sub. Ela vai rodar somente dentro do Google Cloud Platform. O que eu quero que ela faça é abrir minha caixa de e-mails e procure por alguns e-mails dentro dela. Essa parte eu já estou conseguindo fazer na minha máquina. O problema é que para acessar minha caixa de entrada, eu preciso logar com a minha conta do Google a cada tantos dias. Então, quando esse prazo de validade expira, tenho que deletar um arquivo que contém o token de acesso para que, na próxima vez que o programa for rodado, ele abra uma janela no navegador para eu logar novamente.
Aí que está o problema. Se o objetivo for hospedar esta tarefa numa cloud function, não tem como eu fazer esse login via janela de navegador. Eu queria uma solução para que aquela function pudesse acessar minha caixa de entrada a qualquer momento para sempre. Eu achei que vincular uma conta de serviço resolveria meu problema, como eu fiz no seguinte trecho:
from googleapiclient.discovery import build
from os import environ

environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'service_account.json'
session = build('gmail', 'v1')


def call_watch():
    request = {
        'labelIds': ['Label_1644067398265986618'],  # label Pagamento_streamer
        'topicName': 'projects/*****'  # essa request está correta,
                   # só censurei porque não sei se pode ser mostrado ou não
    }

    response = session.users().watch(userId = 'me', body = request).execute()
    print(response)
    print(""History ID:"", response['historyId'])
    print(""Expiration:"", response['expiration'])


call_watch()

Ao executar esse trecho, é disparado o seguinte erro:
googleapiclient.errors.HttpError: <HttpError 400 when requesting https://gmail.googleapis.com/gmail/v1/users/me/watch?alt=json returned ""Precondition check failed."". Details: ""[{'message': 'Precondition check failed.', 'domain': 'global', 'reason': 'failedPrecondition'}]"">

Antes eu usava outro método, semelhante ao que é mostrado aqui e funcionava, mas novamente, era necessário fazer login a cada pouco via browser.
",,,,,"['\npython', 'api', 'oauth2', 'gmail\n']"
544924,Não consigo armazenar na variável soma os valores em float de cada comida digitada,"

Sei fazer da maneira mais simples (o cardápio) usando só formatação, mas gostaria de saber como consigo montar o cardápio como na foto, e como uso o while e o for na construção do programa. Segue o exercício, e vou colocar no final o que eu já tentei fazer:

Exercício:
Dado a tupla abaixo, faça um programa que:
t1 = ('Doce', 2.3, 'Bala ', 0.15, 'Pizza ', 28.9, 'Arroz ', 4.5, 'Paçoca ', 0.5, 'Pamonha', 5.4)


O usuário visualiza o cardápio(o formato tem que sair como na foto)



o usuário digita qual item ele quer comprar.
*A seguir pergunta-se se ele quer algo a mais, caso ele queira, vai somando todos os valores do pedido numa variável soma.
No final, printe para o usuário o valor total da conta dele.

pontos = ('-'*30)
print(pontos)
print('-'*10,'CARDÁPIO','-'*10)
print(pontos)

for i in range(len(t1)):
 print(t1[i])
print()

carrinho = input(""Digite a sua escolha do cardápio: "")
mais_itens = input(""Você quer continuar a adicionar mais itens? (s/n): "")

soma = 0

while mais_itens == 's':

 carrinho = input(""Digite a sua escolha do cardápio: "")
 mais_itens = input(""Você quer continuar a adicionar mais itens? (s/n): "")


 if carrinho == 'Doce':
   soma = t1[1]
   
 elif carrinho == 'Bala':
   soma = t1[3]
   
 elif carrinho == 'Pizza':
   soma = t1[5]
   
 elif carrinho == 'Arroz':
   soma = t1[7]
   
 elif carrinho == 'Paçoca':
   soma = t1[9]
   
 elif carrinho == 'Pamonha':
     soma = t1[11]

print('O valor total da sua conta é: R${}.'.format(soma))




","
É que você tá determinando um novo valor pra variável soma a cada decisão do usuário ao invés de somar. Quando se usa só o ""="", atribui-se um novo valor à variável. Nesse caso, como você quer somar um valor a ela, precisa usar ""+="", que soma um valor a uma variável
","
            -3
        ",,,"['\npython', 'tuple\n']"
544904,Alterar tipo 'None' de um dicionário em python,"
Preciso alterar o valor de uma chave de um dicionário, cujo valor vem como 'None'.
Exemplo: a = {b: 'qualquer', c: 'qualquer'}, sendo que esse é meu dicionário em python.
Sendo que 'qualquer' se refere a valores aleatórios, sendo que também pode vir valores do tipo None. Não posso fazer a modificação de modo geral, pois não sei quando irá vir valor do tipo None ou não.
Agora eu quero pegar o valor de a['b'] tal que, a['b'] !=  None. Ou sendo mais preciso, quando a['b'] == None fazer virar um string vazia, ou seja, a['b'] == """".
Eu tentei utilizar a função re.sub() , mas sem sucesso:
a['b'] = re.sub(None, """", a['b'])
","
Se temos um dicionário do tipo:
a = {b: 'qualquer', c: 'qualuqer'} onde qualquer diz respeito a qualquer entrada aleatório, então para que a['b'] quando for None ser substituido por uma string vazia, do tipo """", basta fazer o seguinte teste com if..
a[""b""] if a[""b""] is not None else """"
Sendo assim, se a['b'] for None irá ser substituido por """".
","
            -1
        ",,,"['\npython', 'string', 'dicionário\n']"
544901,Datatime dando erro python,"
mg_time = str(datetime.strptime((datetime.now()).strftime('%Y-%m-%d ') + mg_time, '%Y-%m-%d %H:%M')) + timedelta(minutes=timeframe)[11:-3]
Sou novo em python e não sei muito o que fazer estou meio perdido com esse erro já mudei algumas coisas mas nada vai parece.
Bom no caso esse programa tinha que funcionar como um catalogador de Velas na IQ Option porém quando ele começa a carregar para catalogar ele da o erro eu queria que ele executasse me mostrando quantidade de velas verdes e velas vermelhas que dão frequentemente em um determinado tempo que eu coloco no link do github tem o código e o vídeo que eu usei para fazer o codigo
link do código completo do git:
[]- https://github.com/mr-diogo/iqteste/blob/main/iq.py
Isso é para funcionar para catalogar as velas da IQOption mas ele chega nesse erro de datetime e eu não sei o que fazer
File ""c:\Users\Diogo\Desktop\iq\botzin.py"", line 101, in <module>
    mg_time = str(datetime.strptime((datetime.now()).strftime('%Y-%m-%d ') + mg_time, '%Y-%m-%d %H:%M')) + timedelta(minutes=timeframe)[11:-3]
  File ""C:\Users\Diogo\AppData\Local\Programs\Python\Python310\lib\_strptime.py"", line 568, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File ""C:\Users\Diogo\AppData\Local\Programs\Python\Python310\lib\_strptime.py"", line 349, in _strptime
    raise ValueError(""time data %r does not match format %r"" %
ValueError: time data '2022-03-08 2022-02-25' does not match format '%Y-%m-%d %H:%M'

","
para todo o iniciante, não faça tudo em uma linha, parece legal, mas passa longe de ser
levando em conta a linha tirada do codigo, e o valor passado
mg_time = '2022-02-08 18:35'
mg_time = str(datetime.strptime((datetime.now()).strftime('%Y-%m-%d ') + mg_time, '%Y-%m-%d %H:%M')) + timedelta(minutes=timeframe)[11:-3]

separando ela em uma operação por linha
from datetime import *

mg_time = '2022-02-08 18:35'

mg_time2 = datetime.now()
mg_time2 = mg_time2.strftime('%Y-%m-%d ')
mg_time2 = mg_time2 + mg_time
mg_time2 = datetime.strptime(mg_time2, '%Y-%m-%d %H:%M')
mg_time2 = str(mg_time2)
mg_time2 = mg_time2 + timedelta(minutes=timeframe)[11:-3]

print(mg_time2)

o erro esta na soma: mg_time2 + mg_time
ValueError: time data '2022-03-09 2022-02-08 18:35' does not match format '%Y-%m-%d %H:%M'

a mensagem de erro indica que se tem a data repetida na string passada
","
            0
        ",,,['\npython\n']
544896,Diferença nos dados entre o pycharm e excel - python,"
Olá, por que no pycharm aparece o dataframe de uma forma mas quando realizo o download aparece de outra no excel ?
*Sendo que quero o a tabela no formato do excel mas realizando a contagem dos telefones


df = pd.pivot_table(df,
               index=['field_3'],
               columns=['isdn_class'],
               #values=['contagem'],
               #aggfunc=np.count(),
               fill_value=''
               )



",,,,,"['\npython', 'dataframe', 'pycharm\n']"
544895,"SQLITE3 + PYTHON usando attach em duas ou mais tabela, e verificando duplicidades","
#CHAMANDO MODULOS DA PYTHON PARA RODAR OS PARAMETROS
import sqlite3 #se não tiver instale (pip install sqlite3)
from sqlite_utils import Database #se não tiver instale (pip install sqlite_utils)

#LOCALIZANDO OS BANCOS DE UTILIZAÇÃO
db = Database(""banco1.db"") #contem a tabela1 
db.attach(""nomequalquer"", ""banco2.db"")  #contem a tabela2

print('se não tiver duplicidade na segunda tabela')
cursor = db.execute(""""""
                    SELECT NOME FROM tabela1
                    WHERE NOT EXISTS (SELECT * FROM tabela2 WHERE tabela1.NOME = tabela2.NOME)
                    """""")  
records = cursor.fetchall() 
for row in records:
    print(str(row[0])) 
print('se tiver duplicidade na segunda tabela')

acursor = db.execute(""""""
                    SELECT NOME, SOBRENOME FROM tabela1 INNER JOIN tabela2 ON tabela1.NOME = tabela2.NOME)
                    """""") 
#O SOBRENOME ESTÁ SENDO CHAMADO DA TABELA2 

arecords = acursor.fetchall() 
for arow in arecords:
    print(+ ) ```


> GOSTOU PROCURE MAIS SOBRE AIRDROPSQB E DESCUBRA O POR QUE ESTOU CRIANDO ESSAS CONSULTAS!

",,,,,"['\npython', 'sql', 'sqlite', 'private\n']"
544874,Removendo linhas de uma matriz em python,"
Estou com um problema ao percorrer uma matriz e remover toda a linha se o valor da coluna 1 for maior que 70. Sou iniciante em python, essa matriz é originada da função cv2.HoughCircles, código abaixo:
circles = cv2.HoughCircles(grey,
                          cv2.HOUGH_GRADIENT,
                          dp=1.5,
                          minDist=45,
                          param1=100,
                          param2=15,
                          minRadius=15,
                          maxRadius=25)
circle = np.uint16(np.around(circles))

Se eu dou um print(circle), retorna isso:
[[[ 947   67   19]
  [ 788   35   20]
  [ 452   49   21]
  [ 859   67   19]
  [ 193   44   16]
  [ 268   38   16]
  [1027   70   24]
  [  40   34   24]
  [ 398   38   18]
  [ 334   65   17]]]

No caso, precisaria remover a linha 6 que contém o valor 70 na coluna 2. Mas, ao tentar rodar um for e usar a função np.delete, a linha não é apagada. Simplesmente não acontece nada.
for index, i in enumerate(circle[0]):
    
    if (i[1] >= 70):
        circle = np.delete(circle, index, axis=1)

Ele chega a entrar dentro do if, mas não apaga. Tentei printar somente a coluna 1 para tentar fazer uma possível comparação com o if, mas não obtive o resultado desejado, repetiu apenas a linha 1 várias vezes. Código:
for i in range (len(circle)):
    for j in range (len(circle[i])):
            print(circle[i][1])

Resultado:
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]
[788  35  20]

Alguém pode me ajudar com esse problema?
","
No python não existe ""matriz"" digamos assim, logo devemos usar a biblioteca numpy como você usou. Portanto para excluir a linha de sua ""matriz"", utilizaremos:
np.delete(circle,(5), axis = 0)


A ""matriz"" gerada é um conjunto de arrays, por isso que só está imprimindo a mesma linha.
Caso queira ver a documentação da biblioteca, também é uma otima referência: https://numpy.org/doc/stable/reference/generated/numpy.delete.html
","
            -1
        ",,,"['\npython', 'opencv\n']"
544829,Método reverse retorna None,"
Estou aplicando o método reverse em uma lista e a mesma retorna None.
Ex. 
teste = ['audi', 'subaru', 'fiat', 'ford']
print(teste.reverse())


None

","
Sempre que estiver na duvida consulte a documentação!
Atente na documentação para o reverse:

list.reverse()
Reverse the elements of the list in place.

Que traduzido significa: inverte os elementos diretamente na lista. Mas não diz que retorna alguma coisa, por isso não retorna nada. A documentação é sempre clara nos retornos indicando qual é sempre que existe um. Veja o do count por exemplo:

list.count(x)
Return the number of times x appears in the list.

No código que tem o mais natural é fazer como o @Maniero mostrou em que faz reverse e depois utiliza a lista após ela ter sido invertida. Se apenas necessitar da lista invertida para uma operação, e que não seja permanente pode faze-lo com slicing e step negativo:
>>> teste = ['audi', 'subaru', 'fiat', 'ford']
>>> print(teste[::-1])
['ford', 'fiat', 'subaru', 'audi']

Agora relembro que isto é ligeiramente diferente do que tem na pergunta pois neste meu exemplo a lista não foi invertida, apenas utilizei a inversão da lista no print, mas a lista original mantem-se igual. Em muitos cenários isto serve para o objetivo, mas noutros pode não servir.
","
            6
        ","
O método list.reverse, assim como o list.sort, funcionam in-place, ou seja, eles alteram a lista original ao invés de retornar uma cópia alterada.
Se você não quer alterar a lista original você pode usar as funções reversed() e sorted() que têm a mesma função porém retornam um iterator, sem alterar a lista original.
Você pode usar o iterador caso não precise ler os valores mais do que uma vez, porém se precisar pode-se converter o iterador para um list usando teste = list(iterador). Pode ser menos performático dependendo do tamanho da lista revertida, mas para listas pequenas não tem grande impacto.
teste = ['audi', 'subaru', 'fiat', 'ford']

rev_iterator = reversed(teste) # Iterator que itera a lista de trás pra frente
rev = list(rev_iterator)       # consumindo o iterator e atribuindo a uma lista

print(rev_iterator)  # <list_reverseiterator object at 0x7fdd5beea6a0>
print(rev)           # ['ford', 'fiat', 'subaru', 'audi']

Repl.it do código funcionando
","
            5
        ","['\npython', 'python-3.x', 'lista\n']"
544787,Como fazer um input de texto em uma janela?,"
def click(x, y): 
pyautogui.moveTo(x, y)
pyautogui.click()

ef check_screen():
button_pos = pyautogui.locateOnScreen('fila.png', confidence = 0.7 )
if button_pos != None: 
    click(button_pos.left, button_pos.top)
    return True
return False


def click_bar(a, b):
pyautogui.moveTo(a, b)
pyautogui.click()
pyautogui.write(text_var)

def click_bar(a, b):
pyautogui.moveTo(a, b)
pyautogui.click()
pyautogui.write(text_var)

def main():    
while True:   
    if check_screen():
        print('PARTIDA ACEITA')
    if check_bar():
        print('CLIQUEI NA BARRA DE BUSCA')
        break

def call_main(): 
while True:
    main()

janela = Tk()
janela.title('BOT DO LOL')
janela.geometry('300x300')


orientacao = Label(janela, text = 'Clique no botao para ativar o automatizador')
orientacao.grid(column = 0, row = 0, padx = 0 , pady = 0)

text_var = StringVar()
texto_input = Entry(janela, background = 'white', width= 10, font = 'Arial 15', textvariable = text_var).place(x = 0, y = 50)


botao = Button(janela, text = 'ATIVAR', command =  call_main)
botao.grid(column = 0, row = 1, padx = 10, pady = 90)

janela.mainloop()

Meu problema está no text_var = StringVar(), pois sempre me retorna TypeError: 'StringVar' object is not iterable
Meu objetivo é fazer a função click_bar escrever o que eu digitar no text_var
",,,,,['\npython\n']
544783,Como ler várias listas dentro do Pandas Dataframe Python,"
Estou tentando colocar varias listas dentro do PandasDataFrame, mas ele está lendo somento a última lista
Como ler todas listas abaixo e colocar no  Data Frame do Pandas?
Código Scrapy:
import requests
import urllib.request
import pandas as pd
url = 'https://statusinvest.com.br/'
response = requests.get(url)

from bs4 import BeautifulSoup
soup = BeautifulSoup(response.content, 'html5lib')

# coletando todos os ativos com um laço for
lista_ativos = []

for ativos in soup.find_all(class_=""info w-100""):
  
    # Obtain the text from the received
    # tags
    lista_ativos=ativos.get_text()
    lista_ativos = lista_ativos.split()
    print(lista_ativos)

Saída:
['SUZB3', 'SUZANO', 'S.A.', 'arrow_upward', '6,70%', 'R$', '57,33']

['BRAP4', 'BRADESPAR', 'arrow_upward', '4,97%', 'R$', '34,43']

['KLBN11', 'KLABIN', 'arrow_upward', '4,83%', 'R$', '24,32']

['COTY34', 'COTY.', 'INC.', 'arrow_downward', '-9,38%', 'R$', '20,57']

Saída:
## PANDAS #########################
#pip install pandas
import pandas as pd
import numpy as np

df = pd.DataFrame(lista_ativos)

print(df)

Saída:
                0

0          TPRY34

1        TAPESTRY

2             INC

3  arrow_downward

4          -9,40%

5              R$

6          167,30

","
Antes da solução, repare que todas as listas têm que possuir o mesmo número de elementos. Mesmo que o elemento seja None ou string vazio ''. Alguns dos exemplos que vc passou, possuem S.A. ou INC.
Solução: Use pd.DataFrame.from_records()
Veja exemplo:
import pandas as pd

lista = [
    ['SUZB3', 'SUZANO', 'arrow_upward', '6,70%', 'R$', '57,33'],
    ['BRAP4', 'BRADESPAR', 'arrow_upward', '4,97%', 'R$', '34,43']
    ['KLBN11', 'KLABIN', 'arrow_upward', '4,83%', 'R$', '24,32'],
    ['COTY34', 'COTY.', 'arrow_downward', '-9,38%', 'R$', '20,57']
]


df = pd.DataFrame.from_records(lista, columns=[""id"", ""empresa"", ""arrow"", ""val1"", ""moeda"", ""val2""])

df
       id    empresa           arrow    val1 moeda   val2
0   SUZB3     SUZANO    arrow_upward   6,70%    R$  57,33
1   BRAP4  BRADESPAR    arrow_upward   4,97%    R$  34,43
2  KLBN11     KLABIN    arrow_upward   4,83%    R$  24,32
3  COTY34      COTY.  arrow_downward  -9,38%    R$  20,57

Em tempo: As colunas val1 e val2 são do tipo object. Para este caso, todos os valores são do tipo str.
","
            0
        ",,,"['\npython', 'lista', 'pandas\n']"
544766,Enviar mais de um anexo no e-mail com Python,"
Olá. possuo uma aplicação que envia assinaturas de e-mail (.png) por Python e funciona muito bem. A assinatura é enviada no corpo do e-mail que é do tipo html.
Estou enfrentando problemas para enviar esses e-mails com a assinatura.png no corpo e um arquivo em anexo. O arquivo é um tipo específico (.dbf). Sou iniciante em Python e estou realmente travado.
Segue meu código
import email
import os
import smtplib
from email.mime import image
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email import encoders
import time

email = '[emailpareenvio]'
cam_arquivo = 'D:\\teste.dbf'
cam_assinatura = 'D:\Assinatura.png'

def enviar_email(cam_assinatura, email, cam_arquivo):
    # Iniciar servidor SMTP
    host = ""smtp-mail.outlook.com""
    port = ""587""
    login = ""[emailqueenvia]""
    senha = ""[senhaddoemail]""

    server = smtplib.SMTP(host, port)
    server.starttls()
    server.login(login, senha)

    # Construir o corpo
    corpo = ""<b> Olá, tudo bem?</b> <br/> <br/> Esse e-mail foi gerado automaticamente.<br/>Pegue o arquivo preterido.<br/>Se alguma informação estiver equivocada ou algum problema surgir, entre em contato comigo no e-mail.<br/><br/><b>Abraço!</b><br/> <p> </p><figure><br/>Atenciosamente,<p></p> <br/><figure> <img src = 'Assinatura.png'  alt='Assinatura' > <figure> <br/> <font color='Green'> <font size='6'> <font face='Webdings'> P</font></font><font size='1'> Antes de imprimir, pense em sua responsabilidade e compromisso com o MEIO AMBIENTE. </font></font>""

    email_msg = MIMEMultipart()
    email_msg['From'] = login
    email_msg['To'] = email
    email_msg['Subject'] = ""Envio do Arquivo""
    email_msg.attach(MIMEText(corpo, 'html'))

    # Abrir o arquivo em modo leitura e binário
    attachmente = open(cam_assinatura, 'rb')
    # Ler o arquivo em modo binario e jogamos codificado em base 64
    att = MIMEBase('application', 'octer-stream')
    att.set_payload(attachmente.read())
    encoders.encode_base64(att)

    # Adicionamoeso cabeçalho no tipo anexo de e-mail
    att.add_header('Content-Disposition',
                   f'attachment; filename=Assinatura.png')

    # Fechamos o arquivo
    attachmente.close()

    # Colocamos no corpo do e-mail
    email_msg.attach(att)

    # Enviar e-mail
    server.sendmail(email_msg['From'], email_msg['To'], email_msg.as_string())

    # Encerrando
    server.quit()

    time.sleep(1)
    
enviar_email(cam_assinatura,email,cam_arquivo)

Gostaria de saber se é possível enviar dois anexos no mesmo e-mail sendo um a assinatura no corpo e o outro o arquivo (.dbf). E se é possível, como eu encaixo em meu código?
",,,,,"['\npython', 'envio-de-email', 'anexo\n']"
544757,Django - Como atualizar lista,"
Tenho um conjunto de livros que sao alocados em prateleiras/estantes. Primeiro escaneio a prateleira e em seguida os livros para registra-los (sua posição). Um livro pode ser mudado de posição. Entretanto, no dia seguinte ao escanear o livro que foi mudado da prateleira 2 para a 1 fica registrado nas duas posições. Como posso resolver isso ?
Models.py
class Shelf(models.Model):
    shelf = models.CharField(max_length=50, verbose_name=""Shelf"", null=True, blank=True)
    def __str__(self):
        return  (""{}"".format(self.shelf))
    
class OrderNumberShelf(models.Model):
    roll_number_shelf = models.CharField(max_length=50, verbose_name=""Roll Number"", null=True, blank=True, unique=True)
    shelf = models.ForeignKey(Shelf, on_delete=models.CASCADE,  null=True, blank=True)
    sm = models.ForeignKey(Material_type, on_delete=models.CASCADE,  null=True, blank=True)
    def __str__(self):
        return  (""{} "".format(self.roll_number_shelf))


",,,,,"['\npython', 'django\n']"
544727,Diferença entre os métodos casefold() e lower(),"
Me deparei com o método casefold, e até onde eu percebi ele faz exatamente a mesma coisa que o lower. Tem algum exemplo da diferença entre os dois? E a utilidade desse método casefold?
","
A diferença é que cada um usa um algoritmo distinto para fazer suas conversões (apesar de muitas vezes darem o mesmo resultado).
Segundo a documentação, lower faz o seguinte:

Return a copy of the string with all the cased characters [4] converted to lowercase

E o [4] acima é um link para a definição de ""cased character"":

Cased characters are those with general category property being one of ""Lu"" (Letter, uppercase), ""Ll"" (Letter, lowercase), or ""Lt"" (Letter, titlecase).

E como essas categorias abrangem vários caracteres (não apenas ASCII, ver mais informações sobre essas categorias aqui, aqui e aqui), lower converte qualquer caractere Unicode que esteja nestas categorias para sua versão em minúscula, caso exista (se não existir, o mesmo caractere é retornado). Por exemplo, a letra grega Δ (Delta maiúsculo, code point U+0394, portanto um caractere não-ASCII), funciona perfeitamente com lower:
s = 'Δ'

print(s.lower())
print(s.casefold())
print(s.lower() == s.casefold())

O código acima imprime:
δ
δ
True

Repare que casefold também deu o mesmo resultado de lower. Isso vai acontecer para muitos caracteres, mas existe uma diferença. A documentação diz que casefold é similar a lower, porém é mais ""agressivo"" ao eliminar ""all case distinctions"".
E esta é a diferença: o algoritmo usado por cada um. A documentação diz que casefold usa o algoritmo de casefolding, e lower usa o algoritmo de lowercasing, ambos descritos pelo Unicode.

A diferença
As documentações de ambos os métodos citam a seção 3.13 do Unicode. Se verificarmos o respectivo documento, veremos a diferença entre eles.
O algoritmo em si é bem complicado, com definições que se estendem por várias páginas, mas o ponto é que os algoritmos de lowercasing e casefolding usam regras diferentes. Claro que para muitos casos o resultado é o mesmo, mas existem diferenças importantes que justificam a existência desses dois métodos distintos.
Um caso clássico é o caractere ß (LATIN SMALL LETTER SHARP S), que não é modificado por lower por já ser uma letra minúscula (ele faz parte da categoria ""Letter, lowercase""), mas é modificado por casefold (o resultado é ss):
s = 'ß'
print(s.islower()) # True
print(s.lower()) # ß
print(s.casefold()) # ss

O fato de usar um algoritmo diferente (e mais complicado) faz com que casefold nem sempre retorne caracteres minúsculos. Por exemplo, para o caractere Ꮛ (CHEROKEE LETTER QUV), que é uma letra maiúscula, casefold retorna sua versão em maiúscula:
s = 'Ꮛ'
print(s.isupper()) # True (é maiúscula)
# casefold retorna a versão maiúscula do caractere
print(s.upper() == s.casefold()) # True
print(s.lower() == s.casefold()) # False

Estas são as diferenças. Dependendo do seu cenário, elas podem ou não serem revelantes (por exemplo, se está lidando apenas com textos em português, lower é mais que suficiente).
Vale lembrar que a documentação do Python diz que ""Casefolded strings may be used for caseless matching"" (casefold pode ser usado para comparações case insensitive), enquanto que na documentação de lower não há menção a isso (mas novamente, dependendo do caso, lower pode ser usado sem problemas para tal finalidade).
O documento do Unicode também diz algo similar:

the main purpose of case folding is to contribute to caseless matching of strings, whereas the main purpose of case conversion is to put strings into a particular cased form.

Ou seja, casefolding é o mais recomendado para comparações case insensitive, enquanto os outros algoritmos (lowercasing, uppercasing, etc) são mais apropriados para converter a string para uma determinada forma (e novamente, claro que dependendo do caso, lowercasing já seja suficiente).
Enfim, o importante é saber as diferenças, e se/como isso afetará os seus sistemas.
","
            5
        ","
lower() foi criado nas primeiras versões de Python e está preparando para fazer a operação em um texto em ASCII (Fonte). Em nenhum momento está dito aqui que só funciona com ASCII, com Unicode o resultado poderá não ser o esperado.
A evolução levou as pessoas usarem Unicode já que permite combinações mais complexas e pode trabalhar com muito mais formas de formar palavras e ter letras. Para fazer operações em texto que considerem Unicode precisa de funções que consigam entender isto, sem quebrar a compatibilidade com o que já existia. Para isto foi criada a casefold().
Então você tem que saber qual é o formato que está usando o seu texto e considerar se faz diferença usar um ou outro de acordo com as regras de cada cultura.
Exemplo onde não faz diferente porque a função básica entender o ASCII estendido e depois quando usa caractere que não faz parte do ASCII:
print(""FORMATAÇÃO"".lower())
print(""FORMATAÇÃO"".casefold())
print(""der Fluß"".lower())
print(""der Fluß"".casefold())

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
","
            1
        ","['\npython', 'python-3.x', 'string\n']"
544646,Comparar strings com for e if no python(exercício),"
Olá, eu estou fazendo um simples exercício no Python para aprender melhor a linguagem. O exercício consiste em imprimir valor true quando uma string de tamanho qualquer contém uma letra de outra string. exemplo string 1 abc e string 2 bca saida: true. Mas quando a string não contém nenhuma letra da segunda o valor deve ser false. Meu código não consegue detectar a letra de forma correta caso a letra da segunda string esteja numa posição diferente exemplo: aa cbaa false, mas deveria ser true. Segue aqui o código:
acredito que so estou conseguinto comparar a posição zero.
#definfo tamanho da lista
prescricao = list(range(26)) #nome do medicamento prescrito
estoque = list(range(26))# nome do medicamento no estoque
#ciclo for ´para usuário digitar dados
for n in prescricao: # ler dados de prescrição
  prescricao[n] = input("""") #entrada de dados
  if prescricao[n] == '':  #comando ""break"" caso usuário apertar enter
        break
for e in estoque:  # ler dados de estoque
  estoque[e] =  input("""") #entrada de dados
  if estoque[e] == '':  #comando ""break"" caso usuário apertar enter
        break
est = len(estoque)  
print(est)
for i in range(est):
  if estoque[i] == prescricao[i]:
    print(True)
  else: 
    print(False)
  exit()

","
Você está certo em dizer que só está conseguindo comparar a posição zero dos dois strings. Se olharmos a estrutura desse for loop:
for i in range(est):
  if estoque[i] == prescricao[i]:
    print(True)
  else: 
    print(False)
  exit()

Vemos que já na primeira iteração o seu código chama a função exit(), o que interrompe o programa imediatamente.
Há boa parte do seu código que poderia ser reestruturado, mas vou focar na resposta da sua pergunta aqui: imprimir valor true quando uma string de tamanho qualquer contém uma letra de outra string.
O código abaixo realiza essa tarefa com os seguintes passos:

itera sobre as letras de s1;
para cada letra, pergunta se a letra aparece em s2 (usando para isso o operador in);

se for verdade: imprime True e termina a iteração usando break (não precisamos mais iterar porque já temos a resposta);
se não for verdade: tenta com a próxima letra;


se nenhuma letra de s1 aparecer dentro de s2, então o break nunca será executado e o for loop irá iterar por todos os caracteres de s1. Nesse caso, podemos adicionar um else depois do for que funciona como um ""no-break"": SE o for loop não quebrar, ENTÃO o que está no else executa.
O else corresponde a nenhuma letra de s1 estar em s2, portanto o programa imprime False.

s1 = 'abc'
s2 = 'bca'

for letra in s1:
    if letra in s2:
        print(True)
        break  # ""quebra"" e sai do for loop
else:  # caso o for loop não tiver sido quebrado ...
    print(False)

Se você não está acostumado a usar else junto de um for loop, outra ideia é transformar isso em uma função que retorna True/False, e aí imprimir o retorno:
def letra_dentro_de(string_busca, string_comparacao):
    for letra in string_busca:
        if letra in string_comparacao:
            return True
    return False


s1 = 'abc'
s2 = 'bca'
resultado = letra_dentro_de(s1, s2)
print(resultado)  # output: True

Nos dois exemplos, se você trocar s1 por um string que não inclui nenhuma das letras de s2 (ex: s1 = 'def'), verá que o código imprime False.
","
            0
        ","
Está é maneira mais fácil de ser entendida, eu usei o in que seria a mesma coisa de contem também tem a função find()
aux = [5, 1, 3, 4, 10]
comparador = [1, 2, 3, 4]

for i in aux:
    if i in comparador: # verificando se o aux contem no comparador, returna valor e True
        print(i, True)
    else: # senao retorna o valor e False
        print(i, False)

","
            0
        ","['\npython', 'lógica\n']"
544608,Imprimir (print) uma lista de dicionários,"
Criei um dicionário para cara linha de um arquivo e depois os inseri numa lista. A forma que extraí foi:
pessoas = []
with open('pessoas.txt') as ficheiro:
    texto = ficheiro.readlines()
    tag = {'id': [], 'nome': [], 'apelido': [], 'nascimento': []}
    keys = list(tag.keys())
    contador = 0
    while contador < 4:
        for line in texto:
            values = texto[contador].strip().split(';')
            pessoas.append(dict(zip(keys, values)))
            contador += 1

A lista pessoas ficou assim:
[{'id': '1', 'nome': 'Carlos', 'apelido': 'Pérez', 'nascimento': '05/01/1989'},
{'id': '2', 'nome': 'Manuel', 'apelido': 'Heredia', 'nascimento': '26/12/1973'},
{'id': '3', 'nome': 'Rosa', 'apelido': 'Campos', 'nascimento': '12/06/1961'},
{'id': '4', 'nome': 'David', 'apelido': 'García', 'nascimento': '25/07/2006'}]

Agora gostaria de um print disso de uma forma mais ""amigável"", por exemplo:
(id=1) Carlos Pérez => 05/01/1989

","
for p in pessoas:
    print(""(id={id}) {nome} {apelido} => {nascimento}"".format(**p))

Explicação:

Laço for percorre todos os dicionários dentro da lista pessoas.
Imprime cada dicionário com print combinado com o método format para posicionar o conteúdo.
Como toda a informação está em um dicionário, usa-se o operador ** para desempacotá-lo e deixar a chamada ao print mais compacta e legível.

","
            2
        ","
Você pode usar um print formatado:
print(""(id={}) {} {} => {}"".format(item['id'], item['nome'], item['apelido'], item['nascimento']))

As chaves {} são substituídas pelos valores passados como parâmetros no método format.
Mais detalhes sobre o uso do método String.format no link associado acima.
","
            0
        ","['\npython', 'lista', 'dicionário', 'print\n']"
544569,Loop até ser verdadeiro - Python,"
Olá, tudo bem?
Estou precisando de uma ajuda com um código que estou montando, sou novo em Python e acredito que seja algo simples. O objetivo do código é validar se um arquivo com determinado nome já está disponível em um determinado caminho, sendo que este arquivo é salvo diariamente em horários diferentes.
Basicamente, o código verifica se o arquivo já existe na pasta e se não existir (não foi salvo ainda), ele deve aguardar alguns minutos e realizar a consulta novamente. Porém, aparentemente, o código não realiza a consulta após o sleep.
import os
from datetime import datetime, timedelta
import time

dia=datetime.today()- timedelta(days=1)
dia2= dia.strftime('%d%m%y')
 
arquivo=""PROD_""+dia2

caminho=r""C:\Users\Downloads\pasta2""


for file in os.listdir(caminho):
    if file.startswith(arquivo) ==True:
        print(arquivo)
    else:
        #time.sleep(120)
        print(""arquivo ainda não disponivel"")

Já tentei incluir o while também, mas aparentemente não funcionou.
Obrigado.
","
Você está percorrendo a lista de arquivos existentes no diretório, e uma única vez. Eu tentaria a seguinte lógica: ""enquanto não existir o arquivo tal, não saia daqui"". Isso significa um loop while, e dentro dele uma verificação direta se tal arquivo existe. Algo assim:
while not os.path.isfile(caminho_completo):
    print(""arquivo ainda não disponivel"")
    time.sleep(120)

# Aqui você segue considerando que o arquivo já está disponível

","
            3
        ","
Em qualquer linguagem a instrução for significa ""enquanto"". Tendo isso em vista o seu for quer dizer:
enquanto conter file em caminho 
execute 

Como o arquivo não está dentro da pasta, ou seja, não contem file em caminho, o seu for não sera executado e apos o primeiro loop será encerrado. Acredito que o que voce deseja seja:
`
for file not in os.listdir(caminho):
    if file.startswith(arquivo) == True:
        print(arquivo)
    else:
        #time.sleep(120)
        print(""arquivo ainda não disponivel"")`

Ou seja enquanto file não existir em caminho continua o loop.
","
            0
        ","['\npython', 'python-3.x', 'loop\n']"
544536,Quando eu executo meu código ele apresenta o seguinte erro: TypeError: Dispatch() missing 1 required positional argument: 'dispatch',"
import win32com.client as win32

**oulook = win32.Dispatch()**

# Integração com Outlook
outlook = win32.Dispatch('outlook.application')

#Email

email = outlook.CreateItem(0)

#Configurar informações de email

email.To = ""andrethomezinho@gmail.com""
email.Subject = ""assunto""
email.HTMLBody = """"""<p>Olá André, eu so o Python kkkj</p>""""""

email.Send()
print('Email enviado')

","
Ao que me parece, está faltando o argumento dispatch nessa linha:
outlook = win32.Dispatch('outlook.application', dispatch=""<aqui vai o dispatch>"")

","
            0
        ",,,"['\npython', 'email\n']"
544522,Como alterar a formatação pra milhar exemplo (0000.00),"
``Certo pessoal to em duvida de como faço pra colocar milhar em toda coluna
exemplo tenho uma coluna que ela fica com algum valor 33.90, como faço pra deixa ela nesse formato de '0000.00'
exemplo 33.90 >>>>> 0033.90
no python é possivel tbm converter um arquivo aberto em excel, para txt (separado por tabulações)
Exemplo do codigo:
Desculpa, não expliquei direito mas o codigo seria assim:
tabela = pd.read('arquivo1.xlsx')
valor_formatado = tabela ['Valor'] ...
print(Valor_formatado)
Valor                                     Valor
33.90                   >>>>>>           0033.90
123.78                                   0123.78
75.96                como gostaria:      0075.96
876.01                                   0876.01
....                                     ...

depois como faria pra salvar essa coluna em .txt

",,,,,['\npython\n']
544514,Erro na resolução de um sistema linear,"
Prezada (o),
Estou resolvendo um problema de diferença finita, o código está correto, porém ao resolver o sistema linear, apresenta mensagem de erro.
Poderia me ajudar por favor?
import numpy as np 
def p(x):
  return 0
def q(x):
  return 0
def r(x):
  return -100

def diffinita(x0,y0,xf,yf,N):
  # Variáveis iniciais
  delta_x = (xf-x0)/N
  vetor_x = np.linspace(x0+delta_x,xf-delta_x,N-1)
  dim_sist = N-1 
  A = np.zeros((dim_sist,dim_sist))
  print(A)
  b = np.zeros(dim_sist)
  print(b)

  # Elaboração da matriz 
  for i in range(dim_sist):
    x = vetor_x[i]
    for j in range(dim_sist):
      if i==j:
        A[i][j]=2+q(x)*pow(delta_x,2)
      elif i==(j+1):
        A[i][j]=-1-(p(x)*delta_x)/2
      elif i==(j-1):
        A[i][j]=-1+(p(x)*delta_x)/2
      else:
        A[i][j]=0
    # Montagem vetor b 
    for i in range(dim_sist):
      x = vetor_x[i]
      if i==0:
        b[i]= (1+p(x)*delta_x/2)*y0-r(x)*pow(delta_x,2)
      elif i==(dim_sist-1):
        b[i]= (1-p(x)*delta_x/2)*yf-r(x)*pow(delta_x,2)
      else:
        b[i]=-r(x)*pow(delta_x,2)

    y = np.linalg.solve(A,b) # Esta declaração que apresenta o erro 
    
  return y

  



y = diffinita(0,0,0.1,0,4)

for i in range(len(y)):
  print(""y="",y[i])

```
LinAlgError                               Traceback (most recent call last)
<ipython-input-70-0a078b885b7b> in <module>()
     47 
     48 
---> 49 y = diffinita(0,0,0.1,0,4)
     50 
     51 for i in range(len(y)):

2 frames
<__array_function__ internals> in solve(*args, **kwargs)

/usr/local/lib/python3.7/dist-packages/numpy/linalg/linalg.py in _raise_linalgerror_singular(err, flag)
     86 
     87 def _raise_linalgerror_singular(err, flag):
---> 88     raise LinAlgError(""Singular matrix"")
     89 
     90 def _raise_linalgerror_nonposdef(err, flag):

LinAlgError: Singular matrix

","
O erro está de acordo com o a matriz que seu código produz. Segundo a documentação da função numpy.linalg.solve, esse erro é erguido quando a matriz é singular. Matrizes singulares possuem determinante nulo, e o sistema por elas representado não possui solução única  (apresentando zero ou infinitas soluções).
Podemos confirmar a singularidade de A se modificarmos o seu código para:
# ...

print(A)
y = np.linalg.solve(A,b) # Esta declaração que apresenta o erro

# ... 

Vemos que, imediatamente antes da linha que ergue o erro, a matriz A tem esses valores:
[[ 2. -1.  0.]
 [ 0.  0.  0.]
 [ 0.  0.  0.]]

É facilmente perceptível por análise visual (mas também checável com np.linalg.det(A)) que a matriz tem determinante zero, e portanto é singular.
","
            0
        ",,,"['\npython', 'matriz', 'script', 'syntax-error\n']"
544450,Erro ao criar usuario Django Rest Framework,"
Estou tendo problemas em cadastrar um usuario na minha api, eu criei uma classe de usuário personalizada, assim:
class MyUserManager(BaseUserManager):
def create_user(self, cpf, password):
 
    if not cpf:
        raise ValueError('O cpf deve ser definido')
    user = self.model(cpf=cpf)
    user.set_password(password)
    user.save()
    return user

def create_superuser(self, cpf, password, **extra_fields):
    extra_fields.setdefault('is_staff', True)
    extra_fields.setdefault('is_superuser', True)
    extra_fields.setdefault('is_active', True)

    if extra_fields.get('is_staff') is not True:
        raise ValueError('O superusuário deve ter is_staff=True.')
    if extra_fields.get('is_superuser') is not True:
        raise ValueError('O superusuário deve ter is_superuser=True.')
    return self.create_user(cpf, password, **extra_fields)
    

class User(AbstractUser):
    cpf = models.CharField(max_length=10,unique=True)

    USERNAME_FIELD = 'cpf'
    REQUIRED_FIELDS = []

    objects = MyUserManager()

    publisher = models.BooleanField(default=False)
    admin = models.BooleanField(default=False)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.cpf

e aqui esta meu  serializers.py
class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ('cpf','password', 'password_confirm', 'publisher', 'admin','created_at', 'updated_at')
        extra_kwargs = {
           'password': {'write_only': True},
        }

    def save(self):
        conta = User(
           cpf=self.validated_data['cpf'],
           publisher=self.validated_data['publisher'],
           admin=self.validated_data['admin']
        )
        password = self.validated_data['password']
        password_confirm = self.validated_data['password_confirm']

        if password != password_confirm:
            raise serializers.ValidationError({'password': 'As senhas não são iguais.'})
        conta.set_password(password)
        conta.save()
        return conta

quando tento criar um usuário recebo a seguinte mensgem:

UNIQUE constraint failed: acount_user.username

o que estou fazendo errado?
aceito sugestões de melhorias no codigo.
",,,,,"['\npython', 'django', 'django-rest-framework\n']"
544435,"Python - Como ler subdiretórios dentro de um diretório e criar as mesmas pastas em outro diretório, caso não exista?","
Estou tentando criar um código Python que verifica subdiretórios em um diretório (DirA) e cria os mesmos subdiretórios em outro diretório (DirB), se esses subdiretorios nao existirem no DirB. Como posso fazer isso? Até agora só consigo verificar se existe um diretório e se não existe o programa cria um novo, mas não consigo fazer isso para vários subdiretórios. Anexei a estrutura de exemplo abaixo e tambem o codigo ate onde consegui, mas acho que não está correto e não faz isso para as outras subpastas automaticamente, só faz para uma e tenho que especificar o nome dela.
Alguém poderia me ajudar nesta questão? Obrigado.

 - Dir_A (1 - Check the subfolders inside this directory)
     Folder_a
     Folder_b
     Folder_c

 - Dir_B (2 - Check if they already exist in this directory
     (3 - If not exist, create the same name/subfolders of Dir_A 



import os


# Check if directory exists, if not, create it
folder = 'sub1'


def check_folder(folder):
    DIR_ORIGIM = (r'D:\RootDirectory\DirA')
    DIR_DESTININY = (r'D:\RootDirectory\DirB')
    SUBFOLDER = os.path.join(DIR_ORIGIM, folder)
    SUBFOLDER_DESTINITY = os.path.join(DIR_DESTININY, folder)
    CHECK_FOLDER = os.path.isdir(SUBFOLDER_DESTINITY)

    # If folder doesn't exist, then create it.
    if not CHECK_FOLDER:
        os.makedirs(SUBFOLDER_DESTINITY)
        print(""created folder : "", SUBFOLDER_DESTINITY)

    else:
        print(SUBFOLDER, ""folder already exists."")


check_folder(folder)



","
os.scandir retorna um iterador para todos os arquivos e diretórios de um determinado caminho. Você pode usar os.path.isdir para filtrar apenas os diretórios.
import os

def copy_subdirs(origin, dest):
    origin_dirs = [entry.name for entry in os.scandir(origin) if os.path.isdir(entry)]

    for dir in origin_dirs:
        try:
            os.mkdir(os.path.join(dest, dir))
        except FileExistsError:
            pass

copy_subdirs(r""D:\RootDirectory\DirA"", r""D:\RootDirectory\DirB"")

","
            1
        ",,,"['\npython', 'diretório\n']"
544434,Seleção de um valor Python,"
Olá, bom dia,
Gostaria de pedir ajuda, por gentileza, em um problema de seleção de tabela.
Gostaria de acessar o valor numérico da variável Peso Relativo da linha selecionada.
 import pandas as pd
 import numpy as np Peso = input ('Qual seu peso considerando a gravidade do planeta terra : ')
planetas = {'Planeta': ['Mercúrio', 'Vênus', 'Terra', 'Marte', 'Júpiter', 'Saturno','Urano','Netuno'], 
                     'Pesorelativo': [0.38,0.91,1,0.38,2.34,1.06,0.92,1.19]}
df = pd.DataFrame(planetas)
PesoRel = input('Em qual planela se encontra: ')

df_mask=df['Planeta']==PesoRel
filtered_df = df[df_mask]
print(filtered_df)



    

","
Usa essa linha de código:
filtered_df.iloc[0]['Pesorelativo']

","
            -2
        ",,,"['\npython', 'pandas', 'dataframe\n']"
544422,Não consigo executar o pacote do python,"
Estou tentando executar a biblioteca do módulo pyinputplus, já instalei com pip e me resultou que está no diretorio site-packages, transformei o diretório em PATH e o python confirma em os.path() que o diretório site/packages está com PATH, mas assim que importo a biblioteca no visual studio ele me retorna dizendo que não há modulos para a biblioteca
obs: estou em um máquina linux
",,,,,"['\npython', 'linux', 'pip\n']"
544394,Acessar a posição do maior valor numa matriz,"
Bom, sei que já existe um post semelhante (muito semelhante, por sinal) aqui, mas a questão toda é que eu não consigo entender a lógica de programação envolvida. O meu código até então está da seguinte maneira:
matriz = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
maior = 0
for linha in range(3):
    for coluna in range(3):
        matriz[linha][coluna] = int(input(f'Digite os valores para [{linha}, {coluna}] '))
    maior = max([valor for linha in matriz for valor in linha])

A partir daí, estou simplesmente perdido. Pelas soluções que vi, eu deveria ter feito algo do tipo:
    for linha in matriz:
        for valor in linha:
            if posicao[0] < valor:
                x = linha.index(valor)
                y = matriz.index(linha)
                posicao = (y, x)

Mas não entendi com clareza o que está sendo feito acima. No caso, por que é ""for valor in linha"" invés de ""for coluna in matriz"", ou por que tenho que utilizar o posicao[0]? Me perdoem a ignorância, ainda tô perdido no assunto de matrizes, porque no curso que peguei, não tem uma sessão disso, então tô meio que no ""sei lá, só vai"".
","
Uma matriz nada mais é do que uma lista com outras listas dentro, onde cada lista dentro lista maior (vulgo matriz) representa uma linha.
Dessa forma, entenda a matriz como se fosse uma caixa grande com várias caixas pequenas. Para que você tenha acesso ao conteúdo das caixas menores, primeiro você precisa abrir a caixa grande e ir abrindo o que tiver dentro.
O que o código faz é basicamente isso. Em:
for linha in matriz:

Você está procurando pelas caixas pequenas (leia-se linhas) que estão dentro da  caixa grande (leia-se matriz). Com esse for você vai acessando cada linha.
Em seguinda vêm o segundo for:
for valor in linha:

Basicamente você pegou uma linha e está acessando os valores de dentro dela. De modo lúdico, imagine que você abriu caixa grande, selecionou uma caixa pequena e o valor são os itens que estão dentro dessa caixa.
","
            0
        ",,,"['\npython', 'matriz', 'revisão-de-código\n']"
544189,Como fazer um counter contar incrementos por instância?,"
Estou tentando criar um Counter em Python com as seguintes propriedades:

Counter(name): cria um contador chamado name
increment: aumenta o contador em 1 unidade
tally: número de incrementos desde a criação
to_string: representação em string

Isso foi o que tentei até agora:
#flips.py
import sys
import numpy as np

iterations = int(sys.argv[1])

def counted(function):
    def wrapped(*args, **kwargs):
        wrapped.calls+=1
        return function(*args, **kwargs)
    wrapped.calls = 0
    return wrapped


class Counter:
    def __init__(self, name):
        self.name=name

    @counted
    def increment(self):
        pass

    def tally(self):
        return self.increment.calls

    def to_string(self):
        return self.name

heads = Counter(name='heads')
tails = Counter(name='tails')

for _ in range(iterations):
    result=np.random.binomial(1,0.75)
    if result==0:
        heads.increment()
    else:
        tails.increment()

print(heads.tally(), ""heads"")
print(tails.tally(), ""tails"")

delta = heads.tally()-tails.tally()

print(f'delta: {delta}')

Gostaria que esse programa retorna-se:
python flips.py 10

7 heads
3 tails
delta:4

Mas, na verdade, obtenho esse resultado:
10 heads
10 tails
delta: 0

Obviamente, o método increment está sendo contado todas as vezes que ele é chamado independente de qual instância chama ele. Como faço para a contagem do método increment seja específico por instância?
","
Primeiro vamos modificar um pouco o seu código para entender melhor o que acontece:
def counted(function):
    def wrapped(*args, **kwargs):
        wrapped.calls+=1
        print('wrap', id(wrapped), 'calls=', wrapped.calls)
        return function(*args, **kwargs)
    wrapped.calls = 0
    print('wrapping', function)
    return wrapped

E vou criar dois contadores:
print('criando counters')
c1 = Counter('a')
c2 = Counter('b')
print('incrementando')
c1.increment()
c2.increment()
print(c2.tally())

A saída será:
wrapping <function Counter.increment at 0x148a9cf5fe18>
criando counters
incrementando
wrap 22585571409024 calls= 1
wrap 22585571409024 calls= 2
2

Claro que os ids mudarão a cada execução, mas o importante é o que o decorator só roda uma vez, quando a classe é criada. Isso quer dizer que o contador só é zerado neste momento.
Ao incrementar, usa-se o mesmo método decorado (o wrapped, veja que o id é o mesmo nas duas linhas: wrap 22585571409024). Como já dito, o id varia a cada execução, mas o importante é que as duas linhas exibem o mesmo valor.
Sendo assim, o mesmo contador sempre é incrementado, mesmo que sejam chamados em instâncias diferentes de Counter, pois o wrapped é o mesmo para ambas (e portanto o contador também).
Se cada contador deve ser independente, então esqueça o decorator. O mais simples é que cada Counter faça sua própria contagem:
class Counter:
    def __init__(self, name):
        self.name = name
        self.cont = 0 # cada Counter tem seu próprio contador
 
    def increment(self):
        self.cont += 1 # incrementa o próprio contador (não interfere nos demais)
 
    def tally(self):
        return self.cont # retorna o contador

Assim cada Counter tem seu próprio contador, que não interfere nas demais instâncias.

Não diretamente relacionado, mas para implementar o método to_string, uma alternativa melhor é sobrescrever o método especial __str__:
def __str__(self):
    return self.name

Assim ele já converte a instância para string se você imprimir (print(instancia_de_counter)), por exemplo.
","
            2
        ",,,['\npython\n']
543910,Como realizar operações matemáticas através de variáveis [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou tentando escrever um pequeno algoritmo que calcule o valor de décimo terceiro salário do usuário. O passo a passo é:

inserir salário base
inserir quantos meses trabalhou
salário base/12 * meses trabalhados

O código está assim:
salarioBase = int(input('Digite o valor de salário mensal: '))

mesesTrabalhados = int(input('Digite quantos meses trabalhou: '))

proporcional: salarioBase/12* mesesTrabalhados:

Porém na variável proporcional está havendo um erro de sintaxe e eu não sei como fazer certo para que eu possa rodar esse resultado e escrever print(proporcional 'Esse é o valor de 13º').
","
O problema é que você usou : para fazer uma atribuição. Em Python, o token correto para fazer isto é =. O modo correto de escrever a última linha seria este:
proporcional = salarioBase/12 * mesesTrabalhados

","
            0
        ","
manda a mensagem de erro por gentileza !
mas a principio tente isso
salario = int(input('informe o seu salário'))
meses_trabalhados = int(input('meses trabalhados'))
print((salario/12)*meses_trabalhados)

","
            -1
        ",['\npython\n']
543809,Como realizar login usando Requests?,"
Estou tentando extrair os dados de um site usando pela primeira vez o requests, mas sempre que eu tento extrair os dados, mesmo adicionando login e a senha, ele extrai os dados da página de login como se ele não consegui-se avançar com o login, acredito que o motivo é porque a tela de login está usando popup.
Fiz esse mesmo código em dois sites diferentes e funcionou. Somente este que deu esse problema.
from requests import Session
from bs4 import BeautifulSoup as bs

with Session() as s:
    site = s.get(""https://shopper.com.br"")
    bs_content = bs(site.content, ""html.parser"")
    login_data = {""email"":""xxxxx"",""senha"":""xxxxx""}
    s.post(""https://shopper.com.br"",login_data)
    home_page = s.get(""https://programada.shopper.com.br/shop/alimentos/acucar-e-adocantes/"")
    print(home_page.content)

Explicando o código:
    site = s.get(""https://shopper.com.br"")
    bs_content = bs(site.content, ""html.parser"")

pega a página onde deve ser feito o login.
    login_data = {""email"":""xxxxx"",""senha"":""xxxxx""}
    s.post(""https://shopper.com.br"",login_data)

cria um dicionário dos parâmetros a serem usados ​​para o login. As chaves dos dicionários são os atributos de NAME das tags de entrada.
    s.post(""https://shopper.com.br"",login_data)
    home_page = s.get(""https://programada.shopper.com.br/shop/alimentos/acucar-e-adocantes/"")
    print(home_page.content)

realiza o login e senha com os atributos que foram adicionados no login_data e depois imprimir a página.
","
Investiguei melhor esse site e consegui me autenticar.
Em primeiro lugar, é importante notar que não existe um código padrão para autenticação em sites por meio do Requests. A autenticação entre um cliente e um servidor web é uma troca de requisições e respostas que ao final geram um token, geralmente armazenado em um cookie. Essa troca de mensagens, apesar de ter muitos pontos em comum na maioria dos sites, muitas vezes tem certas peculiaridades que só se aplicam àquele determinado site que você deseja se autenticar.
Como então descobrir a ""dança"" correta para se autenticar em um site via Requests? Na ausência de documentação, nos resta analisar as requisições durante uma autenticação  bem sucedida. Isso pode ser feito pelas ferramentas de desenvolvedor fornecidas pelos principais navegadores (acessadas pelo botão F12). Na seção ""Rede"", você consegue observar a lista de requisições feitas pelo navegador. Você também pode usar o Fiddler para fazer essa captura.
Analisando especificamente o site que você quer se autenticar, observa-se que são necessárias duas requisições:

GET https://shopper.com.br/shpprtkn: essa requisição retorna alguns cookies necessários para a autenticação e também um token CSRF.
POST https://shopper.com.br/login: essa é a requisição da autenticação propriamente dita, onde o usuário e senha são enviados ao servidor.

Para tornar a requisição o mais fiel possível da que ocorre no navegador, recomendo que copie todos os cabeçalhos usados nessas requisições (nas ferramentas de desenvolvedor do Chrome, isso pode ser feito com botão direito na requisição > Copy > Copy request headers). Muitos desses cabeçalhos não são de fato necessários para uma autenticação bem sucedida, mas começar por onde sabemos que está funcionando é um bom ponto de partida.
Finalmente, após análise das requisições e cópia dos cabeçalhos, temos o seguinte código:
from requests import Session

login_data = {
    ""email"": ""user@email.com"",  # Substitua pelo seu email
    ""senha"": ""password"",  # Substitua pela sua senha
    ""method"": ""sms"",
}


with Session() as s:
    headers = {
        ""Host"": ""shopper.com.br"",
        ""Connection"": ""keep-alive"",
        ""Pragma"": ""no-cache"",
        ""Cache-Control"": ""no-cache"",
        ""sec-ch-ua"": '"" Not A;Brand"";v=""99"", ""Chromium"";v=""98"", ""Google Chrome"";v=""98""',
        ""sec-ch-ua-mobile"": ""?0"",
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"",
        ""sec-ch-ua-platform"": '""Windows""',
        ""Accept"": ""*/*"",
        ""Origin"": ""https://landing.shopper.com.br"",
        ""Sec-Fetch-Site"": ""same-site"",
        ""Sec-Fetch-Mode"": ""cors"",
        ""Sec-Fetch-Dest"": ""empty"",
        ""Referer"": ""https://landing.shopper.com.br/"",
        ""Accept-Encoding"": ""gzip, deflate, br"",
        ""Accept-Language"": ""en-US,en;q=0.9"",
    }
    r = s.get(""https://shopper.com.br/shpprtkn"", headers=headers)

    headers = {
        ""Host"": ""shopper.com.br"",
        ""Connection"": ""keep-alive"",
        ""Content-Length"": ""90"",
        ""Pragma"": ""no-cache"",
        ""Cache-Control"": ""no-cache"",
        ""sec-ch-ua"": '"" Not A;Brand"";v=""99"", ""Chromium"";v=""98"", ""Google Chrome"";v=""98""',
        ""X-CSRFToken"": s.cookies[""csrftoken""], # Token obtido pela requisição anterior
        ""X-Requested-With"": ""XMLHttpRequest"",
        ""sec-ch-ua-mobile"": ""?0"",
        ""Content-Type"": ""application/x-www-form-urlencoded"",
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"",
        ""sec-ch-ua-platform"": '""Windows""',
        ""Accept"": ""*/*"",
        ""Origin"": ""https://landing.shopper.com.br"",
        ""Sec-Fetch-Site"": ""same-site"",
        ""Sec-Fetch-Mode"": ""cors"",
        ""Sec-Fetch-Dest"": ""empty"",
        ""Referer"": ""https://landing.shopper.com.br/"",
        ""Accept-Encoding"": ""gzip, deflate, br"",
        ""Accept-Language"": ""en-US,en;q=0.9"",
    }
    r = s.post(""https://shopper.com.br/login"", headers=headers, data=login_data)
    home_page = s.get(""https://shopper.com.br/lojas/"")
    print(home_page.text)

Note que:

O fato de haver um popup não tem nenhuma influência.
Pelo menos no trecho de código que consta na pergunta, bs_content não tem nenhuma função.
Esse site faz uso intenso de JavaScript. É possível que as informações que você deseja obter não estejam acessíveis prontamente na página HTML ""crua"" que o Requests retorna (o Requests não executa JS). Se esse for o caso, você terá que continuar analisando as requisições para encontrar qual é a responsável por retornar os dados de interesse, ou então utilizar uma alternativa que seja capaz de executar JavaScript (por exemplo, Selenium).

","
            -2
        ",,,"['\npython', 'login', 'autenticação', 'python-requests\n']"
543802,Graficos 3D juntos no python,"
Possuo esses dois graficos:


Essas são as informações para gerar eles:
import matplotlib.pyplot as plt
from sympy import *
from sympy.plotting import *
init_printing(pretty_print=true)
import numpy as np
from pprint import pprint

tdh1 = np.arange(0,1,0.05)
tdhgraf= np.arange(0,24,1.2)
rmax1 = 240
Ci1= 54.5
Ks1= 12
rec1= np.arange(0,2.5,0.5)
y = dict()

  resolucoes = list()
for rec in rec1:
  print(""rec="",rec)
  y[rec] = list()
  for tdh in tdh1:
    print(f""\ttdh={tdh:.2f}"")
    eqn1=Eq(tdh,(((rec*Cx1+Ci1)/(rec+1))-Cx1) / (rmax1*Cx1/(Cx1+Ks1)))
    solucao = solve(eqn1)[1]
    resolucoes.append(Eq(Cx1, solucao))
    print(""\t\t"",Eq(Cx1, solucao))
    y[rec].append(float(solucao))

x = np.linspace(0, 1, 100)
# y1= ([54.5, 40.6059958386229,  29.0291097596484,  20.4618770789121,  14.7722373813368,  11.1507521408923, 8.80192534648665,
#         7.2098049424219,  6.07923983302962 ,  5.24278806144571, 4.60231761846384, 4.09780082567888, 3.69093376342374, 3.35631917289634, 3.07653894102323, 2.83928981686097, 2.63565508063512, 2.45902540440416, 2.30440398673506, 2.16794660276316])

# y2=([54.5,36.4448984186373,22.9708572951992,14.7722373813368,10.2576005706936,7.67803571119502,6.07923983302962,5.01106920644036,4.25356004636753,3.69093376342374,3.25765902617313,2.91425339569165,2.63565508063512,2.405249626108,2.2116141829834,2.04664952977099,1.90445983234838,1.78065463494135,1.67189923733046,1.57561652374871])

for yrec in y:
  plt.plot(tdhgraf, y[yrec], label=f'rec {yrec:.2f}')

plt.xlabel('TDH (h)')
plt.ylabel('N (saída) (mg/L)')

plt.title(""Consumo de Nitrogênio"")

plt.legend()

plt.show()

AQUI FORMA O GRAFICO 1
da mesma forma:
tdh2 = np.arange(0,1,0.05)
tdhgraf= np.arange(0,24,1.2)
rmax2 = 3000
Ci2= 512
Ks2= 234
rec2= np.arange(0,2.5,0.5)
y = dict()

resolucoes = list()
for rec in rec1:
  print(""rec="",rec)
  y[rec] = list()
  for tdh in tdh2:
    print(f""\ttdh={tdh:.2f}"")
    eqn2=Eq(tdh,(((rec*Cx2+Ci2)/(rec+1))-Cx2) / (rmax2*Cx2/(Cx2+Ks2)))
    solucao = solve(eqn2)[1]
    resolucoes.append(Eq(Cx2, solucao))
    print(""\t\t"",Eq(Cx2, solucao))
    y[rec].append(float(solucao))  

for yrec in y:
  plt.plot(tdhgraf, y[yrec], label=f'rec {yrec:.2f}')

plt.xlabel('TDH (h)')
plt.ylabel('C (saída) (mg/L)')

plt.title(""consumodecarbono"")

plt.legend()

plt.show()

AQUI FORMA O GRAFICO 2
Gostaria de uma ajuda para formar tipo um grafico 3D mostrando todas as curvas (dos dois graficos) em apenas um novo grafico tipo desse exemplo aqui:

essa é descrição da formação desse gráfico:
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from mpl_toolkits.mplot3d.art3d import Poly3DCollection

fig = plt.figure()
ax = Axes3D(fig)


df = pd.read_excel('EDS 7.xlsx', header=None, usecols=[0,1,2,3,4,5,6,7,8,9,10,11,12], names=['A', 'B', 'C', 'D','E','F','G','H', 'I', 'J', 'K', 'L'])
plt.rcParams[""figure.figsize""] = [14.5,10]
# put 0s on the y-axis, and put the y axis on the z-axis
ax.plot(xs=df['A'], ys=df['B'], zs=df['C'], zdir='z', label='ys=0, zdir=z', color='blue')
ax.plot(xs=df['D'], ys=df['E'], zs=df['F'], zdir='z', label='ys=0, zdir=z', color='red')
ax.plot(xs=df['G'], ys=df['H'], zs=df['I'], zdir='z', label='ys=0, zdir=z', color='green')
ax.plot(xs=df['J'], ys=df['K'], zs=df['L'], zdir='z', label='ys=0, zdir=z', color='orange')
plt.xlim([0.0, 4.0])
plt.ylim([0.0, 4.0])
ax.set_zlim(0,1200)
plt.rc('xtick', labelsize=16)
plt.rc('ytick', labelsize=16)
#plt.xticks(np.arange(0.0,1.4,0.1).round(decimals=1))
#plt.yticks(np.arange(-0.8,1.3,0.2).round(decimals=1))
ax.w_xaxis.set_pane_color((1.0, 1.0, 1.0, 1.0))
ax.w_yaxis.set_pane_color((1.0, 1.0, 1.0, 1.0))
ax.w_zaxis.set_pane_color((1.0, 1.0, 1.0, 1.0))
ax.xaxis._axinfo[""grid""]['linestyle'] = '--'
ax.xaxis._axinfo[""grid""]['color'] = 'silver'
ax.yaxis._axinfo[""grid""]['linestyle'] = '--'
ax.yaxis._axinfo[""grid""]['color'] = 'silver'
ax.zaxis._axinfo[""grid""]['linestyle'] = '--'
ax.zaxis._axinfo[""grid""]['color'] = 'silver'
ax.tick_params(axis='z', pad=10)
plt.show()

","
Não tenho acesso aos seus dados (por exemplo, no código que você compartilhou, sua variável tdhgraf não está definida), então vou dar um exemplo de como transpor um gráfico 2D para 3D usando dados arbitrários.
Aqui defino os dados que serão plotados - uma série de valores X e 4 séries de valores Y:
import numpy as np

xs = np.linspace(0, 10, 100)

ys1 = xs ** 2
ys2 = ys1 + np.random.normal(loc=0, scale=10)
ys3 = ys1 + np.random.normal(loc=0, scale=20)
ys4 = ys1 + np.random.normal(loc=-10, scale=10)

Aqui o plot do gráfico 2D - apenas itero sobre as séries ys e as suas respectivas cores (que defini diretamente no código) e peço para plotá-las com plt.plot:
import matplotlib.pyplot as plt

ys = [ys1, ys2, ys3, ys4]
colors = 'orange green red blue'.split()

for y, color in zip(ys, colors):
    plt.plot(xs, y, c=color)
plt.show()

Output:

Para transformarmos o gráfico 2D para 3D, há 3 coisas que precisam ser feitas:

Criar uma terceira série de valores - a série zs define a posição de cada curva na terceira dimensão (nesse caso, a posição é fixa);
Criar um objeto Axes3D - diferente do caso 2D, eu preciso explicitamente criar um objeto desse tipo para plotar em 3 dimensões. Na hora de plotar, usamos o seu método ax.plot no lugar de plt.plot;
Reorientar os eixos - Por padrão, o eixo Z de um gráfico 3D aponta para cima. Mas a informação que queremos que apareça na vertical são as séries de valores Y. Para não precisarmos redefinir as séries de ys e os valores de zs, usamos o argumento zdir='y' na hora de plotar para que essa mudança da orientação dos eixos seja feita automaticamente.

Aqui o código:
# Criando série de zs
zs = np.linspace(0, len(ys)-1, len(ys))

# Criando o Axes3D
fig = plt.figure()
ax = fig.add_subplot(projection='3d')

# Plotando em 3D, com reorientação de eixos
for y, z, color in zip(ys, zs, colors):
    ax.plot(xs, y, z, c=color, zdir='y')
plt.show()

Output:

","
            1
        ",,,"['\npython', 'python-3.x', 'gráfico', 'python-requests', 'ipython-notebook\n']"
543795,Como desassociar essa string e Python?,"
Como eu posso quebrar essa string em Python e obter cada linha em uma variável?
String:
string = '''
          tipo-cliente
          Nome_da_Rede
          Senha_da_rede
         '''

como eu quero:
str1 = 'tipo-cliente'
str2 = 'Nome_da_Rede'
str3 = 'Senha_da_rede'

","
Uma maneira de resolver o problema é programar a solução.
Desta forma é possivel desenvolver um programa que resolva este problema utilizando as funções split, strip um comando condicional para decidir se uma variável possui um valor definido e um laço para iterar a string resultante da operação split.
Queremos quebrar uma string por um padrão, que vamos chamar de token, este token é a quebra de linha, representado por \n. Podemos ver este padrão apenas mostrando na tela o valor da variável string (em seu programa).
o resultado seria:
>>> string = '''
           tipo-cliente
           Nome_da_Rede
           Senha_da_rede
         '''
>>> string
>>> #'\n          tipo-cliente\n          Nome_da_Rede\n          Senha_da_rede\n         '

Repare que não estamos utilizando o print para exibir o valor da variável.
Fazendo o split pelo token \n temos o seguinte:
listanomes = string.split('\n')

Se verificar o retorno da função split, vai ver que ele vai retornar um array e o token que vai servir para ""quebrar"" a string será o \n.
Resultando em:
['', '          tipo-cliente', '          Nome_da_Rede', '          Senha_da_rede', '         ']

Agora basta só fazer o strip para que sejam removidos os espaços em branco, para que os valores do nosso array estejam da maneira que desejamos apresentar ao usuário:
for i in listanomes:
    item = i.strip()
    if item:
        print(item)

Agora que já possui os valores, pode armazenar da maneira que for mais conveniente.
O resultado final fica:
string = '''
          tipo-cliente
          Nome_da_Rede
          Senha_da_rede
         '''
string

listanomes  = string.split('\n')

for i in listanomes:
    item = i.strip()
    if item:
            print(item)

","
            2
        ","
Se o objetivo é transferir um número conhecido de linhas de texto de uma string para o igual número de variáveis:

Quebre a string em linhas com a função str.splitlines() que retorna uma lista das linhas numa string, quebrando a mesma nas fronteiras de cada linha. Veja a documentação da função para uma lista dos caracteres quebra de linha aceitos
Usando a função nativa map() aplique a cada linha retornada por str.splitlines() a função str.strip() sem argumentos para que sejam removidos os espaços iniciais e finais de cada linha.
Com a função nativa filter(), usando o argumento None como função de filtragem, remova as linhas vazias. filter() aplicado com argumento None remove todos os elementos de um iterável cujo o valor testa falso em python strings vazias em testes lógicos testam falso.
De posse da linhas filtradas, apenas faça o desempacotamento dessas linhas nas respectivas variáveis.

texto = '''
          tipo-cliente
          Nome_da_Rede
          Senha_da_rede
         '''

linhas = map(str.strip, texto.splitlines())   #Quebra texto em suas linhas e remove os espaços iniciais e finais de cada linha.

s1, s2, s3 = filter(None, linhas)             #Remove as linhas vazias e as desempacotam em s1, s2, s3.

print(s1) #tipo-cliente
print(s2) #Nome_da_Rede
print(s3) #Senha_da_rede

Teste o exemplo no Ideone

Evite usar o identificador string para variáveis pois a linguagem
Python possui um módulo nativo chamado string e ao sobrescrever
esse identificados poderá causar conflitos.

","
            1
        ","['\npython', 'string\n']"
543735,"' ' should either include a `queryset` attribute, or override the `get_queryset()` method","
Estou fazendo paginação em um sistema que estou criando usando Django DRF, porém ele gera um erro ao acessar a segunda página, o link é gerado e ao tentar acessar ele me acusa esse erro 'ListaPublicados' should either include a queryset attribute, or override the get_queryset() method.
Essa é minha view:
class ListaPublicados(ListAPIView):
  permission_classes = (AllowAny,)
  pagination_class = StandardResultsSetPagination
  serializer_class = ListaPublicadosSerializer
  filter_backends = (SearchFilter, OrderingFilter,)
  search_fields = ('titulo')
  ordering_fields = ('titulo')

  def list(self, request, *args, **kwargs):

    try:
      queryset = models.Anuncio.objects.filter(anuncio_publicado=True)
      queryset = self.filter_queryset(queryset)
      page = self.paginate_queryset(queryset)

      if page is not None:
        serializer = self.get_serializer(page, many=True)
        return self.get_paginated_response(serializer.data)

      serializer = self.get_serializer(queryset, many=True)
      return Response(serializer.data)
    except Exception as e:
      print('Exception', e)
      return Response(status=status.HTTP_400_BAD_REQUEST)

Não consegui entender esse erro e não achei nada que pudesse me ajudar.
","
Nunca trabalhei com python ou django, mas eu imagino que a definição do queryset (que, no teu caso, está dentro do try que fica no método list) tenha que estar fora do escopo do método list. Do jeito que está, queryset é variável local, e não da classe ListaPublicados.
Tenta algo assim:
class ListaPublicados(ListAPIView):
  permission_classes = (AllowAny,)
  pagination_class = StandardResultsSetPagination
  serializer_class = ListaPublicadosSerializer
  filter_backends = (SearchFilter, OrderingFilter,)
  search_fields = ('titulo')
  ordering_fields = ('titulo')
  queryset = ## não sei que valor poderia ter aqui - talvez um null, ou aquele models.Anuncio que tu colocaste mais abaixo, sei lá...

  def list(self, request, *args, **kwargs):

    try:
      queryset = models.Anuncio.objects.filter(anuncio_publicado=True)
      queryset = self.filter_queryset(queryset)
      page = self.paginate_queryset(queryset)

      if page is not None:
        serializer = self.get_serializer(page, many=True)
        return self.get_paginated_response(serializer.data)

      serializer = self.get_serializer(queryset, many=True)
      return Response(serializer.data)
    except Exception as e:
      print('Exception', e)
      return Response(status=status.HTTP_400_BAD_REQUEST)

","
            0
        ","
Consegui entender o que estava acontecendo, era bem nessa lógica que o Leornado falou, porém tinha que adicionar um metodo queryset a mais
class ListaPublicados(generics.ListCreateAPIView):
  permission_classes = (AllowAny,)
  pagination_class = StandardResultsSetPagination
  serializer_class = ListaPublicadosSerializer
  filter_backends = (SearchFilter, OrderingFilter,)
  search_fields = ('titulo')
  ordering_fields = ('titulo')
  queryset = models.Anuncio.objects.filter(anuncio_publicado=True)

  def list(self, request, *args, **kwargs):
    # Retornar a lista de anuncios publicados
    try:
      queryset = self.get_queryset()
      queryset = self.filter_queryset(queryset)
      page = self.paginate_queryset(queryset)

      if page is not None:
        serializer = self.get_serializer(page, many=True)
        return self.get_paginated_response(serializer.data)

      serializer = self.get_serializer(queryset, many=True)
      return Response(serializer.data, status=status.HTTP_200_OK)
    except Exception as e:
      print('Exception', e)
      return Response(status=status.HTTP_400_BAD_REQUEST)

Tive que alterar a ListAPIView por generics.ListCreateAPIView, colocaro queryset para a variavel global da class e na função chamar o self.queryset().
Obrigado pela ajuda!!!
","
            0
        ","['\npython', 'django', 'django-rest-framework\n']"
543644,Conselho para guardar diversos arquivos no banco de dados [fechada],"






Fechada. Essa pergunta é opinativa e não está aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Atualize a pergunta para que possa ser respondida com fatos e citações ao editá-la.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou fazendo um sistema utilizando Django e nele preciso guardar diversos documentos, eles podem ser com extensões de imagens, e tantas outras extensões, enfim são arquivos. Eu só estou com dúvidas em como eu guardo isso no banco. Eu vi alguns exemplos e notei que nele se guardava o endereço do arquivo no servidor, é essa a melhor forma de se tratar arquivos? ou eu posso guardar os arquivos diretamente no banco ao criar um modelo como exemplo abaixo:
class Project(models.Model):
    arquivo = models.FileField()

A questão então é, de que forma vale a pena eu guardar arquivos, tanto no banco de dados quanto no servidor.
","
O ideal seria usar um repositório de arquivos apropriado para guardar BLOB, como ""amazon s3"" ou ""azure store blob"".
E no banco SQL guardar o link do documento e o nome ou também pode usar um banco NoSQL, como MongoDB para arquivos menores que 16 megabytes e guardar os documentos no formato BSON (guarda em binário) e pode ser acessado por qualquer drive.
Ou para simplicar tudo, poderia usar um sistema distribuído como HDFS, diminuindo a manutenção e aumentando a escabilidade.
Arquitetura HDFS
Apache Hadoop no Amazon EMR
","
            -1
        ",,,"['\npython', 'banco-de-dados', 'django\n']"
543614,"Dois formulários, uma view, um relacionamento 1-N, como eu posso pegar o id do 1º form e usa-lá como FK no 2º form (atribuindo-a a model.FIELD)","
Antes de tudo, apenas um aviso, estou postando apenas porque nenhum dos tópicos aqui na pilha me ajudou, nem mesmo as sugestões relacionadas quando nomeei este tópico ...
Sou novo no django, estou trabalhando na abertura de um ticket de suporte, estou lutando com esse problema há dois dias.
É possível atribuir um valor ao campo definido em model.py por view.py? Meu problema é ter duas classes de modelo, dois formulários com relacionamento um-para-muitos, que são renderizados na mesma página e devem ser salvos ao clicar em um botão.
Meu model.py
class TicketStatus(models.TextChoices):
    TO_DO = 'Open'
    DONE = 'Closed'
    
class Ticket(models.Model):
    objects = None
    id = models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')
    id_author = models.ForeignKey(User, null=False, blank=False, on_delete=models.DO_NOTHING)
    created_at = models.DateTimeField('Created at', auto_now_add=True)
    status = models.CharField(max_length=10, choices=TicketStatus.choices, default=TicketStatus.TO_DO)

class MessageTicket(models.Model):
    objects = None
    created_at = models.DateTimeField('Created at', auto_now_add=True)
    ticket_id = models.ForeignKey(Ticket, null=False, blank=False, on_delete=models.DO_NOTHING, related_name='messages') #meu problema está aqui
    author = models.ForeignKey(User, null=False, blank=False, on_delete=models.DO_NOTHING)
    content = models.TextField(null=True, default='')

O ponto aqui é que 'ticket_id' na classe 'MessageTicket' deve receber o 'id' do último 'Ticket' salvo(o 'ultimo' é aquele que será salvo no momento), mas como ambos são salvos ao mesmo tempo não consigo puxar o último 'id' do 'Ticket'.
Meu view.py:
formTicket = TicketForm(request.POST)
if formTicket.is_valid():
    formTicket.save()
    help = Ticket.objects.latest('pk').pk
    print(help) #'debug' para eu ver se está pegando o valor do último pk, sim está
    formMessage = MesTicketForm(request.POST)
    if formMessage.is_valid():
        #O que preciso colocar aqui para que o 'ticket_id' di 'messageTicket' (modelo)
        #receba o 'id' do 'Ticket', tudo que tentei me retorna o erro que 'ticket_id'            
        #não pode ser nulo

        formMessage.save()
        return redirect('/')
    else:
        ticket = Ticket.objects.all()
        mesticket = MessageTicket.objects.all()

        context = {
            'ticket': ticket,
            'message': mesticket,
            'formTicket': formTicket,
            'formMessage': formMessage,
        }
        return render(request, 'support/register.html', context)

Como os dois formulários são renderizados na página html:
{% extends 'support/base.html' %}
{% block title %} Tickets {% endblock %}
{% block content %}
<form method=""POST"" action=""cad"">
    {% csrf_token %}
    {{ formTicket.as_p }}
    {{ formMessage.as_p }}
    <button type=""submit"">SAVE</button>
</form>
{% endblock %}

","
Depois que você chama a função form.is_valid(), você pode acessar/alterar os dados do formulário usando o form.cleaned_data['campo_do_formulario'].
Seu código ficaria assim:
if formMessage.is_valid():
        
    formMessage.cleaned_data['ticket_id'] = help

    formMessage.save()
    return redirect('/')

Você também pode ver a documentação do Forms API.
","
            0
        ",,,"['\npython', 'django\n']"
543565,como seleciono somente os dados de uma celula de dataframe? python,"
estou tentando selecionar somente o valor de uma celula em uma planilha excel
mas o retorno vem informações a mais. ex: nome da coluna, index, etc
code:
#pandas
#pandas
import pyperclip as pyper
import pandas as pd

tabela = pd.read_excel(""teste.xlsx"")

#SELECIONANDO COLUNAS ESPECIFICAS
dado1 = tabela.loc[[1, 5, 7], [""CÓD REDUZIDO"",""PREÇO""]]

dado2 = dado1.loc[1]

dado2.to_string()

pyper.copy(dado2.to_string())

print (dado2)

saida:
CÓD REDUZIDO    416485
PREÇO            26.99
Name: 1, dtype: object

saida do clipboard:
CÓD REDUZIDO    416485
PREÇO            26.99

","
Considere o seguinte DataFrame:
import pandas as pd

dados = {
    'X': [1, 3, 5],
    'Y': [3, 33, 333],
    'Z': [10, 20, 30],
}
indice = list('abc')

df = pd.DataFrame(dados, index=indice)
print(df)

# output:
#    X    Y   Z
# a  1    3  10
# b  3   33  20
# c  5  333  30

Se quisermos pegar um elemento usando a nomenclatura do índice e colunas, usamos o método .at:
# quero o elemento que está: 
# na linha de índice 'a'
# e na coluna de nome 'Z'
print(df.at['a', 'Z'])

# output:
# 10

Se quisermos pegar um elemento usando índice da linha e coluna de interesse, usamos o método .iat:
# quero o elemento que está: 
# na 3ª linha (índice 2)
# na 1ª coluna (índice 0)
print(df.iat[2, 0])

# output:
# 5

","
            1
        ","
Você pode obter um valor específico utilizando o método .iloc da biblioteca pandas.
Exemplo:
import pandas as pd

df = pd.DataFrame({'coluna_1': [1, 2, 3, 4], 'coluna_2': ['a', 'b', 'c', 'd']})

print(df)

# Saída
#    coluna_1 coluna_2
# 0         1        a
# 1         2        b
# 2         3        c
# 3         4        d

O método .iloc faz uma indexação baseada na posição em valores inteiros para seleções por posição.
ou seja,
podemos passar na estrutura do método .iloc[posição linha, posição coluna] valores inteiros para retornar o valor desejado. Vemos isso na sequencia abaixo do código.
valor = df.iloc[1, 1]
print(valor)

# Resultado: b

Referência:

https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iloc.html

","
            0
        ","['\npython', 'python-3.x', 'pandas', 'python-requests\n']"
543548,Python agrupar chaves com valores iguais no dicionário,"
Olá, preciso de uma ajuda com dicionários, por favor!
Tenho o seguinte dicionário:
dict = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [1, 2, 3], 'd': [4, 5, 6]}
o que eu preciso é agrupar as chaves que possuem os mesmos valores, esperando um resultado assim:
dict = {0:{['a', 'c'],[1, 2, 3]}, 1:{['b', 'd'],[4, 5, 6]}}
Obrigado
","
Início rápido
Basta copiar e colar a função dentro da seção 'Código' (que está abaixo) em seu script e leia a seção 'Como usar' (também abaixo) para resolver seu problema, se quiser mais detalhes, leia o post inteiro e também os comentários dentro da função
Sobre seu problema
Construí um código exclusivamente para sua necessidade, porém fiz algumas modificações quanto a estrutura de retorno, veja:
Vc queria:
dict = {0:{['a', 'c'],[1, 2, 3]}, 1:{['b', 'd'],[4, 5, 6]}}
O que construí, retorna:
dict = [(['a', 'c'],[1, 2, 3]), (['b', 'd'],[4, 5, 6])]
Isso foi necessário pois sua estrutura possui alguns erros sintáticos quanto a definição do tipo dicionário, e perceba que o meu retorno é uma lista, ao invés de ser {0: value, 1: value}, pois me parece mais coerente a situação e é equivalente a esse dicionário que vc definiu.
Código
def processDict(dict):
    dict_response = [] # Array que conterá a resposta no final

    """"""
        Para que este algoritmo funcione, o dicionário deve estar ordenado de acordo com o valor de suas chaves,
        porém, naturalmente, dicionários em python não podem ser ordenados, o que faço nas 3 linhas abaixo é criar 
        uma estrutura equivalente à um dicionario com N chaves, do tipo [(key1, value1), (key2, value2), ..., (keyN, valueN)] (uma lista de duplas), 
        que por sua vez é ordenável.
    """"""
    false_dict_sort = list(dict.items()) # Obtém a estrutura mencionada acima a partir do dicionário
    false_dict_sort.sort(key=lambda e: e[1]) # Ordenando a estrutura de acordo com o valor das chaves

    """"""
        A função abaixo é recursiva e responsável por encontrar as chaves que possuem valores iguais
        e retorná-las em uma lista, porém é necessário que o dicionário esteja ordenando
        e por isso a estrutura criada acima é necessária
        
        :param index: indice em false_dict do valor à ser comparado
        :param false_dict: estrutura equivalente ao dicionária obtida acima na variável false_dict_sort
    """"""

    def getDuplicateValue(index, false_dict):

            if index + 1 < len(false_dict) and false_dict[index][1] == false_dict[index + 1][1]:
                return [false_dict[index][0]] + getDuplicateValue(index + 1, false_dict)
            else:
                return [false_dict[index][0]]

    i = 0
    while i < len(false_dict_sort):
        keys_list = getDuplicateValue(i, false_dict_sort) # retorna uma lista com as chaves que possuem valores iguais
        dict_response.append((keys_list, false_dict_sort[i][1])) # adiciona uma dupla com a lista de chaves (keys_list)
                                                                 # e o valor que essas chaves possuem em dict_response
        i += len(keys_list) #Incrementa i com o tamanho de keys

    return dict_response



Como usar
Basta copiar a função em seu script python, e chamá-la da seguinte forma:
seu_dicionario = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [1, 2, 3], 'd': [4, 5, 6]}
result = processDict(seu_dicionario)

O retorno da função é exatamente conforme sua necessidade porém está seguindo a estrutura que mencionei acima, e salvo em result.

Dica: adicione print(""result: "", result) para observar o resultado

Bônus
Essa solução funciona para qualquer tipo de valor que as chaves dos dicionários representam, não precisa ser necessariamente uma lista (como é o seu caso), porém esse tipo deve ser único para que seja possível ordená-lo, ou seja, uma vez que uma chave do dicionário possua um valor do tipo number, todos os outros devem ser number.
Tipos válidos como entrada para a função:
dict = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [1, 2, 3], 'd': [4, 5, 6]}

dict = {'a': 1, 'b': 1, 'c': 3, 'd': 4}

dict = {'a': ""ola"", 'b': ""mundo"", 'c': ""ola"", 'd': ""hello""}

Tipos inválidos:
dict = {'a': 1, 'b': [4, 5, 6], 'c': ""ola"", 'd': [4, 5, 6]}

dict = {'a': 1, 'b': 1, 'c': [3], 'd': ""4""}

dict = {'a': ""ola"", 'b': ""mundo"", 'c': 1, 'd': ""hello""}


","
            0
        ",,,"['\npython', 'dicionário\n']"
543475,Programa imprime contagem de 2 a 11 aos invés de 1 a 10 [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou usando o while, solicito que seja feita de 1 á 10 mas imprime de 2 a 11:
def contador (i , f):

    c = i
    While c <= f:
        c += 1
        print(c , end='')

contador (1 ,10) 

O resultado no print retorna: 2 3 4 5 6 7 9 10 11.

","
O seu problema é bem simples, você está incrementando antes de imprimir o valor, ou seja, quando o número 1 entra no laço, você soma mais 1 e depois imprime e é por isso que está sempre imprimindo um número a mais. Basta inverter as posições assim:
c = i
while c <= f:
    print(c , end='')
    c += 1

","
            -1
        ",,,"['\npython', 'while\n']"
543418,Como fazer um cálculo recursivo em um pandas DataFrame?,"
Eu tenho um DataFrame com as operações de compra e vendas resultantes de um algorítimo de quant investing. Daí eu eu tentei fazer uma simulação com um valor inicial investido, para assim calcular o capital resultante após cada uma das operações.

Para isso, criei uma nova coluna chamada 'money' onde tento fazer um cálculo recursivo. Onde o valor atual para a coluna 'money' é o valor anterior multiplicado pela porcentagem do lucro/prejuizo da operação.
ops_df['money'] = list( repeat(TOTAL_INVESTED, len(ops_df)) )
ops_df['money'] = (1 + ops_df.profit_perc.shift(1)) * ops_df.money.shift(1)
ops_df.head(10)

Porém, o cálculo recursivo esperado não ocorreu. Eu desconfio por conta de o lado direito da atribuição ser calculado por completo antes da atribuição.

Eu consegui resolver esse cálculo usando loop comum, porém fiquei com isso na cabeça. Deve existir uma maneira melhor e mais perfomática de fazer esse cálculo. Eu gostaria de saber se existe, como seria?
TOTAL_INVESTED = 1000
money = [TOTAL_INVESTED, ]

for i in range(1, len(ops_df)):
    curr_money = round( money[i-1] * (1 + ops_df.profit_perc.iloc[i]), 2 )
    money.append(curr_money)

ops_df['money'] = money


","
Como cada cálculo é um acúmulo de produtos, você pode usar cumprod:
import pandas as pd

TOTAL_INVESTED = 1000

ops_df = pd.DataFrame.from_dict({""profit_perc"": [-0.039548, 0.490518, 0.127511, -0.019439]})
money = (1 + ops_df.profit_perc.shift(-1)).cumprod() * TOTAL_INVESTED
ops_df[""money""] = money.shift(1, fill_value=TOTAL_INVESTED).round(2)
print(ops_df)

Saída:
   profit_perc    money
0    -0.039548  1000.00
1     0.490518  1490.52
2     0.127511  1680.58
3    -0.019439  1647.91

","
            2
        ",,,"['\npython', 'pandas\n']"
543366,Aplicar função def em um dataset (iniciante),"
Eu encontrei essa def aqui no stack, que resolve o meu problema com os caracteres
from urllib.parse import unquote

def cleanup(url):
    try:
        return unquote(url, errors='strict')
    except UnicodeDecodeError:
        return unquote(url, encoding='latin-1')

por exemplo, o nome do filme Jo%C3%A3o.e.Maria.Ca%C3%A7adores.de.Bruxas..20..
>>> cleanup('Jo%C3%A3o.e.Maria.Ca%C3%A7adores.de.Bruxas..20..')

'João.e.Maria.Caçadores.de.Bruxas..20..'

Agora eu queria saber se existe alguma forma de usar essa def em um dataset - ou seja, fazer com que ""percorra"" cada linha do dataset

ps: eu aceito outra sugestões também, desde que converta os caracteres do meu dataset
","
Veja o exemplo abaixo. O apply faz o trabalho todo.
1 - Mantenha a função exatamente como está
from urllib.parse import unquote

def cleanup(url):
    try:
        return unquote(url, errors=""strict"")
    except UnicodeDecodeError:
        return unquote(url, encoding=""latin-1"")

2 - exemplo com pandas
import pandas as pd

df = pd.DataFrame()

df[""url""] = [
    ""Jo%C3%A3o.e.Maria.Ca%C3%A7adores.de.Bruxas..20.."",
    ""Jo%C3%A3o.e.Pa%C3%A7oca.Jogam.futebol"",
]

O dataframe estará assim:
                                                url
0  Jo%C3%A3o.e.Maria.Ca%C3%A7adores.de.Bruxas..20..
1             Jo%C3%A3o.e.Pa%C3%A7oca.Jogam.futebol

3 - Use o assign para criar uma nova coluna e o apply para aplicar a função
df = df.assign(clean_url=df[""url""].apply(cleanup))

Resultado
                                                url                               clean_url
0  Jo%C3%A3o.e.Maria.Ca%C3%A7adores.de.Bruxas..20..  João.e.Maria.Caçadores.de.Bruxas..20..
1             Jo%C3%A3o.e.Pa%C3%A7oca.Jogam.futebol             João.e.Paçoca.Jogam.futebol

","
            1
        ",,,"['\npython', 'funções', 'caracteres\n']"
543363,Ler dados do Excel com formatação correta em R ou Python,"
Estou trabalhando com dados da imagem e gostaria de ler apenas ao nível do município.
Os dados estão na hierarquia com maior indentação (Ex. Rondônia (Estado) -> Porto Velho (Microrregião) -> Buritis (Município)).
Os dados estão disponível no link. Em especial, os dados da tabela apresentada corresponde à tabela tab703.xls do ano de 2010.
Existe alguma forma, preferencialmente em Python ou R, para fazer a leitura desses dados com a formatação correta?
Em uma das minhas tentativas, busquei transformar os dados de Excel (.xls) para CSV e a formatação não se manteve.

","
Uma solução em duas etapas, usando R:
Primeiro, ler o arquivo desconsiderando as primeiras linhas e garantindo que a identação no nome das unidades territoriais será mantida.
library(readxl)

dados <- read_excel(""tab703.xls"",
          na = c("""", ""-""),  # considera como NA células vazias ou com ""-""
          trim_ws = FALSE,  # preserva os espaços no começo e final das strings
          skip = 5)         # pula as 5 primeiras linhas

names(dados)[1] <- ""municipio""
# nomeia a primeira coluna (sem nome por ter pulado as primeiras linhas)

Se vai atribuir novos nomes para as colunas, pode indica-los diretamente para read_excel com a opção col_names.
A etapa seguinte é selecionar as linhas correspondentes a municípios (6 espaços de identação) e limpar os espaços.
dados <- dados[grepl('^\\s{6}\\w', dados$municipio, perl = TRUE), ]
# seleciona as linhas que começam com 6 espaços seguidos por algum caractere alfanumérico:

dados$municipio <- sub('^\\s*', '', dados$municipio)
# remove os espaços antes do nome do município

dados
#> # A tibble: 5,528 x 12
#>    municipio  Total...2 `Entre cônjuges … Total...4 Consensuais `Não- consensua…
#>    <chr>          <dbl>             <dbl>     <dbl>       <dbl>            <dbl>
#>  1 Buritis          337               266        18          12                4
#>  2 Campo Nov…        23                21        NA          NA               NA
#>  3 Candeias …        80                62        NA          NA               NA
#>  4 Cujubim           57                47        NA          NA               NA
#>  5 Itapuã do…        87                71        NA          NA               NA
#>  6 Nova Mamo…        97                82        NA          NA               NA
#>  7 Porto Vel…      2932              2358       103          66               13
#>  8 Costa Mar…       178               142         2          NA                2
#>  9 Guajará-M…       161               116         8           5               NA
#> 10 São Franc…        10                 8        NA          NA               NA
#> # … with 5,518 more rows, and 6 more variables:
#> #   Não- consensuais requeridas pela mulher <dbl>,
#> #   Casais com filhos menores de idade <dbl>, Total...9 <dbl>, Diretos <dbl>,
#> #   Indireto <dbl>, Guarda dos filhos menores pela mulher <dbl>

","
            2
        ","
Linguagem R
Sem dados é difícil dizer se o seguinte funciona.
O pacote readxl permite ler folhas do Excel com a região a ler no argumento range. Este argumeto precisa de um pacote adicional, o pacote cellranger.
Na foto parece que os dados dos municípios começam na linha 11, coluna 1. Estes valores são passados à função cell_limits.
library(readxl)
library(cellranger)

cell_limits(ul = c(11, 1))
#<cell_limits (11, 1) x (-, -)>

read_excel(ficheiro, range = cell_limits(ul = c(11, 1)))

","
            2
        ","['\npython', 'r\n']"
543283,Uso do acento til(~) no Python [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Qual a função do operador ~ (til) em JavaScript?

                                (2 respostas)
                            


Para que serve o operador ~ (til) no PHP?

                                (1 resposta)
                            

Fechada no mês passado.
The community reviewed whether to reopen this question no mês passado and left it closed:

O(s) motivo(s) de fechamento original(is) não foi(ram) resolvido(s)




Alguem poderia me explicar o que significa o acento til (~) quando é utilizado no python?
Exemplo de uma linha de código que vi:
if ~(np.isnan(df[""Buy Price""][i])):
    entry = df[""Buy Price""][i] 


","
O caractere ~ representa o operador binário NOT em Python. Esse operador inverte os bits de um certo valor binário, ou seja, 0010 se torna 1101.
Se estivermos trabalhando com números inteiros em Python, onde o primeiro bit representa o sinal (+ ou -), então efetivamente ~x = -x -1:
x = 2
print(~x)

# output:
# -3

No caso da biblioteca pandas, o operador ~ é bastante utilizado para inverter uma série booleana:
import pandas as pd

s = pd.Series([True, True, False])
print(~s)

# output:
# 0    False
# 1    False
# 2     True
# dtype: bool

Nesse link há uma lista de todos os operadores binários disponíveis em Python.
","
            4
        ","
O operador ~, conforme descrito na documentação oficial da linguagem, faz a inversão dos bits de um número (os bits 0 se tornam 1, e vice-versa), mas somente se o operando for um número inteiro. Para outros objetos (como por exemplo os ndarrays do numpy), ele funciona caso estes tenham sobrescrito o método especial __invert__().
Ou seja, é possível usá-lo com qualquer classe, bastando para isso definir este método especial. Por exemplo:
class X:
    def __init__(self, value):
        self.value = value

    def __str__(self):
        return str(self.value)

    def __invert__(self):
        return str(self.value) + ' invertido'

x = X(10)
print(x) # 10
print(~x) # 10 invertido

Se eu não tivesse definido o método __invert__, a última linha daria erro (""TypeError: bad operand type for unary ~"").

No caso do numpy, ele também define este método, então usar o operador ~ é o mesmo que usar __invert__ (que por sua vez, é o mesmo que usar numpy.invert).
Mas vamos por partes. Primeiro, numpy.isnan retorna True se o elemento for NaN, e False caso contrário:
import pandas as pd
import numpy as np

df = pd.DataFrame([1.5, float(""NaN"")], columns=['Buy Price'])

print(np.isnan(df[""Buy Price""]))

A saída neste caso é:
0    False
1     True
Name: Buy Price, dtype: bool

Ou seja, o primeiro elemento não é NaN, e o segundo é.
Se usarmos o operador ~, ele inverte os resultados. Usando o mesmo dataframe acima, temos que este código:
print(~np.isnan(df[""Buy Price""]))

Imprime o seguinte:
0     True
1    False
Name: Buy Price, dtype: bool

Ou seja, se o elemento não for um NaN (portanto, se for um número válido), o resultado é True. Caso contrário, é False.
Como já dito anteriormente, a própria documentação diz que ""The ~ operator can be used as a shorthand for np.invert on ndarrays."". E só é possível usar o operador ~ porque os ndarrays implementam o método especial __invert__. Ou seja, as três formas abaixo geram a mesma saída:
# usando o operador ~
print(~np.isnan(df[""Buy Price""]))

# usando numpy.invert
print(np.invert(np.isnan(df[""Buy Price""])))

# usando o método especial __invert__
print(np.isnan(df[""Buy Price""]).__invert__())


Já np.isnan(df[""Buy Price""][i]) está testando um elemento específico (e não toda a coluna do dataframe), portanto o seu código está testando elemento a elemento (imagino que i seja o índice). Basicamente, ele verifica se o elemento é um número válido (ou seja, não é NaN), e neste caso ele entra no if e seta o valor de entry.
Usando o mesmo dataframe acima, se i fosse 0, ele testaria o primeiro elemento (1.5), e como ele não é NaN, o resultado é True e ele entra no if. Já se i fosse 1, ele testaria o segundo elemento, que é NaN e portanto o resultado é False e não entra no if.
","
            2
        ",['\npython\n']
543253,Resultado impreciso em cálculo com números quebrados,"
Problema
Testem aí nos consoles dos seus browsers:
1067.11-1000 = 67.1099999999999

O correto seria 67.11

Alguém poderia me explicar isso?
E como faço para resolver isso?

","
Resposta curta
Isso ocorre por causa de uma imprecisão na conversão do valor 1067.11 para a
representação do número em memória... imprecisão esta, que é revelada ao
subtrair o valor 1000.
Resposta longa
Fatores da imprecisão
Imprecisões numéricas ocorrem por uma variedade de fatores,
que decorrem da forma com que tais números são representados pelo computador.
Números com ponto flutuante, nos sistemas modernos são geralmente
representados de acordo com a norma
IEEE 754 de forma nativa. O javascript especificamente, usa o double
para representar todos os números.
No caso do double da norma IEEE 754, imprecisões são causadas por
dois fatores:

Quantidade de espaço para representar o número é finita. No caso corrente,
esta limitação não é o que causa a imprecisão.
Base numérica do expoente é 2, que não pode ser alinhada com a base do
número original 1067.11 que está na base 10. Esse é o causador da
imprecisão no caso corrente.

Para entender melhor temos de ver como exatamente é representado o tipo double.
Componentes de um double
O double da norma IEEE 754 é formado da seguinte maneira:

sinal: 1 bit para o sinal
expoente: inteiro de 11 bits,
para indicar o valor do expoente deslocado 1023 unidades, ou então
um dos dois valores com significados especiais:
0x000 para valores subnormais e zero;
0x7FF para representar infinito e NaN.
(i.e. 2x - 1023, onde x é o valor inteiro do campo)
mantissa: 52 bits, para valores normais do expoente, representa um valor
racional que vai de 1.0 inclusive até 2.0 exclusive, matematicamente [1, 2[.
Para o valor do expoente 0x000, então representa valores subnormais (i.e.
menores que o menor valor normal representável) ou zero; Para o valor do
expoente 0x7FF representa infinito se for 0, ou NaN se for diferente de 0.

Por que imprecisão aparece só após subtrair 1000
Apesar de não parecer, o número 1067.11 não pode ser representado exatamente
pelo javascript. Então como é que o javascript consegue converter esse número
de volta para string, exatamente como ""1067.11""?
alert(1067.11); // vai mostrar ""1067.11"", como é possível então?

Isso ocorre pois a implementação do javascript é esperta... na hora de
converter para string, mostra o valor mais curto que seria representável por
este valor de double.
Isso acontece pois um único valor de double resulta de várias conversões de
string para double:
1067.1100000000000000000001
1067.11000000000000001
1067.11000000000001
1067.11
1067.10999999999978626875
1067.1099999999997862687453
1067.10999999999978626874509
1067.1099999999998999553285190717

Ao escrever qualquer um dos números acima no console do chrome, o resultado é
1067.11... pois esta é a string mais curta.
Mas a verdade é que você está sendo enganando!

O valor exato da string ""1067.11"" convertida para double é 1067.1099999999998999553285190717.
O valor exato menos 1000 é 67.1099999999998999553285190717.
O valor mais curto representável pelo double anterior é 67.1099999999999.
Conclusão:
                          1067.11 - 1000 == 67.1099999999999
                            é **EXATAMENTE** o mesmo que
1067.1099999999998999553285190717 - 1000 == 67.1099999999998999553285190717  


Ou seja:
    O que realmente acontece na memória  =>    O que é mostrado para você
    1067.1099999999998999553285190717    =>    1067.11
  - 1000                                 =>  - 1000
    ---------------------------------          ------------------
      67.1099999999998999553285190717    =>      67.1099999999999

Referências
Minhas fontes de informações e aprendizado:

Double-precision floating-point format
IEEE floating point
How to manually parse a floating point number from a string
Does JavaScript have double floating point number precision?
Everything you never wanted to know about JavaScript
Floating point
IEEE-754 Floating-Point Conversion
Binary floating point and .NET

","
            59
        ","

Fonte:
  http://www.guj.com.br/8905-problemas-no-calculo-com-javascript

O porquê disso é o seguinte.
O computador não trabalha bem com casas decimais. Como você sabe, os dados são representados internamente no formato binário.
O número 4, por exemplo, é representado pelo computador assim:
100 (onde 1x2^2 + 0x2^1 + 0x2^0 = 4)

Como é representado um número com casas decimais? O número fica impreciso porque, depois da vírgula, cada bit ligado representa 2^-n, onde n é o número da casa contada da direita pra esquerda, a partir do 1. Assim, o número 2,5 seria representado em binário por:
2 = 10 
0,5 = 0.1
2,5 = 10.1

Agora, considere o esforço de escrever uma fração que não é múltipla de 2, como 0,3, usando potências de 2:
A primeira potência que usaríamos poderia ser 1/4, que é 0,25.
Para melhorar a precisão, podemos somar 1/32, que é 0,03125.
Obteríamos então, 0,28125. E se quiséssemos aumentar ainda mais a precisão?
Daria para somar 1/64, que é 0,015625, e obteríamos 0,296875...
Nosso número já está assim: 0,3 = 0,010011
Poderíamos continuar somando com divisores múltiplos de 2 cada vez maiores, mas dificilmente chegaríamos em 0,3. Esse comportamento assintótico é extremamente inconveniente e, para uma base como 2, extremamente frequente.
Com isso, vemos que o sistema de base 2 é muitíssimo pobre para representar números que não podem ser obtidos por frações de 2. E daí que vem essa imprecisão toda. O que o computador faz é aumentar (muito) o número de bits quando contas envolvendo floats são feitas. Isso atenua o problema, mas não o resolve. Pequenas dicas de programação (como multiplicar antes de dividir, quando possível) também ajudam.
Entretanto, muitas vezes não é suficiente. O Java (mas não o JavaScript) fornece classes (BigDecimal e BigInteger) para que você manipule números de precisão arbitrária. Nesse caso, os cálculos são feitos de maneira indireta, e são muito mais lentos comparados à maneira primitiva. Mas ainda sim, quebram um galhão.
Isso explica o seu número estranho. Não é um bug do JavaScript, é a forma que os computadores funcionam. O mesmo problema irá se repetir em todas as linguagens de programação.
","
            28
        ","['\njavascript', 'matemática', 'ponto-flutuante\n']"
543244,Como referenciar um desvio padrão no PySpark?,"
boa tarde!
Eu já pesquisei bastante e não estou conseguindo encontrar uma forma de solucionar isso.
Eu tenho um df sobre ações (meu df tem dados de nome, data, abertura, máxima, mínima, fechamento e volume). Quero descobrir qual ação teve o maior desvio padrão. Eu fiz o seguinte:
df.agg({'fechamento': 'stddev'}).show()

Isso me trouxe o resultado do desvio padrão da coluna de fechamento, porém eu quero saber qual foi a empresa que teve o maior desvio padrão. Não estou sabendo como resolver isso. Tentei outras coisas também (vou deixar abaixo), mas tudo dá no mesmo lugar.
from pyspark.sql.functions import stddev
df.select(stddev('fechamento')).collect()

Tentei também dessa forma:
df.agg({'fechamento':'stddev_pop'}).collect()

Como eu referencio a qual empresa o maior desvio padrão pertence? Estou bastante perdida.
Alguém poderia me ajudar?
Muito obrigada!
","
from pyspark.sql import functions as F
from pyspark.sql.types import *
from pyspark.sql import Window as W

#Criando um dataframe com alguns exemplos:
data  = [
    ('XPTO11','21/02/2022',14.91,14.99,14.84,14.92,'14.49M'),
    ('MERD4','21/02/2022',8.32,8.55,8.30,8.34,'7.93M'),
    ('MITO3','21/02/2022',78.30,78.42,78.22,78.34,'43.02M'),
    ('XPTO11','22/02/2022',14.96,15.05,14.02,14.02,'14.43M'),
    ('MERD4','22/02/2022',8.23,8.99,8.22,8.90,'7.90M'),
    ('MITO3','22/02/2022',78.99,79.42,78.99,78.98,'42.16M'),
    ('XPTO11','23/02/2022',14.91,14.99,14.84,14.92,'14.49M'),
    ('MERD4','23/02/2022',8.30,8.50,8.26,8.49,'7.76M'),
    ('MITO3','23/02/2022',78.31,78.33,78.00,78.01,'49.33M')
  ]
    
schema = StructType([ \
    StructField(""nome"",StringType(),True), \
    StructField(""data"",StringType(),True), \
    StructField(""abertura"",DoubleType(),True), \
    StructField(""máxima"", DoubleType(), True), \
    StructField(""mínima"", DoubleType(), True), \
    StructField(""fechamento"", DoubleType(), True), \
    StructField(""volume"", StringType(), True)
  ])

df = spark.createDataFrame(data,schema).withColumn('data', F.to_date('data', 'd/M/y'))

#Usando uma Window Function para particionar o DF pelo código da ação:
w = W.partitionBy('nome')

#Adicionando uma coluna com o desvio padrão calculado na window function:
df = df.withColumn('desvio_padrão', F.stddev('fechamento').over(w))

df.show()

Output:
+------+----------+--------+------+------+----------+------+-------------------+
|  nome|      data|abertura|máxima|mínima|fechamento|volume|      desvio_padrão|
+------+----------+--------+------+------+----------+------+-------------------+
| MERD4|2022-02-21|    8.32|  8.55|   8.3|      8.34| 7.93M|0.28988503468329224|
| MERD4|2022-02-22|    8.23|  8.99|  8.22|       8.9| 7.90M|0.28988503468329224|
| MERD4|2022-02-23|     8.3|   8.5|  8.26|      8.49| 7.76M|0.28988503468329224|
| MITO3|2022-02-21|    78.3| 78.42| 78.22|     78.34|43.02M| 0.4931869152089599|
| MITO3|2022-02-22|   78.99| 79.42| 78.99|     78.98|42.16M| 0.4931869152089599|
| MITO3|2022-02-23|   78.31| 78.33|  78.0|     78.01|49.33M| 0.4931869152089599|
|XPTO11|2022-02-21|   14.91| 14.99| 14.84|     14.92|14.49M| 0.5196152422706636|
|XPTO11|2022-02-22|   14.96| 15.05| 14.02|     14.02|14.43M| 0.5196152422706636|
|XPTO11|2022-02-23|   14.91| 14.99| 14.84|     14.92|14.49M| 0.5196152422706636|
+------+----------+--------+------+------+----------+------+-------------------+

#Ordenando a coluna desvio_padrão por ordem decrescente e pegando apenas a 1a linha:
df\
    .select('nome','desvio_padrão')\
    .orderBy(F.desc('desvio_padrão'))\
    .limit(1)\
    .show()

Output:
+------+------------------+
|  nome|     desvio_padrão|
+------+------------------+
|XPTO11|0.5196152422706636|
+------+------------------+

","
            0
        ",,,"['\npython', 'spark\n']"
543198,Erro de JSON via POST com Flask-RESTful e SQLAlchemy,"
Estou criando uma API em Flask-RESTful e SQLAlchemy
Mas quando vou fazer um POST na API, recebo a seguinte mensagem de erro
""sqlalchemy.exc.StatementError: (builtins.TypeError) Not a boolean value: 'False'""
Na tabela a coluna criei dessa forma
paid_received = database.Column(database.Boolean, default=False, server_default=""false"")

e o JSON estou enviado assim
""paid_received"": false
o que estou fazendo de errado?
","
Consegui rsolver meu problema. Não sei se é a melhor forma ou a forma mais correta. Mas quando passado o valor via JSON 0 ou 1
No meu método consrutor
antes estava self.paid_received = paid_received
anterando para self.paid_received = int(paid_received)
resolveu o meu problema
","
            0
        ",,,"['\npython', 'flask', 'sqlalchemy\n']"
543163,PYTHON - problema com dois salários [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Primeiramente, existem dois indivíduos nessa questão. Carlos e João.
O Salário de João corresponde a um terço do salário de Carlos. A cada mês, o salário de Carlos recebe um aumento de 2% e o de João recebe um aumento de 5%. A questão pede para que o programa diga quantos meses são necessários para que o salário de João se iguale ao de Carlos. Eu fiz o código, ele funciona, mas retorna o resultado errado.

salariocarlos = 9
salariojoao = salariocarlos / 3
meses = 0

while salariocarlos != salariojoao:
 
 salariocarlos += (salariocarlos * 0.02)
 salariojoao += (salariojoao * 0.05)
 meses += 1

print(f'foi necessário {meses} meses para que João igualasse seu salario ao de Carlos)


O código roda, mas o resultado sai muito errado. Com o salário de Carlos valendo apenas 9 reais o programa retorna que são necessários 35732 meses para que João iguale.
","
Cara, isso me parece um problema de arredondamento, não?
Quando trabalhamos com floats, fazer um match exato assim (a == b) é complicado, ainda mais com operações no meio. Veja:
salariocarlos = 9
salariojoao = salariocarlos / 3
meses = 0

while round(salariocarlos, 0) != round(salariojoao, 0):
 
 salariocarlos += (salariocarlos * 0.02)
 salariojoao += (salariojoao * 0.05)
 meses += 1

print(f'foi necessário {meses} meses para que João igualasse seu salario ao de Carlos')

Se você arredondar pra 0 casas decimais o resultado é 38.
","
            -4
        ",,,"['\npython', 'while', 'porcentagem\n']"
543046,"_tkinter.TclError: image ""pyimage1"" doesn't exist","
Sou novo programando em Python e estou fazendo esses programas como forma de estudo.
Tenho 2 códigos onde 1 é a janela principal (Macro.py) e a de configuração (config_window.py), os dois códigos estão funcionando normalmente, porém, só de dar import config_window.py sem adicionar nenhuma outra linha eu já recebo esse código de erro:
_tkinter.TclError: image ""pyimage1"" doesn't exist
eu dei uma pesquisada e vi que esse código aparece quando vc tenta reutilizar o photoimage, mas eu só utilizo ele no Macro.py
Macro.py
from tkinter import *
import os
from tkinter import Button
#import config_window
import pyautogui
import time
import win32gui

class Janela:...

pyautogui.FAILSAFE = False
raiz = Tk()
raiz.title(""MACRO BY MOON"")
# raiz.geometry(""300x500"")
raiz.attributes('-alpha', 0.7)  # Adiciona Transparencia
raiz.attributes('-topmost', True)  # Deixa ela sempre visivel
raiz.resizable(width=False, height=False)

bg = PhotoImage(file=""vocations_knight.png"")
config_image = PhotoImage(file=""config.png"")

# criar o canvas
my_canvas = Canvas(raiz, width=300, height=220)
my_canvas.pack(fill=""both"", expand=True)

# colocar a img no canvas
my_canvas.create_image(50, 10, image=bg, anchor=""nw"")

# Colocar a Label
my_canvas.create_text(150, 30, text=""Moon's Macro"", font=('Verdana', '13', 'bold'))


Janela(raiz)
raiz.mainloop()

config_window.py
import tkinter.messagebox
from tkinter import *
import yaml
import io

gui = Tk()
gui.title(""Configuração"")
gui.attributes('-topmost', True)
# Carregamos o arquivos CFG
stream = open(""config.yaml"", 'r')
global c,ch,cd
c = yaml.safe_load(stream)
cd = c['CD']
ch = c['HOTKEYS']

# Dimensões Janela

largura = 250
altura = 320

# Resolução do sistema
largura_windows = gui.winfo_screenwidth()
altura_windows = gui.winfo_screenheight()

# Posição da janela

posx = largura_windows / 2 - largura / 2
posy = altura_windows / 2 - altura / 2

# Geometry

gui.geometry(""%dx%d+%d+%d"" % (largura, altura, posx, posy))

gui.resizable(width=False, height=False)
gui.overrideredirect(TRUE)

def salvar():...

# Criando os botões
botao = Button(gui, text='Salvar', command=salvar)
botao.place(x=90, y=290)
botao_sair = Button(gui, text='Sair', command=gui.quit)
botao_sair.place(x=140, y=290)

",,,,,"['\npython', 'tkinter\n']"
543028,Como usar o virtualenv do Python no Windows,"
Após instalado com sucesso o virtualenv com o comando:
pip install virtualenv

Quando vou criar uma virtualenv com o comando
virtualenv -p python3 coleta_dados

Ele me traz o seguinte
'virtualenv' não é reconhecido como um comando interno
ou externo, um programa operável ou um arquivo em lotes.
O que falta fazer?
Estou usando o python 3.10.2
","
Para criação da venv você deve ""chamar"" o python, o comando da venv e depois nomea-la, conforme abaixo:
python -m venv minhavenv

","
            1
        ",,,['\npython\n']
542980,Label do dataframe gerando problemas quando computado a média,"
O problema é o seguinte. Estou fazendo um programa aonde o usuário vai inserir um dataframe de dimensões 2 linhas e 1 coluna (ele pode ter inúmeras linhas) e realizar alguns cálculos, um deles é a média. Para o calculo dela, estou fazendo da seguinte forma:
import pandas as pd
import numpy as np

def two_m(I_barra, rm_barra, tabela_cep):
    # Computing ICL, UCL, CL 
    UCL_I_Chart = (I_barra + (tabela_cep.iloc[0][0]*rm_barra))
    ICL_I_Chart = (I_barra - (tabela_cep.iloc[0][0]*rm_barra))
    CL_I_Chart = I_barra
    
    standard_dev_I_1_positive = (
        ((UCL_I_Chart-CL_I_Chart)/3) + CL_I_Chart)
    
    standard_dev_I_2_positive = (
        ((UCL_I_Chart-CL_I_Chart)/3) + standard_dev_I_1_positive)
    
    standard_dev_I_2_negative = (
        ((CL_I_Chart-ICL_I_Chart)/3) + ICL_I_Chart)
    
    standard_dev_I_1_negative = (
        ((CL_I_Chart-ICL_I_Chart)/3) + standard_dev_I_2_negative)
    
    df_I_control_chart = {
        'UCL': [UCL_I_Chart],
        'CL': [CL_I_Chart],
        'ICL': [ICL_I_Chart],
        '1 x S(+)': [standard_dev_I_1_positive],
        '2 x S(+)': [standard_dev_I_2_positive],
        '1 x S(-)': [standard_dev_I_1_negative],
        '2 x S(-)': [standard_dev_I_2_negative]
    }

    print(df_I_control_chart)

lista = [132,135]
df = pd.DataFrame(lista, columns = ['X'])
df.index +=1
I_barra = df.mean()

# Compute of MR:
m_r_array = df.to_numpy()  # Convert df to numpy
saida = m_r_array - np.roll(m_r_array, 1)  # Vector subtraction
saida[0] = m_r_array[0]  # Copy the first entry to the exit
rm_data = np.abs(saida)  # Transform de negative values to positive
new_rm_df = rm_data.tolist()  # Transform the array to list
new_rm_df.pop(0)  # Remove the first element of the list
rm_barra = np.mean(new_rm_df)  # Compute the mean of Rm

data ={
    'E2': [2.660, 1.772, 1.457, 1.290,
           1.184, 1.109, 1.054, 1.010,
           0.975, 0, 0, 0,
           0, 0, 0, 0,
           0, 0, 0, 0,
           0, 0, 0, 0  
    ]
}

tabela_cep = pd.DataFrame(data)

if df.shape[0] == 2:
  two_m(I_barra, rm_barra, tabela_cep)

o resultado está me gerando uma series (até ai tudo bem) entretanto, essa series está gerando problemas nos próximos cálculos que necessitam da variável I_barra. Não sei como, mas se eu tiver um próximo calculo que necessita da variável I_barra ele simplesmente está inserindo o index da series junto com o cálculo e ficando uma coisa bugada, segue imagem:

","
Resolvido. Troquei o df.mean() por new_df = df['X'].mean() e os cálculos retornaram valores sem o X incluso.
","
            -1
        ",,,['\npython\n']
542967,Criar coluna condicional considerando valor do mês anterior,"
Tenho um dataframe com venda de cada cliente, basicamente preciso classificar o cliente no mês como churn (perda) ou não.
Para isso a condição é que, se o cliente no mês de referência (atual) está inativo E no mês passado estava ativo, retornar ""churn"" pois é um cliente perdido, caso contrário, retornar na.
Consegui fazer isso, mas o problema é que não consigo criar uma estrutura para se o valor no mês anterior for nulo, ir para o próximo mês anterior.
Por exemplo, o Paulo estava on em 02/2021, e em 10/2021 estava off, então deveria retornar ""churn"" e não ""na"".
import pandas as pd
import numpy as np
from datetime import datetime
from datetime import timedelta

df = pd.DataFrame({'month_year':['jan/21', 'feb/21', 'mar/21', 'nov/21', 'oct/21', 'apr/21', 'apr/21', 'jan/21', 'jan/21'], 
                 'name':['joao', 'paulo', 'joao', 'joao', 'paulo', 'joao', 'joao', 'paulo', 'paulo'], 
                 'sale_value':[10000, 15000, 3000, 6000, 3000, 1500, 9000, 2000, 4000], 
                  'status':['on', 'on', 'off',  'off', 'off', 'off', 'on', 'on', 'off']})

list_datetime = [datetime.strptime(x, '%b/%y') for x in list(df['month_year'])]

df['month_year'] = list_datetime

df = df.groupby(['month_year', 'name']).agg({'sale_value':'sum','status':'last'})

for df['name'] in list_datetime:
    cond_churn = [
    ((df['status'] == 'on') & (df['status'].shift(periods=-1) == 'off')
    | ((df['status'] == 'off') & (df['status'].shift(periods=-1) == 'off'))
    | ((df['status'] == 'on') & (df['status'].shift(periods=-1) == 'on')))]
    return_churn = ['na']
    df['churn'] = np.select(cond_churn, return_churn, default='churn')

df.head(10)

",,,,,"['\npython', 'pandas', 'data-science\n']"
542892,É normal que mais de um módulo seja instalado de uma só vez?,"
Estou começando a aprender sobre bibliotecas/módulos externos depois de ter aprendido o básico do python e algumas bibliotecas internas e usei pip install pandas pra instalar o pandas, mas foram instalados o pandas, o pytz, o six, o numpy e o python-dateutil, tudo de uma pancada só. Queria saber se isso é normal ou se eu fiz algo errado.
","
Sim, é normal, visto que o pandas instala as dependências necessárias para o seu funcionamento como podemos ver nesse link: https://pandas.pydata.org/docs/getting_started/install.html#dependencies
","
            1
        ",,,['\npython\n']
542827,"Para que serve o "";"" [duplicada]","






Essa pergunta já tem respostas aqui:
                        
                    



Qual é a vantagem do ponto e vírgula em linguagens de programação?

                                (1 resposta)
                            


Qual a função do ponto e vírgula em Python?

                                (2 respostas)
                            


Utilizar ou não ponto e vírgula no fim das linhas em JavaScript?

                                (7 respostas)
                            


O que significa ponto e vírgula após um ""if""?

                                (2 respostas)
                            


Como usar o ponto e vírgula no comando ""for""?

                                (1 resposta)
                            

Fechada no mês passado.



Qual a utilidade do ; nas linguagens de programação? É apenas para ajudar na organzição e facilitar a leitura do código? Caso seja, por que em algumas linguagens como C esse caractere é obrigatório?
",,,,,"['\npython', 'c', 'característica-linguagem\n']"
542768,Erros no Geckodriver auto-installer (webdriver para web-scraping),"
Bom dia,
Fiz um script de web-scraping usando Selenium, pandas, bf4 and GeckoDriver
import requests
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from webdriver_manager.firefox import GeckoDriverManager  

url = ""https://example/url/target""
    
    option = Option()
    option.headlers = True
driver = webdriver.Firefox(executable_path=r'C:\Users\Public\geckodriver.exe')

driver.get(url)
[...]

Com este código o programa funciona 100% mas como eu preciso que seja uma aplicação portável (transferir para outros computadores) eu não quero que o usuário tenha que especificar manualmente o caminho do Geckodriver e muito menos ter que baixar isso.

O Geckodriver tem um auto-installer mas em todas as formas que tento fazer da erro, procurando aqui no fórum achei esta alternativa (e o erro)
url = ""https://example/url/target""

driver = webdriver.Firefox(executable_path=rGeckoDriverManager().install())

driver.get (""https:www.python.org"")
driver.get(url)

Result: ConnectionError: HTTPSConnectionPool(host = 'api.github.com', port=443): Max retries exceeded with url: /repos/mozilla/geckodriver/releases/latest (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x0000025186487F98>: Failed to stabilish a new connection: [Errno 11001 getaddrinfo failed',))

Também tentei seguindo o: https://pypi.org/project/geckodriver-autoinstaller/#description :
import geckodriver_autoinstaller
geckodriver_autoinstaller.install()  

driver = webdriver.Firefox()
driver.get(""http://www.python.org"")
assert ""Python"" in driver.title

Result: <urlopen error [Errno 11001] getaddrinfo failed>

Todas estas opções testei também com socket.getddrinfo('localhost', 8080) e também usando o Git hub Token no os.environ['GH_TOKEN'] = 'exampletoken'
Alguém sabe por que eu não estou conseguindo automatizar a instalação do driver?

Estou usando:
W10 64 bits,
Firefox ultima versão,
Libs e anaconda ultima versão,
Python = 3.6,
Internet com VPN (computador empresarial)
","
Amigo testei aqui e funcionou sem problemas desta forma:
from selenium import webdriver
from webdriver_manager.firefox import GeckoDriverManager

navegador = webdriver.Firefox(executable_path=GeckoDriverManager().install())
navegador.get('http://www.python.org')

","
            0
        ",,,"['\npython', 'selenium', 'selenium-webdriver', 'web-scraping', 'geckodriver\n']"
542744,Filtrar coluna por condicional,"

Por exemplo, aqui eu quero obter um dataset que contenha todos os países, EXCETO o país 'United Kingdon'
Usei:
df1.loc[df1('Country')!='United Kingdom']
Mas obtenho:
TypeError: 'DataFrame' object is not callable
O que estou fazendo de errado?
Como eu faria o filtro de forma correta?
","
O problema realmente é o uso dos parênteses - df1('Country'). O correto é usar df1['Country'].
Alternativamente, vc consegue fazer o mesmo slice sem precisar usar loc:
df1 = df1[df1['Country']!='United Kingdom']

Output:
df1
        Country  UserId
14      Germany      95
13       France      88
31        Spain      31
3       Belgium      25
33  Switzerland      22
27     Portugal      20
19        Italy      15

","
            0
        ",,,"['\npython', 'pandas', 'filter\n']"
542690,Erro ao usar o terminal do Pycharm [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Ao começar a aprender o framework Django tive o seguinte problema:
No momento estou usando a ide pycharm community por recomendações, e fiz toda a instalação do Django através do PIP, so que me acontece que se eu acessar o meu projeto pelo pycharm não consigo rodar os comando do Django como pode ver na imagem:

Porém se eu acesso o projeto inicial do pycharm que ele mesmo criou, apenas criei alguns arquivo, ele já me deixa executar normalmente:

e agora vem o pior, se eu acessando este projeto do pycharm eu mando o comando para mudar o caminho via terminal ele também executa

Ou seja só não executa se abrir o ambiente do projeto de fato. Isso esta me prejudicando pois preciso deixar duas telas abertas.
OBS: já tentei executar pelo cmd, mas o comando Django não funciona de nenhuma forma acessando as pastas.
Gostaria de saber se alguém já teve algum problema do tipo e o que posso fazer para ajustar.
","
Está faltando ""ativar"" o ambiente virtual que foi feita a instalação do Django, antes de executar os comandos associados àquele ambiente virtual.
A IDE Pycharm funciona por padrão com o ambiente virtual ativo. Isso faz com que todas as instalações fiquem associadas àquele ambiente que está executando na IDE.
Para ter acesso ao Django instalado no mesmo ambiente da IDE, basta ""ativar"" o ambiente virtual que o Pycharm criou.
Você pode tentar descobrir o diretório de onde está esse ambiente virtual (da IDE) e ativar esse ambiente no terminal do Windows antes de executar o comando django-admin.
No ambiente da IDE
Para descobrir o caminho de execução do binário do Python da IDE, faça o seguinte:
execute o comando:
python
import sys

print(sys.executable)

No terminal (fora da IDE)
Sabendo qual o caminho do executável, agora é só ""ativar"" o ambiente virtual com o seguinte comando:
<diretório-do-executavel>\Scripts\activate

Após executar estes passos, será possível executar o comando django-admin.
É possível saber que o ambiente virtual está ""ativo"" porque vai aparecer uma indicação com uma espécie de prefixo com (nome-do-ambiente) no shell/bash/cmd.
powershell

cmd

","
            0
        ",,,"['\npython', 'django', 'pycharm\n']"
542682,Utilização dos dois pontos em atribuição de variável,"
Estou utilizando o Python para conectar no Redshift da AWS. Fui usar a documentação do redshift_connector e me deparei com o código abaixo:
conn = redshift_connector.connect(
    host='examplecluster.abc123xyz789.us-west-1.redshift.amazonaws.com',
    database='dev',
    user='awsuser',
    password='my_password'
 )

cursor: redshift_connector.Cursor = conn.cursor()

Não entendo a última linha cursor: redshift_connector.Cursor = conn.cursor(), especificamente a utilização dos dois-pontos.
Consultei esse post, mas ele não comenta sobre esse uso específico.
","
O caractere : tem algumas funções diferentes dependendo do contexto, mas nesse seu exemplo ele serve pra fazer a tipagem (em inglês: type hinting) de uma variável.
Como funciona?
Em Python, a tipagem de uma variável é feita da seguinte forma:
var: type = value

Traduzindo: a variável var, que foi associada ao valor value, é do tipo de dado type.
Alguns exemplos concretos:
a: int = 1
b: float = 3.2
c: str = 'Hello'

Pra quê serve?
A tipagem em Python é 100% opcional e documentativa, ou seja, você nunca é obrigado a usá-la e ela serve apenas para lhe ajudar a entender o código. No seu exemplo, mesmo que eu não conheça nada da biblioteca utilizada, só de ler a linha eu já entendo que a variável cursor representa um objeto do tipo redshift_connector.Cursor. Pode parecer algo ""bobo"", mas em projetos grandes esse tipo de informação facilita muito a sua vida, além de poder ser interpretado por alguns programas de escrita de código (mais detalhes abaixo).
É claro que nada impede você de criar uma tipagem errada - Python nunca, jamais checa o tipo de variáveis sem que você peça por isso. O código abaixo é perfeitamente válido do ponto de vista do interpretador de Python, apesar de apresentar uma tipagem errada:
a: str = 10
b: list = 20
c: dict = a + b

As variáveis a, b e c são todas do tipo int, mas o código executa de qualquer forma, sem nenhum tipo de conferência.
Onde mais posso usar?
Também é possível adicionar a tipagem a funções em Python, ex:
def tamanho_do_string(s: str) -> int:
    """"""Retorna o tamanho (número de caracteres) do string s.""""""
    return len(s)

Neste caso, estou deixando claro a todos os leitores da função que ela aceita um str como argumento, e retorna um int. Novamente, o Python nunca checa se isso é verdade ou não durante a execução do programa - a tipagem serve apenas para informar os leitores do código.
Outra vantagem é que alguns editores de texto e IDEs são capazes de usar a informação da tipagem para lhe dar avisos e chamar a atenção de erros lógicos enquanto você escreve o código. Por exemplo, tendo a função acima tipada, se eu escrever:
n = tamanho_do_string('abcde')
n + 'fghi'

Em programas que suportam a checagem de tipo (em inglês: type checking), a segunda linha será marcada como um warning que me avisa do erro lógico: não posso somar um int (retornado da função tamanho_do_string) a um str.
","
            3
        ",,,"['\npython', 'característica-linguagem', 'sintaxe\n']"
542681,não consigo instalar a Biblioteca ChatterBot,"
Quando tento instalar essa biblioteca da erro, e não soube identificar qual seria esse erro. mas já tentei outras bibliotecas e instala normalmente. em certa parte do erro fala que requer o Microsoft visual C++ 14 ou superior, eu já tenho instalado ele, e uso o Pycharm para escrever os códigos. segue o erro:
PS C:\Users\Oem> pip install chatterbot
Collecting chatterbot
Using cached ChatterBot-1.0.5-py2.py3-none-any.whl (67 kB)
Collecting pint>=0.8.1
Using cached Pint-0.18-py2.py3-none-any.whl (209 kB)
Collecting sqlalchemy<1.3,>=1.2
Using cached SQLAlchemy-1.2.19-cp38-cp38-win_amd64.whl
Collecting mathparse<0.2,>=0.1
Using cached mathparse-0.1.2-py3-none-any.whl (7.2 kB)
Collecting pyyaml<5.2,>=5.1
Using cached PyYAML-5.1.2.tar.gz (265 kB)
Preparing metadata (setup.py) ... done
Requirement already satisfied: pytz in c:\users\oem\appdata\local\programs\python\python38\lib\site-packages (from chatterbot) (2021.3)
Collecting spacy<2.2,>=2.1
Using cached spacy-2.1.9.tar.gz (30.7 MB)
Installing build dependencies ... error
error: subprocess-exited-with-error
× pip subprocess to install build dependencies did not run successfully.
│ exit code: 1
╰─> [79 lines of output]
Collecting setuptools
Using cached setuptools-60.8.2-py3-none-any.whl (1.1 MB)
Collecting wheel<0.33.0,>0.32.0
Using cached wheel-0.32.3-py2.py3-none-any.whl (21 kB)
Collecting Cython
Using cached Cython-0.29.27-py2.py3-none-any.whl (983 kB)
Collecting cymem<2.1.0,>=2.0.2
Using cached cymem-2.0.6-cp38-cp38-win_amd64.whl (36 kB)
Collecting preshed<2.1.0,>=2.0.1
Using cached preshed-2.0.1.tar.gz (113 kB)
Preparing metadata (setup.py): started
Preparing metadata (setup.py): finished with status 'done'
Collecting murmurhash<1.1.0,>=0.28.0
Using cached murmurhash-1.0.6-cp38-cp38-win_amd64.whl (21 kB)
Collecting thinc<7.1.0,>=7.0.8
Using cached thinc-7.0.8.tar.gz (1.9 MB)
Preparing metadata (setup.py): started
Preparing metadata (setup.py): finished with status 'done'
Collecting blis<0.3.0,>=0.2.1
Using cached blis-0.2.4.tar.gz (1.5 MB)
Preparing metadata (setup.py): started
Preparing metadata (setup.py): finished with status 'done'
Collecting wasabi<1.1.0,>=0.0.9
Using cached wasabi-0.9.0-py3-none-any.whl (25 kB)
Collecting srsly<1.1.0,>=0.0.6
Using cached srsly-1.0.5-cp38-cp38-win_amd64.whl (178 kB)
Collecting numpy>=1.7.0
Using cached numpy-1.22.2-cp38-cp38-win_amd64.whl (14.7 MB)
Collecting plac<1.0.0,>=0.9.6
Using cached plac-0.9.6-py2.py3-none-any.whl (20 kB)
Collecting tqdm<5.0.0,>=4.10.0
Using cached tqdm-4.62.3-py2.py3-none-any.whl (76 kB)
Collecting colorama
Using cached colorama-0.4.4-py2.py3-none-any.whl (16 kB)
Using legacy 'setup.py install' for preshed, since package 'wheel' is not installed.
Using legacy 'setup.py install' for thinc, since package 'wheel' is not installed.
Using legacy 'setup.py install' for blis, since package 'wheel' is not installed.
Installing collected packages: wasabi, srsly, plac, murmurhash, cymem, wheel, setuptools, preshed, numpy, Cython, colorama, tqdm, blis, thinc
Running setup.py install for preshed: started
Running setup.py install for preshed: finished with status 'error'
error: subprocess-exited-with-error
    Running setup.py install for preshed did not run successfully.
    exit code: 1

    [22 lines of output]
    WARNING: The wheel package is not available.
    running install
    running build
    running build_py
    creating build
    creating build\lib.win-amd64-3.8
    creating build\lib.win-amd64-3.8\preshed
    copying preshed\about.py -> build\lib.win-amd64-3.8\preshed
    copying preshed\__init__.py -> build\lib.win-amd64-3.8\preshed
    creating build\lib.win-amd64-3.8\preshed\tests
    copying preshed\tests\test_counter.py -> build\lib.win-amd64-3.8\preshed\tests
    copying preshed\tests\test_hashing.py -> build\lib.win-amd64-3.8\preshed\tests
    copying preshed\tests\test_pop.py -> build\lib.win-amd64-3.8\preshed\tests
    copying preshed\tests\__init__.py -> build\lib.win-amd64-3.8\preshed\tests
    copying preshed\counter.pyx -> build\lib.win-amd64-3.8\preshed
    copying preshed\maps.pyx -> build\lib.win-amd64-3.8\preshed
    copying preshed\counter.pxd -> build\lib.win-amd64-3.8\preshed
    copying preshed\maps.pxd -> build\lib.win-amd64-3.8\preshed
    copying preshed\__init__.pxd -> build\lib.win-amd64-3.8\preshed
    running build_ext
    building 'preshed.maps' extension
    error: Microsoft Visual C++ 14.0 is required. Get it with ""Build Tools for Visual Studio"": https://visualstudio.microsoft.com/downloads/
    [end of output]

    note: This error originates from a subprocess, and is likely not a problem with pip.
  error: legacy-install-failure

  Encountered error while trying to install package.

  preshed

  note: This is an issue with the package mentioned above, not pip.
  hint: See above for output from the failure.
  [end of output]

note: This error originates from a subprocess, and is likely not a problem with pip.
error: subprocess-exited-with-error
× pip subprocess to install build dependencies did not run successfully.
│ exit code: 1
╰─> See above for output.
","
Cara tive o mesmo problema então tentei instalar clonando do gitHub e apareceu esse erro: ""ERROR: Package 'chatterbot' requires a different Python: 3.10.2 not in '<=3.8,>=3.4'"". Me parece que só roda nas versões 3.8 e 3.4 e a minha era a 3.10.2
baixa o python 3.8 : https://www.python.org/downloads/release/python-380/
e quando for criar um novo projeto no pycharm escolhe o interpretador do 3.8 (na hora da instalação copia o path) que vai funcionar (testei aqui!)
fonte: Documentação chatterbot https://chatterbot.readthedocs.io/en/stable/setup.html

","
            0
        ",,,['\npython\n']
542661,Inverter diagonal principal multiplicando diagonal secundária [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou desenvolvendo esse algoritmo, preciso inverter a diagonal principal e em seguida, multiplicar somente a diagonal secundária por 2, exemplo:
Ele está assim:
[9, 1, 2, 4]
[5, 6, 7, 8]
[3, 2, 1, 0]
[1, 2, 3, 4]

Preciso deixar ele assim:
[4, 1, 2, 8]
[5, 1, 14, 8]
[3, 4, 6, 0]
[2, 2, 3, 9]

Isso é o que tenho até agora:
dimensao = int(input())

matriz = []
for linha in range(dimensao):
    linha = [int(coluna) for coluna in input().split()]
    matriz.append(linha)
    
transposta = []
for linha in range(dimensao):
    transposta.append([])
    for coluna in range(dimensao):
        ent = matriz[coluna][linha]
        transposta[linha].append(ent)


for linha in transposta:
    for coluna in linha:
        print(coluna, end= ' ')
    print(end=""\n"") 

","
Possivelmente existe uma maneira mais esperta pra fazer isso, mas de qualquer forma segue uma ideia:
matriz = [[9, 1, 2, 4],
          [5, 6, 7, 8],
          [3, 2, 1, 0],
          [1, 2, 3, 4]]
          
j = 0
tamanho_matriz = len(matriz)
lista = []

# Adicionando os elementos da diagonal principal a uma lista
for i in range(tamanho_matriz):
    lista.append(matriz[i][j])
    j = i + 1

# invertendo a lista da diagonal principal e adicionando os valores de volta na matriz
j = 0  
invertida = lista[::-1] # aqui acontece a inversão da lista
for i in range(tamanho_matriz):
    matriz[i][j] = invertida[i]
    j = i + 1

# multiplicando a diagonal secundaria    
j = tamanho_matriz - 1
for i in range(0, tamanho_matriz):
    matriz[i][j] = matriz[i][j] * 2
    j -= 1

# imprimindo a matriz
for i in range(tamanho_matriz):
    for j in range(tamanho_matriz):
        print(f'{matriz[i][j]:2} ', end=' ')
    print()

","
            1
        ","
Não precisa complicar (aliás, nem sei porque você criou a matriz transposta, não tem nada a ver com o problema).
Bom, no seu código você usou a mesma variável dimensao para percorrer as linhas e colunas, então estou assumindo que sempre será uma matriz quadrada.
Como estamos interessados apenas nas diagonais, dá para simplificar os loops. Basta pensar que a diagonal principal são os elementos em que a linha é igual à coluna (ou seja, os elementos nas posições (0, 0), (1, 1), etc). Então só precisa de um loop para percorrer essas posições.
Depois, para inverter, basta trocar a primeira posição com a última (no caso, seria trocar a (0, 0) com a (3, 3)), depois trocar a segunda com a penúltima, e assim por diante. Desta forma, eu só preciso iterar até a metade da diagonal, que no final ela estará invertida.
Já para a diagonal secundária, o cálculo é diferente: na primeira linha, o elemento da diagonal secundária está na última coluna. Na segunda linha, é o elemento da penúltima coluna e assim por diante. Novamente, basta um loop pelas linhas, pois a coluna pode ser calculada. E aí é só percorrer todas as linhas e multiplicar o valor por 2.
Ficaria assim:
# assumindo que as dimensões foram determinadas anteriormente e que a matriz já foi lida, etc
# assumindo também uma matriz quadrada
dimensao = 4
matriz = [
  [9, 1, 2, 4],
  [5, 6, 7, 8],
  [3, 2, 1, 0],
  [1, 2, 3, 4]
]

# diagonal principal, posições em que linha e coluna são iguais
# para inverter só precisa ir até a metade:
# troca o primeiro com o último, o segundo com o penúltimo, etc
for i in range(dimensao // 2): # ""i"" é a linha e a coluna
    dest = dimensao - i - 1 # posição que será trocada com esta
    matriz[i][i], matriz[dest][dest] = matriz[dest][dest], matriz[i][i]

# diagonal secundária
# primeira linha, última coluna; segunda linha, penúltima coluna, etc
for i in range(dimensao):
    matriz[i][dimensao - i - 1] *= 2 # multiplica por 2

print(*matriz, sep='\n')

Saída:
[4, 1, 2, 8]
[5, 1, 14, 8]
[3, 4, 6, 0]
[2, 2, 3, 9]


Também dá pra fazer tudo em um único loop. Só temos que garantir que a diagonal principal vá até a metade:
matriz = [
  [9, 1, 2, 4],
  [5, 6, 7, 8],
  [3, 2, 1, 0],
  [1, 2, 3, 4]
]

for i in range(dimensao):
    dest = dimensao - i - 1
    if i < dimensao // 2:
        matriz[i][i], matriz[dest][dest] = matriz[dest][dest], matriz[i][i]
    matriz[i][dest] *= 2

print(*matriz, sep='\n')

","
            1
        ","['\npython', 'python-3.x', 'matriz\n']"
542643,Como realizar o cálculo de amplitude móvel em listas?,"
Boa tarde, pessoal. Estou precisando criar uma função/loop/etc onde ela pega um valor de uma lista (n tamanho) e calcula os elementos seguindo a seguinte formula matemática:
Y = |Xi-(Xi-1)|
ou seja, se eu tenho uma lista com os seguintes valores L = [1,2,3,4,5] ela deverá realizar o seguinte calculo:
1
2-1
3-2
4-3
5-4

e salvar o resultado da operação em uma segunda lista. A equação matemática citada é o cálculo de amplitude móvel...
Estou tentando desse jeito por meio de um  laço for:
empty_list = [0]

for i in m_r_list[1:]:
  empty_list += i

m_r_list  é uma lista contendo n valores
","
Podemos quebrar a lógica necessária para resolver o seu problema nos seguintes passos:

inicialize uma lista de saída (começa vazia);
itere sobre os valores da lista de entrada;
na primeira iteração, coloque o próprio valor da lista de entrada na lista de saída;
nas demais iterações, calcule o valor resultante e coloque na lista de saída;
ao final da iteração, a lista de saída estará da forma desejada.

O processo de colocar valores dentro de uma lista é feita com o método list.append.
Aqui está um loop que resolve seu problema (troquei os valores de entrada apenas para confirmar o funcionamento do código, já que seu exemplo de lista resultaria em [1, 1, 1, ...]):
lista = [1, 2, 2, 6, 1]
lista_saida = []

for i, valor in enumerate(lista):
    if i == 0:  
        # primeira entrada da lista, 
        # apenas repetimos o valor da
        # lista original na lista de saída
        lista_saida.append(valor)
    else:  
        # demais entradas da lista, 
        # calculamos o valor resultante 
        # e colocamos na lista de saída
        novo_valor = valor - lista[i-1]
        lista_saida.append(novo_valor)

print(lista_saida)
# output: [1, 1, 0, 4, -5]

Usei a função enumerate para iterar ao mesmo tempo sobre índices e valores da lista de entrada. Isso não é estritamente necessário, mas simplifica um pouco as coisas, pois a cada iteração precisaremos tanto dos valores (para realizar o cálculo) quanto dos índices (para acessar o elemento da iteração anterior, de índice i-1).
Se você não tiver restrições a usar bibliotecas externas, a biblioteca numpy (muito utilizada para trabalhar com vetores e álgebra linear) oferece a função roll que ajuda a fazer esse tipo de operação - ela ""desliza"" todos os elementos de uma sequência por um certo valor de shift. Aí é só fazer a subtração entre vetores e recuperar o primeiro elemento da sequência original:
import numpy as np

entrada = np.array([1, 2, 2, 6, 1])
print(np.roll(entrada, 1))
# output: [1 1 2 2 6]  
# note que os elementos foram ""deslizados"" 
# uma casa para a direita, com o último elemento
# dando a volta e aparecendo na primeira casa

saida = entrada - np.roll(entrada, 1)  # subtração de vetores
saida[0] = entrada[0]  # copiamos a primeira entrada para a saída
print(saida)
# output: [ 1  1  0  4 -5]

","
            2
        ","
Pode fazer com um compreensão de lista assim:
nova_lista = [m_r_list[i] - m_r_list[i-1] for i in range(1:len(m_r_list))]

","
            0
        ","['\npython', 'lista\n']"
542618,Como fazer request em um site usando token de sessão,"
No caso eu tento entrar no link firefaucet.win/start com o seguinte código:
import requests    
requests.get('https://firefaucet.win/start')

Esse request retorna à página de login do site, e não para o local do link. Como o login é feito com captcha (e o objetivo final do código é automatizar um request), eu acredito que seja mais fácil usando o token da minha sessão, que eu já tenho (era um cookie). Mas como eu faço isso? Como eu faço o request entrando na conta usando apenas o token?
","
# Valor 'f919208d949256bc062e5c23e02ba9a2' é um exemplo
# Obtenha o valor real no cookie de uma sessão autenticada
# Verifique nas ferramentas de desenvolvedor do seu navegador    
cookie_dict = {""session"": ""f919208d949256bc062e5c23e02ba9a2""} 
requests.get('https://firefaucet.win/start', cookies=cookie_dict)

","
            0
        ","
Eu li bastante na documentação da lib requests e a resposta é só fazer um objeto de sessão (request.Session()) e em seguida fazer o request usando o cookies kwarg, que é padrão como None. Só lendo que o token de sessão é guardado no cookie chamado ""session"" no navegador, eu atingi o objetivo apenas pondo o token de sessão dentro do cookie ""session"" assim como no código abaixo:
import requests
obj = requests.Session() # cria o objeto de sessão

response = obj.request( # variavel recebe a resposta do request feito no objeto de sessão

    'get', # metodo de request
    'https://firefaucet.win/start', #link a ser utilizado
    cookies={ # dicionario com 'nome do cookie': 'valor do cookie'
        'session': 'token de sessao aqui'
    }
)
print(response) # imprime a resposta que o request gera, se der tudo certo retorna o código 200

","
            -1
        ","['\npython', 'python-3.x', 'session', 'python-requests', 'token\n']"
542594,Erro ao tentar instalar a biblioteca pandas no python 2.7.5,"
Estou tentando instalar o pandas no SO Linux, via Moba, mas o retorno abaixo persiste. Já tentei diversas maneiras, porém sem sucesso.
As tentativas:
pip install pandas
python -m pip install pandas
python -m pip install pandas
sudo pip install pandas
pip install pandas==0.19.*
sudo apt-get install python-pandas

(base) [root@ ~]# pip install pandas
Collecting pandas
  Using cached https://files.pythonhosted.org/packages/4d/aa/e7078569d20f45e8cf6512a24bf2945698f13a7975650773c01366ea96dc/pandas-1.4.0.tar.gz
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):
      File ""<string>"", line 1, in <module>
      File ""/tmp/pip-build-OLju22/pandas/setup.py"", line 250
        f""{extension}-source file '{sourcefile}' not found.\n""
                                                             ^
    SyntaxError: invalid syntax

Outras bibliotecas foram instaladas anteriormente, mas o pandas está dando um trabalho.
","
Eu não fazia ideia que tinha predecessor, não tinha o numpy instalado e com o --no-cache-dir na chamada resolveu o problema de cache!
Obrigado pela ajuda
","
            0
        ",,,"['\npython', 'linux', 'pandas\n']"
542522,Criar super usuario no django rest,"
Gostaria de saber como posso criar um super usuario no django rest framework, sei que posso usar o comando:
python manage.py createsuperuser

mas como posso fazer isso como uma request POST? e como eu poderia diferenciar esse super usuário de um usuario comum?
","
Uma maneira simples de resolver o problema é criando um endpoint para um cadastro de um novo usuário.
Neste exemplo vou criar um novo usuário através de um endpoint, este novo usuário que estou criando é do tipo User (o mesmo tipo utilizado pelo django-admin). Vou utilizar o fluxo sugerido pela arquitetura padrão do django-rest-framework
Serão algumas etapas que vou descrever os passos:

Criar uma classe serializer para o tipo User (uma abstração de um DTO)
Criar uma APIView para o model User (uma abstração de um service)
Criar uma rota para a criação de um novo usuário (uma abstração de um controller)

Desta forma, seguindo a ordem das operações acima, para criar um serializer para a classe User, basta criar um novo arquivo pela convenção do Django-rest-framework, possui o nome de serializers.py
from django.contrib.auth.models import User
from rest_framework import serializers
from django.contrib.auth.hashers import make_password

class UserSerializer(serializers.ModelSerializer):
    password = serializers.CharField(write_only=True, required=True)
    class Meta:
        model = User
        fields = ['username', 'email', 'password']
    
    def create(self, validated_data):
        validated_data['password'] = make_password(validated_data.get('password'))
        return super(UserSerializer, self).create(validated_data)

Ao criar o serializer, devemos sobre-escrever o método create. Isso é necessário para não gravar a senha em texto claro no banco de dados(com o auxílio da função make_password, primeira ocorrência), essa função vai gerar um hash do atributo password que é enviado na requisição. Após fazer o hash do atributo senha, é que salvamos o nosso modelo no banco de dados.
Com a lógica do serializer escrito podemos criar a nossa View, que vai ser a camada de serviço da nossa aplicação, ela vai servir para desacoplar o modelo da camada de apresentação.
views.py
from rest_framework import permissions
from rest_framework.generics import CreateAPIView
from django.contrib.auth.models import User
from .serializers import UserSerializer


class CreateUserView(CreateAPIView):
    model = User
    permission_classes = [
        permissions.AllowAny
    ]
    serializer_class = UserSerializer

Repare que estou utilizando classes de permissions para que se a sua aplicação utiliza algum middleware de autenticação, esta rota seja pública. Ou seja, possível de ser chamada sem a necessidade de autenticação. Estamos utilizando a classe UserSerializer criada no passo anterior.
Agora basta criar a rota, para que seja possível criar um novo usuário, neste exemplo vou chamar esta rota de cadastro. Para isso vou criar uma nova rota no arquivo urls.py e importar a classe CreateUserView.
from django.urls import path
from django.views.decorators.csrf import csrf_exempt
from .views import CreateUserView

urlpatterns = [
    path('cadastro', csrf_exempt(CreateUserView.as_view())),
]

Repare que aqui, estou fazendo uso da função csrf_exempt, pois o Django por padrão possui a proteção para csrf ativada. Neste caso eu estou explicitamente deixando esta rota sem a proteção csrf.
Esse seriam os passos essenciais para o que precisa.
Depois para poder fazer um cadastro, basta que seja feito uma requisição post na rota cadastro, use sua ferramenta favorita:
curl -X POST http://localhost:8000/cadastro -H 'Content-Type: application/json' -d '{""username"": ""usuario"" ,""email"":""a@b.com"",""password"": ""stackoverflowPT""}'

O que diferencia um super usuário de um usuário comum é um atributo is_superuser que é do tipo booleano. Quando você cria um objeto do tipo django.contrib.auth.models.User basta setar este atributo para True.
","
            1
        ",,,"['\npython', 'api', 'django', 'django-rest-framework\n']"
542514,Criar campo de senha no django,"
Queria conseguir criar um campo de senha com os asteriscos e fazer um hash da senha salva no banco de dados por questões de segurança.
class Cliente(models.Model):    
    cpf = models.CharField(primary_key=True, max_length=11, editable=True)
    nome = models.CharField(max_length=100, blank=False, null=False)
    senha = models.CharField(max_length=100, blank=False, null=False)

","
Para fazer o hash da senha basta utilizar a função helper que o Django oferece para isso. É a função make_password
Ela vai criar um hash para uma senha passada como parâmetro e se for passado o valor None então será gerado uma senha não utilizável.
Você já implementou o Model Cliente, para criar um novo usuário podemos utilizar a função citada acima, e para exibir um asterisco no form, basta trocar o widget do CharField para o PasswordInput utilizando um ModelForm para a sua classe de Modelo. No ClienteForm estou explicitamente configurando o atributo senha para que o formulário renderizado possua o input type=""password"". A maneira de fazer isso no Django é passando o widget widget=forms.PasswordInput.
Segue um exemplo:
# forms.py
from django import forms
from .models import Cliente

class ClienteForm(forms.ModelForm):
    senha = forms.CharField(widget=forms.PasswordInput)
    class Meta:
        model = Cliente
        fields = '__all__'

Depois no arquivo views.py você deve utilizar a classe ClienteForm que acabou de criar.
from django.http import HttpResponseRedirect
from django.shortcuts import render
from django.shortcuts import get_object_or_404
from .forms import  ClienteForm
from .models import Cliente
from django.contrib.auth.hashers import make_password

def subscribe(request):
    if request.method == 'POST':
        return create(request)
    else:
        return new(request)

def new(request):
    return render(request, 'cliente/cliente_form.html', {'form': ClienteForm()})

def create(request):
    form = ClienteForm(request.POST)
    if not form.is_valid():
       return render(request, 'cliente/cliente_form.html', {'form': form})

    c = form.save(commit=False)
    c.senha = make_password(c.senha)
    c.save()
    return HttpResponseRedirect('/')

Os nomes referênciados como cliente/cliente_form.html são hipotéticos, e devem representar um arquivo .html válido no mapeamento de templates da sua aplicação.
Uma página html que contém este form poderia ser escrita como:
<form action=""."" method=""POST"">
    {% csrf_token %}
    {{ form.non_field_errors }}
    <p>
        <label for=""{{ form.nome.id_for_label }}"">{{ form.nome.label }}:</label>
        {{ form.nome }}
        {{ form.nome.errors }}
    </p>
    <p>
        <label for=""{{ form.cpf.id_for_label }}"">{{ form.cpf.label }}:</label>
        {{ form.cpf }}
        {{ form.cpf.errors }}
    </p>
    <p> 
        <label for=""{{ form.senha.id_for_label }}"">{{ form.senha.label }}:</label>
        {{ form.senha }}
        {{ form.senha.errors }}
    </p>
    <input type=""submit"" value=""Enviar"" class=""button"">
</form>

Repare que estou fazendo o HttpResponseRedirect para a url / mas você pode ter uma página estática de criação de cliente com sucesso. Pode adaptar a solução para seu caso de uso.
Outro trecho que devo destacar é o fato de haver um form.save(commit=False) essa função vai retornar um objeto (válido), antes de fazer a persistência dos valores no banco de dados desejamos fazer o hash da senha, é o que a função make_password está fazendo. Depois disso basta sobre-escrever o atributo senha e terá a sua lógica completa.
Ao chamar o método c.save() a coluna  senha na tabela cliente possuirá um valor parecido com este:
bkdf2_sha256$20000$o1Mb8FuprOSw$MkXWwh896am1cVsNT1UxCsTffA4crk2ZpUAp0PJSb/w=

","
            1
        ",,,"['\npython', 'django\n']"
542497,Como fazer pra reconhecer uma imagem no VSCODE em Python,"
Problema
Estou aprendendo um pouco sobre o pyautogui e vi que da para usar a função click() para clicar em imagens, eu testei isso no Paint de diversas formas mas sempre da o mesmo erro e não sei exatamente como conserta-lo, vou deixar um código simples e além disso uma imagem dos arquivos e dos erros que aparecem.

Código
from pyautogui import *

keyDown('alt')
press('tab')
keyUp('alt')

click('imagem.png')


Imagem


Erro

[ WARN:0@0.540] global D:\a\opencv-python\opencv-python\opencv\modules\imgcodecs\src\loadsave.cpp (239) cv::findDecoder imread_('imagem.png'): can't open/read file: check file path/integrity
Traceback (most recent call last):
File ""c:\Users\name\OneDrive\Documentos\Name\Faculdade\Paradigmas\Python\Curso\testeProcuraImagem.py"", line 7, in 
click('imagem.png')
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyautogui_init_.py"", line 598, in wrapper
returnVal = wrappedFunction(*args, **kwargs)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyautogui_init_.py"", line 980, in click
x, y = normalizeXYArgs(x, y)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyautogui_init.py"", line 661, in normalizeXYArgs
location = locateOnScreen(firstArg)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyautogui_init.py"", line 175, in wrapper
return wrappedFunction(*args, **kwargs)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyautogui_init_.py"", line 213, in locateOnScreen
return pyscreeze.locateOnScreen(*args, **kwargs)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyscreeze_init_.py"", line 373, in locateOnScreen
retVal = locate(image, screenshotIm, **kwargs)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyscreeze_init_.py"", line 353, in locate
points = tuple(locateAll(needleImage, haystackImage, **kwargs))
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyscreeze_init_.py"", line 207, in _locateAll_opencv
needleImage = load_cv2(needleImage, grayscale)
File ""C:\Users\name\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\pyscreeze_init.py"", line 170, in _load_cv2
raise IOError(""Failed to read %s because file is missing, ""
OSError: Failed to read imagem.png because file is missing, has improper permissions, or is an unsupported or invalid format

","
Boa tarde amigo;
O que eu faço para detectar uma imagem na tela é o seguinte:
import pyautogui

imagem = 'imagem.png' #<- seta a imagem como uma variável#

local = pyautogui.locateCenterOnScreen(imagem,confidence=0.5) #<- seta o local onde está a imagem e da uma margem de erro de 50% para caso a imagem apareça um pouco desfocada ou em uma resolução diferente ainda seja possível encontrá-la(use a variável local para conseguir mover o mouse para ela após achada, segue abaixo:)#

pyautogui.moveTo(local) #<- move para o local onde foi achada a imagem (variável local)#
pyautogui.click() #<- da o click onde foi movido pela função acima#

","
            -1
        ",,,"['\npython', 'pyautogui\n']"
542377,"Could not read memory at: -375957928, length: 4 - GetLastError: 998 pymem gta 5","
Estou usando a lib do python usando pymem!
Estou com este erro para escrever na memoria do gta 5 (não irei afetar ninguém é para jogar no singleplayer) eu consigui achar os offsets corretos, o pointerscan correto também, tudo pelo cheat engine, quando eu altero o valor do pointerscan ele altera minha munição no gta 5, porém quando eu escrevo esse codigo no python ele me retorna esse erro, mesmo com tudo certo seria isso um bug do pymem?
meu código:
from pymem import *
from pymem.process import *
import keyboard

print('Script carregado com sucesso')
teclas = ""c""
mem = Pymem(""GTA5.exe"")
module = module_from_name(mem.process_handle, ""GTA5.exe"").lpBaseOfDll
offsets = [0x38,0x88,0x20,0x18]

def getPointerAddr(base, offsets):
    addr = mem.read_int(base)
    for offset in offsets:
        if offset != offsets[-1]:
            addr = mem.read_int(addr + offset)
    addr = addr + offsets[-1]
    return addr

mem.write_int(getPointerAddr(module + 0x02940BD0, offsets), 9999)


my error in game gta 5 / meu erro no game gta 5
Traceback (most recent call last):
  File ""d:\Programas PYTHON\hackingpython\municaogta5.py"", line 21, in <module>
    mem.write_int(getPointerAddr(module + 0x02940BD0, offsets), 9999)
  File ""d:\Programas PYTHON\hackingpython\municaogta5.py"", line 15, in getPointerAddr
    addr = mem.read_int(addr + offset)
  File ""D:\Python\lib\site-packages\pymem\__init__.py"", line 532, in read_int
    raise pymem.exception.MemoryReadError(address, struct.calcsize('i'), e.error_code)
pymem.exception.MemoryReadError: Could not read memory at: -375957928, length: 4 - GetLastError: 998

",,,,,"['\npython', 'python-3.x', 'python-2.7', 'script', 'game\n']"
542344,"Gostaria de extrair hora,minuto e segundo do Timestamp [Pyspark]","
Para extrair data e hora no pyspark, estou utilizando essa função, pois, já me traz no UTC correto.
from pyspark.sql import functions as F
df.withColumn('teste',F.current_timestamp()).show()

Mas ela me traz data e hora, e gostaria somente da hora, será que tem como manipular, ou existe alguma outra função que me traga somente a Hora,minuto e segundo?
","
Você pode utilizar uma coluna com valores timestamp e utilizar as funções de hora, minuto e segundo:
from pyspark.sql import functions as F

(df
   .withColumn('hora', F.hour('timestamp'))
   .withColumn('minutos', F.minute('timestamp'))
   .withColumn('segundos', F.second('timestamp')))

Exemplo de saída:




timestamp
hora
minutos
segundos




2022-02-08T21:27:41.722+0000
21
27
41


2022-02-08T21:27:41.722+0000
21
27
41


2022-02-08T21:27:41.722+0000
21
27
41


2022-02-08T21:27:41.722+0000
21
27
41



 ","
            0
        ",,,"['\npython', 'csv', 'dataframe', 'ipython-notebook', 'spark\n']"
542280,Modificar serializer no django rest framework com to_representation,"
Estou desenvolvendo uma API com django rest framework, nela tenho um models onde cadastro contatos, o campo ""contato2"" é opcional, aqui o meu models:
class Contato(models.Model):
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    contato1 = models.CharField(max_length=15)
    contato2 = models.CharField(max_length=15, null=True, blank=True)

Estou tentando alterar a visualização do meu JSON, caso o campo ""contato2"" estiver vazio, eu gostaria que não mostrasse {""contato2"" : null }  na saida do meu json
a minha saída esta assim:
{
    ""cliente"": ""Robson"",
    ""contato1"": ""(11) 98000-0000"",
    ""contato2"": ""(11) 98111-1111""
},
{
    ""cliente"": ""Maria"",
    ""contato1"": ""(11) 92222-2222"",
    ""contato2"": null
},

e assim é como eu gostaria que ficasse:
{
    ""cliente"": ""Robson"",
    ""contato1"": ""(11) 98000-0000"",
    ""contato2"": ""(11) 98111-1111""
},
{
    ""cliente"": ""Maria"",
    ""contato1"": ""(11) 92222-2222"",
},

Na minha class serializer tentei usar o to_representation porem não tive sucesso e a documentação sobre o uso to_representation é bem curta. Esse método é usado para alterar a representação dos dados no json.
Segue o link da documentação:
https://www.django-rest-framework.org/api-guide/relations/
Aqui está meu código atual na class Serializer:
class ContatoSerializer(ModelSerializer):

    class Meta: 
        model = Contato
        fields = ('cliente', 'contato1')

        def to_representation(self, instance):
            representation = super().to_representation(instance)
            if instance.contato2:
                representation['contato2'] = instance.contato2
            return representation

","
Uma maneira de resolver o problema é fazendo uma verificação se o atributo é nulo durante o momento da renderização da lista. E caso o valor do atributo contato2 ser nulo, então removemos este atributo da listagem.
Talvez um dos motivos de não ter conseguido é que a indentação do método to_representation deve estar fora do escopo do class Meta.
Deve estar portanto, no escopo da classe.
Segue um exemplo de implementação:
class ContatoSerializer(serializers.ModelSerializer):
    class Meta:
        model = Contato
        fields = ('cliente','contato1', 'contato2')
    
    def to_representation(self, instance):
        representation = super().to_representation(instance)
        if representation.get('contato2') is None:
            representation.pop('contato2')
    
        return representation

Para fazer esta operação utilizamos o método pop. Se verificar a documentação verá que este método possui um parâmetro obrigatório chamado key.

Se key está no dicionário, remove a mesma e retorna o seu valor, caso
contrário retorna default. Se default não foi fornecido e key não está
no dicionário, um KeyError é lançado.

Isso vai remover o atributo passado como parâmetro do dicionário. Neste caso será o atributo contato2.
Repare que ele exibirá sem o atributo contato2 apenas no caso em que o valor daquela coluna é nulo (null, que em Python seria None), se é a string vazia ('') ele irá exibir, neste caso é só adaptar a solução para o seu caso de uso.
","
            2
        ",,,"['\npython', 'json', 'api', 'django', 'django-rest-framework\n']"
542266,Qual a diferença entre o pyautogui.click() para o click do mouse? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou fazendo um jogo com PyAutoGUI, no qual  só preciso ficar clicando nas coisas para algo acontecer.
Cada clique conta como 1 de dano em um monstro e eu posso automatizar esses processos matando mais monstros e ganhando dinheiro.
A questão é que esse jogo não me permite usar o pyautogui.click. Já tentei fazê-lo clicar só uma vez, tentei randomizar a posição dos cliques, tentei clicar em outros lugares e até mesmo rodei esse jogo no navegador pra ver se era diferente e não, em todos os outros jogos funcionava menos neste.
Segue o código:
from pyautogui import *
import random

keyDown('alt')
press('tab')
keyUp('alt')

PAUSE = 0.3

num = 0

while(True):

click(random.randint(1024,1080), random.randint(500,550),clicks = 1, interval = 0.1)    
num += 1
if(num == 10):
    break

","
O click é composto pela ação de apertar e soltar o botão do mouse. Quando feito por uma pessoa, ele pode demorar mais do que quando feito automaticamente pelo PyAutoGUI, o que significa que outros programas podem detectar robôs que clicam automaticamente medindo o tempo entre as ações.
Felizmente, o PyAutoGUI permite também simular as ações de apertar e soltar o botão separadamente por meio das funções mouseDown e mouseUp (ref). Fiz um teste e bastou colocar uma função seguida da outra para o click funcionar nesse jogo. Adaptando seu código, ficaria assim:
from pyautogui import *
import pyautogui
import random

keyDown('alt')
press('tab')
keyUp('alt')

pyautogui.PAUSE = 0.3

num = 0

while(True):
   mouseDown(x=random.randint(1024,1080), y=random.randint(500,550))
   mouseUp()
   num += 1
    
if(num == 10):
   break

Note que você deve atribuir um valor à variável pyautogui.PAUSE para determinar o intervalo de tempo entre as ações. Atribuir valor a uma variável PAUSE como você fez originalmente simplesmente cria uma nova variável sem nenhuma relação com o módulo.
","
            7
        ",,,"['\npython', 'pyautogui\n']"
542141,TypeError: App.check_stru() missing 1 required positional argument: 'self',"
Olá
Eu estou a tentar criar uma app em python
Este é o codigo
#IMPORTS

import os as os

class App:
    def __init__(self):
        self.config_path = os.path.join(""config"")
        self.account_path = os.path.join(""account"")
        self.desktop_path = os.path.join(""account/desktop"")
        self.book_shelf_path = os.path.join(""account/desktop/books_shelf"")
        self.storage_books = os.path.join(""config/storage"")
    def check_stru(self):
        self.was_created = 0
        self.already_created = 0
        if not os.path.exists(self.config_path):
            os.mkdir(self.config_path)
            print(""1 created"")
            self.was_created += 1
        else:
            self.already_created += 1
        if not os.path.exists(self.account_path):
            os.mkdir(self.account_path)
            print(""2 created"")
            self.was_created += 1
        else:
            self.already_created += 1
        if not os.path.exists(self.desktop_path):
            os.mkdir(self.desktop_path)
            print(""3 created"")
            self.was_created += 1
        else:
            self.already_created += 1
        if not os.path.exists(self.book_shelf_path):
            os.mkdir(self.book_shelf_path)
            print(""4 created"")
            self.was_created += 1
        else:
            self.already_created += 1
        if not os.path.exists(self.storage_books):
            os.mkdir(self.storage_books)
            print(""5 created"")
            self.was_created += 1
        else:
            self.already_created += 1


run = App

run.check_stru()

Mas não sei muito bem mas dá o seguinte erro:
    Traceback (most recent call last):
  File ""none\src\main.py"", line 48, in <module>
    run.check_stru()
TypeError: App.check_stru() missing 1 required positional argument: 'self'

Podem me ajudar? Eu sou um bocado novo na parte do self e nas classes...
Obrigado
","
Olá, Devilas. Tudo bem?
Faltou acrescentar um parênteses nesta linha:
run = App

Ela deveria ficar assim:
run = App()

Por que isso? No primeiro caso, você está dizendo que run é igual a classe App e não a um objeto que é instância da classe App. Já no segundo caso, há o instanciamento. Você deve fazer o instanciamento com parênteses mesmo que a construção da classe não exija argumentos, o que é o caso da classe que você está utilizando.
Testei aqui e obtive isso na saída:
1 created
2 created
3 created
4 created
5 created

","
            0
        ",,,['\npython\n']
542000,Como usar xpath com selenium no python,"
Olá, estou iniciando nesse mundo de automatização com python e de cara já deu tudo errado rsrs.
Vamos lá, meu problema é que estou tentando fazer um clique
em um menu de um site, estou usando o ""find_element(By.XPATH,'xpath')"" para chegar onde quero clicar porem não estou tendo sucesso.
Esse seria o trecho do site de onde estou tentando clicar:
            <div id=""toolBar1Collapse"" class=""nav-collapse collapse"">
<form id=""formMenuSuperior"" name=""formMenuSuperior"" method=""post"" action=""/siconfi/index.jsf"" enctype=""application/x-www-form-urlencoded"">
<input type=""hidden"" name=""formMenuSuperior"" value=""formMenuSuperior"" />

                    <ul id=""menuSuperior"" class=""nav "">
                        <li class=""dropdown"">                           
                            <a id=""drop2"" href=""#"" role=""button"" style=""padding: 5px 7px;"" class=""dropdown-toggle"" data-toggle=""dropdown"" rel=""tooltip-top"" title=""Página de apresentação""> Apresentação <b class=""caret""></b>
                            </a>
    <ul class=""dropdown-menu menu-horizontal-ul"" role=""menu"" aria-labelledby=""drop2"">
            <li><a id=""linkMenu38"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=38"" title=""Link para Histórico"">Histórico</a></li>
            <li><a id=""linkMenu82"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=82"" title=""Link para Glossário"">Glossário</a></li>
            <li><a id=""linkMenu21"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=21"" title=""Link para Apresentação"">Apresentação</a></li>
            <li><a id=""linkMenu23"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=23"" title=""Link para Legislação"">Legislação</a></li>                      
    </ul>
                        </li>

                        <li class=""divider-vertical""></li>

                        <li class=""dropdown"">
                            <a id=""drop3"" href=""#"" role=""button"" class=""dropdown-toggle"" data-toggle=""dropdown"" rel=""tooltip-top"" title=""Publicações importantes ""> 
                                Publicações <b class=""caret""></b>
                            </a>
    <ul class=""dropdown-menu menu-horizontal-ul"" role=""menu"" aria-labelledby=""drop3"">
            <li><a id=""linkMenu30104"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=30104"" title=""Link para Dicas da Jacque"">Dicas da Jacque</a></li>
            <li><a id=""linkMenu21904"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=21904"" title=""Link para Cartilha do Finbra"">Cartilha do Finbra</a></li>
            <li><a id=""linkMenu29"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=29"" title=""Link para Plano de Contas"">Plano de Contas</a></li>
            <li><a id=""linkMenu13703"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=13703"" title=""Link para Manual de Procedimentos"">Manual de Procedimentos</a></li>
            <li><a id=""linkMenu42"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=42"" title=""Link para Instruções e Guias de Preenchimento"">Instruções e Guias de Preenchimento</a></li>
            <li><a id=""linkMenu37"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=37"" title=""Link para Balanço do Setor Público Nacional"">Balanço do Setor Público Nacional</a></li>                        
    </ul>
                        </li>

                        <li class=""divider-vertical""></li>

                        <li class=""dropdown"">
                            <a id=""drop4"" href=""#"" role=""button"" class=""dropdown-toggle"" data-toggle=""dropdown"" rel=""tooltip-top"" title=""Informações sobre a Taxonomia""> Taxonomia <b class=""caret""></b>
                            </a>
    <ul class=""dropdown-menu menu-horizontal-ul"" role=""menu"" aria-labelledby=""drop4"">
            <li><a id=""linkMenu581"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=581"" title=""Link para Documentação"">Documentação</a></li>
            <li><a id=""linkMenu601"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=601"" title=""Link para Fundamentos de XBRL"">Fundamentos de XBRL</a></li>
            <li><a id=""linkMenu584"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=584"" title=""Link para Taxonomia Siconfi"">Taxonomia Siconfi</a></li>                      
    </ul>
                        </li>

                        <li class=""divider-vertical""></li>

                        <li class=""dropdown"">
                            <a id=""drop5"" href=""#"" role=""button"" class=""dropdown-toggle"" data-toggle=""dropdown"" rel=""tooltip-top"" title=""Informações sobre MSC""> Matriz de Saldos Contábeis <b class=""caret""></b>
                            </a>
    <ul class=""dropdown-menu menu-horizontal-ul"" role=""menu"" aria-labelledby=""drop5"">
            <li><a id=""linkMenu12503"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=12503"" title=""Link para Documentação"">Documentação</a></li>
            <li><a id=""linkMenu13503"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=13503"" title=""Link para Dicas rápidas"">Dicas rápidas</a></li>
            <li><a id=""linkMenu12302"" rel=""tooltip"" href=""/siconfi/pages/public/conteudo/conteudo.jsf?id=12302"" title=""Link para Sobre a Matriz de Saldos Contábeis"">Sobre a Matriz de Saldos Contábeis</a></li>                        
    </ul>
                        </li>

                        <li class=""divider-vertical""></li>

                        <li class=""dropdown"">
                            <a id=""drop5"" href=""#"" role=""button"" class=""dropdown-toggle"" data-toggle=""dropdown"" rel=""tooltip-top"" title=""Consultas""> Consultas <b class=""caret""></b>
                            </a>

                            <ul class=""dropdown-menu menu-horizontal-ul"" role=""menu"" aria-labelledby=""drop5"">
                                 <li class=""dropdown-submenu"">
                                  <a href=""#"">Consultar Finbra</a>
                                  <ul class=""dropdown-menu"">
                                   <li><a id=""formMenuSuperior:linkMenuConsultarFINBRA"" href=""#"" class=""ui-commandlink ui-widget has-tooltip"" aria-label=""Contas Anuais"" onclick=""PrimeFaces.addSubmitParam('formMenuSuperior',{'formMenuSuperior:linkMenuConsultarFINBRA':'formMenuSuperior:linkMenuConsultarFINBRA'}).submit('formMenuSuperior');return false;"" title=""Contas Anuais"">Contas Anuais</a>
                                    </li>
                                    <li><a id=""formMenuSuperior:linkMenuConsultarFINBRARGF"" href=""#"" class=""ui-commandlink ui-widget has-tooltip"" aria-label=""RGF"" onclick=""PrimeFaces.addSubmitParam('formMenuSuperior',{'formMenuSuperior:linkMenuConsultarFINBRARGF':'formMenuSuperior:linkMenuConsultarFINBRARGF'}).submit('formMenuSuperior');return false;"" title=""RGF"">RGF</a>
                                    </li>
                                    <li><a id=""formMenuSuperior:linkMenuConsultarFINBRARREO"" href=""#"" class=""ui-commandlink ui-widget has-tooltip"" aria-label=""RREO"" onclick=""PrimeFaces.addSubmitParam('formMenuSuperior',{'formMenuSuperior:linkMenuConsultarFINBRARREO':'formMenuSuperior:linkMenuConsultarFINBRARREO'}).submit('formMenuSuperior');return false;"" title=""RREO"">RREO</a>
                                    </li>                           
                                  </ul>
                                </li>

Já tentei usando este código:
driver.get (url) 
time.sleep (20)
dropdown = driver.find_element(By.XPATH, ""//*/a[@id='drop5' and text()=' Consultas ']"").click()

Obtive esse erro:
Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*/a[@id='drop5' and text()=' Consultas ']""}

e também tentei assim:
driver.get (url) 
wait = WebDriverWait(driver, 10)
dropdown = wait.until(EC.visibility_of_element_located((By.XPATH, ""//a[@id='drop5' and text()=' Consultas ']""))).click().perform()

esse ultimo não aparece mensagem de erro porem ficou vermelho no colab, alguém teria alguma sugestão de onde posso esta errando? qualquer contribuição será bem vinda
",,,,,"['\npython', 'selenium-webdriver', 'dropdown', 'xpath', 'webdriver\n']"
541965,Operações com dataframe,"
A planilha resultados foi gerada da seguinte maneira:
1. Geração dos dados:
import pandas as pd
import numpy as np

np.random.seed(42)
df_mat = pd.DataFrame(np.random.randint(24, size=(100, 1)), columns=['Qt_acertos'])

df_por = pd.DataFrame(np.random.randint(18, size=(100, 1)), columns=['Qt_acertos'])

df_geo = pd.DataFrame(np.random.randint(8, size=(100, 1)), columns=['Qt_acertos'])

df_ing = pd.DataFrame(np.random.randint(8, size=(100, 1)), columns=['Qt_acertos'])

df_his = pd.DataFrame(np.random.randint(8, size=(100, 1)), columns=['Qt_acertos'])

df_fis = pd.DataFrame(np.random.randint(12, size=(100, 1)), columns=['Qt_acertos'])

df_qui = pd.DataFrame(np.random.randint(12, size=(100, 1)), columns=['Qt_acertos'])

2. Concatenei os dados em uma única df:
acerto_materia = [24,18,8,8,8,12,12] #É a quantidade máxima de acertos por matéria.

colunas = ['ac_mat', 'ac_por', 'ac_geo','ac_ing','ac_his','ac_fis','ac_qui']

resultados = pd.concat([df_mat, df_por, df_geo,df_ing,df_his,df_fis,df_qui], axis=1)
resultados.columns = colunas

numero_questoes = pd.DataFrame (np.array(acerto_materia)).T
numero_questoes.columns = colunas
per_acerto_por_aluno = (resultados/numero_questoes.iloc[0])*100


per_acerto_por_aluno


3. Gerei o total de acertos por aluno:
resultados['total_acertos'] = df_mat + df_por + df_geo + df_ing + df_his + df_fis + df_qui
resultados

4. Gerei o percentual total de acertos por aluno:
resultados['per_geral'] = (resultados['total_acertos']/90)*100
resultados

5. df resultados:





ac_mat
ac_por
ac_geo
ac_ing
ac_his
ac_fis
ac_qui
total_acertos
per_geral




0
6
7
7
3
1
8
3
35
38.888889


1
19
10
0
0
0
11
8
48
53.333333


2
14
16
0
5
7
4
4
50
55.555556


3
10
7
3
4
0
0
8
32
35.555556


4
7
2
2
7
0
9
3
30
33.333333


...











99
11
15
0
1
6
7
2
42
46.666667




A partir do df acima, os alunos abaixo foram desqualificados.
    rep_mat = resultados.loc[resultados['ac_mat'] == 0, 'ac_mat']
    rep_fis = resultados.loc[resultados['ac_fis'] == 0, 'ac_fis'] 
    rep_qui = resultados.loc[resultados['ac_qui'] == 0, 'ac_qui'] 
    reprovados = pd.DataFrame(rep_mat + rep_fis + rep_qui)
    reprovados[0] = 'Desqualificados'
    print(reprovados)






0




3
Desqualificados


6
Desqualificados


10
Desqualificados


12
Desqualificados


14
Desqualificados


20
Desqualificados


25
Desqualificados


26
Desqualificados


27
Desqualificados


33
Desqualificados


35
Desqualificados


49
Desqualificados


56
Desqualificados


65
Desqualificados


66
Desqualificados


72
Desqualificados


73
Desqualificados


74
Desqualificados


84
Desqualificados


89
Desqualificados


92
Desqualificados


94
Desqualificados


98
Desqualificados




Minha Dúvida é: Como faço para construir um novo dataframe somente com os alunos desqualificados, porém com todas as colunas do df resultados?Não estou conseguindo acessar a coluna dos alunos.
Esse é resultado que preciso:





ac_mat
ac_por
ac_geo
ac_ing
ac_his
ac_fis
ac_qui
total_acertos
per_geral
Aprovado




3
6
7
7
3
1
8
3
35
38.888889
Desqualificados


6
19
10
0
0
0
11
8
48
53.333333
Desqualidicados


10
14
16
0
5
7
4
4
50
55.555556
Desqualificados


...













 ","
O que eu faria é criar uma nova coluna no dataframe de resultados com a informação de desqualificado ou não e filtraria somente os desqualificados. Seria algo como:
resultados['estado'] = np.where((resultados['ac_mat'] == 0) | (resultados['ac_fis'] == 0) | (resultados['ac_qui'] == 0), 'Desqualificados', '')
reprovados = resultados.loc[resultados['estado'] == 'Desqualificados']

Caso não queira criar uma nova coluna no dataframe de resultados, pode também criar uma cópia dele, com novo_dataframe = resultados.copy().
","
            -1
        ",,,"['\npython', 'pandas', 'dataframe', 'numpy\n']"
541833,Usar o entry do tkinter em um input,"
Usei esse código para dar um UPDATE no Postgres e funcionou.
Porém queria fazer uma janela com tkinter, preciso que o entry do tkinter vá para o input do código:
import psycopg2
from tkinter import *

def querypg():
    query = input(""insira a query: "")
    conn = psycopg2.connect(dbname=""unico"", user=""postgres"", password=""postgres"")
    cur = conn.cursor()
    cur.execute(query)
    conn.commit()

janela = Tk()
janela.title(""query tools"")
texto = Label(janela, text=""insira seu código aqui"")
texto.grid(column=0, row=0)
botao = Button(janela, text=""Rodar código"", command=querypg)
botao.grid(column=0, row=2)
codigo = Entry(janela, width=100)
codigo.grid(column=0, row=1)
janela.mainloop()

","
Você pode usar uma função lambda. Nesse caso, codigo deve ser declarado antes de botao. Reescrevi sua função para exemplificar.
from tkinter import *
    
def querypg(text):
    print(text)
    
janela = Tk()
janela.title(""query tools"")
texto = Label(janela, text=""insira seu código aqui"")
texto.grid(column=0, row=0)
codigo = Entry(janela, width=100)
codigo.grid(column=0, row=1)
botao = Button(janela, text=""Rodar código"", command=lambda: querypg(codigo.get()))
botao.grid(column=0, row=2)
janela.mainloop()

Entrada:

Saída:
foo
","
            0
        ",,,"['\npython', 'tkinter\n']"
541679,Como faço para sempre ir atualizando a planilha em Excel sem substituir os dados anteriores?,"
Eu construí um simples código em Python usando o Pandas (junto com o ExcelWriter), esse foi o código:
df = pd.DataFrame({'Empresa': [client1, client2, client3, client4, client5, client6, client7, client8, client9, client10],
                'Colaborador': [collaborator1, collaborator2, collaborator3, collaborator4, collaborator5, collaborator6, collaborator7, collaborator8, collaborator9, collaborator10],
                'Status': 'Planejado N/ Executado',
                'CCU': [ccu1, ccu2, ccu3, ccu4, ccu5, ccu6, ccu7, ccu8, ccu9, ccu10],
                'Data': [today, today, today, today, today, today, today, today, today, today]})

writer = pd.ExcelWriter('DadosOperacionaisPy.xlsx', engine='xlsxwriter')
        
df.to_excel(writer, sheet_name='Sheet1')
        
writer.save()

O meu problema é que eu gostaria de ""montar um banco de dados"" todas as vezes que eu executasse esse comando novamente, ou seja, sempre pegasse as informações do código e fosse adicionando a planilha sem substituir nenhuma das informações adicionadas anteriormente, mas toda a vez que executo o código ele apaga os dados anteriores e substitui pelos novos dados.

Caso isso seja simples de resolver, desculpe, sou bem iniciante ainda
:)

","
Se as opções que o pessoal comentou não funcionam pra você, talvez um modo um pouco mais rústico possa resolver. Tente isso aqui:
1: usando o seu dataset, temos a saída abaixo:
pd.read_excel('DadosOperacionaisPy.xlsx')


2: criamos a função abaixo, que será invocada cada vez que você quiser adicionar novas linhas, no formato de dataframe, ao arquivo excel já salvo:
def xls_writer(df):
    df_strd = pd.read_excel('DadosOperacionaisPy.xlsx')
    df      = df_strd.append(df)
    writer  = pd.ExcelWriter('DadosOperacionaisPy.xlsx', engine='xlsxwriter')
    df.to_excel(writer, sheet_name='Sheet1', index=False)
    writer.save()

Exemplo:
Criando dataframe de teste:
df_2 = pd.DataFrame({'Empresa': ['client1', 'client2', 'client3', 'client4', 'client5', 'client6', 'client7', 'client8', 'client9', 'client10'],
            'Colaborador': ['collaborator1', 'collaborator2', 'collaborator3', 'collaborator4', 'collaborator5', 'collaborator6', 'collaborator7', 'collaborator8', 'collaborator9', 'collaborator10'],
            'Status': 'Planejado N/ Executado',''
            'CCU': ['ccu1', 'ccu2', 'ccu3', 'ccu4', 'ccu5', 'ccu6', 'ccu7', 'ccu8', 'ccu9', 'ccu10'],
            'Data': 'tomorrow'})

Usando a função xls_writer, que irá ler o arquivo excel local e adicionar o dataframe novo como novas linhas abaixo daquelas já existentes, usando o método append, do Pandas.
xls_writer(df_2)

Lendo o arquivo excel para confirmar a operação:
pd.read_excel('DadosOperacionaisPy.xlsx')


","
            -1
        ",,,"['\npython', 'excel', 'pandas\n']"
541662,"Como desinstalar ""todos"" os pacotes baixados com pip?","
Bom, meu Pycharm passa muito tempo ""Indexando arquivos"", queria saber uma maneira de fazer ele encurtar ou parar com isso. Uso windows
Vi que ele passa a maior parte do tempo na pasta: ""/Lib"" do python (onde fica os meus pacotes baixados).
Queria desinstalar todos os meus pacotes baixados, e deixar apenas os que realmente uso, pois pela quantidade de tempo que o pycharm demora para ""indexar"" vem deles.
Já tentei desinstalar o python e instalar novamente, mas os pacotes que baixei continuam lá, como posso desinstalar todos os pacotes baixados com o pip de maneira mais rápida sem ser um por um? e deixando apenas os necessários para o pip funcionar?
","
Consigo ver duas forma de conseguir o resultado desejado.

Gerar um requirements.txt temporário, apenas para fazer a desinstalação dos pacotes
Excluir a pasta onde ficam os pacotes baixados e gerar ela novamente

Para resolver da maneira descrita em 1 vamos utilizar o comando pip freeze, ele vai gerar a lista de pacotes instalados. Que ficam organizados em ordem alfabética (tudo em minúsculos, [case-insensitive]) e a partir dessa lista fazer a desinstalação de tudo que está instalado em seu ambiente virtual. Para executar este comando estou supondo que está na pasta raiz do seu repositório e que o ambiente virtual está ativo (ter executado o comando activate ou Scripts\activate.bat (se for Windows).
pip freeze > requirementstmp.txt

Isso vai gerar um arquivo requirementstmp.txt.
Com este arquivo basta desinstalar todos os pacotes:
pip uninstall -r requirementstmp.txt -y

Este comando vai executar a desinstalação dos pacotes. Caso execute sem o parâmetro -y vai ter que confirmar a desinstalação 1 por 1. Veja mais opções na documentação.
Após ter desinstalado todos os pacotes com sucesso, pode remover o arquivo requirementstmp.txt pois ele não será mais necessário.

Para resolver da maneira descrita em 2, basta fazer a remoção do ambiente virtual e criar ele novamente. Para executar estes passos estou supondo que está com o ambiente virtual ativo.
deactivate
rm -rf <diretório-do-ambiente-virtual>

E depois criar o ambiente virtual novo
virtualenv venv -p $(which python3)
source venv/bin/activate

O comando virtualenv vai criar um novo ambiente de desenvolvimento baseado em seus executáveis do python3 e ao executar o comando source isso vai carregar o seu ambiente virtual
Em Windows, poderia remover o diretório pela interface gráfica e depois criar o ambiente virtual novamente, o equivalente a criar o ambiente virtual novamente seria:
python -m venv .
Scripts\activate.bat

No Windows executando Scripts\activate.bat vai fazer o seu ambiente virtual ficar no estado ""ativo"".
","
            2
        ",,,"['\npython', 'pip\n']"
541649,como usar variavel dentro dos colchetes de uma string em python,"
preciso atualizar em cada loop de um while o  numero que fica dentro dos colchetes de um link que é uma string ex:
data-table/div[1]/table/tbody/tr[ VARIÁVEL ]/td[1]/div/div[1]/button/span[1]/img"")
desde já agradeço.
","
Abre e fecha as aspas e concatena as partes com o sinal de +
'data-table/div[1]/table/tbody/tr[' + VARIÁVEL + ']/td[1]/div/div[1]/button/span[1]/img'

","
            -3
        ",,,"['\npython', 'string\n']"
541504,Como gerar chave aleatória em Python? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Estou aprendendo a programar com Python e queria saber como posso gerar uma ""chave"" de autenticação com letras e números, por exemplo: A9281BEKS219
","
Uma maneira de fazer o que deseja é utilizando as funções do pacote random, utilizar a função choice.
Dito isto um exemplo de implementação seria:
import random
escolhas_possiveis = 'ABC123'
print(random.choice(escolhas_possiveis))

Se executar este código vai ver que será sorteado letras aleatórias que fazem parte do conjunto 'ABC123', desta forma basta agora saber o tamanho da string e o conjunto de caracteres que faz parte da sequência que deseja sortear. De acordo com a sequência que passou ela possui 13 caracteres. Uma implementação possível seria:
import random
escolhas_possiveis = 'ABC123'
resultado = ''
for i in range(12):
    resultado += random.choice(escolhas_possiveis)
print(resultado)
# 2CA2AB2AA333

O Python possui algumas funções ""helpers"" que facilitam esta tarefa, pode importar os caracteres ASCII utilizando funções da função string da seguinte forma:
import string
import random
escolhas_possiveis = string.ascii_letters + string.digits
# equivalente à: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
resultado = ''
for i in range(12):
    resultado += random.choice(escolhas_possiveis)

print(resultado)
 

Existem também outras possibilidades de funções para tratar Operações comuns com caracteres por ex:

ascii_letters
ascii_lowercase
ascii_uppercase

Você pode utilizar essas funções para compor o seu alfabeto com as escolhas possíveis para poder gerar as chaves aleatórias, por exemplo, se quiser gerar apenas valores aleatórios com valores de minúsculos, deve utilizar a função ascii_lowercase por exemplo.
Consulte a documentação para consultar todas as opções.
Gerando tokens de autenticação seguros (Python 3.6+)
Existe também a possibilidade de utilizar o módulo secrets
para geração de tokens seguros.
O módulo secrets é usado para gerar números aleatórios criptograficamente fortes adequados para gerenciar dados como senhas, autenticação de conta, tokens de segurança.
Ele deve ser usados de preferência ao gerador de números pseudo-aleatórios padrão no módulo random, que é projetado para modelagem e simulação, não para segurança ou criptografia.
Segue um exemplo de utilização do módulo secrets:
import secrets

secrets.token_hex(64)
# '19e07dba673b058f997d580ca4d79a443a484a02a35537de908276c40fd3446b89d701649ab4ddc4e582ba4680966e73445812b6a926036c9f6e22b3d49b8837'

A função token_hex retorna uma string de texto aleatória, em hexadecimal. A string possui nbytes aleatórios, que para este caso é 64, cada byte convertido em dois dígitos hexadecimais. Se nbytes for None ou não fornecido é utilizado um valor padrão razoável.
Sugiro ler a documentação detalhadamente e escolher o método que melhor se encaixa para o seu caso de uso.
","
            5
        ","
Em python existe uma biblioteca que nos permite fazer isso, random.
Para criar esta string aleatória vamos utilizar dois módulos:
string;
random;

import string
import random

def gerar_chave(size=12, chars=string.ascii_letters + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))

print(gerar_chave()) #Uzzre9tOXTZE
print(gerar_chave()) #dmeWLOJ4UqJD
print(gerar_chave()) #q0e0DuJa2WK7 

E por fim temos o método join, que é utilizado para unir a essa string
A última instrução dessa função é retornar o que foi gerado aleatóriamente pelo código de Python
","
            -1
        ","['\npython', 'python-3.x\n']"
541491,Conversão de números binarios em decimal [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    



Há alguma biblioteca no Python que posso utilizar para converter um número binário em decimal?
","
Para fazer isso, poderia utilizar a função int. Segundo a documentação, quando utilizamos a função int ela possui o segundo parâmetro base com o valor default 10. Desta forma se queremos fazer uma conversão de binário para decimal, basta fornecer no primeiro parâmetro a string que representa o valor (em binário) e preencher o segundo parâmetro com o valor correspondente à base do número passado no primeiro parâmetro, para o seu caso será a base 2 (binário).
Segue um exemplo:
a = bin(10)
# '0b1010'
int(a,2)
# 10

Obs.: Para utilizar essa função não é necessário instalar nenhuma dependência externa, elas são funções da linguagem de programação Python. Uma lista das funções embutidas pode ser vista aqui.
","
            2
        ",,,"['\npython', 'conversão', 'números-binários\n']"
541484,Verificar se a tarefa não foi executada e realizar - python,"
Estou tentando fazer um sistema que envia mensagens pelo telegram , porém preciso que seja enviada a cada 3 horas então fiz o seguinte código
from time import localtime, strftime

horas = strftime(""%H"", localtime())

# Horários para enviar as mensagens

horario_to_send = '03', '06', '09', '13', '15', '18', '21', '23'

# Verifica se está no horário de mandar a mensagem , 

if horas in horario_to_send:
    #codigo

porém o mesmo está em um laço de repetição infinito , então sempre que ele passa pela condição para verificar a hora ele o executa , mas eu queria que ele executasse apenas uma vez a cada hora , o código fica o dia todo rodando, alguém pode me ajudar ?
","
Consegui galera , não acredito que fui tão leigo , segue a solução.
from time import strftime, time

horas_minutos = strftime(""%H:%M"", localtime())

# Horários para enviar as mensagens

horario_to_send = '03:00', '06:00', '09:00', '13:00', '14:00', '18:00', '21:00', '23:00'

# Verifica se está no horário de mandar a mensagem

if horas_minutos in horario_to_send:
    #code

adicionei os minutos , assim ele só executa em horas certas.
","
            1
        ",,,['\npython\n']
541415,Matriz 4x4 em python,"
Como eu posso fazer a matriz 4x4 conter números de 1 a 8 em duplicidade (isso é um par de 1(1,1), 1 par de 2(2,2)..) e esses números serem distribuídos aleatoriamente.
Pensei em usar choice ou sample do módulo random mas não sei como
Meu código por enquanto está assim
matriz = []
for y in range(4):
    linha = []
    for x in range(4):
        linha.append(0)
        
    matriz.append(linha)

return matriz

Retorno esperado:
[[5, 7, 5, 6], [7, 1, 4, 4], [8, 2, 3, 6], [3, 2, 1, 8]]

","
Você pode começar criando uma lista com os números de 1 a 8:
>>> list(range(1,9))
[1, 2, 3, 4, 5, 6, 7, 8]

A partir então obtenha uma lista com esses elementos duplicados:
>>> list(range(1,9)) * 2
[1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8]

Embaralhe a lista com o método random.sample():
>>> lista = sample((list(range(1,9)) * 2), k=16)   #Cada chamada gera um valor diferente.
[7, 8, 5, 3, 8, 1, 4, 6, 2, 4, 7, 3, 2, 5, 1, 6]

Finalmente obtendo a matriz desejada:
>>> [lista[i:i+4] for i in range(0, len(lista), 4)]
[[7, 8, 5, 3], [8, 1, 4, 6], [2, 4, 7, 3], [2, 5, 1, 6]]

Juntando num exemplo:
from random import sample

lista = sample((list(range(1,9)) * 2), k=16)
matriz = [lista[i:i+4] for i in range(0, len(lista), 4)]
print(matriz)

Teste o código no Repl.it
Ou ainda o mesmo exemplo usando random.shuffle() para embaralhar a lista internamente.
from random import shuffle

lista = list(range(1,9)) * 2
shuffle(lista)
matriz = [lista[i:i+4] for i in range(0, len(lista), 4)]
print(matriz)

Teste o exemplo no Repl.it
","
            2
        ",,,"['\npython', 'python-3.x', 'matriz\n']"
541316,Como fatiar uma string separando conjunto de letras e conjunto de números em python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no mês passado.




                        Melhore esta pergunta
                    




Tenho a string ""A32B32C50A1V14G1B1"" e gostaria de separá-la em listas diferentes, mas não sei como faço uma solução funcional, pois não há parâmetro para a quantidade de casas dos números e, ao verificá-los um por um, o armazenamento do número na lista fica fragmentado.
Portanto não consigo atribuir o número 32 a letra A, pois a letra A está na posição 0 da lista de letras e na posição 0 da lista de números está somente o 3. A resolução do problema é multiplicar cada letra pelo número de vezes do número que aparece após ela.
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAVVVVVVVVVVVVVVGB

","
Não precisa criar outras listas. Basta fazer um loop pelos caracteres da string e ir analisando um a um:

se for uma letra, guarde-a até que o número posterior seja lido
se for um dígito, continue lendo até não ter mais dígitos, atualizando o valor do número
quando encontrar outra letra, ou a string terminar, retorne a letra repetida várias vezes (a quantidade é o número)

Ficaria assim:
def get_parts(s):
    numero = 0
    for char in s: # para cada caractere da string
        if char.isalpha(): # é uma letra
            if numero > 0: # se acabou o número e começou outra letra
                yield letra * numero # retorna a letra repetida várias vezes
                numero = 0
            letra = char
        elif char.isdigit(): # se é um número
            # atualiza o valor do número atual
            numero = 10 * numero + int(char)
    # retorna também o último
    yield letra * numero

s = 'A32B32C50A1V14G1B1'
print(''.join(get_parts(s)))
# AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAVVVVVVVVVVVVVVGB

Eu uso yield para criar uma função geradora (mais detalhes aqui), que vai percorrendo a string e retornando uma letra repetida várias vezes, conforme vai lendo seus caracteres. Depois uso join para juntar essas partes.
Basicamente, eu leio a letra e depois o número. Como eu leio o número dígito a dígito, vou atualizando o seu valor. Por exemplo, primeiro eu leio o 3, depois quando eu leio o 2, basta multiplicar o 3 por 10 e somar com 2, resultando em 32.
Quando eu terminei de ler o número (seja porque encontrei outra letra, ou porque a string terminou), basta ""multiplicar"" a letra pelo número. Em Python, quando você multiplica uma string por um número, o resultado é a string repetida várias vezes.

Se quiser também pode concatenar diretamente na string final (usando a ideia geral do código acima):
s = 'A32B32C50A1V14G1B1'
numero = 0
result = ''
for char in s: # para cada caractere da string
    if char.isalpha(): # é uma letra
        if numero > 0: # se acabou o número e começou outra letra
            result += letra * numero # adiciona a letra repetida várias vezes
            numero = 0
        letra = char
    elif char.isdigit(): # se é um número
        # atualiza o valor do número atual
        numero = 10 * numero + int(char)
# adiciona também o último
result += letra * numero
print(result)


Outra alternativa é usar regex:
import re

resultado = ''.join(match[1] * int(match[2]) for match in re.finditer(r'([A-Z])(\d+)', s))
print(resultado)

[A-Z] pega uma letra de ""A"" a ""Z"", e \d+ pega um ou mais dígitos. Cada uma dessas partes está entre parênteses, o que forma grupos de captura. Assim, eu consigo pegar esses grupos depois: match[1] retorna o primeiro grupo (a letra) e match[2] retorna o segundo grupo (os dígitos). Por fim uso uma generator expression para iterar por todos os resultados de finditer, e uso join para juntar tudo.
Se quiser considerar também letras minúsculas, pode trocar para re.finditer(r'([A-Z])(\d+)', s, re.I) - a flag I torna a regex case insensitive.
","
            1
        ",,,"['\npython', 'string', 'lista', 'split\n']"
541315,Formatando String em Python para ter aparência de endereço MAC,"
Preciso transformar um MAC em string e deixar dois pontos a cada 2 caracteres, seria possível?
import re

mac = ""b5b4-7422-37bc""
novo = re.sub(r""[^a-zA-Z0-9]"","""",mac)

b0be762931b3 #ele retorna esse mac.

Tendo a seguinte string: b0be762931b3
Eu gostaria que ela ficasse assim: b0:be:76:29:31:b3.
","
Se estiver usando Python >= 3.8 pode fazer assim:
mac = ""b5b4-7422-37bc""
print(bytes.fromhex(mac.replace('-', '')).hex(':'))

Afinal, o MAC Address está representado em hexadecimal, portanto bytes.fromhex consegue convertê-lo para bytes sem problemas (depois de remover os hífens, claro).
Em seguida, o ḿetodo hex converte os bytes de volta para hexadecimal, mas usando o : como separador. O detalhe é que o resultado terá letras minúsculas, independente do valor original (ou seja, se a string for 'B5B4-7422-37BC', o resultado ainda será b5:b4:74:22:37:bc.
Mas como já dito, isso só funciona a partir do Python 3.8, pois em versões anteriores o método hex não aceita o separador como parâmetro.

Para versões anteriores ao 3.8 você pode usar as soluções das outras respostas, mas apenas para deixar registrado mais algumas alternativas:
mac = ""b5b4-7422-37bc""
macbytes = bytes.fromhex(mac.replace('-', ''))
formatado = ':'.join(f'{b:02x}' for b in macbytes)
print(formatado)

Esta solução também cria um objeto bytes, mas formata cada byte para hexadecimal antes de passar para join. Para tal, é usado uma f-string, que está disponível a partir do Python 3.6 - em versões anteriores pode trocar para format:
formatado = ':'.join('{:02x}'.format(b) for b in macbytes)

Lembrando ainda que esta opção resulta em letras minúsculas. Para letras maiúsculas, troque o formato para 02X.

Outro jeito:
mac = ""b5b4-7422-37bc""

mac = mac.replace('-', '')
formatado = ':'.join(mac[i:i + 2] for i in range(0, len(mac), 2))
print(formatado)

É similar a uma das respostas, mas usando slices para pegar pedaços da string (sempre de 2 em 2 caracteres), e no final juntando tudo com join, usando o : como separador. Mas ao contrário do que foi feito lá, eu não usei os colchetes em volta da expressão, pois isso cria uma lista desnecessariamente (claro que para uma string pequena como essa é um overhead imperceptível, mas enfim).

E já que você usou regex, também daria para ser assim:
import re
mac = ""b5b4-7422-37bc""

formatado = ':'.join(m[0] for m in re.finditer('[a-f0-9]{2}', mac, re.I))
print(formatado)

Como o MAC Address está representado em hexadecimal, só vai ter letras de ""a"" até ""f"", então não preciso colocar até o ""z"" na regex. Também usei a opção re.I para que ela seja case insensitive (pegue tanto maiúsculas quanto minúsculas).
E usei o quantificador {2} para pegar exatamente dois caracteres. Ou seja, finditer retornará as letras e números, agrupados de 2 em 2 (e repare que nem precisa de replace ou sub para remover os hífens, pois estes serão ignorados pela regex - ou seja, em vez de usar a regex para remover os hífens, eu uso para capturar os caracteres que preciso).
No join eu pego o grupo zero de cada match, que contém os caracteres que foram capturados.
Outra alternativa com regex é:
import re
mac = ""b5b4-7422-37bc""

formatado = ':'.join(re.findall('[a-f0-9]{2}', mac, re.I))
print(formatado)

A diferença é que findall retorna uma lista (ou seja, primeiro ela constrói uma lista com todos os trechos que deram match, e depois passa-a para join), enquanto finditer retorna um iterator (ou seja, ele não constrói uma lista, e em vez disso ele vai obtendo cada match de uma vez, passando-os para join à medida em que são encontrados).
","
            9
        ","
Tirando proveito do tamanho conhecido:
str = ""abcd456f89d1""
novo = str[0:2] + "":"" + str[2:4] + "":"" + str[4:6] + "":"" + str[6:8] + "":"" + str[8:10] + "":"" + str[10:12]
print(novo)

Saída:
ab:cd:45:6f:89:d1


E esta segunda maneira é bem explícita em refletir a intenção do programador (quebrar a string em pares de caracteres e concatená-los intercalando com :), desde que seja uma string sem formatação prévia, composta inteiramente por dígitos hexadecimais.
Também acho limpo que a solução se baseie somente em manipular substrings da string inicial, sem conversão de tipo:
import functools
str = ""abcd456f89d1""
pares = [str[i:i+2] for i in range(0, len(str), 2)]
novo = functools.reduce(lambda a, b: a + "":"" + b, pares)
print(novo)

Saída:
ab:cd:45:6f:89:d1

","
            5
        ","['\npython', 'string', 'formatação\n']"
541260,Numerador de documentos por ano com Django,"
Tenho que gerar um numerador para cada documento criado, caso vire o ano o numerador zera e começa contar novamente
def gerar_numerador(self, memoDepart1):
  
      try:
        ultimo_numerador_memoDepart1 = MemoDepart1.objects.filter(
            ~Q(numerador=None),
            prefixo__organizacao=memoDepart1.prefixo.organizacao,
            data_criacao__year=memoDepart1.data_instauracao.year).latest(
            'numerador').numerador
      except MemoDepart1.DoesNotExist:
        numerador_memoDepart1 = None
      else:
        numerador_memoDepart1 = ultimo_numerador_memoDepart1

      try:
        ultimo_numerador_memoDepart2 = MemoDepart2.objects.filter(
            ~Q(numerador=None), data_criacao__year=memoDepart1.data_instauracao.year).latest(
            'numerador').numerador
      except MemoDepart2.DoesNotExist:
        numerador_memoDepart2 = None
      else:
        numerador_memoDepart2 = ultimo_numerador_memoDepart2

      try:
        ultimo_numerador_memoDepart3 = MemoDepart3.objects.filter(
            ~Q(numerador=None), data_criacao__year=memoDepart1.data_instauracao.year).latest(
            'numerador').numerador
      except MemoDepart3.DoesNotExist:
        numerador_memoDepart3 = None
      else:
        numerador_memoDepart3 = ultimo_numerador_memoDepart3

      if numerador_memoDepart2 is not None and numerador_memoDepart1 is None and numerador_memoDepart3 is None:
        numerador = numerador_memoDepart2 + 1
      elif numerador_memoDepart2 is not None and numerador_memoDepart1 is not None and numerador_memoDepart3 is None:
        numerador = max(numerador_memoDepart2, numerador_memoDepart1) + 1
      elif numerador_memoDepart2 is not None and numerador_memoDepart1 is not None and numerador_memoDepart3 is not None:
        numerador = max(numerador_memoDepart2, numerador_memoDepart1, numerador_memoDepart3) + 1
      elif numerador_memoDepart1 is not None and numerador_memoDepart2 is None and numerador_memoDepart3 is None:
        numerador = numerador_memoDepart1 + 1
      elif numerador_memoDepart1 is not None and numerador_memoDepart2 is None and numerador_memoDepart3 is not None:
        numerador = max(numerador_memoDepart1, numerador_memoDepart3) + 1
      elif numerador_memoDepart3 is not None and numerador_memoDepart2 is None and numerador_memoDepart1 is None:
        numerador = numerador_memoDepart3 + 1
      elif numerador_memoDepart3 is not None and numerador_memoDepart2 is not None and numerador_memoDepart1 is None:
        numerador = max(numerador_memoDepart3, numerador_memoDepart2) + 1
      else:
        numerador = 1

      memoDepart1.numerador = numerador
      memoDepart1.save()

O código acima é para apenas um departamento, porém ele téra que ser compartilhado por outros 2 models, independente o documento criado em alguns desses 3 models, MemoDepart1, MemoDepart2, MemoDepart3, o numerador será sequencial e usará o próximo disponível dentre eles.
Não estou conseguindo criar essa consulta no banco e fazendo testes nesse código acima percebi que está com erro e não fazendo a comparação desejada.
","
Sem informações mais detalhadas é difícil tentar resolver seu problema. Você está focado no código, mas parece ser um problema de modelagem. Quantos documentos são gerados por ano?
Para resolver seu problema eu usaria a seguinte abordagem:
Criar model para o seu numerador (que será compartilhado) e gerar previamente esta sequência (ligada ao ano), uma quantidade suficiente de números para trabalhar durante o ano e/ou ter uma rotina que gera mais números mesmo que não tenha sido utilizados. Ao utilizar determinado número marcá-lo como usado (True) e relacionar ao departamento que utilizou. Quando virar o ano pode-se descartar os números não utilizados (excluir ou marcar como NULL), o próprio filtro pelo ano (novo ano) já ""descarta"" os números gerados anteriormente e não utilizados.
Esta seria a minha solução. Lembre-se que sistemas em geral não precisam ser complexos,e no final apenas ""replicam a realidade"" analógica para o mundo digital. Por exemplo, neste seu problema antigamente sem sistema o departamento teria uma folha com diversos números e a medida que fossem emitidos os documentos os números utilizados seriam riscados do papel, e é basicamente assim que o processo funciona.
","
            0
        ",,,"['\npython', 'django', 'django-rest-framework', 'django-queryset\n']"
541245,Flake8 destaca tudo como erro,"
Alguém sabe se tem como alterar as cores de destaque de warning do flake8 linting no VSCode?
Pq ele destaca tudo em vermelho como se fosse erro, e isso atrapalha, gostaria de alterar os warnings p/ outra cor, assim ficaria mais fácil saber qd é um erro de verdade, ou só algo que esqueci de fazer, como pular 2 linhas por exemplo...
OBS: Sei q dá pra desativar algumas regras passando uns args para o flake8 nas configurações, mas NÃO quero desabilitar nada, pois acho importante pra quem tá aprendendo como eu já aprender as melhores praticas, só quero diferenciar warnings de erros... pq isso atrapalha e confunde mais ainda...
Obrigada
",,,,,"['\npython', 'python-3.x', 'visual-studio-code', 'configuração\n']"
541233,Envio de Sticker no Telegram via Python,"
Estou tentando enviar sticker no formato .webp para um canal do Telegram, mas não estou conseguindo
def send_msg_BOMDIA(sticker):
   token = tokenid
   chat_id = chat_id1
   url_req = ""https://api.telegram.org/bot"" + token + ""/sendMessage"" + ""?chat_id="" + chat_id + ""&sticker="" + text ;
   results1 = requests.get(url_req); 

send_msg_BOMDIA(r""Redes Sociais\\BOMDIA.webp"")

","
O motivo de dar errado é que não está utilizando o endpoint correto.
Consultando a documentação da apirest de bots do Telegram, podemos verificar que existe uma chamada específica para o envio de stickers.
Desta forma, você deve ajustar o URL para corresponder ao envio do sticker.
Segue um exemplo:
url_req = ""https://api.telegram.org/bot"" + token + ""/sendSticker""

Além dessa mudança no URL será necessário fazer mais um ajuste. Pois para o envio de mensagem é necessário utilizar o método http post, então aqueles query parameters que vemos em seu código, na verdade deveriam estar dentro do corpo da requisição.
Então uma versão válida deste código, (para fazer o envio com sucesso), deveria ser:
def send_msg_BOMDIA(sticker):
    body = {
        ""chat_id"": chat_id1,
        ""sticker"": sticker
    }
    url_req = ""https://api.telegram.org/bot"" + token + ""/sendSticker""
    results1 = requests.post(url_req, data=body)
    if results1.status_code >= 400:
        print('Houve um erro ao enviar sticker. Detalhe: {}'.format(results1.text))
    else:
        print('Mensagem enviada com sucesso')

Ao chamar este método, se ver a mensagem sucesso, será possível ver a mensagem no grupo do Telegram.
Existe ainda outra correção a fazer, pois está tentando fazer o envio de um sticker através do sistema de arquivo (o sticker está no disco da máquina que faz o envio da mensagem, então será necessário fazer um passo a mais.
Pois será necessário fazer o upload do sticker (no primeiro envio) e depois que fizer o primeiro envio, pode referenciar aquele sticker via o id (nos envios posteriores).
Desta forma para fazer o envio do sticker via file system, faça o seguinte:
import json
def enviar_sticker_via_file_system(file_path):
    body = {
        ""chat_id"": chat_id1,
    }
    files = {
        'sticker': open(file_path, 'rb')
    }
    r = requests.post('https://api.telegram.org/bot{}/sendSticker'.format(token), data=body, files=files)
    if r.status_code >= 400:
        print('Houve um erro ao enviar sticker. Detalhe: {}'.format(r.text))
    else:
        saida = json.loads(r.text)
        print('Mensagem enviada com sucesso. file_id: {}'.format(saida['result']['sticker']['file_id']))

# invocando o método criado anteriormente
enviar_sticker_via_file_system(r'Redes Sociais\BOMDIA.webp')

Após fazer o primeiro envio desta forma, pode-se apenas utilizar o ID do sticker nos envios subsequentes, esta é a maneira recomendada pela documentação do Telegram. Não fazer muitos uploads é importante para manter os limites de upload (em MB) do seu bot baixo. Se não usar esta estratégia é possível que seu bot pare de funcionar (dependendo do volume de mensagens que o bot enviará).
Repare que desta forma estamos fazendo um upload de um multipart/form-data que contém o arquivo. Este upload deve respeitar os limites da api do Telegram que é um arquivo de no máximo 50MB
Usamos a função embutida open com os parâmetros 'rb', isso vai
abrir um arquivo e retornar um objeto arquivo correspondente. Se o arquivo não puder ser aberto, uma exceção do tipo OSError é levantada. O parâmetro que utilizamos foi o modo leitura ('r') e ler os binários do arquivo ('b'). Consulte a documentação para mais exemplos de como usar esta função.
Desta forma pegue o atributo file_id gerado no método enviar_sticker_via_file_system e use como parâmetro do método send_msg_BOMDIA.

Existe ainda alguns problemas neste código, como por exemplo o tratamento de exceções, que não é feito em nenhum momento e que ficam como um exercício para o autor da pergunta.
","
            0
        ",,,"['\npython', 'telegram\n']"
541228,Distribuir valores de um range para várias threads,"
Estou desenvolvendo um script que gera diversas URLs de um certo fórum mas com o parâmetro ""id"" dentro de um grande loop. Depois ele salva essas URLs e então envia um request para cada uma.
Mas eu gostaria de agilizar o processo usando as threads. O meu código está assim:
#importa os modulos necessarios
import requests 
from bs4 import BeautifulSoup as bf
import threading
import random

paginas = {}
def task():
    #função que procura paginas, pega todas elas e coloca no dicionário     
    for x in random.randrange(99999):
        pagina = f'https://forumexemplo.com/index.php?id={x}'
        conteudo_pagina = s.get(pagina)
        soup = bf(conteudo_pagina.content, 'html.parser')
        
        #verifica se a pagina a ser analisada é de fato um tópico ou é apenas um redirecionamento.
        if 'quote' and 'link' in soup: 
            print(""página com o id:{x} é uma conversa!\r\n"")
            paginas[pagina] = soup
        else:
            print(f""id: {x}"")


s = requests.Session()



#lista de threads
threads = []

#loop de criação de thread
for n in range(1,11):
    t = threading.Thread(target=task)
    threads.append(t)
    t.start()


#loop pelas threads esperando elas terminarem
for t in threads:
    t.join()




Porém estou tendo problemas em relação ao loop. As threads estão trabalhando em um único id de cada vez, portanto eu tenho um resultado parecido com:
id: 1
id: 1
id: 1
id: 1
id: 1
id: 1
id: 2
id: 1
id: 1
id: 2
id: 1
id: 2

Tenho várias threads trabalhando em um só id e gostaria de randomizar os IDs para que fique mais dinâmico. Porém, quando eu troco o for x in range(99999) para for x in random.randrange(1,99999), eu recebo o erro:
for x in random.randrange(1,99999):
TypeError: 'int' object is not iterable 

Alguém poderia me ajudar a entender o que está acontecendo?
","
Veja na documentação que randrange retorna um único número, e não faz sentido fazer um for em um número. Daí o erro ""'int' object is not iterable"", já que um número - ou seja, um int, que é o que randrange retorna - não é iterável (não pode ser percorrido com um for).
De qualquer forma, para que precisa ser aleatório? Simplesmente distribua os números do range entre as threads.
O problema é que na função task você está fazendo um loop, ou seja, todas as threads percorrem todos os valores do range. Mas se cada thread vai fazer uma única requisição, então na verdade a função deveria receber o id como parâmetro. Algo assim:
def task(page_id):
    pagina = f'https://forumexemplo.com/index.php?id={page_id}'
    conteudo_pagina = s.get(pagina)
    soup = BeautifulSoup(conteudo_pagina.content, 'html.parser')
    # etc...

E aí você chamaria as threads, cada uma recebendo um id diferente para ser passado como argumento para a função task:
threads = []
for i in range(99999):
    # passa o número como argumento para a função task
    t = threading.Thread(target=task, args=(i,))
    threads.append(t)
    t.start()

for t in threads:
    t.join()

Assim, a primeira thread vai chamar task(0), a segunda chama task(1), etc.

O problema é que isso vai gerar 99999 threads. Mas pelo que entendi você quer limitar a quantidade de threads, então uma alternativa é usar um ThreadPool:
import requests 
from bs4 import BeautifulSoup

s = requests.Session()

def task(page_id):
    pagina = f'https://forumexemplo.com/index.php?id={page_id}'
    conteudo_pagina = s.get(pagina)
    # retorna o id, a página e o soup
    return page_id, pagina, BeautifulSoup(conteudo_pagina.content, 'html.parser')

from multiprocessing.pool import ThreadPool
import re

quote = re.compile(r'\bquote\b')
link = re.compile(r'\blink\b')
paginas = {}

# cria um pool com 10 threads
with ThreadPool(10) as pool:
    # task é chamada para todos os valores do range(99999)
    for page_id, pagina, soup in pool.imap_unordered(task, range(99999)):
        if soup.find(string=quote) and soup.find(string=link):
            print(f""página com o id:{page_id} é uma conversa"")
            paginas[pagina] = soup
        else:
            print(f""id: {page_id}"")

Ao percorrer os resultados (que são retornados por imap_unordered), a cada iteração os valores de page_id, pagina e soup são aqueles retornados por uma das chamadas de task.
Assim, você separa as responsabilidades e deixa o código mais organizado: na função task você só processa uma única URL (um único id, no caso). O ThreadPool se encarrega de distribuir os ids entre as threads. Depois, no for, você pega os resultados de cada thread e analisa o que fazer com cada um (quando adicionar o soup em paginas, etc).
Repare também que a condição do if mudou. Da forma que você fez antes ele não verifica se quote e link pertencem ao soup. Como essas não são tags, entendo que sejam textos que estejam no meio das páginas. Sendo assim, a busca deve ser feita com find, usando o argumento string e uma regex (assim ele busca trechos que contenham essas palavras - sem regex, vc teria que passar uma string que corresponde a todo o conteúdo do elemento).
Caso não seja esta a busca que você quer fazer, sugiro que veja na documentação todas as formas de se fazer buscas no documento.

Outra alternativa é usar um ThreadPoolExecutor:
from concurrent.futures import ThreadPoolExecutor, as_completed
import re

quote = re.compile(r'\bquote\b')
link = re.compile(r'\blink\b')
paginas = {}

# cria um pool que terá no máximo 10 threads
with ThreadPoolExecutor(max_workers=10) as executor:
    results = []
    for id in range(99999):
        results.append(executor.submit(task, page_id=id))
    for result in as_completed(results):
        page_id, pagina, soup = result.result()
        if soup.find(string=quote) and soup.find(string=link):
            print(f""página com o id:{page_id} é uma conversa"")
            paginas[pagina] = soup
        else:
            print(f""id: {page_id}"")

","
            3
        ",,,"['\npython', 'python-3.x', 'thread\n']"
541211,GUI do Tkinter trava quando executo o código,"
Sou novato em programação e estou fazendo um macro para realizar algumas ações. Esse macro fica em loop:
    while True:
    window = win32gui.GetWindowText(win32gui.GetForegroundWindow())
    #print(window)
    now = time.time()
    if ""Tibia"" in window:
        #Procura IMG
        localAnel = pyautogui.locateCenterOnScreen(anel, grayscale=True, confidence=0.9)
        localColar = pyautogui.locateCenterOnScreen(colar, grayscale=True, confidence=0.9)

        #Se localizar a img do Anel
        if localAnel is not None:
            pyautogui.press(""NUM1"")
            #print(""Anel"")

        #Se localizar a img do Colar
        if localColar is not None:
            pyautogui.press(""NUM3"")
            #print(""Colar"")

        #Usar berserk potion
        if now - last_berserk_potions > usar_berserk_potions * 60:
            last_berserk_potions = now
            pyautogui.press(""NUM2"")
            #print(""Berserk"")

Preciso criar um botão onde ao clicar ele roda esse código que fica em looping infinito e ao clicar nesse botão novamente ele pare a execução do código.
Estou fazendo a chamada da seguinte maneira:
botao = Button(janela, text=""Gerar"", command=loop, bg=""CYAN"", fg = ""BLACK"", font=padrao)

Quando clico no botão ele até executa o looping porém a GUI trava.
","
Tens que definir uma condição no while para terminar o loop.
while quit == False:
    ...

","
            0
        ",,,"['\npython', 'tkinter\n']"
541161,Sistema de Login em Python,"
Quando errar o valor de uma váriavel, como faço para ele retornar ja que no caso o valor foi digitado errado!
usuario     =   str(input('Qual seu usuário de Login? :'))
if  usuario ==  'walter':
    print('Usuário correto!')
    print(' ')
else:
    print('Usuário Incorreto!')
    print(' ')
senha   = str(input('Qual e sua senha de Login? :'))
if  senha   ==  'walter':
    print('Senha correta!')
    print(' ')
else:
    print('Senha Incorreta!')
    print(' ')

","
Você pode utilizar um while para fazer isso, para não te dar a resposta inteira vou criar um exemplo em que você queira comparar duas variáveis e quer que o programa fique rodando enquanto elas não sejam iguais.
Irei criar uma função auxiliar para verificar as variáveis:
def compara_variaveis(variavel_um, variavel_dois):
    return variavel_um == variavel_dois

Após isso irei fazer um loop que pergunte uma palavra para o usuário e enquanto a comparação for falsa ele não deva parar de perguntar:
palavra_correta = 'batata'
palavra_usuario = input('Digite a sua palavra: ')

while compara_variaveis(palavra_correta, palavra_usuario) is False:
    palavra_usuario = input('Ops... Palavra errada, digite novamente a sua palavra: ')

print('Você acertou!')

Note que a impressão de tela dizendo que acertou só acontece após a verificação ser verdadeira.
Agora basta pensar um pouquinho em como você pode aplicar isso no seu problema!
","
            1
        ",,,['\npython\n']
541160,python Selenium filter images creative commons,"
Português:
Como faço um filtro para download de imagens no google imagens, creative commons?
Já busquei a documentação em https://chromedevtools.github.io/devtools-protocol e não encontrei nada.
English:
How do I make a filter for downloading images on google images, creative commons?
I've already looked for the documentation at https://chromedevtools.github.io/devtools-protocol and haven't found anything.
código / code: font:https://github.com/YoongiKim/AutoCrawler/blob/master/main.py
#! python3

# Google Images Downloader.py - search and download Images from google.com
# this script will open the web browser using selenium and search for Images(1920x1080 minimum/FULL HD), get their links, and download them.
# I Mainly use this script to automatically download desktop wallpapers.
# run this code in CLI using >>> py Google\ Images\ Downloader.py

# NOTE: Images found using this script is NOT a duplicate-FREE, duplicate images maybe be downloaded again and get new random name
# if you search with the same term again were a new folder won't be created since it already exist and images found will be saved to that folder.

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import requests, os, time
from uuid import uuid4
from plyer import notification
from colorama.ansi import Fore as CLI_TextColor

# XPATH location of the image resolution.
Image_Resolution_XPath = '//*[@id=""Sva75c""]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[1]/div[2]/div/a/span' 
# XPATH location of the image URL with checkers that starts with ""https"" and ends with an image file extention (.jpg or .jpeg or .png)
ImageXPath_with_checkers = '//*[@id=""Sva75c""]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[1]/div[2]/div/a/img\
    [@src[starts-with(., ""https"") and substring(., (string-length(.) - string-length("".jpg"") + 1)) = "".jpg""\
              or substring(., string-length(.) - string-length("".jpeg"") + 1) = "".jpeg""\
                   or substring(., string-length(.) - string-length("".png"") + 1) = "".png""]]'

# Footer location in ViewPort, The program will end when the footer is visible in ViewPort(on screen)
FooterCurrentViewPort = """"""
footer_currentVP = document.querySelector('#ZCHFDb').getBoundingClientRect();
if (footer_currentVP.top != 0 && footer_currentVP.bottom != 0 && footer_currentVP.right != 0) { 
    return (
        footer_currentVP.top >= 0 &&
        footer_currentVP.left >= 0 &&
        footer_currentVP.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        footer_currentVP.right <= (window.innerWidth || document.documentElement.clientWidth)
    );} else {return (false) }
""""""

ChromiumBrave = Options()
ChromiumBrave.binary_location = r""C:\Program Files\BraveSoftware\Brave-Browser\Application\brave.exe""
ChromeDriverPATH = Service(""C:\Program Files (x86)\chromedriver.exe"")
Search_URL = ""http://www.google.com/search?q={q}&tbm=isch""

Success_downloads = 0
Failure_downloads = 0
FailedToSaveImage = 0

def fetch_image_URLs(search_query: str, MAX_number_of_images: int, wd: webdriver):
    """"""Locate and fetch image URLs from google.com/imghp""""""
    def scroll_page(wd: webdriver):
        """"""Scroll the page down from it's current position + length of window ViewPort""""""
        wd.execute_script(""window.scrollTo(0, window.pageYOffset + window.innerHeight);"")
        time.sleep(3.5)

    wd.get(Search_URL.format(q=search_query))
    print(""Looking for images, Please wait..."", flush=True)

    image_links = set()
    image_count = 0
    starting_position = 0

    while image_count < MAX_number_of_images:
        scroll_page(wd)
        FooterVisibilityInViewPort = wd.execute_script(FooterCurrentViewPort)
        if not FooterVisibilityInViewPort: # keep looking for images when the Footer is not visible in ViewPort.

            # find all image thumbnails in the page
            try:
                ImageThumbnails = WebDriverWait(wd, 10).until(lambda x: x.find_elements(By.CLASS_NAME, 'Q4LuWd'))
            except Exception:
                continue

            for image in ImageThumbnails[starting_position:len(ImageThumbnails)]:
                try: # click to open each image to find the real image url.
                    image.click()
                    time.sleep(0.5)
                except Exception:
                    continue # try the next image!
                
                # check the image resolution!
                if check_image_resolution(wd):
                    try:
                        # wait for a correct image url to be found using XPATH expression, this works well with WebDriverWait.
                        # using XPATH expression saves a lot of time from writing unwanted regex code, XPATH is like regex but for web pages, it uses XML path expression within the HTML DOM structure.
                        image_URL = WebDriverWait(wd, 15).until(EC.presence_of_element_located((By.XPATH, ImageXPath_with_checkers))).get_attribute('src')
                    except Exception:
                        continue # try the next image!

                    image_links.add(image_URL)

                    if len(image_links) >= MAX_number_of_images:
                        print(f""\n{CLI_TextColor.GREEN}Done, Found {len(image_links)} images{CLI_TextColor.RESET}\n"", flush=True)
                        return image_links # Done!
                else:
                    continue # check the next image for a better resolution

            image_count = len(image_links)
            starting_position = len(ImageThumbnails)

        else: # Footer is visible in ViewPort!
            print(""Looks like you've reached the end!"".center(30, '-'), flush=True)
            if len(image_links) >= 1:
                print(f""{CLI_TextColor.BLUE}Got {len(image_links)} out of {MAX_number_of_images} images!{CLI_TextColor.RESET}"", flush=True)
                return image_links

            else: # this happens when no images have been found!
                print(f""{CLI_TextColor.RED}Sorry, Couldn't find any images!"")
                wd.quit() # close the web browser window
                notification.notify(""Failed to find images!"", f""Sorry, Couldn't find any images"", app_icon=r"".\\Notification Icons\vcsconflicting.ico"")
                raise SystemExit # exit/end the program

def check_image_resolution(wd: webdriver):
    """"""Check an image resolution, minimum image resolution should be Full HD(1920 x 1080)""""""
    Minimum_Width, Minimum_Hight = 1920, 1080
    try:
        # Find the image resolution, the resolution is based of what google is displaying when you hover over the image.
        # Checking the image resolution without downloading the image itself to save data (this is not a perfect way of getting an image resolution!).
        ImageWidth, unknownCharacter, ImageHight = WebDriverWait(wd, 5).until(
            EC.presence_of_element_located((By.XPATH, Image_Resolution_XPath))).get_attribute(""textContent"").split(' ')
    except Exception:
        return False
    ImageWidth, ImageHight = ImageWidth.replace(',', ''), ImageHight.replace(',', '') 
    return True if int(ImageWidth) >= Minimum_Width and int(ImageHight) >= Minimum_Hight else False

def download_and_save_image(image_url: str, folder_path: str):
    """"""Download and save the image to a targeted folder with a random name assigned to the image file""""""

    global Success_downloads
    global Failure_downloads
    global FailedToSaveImage

    try:
        image_content = requests.get(image_url) # download the image content!
        image_content.raise_for_status()
    except Exception as FailedToDownloadImageError:
        Failure_downloads += 1
        return print(f""\n{CLI_TextColor.RED}ERROR - Couldn't download image: {image_url} - {FailedToDownloadImageError}{CLI_TextColor.RESET}\n"", flush=True)
    
    NewImageName = os.path.join(folder_path, str(uuid4()).replace('-', '')[:12] + os.path.splitext(image_url)[-1])
    # os.path.splitext(image_url)[-1] is to get the image extention out of image_url.
    # The final name would be like >>> D:\Omar\Pictures\Downloaded Images from google\<query>\54afh91a97sf.(jpg or jpeg or png)
    try: # open a new image file and save the image_content to it!
        with open(NewImageName, 'wb') as NewImage:
            for chunk in image_content.iter_content(100000):
                NewImage.write(chunk)
        Success_downloads += 1
    except Exception as FailedToSaveImageError:
        FailedToSaveImage += 1
        return print(f""\n{CLI_TextColor.YELLOW}ERROR - Couldn't save image: {image_url} - {FailedToSaveImageError}{CLI_TextColor.RESET}\n"", flush=True)

def download_images_from_google(search_query: str, driver_path: str, number_of_images: int, targeted_Folder=r""D:\Omar\Pictures\Downloaded Images from google""):
    with webdriver.Chrome(service=driver_path, options=ChromiumBrave) as wd: # This web driver will open Brave web browser.
        wd.maximize_window()
        URLs = fetch_image_URLs(search_query, number_of_images, wd)

    Folder_path = os.path.join(targeted_Folder, search_query)
    # Create a folder in the targeted_folder with the search_query name, if that folder doesn't exists, it'll be created.
    if not os.path.exists(Folder_path):
        os.makedirs(Folder_path)
        print(f""{CLI_TextColor.MAGENTA}Folder created: {Folder_path}{CLI_TextColor.RESET}"", flush=True)

    print(f""{CLI_TextColor.CYAN}Downloading the images, Please wait...{CLI_TextColor.RESET}"", flush=True)
    for URL in URLs:
        download_and_save_image(URL, Folder_path)

if __name__ == ""__main__"":
    UserSearchQuery = input(""Images to search for: "")
    NumberOfImagesToSearch = int(input(""Number of images to download: "") or 5)
    download_images_from_google(UserSearchQuery, ChromeDriverPATH, NumberOfImagesToSearch)
    result = f""Download complete: {CLI_TextColor.GREEN}{Success_downloads} Success, {CLI_TextColor.RED}{Failure_downloads} Failures""
    print(result + f"", {CLI_TextColor.YELLOW}{FailedToSaveImage} Failed to save images"" if FailedToSaveImage > 0 else result, flush=True)
    # notify me when finish downloading.
    notification.notify(""Download complete!"", f""Downloaded {Success_downloads} images"", app_icon=r"".\\Notification Icons\iconfinder-check.ico"")

",,,,,"['\npython', 'selenium\n']"
541114,Registar classes em fábrica a partir de vários ficheiros,"
Tenho uma fábrica com o seguinte código:
class ClassFactory:
    registry = {}

    @classmethod
    def register(cls, name):
        def inner_wrapper(wrapped_class):
            if name in cls.registry:
                print(f'Class {name} already exists. Will replace it')
            cls.registry[name] = wrapped_class
            return wrapped_class
    return inner_wrapper

    @classmethod
    def create_type(cls, name):
        exec_class = cls.registry[name]
        type = exec_class()
        return type


@ClassFactory.register('Class 1')
class M1():
    def __init__(self):
       print (""Starting Class 1"")


@ClassFactory.register('Class 2')
class M2():
    def __init__(self):
       print(""Starting Class 2"")

Que funciona como esperava sem problemas:
if __name__ == '__main__':
    print(ClassFactory.registry.keys())
    foo = ClassFactory.create_type(""Class 2"")

Recebo o resultado esperado de dict_keys(['Class 1', 'Class 2']) Starting Class 2
O problema é que eu quero isolar as classes M1 e M2 cada uma em seu ficheiro m1.py e m2.py, e possivelmente no futuro adicionar novo ficheiro com a classe M3, etc. Isto sem precisar de lidar de novo com o ficheiro onde está a ClassFactory. Mas se eu simplesmente coloco a classe M2 em m2.py:
from test_ import ClassFactory
@MethodFactory.register('Class 2')
class M2():
    def __init__(self):
        print(""Starting Class 2"")

Tenho o resultado dict_keys(['Class 1']) pois a classe nunca chega a ser registada
Portanto a minha questão é: como posso garantir que a classe é registada quando colocada num ficheiro diferente daquele onde está localizada a fábrica sem precisar de alterar o ficheiro com a fábrica cada vez que queira adicionar uma classe? Como registar automaticamente?
Obrigado
","
É só você criar a seguinte estrutura de ficheiros:

ClassFactory.py #Aqui você escreve a sua factory
m1.py
m2.py
...  #Nestes ficheiros você cria cada uma das classes que você quer
main.py #Aqui você vai realizar o import da factory e de cada classe.

Conteúdo de ClassFactory.py
class ClassFactory:
    registry = {}

    @classmethod
    def register(cls, name):
        def inner_wrapper(wrapped_class):
            if name in cls.registry:
                print(f'Class {name} already exists. Will replace it')
            cls.registry[name] = wrapped_class
            return wrapped_class
        return inner_wrapper

    @classmethod
    def create_type(cls, name):
        exec_class = cls.registry[name]
        type = exec_class()
        return type

Conteúdo de m1.py (similar a m2.py e m3.py):
from ClassFactory import ClassFactory

@ClassFactory.register('Class 1')
class M1():
    def __init__(self):
    print (""Starting Class 1"")

Conteúdo de main.py:
# Import da factory E de cada uma das classes
from ClassFactory import ClassFactory
from m1 import M1
from m2 import M2
from m3 import M3


if __name__ == '__main__':
    print(ClassFactory.registry.keys())

Execute python main.py e você vai obter a seguinte saída:
dict_keys(['Class 1', 'Class 2', 'Class 3'])

","
            -1
        ",,,"['\npython', 'factory\n']"
541109,Subtração em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 2 meses.




                        Melhore esta pergunta
                    



Estou tentando fazer a subtração simples de uma lista.
#02.1 - inserir a quantidade de números a serem calculados

sub_val = int(input(""Digite a quantidade de valores: ""))
qtd_val = 0

# nesta etapa, pegar a quantidade informada, 
for i in range (0, sub_val):

# criar a lista com valores e a seguir realizar a subtração
    qtd_val = int(input(""Digite o valor "" +str(i + 1)+"": "")) - qtd_val

# aqui mostra o resultado
    print(qtd_val)

Ele até calcula, mas deixa números em negativo, ou não faz como deveria fazer em uma calculadora simples. Como posso corrigir?
não sei como organizar os valores para que ele faça como uma calculadora faria tipo 33 - 44 - 55 = -66. atualmente esta formula responde 44.
e também preciso aprender a usar valores em lista.
Vou aprender as regras de postagem também, agradeço todo o apoio.
","
Você pode fazer um teste de mesa para entender o que está acontecendo no seu código.
Vou te dar um exemplo para essas 3 entradas: 33; 44; 55;
i = 0:
qtd_val = 0; 
entrada = 33;
qtd_val = 33 - 0 = 33

i = 1:
qtd_val = 33;
entrada = 44;
qtd_val = 44 - 33 = 11

i = 2:
qtd_val = 11;
entrada = 55;
qtd_val = 55 - 11 = 44

Uma forma de fazer a operação que você quer, aproveitando seu código, seria
    sub_val = int(input(""Digite a quantidade de valores: ""))
    qtd_val = 0
    
    #pegar o valor inicial que será subtraído
    qtd_val = int(input(""Digite o valor inicial"" +str(i + 1)+"": ""))

    # nesta etapa, pegar os valores que subtrairão, 
    for i in range (0, sub_val-1):
        
    # ler os valores e realizar a subtração
        qtd_val -= int(input(""Digite o valor para subtrair"" +str(i + 1)+"": ""))

lembre-se de verificar se sub_val >0
","
            1
        ",,,['\npython\n']
541024,"Erro, r2 negatvo com XGBRegressor","
Ao tentar fazer uma regressão com o XGBRegressor, encontro um r2 negativo.
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)

    s1 = [25,50,100]
s2 = [25,50,100]

pares = []

for n1 in s1:
  for n2 in s2:
    pares.append((n1,n2))

    hyper_params = {
    'hidden_layer_sizes': pares,
    'learning_rate_init': [0.001,0.01,0.1],
    'max_iter': [1000,2000],
    'solver': ['adam',],
    'tol': [0.000000001],
    }

ag = EvolutionaryAlgorithmSearchCV(estimator=XGBRegressor(objective ='reg:squarederror', colsample_bytree = 0.3, learning_rate = 0.1, max_depth = 5, alpha = 10, n_estimators = 10),
                                   params = hyper_params,
                                   scoring = 'r2',
                                   population_size=10,
                                   generations_number = 5,
                                   gene_mutation_prob = 0.1,
                                   gene_crossover_prob = 0.5,
                                   tournament_size = 2,
                                   verbose=2
                                   )

Resultado: Best individual is: {'hidden_layer_sizes': (50, 100), 'learning_rate_init': 0.01, 'max_iter': 1000, 'solver': 'adam', 'tol': 1e-09}
with fitness: -118.96296908770054
Alguém sabe como resolver?
",,,,,"['\npython', 'machine-learning', 'regressão\n']"
540998,como eu posso pegar o texto de uma página html usando python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 2 meses.




                        Melhore esta pergunta
                    



estava tentando pegar um texto de uma página html em um localhost usando a biblioteca requests do python, quando eu rodava o código, ele só mostrava se o status era 200 ou 404.
Alguém pode me ajudar?
Código:
import requests

texto = requests.get(""(link do localhost)"")
print(texto)


","
isso por que voce deve tratar o resultado e dizer ao requests.
No caso após voce fazer va requisicao deve fazer print(texto.json()) se caso for um json print(texto.text) no caso de texto e assim por diante, leia a documentacao Documentacao requests
","
            0
        ",,,"['\nhtml', 'python', 'http-request', 'python-requests\n']"
540957,Trocar o valor de células com valor específico de uma coluna do dataframe em python,"
Eu tenho esse dataframe :
    local time         ghi mean
0       2013-01-01 00:00:00 0.0
1       2013-01-01 01:00:00 0.0
2       2013-01-01 02:00:00 -9999
3       2013-01-01 03:00:00 0.0
4       2013-01-01 04:00:00 0.0
..         ...          ...
8754    2016-12-31 18:00:00 427.5
8755    2016-12-31 19:00:00 194.9
8756    2016-12-31 20:00:00 -9999
8757    2016-12-31 21:00:00 237.6
8758    2016-12-31 22:00:00 -9999
8759    2016-12-31 23:00:00 0.0

E eu quero substituir todo valor que seja -9999 da coluna ""ghi mean"" por 0.
De forma que o resultado seja:
    local time         ghi mean
0       2013-01-01 00:00:00 0.0
1       2013-01-01 01:00:00 0.0
2       2013-01-01 02:00:00 0
3       2013-01-01 03:00:00 0.0
4       2013-01-01 04:00:00 0.0
..         ...          ...
8754    2016-12-31 18:00:00 427.5
8755    2016-12-31 19:00:00 194.9
8756    2016-12-31 20:00:00 0
8757    2016-12-31 21:00:00 237.6
8758    2016-12-31 22:00:00 0
8759    2016-12-31 23:00:00 0.0

","
Você pode usar o .loc para isso. Veja a documentacão aqui
df.loc[df['ghi mean'] == -9999, 'ghi mean'] = 0

","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
540942,Como somar um valor de uma str e depois printar a nova str com o valor modificado?,"
Quando eu selecionar um XPATH, quero que o programa vá sempre somando o valor em negrito abaixo:

//[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[1]

A minha ideia é pegar uma XPATH base, e modificar um valor especifico nessa XPATH, no caso aquele 1 que está em negrito, quero sempre ir somando aquele número e ir printando a nova XPATH, no caso seria assim a minha ideia:

//[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[1] ->
//[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[2] ->
//[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[3] ->
//[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[4] ->

Tentei fazer dessa maneira, mas sem sucesso:
xpath = '//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[1]'
xpath2 = int(xpath[-2])
soma = xpath2 + 1
print(xpath[-2 == soma])

","
Uma maneira de resolver o problema é fazendo um laço e repetição e ""montar"" o xpath que deseja.
Segue um exemplo:
xpath_pattern = '//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[{}]'
for i in range(3):
    print(xpath_pattern.format(i))

Repare que o valor da variável xpath_pattern no valor inteiro que deseja incrementar possui um {}, esse caractere coringa vai ser interpolado pelo método format, dentro do laço, gerando uma nova string com o valor de i incrementado por 1 a cada iteração.
Isso vai gerar uma saída da seguinte forma:
//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[0]
//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[1]
//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[2]

A estratégia aqui foi utilizar o método format da classe str.
Utilizei o valor 3 no parâmetro da função range, porém você pode utilizar a função len para encontrar o valor do parâmetro corretamente.
Depois basta usar esse padrão para extrair os dados.
Uma implementação para Python >= 3.6
Se tiver utilizando a versão do Python >= 3.6 então é possível utilizar o padrão de interpolação f-string
Segue um exemplo:
for i in range(3):
    print(f'//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[{i}]')

","
            4
        ","
Apenas complementado é uma variações do mesmo raciocínio dessa resposta porém tem mais uma possibilidade usando um templates.
from string import Template

s = Template('//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[$idx]')

for i in range(3):
  print(s.substitute(idx=i))
#//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[0]
#//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[1]
#//*[@id=""app""]/div[3]/div[2]/div[1]/div[1]/div[2]/div[2]

Templates fornecem substituições de string mais simples segundo as seguintes regras:

$$ é uma forma de escape e é substituído por um único $.
$identificador nomeia um marcador de substituição que corresponde a uma chave de mapeamento de ""identificador"". Por padrão, ""identificador"" deve ser um identificador Python válido e o primeiro caractere não identificador após o caractere $ encerra essa especificação
${identificador} é equivalente a $identificador e é necessário quando caracteres identificadores válidos seguem o marcador de posição, mas não fazem parte do marcador de posição: ${prefixo}ismo.

","
            3
        ",['\npython\n']
540935,Como eu interromper o código caso uma condição não seja cumprida [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Faça um Programa que leia três números e mostre-os em ordem decrescente. Python

                                (2 respostas)
                            

Fechada há 2 meses.



Estou tendo problema para descobrir como evitar que o resto do código seja executado caso uma condição if não seja cumprida.
n1 = int(input('Insira o primeiro número: '))
n2 = int(input('Insira o segundo número: '))
n3 = int(input('Insira o terceiro número: '))
if n1 == n2 or n1 == n3 or n2 == n3:
    print('Não são permitidos valores iguais!')
# Verificando quem é maior
if n1 > n2 and n1 > n3:
    print('O maior número é: {}'.format(n1))
elif n2 > n1 and n2 > n3:
    print('O maior número é: {}'.format(n2))
else:
    print('O maior número é: {}'.format(n3))
# Verificando quem é menor
if n1 < n2 and n1 < n3:
    print('O menor número é: {}'.format(n1))
elif n2 < n1 and n2 < n3:
    print('O menor valor é: {}'.format(n2))
else:
    print('O menor valor é: {}'.format(n3))

","
Use um else para parar a execução caso entre no primeiro if de erro
n1 = int(input('Insira o primeiro número: '))
n2 = int(input('Insira o segundo número: '))
n3 = int(input('Insira o terceiro número: '))
if n1 == n2 or n1 == n3 or n2 == n3:
    print('Não são permitidos valores iguais!')
else: //para parar parar a execução
    # Verificando quem é maior
    if n1 > n2 and n1 > n3:
        print('O maior número é: {}'.format(n1))
    elif n2 > n1 and n2 > n3:
        print('O maior número é: {}'.format(n2))
    else:
        print('O maior número é: {}'.format(n3))
    # Verificando quem é menor
    if n1 < n2 and n1 < n3:
        print('O menor número é: {}'.format(n1))
    elif n2 < n1 and n2 < n3:
        print('O menor valor é: {}'.format(n2))
    else:
        print('O menor valor é: {}'.format(n3))

","
            0
        ",,,"['\npython', 'condição\n']"
540858,Como diminuir o tempo da busca visual com pyautogui.locateOnScreen?,"
Estou fazendo um 'bot' de reconhecimento de imagens onde caso ele encontre a imagem X ele aperta NUM1 e se encontra a imagem Y ele aperta NUM3. Ele funcionar normalmente porém as vezes vejo que ele demora até 2s para executar essa ação, pelo que eu li na documentação do pyautogui é realmente esse tempo médio de leitura da tela.
Tem algum outro comando de leitura de tela que seja mais rápido?
import pyautogui,os,win32gui
from time import sleep

def loop():
    global anel,colar,k,n
    window = win32gui.GetWindowText(win32gui.GetForegroundWindow())
    #print(window)

    if ""Tibia"" in window:
        while True:
            #Procura IMG
            pyautogui.locateOnWindow
            localAnel = pyautogui.locateCenterOnScreen(anel)
            localColar = pyautogui.locateCenterOnScreen(colar)

            #Se localizar a img
            if localAnel != None:
                pyautogui.press(""NUM1"")
                loop()
                #break
            if localColar != None:
                pyautogui.press(""NUM3"")
                loop()
                #break

    else:
        sleep(0.2)
        loop()
#configs
caminho = './img/'
os.chdir(caminho)
global anel,colar,k,n
anel = 'sem_ring.png'
colar = 'sem_amuleto.png'

#Stop Conditions
k = 0
n = 5

loop()

","
Seu script tem alguns problemas, por exemplo o uso desnecessário da função recursiva, você poderia resolver tudo no while e no mesmo escopo. Recomendo que leia essa pergunta:

Quando usar recursão e quando usar laços?

Voltando ao código, crie um Exemplo Mínimo, Completo e Verificável para clicar no botão com o número 6 da calculadora do Windows 10 (que é um programa que todo usuário de Windows tem e poderá testar assim o código sem dependências desnecessárias). Então com um screenshot da tela e peguei a imagem do botão com o número 6 e salvei em um .png, exemplo:



No código não foi necessário o uso de função recursiva, tudo pode ser resolvido com um único while.
Acelerando a localização com pyautogui.
Para tornar mais rápido a checagem da imagem usei o grayscale=True, no entanto isso pode causar falsos positivos
Também especifiquei o parâmetro confidence= para melhorar a precisão com que a função deve localizar a imagem na tela. Isso é útil caso a função não consiga localizar uma imagem devido a diferenças insignificantes de pixel. Para usar o confidence é necessário instalar o OpenCV para Python usando o comando:
pip install opencv-python

Exemplo:
import pyautogui
from os import path
from win32gui import GetWindowText, GetForegroundWindow
from time import sleep

btn6_asset = path.dirname(path.realpath(__file__)) + r""\btn6.png""

while True:
    # Obtém o texto da janela ativa
    title = GetWindowText(GetForegroundWindow())

    # Checa se a janela ativa é a da calculadora
    if ""Calculadora"" in title:
        btn_found = pyautogui.locateCenterOnScreen(btn6_asset, grayscale=True, confidence=0.9)

        if btn_found is not None:
            # Extrai o x e y do elemento encontrado
            x, y = btn_found

            pyautogui.click(x, y)
        else:
            print(""Imagem não encontrada"")
    else:
        print(""Janela não está ativa ou o programa não esta aberto"")

    sleep(0.2)

Exemplo do processo:




Delimitando a área de buscado do pyautogui.locateOnScreen
O método pyautogui.locateOnScreen(...) tem a propriedade region=(left, top, width, height) que permitirá delimitar a uma área para pesquisar a imagem, o que pode tornar o script mais rápido, principalmente se tiver muitos objetos ou imagens na tela.
Para setar os valores de left, top, width e height no region=(...) da janela desejada (no exemplo a janela ativa), você pode usar o win32gui (pywin32), para instalar use o comando:
pip install pywin32

Isso irá prover acesso as APIs do Windows, então usando o método win32gui.GetWindowRect(<janela>) que irá retornar os valores necessários, algo como:
# Obtém a janela ativa
window = GetForegroundWindow()

# Checa se a janela ativa é a da calculadora pelo titulo
if ""Calculadora"" in GetWindowText(window):

    # Obtém a região da janela ativa
    wx, wy, ww, wh = GetWindowRect(window)

    # Corrije x e y negativos de algumas ""decorações"" de janelas
    # ajusta a largura e altura da região buscada
    win_region = (
        max(wx, 0), # Se o valor for negativo define como 0
        max(wy, 0), # Se o valor for negativo define como 0
        ww - wx,    # Desconta o valor de x da largura
        wh - wy     # Desconta o valor de y da altura
    )

    btn_found = pyautogui.locateOnScreen(
        btn6_asset,
        grayscale=True,
        confidence=0.9,
        region=win_region
    )

","
            3
        ",,,['\npython\n']
540835,Acessando os valores de uma lista 3D em Python,"
Eu estou com uma questão que não estou encontrando uma resposta que não seja por uma estrutura de repetição: como acessar valores numa lista 3D.
Eu tenho uma lista que é uma pilha de 400 imagens de dimensão 2304x2304 pixel, (400, 2304, 2304).
Eu gostaria de selecionar um dado pixel, exemplo o 10x10 e acessar todos os valores desse pixel ao longo das 400 imagens. Eu havia tentado algo como vpixel = img[:][10][10]. Na minha ideia, a variável vpixel deveria ter 400 posições, porém está gerando uma variável com 2304 posições. Em uma estrutura de repetição eu consigo, pois eu fixo o pixel que eu quero e faço um for de 0 a 399 daí eu tenho todos os valores.
Mas eu queria uma maneira que não fosse necessário um for para tal, alguém poderia me ajudar?
Agradeço desde já.
","
Eu mesmo acabei encontrando a resposta. Eu transformei minha lista em um np.array(img) e acessei pelo método vpixel = img[:, 10, 10] e funcionou!!!!
","
            -2
        ",,,"['\npython', 'array', 'lista', 'arraylist\n']"
540821,"Algoritmo que seleciona os N maiores números, soma eles e depois subtrai pelo restante de números menores que sobrou","
Estou criando um algoritmo e preciso que ele selecione os 11 maiores números da lista e diminua pelo restante de números que sobrou.
exemplo:
input 13 (8 5 11 13 15 3 12 14 5 12 4 5 16) (digitados os n números, você seleciona os 11 maiores, soma eles e depois diminui pelo restante de números que sobrou (os menores números que sobraram depois dos 11 maiores)
A imagem a seguir deixará mais claro

no primeiro input a lógica foi: 16+15+14+13+12+12+11+8+5+5+5 = 116 - 3 - 4 = 109
Meu código até agora foi esse:
n = int(input())
jogadores = [int(x) for x in input().split()]
jogadores.sort(reverse=True)
print(jogadores)

","
Uma maneira simples de fazer é utilizando o fatiamento de listas do Python.
O código fica da seguinte maneira:
n = int(input())
jogadores = [int(x) for x in input().split()]
jogadores.sort(reverse=True)
soma1 = sum(jogadores[:11])
soma2 = sum(jogadores[11:])
print(soma1 - soma2)

Com o fatiamento é possível retornar de forma simples apenas partes de uma lista. Neste caso fatiamos a lista ordenada pegando os 11 primeiros elementos para a soma, e depois pegamos os demais elementos para subtrair.
","
            -2
        ",,,['\npython\n']
540775,Python Selenium: selecionar um elemento dentro de um submenu,"
Alguma ideia de como selecionar o menu ""pesquisar contratos""? 
estou usando o webdriver (seleniun). Já testei find_element_by:
td: não consegui identificar qual seria o índice correto (fiz com o menu anterior, ""gestão de contrato..."" e deu certo, com ""pesquisar contrato"" não);
xpath: o xpath deste item muda a cada carregamento da página;
classe menuItem: trouxe os itens do menu anterior;
text_link: não localizado;
css td.menuItemSeleccionado: não localizado;
classe menuItemSeleccionado: não localizado
Minhas ideias acabaram, sou nova no python. Alguém me ajuda por favor?
","
Olá, é possível que a busca pelo elemento possa estar com dificuldades relacionada a 'td'. Aconselho o uso da busca por CSS_SELECTOR.
'''
from selenium import webdriver

driver = webdriver.Chrome()

contatos = driver.find_elements(By.CSS_SELECTOR,'[class=""menuItemSelecionado""]')

'''
","
            -3
        ",,,"['\npython', 'selenium', 'google-chrome', 'selenium-webdriver\n']"
540690,Porque numpy.random() é mais lento que random()?,"
O objetivo do meu código é gerar um conjunto de números aleatórios uniformes, calcular a norma deles como se fossem componentes de um vetor e verificar se a norma está dentro de um certo intervalo:
Fiz duas funções diferentes que fazem a mesma coisa, cada uma usando uma biblioteca diferente:
def funcao_1(n):

    norma_random = 0
    for i in range(n):
        norma_random += ((random.uniform(-1,1)**2))**(1/2)
        
    if norma_random <= 1:
        return 1

    else:
        return 0

def funcao2(n):

    coordenadas = np.random.uniform(-1,1,n)
    norma_numpy = np.linalg.norm(coordenadas)

    if norma_numpy <= 1:
        return 1

    else:
        return 0

Na segunda parte do meu código uso uma das duas funções para fazer esse sorteio várias vezes:
N = 1000000
for n in range(1,11):
    k = 0
    V = 2**n

    for i in range(N):
        k += funcao1(n)

I = (k/N)*V
print('Volume {}-th dimensional: {}'.format(n, I))

Rodei essa segunda parte do código usando as duas funções func1() e func2()
Usando func1():
Tempo total rodando: 41.47705054283142 segundos
Usando func2():
Tempo total rodando: 113.81564688682556 segundos
Ou seja, usando a biblioteca numpy para gerar os números aleatórios o código demora mais.
Também fiz alguns testes usando %timeit. Comparei primeiros as funções inteiras:
%timeit funcao1(n)
1.26 µs ± 171 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)

%timeit funcao2(n)
9.91 µs ± 664 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)

Depois comparei as partes equivalentes de cada função:
Primeiro comparar as operações de gerar os vetores aleatórios e calcular a norma:
%timeit ""coordenadas = np.random.uniform(-1,1,n)"" ""norma_numpy = np.linalg.norm(coordenadas)""
14.4 ns ± 1.61 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)

%timeit ""norma_random = 0"" ""for i in range(n): norma_random += (random.uniform(-1,1)**2)""
13.8 ns ± 0.752 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)

Depois a parte condicional do problema (onde a única diferença que consegui encontrar é que o numpy tem seu próprio data type inteiro):
%timeit ""if norma_numpy<=1: True"" ""else: return 0""
13.6 ns ± 0.733 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)

%timeit ""if norma_random<=1: True"" ""else: return 0""
13.3 ns ± 0.554 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)

Então, gostaria de saber se alguem tem alguma noção de onde surge essa diferença de eficiência  e o porquê não encontro diferença nenhuma quando testo as partes separadas do código.
","
O numpy.random vai ser mais rápido - mas pra vetores maiores. Você está usando  n de 1 a 10 - para valores tão pequenos, uma lista é criada muito mais rápido que um numpy.array - que tem que inicializar vários estados internos pra poder trabalhar com quantidades grandes de número.
Não se se faz sentido na conta que você quer fazer, mas experimente diminuir N e aumentar o n - com n na faixa de ~1000 acredito que a criação das estruturas do numpy já seja amortizada.
","
            2
        ",,,"['\npython', 'random', 'numpy\n']"
540681,setar um campo model django através de um método,"
fala pessoal, tudo bem?
Estou modelando dois obj em django:

Cria uma solicitacao de serviço
Recebe esta solicitação e cria uma Ordem de serviço

Ao ser criada uma Ordem de Serviço, que é uma ForeignKey de Solicitação, eu gostaria de setar o campo 'is_active' da solicitação.
Porém não estou conseguindo pensar em uma maneira correta de se fazer isto.
class SolicitacaoServico(models.Model):
    id = models.AutoField(primary_key=True)
    data = models.DateTimeField(auto_now=True)
    solicitante = models.CharField(max_length=50)
    maquina = models.CharField(max_length=50)
    is_active = models.BooleanField(default=True)

    def __str__(self):
        return self.maquina

class OrdemServico(models.Model):
    id = models.AutoField(primary_key=True)
    solicitacao = models.ForeignKey(SolicitacaoServico, on_delete=models.CASCADE)
    data_abertura = models.DateTimeField(auto_now=True)
    previsao_fechamento = models.DateTimeField(blank=False)

Consigo fazer isto através de algum método?
","
Você pode fazer isso através de signals. Nesse caso o metódo post-save. Segue a documentação: https://docs.djangoproject.com/en/4.0/topics/signals/
Seria mais ou menos o seguinte:
from django.db.models.signals import post_save

def set_is_active_service_request(sender, instance, created, **kwargs):
     if created:
        solicitacao = instance.solicitacao
        solicitacao.is_active = True
        solicitacao.save()

post_save.connect(set_is_active_service_request, sender=OrdemServico)

Esclarecendo, após a ordem de serviço ser criada o método save é executado, após o save (post-save) a função set_is_active_service_request é chamada setando o valor de is_active da solicitação. Ps: O padrão atual é implementar esse método ao fim do arquivo models.py
","
            0
        ",,,"['\npython', 'django\n']"
540628,Como fazer a mensagem aparecer no corpo da janela e não no título?,"
Estou tentando fazer uma tela de login, mas quando executo pra ver se a senha esta certa ou errada, a mensagem aparece no título, e não na janela.
from tkinter import *
from tkinter import messagebox
#cores ------------------------------
co0 = ""#fof3f5"" # preto
co1 = ""#feffff"" # branco
co2 = ""#3fb5a3"" # verde
co3 = ""#38576b"" # valor
co4 = ""#403d3d"" # letra

#criando janela ------------------------------

janela = Tk()
janela.title("""")
janela.geometry(""310x300"")
janela.configure(background=co1)

#dividindo janela ------------------------------


frame_cima = Frame(janela,width=310,height=50,bg=co1,relief=""flat"")
frame_cima.grid(row=0,column=0,padx=1, sticky=NSEW)

frame_baixo = Frame(janela,width=310,height=250,bg=co1,relief=""flat"")
frame_baixo.grid(row=1,column=0,padx=1, sticky=NSEW)

#configurando o frame de cima ------------------------------
L1 = Label(frame_cima, text='LOGIN',anchor=NE,font=('ily 25'), bg =co1,fg = co4)
L1.place(x=5,y=5)

Linha1 = Label (frame_cima, text="""",width=275,anchor=NW,font=('ily 1'), bg = co2)
Linha1.place(x=10,y=45)

credenciais = ['victor','1234']

def verificar_senha():
    nome = E_nome.get()
    senha = E_senha.get()

    if nome == ""Lucas"" and senha == ""123456789"":
     messagebox.showinfo('login,comfirmado seja bem vindo Lucas')
    elif credenciais [0] == nome and credenciais  [1]  == senha:
      messagebox.showinfo( 'seja bem vindo de volta' + credenciais [0])

    else:
        messagebox.showwarning('Erro verifiqu a senha e o nome') 

#configurando o freme de baixo ------------------------------
L_nome1 = Label(frame_baixo, text='Nome *',anchor=NW,font=('ily 10'), bg =co1,fg = co4)
L_nome1.place(x=14,y=20)

E_nome = Entry(frame_baixo,width=25,justify='left',font=("""",13),highlightthickness=1,relief='solid',)
E_nome.place(x=14,y=50)

L_nome1 = Label(frame_baixo, text='Senha *',anchor=NW,font=('ily 10'), bg =co1,fg = co4)
L_nome1.place(x=14,y=100)

E_senha = Entry(frame_baixo,width=25,justify='left',font=("""",13),highlightthickness=1,relief='solid',)
E_senha.place(x=14,y=130)

b_comfirmar = Button(frame_baixo,text='ENTRAR',command= verificar_senha,width=39,height=2,font=""ily 8 bold"",bg=co2,fg=co1,relief=RAISED)
b_comfirmar.place(x=14,y=180)


janela.mainloop()

","
Na documentação oficial, vemos que o primeiro parâmetro da função showinfo é title e o segundo é message. Como você não especificou nenhum parâmetro quando passou a mensagem como argumento, esse valor vai para o primeiro parâmetro.
Portanto, você deve usar messagebox.showinfo(message=""login,comfirmado seja bem vindo Lucas"") para que a mensagem vá corretamente para o corpo da janela.
","
            0
        ",,,"['\npython', 'tkinter', 'login\n']"
540546,Não estou conseguindo fazer o programa retornar a maior e a menor média,"

O problema é esse:
Escreva um programa que lê um arquivo chamado notas.txt que contém em cada linha o nome de
um aluno e quatro notas entre 0 e 100. O programa deve então exibir na tela a maior e a menor média
dentre todos os alunos.
Meu código é esse:
arquivo = open('notas.txt')
for linha in arquivo:
    notas = linha[4:]
    soma = 0
    for nota in notas.split():
        soma=soma+int(nota)
    media = soma / 4
    print(media)

arquivo.close()

","
A resposta para este problema é a seguinte:
    # -*- coding: utf-8 -*-
    arquivo = open('notas.txt', 'r')
    notas = []
    medias = []

    for linha in arquivo:
        campos = linha.split(' ')
        nome = campos[0]
        notas = []
        for nota in campos[1:]:
            notas.append(int(nota))
            media = sum(notas)/len(notas)
        medias.append(media)
        maior_media = max(medias)
        menor_media = min(medias)
    print(f'{maior_media:.2f}')
    print(f'{menor_media:.2f}') 
    arquivo.close()

","
            -4
        ",,,['\npython\n']
540525,Webdriver_manager install em pasta selecionada,"
Bom dia pessoal, estou criando uma aplicação em python usando selenium e com o webdriver_manager, gostaria de saber se teria como escolher uma pasta do meu favor para que o driver seja baixado e utilizado lá, no caso do webdriver_manager a pasta selecionada é:

.wdm\drivers\chromedriver\win32\

Existe alguma forma de escolher a propria pasta? para que faça donwload?
","
Sim existe, você cria um profile com as configurações que deseja, onde pode indicar a pasta de download e eliminar as necessidades de confirmação.
As configurações dependem do que você deseja, especificar tipos de extensões de arquivo, dentre outras. Mas no geral seria algo assim:
## Personalização do profile para determinar pasta de download e evitar confirmações
from selenium.webdriver.firefox.options import Options

options = Options()
options.set_preference(""browser.download.folderList"", 2)
options.set_preference(""browser.download.manager.showWhenStarting"", False)
options.set_preference(""browser.download.dir"", <insira a pasta desejada aqui>)
options.set_preference(""browser.helperApps.neverAsk.saveToDisk"", ""application/x-gzip"")

browser = webdriver.Firefox(options=options)

Na hora de indicar o caminho para a pasta desejada aí depende do seu sistema operacional, questões de WindowsPath ou PosixPath em Linux e demais baseados em Unix variam um pouco quanto aos caracteres de escape / ou \ para indicar os subdiretórios.
Caso não funcione, veja que o tipo/extensão dos arquivos também importa, pode atuar neles alterando a última linha do bloco de opções acima, assim por exemplo:
profile.set_preference(""browser.helperApps.neverAsk.saveToDisk"", ""application/zip;application/octet-stream;application/x-gzip"")

Tente aí e veja se funciona.
","
            0
        ","
Você pode utilizar o atributo path para especificar onde o webdriver_manager deve armazenar/gerenciar os webdrivers. Por exemplo, supondo que no Windows eu queira armazenar os webdrivers em %homepath%\webdrivers, posso fazer assim:
from pathlib import Path

from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager


webdrivers_path = Path.home() / 'webdrivers' 
executable_path = ChromeDriverManager(path=webdrivers_path).install()

with webdriver.Chrome(executable_path) as driver:
    driver.get('https://pt.stackoverflow.com/questions/540525')
    print(driver.title)

Quando executado, você terá o output abaixo e o webdriver baixado no local especificado.
(.venv) py .\main.py


====== WebDriver manager ======
Current google-chrome version is 97.0.4692
Get LATEST chromedriver version for 97.0.4692 google-chrome
There is no [win32] chromedriver for browser  in cache
Trying to download new driver from https://chromedriver.storage.googleapis.com/97.0.4692.71/chromedriver_win32.zip
Driver has been saved in cache [%homepath%\drivers\chromedriver\win32\97.0.4692.71]

DevTools listening on ws://127.0.0.1:51874/devtools/browser/c2afcdca-c4a9-4bd1-bbb3-47e6219a8022
python - Webdriver_manager install em pasta selecionada - Stack Overflow em Português

Selenium 4
Se estiver utilizando a versão mais recente do Selenium, a forma de especificar o caminho do executável mudou e é preciso passar um Service na criação do driver:
from pathlib import Path

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager


webdrivers_path = Path.home() / 'webdrivers' 
executable_path = ChromeDriverManager(path=webdrivers_path).install()

with webdriver.Chrome(service=Service(executable_path)) as driver:
    driver.get('https://pt.stackoverflow.com/questions/540525')
    print(driver.title)

","
            0
        ","['\npython', 'selenium-webdriver\n']"
540504,Código entra em loop infinito ao utilizar numero negativo - Python,"
programa simples em que o usuário vai informar o numero máximo, mínimo e o numero escolhido.
Com esses parâmetros, a maquina vai descobrir qual o numero escolhido pelo usuário.
Porem quando o usuário escolhe um numero negativo (já informando o numero mínimo como um negativo menor ou igual ao escolhido) o programa entra em loop infinito.
Alguem sabe onde estou errando?
from random import randint

numeromaximo = (int(input('Qual o valor maximo? ')))
numerominimo = (int(input('Qual o valor minimo? ')))
resposta = (int(input('Qual o numero escolhido: ')))
tentativa = 0
palpite = """"

while palpite is not resposta:
tentativa += 1
palpite = randint(numerominimo, numeromaximo)
print(f'O palpite da maquina é {palpite}, seu numero escolhido é maior, menor ou acertou?')
if palpite < resposta:
    print(""o valor escolhido é maior, escolhendo outro numero\n"")
    numerominimo = palpite
elif palpite > resposta:
    print('O valor escolhido é menor, escolhendo novo numero!!!\n')
    numeromaximo = palpite
else:
    print(f'O numero escolhido pelo usuario é {resposta}')
    print(f'Numero descoberto apos {tentativa} tentativas')

","
Faltou a adição de entrada ""resposta = (int(input('Qual o numero escolhido: ')))"" para verificar a condição novamente dentro do while, assim quando a pessoa acerta o número do palpite, o laço se encerra, conforme fiz abaixo:
from random import randint

numeromaximo = (int(input('Qual o valor maximo? ')))
numerominimo = (int(input('Qual o valor minimo? ')))
resposta = (int(input('Qual o numero escolhido: ')))
tentativa = 0
palpite = 0

while palpite is not resposta:
    tentativa += 1
    palpite = randint(numerominimo, numeromaximo)
    print(f'O palpite da maquina é {palpite}, seu numero escolhido é maior, menor ou acertou?')
    if palpite < resposta:
        print(""o valor escolhido é maior, escolhendo outro numero\n"")
        numerominimo = palpite
        resposta = (int(input('Qual o numero escolhido: ')))

    elif palpite > resposta:
        print('O valor escolhido é menor, escolhendo novo numero!!!\n')
        numeromaximo = palpite
        resposta = (int(input('Qual o numero escolhido: ')))

    else:
        print(f'O numero escolhido pelo usuario é {resposta}')
        print(f'Numero descoberto apos {tentativa} tentativas')

","
            0
        ",,,"['\npython', 'loop', 'ciclo-infinito\n']"
540474,Conteúdo de XML para lista de dicts usando Python,"
Eu tenho uma lista:
listaderetorno = []

E dentro dessa lista vou inserir o dicionário abaixo a ser preenchido com dados de um XML:
dictDup = {
        'Nota':dup_nf,
        '#number':'',
        'Valor':'',
        'Vencimento':''}

Eu vou replicar esse dicionário n vezes dentro da lista conforme o número de vezes que determinado elemento aparece dentro do XML:
ndup = 0
for n, elem in enumerate(root.iter('{http://www.portalfiscal.inf.br/nfe}nDup')):
        listaderetorno.append(dictDup)
        ndup = n+1

E quero preencher cada dicionário com os dados que estão no XML:
for n, elem in enumerate(root.iter('{http://www.portalfiscal.inf.br/nfe}nDup')):
        listaderetorno[n]['#number'] = elem.text

Mas ao invés de preencher com cada elemento do XML nos dicts da lista, ele está preenchendo cada dict apenas com o último elemento do node/nó indicado.





#number




0
003


1
003


2
003




Deveria ficar assim:
| |   #number   |
|:---|:---|
|0|    001|
|1|    002|
|2|    003|
O que estou fazendo de errado?
",,,,,"['\npython', 'lista', 'xml', 'dicionário\n']"
540442,PyCharm não reconhece biblioteca instalada [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada 26 dias atrás.




                        Melhore esta pergunta
                    



Alguem saberia me dizer o motivo do Pycharm não reconhecer o pandas?
Ele está na lista de interpretador, porem o read_excel não aparece na lista de funções. Lembrando que usei import pandas normal mesmo.


","
Você, provavelmente, está utilizando um environment/interpreter diferente para a execução do seu código. Note que no primeiro print você está vendo as bibliotecas instaladas no environment Python 3.9 (dataAnalyticsB2B).
Confira agora se o seu projeto está sendo executado com esse mesmo environment e, se for diferente, é só selecionar este que possui o Pandas instalado.
","
            0
        ",,,"['\npython', 'pandas', 'pycharm\n']"
540386,Unificar formatacao de coluna com iniciais,"
Tenho uma coluna com iniciais de nomes que deveriam seguir um padrao de formatacao, como por exemplo:
Gustavo Silva => G S (Iniciais do nome + sobrenome, letras, separadas por espacos apenas)
Porem, tenho valores com inicias em diferentes formatacoes, como em alguns exemplos abaixo:
Gustavo Silva => G.S. / G. S. / GS / GS. / etc.
Existe alguma forma de unificar essa coluna para manter a formatacao que deveria estar sendo utilizada?
","
Podes criar uma tabela onde colocas os valores de entrada e saída, por exemplo




G.S.
G S




GS.
G S


AM
A M


....





Na tua tabela, acrescentas uma nova coluna,por exemplo a seguir á coluna onde tens as iniciais ""não formatadas"", e usas um procv (em portugues de Portugal) ou vlookup (em inglês) para ir buscar o valor ""formatado"" da tabela de cima.
exemplo
Coluna XXX =procv(""valor_nao_formatado"", ""tabela_de_entradas_saidas"", 1,falso)

","
            0
        ",,,"['\npython', 'excel', 'vba', 'formatação\n']"
540374,Tabela em Python com DataFrame de tamanhos diferentes,"
Estou escrevendo um código para registrar pedidos de regra de firewall onde após a entrada dos dados de ""Origem"", ""Destino"" e ""Porta"" quero apresentar as entradas em uma tabela. Estou usando o Pandas para criar a tabela, mas como uma coluna não tem relação com a outra estou com dificuldades em formatar a tabela corretamente. Segue o código de teste:
import pandas as pd

src = ['src1', 'src2', 'src3']
dst = ['dst1', 'dst2']
srv = ['srv1']

df_src = pd.DataFrame(src, columns=['Origem'])
df_dst = pd.DataFrame(dst, columns=['Destino'])
df_srv = pd.DataFrame(srv, columns=['Serviço'])

rule = pd.concat([df_src, df_dst, df_srv])
rule.update(rule.fillna(''))

print(rule)

A saída do print está com a seguinte formatação:

Já que as colunas não tem relação uma com a outra eu esperava uma tabela com o seguinte formato:

Alguém sabe posso fazer isso?
Obrigado
","
Olá!!
O seu problema poderia ser resolvido somente adicionando o seguinte argumento na função rule, ficando com a seguinte sintaxe:   rule = pd.concat([df_src, df_dst, df_srv], axis=1)

O argumento axis=1 determina que as matrizes devem ser concatenadas no eixo horizontal.

Logo, o código pode ser reescrito como:
import pandas as pd

src = ['src1', 'src2', 'src3']
dst = ['dst1', 'dst2']
srv = ['srv1']

df_src = pd.DataFrame(src, columns=['Origem'])
df_dst = pd.DataFrame(dst, columns=['Destino'])
df_srv = pd.DataFrame(srv, columns=['Serviço'])

rule = pd.concat([df_src, df_dst, df_srv], axis=1)
rule.update(rule.fillna(''))

print(rule)

O resultado:
    Origem Destino Serviço
0   src1    dst1    srv1
1   src2    dst2        
2   src3

Uma boa explicação sobre axis no pandas está disposto neste link: https://stackoverflow.com/questions/22149584/what-does-axis-in-pandas-mean
Espero ter ajudado! 0/
","
            2
        ","
O método pd.concat irá sempre concatenar os DataFrames um abaixo do outro (afinal, este é o significado de ""concatenar""). No lugar disso, recomendo tentar criar o DataFrame final diretamente com:
df = pd.DataFrame({
    'Origem': src,
    'Destino': dst,
    'Serviço': srv,
})

Mas como as listas src, dst e srv não possuem o mesmo tamanho, temos que completá-las com strings vazios até todas terem o mesmo tamanho. Para isso, podemos usar esta solução, chegando no código abaixo:
import pandas as pd

src = ['src1', 'src2', 'src3']
dst = ['dst1', 'dst2']
srv = ['srv1']

N = max(len(src), len(dst), len(srv))

df = pd.DataFrame({
    'Origem': src + [''] * (N - len(src)),
    'Destino': dst + [''] * (N - len(dst)),
    'Serviço': srv + [''] * (N - len(srv)),
})

print(df)

output:
  Origem Destino Serviço
0   src1    dst1    srv1
1   src2    dst2        
2   src3

","
            1
        ","['\npython', 'python-3.x', 'pandas', 'tabela\n']"
540340,"Estou tentando executar o codigo mas ele diz que quero converter uma str para float ,mas nao entendo quando dei esse comando","
peso=[]
while True:
    peso.append(float(""Qual sua altura?""))
    peso.append(float(""Quanto voce pesa?""))
    soma=peso[0]/(peso[1]**2)
    rr=input(""Deseja continuar [S/N]? "")
    if rr==""N"":
        if soma==18.5:
            print(""Seu imc é 18.5 por tanto seu peso esta normal"")
        elif soma>=25 or soma==29.5:
            print(""seu imc é {} portanto voce esta com sobrepeso"".format(soma))
        elif soma>=30 or soma==39.9:
            print(""Seu imc é {} portanto voce esta com obesidade "".format(soma))
            break
print(""os pesos e alturas cadastrados respectivamente foram {}"".format(peso))
     

","
Identifiquei 2 problemas no seu código, o primeiro é que você não está capturando os dados do usuário com o input() para o envio dos mesmos a lista peso.
O seu código é :
peso.append(float(""Qual sua altura?""))

O mais apropriado seria:
peso.append( float( input( 'Qual a sua altura ? ') )

Observe que houve a adição do input(), que captura um dado do tipo String e através do float o converte para um número quebrado/flutuante.
Vale ressaltar também que dar um espaçamento no seu código ajuda na visualização e consequentemente na resolução de possíveis problemas que possam ocorrer.
O próximo problema que você vai ter é a indentação do break. Indentação refere-se a distância entre seu código e a lateral esquerda do mesmo em simetria com todo o restante do conteúdo. O seu break está dentro de um elif, e ao executar o seu Loop while não vai quebrar a menos que este elif, o segundo no caso, seja executado, meu conselho é puxe ele para trás, na mesma linha do elif e independente de qual elif seja satisfeito seu programa vai parar quando o usuário escolher ""N"". Sei que isso pode ter sido apenas erro de digitação na hora de vir pra cá, mas é bom ficar atento, já tive muito trabalho no começo por não notar coisas pequenas assim.
Antes :
    elif soma>=30 or soma==39.9:
        print(""Seu imc é {} portanto voce esta com obesidade "".format(soma))
        break

Depois :
    elif soma>=30 or soma==39.9:
        print(""Seu imc é {} portanto voce esta com obesidade "".format(soma))
    
    break

","
            0
        ",,,['\npython\n']
540297,Erro ao importar biblioteca Requests no Python,"
Bom dia pessoal! Sou novato na área de programação e estou aprendendo a desenvolver em Python.
Para adquirir experiência, estou desenvolvendo alguns softwares de automação web com Selenium na empresa onde trabalho. Um dos softwares que estou desenvolvendo será para extrair dados do site da OLX por meio da API deles, e para isso eu iria usar a biblioteca Requests. Mas todas as vezes que tento importa sempre aparece o mesmo erro ""Requests dependency 'urllib3' must be version >= 1.21.1, < 1.22!"".

Para tentar solucionar, já reinstalei o Python, desinstalei as bibliotecas urllib3 e Requests e instalei novamente, instalei a biblioteca urllib3 nas versões 1.21.1 e 1.22 e até agora nada funcionou. Será que vocês já passaram por algo parecido e poderiam me ajudar a solucionar este erro? Muito obrigado desde já!
","
No Mac, tente isto: sudo pip install urllib3==1.23 sudo pip install requests
","
            -4
        ",,,"['\npython', 'web-scraping', 'python-requests\n']"
540288,Divisão de projeto Python em subpacotes suplementares,"
Estou tendo o seguinte erro no import dos submodulos. E solicito auxilio de voces.

----> 5 from incolumepy.python_tetris.db import sgbd
ModuleNotFoundError: No module named 'incolumepy.python_tetris.db'
ModuleNotFoundError: No module named 'incolumepy.python_tetris.forms'

Possuo 3 pacotes, com a estrutura apresentada abaixo. Sendo que os arquivos dunder init estão vazios. Não consigo importar os módulos (que possuem pseudo código) dos pacotes, sempre apresentam o erro mencionado.
├── incolumepy
│   └── python_tetris
│       ├── __init__.py
│       ├── run.py
│       └── version.txt
├── poetry.lock
├── pyproject.toml
├── README.rst
└── tests
    ├── __init__.py
    ├── __pycache__
    └── test_incolumepy_python_tetris.py

incolumepy.python_tetris.db
├── incolumepy
│   ├── __init__.py
│   └── python_tetris
│       ├── db
│       │   ├── __init__.py
│       │   ├── sgbd.py
│       │   └── version.txt
│       ├── __init__.py
├── poetry.lock
├── pyproject.toml
├── README.rst
└── tests
    ├── __init__.py
    └── test_incolumepy_python_tetris_db.py

incolumepy.python_tetris.forms
├── incolumepy
│   ├── __init__.py
│   └── python_tetris
│       ├── forms
│       │   ├── __init__.py
│       │   ├── square.py
│       │   ├── trapeze.py
│       │   └── version.txt
│       └── __init__.py
├── poetry.lock
├── pyproject.toml
├── README.rst
└── tests
    ├── __init__.py
    └── test_incolumepy_python_tetris_forms.py

",,,,,"['\npython', 'python-3.x', 'poetry\n']"
540276,"Como sortear números de uma lista, de forma aleatória e sem repetições?","
Como faço para sortear 9 números em uma lista de 15, sem repetir os números sorteados?
Utilizo o Python 3.8.
import random
for c in range (1, 16):
    n1 = str(input(""Digite um nº: ""))
l = [n1]
random.shuffle(l)
print(""NÚMEROS ESCOLHIDOS: "", l)
print("" "", l)
print("" "", l)
print("" "", l)
print("" "", l)
print("" "", l)
print("" "", l)
print("" "", l)
print("" "", l)

","
Basta usar random.sample, que já garante que não haverá repetição.
Mas antes um detalhe. Você está pedindo que o usuário digite 15 números, então você precisa guardar todos eles na lista (da forma que você fez, somente o último é colocado nela). E se vai usar o range somente para executar algo várias vezes (e tanto faz o valor usado na iteração), basta fazer apenas range(15).
E input já retorna uma string, então fazer str(input(...)) é redundante e desnecessário. Se quer garantir que foi digitado um número, você pode usar int para converter a string para número (e capturar o ValueError caso não seja digitado um número).
Então ficaria assim:
from random import sample

numeros = []
for _ in range(15):
    while True:
        try:
            numeros.append(int(input(""Digite um nº: "")))
            break # interrompe o while e vai para a próxima iteração do for
        except ValueError:
            print('não foi digitado um número')

print(""NÚMEROS ESCOLHIDOS: "", sample(numeros, 9))

No for eu uso _, que é uma convenção do Python para indicar que a variável não é usada no loop (pois só me interessa executar algo 15 vezes).
Depois, o while executa enquanto não for digitado um número (pois aí cai no bloco except). Se for digitado um número, este é adicionado na lista, o break interrompe o while e ele vai para a próxima iteração do for.
Por fim, tendo a lista com os 15 números, eu uso random.sample para obter os 9 números, sem repetição.
","
            5
        ","
Para resolver esta questão podemos utilizar o seguinte código:
from random import sample


def sorteio_sem_repeticoes():
    return sorted(sample(range(1, 16), 9))


print(sorteio_sem_repeticoes())

Observe que os valores neste código já estão pré-fixados, ou seja, este código  criará uma lista com 9 elementos sorteados de dentro do intervalo fechado [1, 15].
Agora se você deseja realizar um sorteio com um número de sorteados variados e com range diferente, você pode utilizar o seguinte código:
from random import sample


def sorteio_sem_repeticoes(n, i, f):
    return sorted(sample(range(i, f + 1), n))


num = int(input('Desejas sortear quantos números? '))
ini = int(input('Digite o limite inicial do range: '))
fin = int(input('Digite o limite final do range: '))

print(sorteio_sem_repeticoes(num, ini, fin))

Neste código devemos informar a quantidade de valores a ser sorteados e os limites inferior e superior do range. Importante observar que com este último código podemos sortear n valores de um range cujo i corresponde ao limite inferior do range e f corresponde ao limite superior.
","
            0
        ","['\npython', 'python-3.x', 'lista', 'random\n']"
540211,Como inverter caixa alta e caixa baixa dos caracteres de uma string sem usar o isupper()?,"
Como eu faço para saber se os caracteres de uma string são maiúsculos sem usar o str.isupper()?
O meu código está assim, mas na parte de verificar o caixa dos caracteres eu não consigo fazer a verificação.
retorno = ''
for caractere in frase:
    #if caractere.isupper():
    if frase == frase.upper():
        retorno += caractere.lower()
    else:
        retorno += caractere.upper()
return retorno

frase
 'cAmInHaDa LoNgA'

retorno esperado
'CaMiNhAdA lOnGa'

retorno atual
'CAMINHADA LONGA'  

","
Como dito no comentário do Zé Reis M. Olliver se você quer inverter o caixa da frase está fazendo a validação no objeto errado, mude:
if frase == frase.upper():
para
if caractere == caractere.upper():
Exemplo corrigido:
frase = 'cAmInHaDa LoNgA'
retorno = ''
for caractere in frase:
    if caractere == caractere.upper():
        retorno += caractere.lower()
    else:
        retorno += caractere.upper()
print(retorno)
#CaMiNhAdA lOnGa

Tese o exemplo no ide.one
Uma alternativa interessante é utilizar o método str.translate() que retorna uma cópia da string na qual cada caractere foi mapeado através da tabela de tradução.
Essa tabela de tradução pode ser construída com o método estático str.maketrans() retorna uma tabela de tradução usável por str.translate(), um caso de uso desse método é a passagem de dois argumentos, x e y, strings de igual comprimento onde no dicionário resultante cada caractere em x será mapeado para o caractere na mesma posição em y. No caso passe duas listas combinando contrariamente entre si string.ascii_lowercase e string.ascii_uppercase.
import string
frase = 'cAmInHaDa LoNgA'

trans = str.maketrans(
  string.ascii_lowercase + string.ascii_uppercase,
  string.ascii_uppercase + string.ascii_lowercase
)

print(frase.translate(trans))
#CaMiNhAdA lOnGa

Tese o exemplo no ide.one
","
            1
        ",,,"['\npython', 'string\n']"
540203,Como criar um markdown simples com PHP?,"
Gostaria de criar um markdown simples, para negrito e itálico por enquanto apenas, por exemplo:

**foo** vira <b>foo</b>
__bar__ vira <i>bar</i>

Claro que alguns detalhes são necessários, por exemplo em itálico isto não pode funcionar:
 __ foo __

Pois está separado, a primeira e a última letra devem ser grudadas aos ""delimitadores"", no entanto isso seria válido:
 __foo bar__     => <i>foo bar</i>
 __f o o b a r__ => <i>f o o b a r</i>

Pois espaços entre a primeira a última letra são aceitos.
No momento eu criei isto:

Negrito:
$str = preg_replace('#(^|[^\*])\*\*([^\s\*]([^\*]+?)?[^\s\*])\*\*([^\*]|$)#', '$1<b>$2</b>$4', $str);

Italico:
$str = preg_replace('#(^|[^_])__([^\s_]([^_]+?)?[^\s_])__([^_]|$)#', '$1<i>$2</i>$4', $str);


Ambas são bem semelhantes e parecem funcionar bem, para explicar melhor a regex:
(^|[^_])__([^\s_]([^_]+?)?[^\s_])__([^_]|$)

  ^     ^   ^     ^        ^     ^   ^
  |     |   |     |        |     |   |
  |     |   |     |        |     |   |
  |     |   |     |        |     |   |
  |     |   |     |        |     |   |
  |     |   |     |        |     |   +-- verifica se após o delimitador não é underscore ou se é o final da string
  |     |   |     |        |     |
  |     |   |     |        |     +-- verifica se o delimitador são 2 underscores
  |     |   |     |        |
  |     |   |     |        +-- o ultimo caractere antes do delimitador não pode ser espaço e nem underscore
  |     |   |     |
  |     |   |     +-- pega qualquer coisa que não seja underscore, esse grupo é opicional
  |     |   |
  |     |   +-- verifica se o que vem após o primeiro delimitador é diferente de espaço e diferente de underscore
  |     |
  |     +-- verifica se o delimitador são 2 underscores
  |
  +-- checa se é o começo da string ou se o que vem antes do delimitador é diferente de underscore _

Exemplo no ideone: https://ideone.com/PL8nTA
No entanto da forma que fiz a regex não é possível fazer isto:
__foo_bar__

E nem isto:
**foo*bar**

Gostaria de alguma sugestão de melhoria sobre isto ou até então algo totalmente diferente disto, mesmo que seja sem regex.
","
A regex não aceita __foo_bar__ por causa da classe de caracteres negados [^_], que corresponde a ""qualquer caractere que não seja _"". E como foo_bar tem um _, não é encontrado um match.
Para que aceite este caso, temos que incluir outra condição, que é ""o caractere _, desde que não tenha outro _ depois"". Podemos fazer isso com um lookahead negativo: _(?!_).
Sendo assim, este trecho ficaria [^_]|_(?!_) (um caractere que não é _, ou um _ desde que não tenha outro _ depois).

Outro detalhe é que a regex não aceita casos com somente um caractere entre os delimitadores, como por exemplo __a__ (veja). Isso é porque o [^\s_] aparece duas vezes: uma depois do delimitador inicial, e outra antes do delimitador final. Por isso a regex exige que haja pelo menos dois caracteres entre os delimitadores.
Podemos resolver isso usando um lookahead negativo logo depois do delimitador inicial: troco o [^\s_] por (?![\s_]) (ou seja, não pode ter espaço nem _ depois). A diferença é que o lookahead só olha o que tem à frente, mas não consome o caractere (então se tiver somente um, este será consumido pelos trechos seguintes da regex, permitindo o caso que só tem um caractere).
Também podemos trocar as verificações do início e fim para um lookahead e um lookbehind, para não criar grupos à toa e não precisar incluí-los na substituição. E por fim, deixar apenas um grupo de captura para o conteúdo entre os delimitadores, transformando os demais em grupos de não-captura, trocando o ( por (?:. Assim fico com somente um grupo, e na substituição posso fazer apenas <i>$1</i>.
Ficaria assim:
(?<=^|[^_])__((?![\s_])(?:(?:[^_]|_(?!_))+?)?[^\s_])__(?=[^_]|$)

Veja aqui a regex funcionando
Resumindo:

(?<=^|[^_]): lookbehind para verificar se antes do delimitador tem o início da string ou um caractere que não seja _
(?![\s_]): lookahead negativo para verificar se depois do delimitador não tem espaço nem _
[^_]|_(?!_): um caractere que não seja _, ou um _ desde que não tenha outro _ depois
[^\s_]: um caractere que não é espaço nem _
(?=[^_]|$): lookahead para verificar se depois do delimitador tem o final da string ou um caractere que não seja _

Para os delimitadores **, basta usar a mesma lógica. Lembrando que o * possui significado especial em regex (é um quantificador que indica ""zero ou mais ocorrências"") e deve ser escapado com \ (ficando \*), exceto se estiver entre colchetes. Ou seja:
(?<=^|[^*])\*\*((?![\s*])(?:(?:[^*]|\*(?!\*))+?)?[^\s*])\*\*(?=[^*]|$)

Testando:
$q = ""
Boa __tarde__ **Bacco**, isto é um **teste** com diversos **negritos** e __sublinhados__

__**um** dois__
**__um__ dois**

-- funciona
__foo bar__
__f o o b a r__
**teste __lorem ipsum__ dolor sit**
__teste **lorem ipsum** dolor sit__
abc__xyz__teste

-- não funcionava na primeira versão
__foo_bar__
__a__
__*__
__foo_*bar__


-- não é para funcionar
__ foo bar__
__foo bar __
_foo__
__ foo __
_foo_
__foo_
__ __
__a____
____a__
_____

-- corner case: aninhado (não tratei pois não sei o que deveria fazer)
__abc__xyz__123__
__abc __xyz__ 123__

-- corner case: escapes
__\___
__a\___
__\_abc__
"";

$q = preg_replace('#(?<=^|[^*])\*\*((?![\s*])(?:(?:[^*]|\*(?!\*))+?)?[^\s*])\*\*(?=[^*]|$)#', '<b>$1</b>', $q);
$q = preg_replace('#(?<=^|[^_])__((?![\s_])(?:(?:[^_]|_(?!_))+?)?[^\s_])__(?=[^_]|$)#', '<i>$1</i>', $q);

var_dump($q);

Saída:
string(637) ""
Boa <i>tarde</i> <b>Bacco</b>, isto é um <b>teste</b> com diversos <b>negritos</b> e <i>sublinhados</i>

<i><b>um</b> dois</i>
<b><i>um</i> dois</b>

-- funciona
<i>foo bar</i>
<i>f o o b a r</i>
<b>teste <i>lorem ipsum</i> dolor sit</b>
<i>teste <b>lorem ipsum</b> dolor sit</i>
abc<i>xyz</i>teste

-- não funcionava na primeira versão
<i>foo_bar</i>
<i>a</i>
<i>*</i>
<i>foo_*bar</i>


-- não é para funcionar
__ foo bar__
__foo bar __
_foo__
__ foo __
_foo_
__foo_
__ __
__a____
____a__
_____

-- corner case: aninhado (não tratei pois não sei o que deveria fazer)
<i>abc</i>xyz<i>123</i>
__abc <i>xyz</i> 123__

-- corner case: escapes
__\___
__a\___
<i>\_abc</i>
""

Como pode ver, ainda há corner cases a serem tratados:

delimitadores aninhados: __abc__xyz__123__ e __abc __xyz__ 123__, que foram substituídos respectivamente por <i>abc</i>xyz<i>123</i> e __abc <i>xyz</i> 123__ (não sei como os parsers costumam tratar esses casos)
escapes: \_deveria ser tratado com um caractere comum, por exemplo, __a\___ deveria se tornar <i>a_</i> - veja aqui uma tentativa frustrada de resolver, a solução definitiva creio que será bem mais complicada (tem uma bem complicada a seguir)

Enfim, o ideal é usar um parser de Markdown, regex nem sempre é a melhor solução.

Só para constar, segue uma alternativa para tratar os escapes:
$regex = '#(?<=^|[^_])__(?![\s_])(?=[^_])((?>[^\\\\_]*)(?>(?:(?>\\\\_)|(?>(?!__)_[^_]*))[^\\\\_]*)*)(?<![\s\\\\]|(?=\\\\)_)__(?=[^_]|$)#';
$q = preg_replace($regex, '<i>$1</i>', $q);
$q = preg_replace('/\\\\([*_])/', '$1', $q);

Começando pela segunda regex, que é mais fácil. Ela verifica se tem um \ seguido de _ ou *, e remove o \. Mas a complicada mesmo é a primeira, que verifica se tem um _ escapado. Quebrando-a em partes (e colocando alguns espaços para ficar mais fácil de entender):
(?<=^|[^_]) __ (?![\s_])  <-- delimitador inicial
(?=[^_])  <-- verifica se tem pelo menos um caractere à frente (que não seja _)
(  <-- inicia grupo de captura (conteúdo que ficará entre as tags)
 (?> [^\\\\_]* )  <-- qualquer caractere que não seja _ nem \
 (?>
  (?:
    (?> \\\\_) |          <-- um escape (\_), ou
    (?> (?!__) _ [^_]* )  <-- um _ que não seja delimitador, seguido de caracteres que não são _
  )
  [^\\\\_]*   <-- qualquer caractere que não seja _ nem \
 )*
)
(?<![\s\\\\]|(?=\\\\)_) __(?=[^_]|$)  <-- delimitador final

Se quiser, você pode colocá-la no código da maneira acima, usando a flag x para que os espaços e quebras de linha sejam ignorados:
$regex = '#(?<=^|[^_]) __ (?![\s_])
(?=[^_])
(
 (?> [^\\\\_]* )
 (?>
  (?:
    (?> \\\\_) |
    (?> (?!__) _ [^_]* )
  )
  [^\\\\_]*
 )*
)
(?<![\s\\\\]|(?=\\\\)_) __(?=[^_]|$)#x';

Esta regex segue a técnica de unroll the loop, na qual você deve identificar as seguintes partes:

delimitadores inicial e final: usei a mesma ideia da regex anterior, que é usar lookaheads e lookbehinds para verificar o que tem antes e depois do __ (ou seja, verificar se não tem espaço depois do __ inicial, etc). Só adicionei mais alguns casos para verificar se um dos _ não está escapado com \
""normal"": o que acontece com mais frequência entre os delimitadores. No caso, são os caracteres que não sejam \ nem _
""especial"": o que não é normal. No caso, é um escape (\_), ou um _ sozinho (desde que não haja outro _ depois)

A estrutura geral da regex é:
delimitador normal* (?:especial normal*)* delimitador

Como tanto o normal quanto o especial estão marcados com * (zero ou mais ocorrências), a regex aceitaria casos como ____, então eu adicionei o lookahead (?=[^_]) logo depois do delimitador inicial, para garantir que tem pelo menos um caractere.
Também são usados grupos atômicos (marcados por (?>) para reduzir um pouco o backtracking.
Esta regex ignora os casos de escape (\_), mas não os remove, por isso precisei de outra regex para removê-los depois.
Veja aqui esta regex funcionando. Apesar de funcionar, devem ter outros corner cases que ela não pega. Mas mesmo que não tivesse, ainda sim acho que não vale a pena, e usar um parser continua sendo a melhor opção.
","
            5
        ","
Depois de vários testes eu criei uma solução, que acredito irá contemplar todos os casos de string identificando as corretas e erradas. Para isso, eu parti da seguinte premissa:
Casos que estão certos:
Entrada:
__correto__
__c o r r e t o__
__c_o_r_r_e_t_o__
__cor   re  to__
__co rre _to__
__a__

Saída:

correto
c o r r e t o
c_o_r_r_e_t_o
cor   re  to
co rre _to
a

Casos que estão errados:
__errado __
__ errado__
__errado___
___errado__

Isso vale para os casos em negrito
Usando esta regex:
(.?)(__([^_\s]+\s*_?)*[^\s_]+__)([^_]|$)

junto com preg_match_alldo PHP, podemos analisar os grupos da seguinte forma:
(.?) ---> pega qualquer caractere ou não, antes do próximo grupo

(__([^_\s]+\s*_?)*[^\s_]+__)  ([^_]|$) --> verifica se após o delimitador não é underline ou se é o final da string
^   ^             ^      ^
.   .             .      ----------> finaliza grupo com 2 underlines
.   .             .
.   .             ----------> pega um ou mais caracteres diferente de espaço e undeline
.   .
.   ------------------> este grupo pode ter ou não qualquer caractere seguido de 1 ou mais espaços(ou não) seguido de 1 underline(ou não)
.
----------------> inicia grupo com 2 underline

Com a ajuda do PHP, faremos isso:
    $string = ""Boa __tarde__ **Bacco**, isto é um **teste** com diversos **negritos** e __sublinha_dos__

    __**um** dois__  **__um__ dois**
    __aqui nao_funciona __ __ nem_aqui,pois está errado__
    __aqui está certo__ ___errado__ __certo__"";

    preg_match_all(""/(.?)(\*\*([^\*\s]+\s*\*?)*[^\s\*]+\*\*)([^\*]|$)/"", $string, $resultNegrito);

    $negrito = $resultNegrito[2];
    $iniNegrito = $resultNegrito[1]; // valores do grupo (.?)
    for($x = 0; $x < count($negrito); $x++){
        if($iniNegrito[$x] != ""*""){
            $res = ""<b>"".substr($negrito[$x],2,strlen($negrito[$x]) -4).""</b>"";
            $string = str_replace($negrito[$x],$res,$string);
        }
    }

    preg_match_all(""/(.?)(__([^_\s]+\s*_?)*[^\s_]+__)([^_]|$)/"", $string, $resultSublinhado);

   $sublinhado = $resultSublinhado[2];
    $iniSublinhado = $resultSublinhado[1]; // valores do grupo (.?)
    for($x = 0; $x < count($sublinhado); $x++){
        if($iniSublinhado[$x] != ""_""){
            $res = ""<u>"".substr($sublinhado[$x],2,strlen($sublinhado[$x]) -4).""</u>"";
            $string = str_replace($sublinhado[$x],$res,$string);
        }
    }

    echo $string;

IDEONE
ESCAPES..
Neste script você consegue usar barras invertidas para criar textos sublinhados ou em negrito que estão fora do padrão. Imagine que usuário queira sublinhar isto: __METHOD__ .Para isso, basta ele aplicar assim: __\_\_METHOD_\_\__
Usando o stripslashes do PHP você retira as barras invertidas usadas deixando o texto limpo.
Um exemplo com o texto:
Para gerar um construtor nas recentes **\*versões do php*\**, 
usa-se o __**\_\_construct()**__ 
**esta é a __forma correta__** para usar. 

No **php** Existe a possibilidade de usar a 
contante mágica __\_\_FUNCTION_\_\__ para pegar o nome da função. 

__Neste script__, se eu quiser usar um **\*escape*\** para a 
barra inversa dentro de um sublinhado ou negrito, basta 
multiplica-lo por 3. Assim:

            __\\\_teste_\\\__

A saída usando echo stripslashes($string) será:


Para gerar um construtor nas recentes <b>*versões do php*</b>, usa-se o <u><b>__construct()</b></u> <b>esta é a <u>forma correta</u></b> para usar. 

No <b>php</b> Existe a possibilidade de usar a contante mágica <u>__FUNCTION__</u> para pegar o nome da função. 

<u>Neste script</u>, se eu quiser usar um <b>*escape*</b> para a barra inversa dentro de um sublinhado ou negrito, basta multiplica-lo por 3. Assim:

<u>\_teste_\</u>



","
            3
        ","['\nphp', 'regex\n']"
540093,Error cropped Video openCV,"
Estou tendo esse erro quando uso o corte de uma região em um vídeo.
Alguém pode me ajudar?
import cv2

cap = cv2.VideoCapture('t8.mp4')

x=0 
y=0
w=650
h=750

while(cap.isOpened()):
    ret, frame = cap.read()
    crop_frame = frame[y: y+h, x: x+w]

    # Just to see the video in real time          
    cv2.imshow('frame',frame)
    cv2.imshow('croped',crop_frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release() cv2.destroyAllWindows()

crop frame = frame[y: y+h, x: x+w] TypeError: 'NoneType' object is not subscriptable

","
Consegui resolver o problema:
import cv2  
filename = ""\\...""
Image= cv2.VideoCapture(filename)

x=0 
y=0 
w=650 
h=750

success, frame = Image.read()

while success :
    success, frame = Image.read()
        
    if success:
        cropeedIMAGE = frame[y:y+h, x:x+w]
        cv2.imshow('finger', cropeedIMAGE)
        
    if cv2.waitKey(10) & 0xFF == ord('q'):
            break

cv2.destroyAllWindows()

","
            1
        ",,,"['\npython', 'opencv\n']"
540042,Como vejo as coordenadas do mouse na tela?,"
Estou aprendendo sobre a lib pyautogui do Python e nisso gostaria de saber exatamente onde está o ponteiro do mouse para poder efetuar o click com precisão.
","
Basta usar a função .position() do pyautogui para obter o x e y do ponteiro em relação a tela. por exemplo:
print(pyautogui.position())

Recomendo que utilize essa função com o sleep para dar tempo de você colocar o ponteiro em cima do botão.
Caso queira um click ainda mais preciso recomendo você utilizar a função .locateCenterOnScreen ou .locateAllOnScreen. Você consegue ver mais sobre essas funções na documentação do pyautogui:
https://pyautogui.readthedocs.io/en/latest/screenshot.html
","
            0
        ",,,"['\npython', 'coordenadas', 'pyautogui\n']"
540034,Executável Python não funciona o chromedriver,"
Fiz um código que utiliza o caminho até o arquivo chromedriver e funciona normalmente no meu computador. Criei um programa executável, mas como o caminho que está o chromedriver é diferente em outros computadores, não funciona. Alguém sabe como resolve isso?
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
chrome_options = Options()
chrome_options.add_argument(""--disable-notifications"")
driver = webdriver.Chrome(options=chrome_options, executable_path=r'C:\Users...\chromedriver_win32\chromedriver')
","
Recomendo que você utilize o Chromedriver.exe na raiz da pasta de sua aplicação, assim vai evitar esse tipo de erro. Coloque o chromedriver dentro da pasta de sua aplicação em desenvolvimento (No mesmo lugar que seu main.py), logo em seguida mude seu código de:
driver = webdriver.Chrome(options=chrome_options, executable_path=r'C:\Users...\chromedriver_win32\chromedriver')

Para:
driver = webdriver.Chrome(options=chrome_options)

Dessa forma o selenium vai procurar o arquivo do chromedriver dentro de sua raiz e vai evitar qualquer tipo de problema. Após ter feito isso, basta deixar sua aplicação executável, e logo em seguida pegue o arquivo do Chromedriver e coloque na pasta onde está o seu arquivo .exe (Executável).
","
            0
        ",,,"['\npython', 'selenium\n']"
540033,Criar um fluxograma via web (python) utlizando dados de uma linha de um Dataset,"
Preciso criar um fluxograma na web (mais ou menos como na imagem abaixo) ,com setas que conectem estes quadros, e  também que possa ""puxar"" as informações de uma das linhas de um dataset, para então ""copiar"" cada dado de cada coluna do dataset para cada um dos quadros (no lugar das palavras Processo).    E que seja dinâmico, para após qualquer atualização dos dados eles também possam mudar na web.  
A linguagem de programação utilizada será python e tenho o conhecimento básico da linguagem.
Mas não faço ideia de como posso desenvolver isto via web?  O que sugerem que eu precise aprender para desenvolver algo assim?   Eu não tenho ideia se aprender Django ou Flask poderia me ajudar, se preciso aprender html,css...... Estou bem perdido pra identificar quais recursos preciso aprender para de fato realizar este desenvolvimento. 
EM RESUMO, preciso saber como criar um fluxograma via web, no qual a inclusão e atualização de dados em cada quadro seja dinâmica com meu dataset, e não estática, com a linguagem python.
Ficaria muito grato se alguém tiver recomendações, dicas de como/onde começar, o que utilizar... obrigado desde já!!!

","
Já passei por um problema similar na empresa onde trabalho e sei bem como você está se sentindo. O que recomendo que você veja e estudo logo de começo caso você não saiba e banco de dados relacionais (SQL). Se souber bem como montar um banco de dados relacionado vai evitar qualquer tipo de problema futuro.
Acredito que o Flask não iria funcionar bem para o que você quer, ele fica melhor com aplicações básicas e não complexas. Para o que você está querendo a única coisa que vem em minha mente é o Django, ele foi desenvolvido para o que você está querendo fazer, com ele você consegue fazer um sistema ERP, CRM, de logística e etc. Com o Django você vai conseguir criar tabelas para o seu banco de dados e conecta-las por lá mesmo. Também vai consegui extrair, adicionar, deletar ou visualizar determinado dado de seu banco de dados (O famoso CRUD), logo após ter aprendido a fazer isso, você vai moldar os dados baseado no que você precisa, ai o limite é o céu e sua imaginação de como vai querer criar seu sistema.
Caso você seja iniciante no Python, recomendo que você estude um pouco de POO (Programação orientada a objetos) porque o Django é praticamente todo baseado em Objeto, e caso você não saiba pelo menos um pouco sobre isso, você pode ficar meio perdido e vai terminar desistindo de seu projeto.
Resumo
Aprenda primeiro a criar um banco de dados consistente e lógico, logo em seguida estudo um pouco sobre POO e depois é cair de cabeça no Django.
","
            -1
        ",,,"['\npython', 'aplicação-web', 'dataset\n']"
539959,Como usar Python para apagar todas linhas de um .txt e reescrever elas [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Existe alguma forma de sobrescrever uma linha específica de um arquivo de texto usando Python?

                                (2 respostas)
                            

Fechada há 3 meses.



A ideia é a seguinte: criei um código para que o úsuario carregue um .txt em que teremos uma informação e logo em seguida a quantidade de pontos que ela carrega, tipo assim:
user1 | Pontos = 30
user2 | Pontos = 22
user3 | Pontos = 11

Se o úsuario armazenar o valor 30 dentro da variável points_user, ele vai escrever somente as informações que conterem um valor >= 30. Porém, eu não sei como posso APAGAR todos as informações deste .txt e reescever elas de acordo com a variável points_user.
 print('- Deixe o .txt na mesma pasta que o executável!')
    points_user = int(input('- Filtrar por (PONTOS): '))
    
    file = Path('info.txt')
    if file.is_file():
        print('\nArquivo encontrado! :D')
        with open(file, 'r') as file:
            length_file = len(file.readlines())
        print(f'Ele tem {length_file} linhas.')
        # TXT EDIT
        info_main = list()
        with open('info.txt', 'r+') as file_main:
            for info in file_main:
                info_main.append(info)
            for position, i in enumerate(info_main):
                if int(info_main[position].split()[-1]) >= points_user:
                    file_main.write(info_main[position])
    else:
        print('Arquivo não econtrado! :(')

","
Para a estrutura de arquivo apresentada na pergunta uma possibilidade de manipulação é tratá-lo, tanto para a leitura quanto para escrita, como se fosse um arquivo CSV tal que o delimitador de campos seja o caractere |.
A ideia então é entender o arquivo texto...
user1 | Pontos = 30
user2 | Pontos = 22
user3 | Pontos = 11

... como se fosse uma tabela...




coluna0
coluna1




user1
Pontos = 30


user2
Pontos = 22


user3
Pontos = 11




...para que então seja feito o devido tratamento e a filtragem linha a linha, e posterior retorno dos dados ao arquivo de origem.
A linguagem python possui suporte nativo para trabalho com arquivos CSV.
A função csv.reader() retorna um objeto leitor que irá iterar sobre as linhas no arquivo CSV fornecido. Essa função aceita como parâmetro delimiter uma string usada para separar campos, o padrão é , mas nesse caso em específico será usado o caractere | como argumento.
A filtragem dos dados pode ser realizada com a função embutida filter() que a partir de uma função de filtragem constrói um iterador para os elementos de um iterável cujo a função retorna True.
Para salvar de volta no arquivo a função csv.writer retorna um objeto de escrita responsável por converter os dados em strings delimitadas.
import csv

dados = []                                                 #Inicia a lista que receberá os dados do arquivo.
with open('info.txt', 'rt', newline='') as f:              #Abre o arquivo como  text e para leitura....
    linhas = csv.reader(f, delimiter='|')                  #carrega as linhas do CSV onde os campos estão separados po |
    for l in linhas:                                       #Para cada linha l do CSV...
        dados.append((l[0], int(l[1].strip('Pntos= '))))   #Cria uma tupla(coluna0, o valor inteiro após Pontos = em coluna1 ) 

points_user = int(input('- Filtrar por (PONTOS): '))               #Coleta do usuário o limite para filtragem.

dados_filtrados = set(filter(lambda d: d[1]>=points_user, dados))  #Filtra as linhas cujo coluna1>=points_user

saida = [(k, f' Pontos = {v}') for (k,v) in dados_filtrados]       #Converte os dados filtrados numa lista de tuplas no formato para gravar no arquivo.

with open('info.txt', 'wt', newline='') as f:                       #Abre o arquivo no modo texto de escrita.
    writer = csv.writer(f, delimiter='|', quoting=csv.QUOTE_NONE)   #Obtem o objeto especializado na escrita CSV.
    writer.writerows(saida)                                         #Salva os dados filtrados de volta no aquivo.

Teste o exemplo no Repl.it
","
            2
        ",,,['\npython\n']
539951,Erro ao tentar executar os programas no Pycharm,"
Bom Dia Pessoal do fórum, tudo bem? estou tentando executar os programas do python no Pycharm, mas está aparecendo uma mensagem de erro, como faço para corrigir esse erro, alguem sabe? abaixo, segue print do erro

Se alguem puder me ajudar agradeço!
","
Conheço duas formas que podem resolver seu problema:
i. Segundo botão, dentro do compilador e selecione ""Run[nome do programa]""

ii. Clicando em Run e depois em Edit Configuration


Após isso, clique em adicionar uma nova configuração (no símbolo de +) e selecione o arquivo em ""Script Path)

","
            0
        ",,,"['\npython', 'python-3.x\n']"
539947,Acessar arquivo csv dentro do bucket minio usando python,"
Tenho uma imagem do Minio docker rodando na minha maquina e estou tentando acessar o arquivo csv pelo jupyter mas nao estou conseguindo. Estou usando o boto3
s3 = boto3.client('s3'
    ,endpoint_url = endpoint_url
    ,aws_access_key_id = ACCESS_KEY
    ,aws_secret_access_key = SECRET_KEY
   )

O que estou tentando fazer seria algo como
df = spark.read.csv(s3+'/landing/olist_products_dataset.csv', header = True, encoding='UTF-8')
landing eh o nome do bucket e s3 é onde estao salvos os dados de acesso. O que estou fazendo errado?
Não sei se é possivel fazer dessa maneira ou se eu teria que fazer o download do arquivo que eu quero manipular para uma pasta fazer o que preciso fazer e subir o arquivo modificado/alterado para o minio novamente.
A razao que eu quero ler o arquivo do minio é para criar um dataframe e dele converter para parquet.
","
Não sei se é o meio correto, mas acabei resolvendo meu problema assim.
criei uma pasta temp onde eu faco o download do arquivo para que eu quero manipular para essa pasta.
client.fget_object(
   obj.bucket_name,
   obj.object_name,
   'temp/'+obj.object_name,
)

Depois que eu tenho esse arquivo na pasta, dai faco as modificacoes que vejo neessarias, converto em parquet e faco upload para outra pasta.
client.fput_object(""bucket"",filenamemod.parquet,""parquet_saved/filenamemod.parquet"")

","
            0
        ",,,"['\npython', 'docker', 'aws', 'data-science\n']"
539945,Como Automatizar Interação em Janelas?,"
Gostaria de manipular uma janela utilizando o Python
O passo que eu gostaria de fazer é o seguinte:

Abrir o programa que está no Windows 10

Clica em um radio button da janela

Preencher um campo

Dar enter


O código que estou tentando fazer é esse:
import pyautogui
import os
import time

programa = 'C:\\Program Files (x86)\\Software\Programa.exe'
os.system('""' + programa + '""')

time.sleep(10)
pyautogui.write('meu texto')
pyautogui.click(1258,263)

Mas nada acontece
Ai eu pensei que pudesse em relação a janela que abre e focar na janela, então adicionei o seguinte:
import pyautogui
import os
import time
import pygetwindow

programa = 'C:\\Program Files (x86)\\Software\Programa.exe'
os.system('""' + programa + '""')

time.sleep(10)
window = pygetwindow.getWindowswithTitle(title)[0]
window.activate()
pyautogui.write('meu texto')
pyautogui.click(1258,263)

O script só continua quando fecho a janela.
","
Pelo que pude ver em seu código existem 3 problemas, fazendo as correções será possível executar o seu script.
Primeira coisa é o nome de um método utilizado está errado:
window = pygetwindow.getWindowswithTitle(title)[0]

Que deveria ser substituída por:
window = pygetwindow.getWindowsWithTitle(title)[0]

Repare que aqui a letra ""w"" deve ser escrita em maiúsculo.
Outra mudança necessária é a maneira que fez a chamada para iniciar o programa, desta forma:
os.system('""' + programa + '""')

O sistema fica aguardando a saída da execução do programa que passou como parâmetro. E só vai continuar a execução do seu código após o programa ser fechado. No momento que o programa está aberto ele não possui nenhum valor de retorno, somente após ele terminar de executar (finalizado com sucesso com exit code == 0 e finalizado com erro exit code != 0, esses valores de retorno tem relação com a execução de processos em um sistema operacional). Como esta é uma operação síncrona o seu script fica esperando este retorno, antes de poder continuar.
Dito isto uma maneira de fazer o seu programa funcionar é modificar esta linha para adicionar o start ao inicio da string. Ficando desta forma:
os.system('start """" ""' + programa + '""')

Ou utilizar outro método para iniciar o programa, como por exemplo utilizar o módulo subprocess ou o os.startfile que vai iniciar um arquivo com uma aplicação associada àquele arquivo.
Fazendo desta forma então será possível executar o seu programa, segue um exemplo:
import pyautogui
import os
import time
import pygetwindow

programa = r'C:\WINDOWS\system32\notepad.exe'
os.system('start """" ""' + programa + '""')
#ou usar 
#os.startfile(programa)
directory_path = os.path.join(os.environ['USERPROFILE'],'Documents')
time.sleep(5)

window = pygetwindow.getWindowsWithTitle('Untitled')[0]
window.activate()
pyautogui.write('meu texto')
pyautogui.hotkey('ctrl', 's')

pyautogui.write('{}\{}'.format(directory_path,'oi.txt'))
pyautogui.hotkey('alt', 's')

Agora deve haver um arquivo oi.txt salvo em: C:\Users\<usuário>\Documents
Neste caso a pasta <usuário> é dependente do usuário logado e é diferente para cada pessoa que está logada no sistema operacional (isso já é tratado no script), outra coisa é que da maneira que foi escrito este script só vai funcionar em sistemas operacionais Windows. Pois o programa notepad (que está localizado naquele diretório) só existe no Windows.
Este programa vai fazer os seguintes passos:

Abrir o notepad e aguardar 5s
Pegar a primeira janela que possui o título ""Untitled""
Digitar o texto: ""meu texto"" no Notepad.
Salvar o arquivo oi.txt no diretório ""C:\Users\<usuário>\Documents""

Segue a documentação de apoio necessária para interagir com as libs pygetwindow e pyautogui
","
            3
        ",,,"['\npython', 'python-3.x', 'pyautogui\n']"
539902,"Quando é uma caixa de texto funciona, porem quando é para localizar não -python -pyautogui -time","
Estou fazendo um código que funciona basicamente assim:
Ele aperta em uma lista e aperta algumas iniciais para identificar com maior facilidade o item.
Porêm o pyautogui ele simula uma tecla certo?
Então por que quando eu clico com o teclado físico ele identifica os itens e quando eu automatizo com o pyautogui ele NÃO FUNCIONA, sendo que ele basicamente faz a mesma coisa, poderia ser que a aplicação limita a entrada somente com o teclado físico?
# Apertar nos três risquinhos
pyg.moveTo(95, 59, duration=1)
time.sleep(1)
pyg.click()

# Apertar em Configurações
pyg.moveTo(180, 208,duration=0.5)
time.sleep(1)
pyg.click()
time.sleep(2)

# Clica em selecionar servidor 
pyg.moveTo(845, 605,duration=0.5)
time.sleep(1)
pyg.click()
time.sleep(1)

# Escolhendo o EU West
def servidorEUWest():
    pyg.hotkey(""shift"", ""a"")
    pyg.hotkey(""shift"", ""e"")
    pyg.press(""enter"")
    return print(""OK, EU West"")

# Escolhendo o US South
def servidorUSSouth():
    pyg.hotkey(""shift"", ""a"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.hotkey(""shift"", ""u"")
    pyg.press(""enter"")
    return print(""OK, US South"")

#  Ativando as funções certas
if True == certo:
    servidorUSSouth()

if False == certo:
    servidorEUWest()

","
Obrigado pela resposta, gostaria de comentar como resolvi meu problema para que se mais um tiver o problema, ele possa resolver com mais rapidez.
Usei o teclado virtual (natural do windows) para escrever, porém tive que fazer alguns ajustes, precisei adicionar uma tecla para ativar o teclado virtual, no meu caso foi o f2 (isso você faz nas configurações do teclado virtual) e então foi só programar a duração entre o f2, aí foi mais tentativa e erro, depois tive outro problema que não consegui fechar o teclado virtual (não entendi direito o motivo disso, mas deve ser por ser um aplicativo nativo do windows), aí para resolver isso eu precisei colocar para o pyautogui clicar com o botão direito na barra de tarefas onde iria ficar o teclado virtual, e apertar em fechar aplicativo.
E foi isso que consegui com meus testes
Espero ter ajudado se alguém tiver o mesmo problema 😉
","
            -2
        ","
Já tive casos que o sistema em que automatizei com pyautogui só aceitava a automação do python até um ponto, não continuava o processo, apenas teclando manualmente.
Agora, possa ser que seja o tempo entre um click ou outro, para isso, estabeleça bem os clicks e tempos entre eles, possa ser que rode! Aumente seu ""time.sleep()"" ou ""duration=0.5"", caso o erro persista, pode ser que você só prossiga manualmente, alguns servidores detectam isso como ""malware"" mesmo não sendo muitas vezes.
","
            -4
        ","['\npython', 'pyautogui\n']"
539886,transformar lista em dicionário python,"
Minha lista e criada a partir de um laço while e ela traz todos os dados referentes as partidas que estão acontecendo. Eu quero pegar essa lista e transformar em um dicionário.
Obs: O nuumero de partidas na pé fixo ele depende da quantidade de jogos que estão acontecendo no momento.
Segue um exemplo da lista que meu script gera:
['FC Atl�tico Cearense', 'time casa', 'Icasa', 'time visitante', '0', 'gols casa', '0', 'gols visitante', '53', 'ataque casa', '50', 'ataque visitante', '2', 'amarelo casa', '0', 'vermelho casa', '2', 'escanteio casa', '5', 'escanteio visitante', '0', 'vermelho visitante', '4', 'amarelo visitante', 'Crato', 'time casa', 'Maracan�', 'time visitante', '0', 'gols casa', '0', 'gols visitante', '9', 'ataque casa', '21', 'ataque visitante', '0', 'amarelo casa', '0', 'vermelho casa', '0', 'escanteio casa', '1', 'escanteio visitante', '0', 'vermelho visitante', '0', 'amarelo visitante', 'Am�rica de Natal', 'time casa', 'Santa Cruz RN', 'time visitante', '1', 'gols casa', '0', 'gols visitante', '75', 'ataque casa', '77', 'ataque visitante', '2', 'amarelo casa', '0', 'vermelho casa', '7', 'escanteio casa', '3', 'escanteio visitante', '0', 'vermelho visitante', '2', 'amarelo visitante']

Eu sou novo em Python, então depois de pesquisar vi aqui no forum que podia fazer da seguinte maneira:
y = 1
for elem in jogo[::2]:
    dic[jogo[y]] = elem
    y = y + 2

No entanto, quando eu executo não tenho o resultado pretendido, pois é retornado somente os dados da ultima partida,falaram nos comentários que é devido a duplicidade de chaves.
Segue o dicionário que é retornado usando esse método:
{'time casa': 'Am�rica de Natal', 'time visitante': 'Santa Cruz RN', 'gols casa': '1', 'gols visitante': '0', 'ataque casa': '75', 'ataque visitante': '77', 'amarelo casa': '2', 'vermelho casa': '0', 'escanteio casa': '7', 'escanteio visitante': '3', 'vermelho visitante': '0', 'amarelo visitante': '2'}

Eu gostaria de receber no dicionário todos os resultados da lista. Se alguém puder me ajudar ajustando esse método ou mostrando outra forma de como fazer isso eu agradeço
","
Uma alternativa que talvez resolva seu problema seria criar um dicionário de dicionários. No exemplo abaixo sugiro uma solução na qual criamos um dicionário 'jogos', no qual cada elemento será um dicionário com os dados de cada jogo. As chaves são identificadas como 'jogo 1', 'jogo 2', etc.
Aqui fazemos uso da lista que você havia postado.
    lista = ['FC Atlético Cearense', 'time casa', 'Icasa', 'time visitante', '0', 'gols casa', '0', 'gols visitante', '53', 'ataque casa', '50', 'ataque visitante', '2', 'amarelo casa', '0', 'vermelho casa', '2', 'escanteio casa', '5', 'escanteio visitante', '0', 'vermelho visitante', '4', 'amarelo visitante', 'Crato', 'time casa', 'Maracana', 'time visitante', '0', 'gols casa', '0', 'gols visitante', '9', 'ataque casa', '21', 'ataque visitante', '0', 'amarelo casa', '0', 'vermelho casa', '0', 'escanteio casa', '1', 'escanteio visitante', '0', 'vermelho visitante', '0', 'amarelo visitante', 'America de Natal', 'time casa', 'Santa Cruz RN', 'time visitante', '1', 'gols casa', '0', 'gols visitante', '75', 'ataque casa', '77', 'ataque visitante', '2', 'amarelo casa', '0', 'vermelho casa', '7', 'escanteio casa', '3', 'escanteio visitante', '0', 'vermelho visitante', '2', 'amarelo visitante']

Partindo da sua lista de jogos, criamos a lista 'indices', que irá conter o índice de cada instância do item 'time casa', que servirá para estabelecer os limites de cada item do dicionário 'jogos'.
Depois, criamos uma estrutura de repetição para popular o dicionário jogos, com base nas entradas da sua lista.
    indices = [i for i in range(len(lista)) if lista[i] == 'time casa']
    
    jogos   = {}

    for n, indice in enumerate(indices):
        if n < len(indices)-1:
            jogos[f'Jogo {n+1}'] = dict(zip(lista[indice:indices[n+1]:2],lista[indice-1:indices[n+1]:2]))
        else:
            jogos[f'Jogo {n+1}'] = dict(zip(lista[indice::2],lista[indice-1::2]))
    jogos

Pronto. Agora temos um dicionário com 3 itens, cada um deles um único dicionário com os dados dos jogos.

","
            1
        ",,,"['\npython', 'lista', 'dicionário\n']"
539860,Como achar o diretório correto de um arquivo usando python?,"
estou criando um programa que ache o diretório de um arquivo. Mas o problema é que eu até acho porém não é o caminho completo.
Código:
import os 

diretorio = os.path.dirname(os.path.realpath((""index.py"")))
print(diretorio)

Saída: C:\Users\luoll\Documents\Curso_Python
Caminho completo= C:\Users\luoll\Documents\Curso_Python\Projetos\QRcode_generator\index.py
Usando essa função ele só vai até a pasta Curso_Python, como posso chegar no caminho real do arquivo ""index.py""???
","
Uma maneira de resolver o problema é utilizando a função abspath
Segue um exemplo:
import os

diretorio = os.path.abspath('main.py')
print(diretorio)
# C:\Users\foo\development\python\main.py

Segundo a documentação:
os.path.abspath(path)

Retorna uma versão normalizada do diretório do arquivo passado como
parâmetro.
Na maioria das plataformas, isso é equivalente a chamar a função
normpath() da seguinte forma: normpath(join(os.getcwd(), path)).

","
            0
        ",,,['\npython\n']
539842,Qual o melhor modo de criar um contador em Python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 3 meses.




                        Melhore esta pergunta
                    



Eu quero criar um contador em Python dentro de uma condicional.
Em C eu faria algo como:
if(condição){
   valor += valor+ objetoDeSoma
}

Porém, em Python não consegui achar a melhor maneira de encaixar isso, quando eu faço o código ao tentar printar o valor final do contador (isso fora do for que eu utilizo) ele simplesmente não aparece.
Segue o código:
import random
i = int
i = 0
totalProdF = 0
totalProdM = 0
totalF = 0
totalM = 0
for i in range(0,100):
    linhaProd = random.randrange(1,3)
    sx = random.randrange(0,1)
    prod = random.randrange(80,150)

    if(sx==0):
        sexo = ""Feminino""
        totalProdF =totalProdF + prod
        totalF = totalF + 1
    if (sx==1):
        sexo = ""Masculino""
        totalProdM = totalProdM + prod
        totalM = totalM + 1

    print(i, linhaProd, sexo, prod)

mediaProdMasc = totalProdM/totalM
mediaProdFem = totalProdF/totalF
print(""A média de produção masculina foi de: "", mediaProdMasc)
print(""A média de produção feminina foi de: "", mediaProdFem)

","
Bom, no seu range de sexo ele só pegava o valor 0, uma vez que você colocou (0, 1). Para ele pegar os valores 0 e 1, você deve colocar (0, 2), sempre um valor a mais. Teste o código abaixo:
import random
#i = int
i = 0
totalProdF = 0
totalProdM = 0
totalF = 0
totalM = 0

for i in range(0, 100):
    linhaProd = random.randrange(1, 3)
    sx = random.randrange(0, 2)
    prod = random.randrange(80, 150)

    if(sx == 0):
        sexo = ""Feminino""
        totalProdF+=prod
        totalF += 1
    elif (sx == 1):
        sexo = ""Masculino""
        totalProdM+=prod
        totalM += 1

    #print(i, linhaProd, sexo, prod)

mediaProdMasc = totalProdM/totalM
mediaProdFem = totalProdF/totalF
print(""A média de produção masculina foi de: "", mediaProdMasc)
print(""A média de produção feminina foi de: "", mediaProdFem)

","
            1
        ",,,['\npython\n']
539797,Eu consigo salvar em uma variável os dados que vem de um laço de repetição python?,"
Eu queria saber se eu consigo pegar o valor que o whille achou na interação e colocar em uma variável para eu usar depois que o laço de repetição finalizar.
contador = 0

while (contador < 3):

time_casa = site.find_all('div', attrs={'.nomeclass'})[0].text

contador   = contador + 1

tipo, eu queria salvar em uma variável o nome de cada time que o whille encontra.
","
Tem como fazer desse jeito
Nomes = []                                           
Contador = int(input(""Quantas vezes você quer rodar o código? ""))
while (Contador > 0):
    Pergunta = input(""Qual é o seu nome? "")
    Nomes.append(Pergunta)
    Contador -= 1
print(Nomes)

Nesse caso os nomes vão ficar salvos na lista ""Nome"".
","
            -1
        ",,,"['\npython', 'lógica', 'while\n']"
539796,como fazer multiplos eventos em um único botão tkinter?,"
Boa noite, estou tentando criar dois eventos com um botão no tkinter, no caso o botão iria descriptografar arquivos e aparecer uma imagem de cadeado aberto entretanto como estou iniciando na programação estou com muita dificuldade de fazer isso, quando crio apenas o codigo de descriptografar e imprimir a mensagem funciona perfeitamente mas quando tento incluir a imagem do cadeado aberto não funciona.
def DECRYPT_FILE():
    def decrypt(filename):
        key = entry1.get()
        f = Fernet(key)
        with open(filename, ""rb"") as file:
            encrypted_data = file.read()
        decrypted_data = f.decrypt(encrypted_data)
        with open(filename, ""wb"") as file:
            file.write(decrypted_data)


    with open('logs/path.txt') as fp:
        line = fp.readline()
        while line:
            filename = line.strip()
            try:
                decrypt(filename)
            except PermissionError:
                print(""!Permission denied"")
            line = fp.readline()
    label1 = tk.Label(root, text='SEUS ARQUIVOS FORAM DESCRIPTOGRAFADOS') # Titulo
    label1.config(font=('helvetica', int(height/50)))
    label1.config(background='black', foreground='red')
    canvas1.create_window(int(width/2), int(height/7)*50, window=label1)
    OPEN = PhotoImage(file=""open.png"")
    lb = Label(root, image=imagem)
    lb.config(background='black', foreground='black')
    lb.place(x = 560, y = 523)
    fp.close()
    shutil.rmtree(PATH+'/logs', ignore_errors=True)

    canvas1.create_window(int(width/2), 650, window=label1)  

button1 = tk.Button(text='Decrypt', command=DECRYPT_FILE)
button1.config(background='red')
canvas1.create_window(int(width/2), int(height/17)*13, window=button1)


root.mainloop()

","
Resolvi parte do problema usando uma função genérica para combinar funções:
def combine_funcs(*func):  #combina argumentos
def combined_func(*args, **kwargs):
for f in func:
f(*args, **kwargs)
return combined_func
def func1():  #argumento de cadeado aberto
    imagem = PhotoImage(file=""open.png"")
    lb=Label(root, image=imagem)
    lb.config(background='black', foreground='black')
    lb.place(x = 560, y = 523)

def func2():  #argumento de descriptografia

Porém agora onde é para surgir a imagem fica preto...
","
            0
        ",,,"['\npython', 'tkinter\n']"
539728,Como inserir variáveis do python no execute() do MySQL?,"
estou com a seguinte situação:

Meu objetivo, é através de uma consulta MySQL no banco de dados,e eu possa retornar um outro valor da mesma coluna.
No meu caso, é, através do CNPJ, quero que a consulta me retorne a senha do cliente.
Mas estou tendo o problema que, na linha 15, eu não consigo inserir a variável pesquisar_cnpj, tentei de todas as formas, mas a única que coisa que me retorna é um parênteses vazio (). Como mostra captura abaixo (Não sei, mas é como se a variável estivesse vazia, não sei se está correto:

Por favor me ajudem, preciso muito de uma resposta.
","
pelo que eu to vendo você não ta inserindo a variável cnpj dentro da string SELECT do comando cursor.execute. Tenta inserir dessa forma:
sql = ""SELECT senha FROM bancodedados WHERE cnpj = %s""
cpnj = (""00.000.000/0000-00"", )

cursor.execute(sql, cnpj)
valoreslido = cursor.fetchall()

Caso você queira um comando mais limpo e nítido pode inserir a variável de forma mais fácil:
cpnj = ""00.000.000/0000-00""

cursor.execute(f""SELECT senha FROM bancodedados WHERE cnpj = '{cpnj}'"")
valoreslido = cursor.fetchall()

","
            1
        ",,,"['\nmysql', 'python', 'query\n']"
539695,Clicar em classe com o mesmo nome usando selenium python,"
Estou tentando fazer uma automatização em python usando o Selenium no entanto n'ao estou conseguindo clicar nos elementos restantes pois todos eles tem a mesma classe.
esse é o código que faz o clique no elemento
Ao_Vivo = navegador.find_element(By.XPATH, '//div[@class=""ovm-FixtureDetailsTwoWay_Wrapper""]')
Ao_Vivo.click()

eu já tentei usar ele das seguintes formas
assim
Ao_Vivo = navegador.find_element(By.XPATH, '//div[@class=""ovm-FixtureDetailsTwoWay_Wrapper""]')[2]
Ao_Vivo.click()

e assim
    Ao_Vivo = navegador.find_element(By.XPATH, '//div[@class=""ovm-FixtureDetailsTwoWay_Wrapper""][2]')
    Ao_Vivo.click()

mas acabou dando erro.
Este é o html da pagina

Alguém tem alguma ideia de como fazer.
esse é o erro que apresenta

","
tudo bem? Já passei por um problema similar e procurei bastante informação para tentar encontrar uma resposta pra isso. O que eu encontrei e o que eu percebi é que não é muito saudável utilizar find_elements com o XPATH e nem com o CSS_SELECTOR, não faz sentido encontrar múltiplos elementos com apenas um caminho, certo?
Normalmente utilizo o find_elements junto com o class_name, id e name. Acredito que a melhor solução para o seu problema seja utilizar o class_name, como no exemplo abaixo:
Ao_Vivo = navegador.find_elements(By.CLASS_NAME, 'ovm-FixtureDetailsTwoWay_Wrapper')

O selenium vai retornar uma lista com todos os elementos que foram encontrados a class_name ovm-FixtureDetailsTwoWay_Wrapper. Agora é só seguir a lógica de uma lista, caso queria chamar o segundo elemento da lista é colocar um Ao_Vivo[1] (Lembrando uma lista sempre começa com o primeiro valor sendo 0).
Uma outra coisa é que quase sempre a função .click do selenium não funciona em alguns elementos não clicáveis, como por exemplo uma div. Se você encontrar uma div que que deseja clicar e não conseguem e sempre aparece o erro ""element not interactable"", é só usar o código abaixo:
navegado.execute_script(""arguments[0].click();"", AQUI_FICA_O_ELEMENTO_QUE_VAI_SER_CLICADO)

Um resumo de como seu código poderia ficar:
Ao_Vivo = navegador.find_elements(By.CLASS_NAME, 'ovm-FixtureDetailsTwoWay_Wrapper')

navegado.execute_script(""arguments[0].click();"", Ao_Vivo[2])

","
            0
        ",,,"['\npython', 'selenium', 'xpath\n']"
539535,Novo DataFrame Pandas,"
Tenho uma tabela em que uma das series tem como titulo 'Equipe', e o seguinte código conta quantas vezes o nome de cada equipe aparece, grava em um novo df e em um no arquivo do excel
O problema é que o arquivo 'exit_file.xlsx', que sai com duas colunas, fica com uma delas sem titulo, uma fica como 'Equipe' e a outra sem nada.
Como é um arquivo gerado automaticamente toda vez que o programa roda, não posso simplesmente colocar um título à mão e quando preciso utilizar o end_file, não consigo referenciar a série que está sem título.
count = df_orig['Equipe'].value_counts()
df_dest = pd.DataFrame(count).to_excel('exit_file.xlsx')
end_file = pd.read_excel('exit_file.xlsx')

","
Pelo que pude entender, você quer colocar um nome na coluna que foi sem nome para o arquivo 'exit_file.xlsx'.

TL;DR
count = df_orig['Equipe'].value_counts()\
   .reset_index()\
   .rename({'index':'MinhaColuna'},axis=1)
count.to_excel('exit_file.xlsx', index=False)

Veja um exemplo online - ideone

Explicação
Para fazer isso podemos fazer algumas alterações, primeiramente vamos entender essa linha:
count = df_orig['Equipe'].value_counts()

O método pandas.Series.value_counts retorna um pandas.Series que no seu caso será algo como:
<UmValorNaColunaEquipe>       <QuantidadeDeVezesQueEleApareceNoDataFrame>
<OutroValorNaColunaEquipe>    <QuantidadeDeVezesQueEleApareceNoDataFrame>
...
Name: Equipe, dtype: int64

Agora note o seguinte:

<UmValorNaColunaEquipe> é um index, esse é o motivo para ele esta sem nome de coluna.
<QuantidadeDeVezesQueEleApareceNoDataFrame> será um valor da coluna Equipe caso você transforme esse pandas.Series em pandas.DataFrame

Agora vamos começar a alterar
Sabendo que df_orig['Equipe'].value_counts() vai retornar um pandas.Series com index, podemos utilizar o método pandas.Series.reset_index que nesse caso ele vai:

Transformar o index em uma coluna de nome 'index',
E seu pandas.Series também vai virar um pandas.DataFrame com 2 colunas ['index', 'Equipe'].

count = df_orig['Equipe'].value_counts().reset_index()

# output de count
#          index  Equipe
# 0  NomeEquipe1       2
# 1  NomeEquipe2       2
# 2   NomeEquipe       1
# ...

Veja um exemplo online - ideone
E após isso você ainda pode renomear sua coluna utilizando o pandas.DataFrame.rename, ficando +/- assim:
count = df_orig['Equipe'].value_counts().reset_index().rename({'index':'MinhaColuna'},axis=1)

# output de count
#    MinhaColuna  Equipe
# 0  NomeEquipe1       2
# 1  NomeEquipe2       2
# 2   NomeEquipe       1
# ...

Então count agora é um pandas.DataFrame com 2 colunas, para finalizar agora não precisamos mais criar o novo pandas.DataFrame para salvar o xlsx, podemos utiliza a nossa variável count, então o código final ficaria +/- assim:
count = df_orig['Equipe'].value_counts()\
    .reset_index()\
    .rename({'index':'MinhaColuna'},axis=1)
count.to_excel('exit_file.xlsx', index=False)

Veja um exemplo online - ideone
","
            2
        ",,,"['\npython', 'pandas', 'dataframe\n']"
539489,Quero pesquisar se um login existe em um dicionário em python,"
Tô fazendo um programa simples em python utilizando dicionários e listas como cadastro de um login para clientes, queria implementar uma condição de não permitir a criação de dois clientes com o mesmo login. Se o cliente escolher um login já existente, mostrar uma mensagem de erro, não realizar o cadastro e retornar ao menu principal.
clientes = []


def CadastrarCliente():
    dados['nome'] = str(input(""Nome completo: ""))
    dados['login'] = input(""Login: "")
    dados['senha'] = input(""Senha: "")
    dados['email'] = input(""E-mail: "")
    dados['nascimento'] = input(""Data de nascimento:"")
    dados['telefone'] = int(input(""Telefone: ""))
    clientes.append(dados)

while True:
    print('[1] Cadastrar cliente')
    print('[0] Sair')

    opcao = int(input('Opção: '))

    if(opcao == 0):
        break

    elif(opcao == 1):
        dados = {}
        CadastrarCliente()
    else:
        print(""Opção incorreta"")


","
Alanis, você pode utilizar o metodo .get do Dictionary para pegar apenas o valor especifico de uma chave. Com esse mesmo método você pode criar uma lista com todos os Logins de sua lista e verificar se o novo login já existe ou não.
Você consegue ver melhor no exemplo abaixo:
clientes = []


def CadastrarCliente():
    dados = {
        'nome': str(input(""Nome completo: "")),
        'login': input(""Login: ""),
        'senha': input(""Senha: ""),
        'email': input(""E-mail: ""),
        'nascimento': input(""Data de nascimento: ""),
        'telefone': int(input(""Telefone: ""))
    }

    login = dados.get('login')
    list_login = [cliente.get('login') for cliente in clientes]

    if login in list_login:
        return False
    else:
        clientes.append(dados)
        return True


while True:
    print('[1] Cadastrar cliente')
    print('[0] Sair')

    opcao = int(input('Opção: '))

    if opcao == 0:
        break

    elif opcao == 1:
        cadastro = CadastrarCliente()
        if cadastro is True:
            print(""Cliente Cadastrado com sucesso!!"")
        else:
            print(""Cliente já cadastrado!!"")
    else:
        print(""Opção incorreta"")

","
            -2
        ",,,"['\npython', 'dicionário\n']"
539470,Obter uma lista com valores de um mesmo tipo,"
Gostaria de obter uma lista, somente, com os nomes das variáveis (keys) que são do tipo ""object""
Porém, não estou conseguindo obter resultado desejado. Alguém poderia me dar um help?

","
Vc pode usar um método próprio do draframe para isso: select_dtypes(). Como no final vc quer o nome das colunas (variáveis) do tipo object, basta vc fazer o seguinte:
list(x.select_dtypes(include='object').columns)

O select_dtypes() retorna todo o dataframe com as colunas do tipo especificado. Vc pode conferir melhor sobre esse método aqui. O .columns é apenas para pegar o nome das colunas.
","
            0
        ",,,"['\npython', 'pandas', 'dataframe', 'machine-learning\n']"
539464,Não consigo clicar no botão desse site com Python Selenium de jeito nenhum,"
Estou fazendo uma automação para uma melhoria de processo no meu trabalho, a idéia é varrer regularmente uma pagina específica e identificar se há um novo item nessa página. Ja postei uma dúvida sobre esse projeto aqui no Stackoverflow e o meu problema era ir para o frame correto do botão, e essa etapa foi superada.
Porém agora existe um botão que é o 'Query' para fazer a pesquisa na página e aparecer se há um novo item, porém esse botão Query é IMPOSSÍVEL de clicar, sempre retorna o erro 'NoSuchElementException' ja tentei muitas coisas, esperando o elemento carregar por 1h, colocando um sleep, findelement por ID, XPATH, fullXPATH e algumas outras opções que seriam possíveis achar esse botão, ele esta no mesmo frame de outros botões que eu consigo interagir, mas esse em específico eu não consigo.
Abaixo segue todos os endereços do botão, mostrando o elemento que ele é, e de nenhuma forma ele funciona.
-A barra onde o botão esta

-O botão

-Campo dentro do botão

-Imagem da lupa do botão

-Texto do botão

-O Menu lateral esquerdo e essa barra de botões estão no mesmo frame, eu consigo clicar no menu lateral esquerdo, porém não consigo interagir com o a barra de botões, em nenhum deles por nenhum tipo de find_element possível.

Sou iniciante e tenho muito a aprender, mas ja estou estacionado nesse ítem faz algumas semanas e ainda sem nenhum avanço, toda sugestão é bem vinda.
","
Ricardo, já passei por um problema semelhante e o que me salvou foi o execute_script, uma função do selenium.webdriver.
Tenta utilizar ela assim se tiver com a versão mais atualizada do Selenium:
btn = webdriver.find_element(By.CLASS_NAME, 'nexacontentsbox')
webdriver.execute_script(""arguments[0].click();"", btn)

Outra opção caso esteja em uma versão mais antiga:
btn = webdriver.find_element_by_class_name('nexacontentsbox')
webdriver.execute_script(""arguments[0].click();"", btn)

Pra utilizar o execute_script é bem simples, você só precisa enviar como parâmetro o primeiro comando a ser executado (No exemplo acima estamos enviando um script com um simples click), e como segundo parâmetro o elemento em que o script vai funcionar.
","
            1
        ",,,"['\npython', 'selenium', 'selenium-webdriver\n']"
539443,Como abrir arquivos com acento na ordem alfabética usando os.startfile no Python?,"
Olá, preciso abrir uma grande base de dados com vários nomes frequentemente, então criei um script que faz isso por mim. Porém estou enfrentando um problema, os arquivos com acento no nome estão aparecendo depois dos arquivos normais, fora da ordem. Por exemplo, no diretório 'Teste' do código abaixo que eu fiz para teste, estão os arquivos ""Fabiana.pdf"", ""Fábio.pdf"", ""Fernanda.pdf"" e ""Francisca.pdf"", nessa ordem.
import os
os.chdir('C:\\Users\\Caio\\Documents\\Teste')
for file in os.listdir():
    print(file)
    os.startfile(file)
print('Arquivos abertos com sucesso')

O código retorna fora da ordem, com o 'Fábio.pdf' por último
Fabiana.pdf
Fernanda.pdf
Francisca.pdf
Fábio.pdf
Arquivos abertos com sucesso

E na hora de abrir os pdfs, acontece a mesma coisa, ele abre fora da ordem:

Numa situação com muitos arquivos isso atrapalha bastante. Como faço para resolver?
","
Sugestão mais elegante: use uma função de sort que suporte ordem lexicográfica adequada para sua nacionalidade e idioma.
import locale
from functools import cmp_to_key
locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')
...
files = os.listdir()
files.sort(key=cmp_to_key(locale.strcoll))
...

Em alguns idiomas, combinações como ""LL"" contam como apenas um L em espanhol, ou um caractere ß vale o mesmo que ""SS"" em alemão, em resumo, simplesmente filtrar caracteres acentuados não é suficiente.
","
            6
        ",,,"['\npython', 'biblioteca\n']"
539359,Inverter uma frase (PYTHON),"
Queria saber como eu inverto e também remover pontuaçao em uma frase do tipo:
Entrada
inverte('Anda apanhar um capotinho, Capitu, dizia-lhe ele.')

Retorno esperado
'ele lhe dizia capitu capotinho um apanhar anda'

Coloquei desta forma, mas ainda nao entendo muito bem essa parte, entao sei que esta bem errado...
def inverte(frase):
    
    if '-' or ',' or '.' in frase:
        virgula = frase.replace(',', ' ')
    ponto_final = virgula.replace('.', ' ')
    return str.reverse(ponto_final)
    
    if '?' in frase:
            virgula = frase.replace(',', ' ')
    ponto_final = virgula.replace('.', ' ')
    ponto_interrogacao = ponto_final.replace('?', ' ')
    return str.reverse(ponto_interrogacao)
    
    if '!' in frase:
            virgula = frase.replace(',', ' ')
    ponto_final = virgula.replace('.', ' ')
    ponto_interrogacao = ponto_final.replace('?', ' ')
    ponto_exclamacao = ponto_interrogacao.replace('!', ' ')
    return str.reverse(ponto_exclamacao)

","
Se quer saber como inverter uma frase e remover sua pontuação, uma solução nos parâmetros informados na pergunta pode ser obtida com o módulo de Operações com Expressões Regulares utilizando a função findall() para obter uma lista de palavras de uma frase a partir dum padrão de correspondência e então inverter essa lista.
import re

m = re.findall(r""[^\-,.?!\s]+"", ""Anda apanhar um capotinho, Capitu, dizia-lhe ele."")[::-1]

print(*m)
#ele lhe dizia Capitu capotinho um apanhar Anda

findall() retorna uma lista contendo todas as correspondências não sobrepostas de um padrão de correspondências dentro de uma string.
O padrão de correspondência [^\-,.?!\s]+ pode ser interpretado como:
Apanhe um ou mais caracteres que não sejam ou - ou , ou . ou ? ou ! ou um caractere de espaço.
A subscrição [::-1] pega a lista obtida com findall() e a retorna invertida.
O código acima trabalhado na forma de uma função:
import re

def inverter(frase, regex=re.compile(r""[^\-,.?!\s]+"")):
  return "" "".join(re.findall(regex, frase)[::-1])

print(inverter(""Anda apanhar um capotinho, Capitu, dizia-lhe ele.""))
#ele lhe dizia Capitu capotinho um apanhar Anda

Quanto código apresentado na pergunta não faz o que deseja e me abstenho de tecer comentários sobre pois a tentativa de seu reparo só traria confusão.
","
            2
        ","
Minha solução pra isso seria usar split na frase, transformando cada palavra da frase em um item de uma lista e em seguida inverteria a lista, logo depois o percorreria reformando a nova frase e para remover a pontuação usaria RegEx siga o exemplo:
import re

def inverterFrase(frase):
    novaFrase  = ''
    for palavra in frase.split()[::-1]: novaFrase += f' {palavra.lower()}'
    novaFrase = re.sub('[^\w\s]',' ',novaFrase)
    
    return novaFrase

resultado = inverterFrase('Anda apanhar um capotinho, Capitu, dizia-lhe ele.')
print(resultado)

","
            0
        ",['\npython\n']
539285,Que diferença faz usar ou não parênteses ao fazer uma função retornar outra?,"
Pensei em executar um código teste que aninhasse duas funções para debugar o funcionamento, ficando como abaixo:
def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a
    
var = b()

print(var(11))

Como a princípio havia executado normalmente, resolvi acrescentar mais uma função no aninhamento para testar se usaria a sintaxe correta, então o código ficou assim:
def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a
def c():
    return b
    
var = c()

print(var(11))

Entretanto aqui temos o seguinte erro em return b:

B() takes 0 positional arguments but was given 1 

Após alguns testes, verifiquei que o erro só era consertado após mudar a linha que retorna a função b para return b() explicitando os parênteses, mas a questão é que eu não faço ideia do porque isso funciona e porque o sistema quebra se eu tentar fazer como acima. Ao final da página, a versão do código que funcionou:

def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a
def c():
    return b()
    
var = c()

print(var(11))

Por que estes parênteses fazem diferença?
","
Antes, um breve resumo. Suponha que eu tenho esta função:
def f():
    return 'ok'

Para chamar a função f eu preciso dos parênteses, veja a diferença:
# sem parênteses, ""f"" é a própria função
print(f) # <function f at 0x7f88f5d36dc0>

# com parênteses, ""f()"" chama (executa) a função, e o retorno dela é passado para print
print(f()) # ok

Ou seja, sem parênteses, f é a própria função. Ao usar parênteses (f()), estou executando a função, e o retorno dela (que no caso é a string 'ok') é que é passado para print.
Só que a função f foi declarada sem parâmetros, ou seja, ao chamá-la eu não posso passar nenhum argumento: não pode ter nada entre os parênteses.
Por isso que f() funciona, mas f(1) não, pois neste caso estou passando o 1 como argumento, e dá erro:
f() # ok
f(1) # TypeError: f() takes 0 positional arguments but 1 was given

Mas se eu declarar a função de forma a receber um parâmetro, aí a situação se inverte:
# agora a função recebe um parâmetro
def f(n):
    return n * 10

# passando ""1"" como argumento
f(1) # 10
f() # TypeError

Agora vamos ao seu caso...

Quando você faz return b, está retornando a própria função b (ela não é executada).
Mas se você faz return b() (com os parênteses), está executando a função b, e está retornando o valor que a função b retorna.
Ou seja, sem os parênteses, a função c está retornando a função b:
def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a

def c(): # retorna a função b (atenção: b não é executada)
    return b

var = c()
# var é a função ""b""
print(var) # <function b at 0x7fa49838dd30>

print(var(10)) # erro

E como var agora aponta para a função b, então var(qualquer_coisa) dá erro, pois a função b não tem parâmetros: ela foi declarada com def b(), ou seja, não recebe nenhum parâmetro. A única forma de chamá-la corretamente é b(), se eu fizer b(qualquer_coisa) dará erro. E como var contém a função b, então a forma correta de chamá-la é var(), por isso que var(10) dá erro.

E por que funciona se adicionar os parênteses?
def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a

def c():
    return b() # agora com parênteses, está executando b

var = c()
# veja que agora var é a função ""a""
print(var) # <function a at 0x7f9443dedca0>

print(var(10)) # 100

Agora funciona porque b() (com parênteses) está chamando (executando) a função b, e o resultado desta (ou seja, o valor que ela retorna) é também retornado pela função c. E como b retorna a função a, então agora var contém a função a, e por isso que var(10) funciona (pois a função a recebe um parâmetro).

Se a função c fosse escrita assim, ficaria mais fácil entender?
def c():
    # chama a função b e guarda o resultado em uma variável
    resultado = b()
    return resultado

Ela chama a função b (repare nos parênteses, isso indica que estou chamando a função), e o resultado dela é retornado por c. E como b retorna a função a, então c acaba retornando a função a também.
Só que em vez de ter essa variável intermediária resultado, dá pra fazer tudo de uma vez (return b()).


Aliás, essa é uma coisa que vejo que muita gente (não só iniciantes) não entende. O return não precisa retornar somente uma variável, ele pode retornar qualquer expressão (primeiro a expressão é calculada, e depois o seu resultado é retornado). Tanto que a função a poderia ser escrita assim:
def a(num1):
    return num1 * 10

Mas aí já estou fugindo demais da pergunta...

","
            2
        ","
Você apenas se perdeu nas referencias das funções armazenadas nas variáveis.
Vamos pegar o exemplo que deu errado:
def a(num1):
    resul = num1 * 10
    return resul
    
def b():
    return a

def c():
    return b

Nesse exemplo você inicializou uma variável com o retorno de c:
var = c()

var contém a função b, uma função que recebe 0 parâmetros, então não faz sentido invoca-la como var(11), você deveria invoca-la como var():
var_2 = var()

Agora temos a variável var_2 que contém a função a. Essa sim é a função que recebe um parâmetro, seria essa a variável que você deveria utilizar no print:
print(var_2(11))

Alternativamente você também poderia fazer print(c()()(11)), sem armazenar o retorno das funções em variáveis.
","
            0
        ","['\npython', 'python-3.x', 'funções', 'parâmetros\n']"
539186,Como fazer input de senha com letras e números (Python),"
Como faço para declarar uma variável de senha, onde a senha digitada deve ser obrigatoriamente com letras e números e com quantidade mínima de caracteres? (em Python)
A parte do código que já fiz:
while True:
    senha = input('Digite uma senha de fácil memorização: ')

    qtde_carac_senha = len(senha)

    if qtde_carac_senha < 8:
        print('Senha inválida. Escolha uma senha que tenha no mínimo 8 caracteres.')
    else:
        print('Senha cadastrada com sucesso.')
        break

","
Uma maneira bastante simples seria iterando caractere por caractere, alimentando contadores e depois lançar os erros de acordo com as contagens. Exemplo:
senha = input(""Insira a senha:"")

# contadores
count_alpha = 0
count_nums = 0

# checagem de caracteres
for c in senha:
    if c.isalpha():
        count_alpha += 1
    elif c.isdigit():
        count_nums += 1

# validações
erros = []

if len(senha) < 8:
    erros.append(""Senha deve conter pelo menos 8 caracteres!"")

if not count_alpha:
    erros.append(""Senha deve conter letras!"")

if not count_nums:
    erros.append(""Senha deve conter números!"")

# conclusão
if erros:
    print(""Erros de senha:"")
    for e in erros:
        print(""-"", e)
else:
    print(""Senha OK"")

Repl.it com código rodando
É uma solução simples para um problema simplificado.
Digo simplificado pois estou assumindo que estejamos recebendo apenas caracteres dentro do range ASCII sem precisar pensar em Unicode. Por exemplo, no código acima eu posso digitar como senha ṕṕṕṕṕṕṕṕ que será considerado alpha pois ""ṕ"".isalpha() == True visto que a linguagem considera alpha qualquer caractere que seja marcado como ""Letter"" no banco de dados do Unicode. Se esse é o comportamento desejado ou se você quer considerar como caractere especial, vai da sua necessidade.
Então a solução acima pode ser usada como um esqueleto para o comportamento que você quer programar, mas aconselho você a ler com atenção as seguintes documentações: str.isalnum(), str.isalpha(), str.isascii(), str.isdecimal(), str.isdigit() e str.isnumeric().
PS: se você quer usar expressões regulares, o link postado nos comentários da sua pergunta é mais que o suficiente.

Dica não relacionada à solução
Você pode usar a função getpass.getpass() ao invés da função input() para receber a senha do usuário. A diferença é que getpass.getpass() não mostra a senha do usuário na digitação.
Seria só trocar:
senha = input(""Insira a senha:"")

Por:
from getpass import getpass

senha = getpass(""Insira a senha:"")

","
            3
        ","
Como o comentário do Ruan indica, a melhor forma para resolver esse problema seria Regex. Mas caso não queira seguir por esse caminho, é possível fazer algo assim:
digitos = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
letras = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q' , 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']


def temDigito(entrada):
    for letra in entrada:
        if digitos.count(letra) > 0:
            return True

    return False;

def temLetra(entrada):
    for letra in entrada:
        if letras.count(letra) > 0:
            return True
        
    return False;

def senhaValida(entrada):
    return temDigito(entrada) and temLetra(entrada)

if __name__==""__main__"":
    entrada = 'senha123'
    print(senhaValida(entrada))

","
            0
        ",['\npython\n']
539072,como usar pyautogui.locateOnScreen em so uma parte da tela,"
como eu faço para procurar uma imagem na tela com pyautogui.locateOnScreen em uma parte somente? tipo eu do as cordenadas de um quadrado e ele so vai procurar aquela imagem naquela area do quadrado.
","
Pelo que eu entendi, você precisa pesquisar em uma área específica da tela.
Caso seja isso, você deve utilizar o locate, mas com a adição da região que você quer procurar. O ""region"" funciona conforme abaixo.
MODELO: region=(esquerda, topo, largura, altura)
pyautogui.locateOnScreen('imagem_a_ser_procurada.png', region=(0,0, 600, 800))

Neste exemplo você inicia a busca no canto esquerdo superior da tela ""0,0"" e procura em uma área padrão de ""600x800"", mesmo que seu monitor esteja em outra configuração maior.
","
            0
        ","
Não entendi muito bem a sua pergunta, mas de acordo com a documentação oficial: https://pyautogui.readthedocs.io/en/latest/screenshot.html
você poderia fazer algo como
import pyautogui
button7location = pyautogui.locateOnScreen('calc7key.png')
button7location
Box(left=1416, top=562, width=50, height=41)


primeiro vc coloca a imagem que vc quer
depois ele gera as coordenadas da imagem

","
            -3
        ","['\npython', 'pyautogui\n']"
539010,Erro em IF dentro de expressão lambda. TypeError: unsupported operand type(s) for |: 'str' and 'str' [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 3 meses.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





Desejo converter os valores da coluna para True ou False.
Código:
train = ['NK','AA','F9','MQ','EV','AA']
df = pd.DataFrame (train, columns = ['train'])
train= df['train'].apply(lambda x: 'True' if x == ('NK')|('F9')|('MQ')|('EV') else 'False')

Erro de retorno:

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-19-ce0ab7f3b9fa> in <module>
----> 1 test = df['train'].apply(lambda x: 'True' if x == ('NK')|('F9')|('MQ')|('EV') else 'False')

~\Anaconda3\envs\k37\lib\site-packages\pandas\core\series.py in apply(self, func, convert_dtype, args, **kwds)
   4210             else:
   4211                 values = self.astype(object)._values
-> 4212                 mapped = lib.map_infer(values, f, convert=convert_dtype)
   4213 
   4214         if len(mapped) and isinstance(mapped[0], Series):

pandas\_libs\lib.pyx in pandas._libs.lib.map_infer()

<ipython-input-19-ce0ab7f3b9fa> in <lambda>(x)
----> 1 test = df['train'].apply(lambda x: 'True' if x == ('NK')|('F9')|('MQ')|('EV') else 'False')

TypeError: unsupported operand type(s) for |: 'str' and 'str'

","
A LINGUAGEM PYTHON:
Se considerarmos apenas essa expressão lambda, sugerida como parte da solução, aqui:
lambda x: 'True' if x in ['NK','F9','MQ','EV'] else 'False'

Como já expliquei aqui e aqui o resultado dum teste de pertinência é avaliado como True se e somente se um elemento x é um membro de uma coleção s e em caso contrário retorna False.
Assim sendo redundante pois aparentemente o código se resume apenas obter de um teste de pertinência convertido numa string, o que se resume a:
lambda x: str(x in ['NK','F9','MQ','EV'])

Ou apenas valores booleanos:
lambda x: x in ['NK','F9','MQ','EV']

EVITE USAR DATAFRAME.APPLY() ou SERIES.APPLY()
Como sugestão essa palestra sobre ganho de performance com vetorização em Pandas e Numpy
O fato é que os métodos DataFrame.apply() e pandas.Series.apply() operam por loops e portanto são inerentemente lentos.
O uso do método Series.apply() é lento pois o Pandas não faz julgamentos sobre a natureza da função usada e que portanto aplica iterativamente a função usada a série conforme necessário.
Embora iterações forneçam uma utilidade maravilhosa, cada iteração sobre um elemento é essencialmente uma única etapa na rota por todos os elementos da coleção. Este processamento passo a passo é útil quando a ordem da operação é estritamente importante.
O processamento vetorizado, em contraste, pode ser aplicado quando a ordem de processamento não importa. Métodos NumPy e Pandas permitem a vetorização. A vetorização quase sempre funciona mais rápido, pois o tempo de execução é constante ou cresce em uma taxa muito mais lenta com um número maior de elementos.
Para deixar claro, muitas CPUs têm conjuntos de instruções ""vetoriais"" ou ""SIMD"" que aplicam a mesma operação simultaneamente a conjunto de dados. Então vetorização é o processo de reescrever uma ação iterativa de modo que, em vez de processar um elemento de uma coleção por vez sejam aproveitadas a operações ""SIMD"" para aplicar essa operação simultaneamente a vários elementos dessa coleção.
Então concluindo que o código oferecido na resposta não é adequado:
train = df['train'].apply(lambda x: 'True' if x in ['NK','F9','MQ','EV'] else 'False')

Seguramente o mesmo comportamento pode ser replicado de forma mais eficiente usando um abordagem vetorizada com o método Series.isin() que retorna uma série de booleanos indicando se cada elemento está contido dentro de uma coleção:
train = df['train'].isin(['NK','F9','MQ','EV'])

","
            2
        ","
O problema foi resolvido substituindo a construção x == ('NK')|('F9')|('MQ')|('EV') por x in ['NK','F9','MQ','EV']:
train = df['train'].apply(lambda x: 'True' if x in ['NK','F9','MQ','EV'] else 'False')

","
            -4
        ","['\npython', 'syntax-error\n']"
538966,Como checar se existe um usuário existe e impedir a criação de login?,"
Estou desenvolvendo um sistema de login em Pyhton, e travei num certo ponto. Eu quero criar um código que cheque dentro de uma lista todos os usuários existentes, e avise ao novo usuário que o login que ele está tentando criar já existe. Eu consegui fazer apenas com um único usuário dentro da lista, mas quando tento por mais de um, aí já não sei o que fazer. Aqui está o programa que eu estou criando:
usuario1 = []
senha2 = []
usuario2 = []
loginex = ['usuarionumero1']
senhaex = ['admin']

def checagem():
    if usuario2 != usuario1:
        print('Login inválido.')
    elif senha1 != senha2:
        print('Login inválido.')
    else:
        if usuario1 == usuario2:
            print('Login efetuado com sucesso!')
        elif senha1 == senha2:
            print('Login efetuado com sucesso!')

def login():
    print('LOGIN')
    usuario2.append(input('Digite seu usuário: '))
    senha2.append(input('Digite sua senha: '))

def checagemex():
    if usuario2 != loginex:
        print('Login inválido.')
    elif senhaex != senha2:
        print('Login inválido.')
    else:
        if loginex == usuario2:
            print('Login efetuado com sucesso!')
        elif senhaex == senha2:
            print('Login efetuado com sucesso!')

def criacaologin():
    usuario1.append(input('Digite seu nome de usuário: '))
    senha1.append(input('Digite sua senha: '))
    #for usuarios in loginex:
    while usuario1 == loginex:
        usuario1.clear()
        usuario1.append(input('Usuário já cadastrado.\n Digite seu nome de usuário: '))
        senha1.append(input('Digite sua senha: '))


print('Bem vindo ao sistema de dados.')
p1 = input('Você já possui uma conta em nosso sistema? R: ')
if p1 == 'Sim':
    login()
    checagemex()

else:
    if p1 =='Não':
        print('Sistema de cadastro de usuário.')
        criacaologin()

print('LOGIN')
usuario2.append(input('Digite seu usuário: '))
senha2.append(input('Digite sua senha: '))
checagem()```

Se alguém puder me ajudar, ficarei grato!







","
Sugiro que crie um arquivo.txt para cadastrar os usuários e senhas... Dessa forma toda vez que executar o programa a lista vai ser resetada e todos os usuários e senhas serão perdidos. Por isso que sempre que executa o código ele permite vc cadastrar o mesmo usuário.
pra ser mais exato, todo usuário cadastrado nas listas vazias que você criou no começo, não persiste ao rodar o código novamente...
segue um vídeo de exemplo do que você quer fazer de forma MUITO simples que ajuda MUITO!
https://www.youtube.com/watch?v=ksCYvv9bI3Y&ab_channel=DevAprender
","
            -2
        ","
Veja se funciona assim:

usuarios = []
senhas = []

def checagem(usuario):
    if usuario in usuarios:
        print('Login existente.')
        return True
    else:
        print('Login inexistente/Username disponível.')
        return False

def autenticacao(indice,senha):
    if senhas[indice] == senha:
        print('Usuário autenticado')
        return True
    else:
        print('Erro de senha')
        return False

def login():
    print('LOGIN')
    usuario = input('Digite seu usuário: ')
    senha = input('Digite sua senha: ')
    if checagem(usuario):
        indice = usuarios.index(usuario)
        autenticacao(indice,senha)
        
    else:
        print(""Entre com um usuário válido!"")

def criacaologin():
    usuario = input('Digite seu nome de usuário: ')
    senha = input('Digite a sua senha: ')
    
    if checagem(usuario) == False:            
        usuarios.append(usuario)
        senhas.append(senha)
        print('Usuário criado!')
    else:
        print('Username Indisponível')

print('Bem vindo ao sistema de dados.')
p1 = input('Você já possui uma conta em nosso sistema? R:[Sim/Não] ')
if p1 == 'Sim':
    login()

else:
    if p1 =='Não':
        print('Sistema de cadastro de usuário.')
        criacaologin()



","
            -3
        ","['\npython', 'python-3.x\n']"
538924,Como verificar se um valor está em um DataFrame com Pandas no Python?,"
Eu criei o seguinte DataFrame:
lista_assuntos = pd.read_excel('autchas/lista_assuntos.xlsx')

Quando eu rodo print(lista_assuntos['Assuntos']) é impresso:
0                     Conexão
1                      Outros
2             Ponto Adicional
3         Teste de Velocidade
4                  Reativação

Quando faço print('Outros' in lista_assuntos['Assuntos']) é impresso False.
Mas não era pra retornar True, uma vez que existe a string 'Outros' dentro de 'lista_assuntos'? Ou se tem uma forma correta de conferir se o valor está em um DataFrame.
","
O retorno de lista_assuntos['Assuntos'] é, presumidamente, um objeto Series, que é tratado como um dicionário, onde o índice é a chave, com seu valor correspondente.
Ao usar o operador in diretamente no retorno, ocorrerá iteração sobre as ""índices [chaves]"", como num dicionário (no exemplo, [0,1,2,3,4]).
Para iterar sobre os valores, você deve utilizar o atributo ""values"".
print('Outros' in lista_assuntos['Assuntos'].values) deve retornar True, pois vai iterar sobre ['Conexão', 'Outros', 'Ponto Adicional', ...].
Referência: https://pandas.pydata.org/docs/reference/api/pandas.Series.values.html
","
            3
        ",,,"['\npython', 'pandas', 'visual-studio-code', 'dataframe\n']"
538839,Como somar tempos em python [duplicada],"






Essa pergunta já tem uma resposta aqui:
                        
                    



Como posso somar horários ditos pelo usuário?

                                (1 resposta)
                            

Fechada há 3 meses.



Como posso somar, por exemplo: 1:12:34 + 0:18:53 + 0:0:50
O resultado precisa ser 1:32:17
","
O tempo seria uma string nesse caso correto? Então o que você precisa fazer é manipular ela recortando-a, por exemplo:
a = '1:12:34'
b = '0:18:53'
c = '0:00:50'
if a[1] != ':': #checando se a hora tem 1 ou 2 carácteres
    ah = int(a[0])
    '''Separando a hora caso o segundo digito seja diferente de 0, lembre-se: o valor inicial é 0'''
    am = int(a[2:4])
    as = int(a[5:]) #ou seja, daqui até a string acabar
else:
    ah = int(a[0:2])
    am = int(a[3:5])
    ass = int(a[6:])

Ótimo! Agora precisamos transformar as horas e os minutos em segundos, até porque na escola você fazia/faz a transformação e depois somava correto? Então:
ahs = ah*3600
ams = am*60
astotal = ams + ahs + ass

Agora é só replicar esses passos com o b e o c, mas claro, utilizando variáveis diferentes (no meu caso irei substituir o “a” inicial por b e c:
if b[1] != ':':
    bh = int(b[0])
    bm = int(b[2:4])
    bs = int(b[5:]) #ou seja, daqui até a string acabar
else:
    bh = int(b[0:2])
    bm = int(b[3:5])
    bs = int(b[6:])

if c[1] != ':':
    ch = int(c[0])
    cm = int(c[2:4])
    cs = int(c[5:]) #ou seja, daqui até a string acabar
else:
    ch = int(c[0:2])
    cm = int(c[3:5])
    cs = int(c[6:])

bhs = bh*3600
bms = bm*60
bstotal = bms + bhs + bs

chs = ch*3600
cms = cm*60
cstotal = cms + chs + cs

Agora só precisamos somá-las:
stotal = astotal + bstotal + cstotal

Após essas etapas poderemos finalmente transformá-las em horas e minutos, mas temos um problema: e se o minuto ou segundo for 00? Ao transformar as strings agora separadas precisamos saber o que irá acontecer com ele. Então, ele será transformado em apenas um 0, e não queremos que o horário fique por exemplo “1:0:0” correto? Então iremos fazer o seguinte:
h = str(stotal//3600) #divisão inteira para segundos virarem horas
stotalm = stotal - h*3600
m = stotalm//60
if m == 0:
    m == '00'
else:
    m == str(m)
s = stotalm - m*60
if s == 0:
    s == '00'
else:
    s = str(s)

Agora é só juntar:
-Para Python 3.6+
total = f'{h}:{m}:{s}'

-Para Python 3
total = '{}:{}:{}'.format(h, m, s)

Pronto! Qualquer erro na execução do código por favor comente.
","
            -1
        ",,,"['\npython', 'soma\n']"
538806,É possível fazer um loop na linguagem HTML? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 3 meses.




                        Melhore esta pergunta
                    



email.HTMLBody = f""""""
<p>{ultima_data.split('-')[2]}/{ultima_data.split('-')[1]}/{ultima_data.split('-')[0]}:</p>
<p><b>Seção {tabela_interesse.loc[0,:].Seção}, F.S = {tabela_interesse.loc[0,:].fs}</b></p>
<p><b>Seção {tabela_interesse.loc[1,:].Seção}, F.S = {tabela_interesse.loc[1,:].fs}</b></p>
<p><b>Seção {tabela_interesse.loc[2,:].Seção}, F.S = {tabela_interesse.loc[2,:].fs}</b></p>

Esse seria o corpo de um e-mail qualquer, mas dessa forma o tamanho da 'tabela_interesse' deve ser sempre esse de 0 a 2, o que não irá ocorrer sempre. Há a possibilidade de manipular a linguagem Python com essa parte que está em HTML para fazer um loop percorrendo a 'tabela_interesse' e ir adicionando as informações que forem passadas no loop ?
","
Resposta: Não com a linguagem de marcação HTML.
Mas sim com uma linguagem de Programação, por exemplo PHP, mas existem outras
que podem ser utilizadas com HTML, a mais comum é PHP.
Se caso utilizar uma linguagem de programação, você precisará de um laço de repetição.
Em PHP por exemplo (que é a que eu mais conheço):
<?php
  for($i =1; $i < 20; $i++){
  echo ""Upload "".$i."": <input type='text' name='"".$i.""'/><br/>"";
}
?>

Existem outros laços de repetição: while, foreach, do-while.
Os nomes variam de linguagem para linguagem, mas a lógica é a mesma.
","
            -5
        ",,,"['\nhtml', 'python', 'python-3.x', 'dataframe\n']"
538593,INICIANDO COM O MÓDULO TURTLE [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 3 meses.




                        Melhore esta pergunta
                    



queria pedir ajuda com o aprendizado do módulo turtle. Atualmente estou travado tentando fazer a seta se mover (aquela que aparece quando digito o código a seguir):
import turtle
bob = turtle.Turtle()
print(bob)
turtle.mainloop()

A confusão é a seguinte: não importa que número eu coloque na última linha do código: a seta sempre fica no centro. Mas ela deveria se mexer de acordo com o número que insiro! O que estou fazendo de errado? Este é o código final:
import turtle
bob = turtle.Turtle()
print(bob)
turtle.mainloop()
bob.fd(900)

",,,,,"['\npython', 'python-3.x', 'objetos\n']"
538550,Como criar a partir de uma nuvem de pontos polígonos côncavos?,"
Gostaria de saber se existe alguma maneira de criar polígonos não convexo a partir de uma nuvem de pontos.
Vou dar um exemplo com alguns poucos pontos, mas a ideia é que eu possa gerar um código que me retorne o polígono/envoltória a partir de uma nuvem de pontos.
No exemplo abaixo eu gero o polígono, mas gostaria que o código não me retornasse o ponto (15,13) pois é um ponto que estaria dentro do polígono
from shapely.geometry import Polygon

polygon = Polygon([(10, 10), (10, 20), (15,15) ,(15,13),(15,15),(20, 20),(20, 10)])

print (polygon)

polygon

","
Verifique se uma geometria é valida com a propriedade object.is_valid. Um polígono válido não pode ter nenhum anel externo ou interno sobreposto e seus anéis também devem ser válidos ou seja um anel não pode se cruzar e não pode se tocar em nenhum ponto.
Caso o polígono não seja válido use o método object.buffer() com o parâmetro distance igual a 0 para computar uma representação aproximada dos pontos do objeto geométrico.
from shapely.geometry import Polygon

pp = Polygon([(10, 10), (10, 20), (15,15) ,(15,13),(15,15),(20, 20),(20, 10)])

if not pp.is_valid:
  print(f""Poligono {pp} inválido."")
  pp = pp.buffer(0)
  print(f""Representação aproximada {pp}"")
  

pp


Teste o exemplo no Colab
","
            2
        ",,,"['\npython', 'matemática', 'geometria\n']"
538387,Como inserir um item de combobox no Banco SQL usando Tkinter Python,"
Estou com dificuldade de inserir um item da lista comboBox do Tkinter para o banco de dados SQL.
Apresenta o seguinte erro:
cursor.execute(""""""INSERT INTO listaMes (mes) values (?)"""""",(selecionarMes))
sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 1, and there are 9 supplied.

Consigo printar o mês, mas não salvar no banco.
root = Tk()
conn = sqlite3.connect('BancoCombo.db')
cursor = conn.cursor()
cursor.execute("""""" 
            CREATE TABLE IF NOT EXISTS listaMes(
                mes CHAR(15) NOT NULL
                );
                """""")
conn.commit(); print('Banco Criado!')

def adicionar_combobox():
    
    selecionarMes = lista_meses.get(); print(selecionarMes)
    cursor.execute(""""""INSERT INTO listaMes (mes) values (?)"""""",(selecionarMes))
    

labelMes = Label(root,text='Selecione o Mês')
labelMes.pack()

meses = ['Janeiro', 'Fevereiro','Março']
lista_meses = ttk.Combobox(root,values=meses)
lista_meses.pack()
lista_meses.current(0)

btn_meses = Button(root,text='Enviar',command=adicionar_combobox)
btn_meses.pack()


root.mainloop()

","
Segue o exemplo abaixo não é a melhor forma de se fazer, mais já vai te ajudar:
import tkinter as tk
from tkinter import ttk
import sqlite3
 
def adicionar_combobox(mes):    
    print(mes)
    conn = sqlite3.connect('BancoCombo.db')
    cursor = conn.cursor()    
    cursor.execute(""""""INSERT INTO listaMes (mes) values (?)"""""",[mes])
    conn.commit()
    conn.close()    

conn = sqlite3.connect('BancoCombo.db')
cursor = conn.cursor()
cursor.execute("""""" CREATE TABLE IF NOT EXISTS listaMes( mes CHAR(15) NOT NULL ); """""")
conn.commit()
conn.close()
print('Banco Criado!')

root = tk.Tk()
labelMes = tk.Label(root,text='Selecione o Mês')
labelMes.pack()

meses = ['Janeiro', 'Fevereiro','Março']
lista_meses = ttk.Combobox(root,values=meses)
lista_meses.pack()

btn_meses = tk.Button(root,text='Enviar',command=lambda:adicionar_combobox(lista_meses.get()))
btn_meses.pack()

root.mainloop()


","
            0
        ",,,"['\npython', 'tkinter\n']"
538300,Dúvida em um código Python de definição de números primos,"
def primo(num):
   
    for i in range(2,21):#for i in range(1,20):
        if num==i:#num==i+1
            continue
        
        if num%i==0:#if num%i+1==0:
            return False         
        else:return True
               
        


for i in range(1, 20):
    if primo(i+1):
            print(i+1, end="" "")
print()


#Output atual (correto):2 3 5 7 9 11 13 15 17 19
#Output antigo(errado):2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  

Fiz esse código Python que mostra na tela os números primos entre 1 e 20.
Eu estava tendo dificuldades para conseguir o output esperado (que está comentado na penúltima linha), essa dificuldade aconteceu pois dentro do corpo da função ""primo"" eu estava usando as linhas que lá estão comentadas ao invés das que estão sendo usadas agora, e com isso, o output estava sendo toda a sequência de números de 2 até 20.
Eu resolvi tal problema transformando as linhas que estão comentadas na função para o modo em que elas estão agora, no entanto, eu não entendi o motivo de os dois modelos darem resultados diferentes, sendo que nos cálculos que fiz enquanto programava, ambas as formas deveriam dar o output correto.
","
Seu código está certo em parte (9 não é primo), porém o que realmente criou o problema é que você desconsiderou a prioridade dos cálculos. Assim como no dia-a-dia ao calcular fazemos primeiro multiplicação e divisão e somente após isso ocorre a soma e subtração, nas linguagens de programação ocorre o mesmo.
'''
Digamos que o num = 10 e i = 4
if num%i+1==0:  #A prioridade dessa forma é o cálculo do % e depois disso o +
## O cálculo seria esse: 
## 10%4 = 2
## 2 +1 == 0 --> Não vai entrar no if
Porém, se fizermos
if num%(i+1)==0:    #A prioridade do cálculo vai ser + e depois o %
## Ficando assim:
## 4+1 = 5
## 10%5 == 0 --> vai entrar no if
'''

Fiz algumas mudanças no código para corrigir alguns erros quando verificava os números primos e para otimizar o código. Ficando assim
def primo(num):
    primo = True
    for i in range(2, int((num)/2)+1):
    #O for só precisa percorrer até a metade+1 do tamanho do número
    #se ainda não tiver achado nenhum divisor é porque não há
        if num%i==0:
            primo = False
            break
    return primo
               
for i in range(2, 21):
    if primo(i):
            print(i, end="" "")
print()

##Output: 2 3 5 7 11 13 17 19 

","
            1
        ",,,"['\npython', 'funções\n']"
538158,Como somar valores de um grande grupo de colunas?,"
Boa tarde, pessoal.
Estou estudando Python para análise de dados e tenho o seguinte problema: eu tenho uma base de dados com varias colunas e gostaria de fazer uma soma delas sem precisar especificar o nome de cada uma delas e sem somar a última coluna. Exemplo:

Eu poderia somar cada uma das colunas:

Mas acho que essa não é a melhor forma de fazer em uma base com muitas colunas.
Obrigado a todos pela a atenção e boas festas.
","
Há várias formas de conseguir essa soma. A melhor para as necessidades do programador dependerá da situação.
Para a tabela apresentada (pf, escrever as perguntas colocando código em vez de capturas de ecrã):
import pandas as pd

df = pd.DataFrame({'a': [1, 2, 3],
                   'b': [2, 3, 4],
                   'c': [5, 9, 1],
                   'd': [3, 7, 9]})

Podemos somar tudo e subtrair o que não queremos:
df['soma'] = df.sum(axis = 1) - df['d']

Outra forma é usando a ferramenta apply() com uma função adequada:
f = lambda x: sum(x[:-1])
df['soma'] = df.apply(f, axis = 1)

Na primeira alternativa, usou-se o nome da coluna. Na segunda, utilizou-se o facto de se saber que a coluna que não deve ser somada é a última.
Outra alternativa, talvez um pouco mais versátil que as anteriores, é obter a lista de colunas e depois manipular a lista em função das necessidades:
colunas = list(df)
colunas.remove('d') 
# ou qualquer outro metodo de manipulacao de listas
# neste caso remove() porque lhe estamos a fornecer o nome da coluna a remover
df['soma'] = df[colunas].sum(axis = 1)

Há ainda a possibilidade de usar iloc(), fatiando (?) adequadamente.
","
            1
        ",,,"['\npython', 'banco-de-dados\n']"
538149,Python -- Procurar no arquivo TXT,"
Tenho um arquivo em Python para registro de alunos.Gostaria de criar um outro programa, para que eu escreva o nome do aluno e o programa já informe os dados do aluno que estão anotados no arquivo.
Código:
import os

cadastrar_aluno = 's'
nome_arquivo = ""alunos.txt""
nome_escola = ""ESCOLA MUNICIPAL FULANO DA SILVA""
separador = ""-"" * len(nome_escola)
cabecalho =  separador + ""\n"" + nome_escola + ""\n"" + separador

if not os.path.exists(nome_arquivo):
    arquivo_cadastro = open(nome_arquivo, 'w+t', encoding=""utf-8"")
    arquivo_cadastro.write(cabecalho)
    arquivo_cadastro.close()
    
def salvar_aluno(aluno):
    arquivo_cadastro = open(nome_arquivo, ""r"", encoding=""utf-8"")
    posicao_aluno = arquivo_cadastro.read().count(""Aluno"") + 1
    arquivo_cadastro.close()
    
    arquivo_cadastro = open(nome_arquivo, 'a+t', encoding=""utf-8"")
    arquivo_cadastro.write(""\nAluno "" + str(posicao_aluno) + ""\n"")
    
    for chave in aluno:
        arquivo_cadastro.write(""- "" + chave + "": "" + aluno[chave] + ""\n"")
    
    arquivo_cadastro.write(separador)
    arquivo_cadastro.close()

while cadastrar_aluno == 's':
    #cadastro do aluno
    aluno = {
      ""Nome"": """",
      ""CPF"": """",
      ""Mãe"": """",
      ""Data de Nascimento"": """",
      ""Idade"": 0,
      ""Série"": """"
    }
    
    aluno[""Nome""] = input(""Digite o nome do aluno:"")
    aluno[""CPF""] = input(""Digite o CPF do aluno:"")
    aluno[""Mãe""] = input(""Digite o nome da mãe do aluno:"")
    aluno[""Data de Nascimento""] = input(""Digite a data de nascimento do aluno:"")
    aluno[""Idade""] = input(""Digite a idade do aluno:"")
    aluno[""Série""] = input(""Digite a série do aluno:"")
    
    '''    
    print(""Digite os campos abaixo para cadastrar um aluno:"")
    for chave in aluno:
        aluno[chave] = input(chave + "":"")
    '''

    salvar_aluno(aluno)
    
    cadastrar_aluno = input(""Deseja cadastrar mais um aluno? (s ou n)"").lower()

#comando_abrir_arquivo = ""notepad "" + nome_arquivo
#os.system(comando_abrir_arquivo)

","
Podemos usar um argumento para o nome do aluno, abrir o ficheiro, dividir pelo separador, realizar um ciclo pelos alunos e comparar o argumento com a 2ª linha que contém o nome do aluno.
import sys

if (len(sys.argv) >= 2):
    nome = sys.argv[1]
    encontrou_resultados = False
    with open(""alunos.txt"", ""r"", encoding=""utf8"") as f:
        texto = f.read()
        dados = texto.split(""--------------------------------"")

        for i in range(2, len(dados) - 1):
            aluno = dados[i].strip()
            linhas = aluno.splitlines()
            if nome.strip().lower() == linhas[1][8:].strip().lower():
                encontrou_resultados = True
                print(aluno)

        if encontrou_resultados == False:
            print(""Não existem resultados."")
else:
    print(""Argumentos inválidos."")

","
            0
        ",,,['\npython\n']
538142,Criar vários clientes de uma classe Clientes,"
Como eu poderia adicionar uma lista de clientes na classe Clientes?
class Clientes():
    def __init__(self, nome, cpf):
        self.nome = nome
        self.cpf = cpf


listaClientes = ['cliente1', 'cliente2', 'cliente3']

Se eu fizer um for, ele só vai gravar o último cliente por cima dos clientes anteriores.
for x in listaClientes:
    x = Clientes('nome','cpf')

Assim ele só registra o cliente 3 e perde os clientes 1 e 2.
","
vc precisa de uma lista para isso
class Clientes():
        def __init__(self, nome, cpf):
            self.nome = nome
            self.cpf = cpf
    
    listaClientes = ['cliente1', 'cliente2', 'cliente3']
    
    cliente =[]
    for i in listaClientes:
        c = Clientes('nome','cpf')
        cliente.append(c)


for k in  cliente:
    print(k.nome,k.cpf)

","
            -1
        ",,,['\npython\n']
538134,URI Online Judge 1024 - Python,"
URI 1024: Solicitaram para que você construisse um programa simples de criptografia. Este programa deve possibilitar enviar mensagens codificadas sem que alguém consiga lê-las. O processo é muito simples. São feitas três passadas em todo o texto.
Na primeira passada, somente caracteres que sejam letras minúsculas e maiúsculas devem ser deslocadas 3 posições para a direita, segundo a tabela ASCII: letra 'a' deve virar letra 'd', letra 'y' deve virar caractere '|' e assim sucessivamente. Na segunda passada, a linha deverá ser invertida. Na terceira e última passada, todo e qualquer caractere a partir da metade em diante (truncada) devem ser deslocados uma posição para a esquerda na tabela ASCII. Neste caso, 'b' vira 'a' e 'a' vira '`'.
Por exemplo, se a entrada for “Texto #3”, o primeiro processamento sobre esta entrada deverá produzir “Wh{wr #3”. O resultado do segundo processamento inverte os caracteres e produz “3# rw{hW”. Por último, com o deslocamento dos caracteres da metade em diante, o resultado final deve ser “3# rvzgV”.
Entrada
A entrada contém vários casos de teste. A primeira linha de cada caso de teste contém um inteiro N (1 ≤ N ≤ 1104), indicando a quantidade de linhas que o problema deve tratar. As N linhas contém cada uma delas M (1 ≤ M ≤ 1103) caracteres.
Saída
Para cada entrada, deve-se apresentar a mensagem criptografada.
Estou tentando resolver o problema do URI online judge 1024 em python, porém sempre recebo o erro ""time limit exceeded"". Alguém pode me ajudar a otimizar meu algoritmo?
n = int(input())


for i in range(n):
   string = input()
   string = list(string)
   
   for j in range(0, len(string)):
      if (string[j].isalpha()):
         string[j] = chr(ord(string[j])+3) 
      
   new_str = string[::-1]
      
   tamanho = len(new_str)//2
      
   for k in range(tamanho, len(new_str)):
      if new_str[k] == "" "":
        continue
      new_str[k] = chr(ord(new_str[k])-1)
          
        
   print("""".join(new_str))

",,,,,"['\npython', 'string', 'ascii', 'uri\n']"
538042,"Como deixar um programa em loop esperando sempre um novo INPUT, mesmo após lançamento de uma exceção?","
Fiz um programa para realizar sorteios, entretanto não consigo deixá-lo em loop aguardando um novo input após um erro na entrada. Ex:
from random import sample
from excecoes import SorteioInvalido


class Sorteador:
    def __init__(self, num_sorteados):
        self._num_sorteados = num_sorteados
        self._participantes = self.carrega_participantes()
        self._lista_sorteados = self.carrega_lista_sorteados()
        self.current_index = 0

@property
def num_sorteados(self):
    return self._num_sorteados

@property
def participantes(self):
    return self._participantes

def __iter__(self):
    return self

def __next__(self):
    indice_final = len(self._lista_sorteados)
    if self.current_index >= indice_final:
        raise StopIteration
    current = self._lista_sorteados[self.current_index]
    self.current_index += 1
    return current

def carrega_participantes(self):
    participantes = []
    with open('participantes.txt', 'r', encoding='utf-8') as arquivo:
        for linha in arquivo:
            linha = linha.strip()
            participantes.append(linha)
    arquivo.close()
    return participantes

def carrega_lista_sorteados(self):
    if self.validando_num_participantes():
        lista_sorteados = sample(
            sample(self.participantes, len(self.participantes)), self.num_sorteados)
        return lista_sorteados

def validando_num_participantes(self):
    if len(self.participantes) >= self.num_sorteados:
        return True
    raise SorteioInvalido(
        'Registre um número de pessoas a serem sorteadas que seja menor ou igual ao número de participantes')

while True:
        num_sorteados = int(input('Quantos premiados devem ser sorteados? '))
        sorteia = Sorteador(num_sorteados)
        for sorteado in sorteia:
            print(sorteado)

Selecionando 3 como input, o programa irá retornar:
Paulo
Francisco
Matheus

mas,como minha lista de participantes tem 10 nomes, se eu digitar 12 no input irá cair na exceção de validação de números de participantes, no qual precisa ser um número maior ou igual ao número de sorteios a serem realizados, retornando:
    Traceback (most recent call last):
  File ""c:\Users\mfsra\Desktop\Projetos\Sorteador\sorteador.py"", line 5, in <module>
    sorteia = Sorteador(num_sorteados)
  File ""c:\Users\mfsra\Desktop\Projetos\Sorteador\src.py"", line 9, in __init__
    self._lista_sorteados = self.carrega_lista_sorteados()
  File ""c:\Users\mfsra\Desktop\Projetos\Sorteador\src.py"", line 41, in carrega_lista_sorteados
    if self.validando_num_participantes():
  File ""c:\Users\mfsra\Desktop\Projetos\Sorteador\src.py"", line 49, in validando_num_participantes
    raise SorteioInvalido(
excecoes.SorteioInvalido: Registre um número de pessoas a serem sorteadas que seja menor ou igual ao número de participantes

E o laço se encerra, tendo que dar ""run"" no programa de novo. Como faço pra manter o laço, para aceitar um novo input mesmo após um erro e lançamento de uma exceção?
","
por hora como forma de tentar executar mesmo numa passagem de valor inválida eu faria a seguinte mudança:
def validando_num_participantes(self):
    try:
        if len(self.participantes) >= self.num_sorteados:
            return True
    except:
        SorteioInvalido(
        'Registre um número de pessoas a serem sorteadas que seja menor ou igual ao número de participantes')
        


Se a exceção estiver ocorrendo aqui os blocos try: e except: respectivamente tentarão executar a primeira parte e caso não haja como levarão a segunda como uma exceção tratada, e o programa continua seguindo
","
            -4
        ",,,"['\npython', 'python-3.x', 'loop\n']"
538015,Porque essa comparação entre arrays não funciona no Python?,"
Considere os 3 arrays abaixo
Retorne o valor do array xarr se o valor for True no array cond. Caso contrário, retorne o valor do array yarr.
import numpy as np

xarr = np.array([1.1, 1.2, 1.3, 1.4, 1.5])
yarr = np.array([2.1, 2.2, 2.3, 2.4, 2.5])
cond = np.array([True, False, True, True, False])

#Minha resposta ao problema

result1 = np.arange(cond.size)
a=0
for i in cond:
    if i == True:
        #print(xarr[a])
        result1[a] = xarr[a]
        a=a+1
    else:
        #print(yarr[a])
        result1[a] = yarr[a]
        a=a+1
print(result1)

Como resposta eu obtenho isso:
[1 2 1 1 2]

Mas gostaria de obter isso:
[1.1 2.2 1.3 1.4 2.5]

Fiquei confuso porque quando uso os ""prints"" que estão dentro dos ""if/else"", eles retornam o valor que eu desejo, mas quando atribuo eles ao novo ""array"" eles não vão como imagino.
Qual a lógica que estou errado ou deixando passar?
","
Pela forma como result1 foi criada, o numpy assumiu como int64 e e' por isso que o resultado que esta a dar sao números inteiros. Para se ver isto, basta fazer: print(result1.dtype). Para mais informação sobre isto, ver: https://numpy.org/doc/stable/reference/generated/numpy.arange.html
Os print() dentro dos if else dao o valor que se pretende porque sao os dados originais, que sao do tipo float64 (por exemplo: print(yarr.dtype)).
Quanto a utilização da variável a, nao ha nada de ""errado"", no entanto, a utilização e' estranha e a lógica de incremento ora no if ora no else nao me parece uma boa pratica. Para o tipo de situação em que se pretende ter acesso ao objecto e ao seu índice, o Python fornece a enumerate(). Por exemplo:
for indice, obj in enumerate(lista):
    <resto do codigo>

No entanto, a grande questão aqui e' sobre a estratégia geral do código. Fazer um for com numpy como se estivéssemos a usar listas nao e' a forma mais adequada. Ha muitos conteúdos sobre isto na Internet. Procurar por exemplo ""vetorização numpy"", no motor de busca preferido.
Com numpy, o ideal e' usarmos as ferramentas que a biblioteca fornece. Ha uma que me parece util para este caso:
https://numpy.org/doc/stable/reference/generated/numpy.where.html
Assim:
import numpy as np

xarr = np.array([1.1, 1.2, 1.3, 1.4, 1.5])
yarr = np.array([2.1, 2.2, 2.3, 2.4, 2.5])
cond = np.array([True, False, True, True, False])

print(np.where(cond,xarr,yarr))

","
            5
        ",,,"['\npython', 'array', 'numpy', 'data-science\n']"
536954,Preciso de ajuda para realizar uma iteração em uma lista de nomes,"
Enquanto treinava iteração, fiz a seguinte classe:
class MyRange:
  def __init__(self, start, end):
    self.value = start
    self.end = end

  def __iter__(self):
    return self

  def __next__(self):
    if self.value >= self.end:
        raise StopIteration
    current = self.value
    self.value += 1
    return current

nums = MyRange(1, 10)
for num in nums:
    print(num)

que está funcionando perfeitamente, retornando:
1
2
3
4
5
6
7
8
9

Entretanto tentei fazer o mesmo com uma lista de nomes, mas não funcionou:
class Nomes:
  def __init__(self, lista):
    self.lista = lista

  def __iter__(self):
    return self

  def __next__(self):
    indice_inicial = 0
    indice_final = len(self.lista)
    if indice_inicial >= indice_final:
        raise StopIteration
    indice_current = indice_inicial
    current = self.lista[indice_current]
    indice_inicial += 1
    return current

lista_de_nomes = Nomes(['marcos', 'felipe', 'lucas'])

for nome in lista_de_nomes:
    print(nome)

Nessa iteração, com nomes, por algum motivo, é criado um loop infinito repetindo sempre o primeiro nome, 'marcos':
marcos
marcos
marcos
marcos
marcos
marcos
...

Como consertar o código da classe nomes de forma que a iteração possa retornar:
marcos
felipe
lucas

",,,,,"['\npython', 'python-3.x', 'next\n']"
536844,"O que significa um ""bound method""?","
O que é um bound method em Python?
Qual a diferença entre métodos bound e static?
","
Um bound method é simplesmente uma função que é um atributo de uma classe e é acessada por uma de suas instâncias. Ex:
class X:
    def f(self):
        pass

print(X.f) # function
print(X().f) # bound method

Ou seja, se eu acesso a função como X.f (nome da classe e nome da função), ela é uma função ""normal"". Mas se eu acessá-la através de uma instância (X()), ela passa a ser um bound method.
A diferença é que em um bound method o primeiro argumento da função sempre é a instância que está fazendo a chamada. Por exemplo:
class X:
    def __init__(self, val):
        self.val = val
    def f(self):
        print(self.val)

instancia = X(5)
instancia.f() # 5

# chamando f() com outras instâncias
X(10).f() # 10
X(42).f() # 42

Ou seja, estou chamando f() sem nenhum argumento, mas como a chamada é feita a partir de uma instância da classe X, então f é um bound method, o que significa que a instância será automaticamente passada para a função como o primeiro argumento.

No fundo, instancia.f() é o mesmo que X.f(instancia) (chamar o método f da classe X, passando a instância instancia como primeiro argumento).

Vale lembrar ainda que a função/método não precisa necessariamente ser definido dentro da classe, pois também é possível fazer isso:
# função genérica que imprime o atributo ""val"" do objeto que for passado para ela
def func(self):
    print(self.val)

class X:
    def __init__(self, val):
        self.val = val

X.f = func

instancia = X(5)
instancia.f() # 5

# só pra embananar ainda mais: outra classe que também tem ""val""
class Y:
    def __init__(self, val):
        self.val = val

Y.whatever = func

y = Y(10)
y.whatever() # 10

Claro que eu também poderia fazer func(instancia) ou func(y). Isso é só para mostrar o mecanismo do bound method: a função é um atributo da classe e foi chamada através de uma instância desta. Por isso esta instância é passada como o primeiro argumento da função.

Mas e se eu quisesse chamar um método X.f() sem argumentos (ou sem que o primeiro argumento seja necessariamente uma instância de X)?
Basta fazer com que o método seja static:
class X:
    def __init__(self, val):
        self.val = val

    @staticmethod
    def f():
        print('bla')

X.f() # bla

# agora não é mais bound, nem se for acessado por uma instância
print(X.f) # function
print(X(5).f) # function


Apenas para complementar, vamos ver o que acontece se o método f recebe vários argumentos:
class X:
    def __init__(self, val):
        self.val = val

    @staticmethod
    def static(a, b, c):
        print(a, b, c)

    def bound(self, a, b, c):
        print(self.val, a, b, c)

instancia = X(5)
instancia.bound(1, 2, 3) # 5 1 2 3
X.static(1, 2, 3) # 1 2 3
# sim, podemos chamar o método estático através da instância (o self também não é passado, pois não é bound)
instancia.static(1, 2, 3) # 1 2 3

# erro, pois eu passei ""1"" no lugar do self
X.bound(1, 2, 3) # TypeError: bound() missing 1 required positional argument: 'c'
# o correto é
X.bound(instancia, 1, 2, 3) # 5 1 2 3

Ou seja, o método bound, quando acessado a partir de uma instância, é um bound method: a instância é passada como o primeiro argumento, e os demais são colocados em seguida (instancia.bound(1, 2, 3) é o mesmo que chamar X.bound(instancia, 1, 2, 3)).
Já o método static é estático, e por isso não é bound (não há a passagem da instância como primeiro argumento).

Para entender melhor o mecanismo que injeta o self automaticamente (e vários outros detalhes), leia aqui.
","
            6
        ",,,"['\npython', 'terminologia', 'método\n']"
536803,Problema ao acessar valores em um dicionário - Python,"
Eu tenho um dicionário que funciona da seguinte forma:
{'0': {'Nome': 'Marcos', 'ID': 99984}, '1': {'Nome': 'Julia', 'ID': 99983}, '2': {'Nome': 'Carlos', 'ID': 99982}}

Como dá para ver cada chave no dicionário inicial possui como valor um outro dicionário que por sua vez possui as chaves Nome e ID.
Eu estou tentando verificar se tal nome existe no dicionário, para isso fiz esse código:
if ""Marcos"" in meu_dicionario:
    print(""Esse nome existe!"")
else:
    print(""Esse nome não existe!"")

""Marcos"" existe no dicionário, mas sempre recebo a mensagem Esse nome não existe!.

Como eu poderia estar fazendo essa verificação?
","
O operador in verifica as chaves do dicionário, que no caso são '0', '1' e '2'. Por isso seu código não funciona, pois está verificando se o dicionário possui a chave ""Marcos"". Mas ""Marcos"" é um valor (não uma chave), e nem está no dicionário principal (ele está dentro de um dos dicionários internos).
Ou seja, se for pra procurar nos nomes, você tem que verificar os valores (os dicionários internos):
meu_dicionario = {'0': {'Nome': 'Marcos', 'ID': 99984}, '1': {'Nome': 'Julia', 'ID': 99983}, '2': {'Nome': 'Carlos', 'ID': 99982}}

# se algum dos dicionários internos tem o nome que procuro 
if any(d['Nome'] == 'Marcos' for d in meu_dicionario.values()):
    print(""Esse nome existe!"")
else:
    print(""Esse nome não existe!"")

values() retorna os valores do dicionário (que no caso são os dicionários internos, os que possuem ""Nome"").
Depois eu uso any passando uma generator expression que verifica se algum desses dicionários tem o nome que estou buscando.

Se quiser também pode usar um loop simples:
for d in meu_dicionario.values():
    if d['Nome'] == 'Marcos':
        print(""Esse nome existe!"")
        break # se já encontrou, interrompe o loop
else:
    print(""Esse nome não existe!"")

Lembrando que o else acima é do for, não do if (ele entra no else se o loop não é interrompido por um break, ou seja, se não encontrar o nome).

Por fim, reveja se precisa mesmo de um dicionário. Se as chaves são números sequenciais começando do zero, talvez uma lista seja mais adequada...
","
            4
        ","
Você pode utilizar um generator, que te permite criar uma sequência de elementos sem de fato armazená-los em memória, apenas sendo criados quando necessário. Desta forma, a partir do seu dicionário, você consegue uma sequência com os nomes e então fica fácil utilizar o operador in para verificar se o nome desejado se encontra no dicionário.
Criando uma função para realizar essa consulta, vc consegue reutilizar e melhorar a legibilidade do seu código.
meu_dicionario = {'0': {'Nome': 'Marcos', 'ID': 99984}, '1': {'Nome': 'Julia', 'ID': 99983}, '2': {'Nome': 'Carlos', 'ID': 99982}}

    
def find_person_by_name(name: str) -> bool:
    names = (meu_dicionario[person]['Nome'] for person in meu_dicionario)
    
    if name in names:
        print('Existe')
        return True
        
    print('Não existe')
    return False
    
    
find_person_by_name('Marcos')
# Existe

find_person_by_name('Nathan')
# Não existe
    

","
            2
        ","['\npython', 'python-3.x\n']"
536677,Chamar uma função que retorna para uma anterior pode ocupar memória desnecessária? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



O que é uma recursão de cauda?

                                (2 respostas)
                            


Quando usar recursão e quando usar laços?

                                (3 respostas)
                            


Uma função recursiva pode substituir while e for?

                                (2 respostas)
                            

Fechada há 4 meses.



Estou fazendo um sistema básico de menu no qual para ele eu defino uma função. Na ""navegação"" do menu principal posso acessar outro menu (no caso eu chamo a função deste outro menu) e neste tenho uma opção de voltar. Minha dúvida é: Se eu ficar indo do menu principal para o menu secundário e voltar, repetidas vezes, isto é uma forma incorreta de fazer este sistema pois consumiria memória desnecessária (já que eu apenas estou chamando um bloco de código que eu já fiz)?
def menu_sedundario():
    print(""\nBem-vindo ao menu secundário. Digite [0] para voltar ao menu principal:\n"")
    resposta2 = input()

    if resoposta2 == ""0"":
        menu_principal()
    else:
        print(""\nInválido""\n)
        menu_secundario()

def menu_principal():
    print(""\nBem-vindo ao menu principal. Digite [1] para acessar ao segundo menu:\n"")
    resposta = input()
    
    #Verificação simples apenas para entender a ideia.
    if resposta == ""1"":
        menu_secundario()
    else:
        print(""\nInválido\n"")
        menu_principal()

menu_principal()

","
sim, a função fica na memoria ate ser fechada.
veja no teste, que o erro de recursão é levantado quando se acumula
>>> def teste():
...     teste()
... 
>>> teste()
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""<stdin>"", line 2, in teste
  File ""<stdin>"", line 2, in teste
  File ""<stdin>"", line 2, in teste
  [Previous line repeated 996 more times]
RecursionError: maximum recursion depth exceeded

a solução mais simples para isso é usar loop
def menu():
    comando = input('entre comando:')
    if not comando:
        return 1

while 1:
    if menu():
        break

","
            -2
        ",,,['\npython\n']
536676,"Gerar um número inteiro a partir da sequencia existente em outro numero inteiro, com Python","
Para chegar nesse resultado, eu pensei em começar transformando a str em int, criando uma lista com os elementos sequenciais. No entanto, não sei como fazer nos casos em que o número de entrada possua mais de uma sequência.
Por exemplo, uma entrada 123687 irá retornar (1, 2, 3), ok.
Mas, no caso de uma entrada 123965678, ele irá retornar (1, 2, 3, 5, 6, 7,8), sendo que eu gostaria de gerar listas separadas para cada sequência.
Logo, uma lista (1, 2, 3) e outra (5, 6, 7, 8).
Por fim, irei transformar isso numa função que retorne apenas o inteiro com a maior sequência.
numero = input('Digite um número inteiro: ')
lista = [int(i) for i in numero]
for i in range(len(lista) - 1):
    if lista[i] == lista[i + 1] - 1:

        sequencia.append(lista[i])
        sequencia.append(lista[i + 1])
    
print(list(set(sequencia)))

","
Uma solução é iterar pelos dígitos do número inserido pelo usuário e utilizar uma lista auxiliar para fazer a análise da entrada e assim identificar sequencias de números naturais consecutivos menores que dez segundo o seguinte algoritmo:
Dada uma string como entrada cujo os caracteres sejam dígitos decimais

Armazene a entrada do usuário como uma string na variável numero.
Defina uma lista auxiliar chamada lista.
Defina uma lista chamada sequencias contendo os resultados a serem retornados ao fim do processo iterativo.
Do primeiro digito a esquerda da entrada até o último digito a direita faça:


Verifique se a entrada foi esgotada:

Se sim verifique se há mais de um elemento na lista auxiliar lista:

Se sim adicione uma cópia da lista auxiliar a lista sequencias contendo os resultados.


Retorne o lista sequencias como resultado.


Retire um dígito a esquerda da entrada.
Verifique se a lista auxiliar não está vazia e verifique se o dígito extraído não seja o digito consecutivo ao último digito da lista auxiliar.

Caso as duas afirmações anteriores sejam verdadeiras

Verifique se há mais de um elemento na lista auxiliar.

Se sim adicione uma cópia da lista auxiliar a lista sequencias contendo os resultados.


Esvazie a lista auxiliar.




Adicione o dígito extraído a lista auxiliar.
Reitere o processo.

O algoritmo pode ser implementado usando um laço de iteração ou função recursiva, no caso preferi o implementar por meio de uma função recursiva e a implementação não faz nenhuma validação da entrada do usuário:
numero = ""12396567899456789345""#input('Digite um número inteiro: ')

def verificador(numero, lista=[], sequencias=[]):
    if len(numero) == 0:
        if len(lista) > 1:
            sequencias.append(lista.copy())
        return(sequencias)
    digito = int(numero[0])
    numero = numero[1:]
    lista = lista
    if len(lista) != 0 and lista[-1] != digito - 1:
        if len(lista) > 1:
            sequencias.append(lista.copy())
        lista.clear()
    lista.append(digito)
    return verificador(numero, lista, sequencias)    
  
print(verificador(numero))
#[[1, 2, 3], [5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9], [3, 4, 5]]

Teste o exemplo no Repl.it
","
            1
        ",,,"['\npython', 'lista\n']"
536616,Como autenticar cliente com biblioteca SSL do python?,"
Estou fazendo um servidor de mensagens p2p e quero autenticar usuários. Ao procurar na internet, encontrei isso aqui:
context.verify_mode = ssl.CERT_REQUIRED;#
context.load_verify_locations(cafile=ca_bundle);
context.check_hostname = False;

De acordo com o python.org a primeira linha forçaria uma autenticação de cliente mandatória. A segunda linha carrega o bundle de certificados para autenticação do certificado em questão. A terceira linha é apenas por que minha rede usa IP dinâmico, então eu uso identificadores como ""common name"" na hora de gerar os certificados, então eu uso essa linha para evitar que verifique o IP do certificado.
Eu consigo gerar os certificados sem problema, mas queria ter certeza que estou implementando o protocolo corretamente, isto é, esse código acima está certo?
Caso contrário, teria alguma biblioteca capaz de lidar desse tipo de conexão? Ou seria melhor eu implementar o protocolo eu mesmo?
Qualquer comentário é bem vindo!
Essa aqui é a minha tentativa:
cliente
import socket, ssl, sys
import time
client_number = ""5502199999999"";#eu uso números de celular como 'common name'
CERT_AU = ""arquiv_com_certificado_da_CA.pem""
CERT_1 = ""arquivo_com_o_certificado_do_cliente.pem""
KEY = ""arquivo_com_a_chave_privada_do_cliente.pem""
sock = socket.socket(socket.AF_INET);
context = ssl.create_default_context(ssl.Purpose.SERVER_AUTH);
context.set_ciphers('EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH')
context.check_hostname = False;
context.load_cert_chain(certfile=CERT_1, keyfile=KEY)
context.load_verify_locations(cafile=CERT_AU);
conn = context.wrap_socket(sock);

x1 = time.perf_counter();
conn.connect(('192.168.0.107', 50052));
resposta = conn.recv();
resposta = resposta.decode('UTF-8');
if resposta == ""???"":
    conn.write(bytes(sys.argv[1],""utf-8""));
    resposta = conn.recv();
    conn.close();

servidor
import ssl, socket, sys
from threading import *
from _thread import *
from datetime import datetime

sock = socket.socket();
sock.bind(('', port_ssl));
sock.listen(5);
context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH);
context.load_cert_chain(certfile=my_cert, keyfile=private_key);
'''
As próximas 3 linhas são utilizadas para obrigar o cliente a enviar
seu próprio certificado, o qual o script vai checar para ver se é efetivamente válido dado o ca_bundle oferecido.
Mais detalhes: https://docs.python.org/3.8/library/ssl.html#ssl.CERT_REQUIRED
'''
context.verify_mode = ssl.CERT_REQUIRED;#
context.load_verify_locations(cafile=ca_bundle);
context.check_hostname = False;
'''
Não usamos o check_hostname pq ele é voltado para IP e acaba dando um erro (Ele verifica o IP local fornecido)
'''
context.options |= ssl.OP_NO_TLSv1 | ssl.OP_NO_TLSv1_1  # optional
context.set_ciphers('EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH')

file = open(""client_1.txt"", ""a"");
file.write(""conexao_ssl iniciou\n-----------\n"");
file.close();

while True:
    ssock, addr = sock.accept();

    start_new_thread(recebimento_individual, (ssock, context));

print(""Servidor desligando!"");

def recebimento_individual(ssock, context):
    try:    
        print(""================="");
        conn = context.wrap_socket(ssock, server_side=True);
        '''
        Pegando o 'common name' do certificado, isto é, o nome do
        do dono do certificado.
        '''
        cert = conn.getpeercert(binary_form=False);
        cert_name = cert['subjectAltName'][0][1];
        print(cert_name);
        '''
        Essas duas linhas indicam para o remetente que conexão foi aceita e que podemos receber a mensagem.
        '''
        conn.write(bytes(""???"",""utf-8""));
        x = conn.recv().decode('UTF-8');
        
        lock.acquire();
        file = open(""client_1.txt"", ""a"");
        file.write(str(datetime.now()) + "":::"" + cert_name + "":::"" + x);
        file.write(""\n"");
        file.close();
        lock.release();

    except ssl.SSLError as e:
        print(""==receber==\n"");
        print(e);

    except Exception as e:
        print(e);

    finally:
        conn.close()

A minha pergunta é se essas duas linhas aqui:
context.verify_mode = ssl.CERT_REQUIRED;#
context.load_verify_locations(cafile=ca_bundle);

Fazem a verificação completa do certificado do cliente. Isto é, se elas analisam a assinatura do cliente e determinam que ele tem a chave privada correspondente a chave pública do certificado.
Eu quero fazer isso para autenticar meus usuários.
Nesse meio tempo eu encontrei esse que eu acho que comprova isso, mas eu queria uma fonte mais oficial.
Qualquer comentário é bem vindo
","
Após muita pesquisa, finalmente encontrei um exemplo (antigo) do uso do módulo SSL do python para autenticação de cliente:
#!/usr/bin/python3

import socket
import ssl

host_addr = '127.0.0.1'
host_port = 9001
hostname = 'www.ugtransportes.com.br'
server_cert = 'server.crt'
client_cert = 'client.crt'
client_key = 'client.key'

context = ssl.create_default_context(ssl.Purpose.SERVER_AUTH, cafile=server_cert)
context.load_cert_chain(certfile=client_cert, keyfile=client_key)

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
ssock = context.wrap_socket(sock, server_side=False, server_hostname=hostname)
ssock.connect((host_addr, host_port))

ssock.send(b""Mensagem do cliente 1"")

ssock.close()

Salvo engano, acredito que meus exemplos de cliente/servidor estão corretos. Agradeço a ajuda.
","
            1
        ",,,"['\npython', 'segurança', 'autenticação', 'ssl', 'openssl\n']"
536601,Duvida com o fatiamento com número negativo,"
Galera, como funciona o fatiamento de string com número negativo no python? Ele vem fatiando subtraindo dos índices?
nome = 'Fernando'
print(nome[::-2])
'onne'
eu vi que ele veio tirando a partir do índice 7 2 em 2 números. é assim que funciona mesmo ou eu estou equivocado?
","
Não esta ""subtraindo"", ele esta ""pulando"", no ""slice"" funciona assim:
[start:stop:steps]

No seu exemplo você passou o valor de steps e omitiu os valores de start e stop, esses dois que são usados para ""aparar"" a str, nesse caso então você irá apenas ""pular"" certos caracteres.
Se fizer algo como:
nome = 'ABCDEFGHIJK'

print(nome[::-2])

Irá retornar:
KIGECA

Se tivesse usado numero positivo print(nome[::2]) iria retornar:
ACEGIK

Quando você usa números negativos no steps ele irá começar o índice a partir do final
Como você omitiu o start e o stop ele vai do inicio ao fim pulando (""steps"") conforme você configurou (-2).
Se fizer print(nome[::3]) irá retornar:
ADGJ

Se fizer print(nome[::5]) irá retornar:
AFK

O indice com valores positivos e negativos fica mais ou menos assim na string ABCDEFGHIJK:




A
B
C
D
E
F
G
H
I
J
K




0
1
2
3
4
5
6
7
8
9
10


-11
-10
-9
-8
-7
-6
-5
-4
-3
-2
-1




Usando o step com valor [::2] (positivo) irá obter, se usar [::-2] Se vai retornar a string na ordem inversa, pois o índice começa do final:




A
C
E
G
I
K




0
2
4
6
8
10


-11
-9
-7
-5
-3
-1




Usando [::-5]




A
F
K




-11
-6
-1




Com a name='Fernando' usando [::-2] você tem o seguinte (veja quais ficaram em negrito):




F
E
R
N
A
N
D
O




0
1
2
3
4
5
6
7


-8
-7
-6
-5
-4
-3
-2
-1




Sendo
","
            7
        ",,,['\npython\n']
536550,Limitar o input,"

Quando o usuário responde o input está printando o (Limite é 10, insira um valor até 10), sendo que e era para printar a matriz, eu so quero que printa o limite 10 quando o usuário digitar um número maior que 10 na linha ou coluna da matriz.

Qual o erro do meu código ?
import random

# Gera a matriz com os números aleatórios de 0 à 90.
def matriz_aleatoria(li, col):
    linha = []
    for lin in range(li):
        coluna = []
        for c in range(col):
            coluna.append(random.randint(0, 91))
        linha.append(coluna)
    return (linha)

# B = vetor B, Verifica quais são pares e impares e joga na ordem de pares e depois impares.
def par_e_impar(mat):
    B = []
    for linha in mat:
        for col in linha:
            if col % 2 == 0:
                B.insert(0, col)
            else:
                B.append(col)
    return (B)
# Verifica se informou somente número para saber a quantidade de linhas e colunas.
while True:
    col = int(input('Coloque a quantidade de colunas da matriz: '))
    lin = int(input('Coloque a quantidade de linhas da matriz: '))
    if col and lin:
        mat = matriz_aleatoria(int(lin),int(col))
        B = par_e_impar(mat)
        break
# Caso não tenha informado número, imprime a mensagem para inserir somente número.
    else:
        print('Por favor, insira somente a quantidade de colunas e linhas em número !!!')
# Limitar a quantidade que o usuário pode digitar.
while True:
    if col or lin >= 11:
        print('Limite é 10, insira um valor até 10.')
        break
    else:
        print(B)

","
Olá, blz?
Para o loop infinito parar basta retirar o ultimo while. Caso vc queira continuar usando um While, utilize uma Flag para sair do loop. Esqueça isso de Break. Vale lembrar que ele só acusará o erro caso a linha AND coluna seja maior que 10. seria bom fazer uma crítica para cada um. linha or coluna.
Ficaria mais ou menos assim utilizando uma flag:
import random

# Gera a matriz com os números aleatórios de 0 à 90.
def matriz_aleatoria(li, col):
    linha = []
    for lin in range(li):
        coluna = []
        for c in range(col):
            coluna.append(random.randint(0, 91))
        linha.append(coluna)
    return (linha)

# B = vetor B, Verifica quais são pares e impares e joga na ordem de pares e depois impares.
def par_e_impar(mat):
    B = []
    for linha in mat:
        for col in linha:
            if col % 2 == 0:
                B.insert(0, col)
            else:
                B.append(col)
    return (B)
# Verifica se informou somente número para saber a quantidade de linhas e colunas.
temp = False
while not temp:
    col = int(input('Coloque a quantidade de colunas da matriz: '))
    lin = int(input('Coloque a quantidade de linhas da matriz: '))
    if col and lin:
        mat = matriz_aleatoria(int(lin),int(col))
        B = par_e_impar(mat)
    if col and lin >= 11:
        print('Limite é 10, insira um valor até 10.')
        col = int(input('Coloque a quantidade de colunas da matriz: '))
        lin = int(input('Coloque a quantidade de linhas da matriz: '))
    else:
        if col and lin <= 10:
            temp = True
            print(B)
# Caso não tenha informado número, imprime a mensagem para inserir somente número.
        else:
            print('Por favor, insira somente a quantidade de colunas e linhas em número !!!')
# Limitar a quantidade que o usuário pode digitar.


","
            -2
        ","
Olá, resolvi o problema caso coloque letras : )
import random

# Gera a matriz com os números aleatórios de 0 à 90.
def matriz_aleatoria(li, col):
    linha = []
    for lin in range(li):
        coluna = []
        for c in range(col):
            coluna.append(random.randint(0, 91))
        linha.append(coluna)
    return (linha)

# B = vetor B, Verifica quais são pares e impares e joga na ordem de pares e depois impares.
def par_e_impar(mat):
    B = []
    for linha in mat:
        for col in linha:
            if col % 2 == 0:
                B.insert(0, col)
            else:
                B.append(col)
    return (B)
# Verifica se informou somente número para saber a quantidade de linhas e colunas.

temp = False
col = input('Coloque a quantidade de colunas da matriz: ')
lin = input('Coloque a quantidade de linhas da matriz: ')


while not temp:
    while not col.isnumeric() or not lin.isnumeric():
        print(""Digite somente números"")
        col = input('Coloque a quantidade de colunas da matriz: ')
        lin = input('Coloque a quantidade de linhas da matriz: ')
    else:
        col = int(col)
        lin = int(lin)
    if col and lin:
        mat = matriz_aleatoria(int(lin),int(col))
        B = par_e_impar(mat)
    if col > 10 or lin > 10:
        print('Limite é 10, insira um valor até 10.')
        col = int(input('Coloque a quantidade de colunas da matriz: '))
        lin = int(input('Coloque a quantidade de linhas da matriz: '))
    else:
        if col <= 10 and lin <= 10:
            temp = True
            print(B)
# Caso não tenha informado número, imprime a mensagem para inserir somente número.
        else:
            print('Por favor, insira somente a quantidade de colunas e linhas em número !!!')
# Limitar a quantidade que o usuário pode digitar.


Analise o que fiz e tentei deixar do seu jeito
","
            -2
        ",['\npython\n']
536304,Criar uma lista de tuplas extraindo uma str de um txt,"
Tenho um txt chamado 'layout1.txt' com a seguinte estrutura:
specs6;[(0,2),(2,17),(17,32),(32,47),(47,62),(62,72)]
specs7;[(0,2),(2,17),(17,32),(32,42),(42,52),(52,83)]

Tenho o seguinte código para iterar no arquivo e buscar uma linha específica:
with open('layout1.txt', 'r', encoding = 'utf-8') as layout:
for line in layout:
    if line.startswith('specs6') == True: #identifica a linha que vou usar
        colspecs = line[7:0] #fatia a string, usando apenas o que vem após 'specs6;'

Esperava que a variável colspecs recebesse a string já a considerando como uma lista de tuplas, porém o formato é str.
Preciso que a linha retirada do arquivo seja armazenada na variável colspecs como uma lista de tuplas, tal qual:
colspecs = [(0,2),(2,17),(17,32),(32,47),(47,62),(62,72)]
print(colspecs)
print(type(colspecs))

Output do exemplo acima:
[(0, 2), (2, 17), (17, 32), (32, 47), (47, 62), (62, 72)]
<class 'list'>

","
Avalie com segurança uma string contendo um literal Python com a função ast.literal_eval(). A string fornecida deve consistir apenas nas seguintes estruturas literais do Python:

strings
bytes
números
tuplas
listas
dicionários
conjuntos
booleanos
None
Ellipsis

ast.literal_eval() pode ser usado para avaliar com segurança strings contendo valores Python de fontes não confiáveis sem a necessidade de analisar os valores por si próprio. Não é capaz de avaliar expressões arbitrariamente complexas, por exemplo, envolvendo operadores ou indexação.
Aplicado no código da pergunta:
from ast import literal_eval

with open('layout1.txt', 'r', encoding = 'utf-8') as layout:
  for line in layout:
    if line.startswith('specs6') == True: 
        colspecs = literal_eval(line[7:])     # Avalia o literal contido na string 
        break

print(type(colspecs))                         # Imprime o tipo do literal avaliado.
print(colspecs)                               # Imprime o literal avaliado.
#<class 'list'>
#[(0, 2), (2, 17), (17, 32), (32, 47), (47, 62), (62, 72)]

Teste o exemplo no Repl.it
","
            0
        ","
Tente isso aqui:
file = open(""layout_1.txt"", ""r"");
content = file.read().split(""\n"");
file.close();

colspecs = [];
for line in content:
    if line.find(""specs6"") >= 0:
        temp = line[9:(len(line)-2)];
        temp = temp.split(""),("");
        for element in temp:
            element = element.split("","")
            element[0] = int(element[0]);
            element[1] = int(element[1]);

            colspecs.append((element[0],element[1]));

print(colspecs);

Básicamente, eu:

Li o conteúdo do arquivo.
Criei um loop para iterar sobre as linhas
Filtrei as linhas que contém: ""specs6""
Usei o split para converter as linhas em vetores, usando os: ""),("" como separadores.
Criei um segundo loop que itera sobre cada novo vetor (temp) e adiciona seus elementos no formato tupla: (element[0], element[1]) a lista colspecs, utilizando a função append

","
            0
        ","['\npython', 'lista', 'txt', 'tuple\n']"
536287,Como apresentar várias variáveis em um único print em Java [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Há como interpolar strings em Java?

                                (2 respostas)
                            

Fechada há 4 meses.



Estou aprendendo Java depois de já ter feito o curso inteiro de Python do Curso em Vídeo e como recém estou começando, tive um dúvida.
Como que eu posso mostrar múltiplas variáveis em um único print em Java, desde modo como eu faria em Python:
nome = 'Pedro'
idade = 16
print(f'Olá {nome}, voce tem {idade} anos!')

","
string variavelnome = ""Pedro"";
int idade = 20;
System.out.print(""Olá "" + variavelnome + "" Você Tem: "" + idade + "" Anos."");
Em Java separa variável de strings através do comando de atribuição +.
Caso for fazer uma operação, colocar a operação entre parenteses. ;)
","
            1
        ",,,"['\njava', 'python\n']"
536259,Como mudar um DatetimeIndex para exibir meses em português usando a função month_name,"
Gostaria de saber como mudar a localização de um DatetimeIndex do pandas para exibir os meses em outra língua, sem ser o inglês que é o padrão do pandas. Tentei usar ""locale"" no argumento da função month_name do DatetimeIndex, porém sem sucesso.
filename = ""files/speed_check.csv""
speed_check = pd.read_csv(filename, sep="";"", infer_datetime_format=True, index_col=""Date"", parse_dates=True)
mensal = speed_check.groupby(pd.Grouper(freq='M')).mean()
mensal.index = mensal.index.month_name()
mensal


Quando insero ""locale='French'"" por exemplo, no argumento de month_name resulta em erro de locale inválido. Tentei também mudar a localização por meio de um
import locale
locale.setlocale(locale.LC_ALL, 'French')

porém, sem sucesso novamente.
","
TL;DR idx.month_name(locale=""pt_BR.utf-8"")
Veja exemplo:
>>> import pandas as pd

>>> idx = pd.date_range(start='2018-01', freq='M', periods=3)

>>> idx
DatetimeIndex(['2018-01-31', '2018-02-28', '2018-03-31'], dtype='datetime64[ns]', freq='M')

>>> idx.month_name()
Index(['January', 'February', 'March'], dtype='object')

>>> idx.month_name(locale=""pt_BR.utf-8"")
Index(['Janeiro', 'Fevereiro', 'Março'], dtype='object')

","
            2
        ",,,"['\npython', 'windows', 'pandas\n']"
536216,Preencher combobox do google formulários,"
Olá estou tentando automatizar um projeto, que consiste em preencher 3 linhas (Input) no qual as informações estão em uma tabela do Excel. Essa primeira parte funciona perfeita mente, porem a ultima parte é marcar um combobox com a opção desejada que é Fanta.
Segue o meu código e a imagem:


import pandas as pd

tabela = pd.read_excel(""Emitir.xlsx"")

from selenium import webdriver
from time import sleep

navegador = webdriver.Edge()
navegador.get(""https://docs.google.com/forms/d/e/1FAIpQLScvtT9rTNzkvE2TyCWf5iGMcY-o-O3n5UAIsKzvuFg2GmfIeA/viewform?vc=0&c=0&w=1&flr=0"")

for i, ID in enumerate (tabela[""ID""]):
    descricao = tabela.loc[i, ""descricao""]
    ispb = tabela.loc[i, ""ispb""]
    
    navegador.get(""https://docs.google.com/forms/d/e/1FAIpQLScvtT9rTNzkvE2TyCWf5iGMcY-o-O3n5UAIsKzvuFg2GmfIeA/viewform?vc=0&c=0&w=1&flr=0"")
    

   #Preencher ID
    navegador.find_element_by_xpath (
    '//*[@id=""mG61Hd""]/div[2]/div/div[2]/div[1]/div/div/div[2]/div/div[1]/div/div[1]/input').send_keys(ID)

    # Preencher Texto
    navegador.find_element_by_xpath(
    '//*[@id=""mG61Hd""]/div[2]/div/div[2]/div[2]/div/div/div[2]/div/div[1]/div/div[1]/input').send_keys(descricao)

    # Preencher Numero
    navegador.find_element_by_xpath(
    '//*[@id=""mG61Hd""]/div[2]/div/div[2]/div[3]/div/div/div[2]/div/div[1]/div/div[1]/input').send_keys(str(ispb))

    #Selecionar Fanta
    

    # Preencher CLICAR NO BOTÃO
    navegador.find_element_by_xpath('//*[@id=""mG61Hd""]/div[2]/div/div[3]/div[1]/div[1]/div/span/span').click()
    
    sleep(2)



inserir a descrição da imagem aqui

","
Aqui funcionou desta forma. Apenas fiz um clique na seta da combobox para ela abrir e depois eu fiz o clique no XPATH da Fanta.
#Selecionar Fanta

navegador.find_element_by_xpath('//*[@id=""mG61Hd""]/div[2]/div/div[2]/div[4]/div/div/div[2]/div/div[1]/div[1]/div[1]').click()
sleep(1)
navegador.find_element_by_xpath('//*[@id=""mG61Hd""]/div[2]/div/div[2]/div[4]/div/div/div[2]/div/div[2]/div[3]/span').click()


","
            -1
        ",,,"['\npython', 'selenium', 'selenium-webdriver', 'combobox', 'dropdown\n']"
536115,Preencher nova coluna (str) no Pandas DataFrame a partir de dados de outras colunas,"
Estou trabalhando com uma base de dados de municípios brasileiros. Dentre as informações que ela possui, estão o nome do município, estado, se é capital, população, etc. Gostaria de trabalhar com os dados reunidos por região do país, incluídos em uma nova coluna.
Carreguei o dataset, fiz os ajustes e tal.
Criei as variáveis das regiões:
Norte = ['AM', 'PA', 'RR', 'AC','RO','AP', 'TO'],
Sul = ['PR', 'SC', 'RS'],
CentroOeste = ['MT', 'MS', 'GO', 'DF'],
Nordeste = ['BA', 'CE','MA', 'PB', 'PE', 'RN', 'SE', 'AL', 'PI'],
Sudeste = ['SP', 'RJ', 'MG','ES']

A seguir, criei o campo REGIAO, logo depois de Município e Estado:
df500.insert(2, 'REGIAO', 'NaN')

Para preencher a nova coluna usei:
df['REGIAO'] = df['ESTADO'].apply(lambda x: 'Sul' if x in Sul else 'Norte' if x in Norte else 'Nordeste' if x in Nordeste else 'Sudeste' if x in Sudeste else 'Centro-Oeste')

Entrentanto, a saída que recebo é a seguinte:




Index
CIDADE
ESTADO
REGIAO
CAPITAL
POPULACAO_TOTAL_2010




0
Brejo De Areia
MA
Centro-Oeste
0
5577.0


1
Cujubim
RO
Centro-Oeste
0
15854.0


2
Balbinos
SP
Sudeste
0
3702.0


3
Pacaraima
RR
Centro-Oeste
0
10433.0


4
Araquari
SC
Centro-Oeste
0
24810.0


5
Pedra Branca Do Amapari
AP
Centro-Oeste
0
10772.0


6
Ipiranga Do Norte
MT
Centro-Oeste
0
5123.0


7
Parari
PB
Centro-Oeste
0
1256.0


8
Colniza
MT
Centro-Oeste
0
26381.0


9
Luís Eduardo Magalhães
BA
Centro-Oeste
0
60105.0




ou seja, só as entradas do sudeste e as do centro-oeste estão corretas, as demais aparecem sempre como centro-oeste. Tentei fazer de dois em dois, alterando a ordem das entradas,da sintaxe do else if, não consegui sair do lugar.
Alguém pode me ajudar?
Desde já agradeço
","
Aparentemente o problema esta sendo causado pela , que você esta colocando no final da lista Ex.:
Norte = ['AM', 'PA', 'RR', 'AC','RO','AP', 'TO'],  # <

quando você faz um print dessa variável você pode notar que por causa dessa virgula a variável não é uma list ela é uma tuple com uma list dentro
print( Norte )
# output: (['AM', 'PA', 'RR', 'AC', 'RO', 'AP', 'TO'],)

veja funcionando online no ideone
então a solução é simples, remova as virgulas no fim dessas listas.

O seu lambda esta correto, eu achei ele um pouco complexo uma outra possibilidade seria utiliza o .loc como .isin para verificar e alterar esses valores como mostrado abaixo porém essa solução provavelmente será mais lenta.
regiao = {
    ""Norte"":['AM', 'PA', 'RR', 'AC','RO','AP', 'TO'],
    ""Sul"":['PR', 'SC', 'RS'],
    ""Centro Oeste"":['MT', 'MS', 'GO', 'DF'],
    ""Nordeste"":['BA', 'CE','MA', 'PB', 'PE', 'RN', 'SE', 'AL', 'PI'],
    ""Sudeste"":['SP', 'RJ', 'MG','ES'],
}
 
for k in regiao:
    df.loc[ df['ESTADO'].isin(regiao[k]), 'REGIAO'] = k

veja funcionando online no ideone
","
            2
        ","
Tratar dataframes é muito mais rápido e seguro fazendo utilização de aplicações para dataframe. Sugiro não utilizar os if e else, tente fazer um merge, criando uma base onde já conste os estados e suas regiões
Eu montei aqui rapidamente um excel pela correria com os dados e fiz através o merge um teste. Funcionou perfeitamente, tente adaptar a sua necessidade.
outra sugestão é que trabalhando com o merge não há necessidade de você criar a coluna região, ao fazer o merge com a base através a coluna estado, o próprio python vai lhe trazer esta coluna. Veja a documentação para lhe atender.
Documentação pandas \ merge
est_reg = pd.read_excel('estadosregiao.xlsx')


obj = {'ESTADO': ['MA', 'RR', 'AC', 'CE','MA', 'PB', 'PR', 'SP', 'GO', 'DF']}

df = pd.DataFrame(data=obj)


final = pd.merge(df, est_reg, how='inner', on='ESTADO', suffixes=(False, False))

print(final)

resultado:
  ESTADO       REGIAO
0     MA     Nordeste
1     MA     Nordeste
2     RR        Norte
3     AC        Norte
4     CE     Nordeste
5     PB     Nordeste
6     PR          Sul
7     SP      Sudeste
8     GO  CentroOeste
9     DF  CentroOeste

","
            1
        ","['\npython', 'pandas', 'dataframe\n']"
535944,Guardar varias abas de um excel em uma lista ou array [python | pandas | numpy] [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 4 meses.




                        Melhore esta pergunta
                    



Estou importando uma base de dados que chega pra mim com várias abas, e o número de abas é aleatório. Estou tentando automatizar pra independente do número de abas o código funcionar de maneira automatizada.

Quero tentar utilizar um for pois o processo que será feito em cada aba é o mesmo.
Cada aba tem o nome Table 1, Table 2 ... e assim consecutivamente daí o for serviria pra ir alterando de tabela em tabela(aba em aba)
Queria saber oque utilizar, se é um array, uma lista ou algo do gênero.
Depois de várias tentativas essa foi a minha ideia final, mas não sei aonde guardar esses dados
    import pandas as pd

    df_total = pd.read_excel('Consulta Fisioterapeuta 68 vagas.xlsx', None)
    table = []

    for x in range (1, len(df_total)+1:
        table[x] = pd.read_excel('Consulta Fisioterapeuta 68 vagas.xlsx', 'Table '+x)

","
Amigo, acho que entendi o que você quer e descobri a solução, porém ao tentar fazer mais ou menos o que você fez obtive o seguinte erro:
import pandas as pd

df = pd.read_excel('playlist_tabela.xlsx', None)

table = []
for x in range (1, len(df)+1):
        table[x] = pd.read_excel('playlist_tabela.xlsx', 'Sheet'+str(x))

table


ERRO
IndexError                                Traceback (most recent call last)
<ipython-input-23-294727c2966e> in <module>
     16 table = []
     17 for x in range (1, len(df)+1):
---> 18         table[x] = pd.read_excel('playlist_tabela.xlsx', 'Sheet'+str(x))
     19 
     20 table

IndexError: list assignment index out of range

Para inserir itens em lista, no python usamos o método .append(). Veja a documentação.
Solução
import pandas as pd

df = pd.read_excel('playlist_tabela.xlsx', None)

table = []
for x in range (1, len(df)+1):
        table.append(pd.read_excel('playlist_tabela.xlsx', 'Sheet'+str(x)))

table


A saída é uma lista de dataframes.
","
            0
        ",,,"['\npython', 'python-3.x', 'pandas', 'numpy\n']"
535913,Caracter Repetido [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Contar número de vezes que letras repetem em um texto

                                (3 respostas)
                            

Fechada há 4 meses.



Escreva a função “repetido” que recebe uma String por parâmetro e retorna false caso
a String não possua caracteres repetidos (que aparece mais de uma vez, independente da
posição) ou true caso algum caracter esteja repetido.
Monte também um trecho de código para testar a função.
Exemplo:
r = repetido(""aula""); /retorna true pois o 'a' se repete./
r = repetido(""aeiou""); /retorna false pois nenhum caracter se repete/
","
A partir da seguinte função irás conseguir ter a funcionalidade que desejas. Basicamente o for irá ""checkar"" cada letra da palavra enviada para a função, se a letra já estiver na lista, quer dizer que é repetida, se não quer dizer que é uma letra diferente das outras.
def repetido(palavra):
    letras = []
    for i in palavra:
        if i not in letras:
            letras.append(i)
        else:
            return True
    return False

print(repetido('aula'))

Output: True
","
            -2
        ",,,"['\npython', 'python-requests\n']"
535874,"Python selenium, scraper da amazon, não consigo encontrar o nome do produtos","
Código
from selenium import webdriver
import os

objeto = ('teclado')
os.environ['PATH'] += r""C:/SeleniumDrivers""
driver = webdriver.Chrome()
driver.get('https://www.amazon.es/-/pt')
driver.maximize_window()
cookies = driver.find_element_by_id('sp-cc-accept')
cookies.click()
pesquisa = driver.find_element_by_id('twotabsearchtextbox')
pesquisa.click()
pesquisa.send_keys(objeto)
lupa = driver.find_element_by_id('nav-search-submit-button')
lupa.click()

Depois disto já tentei imensas formas de encontrar o titulo, usando o .find_element e as suas variações mas nunca consigo, é para um trabalho de Aplicações Informáticas do 12º ano, para além do titulo estava também à procura do preço, muito obrigado
++
O códgio html com o titulo que quero copiar está assim
<span class='a-size-base-plus a-color-base a-text-normal'> == 0$
 ""Kensington ValuKeyboard Teclado com fios para PC, portátil, PC de secretária, computador e notebook, o teclado é compatível com Dell, Hacer, HP, Samsung e muito mais, com design de UK, preto (1500109ES)"" == 0$
</span>

","
Sugestão, trabalhar com XPATH quando utilizar no selenium, ele costuma responder melhor.
Fiz a adição das linhas abaixo no seu código e trouxe o print do nome, imagino que é isso que você queira. O print é apenas a demonstração visual, você pode trabalhar como quiser o texto e também utilizar o mesmo critério para trazer outras informações que você deseja da página.
nome = driver.find_element_by_xpath('//*[@id=""search""]/div[1]/div[1]/div/span[3]/div[2]/div[2]/div/span/div/div/div/div/div[2]/div[1]/h2/a/span').text

print(nome)

","
            0
        ",,,"['\npython', 'selenium\n']"
535863,Terminal não reconhece packages/modules personalizados automaticamente,"
Tenho esse projeto criado no meu PyCharm.

No arquivo de teste (test_inicio.py), faço o import normalmente do arquivo inicio.py como:
from grande_pack.utils.inicio import soma
No entanto, ao realizar o teste pelo terminal com python -m unittest test_inicio.py, é retornado o erro ModuleNotFoundError: No module named 'grande_pack'.
Eu já tentei:

Marcar as pastas testando_imports_raiz e grande_pack como Source Root
pelas configurações do PyCharm (nesse caso, o erro muda para
ModuleNotFoundError: No module named 'utils') (também já confirmei que nas configurações do PyCharm estão marcadas as opções de adicionar conteúdos da source root para PYTHONPATH)
Fechar o PyCharm, apagar a pasta .idea, reabrir o projeto como novo projeto
Verificar se os modules e os init.py estão sendo reconhecidos como arquivos python pelo PyCharm

Quando eu uso o comando export PYTHONPATH= com o local da source root, funciona. Então, me parece que o problema não é exatamente do PyCharm, mas sim algo referente à configuração do PYTHONPATH. Então acho que a pergunta aqui é: eu preciso exportar a variavel sempre que criar um novo projeto, ou existe alguma forma de fazer com que essa source seja automaticamente reconhecida ao criar projetos pelo PyCharm?
","
Você tentou importar da seguinte forma?
from .grande_pack.utils.inicio import soma

Ou então você pode configurar um setup.py a partir desse link: https://docs.python.org/3/distutils/setupscript.html
","
            -1
        ",,,"['\npython', 'pycharm', 'packages', 'import', 'module\n']"
535758,Como controlar o Google Chrome sem ser administrador na máquina?,"
Tinha um código que executava no Python para fazer download de alguns arquivos que ficam num site, para isso executava o ""chromedriver"" porém minha organização bloqueou esse aplicativo. Alguém tem uma alternativa?
Parte do código:
nav = webdriver.Chrome() 
nav.set_window_size(1600, 1000)

nav.get(""www.exemplo.com"")
nav.find_element_by_xpath('//*[@id=""email""]').send_keys('email@email.com')
nav.find_element_by_xpath('//*[@id=""password""]').send_keys('senha123')
nav.find_element_by_xpath('//*[@id=""submit""]').click()

# Survey
nav.find_element_by_xpath('/html/body/div[1]/div/div/div/div/app-component/div/div[4]/react-sidebar/nav/ul/li[8]/span/a').click()

","
Você pode tentar fazer execução ""local"" utilizando o download do webdriver, ao invés de fazer do Chrome direto.
Eu costumo salvar o arquivo do download no public da máquina e acesso ele.
driver = webdriver.Chrome(executable_path='C:/Users/Public/Drivers/chromedriver.exe')
Os contras deste método é que sempre você precisa ficar atualizando ele quando a versão do Chrome da máquina muda.
","
            0
        ",,,['\npython\n']
535717,Erro para atualizar valor de variável em uma função - PYTHON MYSQL,"
Meus caros, estou criando um menu onde deleto e cadastro usuários em um banco de dados fazendo leituras de TAG via RFID.
Estou com um problema na função delete(), pois quando o usuário insere uma TAG que não esta cadastrada no banco de dados e retorna para a função delete() onde devia fazer uma nova leitura da TAG, o valor da variável sql_tag não é atualizado para o valor de uma nova TAG lida, é como se a query não executasse, gostaria da ajuda de vocês para entender o que esta errado no código. Agradeço desde já.
Função delete:
def delete():
    usuario = input(""Digite o nome do usuario que deseja excluir, caso não saiba o usuario pressione 1.\n"")
    if usuario == ""1"":
        input(""Faça a leitura da tag e pressione ENTER."")
        query_p = 'SELECT tag FROM registro ORDER BY event_id DESC limit 1;'
        c.execute(query_p)
        resultado = str(c.fetchone())
        erro1, erro2, erro3, sql_tag, erro4 = resultado.split(""'"")
        tagipes = pesquisa(sql_tag)
        if tagipes == 1:
            query_p = 'SELECT NOME_USUARIO FROM rfid_teste WHERE TAG = %s;'
            c.execute(query_p, sql_tag)
            resultado = str(c.fetchone())
            erro1, erro2, erro3, sql_nome, erro4 = resultado.split(""'"")
            input(""Se você deseja deletar o usuario: '"" + (sql_nome) + ""' pressione ENTER."")
            query_d = 'DELETE FROM rfid_teste WHERE `rfid_teste`.`TAG` = %s'
            c.execute(query_d, sql_tag)
            con.commit()
            del_a = input(""Para excluir outro usuario pressione 1 para retornar ao menu principal 2.\n"")
            if del_a == 1:
                delete()
            else:
                menu()
        else:
            input(""TAG inexistente no banco de dados, por favor faça a leitura de uma tag valida. Pressione ENTER para prosseguir."")
            delete()
    else:
        query_p = 'SELECT * FROM `rfid_teste` WHERE NOME_USUARIO = %s'
        c.execute(query_p, usuario)
        resultado = str(c.fetchone())
        erro1, erro2, erro3, sql_nome, erro4, erro6, erro7, sql_tag, erro8 = resultado.split(""'"")
        input(""Se você deseja deletar o usuario: '"" + (sql_nome) + ""' pertencente a TAG: '"" + (sql_tag) + ""' pressione ENTER."")
        query_d = 'DELETE FROM rfid_teste WHERE `rfid_teste`.`NOME_USUARIO` = %s'
        c.execute(query_d, sql_nome)
        con.commit()
        del_a = input(""Para excluir outro usuario pressione 1 para retornar ao menu principal 2.\n"")
        if del_a == 1:
            delete()
        else:
            menu()```

",,,,,"['\nmysql', 'python', 'python-3.x', 'mysqli', 'syntax-error\n']"
535713,Django - relação unique together,"
Oi, pessoal. Estou mexendo com um banco de dados de livros legado + Django. Nesse banco de dados tem uma tabela principal com informações de livros, onde cada livro recebe um indice e volume únicos juntos. Há outra tabela de empréstimo de livros e nisso mostra o índice e o volume de cada livro emprestado. Porém, na página que estou desenvolvendo ao invés de mostrar o indice e volume gostaria de mostrar o nome do livro. Para isso precisaria ir na tabela principal e resgatar o nome do livro que tem aquele indice e volume para mostrar. Porém não sei como posso fazer isso. Tô quebrando a cabeça para tentar achar a solução.
Alguém poderia me ajudar indicando o que posso ler para conseguir resolver?
","
seu model:

class Livro(models.Model):
    indice = models.CharField(unique=True)
    volume = models.CharField(unique=True)
    nome = models.CharField()

sua view:
from <seu_arquivo_model> import Livro
from django.shortcuts import get_object_or_404

class LivroViewSet():

.
.
.

    def retorna_livro(indice, volume):
        livro = get_object_or_404(Livro, indice=indice, volume=volume)
        return livro.nome


Se houver o livro com esse indice e volume, ele retornará o nome daquele objeto Livro, se não, retorna 404(Not Found)

","
            -2
        ",,,"['\npython', 'sql-server', 'django', 'aplicação-web\n']"
535709,Python - Selenium com Xpath não funciona nesse site,"
Estou tentando fazer uma automação em Python para atualizar a página desse portal onde clientes colocam solicitações para fazermos cotação como fornecedores.
Ja fiz outras automações em Python com Selenium e webscraping e funionou normalmente, mas esse site específico não funciona nenhum comando de Xpath, eu consigo pegar o endereço normalmente, mas quando executo o código ele retorna a falha de que não foi encontrado o elemento procurado.
Esse é um código simples apenas para clicar na janela de usuário, que mesmo assim falha:
from selenium import webdriver

nav = webdriver.Chrome()
nav.maximize_window()
nav.get(""https://www.vaatz.com/"")

nav.find_element(By.XPATH, '//*[@id=""mainframe.VFrameSet.frameLogin.form.divLogin.form.divLoginInner.form.edId:input""]').click()`

Após a execução, e carregamento do site que é um pouco demorado, o código retorna esse erro:

NoSuchElementException                    Traceback (most recent call last)
 in 
5 nav.get(""https://www.vaatz.com/"")
6
----> 7 nav.find_element(By.XPATH, '//*[@id=""mainframe.VFrameSet.frameLogin.form.divLogin.form.divLoginInner.form.edId:input""]').click()
~\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py in find_element(self, by, value)
1242             value = '[name=""%s""]' % value
1243
-> 1244         return self.execute(Command.FIND_ELEMENT, {
1245             'using': by,
1246             'value': value})['value']
~\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py in execute(self, driver_command, params)
422         response = self.command_executor.execute(driver_command, params)
423         if response:
--> 424             self.error_handler.check_response(response)
425             response['value'] = self._unwrap_value(
426                 response.get('value', None))
~\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py in check_response(self, response)
245                 alert_text = value['alert'].get('text')
246             raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
--> 247         raise exception_class(message, screen, stacktrace)
248
249     def _value_or_default(self, obj: Mapping[_KT, _VT], key: _KT, default: _VT) -> _VT:
NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//[@id=""mainframe.VFrameSet.frameLogin.form.divLogin.form.divLoginInner.form.edId:input""]""}*
(Session info: chrome=96.0.4664.45)
Stacktrace:
Backtrace:
Ordinal0 [0x00346903+2517251]
Ordinal0 [0x002DF8E1+2095329]
Ordinal0 [0x001E2848+1058888]
Ordinal0 [0x0020D448+1233992]
Ordinal0 [0x0020D63B+1234491]
Ordinal0 [0x00237812+1406994]
Ordinal0 [0x0022650A+1336586]
Ordinal0 [0x00235BBF+1399743]
Ordinal0 [0x0022639B+1336219]
Ordinal0 [0x002027A7+1189799]
Ordinal0 [0x00203609+1193481]
GetHandleVerifier [0x004D5904+1577972]
GetHandleVerifier [0x00580B97+2279047]
GetHandleVerifier [0x003D6D09+534521]
GetHandleVerifier [0x003D5DB9+530601]
Ordinal0 [0x002E4FF9+2117625]
Ordinal0 [0x002E98A8+2136232]
Ordinal0 [0x002E99E2+2136546]
Ordinal0 [0x002F3541+2176321]
BaseThreadInitThunk [0x74916359+25]
RtlGetAppContainerNamedObjectPath [0x76F087A4+228]
RtlGetAppContainerNamedObjectPath [0x76F08774+180]
(No symbol) [0x00000000]
Se houver outra forma de interagir com esse campo que não seja o Xpath e que não seja por poyautogui, sera válida, pois tem que rodar em segundo plano ou minimizado.
Sou iniciante e ainda tenho muito a aprender, mas após muitas buscas, não achei nada que falasse sobre isso ou alguém com a mesma dificuldade, talvez por esse site ter algo muito específico ou eu que não estou fazendo alguma coisa necessária.
Qualquer ajuda é bem-vinda!
","
eu já tive esse problema antes, ele ocorre pois quando o selenium procura o elemento html específico, ele não o encontra, isso por que ele aínda não foi contruido na pagina. Você precisa usar uma função de espera, que espera até que o elemento seja carregado.
Você usa a classe WebDriverWait para esperar até que uma condição seja alcançada, e a classe expected_conditions que vai determinar a contição. Nesse caso, a sintaxe será: 'Espere até que o elemento seja localizado'
# Classe de espera
from selenium.webdriver.support.ui import WebDriverWait
# Classe de condição 
from selenium.webdriver.support import expected_conditions as EC

# Espera em um navegador 'browser' por no máximo '10' segundos até que seja detectada a presença do elemento determinado no 'xpathcode'.
WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH, xpathcode)))

Para você não ter que digitar isso toda hora no seu código você pode transformar isso numa função.
def esperar_elemento(browser, xpathcode:str) -> None:
    """"""[Espera até que certo elemento WebElent seja criado no browser]

    Args:
        xpathcode (str): [Código xpath do elemento]
    """"""
    # Classe de espera
    from selenium.webdriver.support.ui import WebDriverWait
    # Classe de condição
    from selenium.webdriver.support import expected_conditions as EC

    # WebDriverWait(browser, segs).util(condição) ->  Espera por alguns segundos segundos Até que uma condição seja comprida, por padrão essa condição é verificada a cada 500 milisegundos até que o tempo segs expire;
    # EC.presence_of_element_located(localizador) -> Verifica se um elemento já existe retorna um bool. O localizador (locator) é uma tupla (By.XPATH, CÓDIGO exPATH)
    WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH, xpathcode)))


# Chamada da função
esperar_elemento(browser, 'xxxxxXPATHxxxxxx')

","
            0
        ",,,"['\npython', 'selenium', 'web-scraping', 'xpath\n']"
535696,Abrir arquivo xlsx com muitas linhas com panda em Python,"
Boa tarde pessoal, sou novato em python e estava tentando abrir o arquivo 'scores.csv.xlsx' ele tem 1128001 linhas, porém da o erro:

Meu código está assim:
import pandas as pd
import numpy as np
import io

scores = pd.read_excel('scores.csv.xlsx',nrows = 1000)
display(scores)

Como faz para ler um arquivo com esta quantidade de linhas?
Link para o arquivo: https://docs.google.com/spreadsheets/d/1zxp42DHcm5bgP3nGA4uVSuxSVcqnREZGqL77ojLpp-E/edit?usp=sharing
","
Utilize o método read_csv, seu arquivo é um CSV justamente por conter muitas linhas e o excel não consegue trabalhar com esta quantidade.
Exclua a extensão "".xlsx"" e trabalhe como um csv mesmo que é o seu original.
import pandas as pd
import numpy as np
import io

scores = pd.read_csv('scores.csv')
display(scores)

","
            1
        ",,,"['\npython', 'excel', 'pandas\n']"
535627,Alterar conteúdo das linhas em Python,"
Tenho um dataframe que contém diversas colunas com id para indicar as categorias das variáveis.
Como faço pra substituir esses ids pelas categorias?
View do data frame:

Dicionário:
sexo = {
    0: 'Masculino', 
    1: 'Feminino'
}
cor = {
    0: 'Indígena', 
    2: 'Branca', 
    4: 'Preta', 
    6: 'Amarela', 
    8: 'Parda', 
    9: 'Sem declaração'
}
anos_de_estudo = {
    1: 'Sem instrução e menos de 1 ano', 
    2: '1 ano', 
    3: '2 anos', 
    4: '3 anos', 
    5: '4 anos', 
    6: '5 anos', 
    7: '6 anos', 
    8: '7 anos', 
    9: '8 anos', 
    10: '9 anos', 
    11: '10 anos', 
    12: '11 anos', 
    13: '12 anos', 
    14: '13 anos', 
    15: '14 anos', 
    16: '15 anos ou mais', 
    17: 'Não determinados'
}
uf = {
    11: 'Rondônia', 
    12: 'Acre', 
    13: 'Amazonas', 
    14: 'Roraima', 
    15: 'Pará', 
    16: 'Amapá', 
    17: 'Tocantins', 
    21: 'Maranhão', 
    22: 'Piauí', 
    23: 'Ceará', 
    24: 'Rio Grande do Norte', 
    25: 'Paraíba', 
    26: 'Pernambuco', 
    27: 'Alagoas', 
    28: 'Sergipe', 
    29: 'Bahia', 
    31: 'Minas Gerais', 
    32: 'Espírito Santo', 
    33: 'Rio de Janeiro', 
    35: 'São Paulo', 
    41: 'Paraná', 
    42: 'Santa Catarina', 
    43: 'Rio Grande do Sul', 
    50: 'Mato Grosso do Sul', 
    51: 'Mato Grosso', 
    52: 'Goiás', 
    53: 'Distrito Federal'
}

","
Você pode usar o método map de uma série do Pandas (isto é, uma coluna do DataFrame) para mapear valores conforme um dicionário, onde a chave representa o valor atual da coluna, e o valor associado à chave é o valor de ""destino"" da sua nova coluna.
Exemplo:
import pandas as pd

frutas = {
    0: 'maçã',
    1: 'banana',
    2: 'abacaxi',
    3: 'uva',
}

vendas = pd.DataFrame({
    'dia': ['2021-01-01', '2021-01-01', '2021-01-02', '2021-01-03'],
    'id_fruta': [0, 2, 1, 2],
    'quantidade': [3, 1, 1, 2],
})
print(vendas)
# output:
#           dia  id_fruta  quantidade
# 0  2021-01-01         0           3
# 1  2021-01-01         2           1
# 2  2021-01-02         1           1
# 3  2021-01-03         2           2

vendas['fruta'] = vendas['id_fruta'].map(frutas)  # criando nova coluna
print(vendas)
# output:
#           dia  id_fruta  quantidade    fruta
# 0  2021-01-01         0           3     maçã
# 1  2021-01-01         2           1  abacaxi
# 2  2021-01-02         1           1   banana
# 3  2021-01-03         2           2  abacaxi

Portanto, no seu caso basta aplicar o método map às colunas de interesse (note que vou sobrescrevê-las - use nomes diferentes para as colunas novas caso isso seja indesejado):
dados['Sexo'] = dados['Sexo'].map(sexo)
dados['Cor'] = dados['Cor'].map(cor)
dados['Anos de Estudo'] = dados['Anos de Estudo'].map(anos_de_estudo)
dados['UF'] = dados['UF'].map(uf)

Ou de forma ligeiramente menos repetitiva usando um for loop:
for nome_coluna, mapa in [
    ('Sexo', sexo),
    ('Cor', cor),
    ('Anos de Estudo', anos_de_estudo),
    ('UF', uf),
]:
    dados[nome_coluna] = dados[nome_coluna].map(mapa)

","
            4
        ","
Assim como foi apresentado pelo nosso colega jfaccioni a utilização do map, vou apresentar uma abordagem um pouco diferente utilizando o método replace do pandas.
Exemplo - dict-like to_replace:
import pandas as pd

sexo = {0: 'Masculino', 1: 'Feminino'}
cor = {0: 'Indígena', 1: 'Branca', 2: 'Preta'}
uf = {11: 'Rondônia', 12: 'Acre', 13: 'Amazonas'}

df = pd.DataFrame({
   'uf': [11, 12, 13],
   'sexo': [1, 1, 0],
   'cor': [0, 1, 2],
   'idade': [20, 23, 30]
})

print(df)
#          Output
#    uf  sexo  cor  idade
# 0  11     1    0     20
# 1  12     1    1     23
# 2  13     0    2     30
#

Aplicando então o replace no dataframe o resultado vai ser:
df = df.replace({'sexo': sexo, 'cor': cor, 'uf': uf})

#          uf       sexo       cor  idade
# 0  Rondônia   Feminino  Indígena     20
# 1      Acre   Feminino    Branca     23
# 2  Amazonas  Masculino     Preta     30


Enfim, o método replace é bem poderoso e não apenas se restringe a dicionários. Podemos utilizar em listas, expressões regulares, pandas series e muitas outras.
Referências:

https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.replace.html

","
            1
        ","['\npython', 'pandas\n']"
535605,Multi Threads em Python com QtDesigner,"
Pessoal criei duas theads pois preciso processar os dados simultaneamentes na tela, porém quando eu inicio a segunda thread a premeira pausa. se eu inicio a primeira a segunda pausa, como faço para resolver isso, alguém pode me ajudar?
Essa foi a única forma que funcionou, mas as duas não rodam ao mesmo tempo.
def thread1():
     if __name__ == ""__main__"":
          self.thread[1] = botrun()
          self.thread[1].start()
          QtCore.QCoreApplication.processEvents()
          while True:
              time.sleep(7)
        
def thread2():
     if __name__ == ""__main__"":
          self.thread[2] = botrun2()
          self.thread[2].start()
          QtCore.QCoreApplication.processEvents()
          while True:
               time.sleep(7)

",,,,,['\npython\n']
535596,Como posso formatar dados para colocar em um arquivo csv,"
Preciso passar vários dados extraídos para um arquivo csv porém quando faço isso fica tudo desconfigurado, pesquisei um pouco e não encontrei de fato o que precisava.
Segue abaixo o código que estou executando.
listainfo = ['\r\nName               Disabled\r\n----               --------\r\nAdmin                 False\r\nAdministrador          True\r\nAmanda    False\r\namanda.amanda   False\r\nConvidado              True\r\nDefaultAccount         True\r\nWDAGUtilityAccount     True\r\n\r\n\r\n']

with open(""out.csv"", ""w"", newline="""", encoding='utf-8') as f:
    writer = csv.writer(f)
    writer.writerows(listainfo) 

Entretanto quando faço isso fica tudo desconfigurado arquivo no arquivo csv

Gostaria de saber um jeito para formatar e ficar mais organizado, ex:

*** Os dados são obtidos através de uma API, segue abaixo onde recebo as infos e quais são os types delas.
 jsonResponse = chilkat2.JsonObject()
    jsonResponse.LoadSb(sbResponseBody)

    jsonResponse.EmitCompact = False
    #print(jsonResponse.Emit())
    test=json.loads(jsonResponse.Emit())
    test2=test[""response""][""data""][""output""]

    print (type(test2))  str
    print (type(test))  dict
    print (type(jsonResponse.Emit())) str
    print (type(jsonResponse)) chilkat2.JsonObject

As informações que retiro são do ""test2"".
Segue abaixo o resultado de cada uma das informações test, test2, jsonResponse.Emit() e jsonResponse.
print (test)

{'files': [], 'id': '1414', 'command': '$UserAccounts = Get-WmiObject -Class Win32_UserAccount -Filter {LocalAccount = ""True""} | select Name, Disabled \n\nWrite-Output $UserAccounts\n', 'name': 'Windows - List All Users | v1.0 JCCG', 'systemId': '123fa', 'organization': '5ba', 'user': 'root', 'sudo': False, 'requestTime': '2021-11-25T19:17:13.000Z', 'responseTime': '2021-11-25T19:17:14.000Z', 'response': {'id': '619fe1395ff92a18660b04e0', 'data': {'output': '\r\nName               Disabled\r\n----               --------\r\nAdmin                 False\r\nAdministrador          True\r\nAmanda    False\r\namanda.amanda    False\r\nConvidado              True\r\nDefaultAccount         True\r\nWDAGUtilityAccount     True\r\n\r\n\r\n', 'exitCode': 0}, 'error': ''}, 'workflowId': 'k12d23', 'workflowInstanceId': '', '_id': '4aaab', 'system': 'RC Amanda'}


print (test2)

Name               Disabled
----               --------
Admin                 False
Administrador          True
Amanda                False
amanda.amanda         False
Convidado              True
DefaultAccount         True
WDAGUtilityAccount     True



print (jsonResponse.Emit())

{
  ""files"": [
  ],
  ""id"": ""aaaaaa"",
  ""command"": ""$UserAccounts = Get-WmiObject -Class Win32_UserAccount -Filter {LocalAccount = \""True\""} | select Name, Disabled \n\nWrite-Output $UserAccounts\n"",
  ""name"": ""Windows - List All Users | v1.0 JCCG"",
  ""systemId"": ""aaaaa"",
  ""organization"": ""bbbbb"",
  ""user"": ""root"",
  ""sudo"": false,
  ""requestTime"": ""2021-11-25T19:17:13.000Z"",
  ""responseTime"": ""2021-11-25T19:17:14.000Z"",
  ""response"": {
    ""id"": ""aaaaaa"",
    ""data"": {
      ""output"": ""\r\nName               Disabled\r\n----               --------\r\nAdmin                 False\r\nAdministrador          True\r\nAmanda    False\r\namanda.amanda    False\r\nConvidado              True\r\nDefaultAccount         True\r\nWDAGUtilityAccount     True\r\n\r\n\r\n"",
      ""exitCode"": 0
    },
    ""error"": """"
  },
  ""workflowId"": ""aaaaa"",
  ""workflowInstanceId"": """",
  ""_id"": ""bbbbbb"",
  ""system"": ""RC Amanda""
}


print (jsonResponse)
<chilkat2.JsonObject object at 0x00000247EE335CD4>

","
O problema foi resolvido com ajuda do Augusto Vasques que comentou um código que me ajudou muito.
    url2 = ""URL""+(i)

resp10 = requests.get(url2, headers=headers)
resp11 = resp10.json()
resp12 = resp11[""response""][""data""][""output""]

with open(""out.csv"", ""a"", newline="""", encoding='utf-8') as f:
    writer = csv.writer(f)
    for row in resp12.splitlines(keepends=False):
        writer.writerow(row.split())

","
            0
        ","
Com o comando df.to_csv('file_name.csv'), você sé precisaria usar a biblioteca Pandas. Ficaria mais ou menos assim:
import pandas as pd

name_dict = {
            'Name': ['Admin','Administrador','Amanda','amanda.amanda','Convidado', 'DefaltAccount],
            'Disable': ['FALSE','TRUE','FALSE','FALSE','TRUE','TRUE','TRUE']
          }

df = pd.DataFrame(name_dict)

df.to_csv('out.csv')

print (df)

","
            -3
        ","['\npython', 'csv\n']"
535590,Validar Primeiro dia útil do mês em Python,"
Preciso que meu código valide o primeiro dia útil de cada mês.
Se hoje é o primeiro dia útil do mês, retorna o primeiro dia do mês anterior, senão retorna o primeiro dia do mês atual.
from datetime import datetime, timedelta
import datetime

weekday = datetime.datetime.today().isoweekday()
data = datetime.datetime.now() - timedelta(days = 1)

if weekday==1:
    dt = '01/{}/{}'.format(data.month -1, data.year)

else:
    dt = '01/{}/{}'.format(data.month, data.year)

print(dt)

","
A ideia básica é:

se o mês começa em um sábado, então o primeiro dia útil é a segunda-feira dia 3
se o mês começa em um domingo, então o primeiro dia útil é a segunda-feira dia 2
se começa em uma segunda, o primeiro dia útil é 1
se começa em uma terça, quarta, quinta ou sexta, o dia só pode ser 1

Traduzindo para Python:
from datetime import datetime, timedelta

hoje = datetime.today()
data = datetime(hoje.year, hoje.month, 1) # dia 1 do mês atual

dia_da_semana = hoje.weekday() # 0=segunda, 1=terça, etc
dia = hoje.day

# se hoje é segunda e é dia 1, 2 ou 3
# ou se é terça, quarta, quinta ou sexta, e é dia 1
if (dia_da_semana == 0 and dia in (1, 2, 3)) or (dia_da_semana in (1, 2, 3, 4) and dia == 1):
    # hoje é o primeiro dia útil do mês
    # muda a data para o mês anterior, primeiro subtrai 1 dia, caindo no último dia do mês anterior
    # e troca o dia por 1
    data = (data - timedelta(days=1)).replace(day=1)

dt = data.strftime('%d/%m/%Y')
print(dt)

Depois, para subtrair 1 mês, eu primeiro subtraio 1 dia (e como a data foi inicialmente criada no dia 1 do mês atual, ao subtrair 1 dia ela cai no mês anterior). Depois, basta trocar o dia por 1.
Por fim, uso strftime para formatar a data.
Você estava subtraindo 1 do mês, o que até pode funcionar em muitos casos, mas vai falhar quando o mês for janeiro. Já manipulando a data diretamente, ela trata desses casos também.

Outra alternativa para subtrair 1 mês é instalar o módulo dateutil:
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta # pip install python-dateutil

hoje = datetime.today()
dia_da_semana = hoje.weekday() # 0=segunda, 1=terça, etc
dia = hoje.day

data = datetime(hoje.year, hoje.month, 1) # dia 1 do mês atual
if (dia_da_semana == 0 and dia in (1, 2, 3)) or (dia_da_semana in (1, 2, 3, 4) and dia == 1):
    # hoje é o primeiro dia útil do mês
    # muda a data para o mês anterior
    data -= relativedelta(months=1)

dt = data.strftime('%d/%m/%Y')
print(dt)

","
            1
        ",,,"['\npython', 'data', 'datetime\n']"
535560,Transformação de dados,"
Salve galera, beleza?
Estou com um problema e não sei como resolve-lo... Estou com um conjunto de dados sobre o Netflix e Disney+, estou fazendo uma analise exploratória e comparando os dados.
Estou querendo analisar o quanto de tempo que vamos gastar caso queiramos assistir toda a programação que a Netflix e o Disney+ fornece.
Porém não estou conseguindo fazer uma transformação necessária na coluna ""duration"". Não estou conseguindo separar os filmes das series para fazer os cálculos que desejo fazer.
Como posso fazer tal separação?

Link para o notebook no Kaggle
","
Opa tudo bem?
Você pode começar separando seu dataframe em dois diferentes, um para séries e um para filmes. partindo do pressuposto que todas as series tenham a palavra ""Season"" e todos os filmes tenham a palavra ""min"" você pode fazer o seguinte:
series = data_net_clean[data_net_clean['duration'].str.contains('Season')]
filmes = data_net_clean[data_net_clean['duration'].str.contains('min')]

","
            0
        ",,,"['\npython', 'pandas', 'numpy\n']"
535507,Delay para iniciar a execução de um .exe python,"
Olá, eu comecei a desenvolver em python a pouco tempo, criei um Bot para navegar na WEB e preencher os campos de um site com os dados de uma planilha de excel, esse bot tem cerca de 800 linhas (códigos e comentários), transformei esse meu código em um executável .exe mas quando inicializo é muito demorado para começar de fato a realizar os procedimentos do bot, isso comparado ao que executo diretamente pelo VScode (mais ou menos 1 min para começar a rodar o bot).
Teria alguma maneira de otimizar e fazer com que esse executável seja mais rápido para iniciar a tarefa?
","
Uma boa maneira para ""aliviar"" o iniciamento é dividir as funções em diferentes tipos de ficheiros python, pois assim só serão carregadas quando precisas. Mesmo assim, acho que será lento pois python não é uma linguagem rápida devido ao facto de não ser uma linguagem com multiprocessing.
","
            0
        ",,,"['\npython', '.exe', 'delay\n']"
535504,como faço para consultar um item do meu banco de dados usando o LIKE + % sendo que a informação está guardada em uma variavel,"
Para exemplificar o que quero fazer:
tenho uma aplicação que armazena id, produtos e quantidades em uma tabela do sqlite3, e quero fazer uma função que busque um produto que o usuário deseja consultar, por exemplo, caso o usuário digite ""Banana"" eu queria que o programa retornasse todas as Bananas presentes no banco de dados, isto é, gostaria que o programa retornasse por exemplo isso:
Qual produto deseja consultar: Banana
Bananas presentes no estoque
id: 1 | Nome: Banana Prata | Quantidade: 9201
id: 2 | Nome: BANANA Branca | Quantidade: 4234
id: 3 | Nome: banana Terra| Quantidade: 231
id: 4 | Nome: doce de banana | Quantidade: 24234
o meu código até então está assim:
for i in self.conexao.execute(""select * from produtos where produto like ?"", (self.pegar_informacao,)): 
                nova_lista.insert(END, f'Id: {i[0]} | Nome: {i[1]} | Quantidade: {i[2]}')

sei que devo usar algo parecido com ""select * from produtos where produto like %banana%"" porém como disse a informação é passada pelo usuário e é guardada em uma variavel
espero ter sido bem claro, qualquer duvida responda aqui no comentário que eu explico melhor!
","
para resolver isso eu fiz dessa forma:
for i in self.conexao.execute(""select * from produtos where produto like ?"", ('%'+self.pegar_informacao+'%')): 
                nova_lista.insert(END, f'Id: {i[0]} | Nome: {i[1]} | Quantidade: {i[2]}')

neste caso o + junta as strings
","
            0
        ",,,"['\npython', 'sqlite3', 'operador-like\n']"
535484,problema de float em python - questão simples [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 4 meses.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





por favor, poderiam me ajudar?
neste código, a entrada, na primeira linha, deve conter 3 valores reais, com uma casa decimal após a vírgula: L (0 < L <= 100), P (0 < P <= 100) e A (0 < A <= 200), correspondentes a largura, profundidade e altura de uma bagagem de mão.
este foi o código que eu fiz:
L = float(input())
P = float(input())
A = float(input())

v = float(input())

if (L <= 35, P <= 25, A <= 55, v <= 40):
 print('S')

else:
 print('N')

acredito que devo usar split na entrada, certo? mas como posso transformar a string em float depois? fora isso, o que há de errado no código?
",,,,,"['\npython', 'string', 'input', 'if', 'float\n']"
535446,"Python - Integrador de banco de dados - Passando variaveis de um select, para um insert digitado pelo usuário","
Bom dia Galera,
Estou começando agora no mundo Python, e gostaria muito de uma ajuda em um programa de integração que estou tentando criar.
Objetivo da Aplicação
Pois bem, o objetivo deste programa é possibilitar a integração entre bancos de dados. O projeto esta muito inicio, mas a ideia é poder cadastrar diversas conexões, com variados bancos, para que em uma outra aba, o usuário selecione uma conexão para select e outra para insert, para que possamos passar um select em um banco e devolver os dados absorvidos como insert em outro banco.
Obs: Estou usando PySimpleGUI para criar a interface da aplicação.

Descrição do Problema
Quando eu passo o insert pela aplicação, o programa retorna com o seguinte erro:


Porém, se eu passo este mesmo INSERT chumbado no ""cursor_sqllite.execute"", o programa funciona perfeitamente.


cursor_sqllite.execute(f""""""INSERT INTO ETIQUETA_LOCAIS_COLUNA (
                                    COD_ID,
                                    ARMAZEM,
                                    RUA,
                                    POSICAO,
                                    NIVEL_1,
                                    NIVEL_1_VERIFICADOR,
                                    NIVEL_2,
                                    NIVEL_2_VERIFICADOR,
                                    NIVEL_3,
                                    NIVEL_3_VERIFICADOR,
                                    NIVEL_4,
                                    NIVEL_4_VERIFICADOR,
                                    NIVEL_5,
                                    NIVEL_5_VERIFICADOR,
                                    NIVEL_6,
                                    NIVEL_6_VERIFICADOR)  
                                values (
                                    {(row[0])},  
                                    '{row[1]}',
                                    '{row[2]}',
                                    '{row[3]}',
                                    '{row[4]}',
                                    '{row[5]}',
                                    '{row[6]}',
                                    '{row[7]}',
                                    '{row[8]}',
                                    '{row[9]}',
                                    '{row[10]}',
                                    '{row[11]}',
                                    '{row[12]}',
                                    '{row[13]}',
                                    '{row[14]}',
                                    '{row[15]}')"""""")



Só tenho erro, quando passo este mesmo INSERT dentro da variável ""query_2"".


while row:
                print(f'{(row)}')
                i = i + 1
                cursor_sqllite.execute(f"""""" {query_2} """""")
                row = cursor.fetchone()
                con.commit()



Código fonte Python que retorna com o erro


from itertools
import count
import PySimpleGUI as sg
import pyodbc
import sqlite3
from sqlite3
import Error
from pyodbc
import Cursor

class TelaPython:
  def __init__(self): #Layout
layout = [
  [sg.Text('Cadastro de Serviços'), ],
  [sg.Text('Conexão Select', size = (15, 1)), sg.Combo(['SqlServer', 'Oracle', 'SQLite'], key = 'banco_1')],
  [sg.Text('Query Select', size = (15, 1)), sg.Multiline(size = (100, 10), key = 'query_1')],
  [sg.Text('Conexão Insert', size = (15, 1)), sg.Combo(['SqlServer', 'Oracle', 'SQLite'], key = 'banco_2')],
  [sg.Text('Query Insert', size = (15, 1)), sg.Multiline(size = (100, 10), key = 'query_2')],
  [sg.Button('Processar')]#[sg.Output(size = (150, 10))]
]# Janela
self.janela = sg.Window(""Integrador de Dados"").layout(layout)# Extrair os dados da tela
def Iniciar(self):
  while True:
  self.button, self.values = self.janela.Read()
banco_1 = self.values['banco_1']
banco_2 = self.values['banco_2']
query_1 = self.values['query_1']
query_2 = self.values[""""
  ""query_2""
  """"]# conexão sqlite
caminho = ""xxxxxxxx""
con = sqlite3.connect(caminho)
cursor_sqllite = con.cursor()
print(""Sqlite Conectado"")# conexão sqlserver
server = 'xxxxxx'
database = 'xxxxxx'
username = 'xxxxxx'
password = 'xxxxxx'
cnxn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=' + server + ';DATABASE=' + database + ';UID=' + username + ';PWD=' + password)
cursor = cnxn.cursor()
print(""Conexão bem sucedida com SQLServer"")# passando a query no sqlserver
cursor.execute(query_1)# printando os resultados
print('----------------------------------------------------------------------------------------')
print('Dados do Select')
print(f 'Banco: {banco_1}')
print(f 'Query Select: {query_1}')
print('----------------------------------------------------------------------------------------')
row = cursor.fetchone()
i = 0
while row:
  print(f '{(row)}')
i = i + 1
cursor_sqllite.execute(f """"
  "" {query_2} ""
  """")
row = cursor.fetchone()
con.commit()# layout janela de progresso
layout_1 = [
  [sg.Text('Progredindo...')],
  [sg.ProgressBar(100, orientation = 'h', size = (20, 20), key = 'progressbar')],
  [sg.Cancel()]
]# criação da janela `
            window = sg.Window('Progresso', layout_1)
            progress_bar = window['progressbar']
            # loop nos resultados a serem processados
            for i2 in range(i):
                # verificação do evento de cancelamento 
                event, values = window.read(timeout=0.1)
                if event == 'Cancel'  or event == sg.WIN_CLOSED:
                    break
            # update bar with loop value +1 so that bar eventually reaches the maximum
                progress_bar.UpdateBar(i2 + 1)
            # done with loop... need to destroy the window as it's still open
            window.close() 
            # continuação printando os resultados
            print(f'Total de {i} registros integrados')   
            print('Dados do Insert')
            print(f'Banco: {banco_2}')
            print(f'Query Insert: {query_2}')
            print('----------------------------------------------------------------------------------------')
            text_input = f'Total de {i} registros integrados'    
            sg.popup(text_input)
tela = TelaPython()
tela.Iniciar()



Trecho do Erro


while row:
                print(f'{(row)}')
                i = i + 1
                cursor_sqllite.execute(f"""""" {query_2} """""")
                row = cursor.fetchone()
                con.commit()



Resumo
Em resumo, eu preciso passar o insert digitalizado dentro do app. Como sou iniciante, achei bem estranho funcionar com o insert chumbado, e não funcionar digitando o mesmo insert na aplicação.
Caso precisem de mais informações fico à disposição.
Desde já, muito obrigado.
",,,,,"['\npython', 'sql', 'sql-server', 'sqlite\n']"
535388,Como fazer Python entender formato Ano-Dia-Mês,"
A base de dados que estou trabalhando possui a coluna ""Start Date"" com o formato Ano-Dia-Mês. Já li e vi perguntas semelhantes mas mesmo assim não estou conseguindo informar ao Python esse formato. O que mais vi de solução e testei no meu código foi:
df['Start Date'] = pd.to_datetime(df['Start Date'],format='%Y-%d-%b')

Mesmo depois disso o formato que o Python entende meus dados é Ano-Mês-Dia.
Alguma sugestão?
","
Talvez você utilizando o ""strftime"" você consiga formatar e interpretar.
>>> import datetime
>>> data_hoje = datetime.datetime.now()
>>> print(data_hoje)
2021-11-28 14:43:46.019650


Agr converta o formato da data que deseja
>>> data_hoje.strftime('%d/%m/%Y')
'28/11/2021'

","
            0
        ","
Consegui com o seguinte:
df['Start Date']=pd.to_datetime(df['Start Date'].astype(str), format='%Y-%d-%m')
df['Start Date'] = df['Start Date'].dt.strftime('%Y-%d-%b')

","
            0
        ","['\npython', 'pandas', 'datetime\n']"
535370,Como mudar o ícone da janela,"
Como faço pra conseguir mudar o ícone da janela desenvolvida com tkinter?
Usei .iconbitmat('icon.ico') e compilei o arquivo em .exe pelo pyinstaller. Só que tem um problema: quando executo o arquivo em outro pc, ele dá um erro de que não foi possível encontrar o icon.ico, e deu a entender que é necessário ter o arquivo icon baixado também, não somente o executável, e deixá-lo no mesmo diretório do executável. Alguém sabe como proceder?
","
Eu recomendo o ""auto-py-to-exe"" para transformar um, ou vários ficheiros python em .exe. Nessa biblioteca consegues mudar o icon do programa.
Primeiro tens de abrir o teu terminal e instalar a biblioteca, usando este comando irás instalar a biblioteca ""pip install auto-py-to-exe"". Após a instalação é só digitar ""auto-py-to-exe"" no terminal que irá abrir uma interface para a devida transformação.
Se tiveres alguma dúvida acerca da biblioteca, tens aqui o site com a documentação.
https://pypi.org/project/auto-py-to-exe/
","
            0
        ",,,"['\npython', 'tkinter\n']"
535329,Formatar Hora num data frame em Python,"
Estou tentando formatar a coluna que trás as horas com os milesimos, isso é, para tirar os milesimos e visualizar hh:mm:ss apenas. 

","
Acredito que a forma mais simples é recriar todos os valores da coluna com um objeto datetime.time que copie a hora, minuto e segundos e ignore os microssegundos da coluna original.
Gosto de colocar código que outras pessoas possam executar a partir do zero, sem ter que ficar pensando em como criar um dataframe onde ele possa ser aplicado - o exemplo seria:
import datetime as dt, pandas as pd

z = pd.DataFrame({""hora"": [dt.time(23,59,37, 159245)]}) 

no terminal do ipython::
In [566]: print(z)                                                                                                     
              hora
0  23:59:37.159245

Aí, para recriar a coluna ""hora"":
z[""hora""] = z[""hora""].apply(lambda t:dt.time(t.hour, t.minute, t.second)) 

E o resultado:
In [568]: print(z)                                                                                                     
       hora
0  23:59:37

O que foi feito: o método apply de Series e DataFrames recebe como primeiro argumento uma função que recebe a linha ou coluna (no caso de um dataframe) ou o valor da célula (no caso de uma série) e devolve um resultado. Esse resultado é usado como valor de uma nova célula. No caso, defini uma função ""lambda"" que recebe um valor ""t"", que se assume ser um datetime.time, e gera um outro datetime.time, mas usando só as informações de hora, minuto e segundos. 
A coluna ""hora"" no dataframe original é substituída pela nova, com o sinal de ""="".
(No seu data frame do exemplo, obviamente, é só fazer o mesmo para a coluna ""Hora Original"")
Outro detalhe importante: esse método efetivamente muda os valores na coluna, não apenas a visualização da mesma. Se quiser manter os valores originais e mudar apenas a apresentação, a abordagem tem que ser diferente.
","
            6
        ","
Pressupondo que você tem a hora em string, você pode converter para um objeto datetime, fazendo:
from datetime import datetime
hora_string = '18:34:23.123'  # Valor da primeira linha
objeto_datetime = datetime.strptime(hora_string, '%H:%M:%S.%f')

Depois para converter de volta para string no formato desejado (mais formatos aqui), faça:
objeto_datetime.strftime('%H:%M:%S')

Vai resultar em:
'18:34:23'

Mais detalhes na documentação do Python.
","
            3
        ","['\npython', 'pandas\n']"
535303,Lógica ! quero incluir niveis no meu jogo usando while ou for,"
print('*********************************')
print('*     jogo de advinhacao 2       *')
print('*********************************')
num_secreto = 36
total_tentativas = 3

for rodada in range(1, total_tentativas + 1):
    print('Tentativa {} de {} '.format(rodada, total_tentativas))

    chute = int(input('Digite o seu numero: '))
    print('Você digitou:', chute)
    

    acertou = chute == num_secreto
    maior = chute > num_secreto
    menor = chute < num_secreto

    if(acertou):
        print('Você acertou!')
        break
    elif(chute > num_secreto):
        print('Você errou! O seu numero é maior que o numero secreto.')
    elif(chute < num_secreto):
        print('Você errou! o seu numero é menor que o numero secreto.')

Agora como faço para o usuario escolha o nível que ele quer jogar(nivel1 = tentaivas = 20, nivel2 = tentativas 10, nivel 3 = tentaivas 5).
","
Primeiro você pode utilizar a função input() para solicitar ao usuário que informe qual será o nível desejado.
Em seguida, pode utilizar o loop while de modo que caso nível informado pelo usuário não esteja informado na lista [""1"", ""2"", ""3""], o programa solicitará novamente ao usuário que informe o nível correto.
Em seguida, esse número é convertido em inteiro e basta utilizar o if e elif para informar o número de tentativas para cada nível, da seguinte forma:
print('*********************************')
print('*     jogo de advinhacao 2      *')
print('*********************************')

print('\nEscolha o nivel de dificuldade:\n\nNivel 1 (Facil) - 20 tentativas \nNivel 2 (Medio) - 10 tentativas \nNivel 3 (Difícil) - 5 tentativas')

num_secreto = 36

nivel = input('\nDigite o nível desejado (1, 2 ou 3): ')

while nivel not in [""1"", ""2"", ""3""]:
    nivel = input('\nOpção inválida! \nDigite o nível desejado (1, 2 ou 3): ')

nivel = int(nivel)

if nivel == 1:
    total_tentativas = 20
elif nivel == 2:
    total_tentativas = 10
elif nivel == 3:
    total_tentativas = 5

print(f""Nivel escolhido {nivel}. \n"")

for rodada in range(1, total_tentativas + 1):
    print('Tentativa {} de {} '.format(rodada, total_tentativas))

    chute = int(input('Digite o seu numero: '))
    print('Você digitou:', chute)
    

    acertou = chute == num_secreto
    maior = chute > num_secreto
    menor = chute < num_secreto

    if(acertou):
        print('Você acertou!')
        break
    elif(maior):
        print('Você errou! O seu numero é maior que o numero secreto.')
    elif(menor):
        print('Você errou! o seu numero é menor que o numero secreto.')

","
            0
        ",,,"['\npython', 'lógica\n']"
535286,"Python, Não consigo dar select no mysql.connector","
Eu estou usando uma máquina virtual Ubuntu, instalei o mysql.connector e tentei rodar o seguinte código:
import mysql.connector

mydb = mysql.connector.connect(host=""localhost"", user=""registration"", password=""senha"", database=""registration"");

cur = mydb.cursor(buffered=True);

temp = cur.execute(""select * from temp_token;"").fetchall();


Mas quando eu tento rodar o código, tudo que recebo é o erro:
AttributeError: 'NoneType' object has no attribute 'fetchall'

A tabela na base de dados tem entradas sim. O comando que eu digitei ali dá um retorno perfeito no cliente mysql. Então por que não está retornando nada? É como se ele conseguisse aplicar o comando, mas não conseguisse ler nada.
A pior parte é que no mesmo script eu uso ""insert"" para inserir na base de dados e funciona perfeitamente!
OBS: mey python é 3.8.10 e a máquina virtual do Ubuntu é 20.04
","
Tenta da seguinte maneira.
temp = cur.execute(""select * from temp_token"")
result_fetched = cur.fetchall()

for i in result_fetched:
   print(i)

","
            1
        ","
.execute() apenas executa a consulta e não retorna nada.
Depende de você como você vai buscar os resultados (ex: iterator, fetchall(), fetchone() etc.)
  cursor.execute(sql_list_schemas)
  list_schemas = cursor.fetchall()

--
Veja um código similar
 cursor.execute(sql_list_schemas)

 remaining_rows = cursor.fetchall()

Utilizando seu próprio código eu modificaria para isso:
import mysql.connector

mydb = mysql.connector.connect(host=""localhost"", user=""registration"", password=""senha"", database=""registration"");

cur = mydb.cursor(buffered=True);

cur.execute(""select * from temp_token"")

temp = cur.fetchall()

print(temp)

","
            1
        ","['\nmysql', 'python', 'banco-de-dados', 'sql-select\n']"
535271,Multiplas condições em um if,"
Bom, eu estou trabalhando em um jogo da velha, o código completo desta função ""win_check"" é:
history = []
    def win_check():
        one = "" ""
        two = "" ""
        three = "" ""
        four = "" ""
        five = "" ""
        six = "" ""
        seven = "" ""
        eight = "" ""
        nine = "" ""
        for i in history:
            if ""x"" in i:
                if ""1"" in i:
                    one = ""x""
                elif ""2"" in i:
                    two = ""x""
                elif ""3"" in i:
                    three = ""x""
                elif ""4"" in i:
                    four = ""x""
                elif ""5"" in i:
                    five = ""x""
                elif ""6"" in i:
                    six = ""x""
                elif ""7"" in i:
                    seven = ""x""
                elif ""8"" in i:
                    eight = ""x""
                elif ""9"" in i:
                    nine = ""x""

            elif ""o"" in i:
                if ""1"" in i:
                    one = ""o""
                elif ""2"" in i:
                    two = ""o""
                elif ""3"" in i:
                    three = ""o""
                elif ""4"" in i:
                    four = ""o""
                elif ""5"" in i:
                    five = ""o""
                elif ""6"" in i:
                    six = ""o""
                elif ""7"" in i:
                    seven = ""o""
                elif ""8"" in i:
                    eight = ""o""
                elif ""9"" in i:
                    nine = ""o""

            if (one and four and seven) == ""x"":
                print(""Vitória do X!"")
                sys.exit()
                
            if (one and four and seven) == ""o"":
                print(""Vitória do O!"")
                sys.exit()

Como podem ver, já tentei usar multiplos ""and"" no código, mas não funcionou. Quando uma linha é feita, mesmo se tiver uma bola ou um xis no meio, ele printa como vitória do último jogador.
Há alguma outra forma de adicionar várias condições à um ""if"" sem usar o ""and"" que os senhores e senhoras conheçam? Agradeço desde já.
","
Eu não sei se isso irá ajudar porque eu ainda estou aprendendo python, mas o python 3.10.0 tem uma função útil para acabar com os múltiplos ifs, a função match case é como se fosse o if, elif e else porém mais elegante. Um exemplo de como usar:
def Converter(número=1):
    ''' Uma função que converte um número de 1 a 7 em dias da semana.'''
    match número:
        case 1:
            return 'Domingo'
        case 2:
            return 'Segunda-feira'
        case 3:
            return 'Terça-feira'
        case 4:
            return 'Quarta-feira'
        case 5:
            return 'Quinta-feira'
        case 6:
            return 'Sexta-feira'
        case 7:
            return 'Sábado'
        case _:
            print('O valor {} é inválido!'.format(número))

Na primeira linha eu defini a função Converter e dentro dos parênteses tem uma variável chamada número que se não colocar nenhum valor ao utilizar a função, automaticamente será atribuído o valor 1 a está variável devido ao =1 após sua declaração.
Eu escrevi uma Docstring na segunda linha para explicar o que está função faz, não muda nada porém fica melhora a leitura do código por outras pessoas.
A função match veio agora na terceira linha e em seguida a variável número, ou seja, o python vai encontrar a condição verdadeira entre as outras condições sobre a variável número que vamos escrever a seguir.
Agora é como se fosse o if e o elif porém com algumas diferenças, o if e o elif se transformam em 'case condição' que pode ser traduzido assim: caso o valor seja 1(...).
E por fim na penúltima linha temos o 'else' que agora é 'case _'.
Essa é uma forma de acabar com os múltiplos ifs de um código, espero ter ajudado pelo menos um pouco porque eu não sou muito bom para explicar. :c
(E caso tu queira saber o que eu fiz no resto do código é simples, o return retorna um valor e lá na última linha o método '.format()' coloca um valor dentro de chaves {} de uma string.)
","
            0
        ",,,"['\npython', 'if', 'jogos\n']"
535240,somar valores com atributos iguais numa lista python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 4 meses.




                        Melhore esta pergunta
                    



Tenho a seguinte lista:
list = [Despesa(10, 'Mercado'), Despesa(20, 'Mercado'), Despesa(10, 'Farmácia')]

o objeto Despesa recebe um valor=int e um nome=str.
Preciso de uma função que identifique as ocorrências de objetos com o nome, Mercado, por exemplo, e some os valores desse objeto, exemplo:
na list eu tenho dois objetos com o atributo 'Mercado', então eu deveria somar os valores destes dois objetos, a saída seria 30, nesse caso.
","
Ignore o código da outra resposta, faz uso desnecessário, equivocado exagerado de orientação a objetos, e faça conforme foi dito nos comentários mantenha um dicionário para guardar os resultados e percorra a lista de despesas elemento por elemento, e caso:

o nome da despesa não seja chave no dicionário de resultados, crie uma nova chave no no dicionário de resultados com o nome da despesa e faça o valor da despesa ser o valor dessa chave.
já exista uma chave no dicionário de resultados com o nome da despesa, some o valor dessa chave com o valor da despesa.

Lembrando que em Python as chaves de um dicionário são únicas e hasheáveis e que a função dict.get(key, default) retorna o valor da chave dict[key] e caso dict[key] não exista retorna default.
from collections import namedtuple

#Declaração da classe Despesa como uma namedtuple.
Despesa = namedtuple('Despesa', ['valor', 'nome'])

lista = [Despesa(10, 'Mercado'), Despesa(20, 'Mercado'), Despesa(10, 'Farmácia')]

resultado = {}

#Para cada despesa d em lista...
for d in lista:
  resultado[d.nome] = resultado.get(d.nome, 0) + d.valor  #Na chave d.nome caso já existir obtém o seu valor e soma com d.valor. 
                                                          #Caso a chave d.nome não exista cria uma nova chave d.nome com o valor d.valor,

print(resultado)
#{'Mercado': 30, 'Farmácia': 10}

Referências:

collections.namedtuple
Tipo mapeamento — dict
dict.get(key[, default])

","
            1
        ",,,['\npython\n']
535227,Scraping de tabela na wikipedia com Python,"
Estou tentando fazer scraping da tabela de classificação final do campeonato brasileiro de 1971, disponível na wikipedia. O máximo que consegui foi pegar a primeira tabela, e mesmo ela, não consegui tratar os dados. Alguém pode me ajudar?
O que eu fiz:
from bs4 import BeautifulSoup
import pandas as pd
from urllib.request import Request, urlopen
from urllib.error import URLError, HTTPError
import urllib3
import requests

website_url = requests.get('https://pt.wikipedia.org/wiki/Campeonato_Brasileiro_de_Futebol_de_1971').text

soup = BeautifulSoup(website_url,'lxml')
print(soup.prettify())

tabela = soup.find('table',{'class':'wikitable'})

links = tabela.findAll('a')

Times = []
for link in links:
  Times.append(link.get('title'))

print(Times)

df = pd.DataFrame()
df['Times'] = Times

df

Como resultado, tenho um dataframe da primeira tabela, e com dados desnecessários (como o estado, que vinha no 'alt' das imagens):
Times
0   America Football Club (Rio de Janeiro)
1   Rio de Janeiro (cidade)
2   Guanabara
3   Guanabara
4   América Futebol Clube (Belo Horizonte)
... ...
89  Pernambuco
90  Club de Regatas Vasco da Gama
91  Rio de Janeiro (cidade)
92  Guanabara
93  Guanabara

","
TL;DR:
Antes de fazer uma raspagem primeiro verifique se o site alvo dessa raspagem oferece uma API provendo acesso direto ao banco da dados do site.
import pandas as pd

import urllib.request, urllib.parse, json 

pd.set_option('max_columns', None)           #Configura para exibir todas as colunas do dataframe

#Configura os parâmetros da consulta
params= urllib.parse.urlencode({
  ""action"": ""parse"",
  ""pageid"": ""201178"",     #Explicado como foi obtido na reposta abaixo.
  ""section"": ""13"",        #Explicado como foi obtido na reposta abaixo.
  ""prop"": ""text"",
  ""format"": ""json"",
  ""utf8"": ""1""
})
#Define o endpoint
endpoint = ""https://pt.wikipedia.org/w/api.php?%s"" % params

#Abre o documento HTML contendo a tabela Classificação final que estará localizado na chave [""parse""][""text""][""*""] da resposta.
with urllib.request.urlopen(endpoint) as url:
    html = json.loads(url.read().decode())[""parse""][""text""][""*""]

df = pd.read_html(html)[0]        #pd.read_html retorna uma lista de dataframes, no caso há apenas um contendo os dados da tabela Classificação final.

print(df)

Teste o exemplo no Repl.it Teste o exemplo no Colab
Resposta:
No seu caso específico você quer raspar os dados duma página da Wikipédia:
https://pt.wikipedia.org/wiki/Campeonato_Brasileiro_de_Futebol_de_1971
Seu objetivo é extrair a tabela Classificação final:

Mas o seu código retorna apenas a raspagem dos dados da tabela Participantes:

Antes de fazer uma raspagem primeiro verifique se o site alvo dessa raspagem oferece uma API provendo acesso direto ao banco da dados do site.
A Wikipédia oferece aos seus usuários o serviço Wikipédia:Central de pesquisas/Portal de dados/API onde se definem como um serviço de API web que provê acesso direto ao banco da dados do MediaWiki que é a engine por detrás do Wikipédia.
Para consultar o banco de dados, você envia uma solicitação HTTP GET para o endpoint desejado, por exemplo https://pt.wikipedia.org/w/api.php? é o endpoint para Wikipédia em Português.
Podem ser consultadas as seguinte informações:

Meta informações sobre a Wiki e usuários logados.
Propriedades das páginas, incluindo revisões e conteúdo, ligações externas, categorias, modelos, etc.
Lista de páginas dentro de um certo critério.

Essas informações podem ser retornadas nos seguintes formatos:

JSON (e JSON com elementos HTML)
WDDX
XML
YAML
PHP's native serialization (também nos formatos PHP print_r(),PHP var_export(),PHP var_dump())

Inicialmente faça uma consulta no próprio navegador para obter os metadados sobre a página em questão(veja Main module e action=parse):
https://pt.wikipedia.org/w/api.php?action=parse&prop=sections&page=Campeonato_Brasileiro_de_Futebol_de_1971&utf8=1
Logo ao início já é apresentada uma informação importante:
{
    ""parse"": {
        ""title"": ""Campeonato Brasileiro de Futebol de 1971"",
        ""pageid"": 201178,
        ""sections"": [
            {

A chave ""pageid"": 201178 nos informa o id da página Campeonato Brasileiro de Futebol de 1971 dentro do banco de dados da Wikipédia em Português.
Mais adiante dentro do array ""sections"":
{
   ""toclevel"": 1,
   ""level"": ""2"",
   ""line"": ""Classificação final"",
   ""number"": ""8"",
   ""index"": ""13"",
   ""fromtitle"": ""Campeonato_Brasileiro_de_Futebol_de_1971"",
   ""byteoffset"": 50518,
   ""anchor"": ""Classificação_final""
}

A chave ""anchor"": ""Classificação_final"" indica a ancora para o tópico de interesse, no caso a tabela Classificação final, e ""index"": ""13"" é o numero da seção contendo a tabela.
Munido dessas informações basta o seguinte script python para obter a informação desejada, o exemplo precisa além do módulo pandas precisa ter instalado o módulo lxml:
import pandas as pd

import urllib.request, urllib.parse, json 

pd.set_option('max_columns', None)           #Configura para exibir todas as colunas do dataframe

#Configura os parâmetros da consulta
params= urllib.parse.urlencode({
  ""action"": ""parse"",
  ""pageid"": ""201178"",                 #o id da página Campeonato Brasileiro de Futebol de 1971 dentro do banco de dados da Wikipédia em Português.     
  ""section"": ""13"",                    #o numero da seção contendo a tabela
  ""prop"": ""text"",
  ""format"": ""json"",
  ""utf8"": ""1""
})
#Define o endpoint
endpoint = ""https://pt.wikipedia.org/w/api.php?%s"" % params

#Abre o documento HTML contendo a tabela Classificação final que estará localizado na chave [""parse""][""text""][""*""] da resposta.
with urllib.request.urlopen(endpoint) as url:
    html = json.loads(url.read().decode())[""parse""][""text""][""*""]

df = pd.read_html(html)[0]        #pd.read_html retorna uma lista de dataframes, no caso há apenas um contendo os dados da tabela Classificação final.

print(df)

Resultando:
    Pos             Times  Pts   J   V   E   D  GP  GC  SG   %  /
0     1  Atlético Mineiro   34  27  12  10   5  39  22  17  63   
1     2         São Paulo   30  27  10  10   7  26  23   3  56   
2     3          Botafogo   28  27   8  12   7  27  27   0  52   
3     4       Corinthians   31  25  12   7   6  33  21  12  62   
4     5     Internacional   30  25  10  10   5  28  23   5  60   
5     6            Grêmio   29  25  10   9   6  24  18   6  58   
6     7         Palmeiras   28  25   9  10   6  27  20   7  56   
7     8          Cruzeiro   28  25   8  12   5  28  17  11  56   
8     9            Santos   27  25   9   9   7  24  16   8  54   
9    10          Coritiba   26  25  11   4  10  23  25  -2  52   
10   11           America   26  25   8  10   7  27  21   6  52   
11   12     Vasco da Gama   23  25   7   9   9  15  22  -7  46   
12   13             Bahia   18  19   5   8   6  14  16  -2  47   
13   14          Flamengo   18  19   4  10   5  13  17  -4  47   
14   15        Santa Cruz   17  19   3  11   5  17  23  -6  45   
15   16        Fluminense   16  19   5   6   8  12  13  -1  42   
16   17        Portuguesa   15  19   6   3  10  16  24  -8  40   
17   18   América Mineiro   13  19   2   9   8  11  19  -8  35   
18   19             Sport   12  19   4   4  11  10  27 -17  32   
19   20             Ceará    9  19   2   5  12   5  25 -20  24 

                   Classificação ou rebaixamento  
0   Fase de grupos da Copa Libertadores de 1972.  
1   Fase de grupos da Copa Libertadores de 1972.  
2               Também participou da fase final.  
3                  Participaram da segunda fase.  
4                  Participaram da segunda fase.  
5                  Participaram da segunda fase.  
6                  Participaram da segunda fase.  
7                  Participaram da segunda fase.  
8                  Participaram da segunda fase.  
9                  Participaram da segunda fase.  
10                 Participaram da segunda fase.  
11                 Participaram da segunda fase.  
12                Participaram da primeira fase.  
13                Participaram da primeira fase.  
14                Participaram da primeira fase.  
15                Participaram da primeira fase.  
16                Participaram da primeira fase.  
17                Participaram da primeira fase.  
18                Participaram da primeira fase.  
19                Participaram da primeira fase.

Teste o exemplo no Repl.it
Teste o exemplo no Colab
","
            2
        ",,,"['\npython', 'web-scraping', 'beautifulsoup\n']"
535204,Intervalo de valores dentro de um grupo biblioteca Pandas,"
Estou tratando um conjunto de dados utilizando a biblioteca Pandas no python.
Agrupei meus dados em 4 grupos. Tenho a coluna dateTime (com data e hora) e quero saber o intervalo de tempo de cada grupo.
Aqui criei uma nova coluna com esse delta t:
df['deltaT'] = df.groupby('cycle').dateTime.max() - df.groupby('cycle').dateTime.min()

E me retorna uma lista com o intervalo de tempo de cada ciclo:

Porém, na tabela, a coluna deltaT ocupa as 4 primeiras linhas, e não os 4 grupos, que deveria ocupar.
O DataFrame de entrada seria:
|cycle|     dateTime    |
|0  |   25/11/2021 17:50|
|   |   25/11/2021 17:50|
|   |   25/11/2021 17:50|
|   |   25/11/2021 17:50|
|   |                   |
|...|       ...         |
|4  |   25/11/2021 17:58|
|   |   25/11/2021 17:58|
|   |   25/11/2021 17:58|
|   |   25/11/2021 17:58|


E a saida esperada é: Uma nova coluna contendo o tempo que levou cada ciclo. Ou seja, o dateTime.max() - dateTime.min() de cada ciclo (0,1,2,3,4).
Alguém poderia me ajudar com isso?
","
Você pode usar a função transform para preservar a cardinalidade do seu DataFrame.
Criando DataFrame de exemplo:
import pandas as pd
from datetime import datetime
df = pd.DataFrame(
    [
        (0,datetime(2021,12,1,10,0,1)),
        (0,datetime(2021,12,1,10,0,2)),
        (0,datetime(2021,12,1,10,0,3)),
        (0,datetime(2021,12,1,10,0,4)),
        (0,datetime(2021,12,1,10,0,5)),
        (1,datetime(2021,12,1,10,0,1)),
        (1,datetime(2021,12,1,10,1,2)),
        (1,datetime(2021,12,1,10,1,3)),
        (1,datetime(2021,12,1,10,1,4)),
        (1,datetime(2021,12,1,10,1,5)),
        (2,datetime(2021,12,1,10,0,1)),
        (2,datetime(2021,12,1,10,2,2)),
        (2,datetime(2021,12,1,10,2,3)),
        (2,datetime(2021,12,1,10,2,4)),
        (2,datetime(2021,12,1,10,2,5)),
        (3,datetime(2021,12,1,10,0,1)),
        (3,datetime(2021,12,1,10,3,2)),
        (3,datetime(2021,12,1,10,3,3)),
        (3,datetime(2021,12,1,10,3,4)),
        (3,datetime(2021,12,1,10,3,5)),
        (4,datetime(2021,12,1,10,0,1)),
        (4,datetime(2021,12,1,10,4,2)),
        (4,datetime(2021,12,1,10,4,3)),
        (4,datetime(2021,12,1,10,4,4)),
        (4,datetime(2021,12,1,10,4,5)),
    ], columns=[""cycle"",""dateTime""]
)
df.to_markdown() #<-- usando o markdown de saída a seguir:







cycle
dateTime




0
0
2021-12-01 10:00:01


1
0
2021-12-01 10:00:02


2
0
2021-12-01 10:00:03


3
0
2021-12-01 10:00:04


4
0
2021-12-01 10:00:05


5
1
2021-12-01 10:00:01


6
1
2021-12-01 10:01:02


7
1
2021-12-01 10:01:03


8
1
2021-12-01 10:01:04


9
1
2021-12-01 10:01:05


10
2
2021-12-01 10:00:01


11
2
2021-12-01 10:02:02


12
2
2021-12-01 10:02:03


13
2
2021-12-01 10:02:04


14
2
2021-12-01 10:02:05


15
3
2021-12-01 10:00:01


16
3
2021-12-01 10:03:02


17
3
2021-12-01 10:03:03


18
3
2021-12-01 10:03:04


19
3
2021-12-01 10:03:05


20
4
2021-12-01 10:00:01


21
4
2021-12-01 10:04:02


22
4
2021-12-01 10:04:03


23
4
2021-12-01 10:04:04


24
4
2021-12-01 10:04:05



Incluindo a Coluna deltaT
df['deltaT'] = df.groupby('cycle')['dateTime'].transform('max') - df.groupby('cycle')['dateTime'].transform('min')

df.to_markdown()







cycle
dateTime
deltaT




0
0
2021-12-01 10:00:01
0 days 00:00:04


1
0
2021-12-01 10:00:02
0 days 00:00:04


2
0
2021-12-01 10:00:03
0 days 00:00:04


3
0
2021-12-01 10:00:04
0 days 00:00:04


4
0
2021-12-01 10:00:05
0 days 00:00:04


5
1
2021-12-01 10:00:01
0 days 00:01:04


6
1
2021-12-01 10:01:02
0 days 00:01:04


7
1
2021-12-01 10:01:03
0 days 00:01:04


8
1
2021-12-01 10:01:04
0 days 00:01:04


9
1
2021-12-01 10:01:05
0 days 00:01:04


10
2
2021-12-01 10:00:01
0 days 00:02:04


11
2
2021-12-01 10:02:02
0 days 00:02:04


12
2
2021-12-01 10:02:03
0 days 00:02:04


13
2
2021-12-01 10:02:04
0 days 00:02:04


14
2
2021-12-01 10:02:05
0 days 00:02:04


15
3
2021-12-01 10:00:01
0 days 00:03:04


16
3
2021-12-01 10:03:02
0 days 00:03:04


17
3
2021-12-01 10:03:03
0 days 00:03:04


18
3
2021-12-01 10:03:04
0 days 00:03:04


19
3
2021-12-01 10:03:05
0 days 00:03:04


20
4
2021-12-01 10:00:01
0 days 00:04:04


21
4
2021-12-01 10:04:02
0 days 00:04:04


22
4
2021-12-01 10:04:03
0 days 00:04:04


23
4
2021-12-01 10:04:04
0 days 00:04:04


24
4
2021-12-01 10:04:05
0 days 00:04:04



 ","
            1
        ",,,"['\npython', 'pandas\n']"
535187,É possivel testar e validar vários modelos de redes neurais ao mesmo tempo?,"
Tenho uma rede neural recorrente feita com pytorch, e gostaria de saber se tem como testar essa rede com configurações diferentes, por exemplo, com vários valores diferentes para o learning rate, momentum e numero de neurônios nas camadas ocultas de forma automática e no final me retornar qual modelo teve o melhor desempenho, ou eu tenho que ir alterando esses valores manualmente e testando uma por uma ate encontrar a melhor configuração ?
",,,,,"['\npython', 'redes-neurais', 'deep-learning\n']"
535182,Model class xxxx doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS,"
Olá, estou há um tempão me deparando com esse erro do Django ""Model class main.Assist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS."" Busquei em tudo que é lugar, mas as soluções não estão funcionando no meu caso.
o meu main para rodar
import os
import django
from django.db import models


os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'
os.environ[""DJANGO_ALLOW_ASYNC_UNSAFE""] = ""true""
django.setup()

from django.core.wsgi import get_wsgi_application

application = get_wsgi_application()


class Assist(models.Model):
    name = models.CharField(max_length=100)

settings.py
INSTALLED_APPS = [
    'HOW.apps.HowConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
import django
django.setup()

SITE_ID = 1

o erro
Traceback (most recent call last):
  File ""/home/anna/PycharmProjects/how/mysite/main.py"", line 15, in <module>
    class Assist(models.Model):
  File ""/home/anna/PycharmProjects/how/venv/lib/python3.8/site-packages/django/db/models/base.py"", line 113, in __new__
    raise RuntimeError(
RuntimeError: Model class __main__.Assist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

Process finished with exit code 1

",,,,,"['\npython', 'django\n']"
535179,Como adicionar uma scrollbar a uma janela com um label usando tkinter,"
Eu queria saber como posso fazer para adicionar uma scrollbar a uma lista que estou fazendo no tkinter, para a lista estou usando um label e quero saber como faço para configurar ela de modo que funcione, vou mostrar como está até agora:
    def listar_produtos(self) -> None:
        self.conectar() #conecta-se ao banco
        #criar janela 4
        self.janela4 = Toplevel(self.janela)

        #Configuração da janela 3 (Listar Produtos)
        self.janela4.title('Listar produtos')
        self.janela4.geometry('500x400')
        self.janela4.config(background='#fff')

        #Botões da janela 3 (Listar Produtos)
        texto_lista_produtos = Label(self.janela4, background='#fff', text='Lista de produtos no estoque')

        #Empacotamento dos Widgets do botão adicionar produto
        texto_lista_produtos.pack()

        #scroll bar
        sb = Scrollbar(self.janela4)
        sb.pack(fill=Y, side=RIGHT)

        #Selecionar e printar os produtos do banco de dados
        for i in self.conexao.execute(""select * from gerenciamento""):
            if (i) is None:
                print('')
            else:
                lista_produtos = Label(self.janela4, background='#fff' ,text=(f'Id: {i[0]} | Nome: {i[1]} | Quantidade: {i[2]}'), anchor='w')
                lista_produtos.pack()```

","
para resolver essa questão eu criei uma lista dessa forma:
#Cria uma lista que irá receber o valor produtos
        self.lista = Listbox(self.janela4, background='#fff', bd=0)
        self.lista.pack(side=LEFT, expand=True, fill='both')
#Verifica se a lista está vazia, se tiver irá ser inserido o texto ""A lista está vazia"" a lisbox e caso tenha algum dado será adicionado a lista todas as linhas da tabela do sqlite3
        comparar_valor_lista = self.conexao.execute('select * from produtos').fetchall()
        if len(comparar_valor_lista) == 0:
                self.lista.insert(END, 'A lista está vazia!!') 
        for lista_de_produtos in self.conexao.execute('select * from produtos').fetchall():
                self.lista.insert(END, f'Id: {lista_de_produtos[0]}  |  Nome: {lista_de_produtos[1]}  |  Quantidade: {lista_de_produtos[2]}  |  Preço: R$ {lista_de_produtos[3]}  |  Data: {lista_de_produtos[4]}/{lista_de_produtos[5]}/{lista_de_produtos[6]}')

","
            0
        ",,,"['\npython', 'tkinter\n']"
535114,O que é um context manager em Python?,"
O que são context managers em Python? Sei que podem ser utilizados por meio de blocos with.

Quais problemas um context manager resolve?
Como ele funciona?
O jeito idiomático para utilizá-los é com with? Existem outros jeitos de usá-los?

","
Ele é a aplicação do padrão de projeto chamado Dispose pattern que é bem conhecido em Java ou C#.
Ele consiste em um mecanismo que garante que um determinado recurso seja descartado ao final do seu uso, independente do que aconteça, um erro por exemplo, não deixa de encerrar esse recurso. Geralmente ele é usado para fechar esse recurso e descartar o manipulador de um serviço ou sistema operacional, por isso ele é usado com recursos externos à aplicação.
Ele automatiza de forma adequada o fechamento do recurso.
Ele é acionado com o with (ele cria o contexto), desde que o objeto esteja preparado para o padrão. Então:
with open('some_file', 'w') as opened_file:
    opened_file.write('Hola!')

é o mesmo que escrever (em última instância):
file = open('some_file', 'w')
try:
    file.write('Hola!')
finally:
    file.close()

Portanto por duck typing o objeto deve ter os métodos __enter__() e __exit__() que são métodos que sempre serão chamados pelo with na criação do objeto ou quando ele deve ser descartado, respectivamente. Exemplo em código que você poderia criar:
class File(object):
    def __init__(self, file_name, method):
        self.file_obj = open(file_name, method)
    def __enter__(self):
        return self.file_obj
    def __exit__(self, type, value, traceback):
        self.file_obj.close()

É possível chamar os métodos manualmente (sem with), mas aí pode cometer algum erro ou chamar em momento errado.
Geralmente este padrão é necessário em linguagens que não permitem RAII, que é um mecanismo mais simples, confiável e eficiente. Linguagens com gerenciamento automático não determinístico de memória geralmente tem dificuldade para fazer RAII.
Até onde eu sei Python gerencia memória de forma determinística (usa contagem de referência) e por isso permite RAII. Mas pode ser que seja detalhe de implementação e a linguagem não garanta isso. Talvez em algumas raras situações (não o que é mostrado nos exemplos) pode haver um indeterminismo por causa do ciclo de referência (coletado por um tracing GC). Ou o fato da linguagem não ter escopo menor que a função, o que poderia em alguns casos complicar o RAII correto e imediato. Tentei achar algo que explique porque então o DP é necessário, e encontrei uma resposta no SOen.
Tem algumas sofisticações que podem ser usadas e pode ver na referência abaixo. Existe até um módulo para lidar melhor com essa situação.
Fonte. PEP do with.
","
            6
        ",,,"['\npython', 'python-3.x', 'característica-linguagem\n']"
535076,como abrir uma nova janela de um arquivo diferente com tkinter,"
Eu tenho o arquivo main.py e quero abrir uma nova janela clicando em um botão chamando o arquivo janela2, eu consigo fazer apenas chamando o import janela2 em uma função, mas o botão só funciona uma vez.
from tkinter import *

root =  Tk()

class funcoes():
    
   def janela(self):
       import janela2 

class application(funcoes):
    def __init__(self):
        self.root = root
        self.tela()
        self.frames_da_tela()
        self.widgets_frame()
        root.mainloop()
    
    def tela(self):
        self.root.title('Main')
        self.root.configure(background='#483D8B')
        self.root.geometry('800x600')
        self.root.resizable(True, True)
        self.root.minsize(width=600, height=480)
    
    def frames_da_tela(self):
        self.frame_1 = Frame(self.root)
        self.frame_1.place(relx= 0.25, rely= 0.25, relwidth= 0.50, relheight= 0.46)
    
    def widgets_frame(self):
        self.bt_dentista = Button(self.frame_1, text='Gerenciar 1', command=self.janela2)
        self.bt_dentista.place(relx=0.3, rely=0.21, relwidth=0.35, relheight=0.12)
        
        self.bt_paciente = Button(self.frame_1, text='Gerenciar 2', command=self.janela3)
        self.bt_paciente.place(relx=0.3, rely=0.34, relwidth=0.35, relheight=0.12)
        
        self.bt_consulta = Button(self.frame_1, text='Gerenciar 3')
        self.bt_consulta.place(relx=0.3, rely=0.48, relwidth=0.35, relheight=0.12)

        self.bt_sair = Button(self.frame_1, text='Sair')
        self.bt_sair.place(relx=0.3, rely=0.62, relwidth=0.35, relheight=0.12)   

        self.lb_pesquisar = Label(self.frame_1, text='O que deseja fazer?')
        self.lb_pesquisar.place(relx=0.32 , rely=0.04)






application()

","
Só consegues importar um módulo uma vez por ficheiro, ou seja, só conseguirias abrir essa nova janela uma vez. A solução para isso é bastante simples, basta passares tudo o que tens dentro do ficheiro janela2.py para uma função dentro desse mesmo ficheiro. Vamos supor que criaste uma função ""novaJanela"" no ficheiro janela2.py. Quando fores para chamar essa função, terás que fazer da seguinte maneira.
import janela2

class funcoes():
   def janela(self):
      janela2.novaJanela()

","
            0
        ",,,"['\npython', 'tkinter\n']"
535042,problema com while no tkinter,"
Olá estou com um pequeno problema na criação de um pequeno jogo. A ideia é rodar um numero aleatório e depois contar a rodada, o problema é na hora de contar a rodada. O while mantém sempre o maior numero da sequência. Eu tentei sem interface e deu certo, mas quando tem janela o programa da errado. Quem puder ajudar agradeço muito.
from tkinter import *
from random  import randint



janela=Tk()
janela.title(""teste a sorte"")
janela.geometry('300x200+200+200')
janela.visor=Label()
janela.rod=Label()


def cont():
 n=0
 while (n<10):
  result()
  janela.rod['text']=""sua rodada é:"", n
  janela.rod.pack(side=""left"")
  n+=1


 def result():

  janela.visor['text']=randint(0,2)
  janela.visor.pack(side=""top"")



def Aperte():

 janela.Bt=Button()
 janela.Bt['text']=""clique e descubra seu numero""
 janela.Bt.pack(side=""top"")
 janela.Bt['command']=cont

Aperte()
janela=mainloop()

","
Você quer que o joguinho tenha 10 rodadas apenas e que cada click seja uma rodada, certo?
Se estiver correto, o problema é que quando você clica no botão, ele chama a função cont. E no corpo dessa função você, todas as vezes, faz:

seta a variável n para zero.
escreve na janela 10 vezes (n == 9 no final disso)
programa volta ao repouso. Próximo clique o ciclo repete.

Você precisa fazer n uma variável global (basta declarar n = 0 antes de criar o objeto janela). O código de cont poderia ser assim:
def cont():
  global n
  
  if n > 10:
    return
  
  result()
  print(janela.visor['text'])
  janela.rod['text']=""sua rodada é:"", n
  janela.rod.pack(side=""left"")
  
  n += 1

Além disso, a função result deveria vir antes de cont já que a primeira é chamada no corpo da segunda.
","
            0
        ",,,"['\npython', 'while', 'tkinter', 'gui\n']"
534955,Erro ao usar o módulo Time - Python,"
Estou tentando usar o módulo time para formatar no terminal o horário que o usuário inseriu num input. A função time() é organizada em horas, minutos, segundos. Acontece que quando o usuário digita, por exemplo: 7, 12, 56 dá um erro na hora de printar no terminal (deveria aparecer 7:12:56).
Aqui está a minha lógica:
import time

def main():
    
    departure_time = int(input(""What is your departure time (hours, minutes, seconds)?""))
    
    departure = time(departure_time)

    print(departure)
    

if __name__ == '__main__':
    main()

Nesse exemplo que dei, deveria aparecer no terminal: 7:12:56
Este é o erro que está dando:
Traceback (most recent call last):
  File ""C:\Users\jpvig\Desktop\Projeto Enes\home1.py"", line 13, in <module>
    main()
  File ""C:\Users\jpvig\Desktop\Projeto Enes\home1.py"", line 5, in main
    departure_time = int(input(""What is your departure time (hours, minutes, seconds)?""))
ValueError: invalid literal for int() with base 10: '7, 12, 56'

","
Você pode converter sua string em inteiros assim:
time(*[int(arg) for arg in ""7, 12, 56"".split("", "")])

Passo a passo
departure_time = ""7, 12, 56""
departure_time = departure_time.split("", "")
#['7', '12', '56']
departure_time = [int(arg) for arg in departure_time]
#[7, 12, 56]

O Asterisco (*) é usado para empacotar (packing) os argumentos em uma lista.
O código completo poderia ser assim:
from datetime import time

def main():
    separator = "":""
    departure_time = input(
        f""What is your departure time (hours{separator}minutes{separator}seconds)? ""
    ).split(separator)
    
    departure = time(*[int(args) for args in departure_time])

    print(departure)
    

if __name__ == '__main__':
    main()

","
            0
        ",,,"['\npython', 'time\n']"
534880,"Imprimir lista contendo intervalo, crescente e decrescente, contendo todos os números entre dois valores digitados pelo usuário - Python","
Enunciado completo da questão:
Faça um programa para ler repetidamente dois números naturais A e B maiores que zero. Para cada leitura de A e B o programa deve imprimir, no formato de uma lista, a sequência crescente de números do intervalo entre A e B se A < B, ou a sequência decrescente se A ≥ B. O programa finaliza a execução quando a leitura de A ou B forem iguais a zero.
      while (True):
      A,B = input(""Digite A e B: "").split( )
      if (A == ""0"") or (B == ""0""):
         print(""Fim."")
         break
      if (""A"" < ""B""):
        numeros = [A, B]
        print(""Sequencia:"",sorted(numeros))
      elif (""A"" > ""B"") or (""A"" == ""B""):
        numeros = [A, B]
        print(""Sequencia:"",sorted(numeros, reverse = True))

Somente consegui imprimir a lista contendo os valores ""A"" e ""B"" digitados pelo usuário. Estou com dificuldade em como fazer para imprimir o intervalo, crescente e decrescente, com todos os números entre ""A"" e ""B"". Pensei nas funções range e count, mas não sei como atribui-las nesse caso. Pesquisando não achei nada parecido.
Como poderia fazer isso?
OBS: Iniciante em python.
","
Tenta isso aqui:
while True:
    #para o usuário não ficar confuso, use inputs diferentes
    A = int(input(""Digite A: ""))#você precisa converter em inteiro para iterar sobre
    if A <= 0:
        print(""Fim."")
        break
    B = int(input(""Digite B: ""))
    if B <= 0:
        print(""Fim."")
        break

    elif A >= B:#python já tem um operador de maior ou igual
        numeros = list(reversed(range(B, A)));
        #range automaticamente gera um ""range"" de números entre B e A
        #reversed inverte o ""range""
        #list, converte o ""range"" invertido em uma  lista
        print(""Sequencia:"", numeros)

    else: #não existe outra possibilidade, só pode ser isso
        numeros = list(range(A, B));
        print(""Sequencia:"",numeros)

","
            -1
        ",,,['\npython\n']
534856,Como fazer combinações sem usar o itertools em python,"
Eu tenho o seguinte código para gerar as combinações possíveis da loteria (mega-sena, por exemplo):
from itertools import combinations

sequencia = combinations(range(1,61), 6)

for teste in sequencia:

  print(teste)

Minha dúvida é:
Tem como fazer esse mesmo código acima sem usar a biblioteca de combinações mas de uma forma fácil para entendimento sem entrar em conteúdos mais avançados classes / objetos?
","
Se você olhar a documentação da função itertools.combinations(iterable, r), está escrito que a função é aproximadamente equivalente a:
def combinations(iterable, r):
    # combinations('ABCD', 2) --> AB AC AD BC BD CD
    # combinations(range(4), 3) --> 012 013 023 123
    pool = tuple(iterable)
    n = len(pool)
    if r > n:
        return
    indices = list(range(r))
    yield tuple(pool[i] for i in indices)
    while True:
        for i in reversed(range(r)):
            if indices[i] != i + n - r:
                break
        else:
            return
        indices[i] += 1
        for j in range(i+1, r):
            indices[j] = indices[j-1] + 1
        yield tuple(pool[i] for i in indices)

Então sim é possível fazer combinações em python sem o uso do módulo itertools.
","
            1
        ",,,"['\npython', 'python-3.x\n']"
534846,"Como iterar entre colunas de uma matriz, multiplicando cada elemento pelos outros elementos da mesma coluna?","
Eu tenho essas duas matrizes
B  = np.matrix([[1,0,0],
                [0,1,0],
                [0,0,1],
                [1,0,0],
                [0,0,1]]) 

C = np.matrix([[0,0,0,1,1],
               [0,0,0,1,1],
               [1,1,0,0,1],
               [1,1,1,0,1],
               [0,0,1,1,0]])


Preciso multiplicar
 B[1,1]*B[2,1]*C[1,2]
 B[1,1]*B[3,1]*C[1,3]
 B[1,1]*B[4,1]*C[1,4]
 B[1,1]*B[5,1]*C[1,5]
 B[2,1]*B[1,1]*C[2,1]
 B[2,1]*B[3,1]*C[2,3]
 B[2,1]*B[4,1]*C[2,4]
etc
.
.
.


Estou tentando:
M=0
for i in range(0, 6):
  for j in range(0, 6):
    M = M + B[i, 1]*B[j, 1]*C[i,j]
    break 
  break

",,,,,"['\npython', 'pandas', 'numpy\n']"
534709,Diferença entre datas retorna zero em vez do total de segundos,"
Tenho este código que calcula a diferença entre duas datas:
import datetime as dt

natal = dt.date(2021, 12, 25)
reveillon = dt.date(2022, 1, 1)

print(reveillon - natal)
print((reveillon - natal).days)
print((reveillon - natal).seconds)
print((reveillon - natal).microseconds)

O resultado foi:

Ele disse que o 0 nos segundos e microssegundos foi porque ele usou date, e não datetime. Como ele não mostrou nenhum exemplo de como seria com o datetime, tentei por conta própria e fiz isso aqui:
natal = dt.datetime(2021, 12, 25, 11, 0, 0, 0)
reveillon = dt.datetime(2022, 1, 1, 12, 0, 0, 0)

print(reveillon - natal)
print((reveillon - natal).days)
print((reveillon - natal).seconds)
print((reveillon - natal).microseconds)

Dessa vez, o resultado foi:

Já estranhei um pouco, pois se são 7 dias de diferença entre as duas datas, como podem ser apenas 3599 segundos? Então, fui pro último teste:
natal = dt.datetime(2021, 12, 25, 12, 0, 0, 0)
reveillon = dt.datetime(2022, 1, 1, 12, 0, 0, 0)

print(reveillon - natal)
print((reveillon - natal).days)
print((reveillon - natal).seconds)
print((reveillon - natal).microseconds)

Dessa vez, o resultado foi o mesmo da primeira imagem. O que eu fiz de errado? Por que os zeros voltaram? Uma semana tem 604800 segundos, e não 0.
","
Olhando a documentação do módulo datetime, podemos ver que a subtração de duas datas resulta em um timedelta (procure pelas tabelas indicadas por ""Supported operations"", como esta).
E segundo a documentação, um timedelta tem as seguintes características:

Only days, seconds and microseconds are stored internally. Arguments are converted to those units:

A millisecond is converted to 1000 microseconds.
A minute is converted to 60 seconds.
An hour is converted to 3600 seconds.
A week is converted to 7 days.

and days, seconds and microseconds are then normalized so that the representation is unique, with:

0 <= microseconds < 1000000
0 <= seconds < 3600*24 (the number of seconds in one day)
-999999999 <= days <= 999999999


Em tradução livre:

Apenas dias, segundos e microssegundos são armazenados internamente. Os argumentos são convertidos para estas unidades:

Um milissegundo é convertido para 1000 microssegundos.
Um minuto é convertido para 60 segundos.
Uma hora é convertida para 3600 segundos.
Uma semana é convertida para 7 dias.

e depois os dias, segundos e microssegundos são normalizados para uma representação única, na qual:

0 <= microseconds < 1000000
0 <= seconds < 3600*24 (a quantidade de segundos em um dia)
-999999999 <= days <= 999999999


Ou seja, internamente um timedelta só guarda 3 campos: a quantidade de dias (days), a quantidade de segundos (seconds) e a quantidade de microssegundos (microseconds). Quaisquer outras quantidades de tempo são convertidas para uma dessas, e depois os valores são normalizados para que fiquem dentro da faixa de valores mínimos e máximos de cada um.

Para entender melhor, vamos ver alguns casos. Para estes testes, criei uma função que calcula a diferença entre duas datas e imprime os campos do timedelta:
# esta função será usada nos próximos exemplos
def diff(start, end):
    t = end - start
    print(t, t.days, t.seconds, t.microseconds, sep='\n')

Primeiro vamos ver a diferença entre duas datas que possuem o mesmo dia, porém horários diferentes:
from datetime import datetime

# mesmo dia, com 3 horas de diferença
diff(datetime(2021, 12, 25, 10, 0, 0, 0), datetime(2021, 12, 25, 13, 0, 0, 0))

As datas estão no mesmo dia, com 3 horas de diferença entre elas. O resultado é:
3:00:00
0
10800
0

Ou seja, a diferença de 3 horas foi normalizada para 10800 segundos.
Agora se eu mudar para que a diferença seja de 10 dias e 3 horas:
from datetime import datetime

# diferença de 10 dias e 3 horas
diff(datetime(2021, 12, 15, 10, 0, 0, 0), datetime(2021, 12, 25, 13, 0, 0, 0))

A saída passa a ser:
10 days, 3:00:00
10
10800
0

Repare que os segundos ainda continuam sendo 10800. O que mudou foi apenas o campo days, que passou a ser 10. Esse é um detalhe importante, que é o que parece ter te confundido: o campo seconds não tem o total de segundos correspondente a 10 dias.
Na verdade ele tem a quantidade de segundos depois que os valores são normalizados (segundo as regras acima), lembrando que seconds não pode ser maior que 3600 * 24 (que é a quantidade de segundos em um dia). Então o timedelta acaba tendo o campo days com o valor 10 (indicando que são 10 dias), e o restante (as 3 horas, que não é suficiente para completar um dia) é convertido para segundos e microssegundos (como o valor em segundos dá exato, então microseconds é igual a zero).

Sobre os seus exemplos
Ao contrário do que você afirmou nos seus testes, este código:
import datetime as dt

natal = dt.datetime(2021, 12, 25, 11, 0, 0, 0)
reveillon = dt.datetime(2022, 1, 1, 12, 0, 0, 0)

print(reveillon - natal)
print((reveillon - natal).days)
print((reveillon - natal).seconds)
print((reveillon - natal).microseconds)

na verdade gera a seguinte saída:
7 days, 1:00:00
7
3600
0

Ou seja, uma diferença de sete dias e uma hora. No caso, o campo days é 7, e segundo as regras de normalização acima, a ""uma hora"" (que não é suficiente para completar um dia) é convertida para segundos, e por isso o campo seconds é 3600.
Novamente: o campo seconds não tem o total de segundos corresponde aos sete dias e uma hora. Os dias vão em um campo separado, e o que ""sobra"" é que vai para os segundos e microssegundos.
Aliás, é por isso que no seu último exemplo seconds é igual a zero, pois a diferença é de sete dias exatos, sem nenhum segundo a mais nem a menos. Por isso não há ""excedente"" e tanto seconds quanto microseconds acabam sendo zero.

Se quer o total de segundos, basta usar total_seconds():
import datetime as dt

natal = dt.datetime(2021, 12, 25, 11, 0, 0, 0)
reveillon = dt.datetime(2022, 1, 1, 12, 0, 0, 0)

diferenca = reveillon - natal

# days e seconds pegam os valores normalizados
print(diferenca.days) # 7
print(diferenca.seconds) # 3600

# total_seconds() devolve o total de segundos
print(diferenca.total_seconds()) # 608400.0

","
            3
        ",,,"['\npython', 'datetime', 'date\n']"
534688,"Como, de maneira simples, gerar documentos HTML complexos?","

Baseado nessa pergunta: Duvidas do python

Na pergunta citada acima o usuário alega estar fazendo um sistema de preenchimento de questionários e deseja que a saída seja HTML. Porém o código proposto no MCVE da pergunta:

Não gera um documento HTML e sim um documento num formato conhecido como BBCode que é uma linguagem de marcação usada para formatar mensagens em fóruns e blogs.
O documento gerado é montado de forma artesanal linha a linha com a função print().

Então para um script que realmente gere um documento HTML, um exemplo mínimo completo e verificável seria:
d ={
  ""nome"": ""Augusto Vasques"",             #input(""Digite o seu nome: ""),
  ""site"": ""Stack Overflow em Português"", #input(""Digite o nome do site: "")
}
html = f""""""
<!DOCTYPE html>
<html>

<body>

    <h1>Bem Vindo {d[""nome""]}!</h1>

    <p>Esse é o {d[""site""]}</p>

</body>

</html>
""""""
print(html)



<!DOCTYPE html>
<html>

<body>

    <h1>Bem Vindo Augusto Vasques!</h1>

    <p>Esse é o Stack Overflow em Português</p>

</body>

</html>



O código simula a coleta de informações do usuário em um dicionário e a partir de um fstring cria, e povoa com os dados desse dicionário, um documento HTML.
Para um documento extremamente simples é o suficiente, porém caso sejam exigidas mais opções e detalhamento na entrada de dados o código escalaria em complexidade e propensão a erros, veja o seguinte exemplo:
d ={
  ""nome"": ""Augusto Vasques"",             #input(""Digite o seu nome: ""),
  ""site"": ""Stack Overflow em Português"", #input(""Digite o nome do site: ""),
  ""tags"": [""c"", ""c++"", ""c#"", ""java"", ""php""]
}

def listar_tags(l):
  return '\n'.join(
    [""<ul>""] + 
    [f""\t<li>{t}</li>"" for t in l] + 
    [""</ul>""])

html = f""""""
<!DOCTYPE html>
<html>

<body>

  <h1>Bem Vindo {d[""nome""]}!</h1>

  <p>Esse é o {d[""site""]}</p>
  <p>Essas são algumas de nossas tags:</p>
  {listar_tags(d[""tags""])}

</body>

</html>
""""""
print(html)



<!DOCTYPE html>
<html>

<body>

  <h1>Bem Vindo Augusto Vasques!</h1>

  <p>Esse é o Stack Overflow em Português</p>
  <p>Essas são algumas de nossas tags:</p>
  <ul>
    <li>c</li>
    <li>c++</li>
    <li>c#</li>
    <li>java</li>
    <li>php</li>
  </ul>

</body>

</html>



Para uma tarefa simples com adicionar uma lista de tags já se tornou algo mais intrincado.
Frameworks web, como Django e Flask, possuem uma abordagem bastante conveniente de como gerar HTML dinamicamente que é o uso de templates(Templates Django e Templates Flask).
Então faço a pergunta, como em uma aplicação Python de console gerar de maneira simples documentos HTML complexos?
","
Uma possibilidade é importar uma Engine de Templates igual as engines utilizadas em Frameworks Web.
No caso utilizei a engine Jinja2 por possuir uma sintaxe bastante difundida e ter a API bem documentada.
O trabalho então foi dividido em criar um modelo para que os valores sejam preenchidos dinamicamente e um script Python para ""coletar"" e renderizar valores num template:
modelo.ui
<!DOCTYPE html>
<html>

<body>

  <h1>Bem Vindo {{ nome|e }}!</h1>

  <p>Esse é o {{ site|e }}</p>
  <p>Essas são algumas de nossas tags:</p>
  <ul>
    {% for t in tags %}
    <li>{{ t|e }}</li>
    {% endfor %}
  </ul>

</body>

</html>

main.py
from jinja2 import Template

d ={
  ""nome"": ""Augusto Vasques"",             #input(""Digite o seu nome: ""),
  ""site"": ""Stack Overflow em Português"", #input(""Digite o nome do site: ""),
  ""tags"": [""c"", ""c++"", ""c#"", ""java"", ""php""]
}

#Abre o arquivo contendo o template...
with open(""modelo.ui"") as f:
  template = Template(f.read())       #...carrega o template.

#Renderiza o template com o valores das chaves em d.
print(template.render(d))



<!DOCTYPE html>
<html>

<body>

  <h1>Bem Vindo Augusto Vasques!</h1>

  <p>Esse é o Stack Overflow em Português</p>
  <p>Essas são algumas de nossas tags:</p>
  <ul>
    
    <li>c</li>
    
    <li>c++</li>
    
    <li>c#</li>
    
    <li>java</li>
    
    <li>php</li>
    
  </ul>

</body>

</html>



Teste o exemplo no Repl.it
","
            2
        ",,,"['\npython', 'template', 'console-application\n']"
534580,Lista de listas que segue a ordem dos elementos de uma sequência,"
Então, estou tentando fazer um ""Jogo da paciência"" em Python, porém com números maiores do que os de uma baralho convencional.
Pra isso, eu forneço uma sequência/lista de elementos os quais quero ordenar em ""pilhas"", no entanto não tá dando muito certo as formas que eu estou fazendo... O método que eu tenho que utilizar é o de lista de listas e com isso eu fiz o seguinte código até agora:
s = list(map(int,input(""\n⌨ Forneça os elementos da sequência: "").split(',')))

l = len(s)

pilha     = [[] for i in range(0,l)]
pilha[0] += [s[0]] # Aqui eu adiciono o primeiro termo da sequência (como se fosse a primeira carta)

i = 0
x = s[i]
y = s[i+1]

for i in range(0,l):
    for elemento in s:
        if (x > y) and (elemento == y):
            pilha[i] += [elemento]

        elif (x <= y) and (elemento == y):
                i += 1
                pilha[i+1].append(elemento)

print('\nCriam-se então as seguintes pilhas: ')
    
for p in range(0,l):
    if pilha[p] != []:
        print('\nPilha[%d]: %s' %(p,pilha[p]))


Minha ideia basicamente foi pegar o os elementos adjacentes da sequência, por exemplo, se s=[14, 8, 7, 17, 20], eu pego direto o segundo elemento s[1] == 8 e adiciono na pilha[0]. No entanto, eu imaginava que o comando for avaliasse todos os i's no intervalo (0,l), porém isso não acontece, e quando eu tento colocar um contador em i, ocorre um erro de indexação, dizendo ""invalid syntax: pilha[i+1].append(elemento)"". Tentei usar pilha[i+1] += [elemento] e também não funcionou com contador... Se alguém puder me ajudar, ficaria muitíssimo grato :)
Quando dou run nesses comandos acima, obtenho o resultado:
Pilha[0] = [14, 8]
Pilha[1] = [8]
Pilha[2] = [8]
Pilha[3] = [8]
Pilha[4] = [8]
Pilha[5] = [8]
E o resultado correto seria:
Pilha[0] = [14, 8, 7]
Pilha[1] = [17, 11]
Pilha[2] = [20]
Estou usando Python 3.8
","
Podes usar um contador para definir a pilha atual. Se o elemento for menor é adicionado, se não for cria-se uma pilha nova e aumenta-se o contador.
O primeiro elemento é logo adicionado e o ciclo começa no segundo elemento.
s = list(map(int,input(""\n⌨ Forneça os elementos da sequência: "").split(',')))

l = len(s)

pilhas = []

x = s[0]
pilha = 0

pilhas.append([x])

for i in range(1, l):
    if s[i] < x:
        pilhas[pilha].append(s[i])
    else:
        pilha += 1
        pilhas.append([s[i]])
    x = s[i]

print(pilhas)

","
            0
        ",,,"['\npython', 'python-3.x', 'lista\n']"
534495,Como obter somente determinadas tags de um XML,"
Preciso ler um XML e printar somente algumas linhas que possuem a mesma tag. Consegui carregar o XML, e fiz um laço para percorrê-lo e printar as tags e os atributos subsequentes:
import xml.etree.ElementTree as ET
import requests

tree = ET.parse('pt_cadbai.xml')
root = tree.getroot()

for row in root:
    print(row.tag, row.attrib)

Porém, só está sendo printado METADATA {} e ROWDATA {}.
Esse é o XML:
<?xml version=""1.0"" standalone=""yes""?>
<DATAPACKET Version=""2.0"">
    <METADATA>
        <FIELDS>
            <FIELD attrname=""CODIGO_BAI"" fieldtype=""i4"" required=""true"">
                <PARAM Name=""PROVFLAGS"" Value=""7"" Type=""i4"" Roundtrip=""True"" />
            </FIELD>
            <FIELD attrname=""EMPRESA_BAI"" fieldtype=""i4"" required=""true"" />
            <FIELD attrname=""DESCRICAO_BAI"" fieldtype=""string"" WIDTH=""60"" />
            <FIELD attrname=""CODIGO_TCE_BAI"" fieldtype=""i4"" />
            <FIELD attrname=""CHK_DESM_BAI"" fieldtype=""string"" WIDTH=""1"" />
        </FIELDS>
        <PARAMS DEFAULT_ORDER=""1"" PRIMARY_KEY=""1"" LCID=""0"" />
    </METADATA>
    <ROWDATA>
        <ROW CODIGO_BAI=""0"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""Desconhecido"" CHK_DESM_BAI=""N"" />
        <ROW CODIGO_BAI=""1"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""DESUSO"" />
        <ROW CODIGO_BAI=""2"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""DOA�AO"" />
        <ROW CODIGO_BAI=""3"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""VENDA"" />
        <ROW CODIGO_BAI=""4"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""VEICULO SINISTRO PERDA TOTAL"" CHK_DESM_BAI=""N"" />
        <ROW CODIGO_BAI=""5"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""FURTO/ROUBO"" CHK_DESM_BAI=""N"" />
        <ROW CODIGO_BAI=""6"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""SUCATA"" CHK_DESM_BAI=""N"" />
        <ROW CODIGO_BAI=""7"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""TRANSFER�NCIA DE CONTA CONTABIL"" CHK_DESM_BAI=""N"" />
        <ROW CODIGO_BAI=""8"" EMPRESA_BAI=""2"" DESCRICAO_BAI=""BAIXA PARA CONSUMO"" CHK_DESM_BAI=""N"" />
    </ROWDATA>
</DATAPACKET>

Eu queria printar os valores das tags ROW. Há uma forma de passar por ROWDATA e chegar nas tags filhas ROW?
","
Quando você itera diretamente pelo elemento (for row in root), ele só pega os filhos diretos do mesmo, por isso o resultado foi apenas METADATA e ROWDATA
Para procurar tags descendentes independente do nível, uma alternativa é passar o nome da tag para iter:
import xml.etree.ElementTree as ET

tree = ET.parse('arquivo.xml')
root = tree.getroot()
for row in root.iter('ROW'): # <--- vai procurar somente por ROW
    print(row.tag, row.attrib)

O detalhe é que assim ele procura por tags ROW em todo o documento. Por exemplo, se tivesse um ROW dentro de METADATA, ele também seria retornado.
Mas se quiser somente aquelas que estão dentro de ROWDATA, outra alternativa é usar iterfind e especificar as tags que você quer:
for row in root.iterfind('./ROWDATA/ROW'):
    print(row.tag, row.attrib)

Note que iterfind usa a sintaxe de XPath. No caso, eu usei o caminho completo, assim ele só pega as tags ROW que estiverem dentro de ROWDATA, que por sua vez estão logo abaixo do root. Consulte a documentação para saber todas as opções de busca disponíveis.
","
            1
        ","
Mudei um pouco o meu código adicionando apenas uma váriavel chamada filtro = '*'
e passando a mesma como parâmetro  da função iter no laço que percorre o XML, ficando assim:
import xml.etree.ElementTree as ET

tree = ET.parse('work.xml')
root = tree.getroot()

filtro = '*'

for row in root.iter(filtro): 
    print(row.tag, row.attrib)

","
            -1
        ","['\npython', 'python-3.x', 'xml\n']"
534454,"como ler um arquivo txt e tranformá-lo em uma matriz, sem utilizar a função split()?","
fiz um código usando a função split, e ficou dessa maneira:
matriz = []
f = open(""dados.txt"", ""r"")
for line in f:
  linha = (line.split(','))
  matriz.append(linha)

porém preciso chegar a mesma matriz sem utilizar a função split(),  há alguma maneira?
","
Você pode usar a biblioteca csv nativa do Python
import csv
with open('dados.txt') as csvfile:
  spamreader = csv.reader(csvfile, delimiter=',')
  matrix = [line for line in spamreader]

O código acima foi inspirado no Exemplo dado na própria documentação:
https://docs.python.org/3.9/library/csv.html#csv.reader
","
            2
        ",,,"['\npython', 'txt\n']"
534426,Como faço para importar imagem para uma interface tkinter selecionando um arquivo?,"
Estou fazendo um projeto de sistema escolar e no meu menu principal quero adicionar a foto e ao lado o nome da escola. Quero dar a opção para o usuário mudar a foto quando quiser, mas não consigo fazer um código que selecione a foto de um diretório especifico e salve na interface.
Essa é minha tentativa de codigo:
from tkinter import *
from tkinter.filedialog import askopenfilename
import os

pastaArq=os.path.dirname(__file__)

def selectImg():
    Tk().withdraw()
    imgLogo= PhotoImage(file=pastaArq+""\\%s"") % filename
    image_pos=Label(app, image=imagem)
    image_pos.place(x=10, y=10)

app=Tk() 

app.title(""Opções"")
app.geometry(""320x120"")
app.configure(background=""#fff"")

Label(app, background=""#027"").place(x=10, y=190, width=114, height=34)
Button(app, text=""Editar foto"", command=selectImg).place(x=12, y=192, width=110, height=30)

app.mainloop()```

","
A formatação da string tem que ficar dentro dos parênteses. O TkInter só suporta ficheiros .png ou .gif. É preciso definir o nome do ficheiro e guardar referência da imagem no atributo img.
def selectImg():
    Tk().withdraw()
    filename = ""image.png""
    imagem = PhotoImage(file=pastaArq+""\\%s"" % filename) 
    image_pos=Label(app, image=imagem)
    image_pos.img = imagem
    image_pos.place(x=10, y=10)

","
            0
        ",,,"['\npython', 'tkinter\n']"
534418,"Ola pessoal, tenho um trabalho pra fazer da facul sobre python e to com certa dificuldade","
Implementar um programa que fornecidos o nome e a idade de um criança classifique-a em uma das seguintes etapas de ensino:
Ensino                      Faixa etária
Educaçao Infantil           1 a 5
Ensino Fundamental I        6 a 10
Ensino Fundamental          11 a 14
Ensino médio                 maiores de 15 anos
O usuário deve ainda ter a opção de escolher se quer encerrar o programa ou não. e a saida deve ficar assim
nome da criança: tal
idade: 04
A aluna tal tem tal idade e esta no ensino infantil
deseja continuar? 0 - nao   1 - sim
MEU CODIGO FICOU ASSIM:
aluno = dict()  
aluno ['nome:'] = str(input('nome: '))  
aluno ['idade:'] = float(input(f'idade de {aluno[""nome:""]}: '))  
if aluno['idade:'] <= 5:  
    aluno['ensino:'] = 'infantil'  
elif 1 >= aluno['idade:'] <=5:     
    aluno ['ensino:'] = 'infantil '     
if aluno['idade:'] <= 10:     
        aluno['ensino:'] = 'ensino fundamental I'   
elif 6 >= aluno['idade:'] <= 10:
    aluno['ensino:'] = 'ensino fundamental I'
if aluno['idade:'] <= 14:
        aluno['ensino:'] = 'ensino fundamental II'
elif 11 >= aluno['idade:'] <= 14:
        aluno['ensino:'] = 'ensino fundamental II'
if aluno['idade:'] >= 15:
            aluno['ensino:'] = 'ensino medio'  
for k,v in aluno.items():
    print(f'{k}  {v}')

O problema é que qualquer idade abaixo de 14 que eu coloco so sai ensino  fundamental II, nao sai as outras opcoes de acordo com a idade da criança
","
Não sei a sintaxe da linguagem Python, mas já resolvi problemas semelhantes com outras linguagens. A sua estrutura condicional deveria ser aninhada, por exemplo:
aluno = dict()  
aluno ['nome:'] = str(input('nome: '))  
aluno ['idade:'] = float(input(f'idade de {aluno[""nome:""]}: '))  
if 1>= aluno['idade:'] <= 5:  
    aluno['ensino:'] = 'infantil'    
elif aluno['idade:'] <= 10:     
    aluno['ensino:'] = 'ensino fundamental I'   
elif aluno['idade:'] <= 14:
    aluno['ensino:'] = 'ensino fundamental II'
else
    aluno['ensino:'] = 'ensino medio'  
for k,v in aluno.items():
    print(f'{k}  {v}')

Repito: não sei a sintaxe do Python.
","
            -2
        ","
while True:
    aluno = dict()
    aluno['nome'] = str(input('Digite o nome do aluno: '))  
    aluno['idade'] = int(input(f'Digite a idade de {aluno[""nome""]}: '))

    if aluno['idade'] <= 5:
        aluno['ensino'] = 'Ensino Infantil'
    elif aluno['idade'] >= 6 and aluno['idade'] <= 13:
        aluno['ensino'] = 'Ensino Fundamental I'
    elif aluno['idade'] > 13 and aluno['idade'] <= 14:
        aluno['ensino'] = 'Ensino Fundamental II'
    elif aluno['idade'] >= 15:
        aluno['ensino'] = 'Ensino Médio'
    for k, v in aluno.items():
        print(f'{k}: {v}')

    print('\nDeseja continuar?\n[0] Não\n[1] Sim')
    option = int(input('R: '))

    if option == 0:
        break

lembre-se de indentar o código. caso contrário, não vai funcionar...
eu tinha colado o código errado aqui, corrigi.
ta assim:

","
            -5
        ","['\npython', 'algoritmo\n']"
534404,Python - Não estou conseguindo somar os elementos lançados [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 4 meses.




                        Melhore esta pergunta
                    



tentei criar um programa para simular o registro de notas fiscais;
O programa deve ler número da nota, Produto, Valor da nota, Imposto.
O programa deve escrever o número da nota, produto, valor, valor do imposto e valor das notas somadas.
estou com dificuldade para encontrar a soma das notas cadastradas!!
 registro = list()
while True:
    nota = int(input('nota: '))
    produto = str(input('produto: '))
    valor = float(input('valor: '))
    imposto = float(input('imposto: '))
    vimposto = (imposto * valor)
    registro.append([nota, produto, valor, vimposto])
    res = str(input('Deseja registrar uma nova nota? [S/N] '))
    if res in 'Nn':
        break
print('{:<4}{:>10}{:>10}{:>10}'.format(""Nota"", ""Produto"", ""Valor"", ""Imposto""))
print('_' * 40)
for i, a in enumerate(registro):
    print('{:<4}{:>10}{:>10}{:>10}'.format(a[0], a[1], a[2], a[3]))
print(sum(valor))

Obrigado.
","
Você tem uma lista ""Pai' com listas ""Filhas"" dentro, ou seja, o Pai é a lista grande que contém todas as notas que são as filhas
, cada filha tem um valor, e você quer acessar esse valor utilizando-se da função 'sum()', isso funciona apenas  para listas que são
numéricas, ou seja não deve haver tipos numéricos e strings na mesma lista. Outro problema é que você esta tentando usar o sum() em uma lista
com sub listas, isso parece não funcionar, a não ser que você chame diretamente a sub lista ""numérica e sem Strings"" para aplicar o sum().
...Resumindo Situações...
Posso usar 'sum()' :
    lista_int = [1,2,3] // lista tipo int
    lista_float = [1.2, 1.5, 1.6] // lista tipo Float
    lista = [1, 2, 3.4, 4.5] /Lista com os dois tipos !

Não posso usar 'sum()' :
lista = ['Pedro', 12] //Lista numérica + strings

lista = [[12], [12]] // Situação onde tenho Sub listas dentro de uma lista maior !!! => Esse é um dos motivos para o erro.

...Apontando o que deve ser resolvido...
Retirei o print(sum()) e o código rodou normalmente, então para que funcione com ele você vai precisar resolver o
seguinte.
1º  Como retirar o valor da sub lista e fazer a soma com 'sum()' ou sem 'sum()'. Ou apenas retirar o valor já fazendo a soma.
...Resolvendo o problema...
1ª Solução !
Você deve retirar o valor de cada sub lista (nota fiscal) com um loop for e joga em uma lista nova para que ai sim você consiga utilizar a função 'sum()', já que essa lista de valores teria apenas valores numéricos.
exemplo...
  soma_valores = list()

  for x in range(0, len(registro)):
    soma_valores.append(registro[x][2])      # x vai passar nota por nota a partir do 0, já o 2 é a posição do valor na nota do momento...
                                          #O valor é capturado e mandado para a lista do soma_valores               

  print(sum(soma_valores))

2ª Solução !
Você pode retirar esses valores e já fazer a soma utilizando uma variável com += para cada valor da sub lista(notas) que seja lido.
  var = 0

  for x in range(0, len(registro)):
    var += registro[x][2]      #Estou somando a variavel VAR com o valor da posição registro[x][2] da lista em questão e fazendo VAR
                            receber o valor dessa soma

  print(var)

+= Recebe a própria variável + o que você quiser, outro exemplo do mesmo sentido abaixo...
variavel = variavel + alguma coisa
ou
  x = 0

  x = x + 1

  print(x)

saída...   0
...Observações Finais...
Testei tudo e funcionou, eu não tenho certeza se você quer apenas o valor especifico do produto de cada
nota mas se for realmente apenas isso pode ir que dá certo. A primeira linha tem um erro de indentação,
acredito que foi durante a edição da questão, mas só pra avisar mesmo.
caso algum mal entendido ou problema com a resposta , comente.
","
            0
        ",,,['\npython\n']
534403,"Construir tabela indicando ""0"" para valor não encontrado Python","
Preciso montar uma tabela de frequência para valores observados versus valores esperados. Porém não estou conseguindo formatar corretamente a indicação da frequência dos dígitos e a inclusão dos valores ""0"" para dígitos não encontrados.
import pandas as pd

data = {'Empresa':['A','B','C','D','E','F','G','H','I','J'],
        'Valor_Empenhado':[520.00,751.00,654.00,781.00,120.00, 551.00,62.00,78.00,77.00,1053.00]}
               
df =pd.DataFrame(data, columns=['Empresa','Valor_Empenhado'])

df['first_dig'] =df['Valor_Empenhado'].astype(str).str[:1] #seleção do 1º digito
freq = df.groupby(['first_dig']).size() # frequencia dos digitos

total = freq.sum() # Quantidade total

Po = [None] # proporção observada de cada dígito

for i in freq:

  Po.append(i/total)

Po

Pe = [None,0.301,0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046 ] # proporção esperada
dig = range(1,10) # faixa de números procuradas

print('-'*29) # montagem da tabela
print('Digito    Pe          Po')
print('-'*29)
for d in dig:
  print(f'{d:3} {Pe[d]:10,.3f} {Po[d]:11,.3f}')

`
Está ficando assim:
-----------------------------
Digito    Pe          Po
-----------------------------
  1      0.301       0.200
  2      0.176       0.200
  3      0.125       0.200
  4      0.097       0.400

Mas preciso que fique assim:

Digito    Pe       Po_1º_dig
-----------------------------
  1      0.301       0.200
  2      0.176       0.000
  3      0.125       0.000
  4      0.097       0.000
  5      0.079       0.200
  6      0.067       0.200
  7      0.058       0.400
  8      0.051       0.000
  9      0.046       0.000

","
Pelo que eu entendi, você está querendo aplicar a Lei de Benford (ou o Algoritmo do Ladrão).
Há uma biblioteca não nativa que implementa esse algoritmo:
github.com/milcent/benford_py
Respondendo a sua questão
Substituindo o Hard Code por expressões logarítmicas
Você pode primeiro criar a distribuição de Benford via logaritmo a título de precisão.

import numpy as np
import pandas as pd

benford_df = pd.DataFrame([(d, np.log10(1 + (1.0 / d))) for d in range(1,10)], columns=['first_dig','distribution'])







first_dig
distribution




0
1
0.301030


1
2
0.176091


2
3
0.124939


3
4
0.096910


4
5
0.079181


5
6
0.066947


6
7
0.057992


7
8
0.051153


8
9
0.045757



Criando o seu dataframe
data = {'Empresa':['A','B','C','D','E','F','G','H','I','J'],
        'Valor_Empenhado':[520.00,751.00,654.00,781.00,120.00, 551.00,62.00,78.00,77.00,1053.00]}
               
df =pd.DataFrame(data, columns=['Empresa','Valor_Empenhado'])

Calculando a sua distribuição
Fiz dois ajustes na sua forma de calcular a distribuição.

Assegurei que o dígito seja do tipo int
Assegurei que o resultado seja um objeto do tipo DataFrame e não Series

df['first_dig'] =df['Valor_Empenhado'].astype(str).str[:1].astype(int) #seleção do 1º digito
freq = pd.DataFrame(df.groupby(['first_dig']).size()).reset_index()
freq.columns = ['first_dig','my_distribution']

Mesclando os dados
Com os dois Dataframes podemos agora mesclá-los usando how=left para que os dígitos sem correspondência não desapareçam
benford_df.merge(freq, on='first_dig', how='left').fillna(0)






first_dig
distribution
my_distribution




0
1
0.301030
2.0


1
2
0.176091
0.0


2
3
0.124939
0.0


3
4
0.096910
0.0


4
5
0.079181
2.0


5
6
0.066947
2.0


6
7
0.057992
4.0


7
8
0.051153
0.0


8
9
0.045757
0.0




Bônus: Se quiser plotar essa tabela num gráfico de comparação, dê uma olhada nessa resposta do StackOverflow: https://stackoverflow.com/questions/42756433/benfords-law-plotting-in-python-3-5-2
","
            1
        ",,,"['\npython', 'pandas', 'tabela\n']"
534343,Como salvar números inteiros em um arquivo txt no Python,"
Preciso salvar os números de 1 a 10000 em um arquivo .txt utilizando o Python. Pesquisei diversas maneiras de fazer isso, mas todas deram erro. A minha ideia era usar um contador em um laço de repetição, para salvar todos os números. Até o momento, o código está assim:
arquivo= open(""numeros.txt"", ""r"")*
ct= 0
while ct<=10000:
","
with open('numeros.txt', 'w') as stream:
  lines = (f'{number}\n' for number in range(1, 1001))
  stream.writelines(lines)


Com open('numeros.txt', 'w') abre-se o arquivo para escrita
Define-se um gerador lines que gerará cada linha que será escrita no arquivo
Com stream.writelines(lines) escreve-se cada linha no arquivo

","
            2
        ","
Dentro do while será necessário a função with com dois parâmetros.
O primeiro com o nome do arquivo e a extensão, no caso nomeie de ""contagem.txt""
a segunda com o tipo de manipulação que deseja realizar.

r para leitura do arquivo.
w para escrita. Caso usado sobrescreve o arquivo apagando o conteúdo ja existente.
a para escrita. Diferente do w, cada vez que executado, escreve em uma nova linha, atendendo o problema proposto, já que, a cada interação um novo número será implementado.

with open('contagem.txt', 'a') as salvar: -->  Abrindo um arquivo em modo escrita
salvar.write(f'{str(ct)}\n') --> salvando os dados
ct += 1 --> Atualizando o ct + 1.
ct = 0

while ct < 1001:
    with open('contagem.txt', 'a') as salvar:
        # OBS: str(ct) --> necessario o casting de int para str
        # a extenção .txt permite somente dados em strings.
        salvar.write(f'{str(ct)}\n')
        ct += 1

","
            -1
        ","['\npython', 'array', 'lógica\n']"
534329,Uso de Break no Python,"
Eu fiz esse código que vai passando de fase, porém, quando se erra eu usei o Break para finalizar o jogo... mas ele apresenta a mensagem de Game Over e mesmo assim continua para a próxima fase... alguém pode me ajudar?
Segue o código:
#menu
hotel = [['*', '*', '_', 'G'], ['R','_', '*', '*']]

print('Seja bem vindo ao hotel dos animais!')
nome = input('Qual o seu nome, para que possamos iniciar? ')

print('{}, vamos iniciar nossa jogatina!...:'.format(nome))
sleep(5)
regras= [['Regras: O rato não pode ficar ao lado do gato.'],['O cão não pode ficar ao lado do osso.'], ['O gato não pode ficar ao lado do cão.'], ['O queijo não pode ficar ao lado do gato.']]
for linha in regras:
  print(linha)
sleep(5)

#fase1
print('Na fase 1 você deve alocar o Rato e o Gato na seguinte matriz que representa os quartos')

sleep(5)

for linha in hotel:
  print(linha)

sleep(5)

posRato = int(input(""Qual a posição que o Rato deve ficar? ""))
posGato = int(input('Qual a posição que o gato deve ficar? '))
while True:
  if posRato == 5 and posGato == 4:
    print('Parabéns {}, você segue para a fase 2!'.format(nome))
  else:
    print('Ops {}, infelizmente você perdeu!'.format(nome))
    break

","
Parece que o trecho que cita na dúvida não está descrito no código, mas o break irá parar o loop do while, se o restante do código estiver com a mesma indentação não será executado, mas caso esteja fora do while irá ser executado mesmo com o break, pois ele está parando somente o loop.
","
            0
        ","
Você não colocou o break na condição correta que você quer que ele pare o programa, por exemplo se você colocar o break depois do print do if, ele vai fazer com que o programa pare sem executar o else.
","
            0
        ","['\npython', 'break\n']"
534320,Como posso ignorar KeyErrors no Python ao utilizar o tweepy,"
Estou buscando coletar alguns dados do Twitter mediante tweepy, mas estou tendo problemas ao tentar transformar a minha lista em um dataframe, pois está sempre dando um KeyError. Eu imagino que o problema seja a inexistência de um dos elementos, mas então gostaria de substituir esse elemento por algum valor ou apenas deixar nulo.
Primeiro estou baixando os dados do twitter seguindo este código:
industry_tweets = []
for response in tweepy.Paginator(client.search_all_tweets, 
                                 query = search_query,
                                 user_fields = ['username', 'public_metrics', 'description', 'location'],
                                 tweet_fields = ['created_at', 'geo', 'public_metrics', 'text'],
                                 expansions = 'author_id',
                                 start_time = '2011-01-01T00:00:00Z',
                                 max_results=500):
    time.sleep(1)
    industry_tweets.append(response)

E depois estou fazendo esse loop para transformar o dicionário em um dataframe:
result = []
user_dict = {}

for response in industry_tweets:
    for user in response.includes['users']:
        user_dict[user.id] = {'username': user.username, 
                              'followers': user.public_metrics['followers_count'],
                              'tweets': user.public_metrics['tweet_count'],
                              'description': user.description,
                              'location': user.location
                             }
    for tweet in response.data:
        author_info = user_dict[tweet.author_id]
        result.append({'author_id': tweet.author_id, 
                       'username': author_info['username'],
                       'author_followers': author_info['followers'],
                       'author_tweets': author_info['tweets'],
                       'author_description': author_info['description'],
                       'author_location': author_info['location'],
                       'text': tweet.text,
                       'created_at': tweet.created_at,
                       'retweets': tweet.public_metrics['retweet_count'],
                       'replies': tweet.public_metrics['reply_count'],
                       'likes': tweet.public_metrics['like_count'],
                       'quote_count': tweet.public_metrics['quote_count']
                      })
df = pd.DataFrame(result)

O KeyError está sempre sendo em 'users'.
",,,,,['\npython\n']
534182,Python - Automatizar o preenchimento do nome das colunas para diversos relatórios diferentes,"
estou criando um programa para realizar a leitura de um arquivo txt que contém mais ou menos a seguinte estrutura:

|R_0|006|0|||01092021|30092021|EMPRESA EXEMPLO LTDA|00000000000000|XX|0000000||00|0|
|R_1|0|
|R_10|0|0|0||
|R_11|0|0|0|0|0|
|R_40|00000000000000|EMPRESA EXEMPLO LTDA|00000000000000|XX||0000000|||
|R_50|00000000000001|EMPRESA EXEMPLO 2 LTDA|1058|00000000000000|||0000000||XXXXXXXX|0||XXXXXX|


Esse arquivo ao todo tem aproximadamente 250 ""registros"" diferentes e cada campo está separado por meio de pipes ""|"", onde o nome de cada registro está no primeiro campo de cada linha, e cada registro possui uma quantidade variada de colunas.
Nesse caso, eu preciso de ajuda com os seguintes pontos:

Está correto o entendimento em declarar o nome das colunas de cada registro em listas individuais para cada registro? Se não, existe alguma outra forma mais eficaz?

Por meio da variável reg, eu gostaria de acessar o nome das colunas correspondentes a esse registro e iniciar um novo loop para extrair o valor dos campos de cada coluna.


A ideia é evitar utilizar o IF diversas vezes para cada registro e automatizar esse código.
O meu código possui mais ou menos a seguinte estrutura, considerando a extração dos campos apenas do primeiro registro (R_10):
import pandas as pd

nome_coluna = ['REG', 'COD_VER', 'COD_FIN', 'DT_INI', 'DT_FIN', 'NOME', 'CNPJ', 'CPF', 'UF', 'IE', 'COD_MUN', 'IM', 'SUFRAMA', 'IND_PERFIL', 'IND_ATIV']

data_registro = []

file = open('Arquivo exemplo.txt', 'r', encoding='Latin-1')

for a in file:
    data = a.split(""|"")
    reg = data[1]

    if reg == 'R_0':
        data_reg_temp = {}
            
        for b, c in enumerate(nome_coluna):
            d = b+1
            var_campo = data[d]
            data_reg_temp[c] = var_campo

        data_registro.append(data_reg_temp)
                 
    else: 
        if reg == ""9999"":   
            break
        else:
            pass

df = pd.DataFrame(data_registro)

print(df)

","
Opa tudo bem ?
então respondendo suas perguntas

Está correto o entendimento em declarar o nome das colunas de cada registro em listas individuais para cada registro? Se não, existe alguma outra forma mais eficaz?


Está correto desde que o a lista seja simétrica a quantidade de
colunas ou menor, caso seu arquivo possua mais quebras do que o
tamanho da lista de colunas você terá  exceção de indexOutBound


Por meio da variável reg, eu gostaria de acessar o nome das colunas correspondentes a esse registro e iniciar um novo loop para extrair o valor dos campos de cada coluna.


é possível fazer isso utilizando o metodo get do dicionario para
extrair a coluna que você deseja evitando o uso de ifs amenos que
tenha uma regra muito especifica para algum registro ai será
necessario. Ou como você está utilizando Pandas no final é possivel
utilizar o meotodo Loc e iloc para pegar um registro e trabalhar com o
seu dado

Abaixo tem um exemplo de código utilizando as informações que você disponiblizou
import pandas as pd

nome_coluna = ['REG', 'COD_VER', 'COD_FIN', 'DT_INI', 'DT_FIN', 'NOME', 'CNPJ', 'CPF', 'UF', 'IE', 'COD_MUN', 'IM', 'SUFRAMA', 'IND_PERFIL', 'IND_ATIV']
data_registro = {}
file =  [
""|R_0|006|0|||01092021|30092021|EMPRESA EXEMPLO LTDA|00000000000000|XX|0000000||00|0|"",
""|R_1|0|"",
""|R_10|0|0|0||"",
""|R_11|0|0|0|0|0|"",
""|R_40|00000000000000|EMPRESA EXEMPLO LTDA|00000000000000|XX||0000000|||"",
""|R_50|00000000000001|EMPRESA EXEMPLO 2 LTDA|1058|00000000000000|||0000000||XXXXXXXX|0||XXXXXX|"",
]
REG_SEARCH = 'R_0'
for a in file:
    data = a.split(""|"")
    data = data[1:]
    reg = data[1]

    if reg == ""9999"":
      break

    data_reg_temp = {}
    for b, c in enumerate(data):
        if b > len(nome_coluna)-1:
          print(""dataValue: "",c)
          break
        var_campo = data[b]
        data_reg_temp[nome_coluna[b].strip()] = var_campo.strip()
    
    #Utilizando o dict.get() para pegar a informação do dicionario
    data_registro[reg]= data_reg_temp
    for key,value in data_registro.get(reg,{}).items():
      print(key,value)
      #OUTPUT
      #REG R_0
      #COD_VER 006
      #COD_FIN 0
      #DT_INI 
      #DT_FIN 
      #NOME 01092021
      #CNPJ 30092021
      #CPF EMPRESA EXEMPLO LTDA
      #UF 00000000000000
      #IE XX
      #COD_MUN 0000000

df = pd.DataFrame([data_registro[d] for d in data_registro])
print(df.head())
print(df.loc[df['REG'] == REG_SEARCH].head())

#OUTPUT
#     REG         COD_VER               COD_FIN  ... SUFRAMA IND_PERFIL IND_ATIV
# 0   R_0             006                     0  ...      00          0         
# 1   R_1               0                        ...     NaN        NaN      NaN
# 2  R_10               0                     0  ...     NaN        NaN      NaN
# 3  R_11               0                     0  ...     NaN        NaN      NaN
# 4  R_40  00000000000000  EMPRESA EXEMPLO LTDA  ...     NaN        NaN      NaN
# 
# [5 rows x 15 columns]
#    REG COD_VER COD_FIN DT_INI DT_FIN  ...  COD_MUN IM SUFRAMA IND_PERFIL IND_ATIV
# 0  R_0     006       0                ...  0000000         00          0         
# 
# [1 rows x 15 columns]


","
            1
        ",,,['\npython\n']
534173,Plotar um groupby com duas colunas,"
Boa noite, estou tentando plotar em um gráfico um groupby que fiz de uma tabela.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

link do arquivo: https://drive.google.com/file/d/1zzqEUdUL3pqMbcCLi44JHNj5utU7RjPL/view
files.upload()
clientes = pd.read_csv('Ecommerce_Customers.csv')

time_money = clientes.round({'Time on Website': 0, 'Yearly Amount Spent': 0}).groupby([""Time on Website"", ""Yearly Amount Spent""])[[]].sum()
time_money

o que me gera a seguinte saída.

Meu problema é, não estou achando um jeito de plotar essa gráfico, já pesquisei bastante, achei diversas formas de plotar, mas nenhuma que se encaixe no meu problema.
Desde já agradeço quem tentou ajudar
","
Opa, tudo bom?
O problema aqui é que você está resumindo o seu dataframe a apenas 2 índices, sem colunas, o que atrapalha bastante na hora de distribuir os valores.
Tem várias formas de trabalhar o dataframe de modo a viabilizar a plotagem do seu gráfico, mas eu optei por uma solução que apenas adapta o código que você já tinha feito.
time_money = clientes.round({'Time on Website': 0, 'Yearly Amount Spent': 0}).groupby(""Time on Website"").sum()
time_money


Agora que você já tem seu dataframe agrupado pelo tempo gasto no website, como index, basta plotar a coluna que você deseja:
plt.figure(figsize=(16,8))
plt.plot(time_money.index, time_money['Yearly Amount Spent'])
plt.xlabel('Time on Website')
plt.ylabel('Yearly ammount Spent');


Espero que tenha ajudado, boa sorte com o seu problema!
","
            0
        ",,,"['\npython', 'pandas', 'numpy', 'matplotlib\n']"
534119,Gostaria de saber qual a função do s [i] == s [f] no código,"
Estou estudando e me deparei com esse código, gostaria de saber pra que serve s[i] == s[f]
s = input(""Digite o número a verificar, sem espaços:"")
i = 0
f = len(s)-1  # posição do último caracter da string
while f > i and s[i] == s[f]:
    f = f - 1
    i = i + 1
if s[i] == s[f]:
    print(f""{s} é palíndromo"")
else:
    print(f""{s} não é palíndromo"")

","
Considerando que a entrada seja o valor 123454321, você terá:
Posição      0  1  2  3  4  5  6  7  8
s        =   1  2  3  4  5  4  3  2  1
             ↑                       ↑
             i                       f

O seu laço de repetição determina que enquanto f for maior do que i e que o caractere na posição i seja o mesmo que da posição f o valor de f decrementará em 1 enquanto o valor de i incrementará em 1.
Primeira iteração:
Posição      0  1  2  3  4  5  6  7  8
s        =   1  2  3  4  5  4  3  2  1
                ↑                 ↑
                i                 f

Segunda iteração:
Posição      0  1  2  3  4  5  6  7  8
s        =   1  2  3  4  5  4  3  2  1
                   ↑           ↑
                   i           f

Assim em diante, até que uma das condições seja falsa: ou f é menor ou igual a i ou os caracteres em ambas as posições são diferentes.
","
            1
        ",,,['\npython\n']
534090,Como colocar loop apenas em uma parte do comando? E que fosse possível sair dela,"
Oi, estou criando um comando de um inimigo que é um esqueleto com uma besta, ele possui dois ataques mas vou mostrar apenas um ataque que é o tiro de besta dele.
Estou utilizando o python para programar, e esse é um dos meus primeiros comandos que faço, felizmente não tem um erro no código, mas queria fazer uma coisa que não consigo fazer.
Ele tem atributos assim como a chance de causar crítico, eu controlo eles manualmente pois eu serei o mestre e irei controlar os inimigos para derrotar os jogadores.
Nessa parte do comando é possível ver que há uma pergunta sobre marcação, pois no meu rpg ele causa dano extra contra inimigos marcados, caso eu coloque 3 ou outros números que não encaixam, o código recebe um erro, queria saber algum método de ao responder colocando um número que não encaixa na pergunta (1 e 2) queria que ele repetisse a pergunta até escolher um desses dois números.
Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))
print(""O esqueleto acertou"")
    print()
    time.sleep(1)
    Dano = random.randint(4, 8)
    print(""O dano foi de:"",Dano)
    Resistencia = int(input(""Quantos pontos o jogador diminui o dano?""))
    Dano_Final = Dano - Resistencia
    print(""O dano total foi de:"")
    print(Dano_Final)
    Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))

    if Marcação == 1:
        Marcado = Dano_Final / 100
        Marcado1 = Marcado * 25
        Marcado2 = Marcado1 + Dano_Final
        print()
        print(""O dano total foi de:"")
        print(Marcado2)
        CRT1 = random.randint(1, 100)
        if CRT1 <= Crítico1:
            time.sleep(1)
            print(""CRÍTICO!"")
            Dano_Crítico = Marcado2 * 2
            print()
            time.sleep(1)
            print(""O dano do crítico foi de:"")
            print(Dano_Crítico)


        elif Marcação == 2:
            CRT1 = random.randint(1, 100)
            if CRT1 <= Crítico1:
                time.sleep(1)
                print(""CRÍTICO!"")
                Dano_Crítico = Dano_Final * 2
                print()
                time.sleep(1)
                print(""O dano do crítico foi de:"")
                print(Dano_Crítico)

","
Você pode aplicar o loop while antes do if e após a declaração da variável marcação:
Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))

while Marcação >= 3:
    Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))

Uma outra opção seria declarar uma lista com as opções aceitas, da seguinte forma:
Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))

lista = [1, 2]

while Marcação not in lista:
    Marcação = int(input(""O inimigo está marcado? (1)Sim / (2)Não""))

","
            3
        ","
A partir do Python 3.8 você pode criar um loop que faça o uso do operador de atribuição walrus de maneira possa filtrar valores inválidos digitados pelo usuário.
O algoritmo é simples,

dentro de um laço while
crie uma expressão de atribuição para entrada do usuário, ainda sem  converter para inteiro ou outro tipo.
verifique se entrada do está ou não dentro de uma lista contendo a possível faixa de valores:

caso sim, a entrada esteja dentro da possível abandona o loop.
caso não, é realizado algum código de contenção e laço é reiterado.


fora do laço while então faça conversão de tipos para a entrada do usuário.

Marcação:= input(""O inimigo está marcado? (1)Sim / (2)Não: "")

while (Marcação:= input(""O inimigo está marcado? (1)Sim / (2)Não: "")) not in [""1"",""2""]: 
  print(""Valor inválido"")
Marcação = int(Marcação)
print(f""Opção digitada {Marcação}"")

Resultando:
O inimigo está marcado? (1)Sim / (2)Não: 12
Valor inválido
O inimigo está marcado? (1)Sim / (2)Não: 3
Valor inválido
O inimigo está marcado? (1)Sim / (2)Não: A
Valor inválido
O inimigo está marcado? (1)Sim / (2)Não: 👍👍👍
Valor inválido
O inimigo está marcado? (1)Sim / (2)Não: 1
Opção digitada 1

Teste o exemplo no Repl.it
Para versões de Python 3 anteriores a versão 3.8 que não contam com o operador de atribuição walrus o algoritmo sofre umas mudanças:

abra um loop sem condição de parada, while True:
dentro do laço, atribua a entrada do usuário a uma variável, converter para inteiro ou outro tipo.
verifique se entrada do está ou não dentro de uma lista contendo a possível faixa de valores:

caso sim, a entrada esteja dentro da possível abandona o loop.
caso não, é realizado algum código de contenção e laço é reiterado.


fora do laço while então faça conversão de tipos para a entrada do usuário.

while True: 
   Marcação = input(""O inimigo está marcado? (1)Sim / (2)Não: "")
   if Marcação in [""1"", ""2""]: break
   print(""Valor inválido"")
Marcação = int(Marcação)
print(""Opção digitada "", Marcação)

Teste o exemplo no Repl.it
","
            1
        ","['\npython', 'loop\n']"
534014,Conversão de Celsius e Farenheit,"
Criei uma função para converter graus celsius em farenheit. No entanto, não consigo execultá-la ao atribuir valores, como por exemplo, transformar 30°c em 86°F. Não retorna nenhum valor, já tentei de tudo e nada acontece. Gostaria de encarecidamente pedir ajuda, pois ainda sou iniciante em python.
# crie sua função conveterCelsius (x)
def celsius_fahrenheit (): 
  c = float(input ('Digite a temperatura em °c'))
  f = float ((9*c)/5) + 32 

  return ('A temperatura em fahrenheit: {0}°f'.format (f)) 

Quando tento atribuir valores nada acontece:
# Testando valores de c
def celsius_fahrenheit (): 
  c = (30)
  f = ((9*c)/5) + 32
  return ('A temperatura em fahrenheit: {0}°f'.format (f))

","
Maria Clara, acrescentei no seu código uma função print no return da sua função. Verifique no seu código que se a indentação do seu código está correta também. Segue o código para comparação:
def celsius_fahrenheit():
   c = float(input('Digite a temperatura em °c'))
   f = float((9 * c) / 5) + 32

   return print('A temperatura em fahrenheit: {0}°F'.format(f))

celsius_fahrenheit()

","
            0
        ",,,['\npython\n']
533924,Como preencher uma LinkedList (Listas encadeadas) no Python através das entradas do usuário (input)?,"
Estou tentando aplicar o conceito de listas encadeadas no Python de uma forma que o usuário digita o valor de entrada e assim, é criado em memória o conteúdo sequencialmente. Enquanto o usuário não sair do laço ele poderá preencher um valor de cada vez que irá compor a lista.
class No:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None

    def mostra_no(self):
        print(self.valor)

class ListaEncadeada:
    def __init__(self):
        self.primeiro = None

    def insere_inicio(self, valor):
        novo = No(valor)
        novo.proximo = self.primeiro
        self.primeiro = novo

    def mostrar(self):
        atual = self.primeiro

        while atual != None:
            atual.mostra_no()
            atual = atual.proximo      
   

entrada = str(input('Digite o nome do voo de Origem : '))
lista = ListaEncadeada()
lista.insere_inicio(entrada)
lista.mostrar()

Fiz este exemplo no google Colab e até este ponto deu certo, tentei iterar com um while mas como se trata de um objeto é impossível a iteração. Procurei em exemplos no youtube mas não encontrei nada que utilizasse uma iteração. como resolver ?
","
Estou postando aqui outro exemplo parecido com o do enunciado, o que eu procurava era uma forma de percorrer a lista. Como estou fazendo este estudo de forma autodidata, eu tive que rever o assunto, e neste caso, não teria como iterar algo que está em um endereço de memória. Compreendi que teria que iniciar com uma referência que no exemplo abaixo é descrito como cabeça da lista.
class No:
def __init__(self, valor):
    self.valor = valor
    self.proximo = None 

def mostra_no(self):
    print(self.valor)

    
class listaEncadeada:
def __init__(self):
    self.primeiro = None

def insere_inicio(self, valor):
    novo = No(valor)
    novo.proximo = self.primeiro
    self.primeiro = novo  

def mostrar(self):
    if self.primeiro == None:
        print('Não existem voos cadastrados')
        return None

    atual = self.primeiro
    while atual != None:
        atual.mostra_no()
        atual = atual.proximo

def pesquisa(self, valor):
    if self.primeiro == None:
        print('Não existem voos cadastrados')
        return None

    atual = self.primeiro
    while atual.valor != valor:
        if atual.proximo == None:
            print('Voo não encontrado!')
            break
        else:
            atual = atual.proximo    
    return atual  

lista = listaEncadeada()  

des = int(input('Digite o número de destino da viagem : '))
lista.insere_inicio(des)

pto = 1
while pto != 0:
pto = int(input('Digite um ponto de parada ou zero(0) para informar a origem : '))
if pto != 0:
    lista.insere_inicio(pto)

ori = int(input('Digite a origem do embarque : '))
lista.insere_inicio(ori)

print('')
print('Itinerário da Origem ao Destino da viagem : ')
lista.mostrar()


pesquisa = str(input('Deseja pesquisar por número de voo ?(s/n) : '))
while pesquisa.upper() == 'S':
    aux = int(input('Digite o número do voo : ')) 
    consultar = lista.pesquisa(aux)
    print('Voo nº ', consultar.valor, ' encontrado!')
    pesquisa = str(input('Deseja pesquisar por número de voo ?(s/n) : '))
else:
    print('FIM DA EXECUÇÃO DO PROGRAMA !')

Minha dificuldade era: como preencher esta lista encadeada através das entradas que o usuário faria e recuperar esses dados para mostrar na tela. Portanto, a minha dúvida foi resolvida.
","
            -1
        ",,,"['\npython', 'lista', 'estrutura-de-dados\n']"
533854,Como colocar os valores no topo da barra ou dentro da barra?,"
df_x.groupby('country')['age'].median().sort_values(ascending=False).plot.bar(figsize = (16,8), color ='grey')
plt.title('Median of age players per country', pad=15, fontsize=20)
plt.ylabel('Age', fontsize=14)
plt.xlabel('Country', fontsize =14)
plt.show()`


","
Você pode usar o método text
Veja o exemplo abaixo
Carregando bibliotecas
import os
import numpy as np
import matplotlib.pyplot as plt

Definindo gráfico
x = [u'col1', u'col2', u'col3']
y = [10, 17, 15]
fig, ax = plt.subplots()
ax.bar(x, y, width, color=""grey"")
plt.title('Exemplo')
plt.xlabel('x')
plt.ylabel('y')

Colocando valores nas barras
for i, v in enumerate(y):
    ax.text(i-.25, 
            v/y[i], 
            y[i], 
            fontsize=18, 
            color=""black"")

Apresentando / salvando imagem
#plt.show()
plt.savefig(os.path.join('imagem.png'), dpi=300, format='png', bbox_inches='tight')


","
            -1
        ",,,"['\npython', 'pandas', 'plot\n']"
533810,função map() com .format,"
estou começando a programação em python e fiquei em dúvida com uma expressão que me deparei.
ao construir um dataframe a seguinte função foi utilizada para um dos valores atribuídos : summary_calculations[""Preço Médio""].map(""${:,.2f}"".format)
gostaria de entender essa parte: ${:,.2f}"".format
segue código do dataframe inteiro :
 summary_calculations = summary_calculations.round(2)
summary_calculations [""Preço Médio""] = summary_calculations[""Preço Médio""].map(""${:,.2f}"".format)
summary_calculations [""Total de Vendas""] = summary_calculations[""Total de Vendas""].map(""${:,.2f}"".format)
summary_calculations = summary_calculations.loc[:, [""Número de Itens Únicos"", ""Preço Médio"", ""Número de Compras"", ""Total de Vendas""]]

Desde já, agradeço
","
o ""${;.2f}"".format está basicamente formatando o valor do seu dataframe
para o padrao : $valor.decimal
Pegando o exemplo abaixo eu estou formatando todos os valores  com a string customizada adicionando uma frase antes do seu valor original como alterando um campo de float para string com o formato personalizado.
vale da  uma olhada na documentação de cada metodo para ver oque é possível fazer

Documentação .format
Documentação .map Pandas


import pandas as pd

s = pd.Series(['cat', 'dog', None, 'rabbit'])
s.map('I am a {}'.format)

#OUTPUT
#0       I am a cat
#1       I am a dog
#2      I am a None
#3    I am a rabbit
#dtype: object

metricas =pd.Series([10.2,20.1])
metricas.map(""${:.2f}"".format)
#OUTPUT
#0    $10.20
#1    $20.10
#dtype: object



","
            0
        ",,,"['\npython', 'funções', 'map\n']"
533778,Problema com código simples em Python [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Laço de repetição - Python

                                (2 respostas)
                            

Fechada há 5 meses.



nome = input('Nome da criança:')
id = int(input('Idade:'))
if (id <= 5):
  print('O aluno {} tem {} anos e está no Ensino Infantil'.format(nome, id))
elif (id >= 6) and (id <= 10):
  print('O aluno {} tem {} anos e está no Ensino Fundamental I'.format(nome, id))
elif (id >= 11) and (id <= 14):
  print('O aluno {} tem {} anos e está no Ensino Fundamental II'.format(nome, id))
elif (id > 15):
  print('O aluno {} tem {} anos e está no Ensino Médio'.format(nome, id))

int(input('Deseja continuar?  0 - Não      1 - Sim'))
Sim = 1
Nao = 0
if 0:
 print('Encerrando o programa')

Estou com um problema pra finalizar esse código, pode ser um erro simples porém estou começando e estou quebrando a cabeça pra resolver.
Preciso que ele exiba na tela a mensagem de ''Encerrando o programa'' caso a pessoa escolha, porém quando dou o comando pra encerrar por exemplo, ele não exibe o print na tela e simplesmente finaliza. Preciso também que caso a pessoal escolha continuar, ele volte ao inicio perguntando o nome da criança.
Agradeço desde já.
","
Lucas, você precisa de algo que repita caso o usuário queria continuar, para isso podemos usar varias formas, uma delas é usar o comando while, que repete algo até que sua condição não seja mais satisfeita.
No exemplo abaixo, e usando como base o seu código, criei a variável continuar atribuindo inicialmente o valor de 1, dessa forma garantimos que vai entrar a primeira vez na repetição, até porque o ""sim"" seria o valor ""1"".
Abaixo dos seus condicionais, atribui o valor da resposta a própria variável, que após última linha de execução do bloco do while, vai automaticamente sair da repetição.
continuar = 1
while continuar==1:
    nome = input('Nome da criança:')
    id = int(input('Idade:'))
    if (id <= 5):
      print('O aluno {} tem {} anos e está no Ensino Infantil'.format(nome, id))
    elif (id >= 6) and (id <= 10):
      print('O aluno {} tem {} anos e está no Ensino Fundamental I'.format(nome, id))
    elif (id >= 11) and (id <= 14):
      print('O aluno {} tem {} anos e está no Ensino Fundamental II'.format(nome, id))
    elif (id > 15):
      print('O aluno {} tem {} anos e está no Ensino Médio'.format(nome, id))
    
    continuar = int(input('Deseja continuar?  0 - Não      1 - Sim'))
    
    if continuar==0:
      print('Encerrando o programa')

","
            -2
        ",,,['\npython\n']
533739,ComoContar Elementos Repetidos em uma Imagem com Phyton,"
Salve turma, gostaria de saber se é possível contar a quantidade e elementos repetidos em uma imagem.
Exemplo: Em uma imagem tem 10 cadeados fechados e 5 cadeados abertos. o script precisa retornar a quantidade de cadeados aberto nessa imagem.
Eu tentei usar o pyautogui para comparar a uma imagem que recortei do cadeado, com as demais na imagem original, consigo localizar apenas um cadeado, porem os demais não localiza.
Segue o código:
import pyautogui
from pyscreeze import locateCenterOnScreen

cont = 0

while True:
    cadeado = pyautogui.locateCenterOnScreen('cadeado_aberto.png')

    if cadeado is None:
        print('Nenhum cadeado aberto localizado')
    else:
        pyautogui.moveTo(cadeado)
        cont += cont
        print(cont)

","
Você está somando seu contador com ele mesmo, ou seja, cont += cont é a mesma coisa que 0 + 0.
O correto é cont +=1
Ele te retorna 1, pois na primeira iteração ele acaba conseguindo fazer e depois não tem mais contagem.
","
            0
        ",,,['\npython\n']
533734,"Erro ao tentar criar insert com python (TypeError: can only concatenate str (not ""float"") to str)","
Estou tentando criar um arquivo de insert para o Sql com panda mas ao tentar este  código abaixo
ocorre o seguinte erro  TypeError: can only concatenate str (not ""float"") to str
  with open (""output.txt"", ""w""):
        for index, row in df.iterrows():
            print('INSERT INTO ' + TABLE_NAME + '(\'COD_TXT\' , \'DES_TXT\' ,\'DES_OBS_TXT\') VALUES (',
                  row['COD_TXT'],',\''+ row['DES_TXT'],',\''+row['DES_OBS_TXT']+'\');', file=open(""output.txt"", ""a""))




TypeError: can only concatenate str (not ""float"") to str

","
Um dos valores deve ser float em vez de string. É preciso usar a função str() para converter. Por exemplo:
str(row['COD_TXT'])

","
            0
        ",,,"['\npython', 'pandas\n']"
533714,Possuo um dataframe que preciso selecionar a coluna CHUVA e identificar o maior valor e o menor valor e recebo erro de KeyError: 'chuva',"
import pandas as pd

# Data Analisada

    data = int(input('Qual data será analisada? '))

# Coletando df

    df = pd.read_excel('teste2.xlsx', index_col=[0], dtype={'CHUVA': str}).reset_index()

# Identificando Maior chuva

    dia_max = df.loc[(df['DIA'] == data)]
    
    chuva_max = dia_max.loc[dia_max['CHUVA'].idxmax()]
    
    chuva_max_maior = chuva_max.loc['CHUVA'] 
    
    chuva_max_maior_mp = chuva_max.loc['MUNICIPIO']

    print(dia_max)
    print('-----------------------teste-------------------')
    print(chuva_max)
    print(f'{chuva_max_maior}')
    print(f'{chuva_max_maior_mp}')

Dados utilizados:




DIA
MIN
MAX
CHUVA
MUNICIPIO




31
22
37
3,5
Alto Parnaíba


31
22
35
1,2
Bacabal


31
23
35
0,5
Caxias


31
23
37
3,4
Imperatriz


31
23
36
3,5
Grajaú


31
23
35
3,5
S. Benedito do Rio Preto


31
23
35
1,2
Vargem Grande


31
23
32
0
Turiaçú


31
24
37
3,9
Balsas


31
24
35
0
Pedreiras


31
24
35
1,8
Codó


31
24
35
0
Santa Inês


31
24
34
0
Pinheiro


31
24
34
1,9
Carolina


31
24
30
0,5
São Luís


1
22
36
2,9
Balsas


1
23
34
5,2
Grajaú


1
23
33
2,5
Carolina


1
23
37
5
Alto Parnaíba


1
24
34
1,8
Bacabal


1
24
35
0,5
Pedreiras


1
24
35
2,8
Caxias


1
24
35
2,5
Codó


1
24
33
0,5
Pinheiro


1
24
38
4,2
Imperatriz


1
24
35
2,3
Santa Inês


1
24
31
3,1
Turiaçú


1
25
35
1,8
S. Benedito do Rio Preto


1
25
32
1,2
São Luís


1
25
34
2,9
Vargem Grande


2
24
38
3,9
Alto Parnaíba


2
24
37
2,7
Imperatriz


2
24
36
0,9
Caxias


2
24
36
0,5
Vargem Grande


2
23
36
1,9
Balsas


2
24
35
0,6
S. Benedito do Rio Preto


2
24
35
1,2
Santa Inês


2
24
34
1,2
Pedreiras


2
24
34
0,3
Codó


2
24
34
1,5
Carolina


2
23
33
0
Bacabal


2
24
33
2,9
Grajaú


2
24
33
2,5
Pinheiro


2
25
33
0,8
Turiaçú


2
25
32
1
São Luís


3
22
33
3,6
Bacabal


3
22
31
0,9
Grajaú


3
22
34
2
Pedreiras


3
23
33
7,9
Caxias


3
23
34
0,2
Codó


3
24
35
0,4
S. Benedito do Rio Preto


3
26
30
0,4
São Luís


3
24
34
0,2
Vargem Grande


3
23
34
0
Pinheiro


3
23
32
0,8
Imperatriz


3
24
34
1,1
Santa Inês


3
25
31
0
Turiaçú


3
22
32
2
Balsas


3
23
33
4,2
Carolina


3
22
32
15
Alto Parnaíba


4
26
30
0,8
São Luís


4
25
31
2
Turiaçú


4
24
35
0
Codó


4
24
36
0
S. Benedito do Rio Preto


4
24
35
0
Vargem Grande


4
24
34
0
Pinheiro


4
24
34
0,6
Santa Inês


4
23
34
0
Bacabal


4
23
34
0
Pedreiras


4
23
34
0
Caxias


4
23
32
2,2
Imperatriz


4
22
32
3,8
Grajaú


4
22
31
3
Balsas


4
22
30
9
Carolina


4
21
32
4,7
Alto Parnaíba


5
23
34
0
Bacabal


5
22
33
0,4
Grajaú


5
23
34
0
Pedreiras


5
23
33
0,6
Caxias


5
23
35
0
Codó


5
24
35
1
S. Benedito do Rio Preto


5
26
31
2,4
São Luís


5
24
35
0,5
Vargem Grande


5
23
35
1
Pinheiro


5
23
33
0
Imperatriz


5
24
35
0,3
Santa Inês


5
25
31
1,1
Turiaçú


5
22
32
3,4
Balsas


5
23
33
2
Carolina


5
23
33
9,2
Alto Parnaíba


6
24
34
2,7
Bacabal


6
22
31
16
Grajaú


6
24
34
2
Pedreiras


6
24
34
0,8
Caxias


6
24
35
5
Codó


6
24
37
0
S. Benedito do Rio Preto


6
26
30
0,8
São Luís


6
24
36
0
Vargem Grande


6
24
35
0,2
Pinheiro


6
23
31
24
Imperatriz


6
24
34
3
Santa Inês


6
25
32
1,1
Turiaçú


6
23
29
15
Balsas


6
23
29
6,7
Carolina


6
23
31
17
Alto Parnaíba




Estes dados eu não consegui colocar da melhor forma porém se alguém quiser posso enviar por email ou de outra maneira.
","
Aqui eu tive o seguinte resultado abaixo. Mas tive que alterar o dtype de STR para FLOAT dtype={'CHUVA': float}
A sua coluna chuva não é um número inteiro, portanto mesmo em texto ele não consegue fazer a leitura correta para determinar qual será o maior/menor e etc...
Qual data será analisada? 5
DIA  MIN  MAX  CHUVA                 MUNICIPIO
75    5   23   34    0.0                   Bacabal
76    5   22   33    0.4                    Grajaú
77    5   23   34    0.0                 Pedreiras
78    5   23   33    0.6                    Caxias
79    5   23   35    0.0                      Codó
80    5   24   35    1.0  S. Benedito do Rio Preto
81    5   26   31    2.4                  São Luís
82    5   24   35    0.5             Vargem Grande
83    5   23   35    1.0                  Pinheiro
84    5   23   33    0.0                Imperatriz
85    5   24   35    0.3                Santa Inês
86    5   25   31    1.1                   Turiaçú
87    5   22   32    3.4                    Balsas
88    5   23   33    2.0                  Carolina
89    5   23   33    9.2             Alto Parnaíba
-----------------------teste-------------------
DIA                      5
MIN                     23
MAX                     33
CHUVA                  9.2
MUNICIPIO    Alto Parnaíba
Name: 89, dtype: object
9.2
Alto Parnaíba
","
            -1
        ",,,"['\npython', 'banco-de-dados', 'orientação-a-objetos', 'pandas\n']"
533683,Como fazer update de vários registros com valores diferentes em lote com Pymongo,"
Imaginem que eu tenho a seguinte tabela Clientes no MongoDb com as informações abaixo:
[{
  ""idCliente"": 1233
  ""idPlataforma"": 112,
  ""nmQtdeVisitas"": 1,
  ""dtPrVisita"": ""2021-11-10 13:00:00"",
}]
[{
  ""idCliente"": 2344
  ""idPlataforma"": 321,
  ""nmQtdeVisitas"": 1,
  ""dtPrVisita"": ""2021-11-10 13:31:27"",
}]

Por sua vez, eu acabo recebendo uma atualização desses dados em lote json:
[{""idCliente"":1233,""idPlataforma"":112,""nmVisitas"":3,""dtVisita"":""2021-11-11 15:32:21""},
{""idCliente"":2344,""idPlataforma"":321,""nmVisitas"":2,""dtVisita"":""2021-11-10 20:11:07""}]

E preciso atualizar os registros no meu banco utilizando como condição no filtro os campos idCliente e idPlataforma e passando os novos valores de acordo com os filtros acima.
Ficando assim no MongoDB:
[{
  ""idCliente"": 1233
  ""idPlataforma"": 112,
  ""nmQtdeVisitas"": 3,
  ""dtPrVisita"": ""2021-11-11 15:32:21"",
}]
[{
  ""idCliente"": 2344
  ""idPlataforma"": 321,
  ""nmQtdeVisitas"": 2,
  ""dtPrVisita"": ""2021-11-10 20:11:07"",
}]

Em linhas gerais, se fosse ser feito uma query no SQL, ficaria assim:
UPDATE Clientes SET nmVisitas = 3, dtVisita = '2021-11-11 15:21:21' WHERE idCliente=1233 and idPltaforma=112
UPDATE Clientes SET nmVisitas = 2, dtVisita = '2021-11-10 20:11:07' WHERE idCliente=2344 and idPltaforma=321

Todavia gostaria de saber se é possível fazer UPDATE em lotes, utilizando update_many() do Pymongo atualizando os campos com os novos valores de acordo com os filtros.
","
Acredito que utilizar um Bulk Write seja a melhor opção para o seu caso. Ele permite que você escreva diversas operações e execute elas em uma única chamada.
O problema de usar um update_many, é que o valor do filtro deve ser igual e esse não é seu caso.
from pymongo import UpdateOne
db.test.bulk_write([
    UpdateOne(
      { 'idCliente': 1233, 'idPlataforma': 112 },
      { '$set': { 'nmVisitas ': 3, 'dtVisita' = '2021-11-11 15:21:21' } }
    ),
    UpdateOne(
      { 'idCliente': 2344, 'idPlataforma': 321 },
      { '$set': { 'nmVisitas ': 2, 'dtVisita' = '2021-11-10 20:11:07' } }
    ),
])

","
            4
        ",,,"['\npython', 'mongodb', 'pymongo\n']"
533641,Method Not Allowed (GET): /home/ usando Django,"
Sou novo usando Django e estou tentando acessar minha home e estou tendo erro 405 Method Not Allowed (GET)
Tenho um arquivo post_views.py dentro da pasta blog/views
from blog.models import Post


class PostView(generic.View):
    queryset = Post.objects.filter(status=1).order_by(""-created_on"")
    template_name = ""index.html""


class PostDetail(generic.DetailView):
    model = Post
    template_name = ""post_detail.html""

O blog/urls.py esta assim
from blog import views

urlpatterns = [
    path('', views.PostView.as_view(), name='home'),
    path('<slug:slug>/', views.PostDetail.as_view(), name='post_detail'),
]

e o djangoblog/urls.py esta assim:
""""""djangoblog URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
""""""
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('home/', include('blog.urls')),
]

esse é o log do terminal:
Method Not Allowed (GET): /home/
Method Not Allowed: /home/
[10/Nov/2021 19:26:50] ""GET /home/ HTTP/1.1"" 405 0

","
Opa amigo blza?
O erro esta lá no seu post_views.py
Como se trata de uma lista que sera renderizada vc deve usar a classe generic.ListView e não generic.View :)
Recomendo dar uma olhada na documentção aqui.
","
            -3
        ",,,"['\npython', 'python-3.x', 'django', 'django-templates', 'django-queryset\n']"
533614,Como deixar o resultado de um while em lista?,"
Como deixar o resultado desse código em Python em forma de lista (40, 39, 38, 37, 36)?
temperatura = 40
while temperatura > 35:
    print(temperatura)
    temperatura = temperatura - 1

","
Primeiro crie uma nova variável do tipo list(), depois adicione os valores de temperatura a essa lista com o método append(), e para retirar o ultimo valor da lista utilize o método pop().
temperatura = 40
list_temperatura = list()
while temperatura >= 36:
    list_temperatura.append(temperatura)
    temperatura = temperatura - 1
print(list_temperatura)

","
            -3
        ",,,"['\npython', 'array', 'lista', 'for', 'while\n']"
533550,Troca de letras em uma palavra [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como usar o .replace() para remover strings em Python

                                (4 respostas)
                            

Fechada há 5 meses.



Estou tentando fazer um código que substitua as letras de uma palavra, como a letra A por @, tentei esse código porem ele troca apenas uma letra, se tentar colocar mais ele dá erro, como faço?
Código:
trocar = input('Qual seu nome?')
def troca(quero_trocar, trocar_por, frase):
    return frase.replace(quero_trocar, trocar_por)

print(troca('a', '@', trocar)) #M@ri@

","
Use o método str.translate() que retorna uma cópia da string na qual cada caractere foi mapeado através da tabela de tradução que pode ser obtida com o auxilio do método estático str.maketrans() que pode ser invocado com dois argumentos to tipo string de mesmo tamanho onde será criada uma tabela de correspondências os caracteres da primeira string serão transformados pelos respectivos caracteres na segunda string:
trocar = input('Qual seu nome?') #Maria
def troca(quero_trocar, trocar_por, frase):
    tbl = str.maketrans(quero_trocar, trocar_por)
    return frase.translate(tbl)

print(troca('aM', '@W', trocar)) #W@ri@

Teste o exemplo no Replit
","
            2
        ",,,['\npython\n']
533544,Selecionar Owner via URL - FastAPI,"
Estou com um projeto em desenvolvimento onde o banco é separado por alguns Schemas. Os schemas ""aleatórios"", falo isso pois eles não tem um padrão para serem criados, pois se tivesse eu só incluiria no meu model.py e tudo resolvido.
main.py
import socket
from datetime import datetime
from typing import Generator, Dict, List
from fastapi import FastAPI, Depends, HTTPException, status
from config import Base, SessionLocal, engine
from sqlalchemy.engine.base import Connection
from sqlalchemy.orm import Session

import schemas
import models

app = FastAPI()

def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

@app.get(""/"")
async def alive():
    #get_db()
    return {""API"": ""HUBSales"",
            ""versão"": ""v1.0"",
            ""servidor"": socket.gethostname(),
            ""data"": datetime.now().strftime(""%c"")}

############## LISTA TODOS OS CLIENTES ##############
@app.get(""/tenant/"")
async def busca(db: Session = Depends(get_db)):
    return db.query(models.TenantModel).all()
    
############## VALIDAÇÃO TENANT ##############
@app.get(""/{tenant}/login/{usuario}_{senha}"", status_code = status.HTTP_200_OK)
async def validaUsuario(tenant: str, usuario: str, senha: str, db: Session = Depends(get_db)):

        **Aqui devo desenvolver o código para a validação, utilizando o campo TENANT
          que é o Schema que irá ser utilizado nas pesquisas**


models.py
from config import Base, engine, metadata
from pydantic import BaseModel
from sqlalchemy import Table, Column, Integer, String, Float, schema, ARRAY

class TenantModel(Base):
    __table__ = Table('TENANT', metadata, autoload_with = engine)
    __mapper_args__ = { 'primary_key':[__table__.c.pktenant] }

class UsuariosModel(Base):
    __table__ = Table('USUARIOS', metadata, autoload_with = engine)
    __mapper_args__ = { 'primary_key':[__table__.c.pkusuario] }

","
Resolvido inserindo o código abaixo nas querys:
db.connection(execution_options={ ""schema_translate_map"": { 'schema': novo_schema}})

","
            0
        ",,,"['\npython', 'sqlalchemy', 'fastapi\n']"
533540,Laço de repetição - Python,"
Eu preciso criar um código que eu coloque o nome do aluno, a idade e ele me mostre de acordo com uma tabela que tenho se esse aluno está no ensino infantil, fundamental I, fundamental II e ensino médio, pois bem, consegui desenvolver essa parte porem no final ele deve aparecer a mensagem "" Deseja continuar com o programa: 0-Não    1-Sim"" ai está o problema, não estou conseguindo realizar está etapa.
deixo meu código abaixo:
nome= input('Qual o nome da criança? ')
idade= int(input('Qual a idade da criança? '))
while(s != '1'):
  if idade <= 5:
    print('{} tem {} anos e está matriculado no ensino infantil'.format(nome, idade))
  elif idade <=6 or idade <=10: 
    print('{} tem {} anos e está matriculado no ensino fundamental I'.format(nome, idade))
  elif idade <=11 or idade <=14: 
    print('{} tem {} anos e está matriculado no ensino fundamental II'.format(nome, idade))
  elif idade >=15:
    print('{} tem {} anos e está matriculado no ansino médio'. format(nome, idade))
s= input('Deseja continuar com o programa? 0-Não    1-Sim')

","
Até o python versão 3.9 você pode implementar esse algoritmo conforme o
@hkotsubo o ensinou nos comentários da pergunta.
#O fragmento a seguir é cópia ipsis litteris do algoritmo https://ideone.com/bLom58
#de autoria do usuário @hkotsubo, perfil https://pt.stackoverflow.com/users/112052/hkotsubo
while True:
    nome = input('Qual o nome da criança? ')
    idade = int(input('Qual a idade da criança? '))
    if idade <= 5:
        classe = 'ensino infantil'
    # se não entrou no primeiro if é porque com certeza é maior que 5,
    # então só preciso testar se é menor ou igual a 10
    elif idade <= 10:
        classe = 'ensino fundamental I'
    # se não entrou no if e no elif acima é porque com certeza é maior que 10,
    # então só preciso testar se é menor ou igual a 14
    elif idade <= 14:
        classe = 'ensino fundamental II'
    # se não entrou em nenhum if/elif é porque com certeza é maior que 14,
    # então se chegou aqui é porque com certeza é maior ou igual a 15 e não preciso testar
    else:
        classe = 'ensino médio'
 
    print(f'{nome} tem {idade} anos e está matriculado no {classe}')
    # pra que variável? Compare direto o que foi digitado
    if input('Deseja continuar com o programa? 0-Não    1-Sim') != '1':
        break # sai do while

A partir da versão python 3.10 foi implementada a PEP 634 -- Structural Pattern Matching e o algoritmo pode ser implementado da seguinte forma:
while True:
    nome = input('Qual o nome da criança? ')
    idade = int(input('Qual a idade da criança? '))
    match idade:
        case i if i<=5:
            classe = 'ensino infantil'
        case i if i <= 10:
            classe = 'ensino fundamental I'
        case i if i <= 14:
            classe = 'ensino fundamental II'
        case _:
            classe = 'ensino médio'
    print(f'{nome} tem {idade} anos e está matriculado no {classe}')
    if input('Deseja continuar com o programa? 0-Não    1-Sim') != '1':
        break

","
            2
        ","
O primeiro passo é definir a variável s = '1' fora do laço de repetição. Os parâmetros do laço devem ser while(s == '1'), e, os três inputs devem estar dentro do laço.
s = '1'
while(s == '1'):
  nome= input('Qual o nome da criança? ')
  idade= int(input('Qual a idade da criança? '))
  if idade <= 5:
    print('{} tem {} anos e está matriculado no ensino infantil'.format(nome, idade))
  elif idade <=6 or idade <=10: 
    print('{} tem {} anos e está matriculado no ensino fundamental I'.format(nome, idade))
  elif idade <=11 or idade <=14: 
    print('{} tem {} anos e está matriculado no ensino fundamental II'.format(nome, idade))
  elif idade >=15:
    print('{} tem {} anos e está matriculado no ensino médio'. format(nome, idade))
  s= input('Deseja continuar com o programa? \n0-Não    \n1-Sim  \n ')

","
            0
        ","['\npython', 'loop\n']"
533519,Como detectar quando eu aperto uma tecla,"
Acho que o título ficou meio confuso, mas é o seguinte:
Eu quero que quando eu aperte a tecla 'e', uma variavel minha se torne True, e quando eu apertar essa mesma tecla novamente, essa mesma variavel se torna False.
O problema é que, eu tou usando a função keyboard.is_pressed('e').
Exemplo:
import keyboard as kb

while True:
    if kb.is_pressed('e'):
        print('Pressionou e')


O que eu quero: que o print só seja acionado uma vez, mesmo que eu segurar a tecla 'e', por exemplo:
Mesmo se eu apertar e segurar a tecla E, o print só vai aparecer uma vez, aí eu teria que soltar a tecla E e apertar novamente, aí aparecia o print novamente.
","
Acho que o ideal seria usar a lógica do liga/desliga.
Criar uma variável considerando a última ação, conforme código a baixo:
import keyboard as kb

pressionou = False

while pressionou == False:
    if kb.is_pressed('e'):
        pressionou = True
        print('Pressionou e')

","
            1
        ",,,"['\npython', 'teclado\n']"
533484,Salvar uma valor de um data frame sem que ele seja perdido quando seja atualizado,"
Estou tentando salvar o primeiro valor desse dataframe em uma variável que o valor não será perdido quando a tabela que gera o dado for atualizada.

","
use o método .copy para copiar um DataFrame/Series do pandas. A partir desse momento, os dados original e copiado podem ser modificados de forma independente.
Exemplo:
import pandas as pd

df = pd.DataFrame({
    'a': [1, 2, 3],
    'b': [10, 20, 30],
})

print(df)
# output:
#    a   b
# 0  1  10
# 1  2  20
# 2  3  30

df_copia = df.copy()  # cópia independente
df['a'] = ['outros', 'valores', 'aqui']

print(df)  # valores modificados
# output:
#          a   b
# 0   outros  10
# 1  valores  20
# 2     aqui  30

print(df_copia)  # valores originais
# output:
#    a   b
# 0  1  10
# 1  2  20
# 2  3  30

No seu caso, imagino que você queira fazer algo do tipo:
Lastdate = T_Newbloqueio.iloc[0]['databloqueio'].copy()

","
            0
        ",,,"['\npython', 'pandas\n']"
533425,"Por que as opções de formatação não funcionam com listas, dicionários e outros objetos?","
Quando quero imprimir um número ou uma string, posso usar f-strings (em Python >= 3.6) ou str.format, e posso passar somente a variável entre chaves, ou usar as opções de formatação. Ex:
numero, texto = 10, 'abc'

# passando somente as variáveis
print(f'{numero} {texto}')
# ou
#print('{} {}'.format(numero, texto))

# usando as opções de formatação
# número alinhado à esquerda, ocupando 6 posições, texto alinhado à direita ocupando 10 posições
print(f'{numero:<6} {texto:>10}')
# ou
#print('{:<6} {:>12}'.format(numero, texto))

Saída:
10 abc
10            abc

Mas se faço o mesmo com listas ou dicionários, apenas a primeira opção funciona:
lista = [1, 2]
dic = {'a': 1}
print(f'{lista} {dic}')
# ou
#print('{} {}'.format(lista, dic))

print(f'{lista:<10} {dic:>15}')
# ou
#print('{:<10} {:>15}'.format(lista, dic))

O primeiro print imprime:
[1, 2] {'a': 1}

Mas o segundo print (com as opções de formatação <10 e >15) dá erro:

TypeError: unsupported format string passed to list.__format__



Se eu tentar a mesma coisa com uma instância de uma classe qualquer que eu criei, também ocorre a mesma coisa. Ex:
class Teste:
    def __init__(self, valor):
        self.valor = valor

    def __str__(self):
        return f'Teste({self.valor})'

t = Teste(42)
print(f't={t}')
print(f'{t:>10}')

O primeiro print imprime:
t=Teste(42)

Já o segundo print dá erro:

TypeError: unsupported format string passed to Teste.__format__



Minha pergunta não é sobre como corrigir (bastaria transformar a lista/dicionário/objeto em string - por exemplo, usando str - ou iterar pelos seus elementos/atributos e ir montando a string manualmente, etc).
O que eu quero saber é por qual motivo isso acontece. Por que não é possível usar as opções de formatação com listas, dicionários e instâncias de classes quaisquer, enquanto que se passá-los sem nenhuma opção funciona normalmente? Existe algum detalhe no funcionamento interno desses tipos que os difere de números e strings, quando estes são formatados?
","
Quando você passa somente a variável sem nenhuma opção de formatação (print(f'{variavel}')), internamente está sendo chamado o método __str__ da mesma. Ou seja, no caso da classe Teste, como ela já tinha este método implementado:
class Teste:
    def __init__(self, valor):
        self.valor = valor

    def __str__(self):
        print('chamando __str__') # incluindo um print só para mostrar que realmente passa por aqui
        return f'Teste({self.valor})'

t = Teste(42)
print(f'{t}')

A saída será:
chamando __str__
Teste(42)

Mas na verdade o que está sendo chamado de fato é o método __format__, que segundo a documentação, é chamado ao avaliar o objeto quando este está em uma f-string, ou ao passá-lo para str.format ou ainda ao passá-lo para o built-in format.
Mas como a classe Teste não definiu o método __format__, então ela usa o que foi herdado de object. E se verificarmos a implementação do mesmo (no código fonte do CPython - versão consultada em 28/04/2020, com comentários removidos):
static PyObject *
object___format___impl(PyObject *self, PyObject *format_spec)
{
    if (PyUnicode_GET_LENGTH(format_spec) > 0) {
        PyErr_Format(PyExc_TypeError,
                     ""unsupported format string passed to %.200s.__format__"",
                     Py_TYPE(self)->tp_name);
        return NULL;
    }
    return PyObject_Str(self);
}

Ou seja, quando não é passada nenhuma opção de formatação (apenas {variavel}), ele não entra no if e retorna PyObject_Str(self) (e segundo a documentação, PyObject_Str(algo) é equivalente a chamar str(algo) - que por sua vez, chama algo.__str__()).
Agora se eu passar alguma opção de formatação (como por exemplo print(f'{variavel:>10}')), ele entra no if e mostra a mensagem de erro (""unsupported format string etc"").

Segundo a documentação, este comportamento de lançar o TypeError caso a string de formatação não seja vazia vale desde o Python 3.4, e a chamada para str(self) vale desde o Python 3.7 (antes era chamado format(str(self), ''), conforme consta neste commit).

Ou seja, para isso funcionar na minha classe, eu teria que implementar o método __format__:
class Teste:
    def __init__(self, valor):
        self.valor = valor

    def __str__(self):
        print('chamando __str__')
        return f'Teste({self.valor})'

    def __format__(self, format_spec):
        print(f'chamando __format__ com formato: ""{format_spec}""')
        return f'{self.valor:{format_spec}}'

t = Teste(42)
print(f'{t}')
print(f'{t:>10}')

Agora sim ambos os print's funcionam (e eu implementei o método __format__ de forma a não delegar para __str__, mas poderia tê-lo feito se quisesse). A saída é:
chamando __format__ com formato: """"
42
chamando __format__ com formato: "">10""
        42

E a mesma saída seria obtida se eu fizesse:
print('{}'.format(t))
print('{:>10}'.format(t))


Enfim, é por isso que as opções de formatação não funcionam com listas e dicionários, pois as respectivas classes (list e dict) não implementam o método __format__ e usam a implementação herdada de object (que delega para str quando nenhuma opção é passada, e dá erro quando as opções são usadas - por isso funciona quando faço somente print(f'{lista}')).
Infelizmente não dá para implementar __format__ em listas e dicionários, já que não é possível adicionar métodos novos nas classes nativas, então o jeito é transformá-las em strings mesmo (seja usando str, seja iterando pelos seus elementos e montando a string no formato desejado).
Já números e strings implementam o método __format__ e por isso funcionam com as opções de formatação.
E como já dito, isso não se limita à f-strings. O mesmo comportamento ocorre com str.format e o built-in format:
t = Teste(42) # usando a última versão acima, com a classe Teste implementando __format__
# ambas as linhas abaixo chamam Teste.__format__
print('{:>10}'.format(t))
print(format(t, '>10'))

lista = [1, 2]
# ambas as linhas abaixo lançam TypeError: unsupported format string passed to list.__format__
print('{:>10}'.format(lista))
print(format(lista, '>10'))


Aliás, é por isso que também é possível formatar as classes do módulo datetime desta maneira - como por exemplo f'{datetime.now():%d/%m/%Y}' - pois essas classes sobrescrevem o método __format__, delegando a chamada para strftime. Sendo assim, eu também poderia fazer algo similar com a classe Teste, e definir os formatos que eu quiser:
class Teste:
    # ... construtor, etc

    def __format__(self, format_spec):
        formatos = { # formatos customizados
          'formato_x' : f'formato x -> {self.valor}',
          'outro formato' : f'outro: {self.valor}'
        }
        if format_spec in formatos:
            return formatos[format_spec]

        return f'{self.valor:{format_spec}}'

t = Teste(42)
print(f'{t:formato_x}') # formato x -> 42
print(f'{t:outro formato}') # outro: 42
print(f'{t:>10}')

# ou
#print('{:formato_x}'.format(t))
#print('{:outro formato}'.format(t))
#print('{:>10}'.format(t))

Saída:
formato x -> 42
outro: 42
        42

","
            6
        ",,,"['\npython', 'python-3.x', 'característica-linguagem', 'python-internals', 'cpython\n']"
533421,Calcular soma de dígitos de um número,"
Escreva um programa que receba um número inteiro na entrada, calcule e imprima a soma dos dígitos deste número na saída. Exemplo:
>>> Digite um número inteiro: 123
6

Dica: Para separar os dígitos, lembre-se: o operador // faz uma divisão inteira jogando fora o resto, ou seja, aquilo que é menor que o divisor; O operador % devolve apenas o resto da divisão inteira jogando fora o resultado, ou seja, tudo que é maior ou igual ao divisor.
Tentei de várias maneiras, mas o resultado continua dando zero. Só tenho essa tentativa anotada porque eu fui fazendo por cima:
n = int(input(""Digite um número inteiro: ""))

soma = 0

while (n > 0):

    resto = n % 10
    n = (n - resto)/10
    soma = soma + resto


print(""A soma dos números é: "", n)

","
Caso queira explorar soluções alternativas, proponho uma que foge da dica do enunciado.
n = input(""Digite um número inteiro: "")

print(sum(int(i) for i in n))

A função nativa sum calcula a soma dos itens de um objeto iterável. Por padrão, a função input retorna uma string, que é iterável no Python. Como queremos a soma algébrica dos dígitos, basta converter cada um para o tipo inteiro.
Veja funcionando no Repl.it ou no Ideone.

Nota: Funciona apenas para valores inteiros positivos, visto que tratando o valor como string, o sinal de menos é considerado como um caractere.

","
            17
        ","
Para que seu algoritmo funcione, é preciso pegar o ultimo dígito do número, e armazenar este valor em algum lugar, em seguida, remova este número do dígito original, e faça isso enquanto tiver dígitos no número.
def somar_digitos(n):
    s = 0
    while n:
        s += n % 10 # Soma `s` ao ultimo numeral de `n`
        n //= 10 # Remove o ultimo numero de `n`
    return s

O que este algoritmo faz é simples:
1 - Pega o último digito de n;
2 - Soma este digito na variável s;
3 - Remove o último dígito do número n;
4 - Volta ao passo 1;  
","
            6
        ",['\npython\n']
533379,"Loop ""For"" dentro de uma função não dá o mesmo resultado que usado fora","
Estou tentando criar uma função, onde a mesma lê os dados de um arquivo .txt e me retorna eles, porém ao criar o código dentro de uma função o mesmo me retorna apenas a primeira linha:
def ler_dados():
    with open('CTE_ARBA.txt', 'r') as arq:
        dados = arq.readlines()
        for linhas in dados:
            return linhas 

print(ler_dados())
output: 15211030800078000151570010000


Quando faço o mesmo código, porem fora de uma função, ele me retorna todos os valores do arquivo.
E possível criar função que me retorne todos os valores?
","
O return serve para devolver um resultado para a função, e interromper o fluxo, portanto a função encerra quando encontra este comando.
Tenho algumas soluções:

Faça a impressão dentro da função e só retorne ao final dela, não dentro do laço (pode até deixar o retorno implícito). Mas isso não tem separação de responsabilidade, só pode imprimir no console, não poderá reaproveitar a função para outras coisas, e pode não ser o que deseja.

Crie uma lista de dados e retorne-a. Aí quem chamou pega essa lista retorna e faz um laço para imprimir cada elemento. Isso é o ideal na maioria das situações. Note que dados já é uma lista pronta para retornar, então só crie outra se quer algum formato diferente.

Retorne um iterador e assim vai pegando cada um dos elementos por vez dentro de um laço. Isso é feito com o comando yield em vez do return. Ele controla a passagem em cada um dos elementos. Pode ver mais no link fornecido.


Algo assim:
def ler_dados():
    with open('CTE_ARBA.txt', 'r') as arq:
        dados = arq.readlines()
        for linha in dados:
            yield linha

for linha in ler_dados():
    print(linha)

Coloquei no GitHub para referência futura.
","
            4
        ","
Apenas como complemento da resposta do Maniero, você não precisa trazer todo o conteúdo para a memória usando o readlines() para depois iterá-las e retorná-las na função.
Com o yield from você pode subdelegar a responsabilidade de gerar os valores diretamente para o manipulador de arquivos, assim ele lê linha a linha já retornando para você na função, mantendo apenas uma linha em memória por vez.
def ler_dados():
    with open('CTE_ARBA.txt', 'r') as stream:
        yield from stream

for linha in ler_dados():
    print(linha)

","
            3
        ","['\npython', 'funções', 'for\n']"
533368,Arquivo JSON salva sem [ ] e sem as vírgulas entre os objetos,"
Tenho que criar um sistema para uma ""pequena loja"" poder registrar os produtos (em um arquivo JSON) e depois carregar o arquivo e fazer consultas com o mesmo carregado.
Estou tentando descobrir por que meus registros de produtos não estão salvando na estrutura correta do JSON. Não sei porque o JSON não está salvando os itens com o [] entre os registros.
lista_produtos = []   # <-- AQUI CRIO A LISTA QUE RECEBE REGISTROS DE PRODUTOS
contador_sinal = 0
contador = 0

class Produto: # <-- CREATING THE CLASS OF PRODUCTS
    def __init__(self, codigo, nome, descricao, valor):
        self.codigo = codigo
        self.nome = nome
        self.descricao = descricao
        self.valor = valor

def gravar(): # <-- E ESTA É A FUNÇÃO QUE SALVA A LISTA DE PRODUTOS EM JSON
    global contador_sinal
    print(""=""*50)
    print("" "",""\nGravando Arquivo Externo dos Produtos..."")
    with open('data.json', 'w') as fp:
        for item in lista_produtos:
            if type(item) == Produto:
                json.dump(item.__dict__, fp, indent=4)    
                fp.write(""\n"")
            elif type(item) == dict:
                json.dump(item, fp, indent=4)    
    time.sleep(1)
    print("" "")
    print(""\033[32mARQUIVO SALVO COM SUCESSO!\033[0m\n"")
    fp.close()

    contador_sinal = 1
    
    return menu()

Depois que faço o cadastro dos itens e chamo a função de gravar, as informações ficam salvas da seguinte forma no JSON:
{
    ""codigo"": 1,
    ""nome"": ""test1"",
    ""descricao"": ""description"",
    ""valor"": 10.0
}
{
    ""codigo"": 2,
    ""nome"": ""test2"",
    ""descricao"": ""description"",
    ""valor"": 20.0
}
{
    ""codigo"": 3,
    ""nome"": ""test3"",
    ""descricao"": ""description"",
    ""valor"": 30.0
}

","
Ele salva assim porque você está gravando cada objeto separadamente.
Se quer que tudo seja gravado como uma única lista, você teria que passar a lista toda para dump:
# *** ATENÇÃO, AINDA NÃO FUNCIONA (continue lendo) ***
json.dump(lista_produtos, fp, indent=4)

Mas isso ainda não funciona porque a classe Produto não é serializável, portanto o código acima dá esse erro:

TypeError: Object of type Produto is not JSON serializable


Isso porque o módulo json não sabe como serializar um Produto. Então temos que criar um JSONEncoder customizado, que sabe como fazer isso:
from json import JSONEncoder

class ProductEncoder(JSONEncoder):
    def default(self, obj):
        return obj.__dict__

Quando o objeto sendo serializado não é um dos tipos que o módulo json reconhece, ele chama o método default acima. No caso, eu faço com que ele retorne o __dict__, como você estava fazendo. Mas você poderia colocar qualquer lógica que quisesse para deixar os dados da forma que precisar.
Depois é só informar no json.dump que você quer usar este encoder:
with open('data.json', 'w') as fp:
    json.dump(lista_produtos, fp, indent=4, cls=ProductEncoder)

Com isso o arquivo terá a lista completa dos produtos no formato correto:
[
    {
        ""codigo"": 1,
        ""nome"": ""test1"",
        ""descricao"": ""description"",
        ""valor"": 10.0
    },
    {
        ""codigo"": 2,
        ""nome"": ""test2"",
        ""descricao"": ""description"",
        ""valor"": 20.0
    },
    {
        ""codigo"": 3,
        ""nome"": ""test3"",
        ""descricao"": ""description"",
        ""valor"": 30.0
    }
]


E apenas para complementar, se quiser fazer o oposto (ler o arquivo e obter a lista de produtos), basta criar um JSONDecoder customizado:
from json import JSONDecoder

class ProductDecoder(JSONDecoder):
    def __init__(self, *args, **kwargs):
        super().__init__(object_hook=self.object_hook, *args, **kwargs)
        # todos os campos que um produto tem
        self.product_keys = ('codigo', 'nome', 'descricao', 'valor')

    def object_hook(self, dct):
        # se tem todos os campos de um produto (e mais nenhum outro)
        if len(dct) == 4 and all(k in dct for k in self.product_keys):
            return Produto(**dct)
        # se não é um Produto, retorna do jeito que está
        return dct

with open('data.json', 'r') as fp: # ler o arquivo
    # usa o decoder para criar a lista de Produtos
    lista_produtos = json.load(fp, cls=ProductDecoder)

Ou seja, se for encontrado algo que é um Produto (tem exatamente 4 chaves cujos nomes são ""codigo"", ""nome"", ""descricao"" e ""valor""), o decoder cria o Produto. Senão, ele retorna o objeto lido sem modificação.
","
            3
        ",,,"['\npython', 'python-3.x', 'json\n']"
533326,adicionando dados coluna Data Frame,"
Esse é algoritmo que analisa a taxa de retorno de alguns investimentos de acordo com sua rentabilidade.
Estou travado no seguinte código Python3:
tx = (df['Ult'] / df['Pfechamento']) * 100
df['TaxaRetorno'] = tx.round(2)
for i,analise in enumerate(df['TaxaRetorno']):
    if analise > 1:
        analise = 'Montar'

df['Analise'] = analise

O retorno o Data Frame está retornando tudo como 'Montar' e o que preciso é que quando a condição seja verdadeira a coluna análise tenha 'Montar' ou se for falso fique em branco ou a palavra 'Aguardar'.
Abaixo tem o output. O que preciso é que nas linhas {2,3,4} na coluna ""Analise"" fique em branco ou nome ""Aguardar"".

","
Vejo alguns problemas no código:

a variável analise esta sendo utilizada fora do for, então você esta usando o ultimo valor colocado nela;
df['Analise'] = analise esse trecho esta criando uma nova coluna e aplicando o mesmo valor para todos os registros, que aparentemente não é o que você deseja fazer;
o fato de você esta usando pandas esse for torna-se desnecessário;

Corrigindo o código e mantendo o for 
Obs.: Estou fazendo isso só para você ver como setar um valor em um índice especifico usando pandas, já que você esta usando pandas não há necessidade desse for
dados = {
    'Ult':[0.26,0.28,0.19],
    'Pfechamento':[25.85, 26.00, 26.85],
}

df = pd.DataFrame( dados )

tx = (df['Ult'] / df['Pfechamento']) * 100
df['TaxaRetorno'] = tx.round(2)
df['Analise'] = ''
for i,analise in enumerate(df['TaxaRetorno']):
    if analise > 1:
        df.loc[ i , 'Analise'] = 'Montar'
        # usei o .loc para acessar o `index` e a `coluna` e setar um valor

Veja funcionando no ideone.com
Usando o pandas ao invés de fazer o for
dados = {
    'Ult':[0.26,0.28,0.19],
    'Pfechamento':[25.85, 26.00, 26.85],
}

df = pd.DataFrame( dados )

tx = (df['Ult'] / df['Pfechamento']) * 100
df['TaxaRetorno'] = tx.round(2)
df['Analise'] = ''

tabela_verdade = (df['TaxaRetorno'] > 1)
# criar uma tabela verdade, onde você terá `true` 
# os casos em que a condição  `TaxaRetorno > 1` for verdade, 
# então usando os 3 primeiros itens da sua df como exemplo você 
# terá um `pandas.Series` parecida com (veja o exemplo online): 
#  
#  0     True
#  1     True
#  2    False

df.loc[ tabela_verdade , 'Analise'] = 'Montar'
# utilizar o `.loc` passando a `tabela verdade` e o `nome da coluna`
# associando um valor a ela só vai aplicar nos registros em que a `tabela verdade`
# indicar `true` para o index, então nesse exemplo ele vai aplicar nos index `0` e `1`


Veja funcionando no ideone.com

Referencia
pandas.DataFrame.loc

","
            0
        ",,,"['\npython', 'dataframe\n']"
533266,Para que servem os colchetes em Python?,"
Vi um código que tem algumas funções entre []. Para que serve esse colchetes?
Pensava que os colchetes serviam para criação de listas e manipulação de string.
print('Total de nulos por Variável: ', df.isnull().sum()[df.isnull.sum() > 0].sort_values(ascending= False))

",,,,,['\npython\n']
533260,Como somar elementos (inteiros) de uma lista com inteiros de uma variavel?,"
Estou com a seguinte dúvida, em relação ao código abaixo.
x = 1, 1  # direita cima
menos_x = -1, 1  # esquerda cima
y = 1, -1  # direita baixo
menos_y = -1, -1   # esquerda baixo

lista = [x, menos_x, y, menos_y]

def walk():
    pos_inicial = 0, 0
    random_walk = random.choice(lista)
    pfinal = pos_inicial + random_walk
    print(pfinal)


print(lista) #Apenas para mostrar a lista
walk()

O resultado:
[(1, 1), (-1, 1), (1, -1), (-1, -1)]
(0, 0, 1, -1)

Mas o que eu preciso é, pegar um elemento aleatório da lista[] e somar com a variável pos_inicial, o que no exemplo acima, deveria sair:
(1, -1)

Consegui explicar direito minha dúvida?
EDIT: Basicamente, quero somar elementos de duas listas.
Exemplo:
lista1 = [1, 1]
lista2 = [2, 2]
soma = lista1 + lista2

resultado
(1, 1, 2, 2)

Mas eu gostaria que os valores fossem somados dessa forma:
(3, 3)

","
O operador + em tuplas é equivalente à concatenação.
Você tem que somar cada elemento individualmente, no caso de seu código:
pfinal = pos_inicial[0] + random_walk[0],pos_inicial[1] + random_walk[1]

","
            0
        ","
Se entendi corretamente sua dúvida, você precisa somar os dois itens das tuplas, resultando em uma nova tupla.
Você pode fazer o seguinte, na linha em que cria a variável pfinal:
pfinal = pos_inicial[0] + random_walk[0], pos_inicial[1] + random_walk[1]

Isso te retorna uma nova tupla com o resultado da soma das outras duas tuplas, acessando cada item que precisa ser somado pelo seu índice. Da forma que está fazendo atualmente, resulta em uma nova tupla com os itens das tuplas incluídas.
Isso acontece porque a ação de usar o operador + nas tuplas resulta em uma concatenação e não na soma dos itens, dado que o interpretador não saberia quais são os tipos dos itens a somar e se a operação de soma para cada item seria válida, nem a garantia de que ambas as tuplas teriam o mesmo tamanho, por exemplo.
","
            0
        ",['\npython\n']
533255,Como funcionam decoradores em Python?,"
O @Elizeu Santos perguntou no grupo de Python em português do facebook o seguinte:

""Fala galera, to estudando python e uma coisa que não estou entendendo
  são os decorators. Dei de cara com eles fazendo o tuto de flask, podem
  me esclarecer?""

(O facebook não é legal para responder perguntas que incluam português e código misturado nos comentários - aqui é muito melhor formatado pra isso - então trouxe a pergunta pra cá, para colar a resposta que eu escrevi pra ele)
","
Uma função em Python é um objeto como qualquer outro - quando fazemos def func(): ..., o nome func fica associado ao corpo da função que é definido depois do comando def.
Um decorator é uma função (ou outro objeto chamável) que recebe uma função como parâmetro e retorna uma função. Essa nova função que é retornada pelo decorator é que fica associada ao nome da função original.
Ou seja, suponha um decorator deco, se for usado com a sintaxe de 
@ faz exatamente o mesmo que isso aqui:
def func():
   # faz coisas
func = deco(func)

Esse trecho de código é o mesmo que:
@deco
def func():
   #faz coisas

Nos dois casos, depois desse trecho de código, o nome func fica associado ao objeto que foi retornado pela chamada a função deco. Em geral esse objeto é uma função que chama a função func original, mas faz alguma coisa antes ou depois de chamá-la.
Por exemplo, um decorador que simplesmente registra quantas vezes as funções que ele decora foram chamadas, numa variável global contador pode ser declarado assim:
contador = 0

def contar_acessos(funcao_decorada):
    # não sabemos quantos parâmetros existirão na chamada
    # da função funcao_decorada, então recebemos *args e **kw
    def nova_func(*args, **kw):
         global contador
         contador += 1
         # e chamamos a função original, com os parâmetros recebidos:
         return funcao_decorada(*args, **kw)
    # retornamos a função ""nova_func"" - que só faz 
    # incrementar o contador e  retornar o valor da chamada à função original
    return nova_func

# agora vamos usar o decorador:
@contar_acessos
def soma(a, b):
    return a + b


E quando colamos esse código no interpretador interativo e chamamos soma algumas vezes, temos:
>>> contador
0
>>> soma(2,2)
4
>>> soma(3,2)
5
>>> soma(""a"", ""b"")
'ab'
>>> contador
3


Então, nesse caso simples, tudo o que é feito é aumentar o valor da variável contador antes de chamar a mesma função que foi decorada (e que dentro da função nova_funcao está com o nome de funcao_decorada já que ela é passada como parâmetro para a função de fora, a contar_acessos).
Mas você pode sofisticar a coisa - pode-se criar uma função que guarde o valor de retorno da função decorada num dicionário, por exemplo, daí você faz um cache simples (memoize). Pode-se simplesmente registrar a função decorada numa lista de ""funções que fazem algo"", e retornar ela mesma, sem criar uma nova função decoradora. Acredito que é isso que o Flask faz - anota a sua função decorada como uma função que responde a um endereço na URL.
","
            42
        ",,,"['\npython', 'decorator-pattern', 'sintaxe\n']"
533132,Como visualizar as versões do python que tenho no windows?,"
Estou com mais de uma versão do Python instalada no windows, 3.8 e 3.9, mas não sei como visualizar o diretório da versão 3.8 para deletar a pasta, ela não aparece, aparece somente a  pasta da 3.9, sendo que qdo rodo o python --version no terminal, aparece a versão 3.8.8... alguém pode me ajudar a ""enxergá-la"" e deletar?
Meu VS Code está dando problemas por causa disso, sempre que tento importar bibliotecas, fui orientada a deletar uma (a mais antiga) e ficar com a mais recente...
","
No VS Code, do lado inferior esquerdo deve aparecer algo como ""Python 3.x.x 64bit"" clique em cima, em seguida irá aparecer na tela uma janela escrito ""Selecionar interpretador"", então você poderá escolher qual das versões instaladas quer utilizar.
Pelo que eu testei aqui, a versão que está de fato sendo utilizada é a que aparece do lado inferior esquerdo, e não a mostrada quando se dá o comando ""python --version""
","
            -2
        ",,,['\npython\n']
533076,Como salvar uma tabela DataFrame diretamente no Hive?,"
Estou com uma dúvida para criar uma tabela SQL no hive com os dados de uma tabela dataframe.
Recebi uma sugestão para criar uma tabela temporária na memória e armazená-los na tabela hive usando sqlContext, porem sem sucesso.
Utilizei o comando:
df_particoes_agrup.createOrReplaceTempView(""mytempTable"") 

E obtive o erro:

AttributeError: 'DataFrame' object has no attribute
'createOrReplaceTempView'.

Alguém teria alguma sugestão de como criar uma tabela sql com os dados de uma tabela dataframe ou de como corrigir o erro acima?
",,,,,"['\npython', 'sql', 'hive\n']"
532987,Como converter direcao (bearing) em azimute usando python (pandas),"
Sou iniciante em python.
Li um arquivo excel, criei um dataframe:

Gerei uma coluna com o quadrante(string) e outra contendo os graus
df['DIRECAO'] = df['DIRECAO'].astype(pd.StringDtype())
df['quadrante'] = df['DIRECAO'].str[0] + df['DIRECAO'].str[-1]
df['graus'] = df['DIRECAO'].str[1:-1].astype(float) 
df.head()

Dataframe
PROF_med    PROF_vert   INCL    DIRECAO quadrante   graus
0   5.0     5.0         0.00    N00.00E   NE        0.0
1   30.0    30.0        0.05    N06.40W   NW        6.4
2   60.0    60.0        0.20    N59.80W   NW       59.8
3   90.0    90.0        0.30    N51.90W   NW       51.9
4   120.0   120.0       0.28    S16.10W   SW       16.1

Quando tento fazer a conversão, usando o código abaixo, recebo a mensagem abaixo :
if df['quadrante'] == 'NE':
    df['azimute'] = df['graus'] #para o quadrante NE
elif df['quadrante'] == 'SE':
    df['azimute'] = (180 - df['graus']) #para o quadrante SE
elif df['quadrante'] == 'SW':
    df['azimute'] = (180 + df['graus']) #para o quadrante SW
elif df['quadrante'] == 'NW':
    df['azimute'] = (360 + df['graus']) #para o quadrante NW  
df


ValueError: The truth value of a Series is ambiguous. Use a.empty,
a.bool(), a.item(), a.any() or a.all().

","
Você vai usar a propriedade .loc pra isso.
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.loc.html#
A estrutura básica é a seguinte:
df.loc[df['nome da coluna'] condição a ser seguida, 'nome da coluna que recebe o valor'] = 'valor a ser atribuido somente se a condição for satisfeita'

Segue um exemplo pro seu caso específico:
Criando o dataframe de exemplo
import pandas as pd

data = [""N00.00E"",
""N06.40W"",
""N59.80W"",
""N51.90W"",
""S16.10W"",]

df = pd.DataFrame(data, columns=['DIRECAO'])

df['DIRECAO'] = df['DIRECAO'].astype(pd.StringDtype())
df['quadrante'] = df['DIRECAO'].str[0] + df['DIRECAO'].str[-1]
df['graus'] = df['DIRECAO'].str[1:-1].astype(float) 

df.to_markdown() # markdown me ajuda na hora de editar essa resposta pra imprimir a tabela abaixo






DIRECAO
quadrante
graus




0
N00.00E
NE
0


1
N06.40W
NW
6.4


2
N59.80W
NW
59.8


3
N51.90W
NW
51.9


4
S16.10W
SW
16.1



Aplicando a propriedade .loc
df.loc[df['quadrante'] == 'NE', 'azimute'] = df['graus']
df.loc[df['quadrante'] == 'SE', 'azimute'] = 180 - df['graus']
df.loc[df['quadrante'] == 'SW', 'azimute'] = 180 + df['graus']
df.loc[df['quadrante'] == 'NW', 'azimute'] = 360 + df['graus']

df.to_markdown()






DIRECAO
quadrante
graus
azimute




0
N00.00E
NE
0
0


1
N06.40W
NW
6.4
366.4


2
N59.80W
NW
59.8
419.8


3
N51.90W
NW
51.9
411.9


4
S16.10W
SW
16.1
196.1



 ","
            0
        ",,,"['\npython', 'pandas\n']"
532937,Como repetir um bloco de programação em Python?,"
Eu estou digitando uma automação em Python com a biblioteca Pyautogui.
Porém, como é algo repetitivo eu gostaria de repetir essa ação um determinado número de vezes.
Também importei a biblioteca time para dar uma pausa entre as ações.
O bloco de código que eu quero repetir é simples:
pg.click(x=430, y=17)
time.sleep(1)
pg.click(x=417, y=581)
time.sleep(1)
pg.click(x=477, y=539)
time.sleep(1)
pg.click(x=759, y=447)

Como eu realizo isso?
Estou utilizando o Jupyter Notebook.
","
Acredito que a solução mais simples seja criar uma função para seu processamento e utilizar um loop para repeti-la quantas vezes for necessário, neste caso você poderia fazer destas maneiras:

Usando loop for:

# main.py
NUMERO_DE_REPETICOES = 999

def funcao_para_repetir():
    print('Realizando algo que necessito repetir')
    
for numero in range(0, NUMERO_DE_REPETICOES):
    funcao_para_repetir()


Usando loop while:

# main.py
NUMERO_DE_REPETICOES = 999

def funcao_para_repetir():
    print('Realizando algo que necessito repetir')
    
repeticao_atual = 0
while repeticao_atual != NUMERO_DE_REPETICOES:
    repeticao_atual += 1
    funcao_para_repetir()

Desta maneira você poderia começar as repetições via linha de comando com o python:
python main.py

","
            0
        ",,,"['\npython', 'loop', 'pyautogui\n']"
532783,Como transformar linhas em colunas em uma base de dados grande?,"
Boa noite.
Eu tenho uma tabela de 545 mil linhas e 2 colunas. Na coluna 1 eu tenho 2585 dados únicos, e na coluna 2, 25 mil dados únicos. Um pedaço dessa tabela é o seguinte fragmento:




Disease
Factor




Parkinson Disease, Secondary
Dengue


Parkinson Disease, Secondary
MPTP Poisoning


Ischemic Attack, Transient
Dopamine


Ischemic Attack, Transient
Arrhythmias, Cardiac


Pregnancy Complications
Diabetic Ketoacidosis


Pregnancy Complications
Arrhythmias, Cardiac




Eu preciso transformar essa tabela em uma matriz binária, transformando as colunas ""factor"" em linhas. Dessa maneira:





Dengue
MPTP Poisoning
Dopamine
Arrhythmias, Cardiac
Diabetic Ketoacidosis




Parkinson Disease, Secondary
1
1
0
0
0


Ischemic Attack, Transient
0
0
1
1
0


Pregnancy Complications
0
0
0
1
1




Eu estava usando R (código abaixo), mas está demorando demais. Deixei 5 horas rodando e ele fez13 linhas da matriz. Alguém poderia me ajudar? Pode ser em Python tbm.
for (i in 2:2585) {
  linhas=grep(matrix[i,1],dados[,1])
  n=length(linhas)
  for (j in 1:n) {
    coluna=grep(dados[linhas[j],2],matrix[1,])
    matrix[linhas[j],coluna]=1
  }
}

------- dados é a tabela e matrix, seria a tabela transformada. Eu inicialmente zerei todas as entradas de matrix.

","
Em R, pode converter de formato longo para comprido, usando lenght como função agregadora. tidyr::pivot_wider, reshape2::dcast e data.table::dcast podem ser usados; para dados grandes, recomendo o último:
library(data.table)

dados <- fread(text = c(""Disease;Factor
                         Parkinson Disease, Secondary;Dengue
                         Parkinson Disease, Secondary;MPTP Poisoning
                         Ischemic Attack, Transient;Dopamine
                         Ischemic Attack, Transient;Arrhythmias, Cardiac
                         Pregnancy Complications;Diabetic Ketoacidosis
                         Pregnancy Complications;Arrhythmias, Cardiac""))

dados.w <- dcast(dados, Disease ~ Factor, length)

dados.w
#>                         Disease Arrhythmias, Cardiac Dengue Diabetic Ketoacidosis Dopamine MPTP Poisoning
#> 1:   Ischemic Attack, Transient                    1      0                     0        1              0
#> 2: Parkinson Disease, Secondary                    0      1                     0        0              1
#> 3:      Pregnancy Complications                    1      0                     1        0              0

Se seus dados estão em arquivo de texto plano, carregar com fread é a maneira mais eficiente. Se Já tiver os dados carregados como data.frame, pode setá-los como data.table com setDT(dados), ou indique as.data.table ao rodar o dcast:
dcast(as.data.table(dados), Disease ~ Factor, length)

","
            -1
        ",,,"['\npython', 'r', 'dataframe', 'big-data\n']"
532779,Montar uma lista dentro while/for para gravar no azure blob,"
Como posso montar uma lista com dados dinâmicos conforme percorro uma estrutura de repetição. Tentei o abaixo descrito, mas sem sucesso também tentei montar uma string e colocar na lista, mas também sem sucesso.
from azure.storage.blob import (BlockBlobService)
import pandas as pd
import io

output = io.StringIO()
head = [""Document Name"" , ""Skill"" , ""Confidence Score""]

document_name = []
skill = []
confidencescore =[]
document_name.append(""DM12"")
skill.append(""S12"")
confidencescore.append(""CS12"")

i=0
while i < (len(document_name)):
    tupla = (document_name[i], skill[i],confidencescore[i])
    data.append(tupla)
    i+=1


df = pd.DataFrame (datal , columns = head)
print(df)
output = df.to_csv (index_label=""idx"", encoding = ""utf-8"")
print(output)

accountName = ""accountName""
accountKey = ""accountKey""
containerName = ""containerName""
blobName = ""blobName""

blobService = BlockBlobService(account_name=accountName, account_key=accountKey)

blobService.create_blob_from_text('outputskills', 'OutFile.csv', output)

",,,,,"['\npython', 'pandas\n']"
532756,Imprimir itens de uma lista em sequencia selecionando apenas partes delas - Python,"
Eu tenho uma lista com vários elementos e quero imprimir todos em sequência, entretanto, eu quero apenas uma parte deste elemento que no caso abaixo são os códigos 61708... e 615c9...
lista = [[""'id': '61708e546faa771a406e4aa3'""],[""'id': '615c9413e4bf1834e150afda'""]]
for i in lista:
    print(lista[0][6:31])

Desta forma oque aparece pra mim é:
[]
[]

O meu intuito é que ela retornasse apenas os códigos em sequência, exemplo:
[61708e546faa771a406e4aa3]
[615c9413e4bf1834e150afda]

Alguém sabe como me ajudar?
A lista é bem maior, coloquei só 2 pra facilitar o entendimento.
","
Preste atenção, você na verdade tem uma lista de listas, onde há um string dentro de cada uma das sublistas. Portanto, você precisa de mais um for loop para acessar o string em si.
Faça dessa forma:
lista = [[""'id': '61708e546faa771a406e4aa3'""],[""'id': '615c9413e4bf1834e150afda'""]]
for sublista in lista:
    for texto in sublista:
        codigo = texto[7:-1]
        print(codigo)

output:
61708e546faa771a406e4aa3
615c9413e4bf1834e150afda

Esta solução presume que o código de interesse sempre vai do sétimo caractere ao penúltimo, ignorando portanto os caracteres 'id': ' do começo e ' do final do string. Se isso não se mantiver verdadeiro, a lógica de extração do código na linha codigo = texto[7:-1] deverá ser alterada, p. ex. usando o regex (módulo re da biblioteca padrão).
","
            1
        ",,,"['\npython', 'txt', 'texto\n']"
532696,Como posso ordenar uma lista pelo numero?,"
Olá, tenho esse pequeno sistema que pega o nome de 4 equipes e suas respectivas pontuações, guarda em uma lista e depois a ordena em ordem decrescente. Até aí tudo bem, mas o sistema está ordenando pelo nome das equipes em ordem alfabéica, eu queria que ao invés disso, ele ordenasse pelo valor da pontuação das equipes. Já procurei em vários lugares sobre como fazer e encontrei tutoriais confusos e não obtive resposta, se alguém pude ajudar eu ficaria grato!
data = []
for i in range(0,4):
    nome = str(input('Digite um nome: '))
    ponto = int(input('Digite a pontuação: '))
    dado = nome + ' ' + '=' + ' ' + str(ponto)
    data.append(dado)

data_sort = sorted(data, reverse=True)
print(data_sort)


","
O problema é que você está misturando as estruturas que utiliza para armazenar os dados da sua aplicação com as que utiliza para exibí-los. Exibição é só um detalhe, não deveria definir como você armazena os dados. No momento que você salva tudo como string para facilitar a exibição posterior você perde toda a consistência da sua informação e, por isso, terá grandes dificuldades em tratá-las depois.
Solução: saiba separar as coisas.
Armazene de uma forma que não perca a consistência e exiba depois da forma que desejar.
Por exemplo, se ao invés de você criar a string para armazenar a informação você definir uma tupla, onde o primeiro valor é a pontuação e a segunda é o nome da equipe, a informação se manterá consistente.
data = [
  (20, 'Equipe 1'),
  (40, 'Equipe 2'),
  (15, 'Equipe 3')
]

data_sort = sorted(data, reverse=True)
print(data_sort)  # [(40, 'Equipe 2'), (20, 'Equipe 1'), (15, 'Equipe 3')]

Ao ordenar uma lista de tuplas, a ordenação ocorrerá primeiro pelo primeiro valor, que é a pontuação, e, em caso de empate, pelo segundo, que seria o nome da equipe, em ordem alfabética.
","
            3
        ",,,['\npython\n']
532626,Palavras correspondentes a números de telefones,"
Seja a tabela de correspondência abaixo:

Escreva um script que, dado um número de sete dígitos, gere todas as combinações possíveis de palavras de sete letras correspondentes a esse número. Existem 2.187 (37) dessas combinações. Evite números de telefone com dígitos 0 e 1 (para os quais nenhuma letra corresponde).
A minha tentativa:
import itertools

letters = ['   ', '   ', 'ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PRS', 'TUV', 'WXY']


telefone = 2345678

total = ''
for i in str(telefone):
    total += letters[int(i)]

anagramas = []
for anagrama in itertools.combinations(total, len(str(telefone))):
    anagramas.append(''.join(anagrama))

print(anagramas)

Mas são geradas MUITO mais combinações do que o problema quer. Alguma ideia?
Esta questão é do livro de Python do Deitel.
","
O problema é que você cria uma string contendo todas as letras correspondentes aos dígitos do telefone, e depois gera todas as combinações possíveis desta string.
Ou seja, muitas dessas combinações terão o primeiro caractere correspondente a um dígito que não é o primeiro do telefone. E o mesmo vale para todos os dígitos em todas as posições.
Então na verdade o que você quer é gerar o produto cartesiano das letras. No módulo itertools basta usar a função product, passando como primeiro argumento as letras que correspondem ao primeiro dígito, no segundo argumento as letras que correspondem ao segundo dígito e assim por diante:
import itertools
 
# retorna as letras correspondentes a cada um dos dígitos
def get_letters(fone, letters):
    for i in str(fone):
        yield letters[int(i)]
 
letters = ['0', '1', 'ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PRS', 'TUV', 'WXY']
 
fone = 2345678

for p in itertools.product(*get_letters(fone, letters)):
  print (''.join(p))

No caso, get_letters é uma função geradora que retorna as letras correspondentes a cada um dos dígitos do telefone (ela não valida se o dígito possui correspondente na lista letras, mas pode incluir se for o caso).
Ao chamar product, eu uso o asterisco para fazer o unpacking dos argumentos, ou seja, a primeira string retornada será o primeiro argumento, a segunda string retornada será o segundo argumento, etc.
Por exemplo, se o telefone for ""23"", a função retorna as strings ""ABC"" e ""DEF"", então seria o mesmo que chamar product(""ABC"", ""DEF"").
Repare também que incluí strings para os dígitos zero e um (no caso, são os próprios dígitos), assim ele também funciona para telefones que tenham estes dígitos (no caso, eles não são substituídos por letras).
Mas claro que você pode modificar a função para rejeitar determinados dígitos, ou números com a quantidade de dígitos diferente de sete, ou qualquer outra regra que você quiser. Mas independente disso, a lógica para gerar todos os valores possíveis continua a mesma.

O código acima só imprime os resultados. Mas se quiser uma lista contendo todos, basta fazer:
result = [''.join(p) for p in itertools.product(*get_letters(fone, letters))]

","
            2
        ","

Lembrando que tipos numéricos não são os mais adequados para armazenar números telefônicos.

Como já explicado na outra resposta o que foi pedido no seu exercício foi que fizesse o produto cartesiano a partir da transliteração dos dígitos dum número telefônico segundo uma tabela dada.
Como informação disponibilizadas:

Em Python produto cartesiano pode ser realizado com a função itertools.product().
A função nativa map() devolve um iterador que aplica função para cada item de um iterável.
O operator *(unpacking) explode um iterável em seus elementos.

Dispondo dessas informações é possível elencar os passos elementáres para solucionar o exercício:

Converter o telefone numa string
A partir dessa string obter um iterável onde cada elemento é um dígito do telefone convertido segundo a tabela apresentada no exercício.
Realizar o produto cartesiano sobre os elementos do iterável obtido.
Dispor os resultados em conformidade ao que foi exigido.

from itertools import product

letters = ['0', '1', 'ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PRS', 'TUV', 'WXY']
fone = 2345678  

#Converte o fone numa string e a partir dessa string obtém um iterador para um anagrama  
#relacionando cada dígito de fone a um elemento de letters. 
#Nesse exemplo: (""ABC"", ""DEF"", ""GHI"", ""JKL"", ""MNO"", ""PRS"", ""TUV"")
anagrama = map(lambda d: letters[int(d)], str(fone))

#Faz o produto cartesiano entre as string do anagrama obtendo um iterador de tuplas caracteres contendo as combinações buscadas. 
#Exemplo de uma das tuplas escolhidas aleatoriamente: ('C', 'F', 'I', 'K', 'M', 'S', 'T').
#Junta cada uma das tuplas obtidas em uma string e as coloca em uma lista.
resultados = [*map(''.join, product(*anagrama))]

#Imprime os resultados.
print(*resultados, sep=""\n"")
print(f'Resultados obtidos: {len(resultados)} combinações')

resultando em:
ADGJMPT
ADGJMPU
ADGJMPV
ADGJMRT
ADGJMRU
ADGJMRV
ADGJMST
ADGJMSU
ADGJMSV
ADGJNPT
...
...
...
CFILORT
CFILORU
CFILORV
CFILOST
CFILOSU
CFILOSV
Resultados obtidos: 2187 combinações

teste o exemplo no ide.one
O mesmo algoritmo acima usando compreensão de lista:
from itertools import product
 
letters = ['0', '1', 'ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PRS', 'TUV', 'WXY']
fone = 2345678
 
anagrama = ((lambda d: letters[int(d)])(d) for d in str(fone))
 
resultados = [''.join(p) for p in product(*anagrama)]
 
print(*resultados, sep=""\n"")
print(f'Resultados obtidos: {len(resultados)} combinações')

Teste o código no ide.one
Ainda o mesmo algoritmo usando a pacote nympy. O código usa a função numpy.meshgrid() para obter o produto cartesiano:
import numpy as np

letters = ['0', '1', 'ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PRS', 'TUV', 'WXY']
fone = 2345678

anagrama =[np.array(p) for p in ((lambda d: [*letters[int(d)]] )(d) for d in str(fone))]

resultados = [''.join(s) for s in np.array(np.meshgrid(*anagrama)).T.reshape(-1,len(anagrama))]

print(*resultados, sep=""\n"")
print(f'Resultados obtidos: {len(resultados)} combinações')

Teste o código no ide.one
","
            2
        ","['\npython', 'python-3.x', 'combinações\n']"
532524,Correspondência de chave e valor de duas listas de dicionários,"
Dado duas listas de dicionários como -
poo = [{
      ""xmin"":10,
      ""ymin"":100,
      ""xmax"":70,
      ""ymax"":120,
      ""text"":""fish"",
}]

E também,
foo = [{
      ""class"":""Animal"",
      ""percent"":88.25,
      ""box_points"":[30, 90, 80, 110]
}]

Para produzir uma saída como:
poofoo = [{
    ""class"":""Animal"",
    ""text"":""fish"",
    ""percent"": 88.25,
    ""box_points"":{
          ""xmin"":10,
          ""ymin"":90,
          ""xmax"":80,
          ""ymax"":120}
]}


Sabendo que box_points na lista de dicionários foo também está no formato xmin, ymin, xmax, ymax. Esses pontos são coordenadas de caixas detectadas por sistemas de detecção distintos (as duas listas não possuem o mesmo tamanho)

Como eu poderia acessar os elementos aninhados, comparar as boxes e mesclar os elementos? A ideia é mesclar elementos espacialmente pertos, nesse exemplo, o limiar é de 10 unidades (x,y).
Eu já tentei assim:
def boxOverlap(box1, box2):
    try:
        if(box1[0]<=box2[2]-10 or box1[0]>=box2[0]) \
          and (box1[1]<=box2[3] or box1[1]>=box2[3]):
            return True, [min(box1[0], box2[0]),
               min(box1[1], box2[1]),
               max(box1[2], box2[2]),
               max(box1[3], box2[3])]
        else:
            return False
    except TypeError:
        print(f""{message_error}"")

final_json = []

for el1, el2 in zip(foo, poo):        
    el1_box_format = [el1['x_min'], el1['y_min'], el1['x_max'], el1['y_max']]
    
    if(boxOverlap(el1_box_format, el2['box_points'])):
        final_json.append({""class"":el2[""name""],
                           ""text"":el1[""text""],
                           ""confidence"":el2[""percentage_probability""],
                           ""boxpoints"":None
                          })

Note que, criei uma função que retorna um booleano caso as caixas se interseccionem. Mas o problema é que quero comparar todas as boxes vizinhas e do jeito que fiz, usando zip(foo, poo) ele opera em pares que não necessariamente estão pertos.
Edição: Vale lembrar que o critério de mescla das boxes é simples, basta pegar a menor abcissa (x) e ordenada (y) para xmin e ymin e a maior abcissa e ordenada para xmax e ymax, respectivamente.
","
Vamos por partes.
Em primeiro lugar, foque em como resolver isso para dois dicionários, sem pensar em listas. Dá para fazer isso de forma quase que declarativa, apenas usando as funções min e max para conferir quais os menores/maiores valores mínimos/máximos, respectivamente:
poo = {
      ""xmin"":10,
      ""ymin"":100,
      ""xmax"":70,
      ""ymax"":120,
      ""text"":""fish"",
}
foo = {
      ""class"":""Animal"",
      ""percent"":88.25,
      ""box_points"":[30, 90, 80, 110]
}
new_dict = {
    'class': foo['class'],
    'text': poo['text'],
    'percent': foo['percent'],
    'box_points': {
        'xmin': min(poo['xmin'], foo['box_points'][0]),
        'ymin': min(poo['ymin'], foo['box_points'][1]),
        'xmax': max(poo['xmax'], foo['box_points'][2]),
        'ymax': max(poo['ymax'], foo['box_points'][3]),
    }
}

Tendo isso feito, crie uma função que aceite dois dicionários e retorne um novo dicionário com a estrutura do new_dict acima:
def get_new_dict(poo, foo):
    return {
        'class': foo['class'],
        'text': poo['text'],
        'percent': foo['percent'],
        'box_points': {
            'xmin': min(poo['xmin'], foo['box_points'][0]),
            'ymin': min(poo['ymin'], foo['box_points'][1]),
            'xmax': max(poo['xmax'], foo['box_points'][2]),
            'ymax': max(poo['ymax'], foo['box_points'][3]),
        }
    }

Agora, aplique essa função para cada par de dicionários nas suas listas, usando zip para iterar sobre elas lado-a-lado:
poo_list = [{...}, {...}, {...}, ...]  # sua lista de dicionários poo
foo_list = [{...}, {...}, {...}, ...]  # sua lista de dicionários foo

new_dict_list = []
for poo, foo in zip(poo_list, foo_list):
    new_dict = get_new_dict(poo=poo, foo=foo)
    new_dict_list.append(new_dict)

A lista new_dict_list contém seu resultado esperado.
","
            1
        ","
Seria isso que você quer?
new_dict = foo[0]
new_dict['text'] = poo[0]['text']
new_dict['box_points'] = {i:poo[0][i] for i in poo[0] if i!='text'}

Resultado:
{'class': 'Animal', 'percent': 88.25, 'box_points': {'xmin': 10, 'ymin': 100, 'xmax': 70, 'ymax': 120}, 'text': 'fish'}

","
            -1
        ","['\npython', 'estrutura-de-dados', 'dicionário\n']"
532520,Como sortear 6 números de 1 a 60 sem repetição? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como sortear números de uma lista, de forma aleatória e sem repetições?

                                (2 respostas)
                            


Gerar números aleatórios em Python sem repetir

                                (4 respostas)
                            

Fechada há 5 meses.



Preciso sortear 6 números de 1 a 60 sem nenhuma repetição, como posso fazer?
from random import randint

sorteio = randint(1,60)

print(""Os números sorteados foram:"")

for i in range(6):
  sorteio = randint(1,60)
  print(sorteio)

",,,,,"['\npython', 'python-3.x\n']"
532450,Encontrar latitude e longitude através do cep com python,"
Estou tentando executar um código que encontrei numa resposta aqui mesmo, com a intenção de retornar a latitude e longitude fazendo a busca pela lista de ceps que tenho
O arquivo contém 1078 ceps diferentes
Estou utilizando o google colab para executar esse código
começo instalando a biblioteca
pip install pycep-correios
depois executo esse bloco de código
lista_ceps = []   
with open('ceps_rc.csv') as file:
    next(file)  # Pula o cabeçalho, caso exista
    for row in csv.reader(file):
        lista_ceps.append(row[0])

após isso, executo esse
import pycep_correios
from geopy.geocoders import Nominatim

def extrai_lat_long(cep):
    endereco = pycep_correios.get_address_from_cep(cep)

    geolocator = Nominatim(user_agent=""test_app"")
    location = geolocator.geocode(endereco['logradouro'] + "", "" + endereco['cidade'] + "" - "" + endereco['bairro'])

    return(location.latitude, location.longitude)

e num terceiro momento
with open('ceps_lat_long.csv', 'w') as file:
     cabecalho = ['cep', 'latitude', 'longitude']
     writer = csv.DictWriter(file, fieldnames=cabecalho)

     writer.writeheader() # Escreve o cabeçalho
     for cep in lista_ceps:
         latitude, longitude = extrai_lat_long(cep)
         writer.writerow({'cep': cep, 'latitude': latitude, 'longitude': longitude})

estou tendo problema nessa linha
latitude, longitude = extrai_lat_long(cep)
ao executar essa sequencia, sem que ocorra o erro na linha acima, me é retornado um arquivo em .csv somente com a descrição ""cep, latitude, longitude"" substituindo a tabela com os ceps
Alguém poderia me ajudar?
","
O geolocator pode retornar um None caso não encontre o endereço, gerando um erro quando retorna a location. Um if já resolverá.
def extrai_lat_long(cep):
    endereco = pycep_correios.get_address_from_cep(cep)
    geolocator = Nominatim(user_agent=""test_app"")
    location = geolocator.geocode(endereco['logradouro'] + "", "" + 
    endereco['cidade'] + "" - "" + endereco['bairro'])
    if location:
        return location.latitude, location.longitude
    return 'latitude não encontrada', 'longitude não encontrada'

","
            1
        ",,,"['\npython', 'cep\n']"
532436,Contagem de caracteres de uma coluna em PANDAS,"
Eu tenho um dataframe onde eu consigo retornar as colunas que eu preciso, porém a coluna TELEFONE, contém números com 5 , 8 , 7 caracteres. Eu preciso retornar as colunas que contenham  apenas o telefone com 10 e 11 dígitos.
o script para selecionar as colunas seria o
df.iloc [:, [0,1]]
já pesquisei, em vários lugares e não consigo uma solução para me retornar apenas os telefones que contenham 10 e 11 digitos, mantendo a coluna nome.
","
Se a preocupação é somente com o número de caracteres, veja abaixo:
Criar um dataframe teste
import pandas as pd

df = pd.DataFrame({""telefone"": ['11111111111', '2222222222-', '333-333333', 'abcdef']})

print(df)

Filtrado o dataframe
dataframe_filtrado = df[df.apply(lambda x: len(x[""telefone""]) == 10 or len(x[""telefone""]) == 11, axis=1)]

print(dataframe_filtrado)
      telefone
0  11111111111
1  2222222222-
2   333-333333

Caso queira testar algo mais detalhado, pode usar algo como:
def validar_telefone(row):
    if row[""telefone""]) .......... :   # Testar se o telefone é válido baseado nos critérios.
        return True
    return False


dataframe_filtrado = df[df.apply(validar_telefone, axis=1)]

","
            0
        ",,,"['\npython', 'pandas', 'caracteres\n']"
532335,Discord.py erro no comando calcular,"
Tenho um comando de calculadora com botões, e o comando parece que está tudo bem, porém quando eu inicio o comando, eu recebo esse erro:
discord.ext.commands.errors.CommandInvokeError: Command raised an exception: TypeError: object of type 'type' has no len()

Meu código:
def calculator(self, exp):
        o = exp.replace('x', '*')
        o = o.replace('÷', '/')
        result = ''
        try:
            result=str(eval(o))
        except:
            result='Ocorreu um erro.'
        return result

    @commands.command()
    async def calcular(self, ctx):
        m = await ctx.send(content='Carregando calculadora...')
        expression='None'
        delta = datetime.datetime.utcnow() + datetime.timedelta(minutes=5)
        e = discord.Embed(title=f""{ctx.author.name}\""s | {ctx.author.id}"", description=expression, timestamp=delta)
        await m.edit(components=Button, embed=e)
        while m.created_at < delta:
            res = await bot.wait_for('button_click')
            if res.author.id == int(res.message.embeds[0].title.split('|')([1])) and res.message.embeds[0].timestamp < delta:
                expression = res.message.embeds[0].description
                if expression == 'None' or expression == 'Ocorreu um erro.':
                    expression = ''
                if res.component.label == 'Exit':
                    await res.respond(content='Calculadora fechada.', type=7)
                    break
                elif res.component.label == '←':
                    expression = expression[:-1]
                elif res.component.label == ""Clear"":
                    expression=None
                elif res.component.label == ""="":
                    expression = self.calculator(expression)
                else:
                    expression += res.component.label
                f=discord.Embed(title=f""{res.author.name}\""s calculator|{res.author.id}"", description=expression, timestamp=delta)
                await res.respond(content='', embed=f, component=Button, type=7)

Se alguém puder ajudar a resolver esse erro, serei grato.
","
Muda alguma coisa se trocar:
result=str(eval(o))

por isso aqui:
result=int(str(eval(o)))

?
","
            0
        ",,,"['\npython', 'syntax-error', 'comandos\n']"
532303,O comando to_csv() está salvando uma coluna int em double no meu csv,"

Este é meu df no pyspark (resultado)
Quando eu uso:
(file_name_out=""TB_CAMPAIGN_Avon""  path_out=""/home/257615628/trusted_to_refined""  resultado.toPandas().to_csv(f'{path_out}/{file_name_out}.csv',header = 'true', sep=""|"")
Meu output do cvs:

","
tente fazer isto:
df['coluna com double'] = pd.to_numeric(df['coluna com double'], downcast='signed')
ou
df['coluna com double'] = pd.to_numeric(df['coluna com double'], downcast='int')
","
            -4
        ",,,"['\npython', 'pandas', 'spark\n']"
532254,Como iniciar o chrome em uma versão específica com o selenium em python?,"
Fiz um script que utiliza o Selenium para automatizar umas páginas web e ele é utilizado por algumas pessoas. Porém, hoje ele não funcionou porque o chromedriver estava numa versão inferior ao navegador Chrome, que sofreu uma atualização. Minha dúvida é: eu consigo iniciar o Chrome com uma versão específica? No caso, com a mesma versão do chromedriver? É inviável ter que ficar atualizando sempre a versão chromedriver pra ficar igual com o Chrome de todos que utilizam o programa.
Obrigado!
EDIT:
Deu certo com a resposta do amigo lmonferrari, mas precisei fazer uns ajustes pois também uso o webdriver.Chrome(options = option) e ele não aceitou outro argumento. Pesquisei e achei como solução usar o Service(ChromeDriverManager().install()) armazenado em uma variável e depois colocar como argumento no webdriver.Chrome(). Fiz o seguinte:
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service   

s = Service(ChromeDriverManager().install()) #só precisa fazer o que está nessa linha e depois colocar a variável como argumento service                    
option = webdriver.ChromeOptions()                                                 
option.add_experimental_option(""prefs"", {                                  
    ""download.prompt_for_download"": True})                   
with webdriver.Chrome(service = s, options=option) as driver:
    #seu código aqui

obrigado!
","
Você pode utilizar o: webdriver-manager.
Ele verifica a versão do seu chrome e faz o download do driver.
Para instalar basta utilizar o pip: pip install webdriver-manager.
Exemplo de uso:
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager

driver = webdriver.Chrome(ChromeDriverManager().install())

","
            2
        ",,,"['\npython', 'selenium', 'google-chrome', 'selenium-webdriver\n']"
532243,Diferença no uso da '/' e '\' ao definir um caminho no diretório,"
Eu estava montando um código que se utiliza de leitura e escrita de arquivos (.txt e .csv) em Python e ao copiar o caminho pelo explorador de arquivos, me deparei com o caso onde ele copiou um dos caminhos com / e outro com \.
Ao tentar executar o código, ele deu erro por estar usando / simples, então usei // e \\ e ele rodou corretamente. Mas isso me deixou confuso numa coisa, qual a diferença no uso da \ e / e o que elas diferem de // e \\ ao se definir um caminho de diretório em um programa?
arquivo = ""C:\\Users\\henrique\\Desktop\\py\\arquvio.txt"" #Rodou no código
#arquivo = ""C:\Users\henrique\Desktop\py\arquvio.txt"" #Não rodou no código
#arquivo = ""C://Users//henrique//Desktop//py//arquvio.txt"" #Rodou no código
#arquivo = ""C:/Users/henrique/Desktop/py/arquvio.txt"" #Rodou no código
file = open(arquivo, 'w+', encoding='utf-8')
file.close()

","
O Linux usa o / como separador do caminho de arquivos e diretórios. O Windows já usa \.
Como Python escolheu usar a barra invertida como caractere de escape, ou seja, o que vem a seguir deve ter um tratamento especial, esse caractere não pode ser usada de forma normal como um caractere comum. Mas ela pode escapar ela mesma, então uma dupla barra faz com que ao que vem a seguir, outra barra invertida, seja considerado um caractere normal. Por isso um não funcionou.
Como parece estar rodando no Windows então funcionará o \\.
Se usar a string bruta onde a barra invertida não tem funcionalidade especial também funciona:
arquivo = r""C:\Users\henrique\Desktop\py\arquvio.txt""

O Python trata as barra normal no Windows de forma correta também.
O ideal é usar o os.pathsep para garantir que o sistema rode bem em qualquer sistema operacional. Pelo menos para um casos assim. Pode ser necessário outros cuidados em toda aplicação para rodar bem em todos OSs.
","
            5
        ",,,"['\npython', 'string', 'diretório', 'path\n']"
532224,discord.py não mostra o avatar quando menciona,"
Tenho um comando de avatar e ele mostra o '!avatar' e o '!avatar [id]', porém quando eu uso o '!avatar @user' ele dá esse erro:
discord.ext.commands.errors.BadArgument: Converting to ""int"" failed for parameter ""userid"".

E eu queria que ele mostrasse o avatar de um usuário mencionado, se alguém puder me ajudar, serei grato.
Meu código:
@commands.command()
    async def avatar(self, ctx, userid: int = None):
        if userid == None:
            user = ctx.author
        else:
            user = await bot.fetch_user(userid)

        icon_url = user.avatar_url
        avatarEmbed = discord.Embed(title=f'{user.name}', description=f'**Clique [aqui]({user.avatar_url}) para baixar a imagem.**', timestamp=datetime.datetime.utcnow(), color=discord.Color.dark_blue())
        avatarEmbed.set_image(url=f'{icon_url}')
        await ctx.send(embed=avatarEmbed)

","
Você especificou que o argumento userid precisa ser um valor inteiro, logo, utilizar uma menção (@fulano) resulta em erro na conversão realizada pelo discord.py. Você tem duas opções:

Manter userid como inteiro e utilizar o comando especificando o ID do usuário, por exemplo: !avatar 123456789

ou

Mudar a assinatura para userid ser do tipo discord.User. Nesse caso, você não precisaria dar um fetch no usuário pois você já terá acesso aos dados do mesmo, inclusive o avatar_url. Ficando assim:

@commands.command()
async def avatar(self, ctx, user: discord.User = None):

    if not user:
        return

    embed = discord.Embed(
        title=user.name,
        description=f'**Clique [aqui]({user.avatar_url}) para baixar a imagem.**',
        timestamp=datetime.datetime.utcnow(),
        color=discord.Color.dark_blue()
    )
    embed.set_image(url=user.avatar_url)

    await ctx.send(embed=embed)

","
            0
        ",,,"['\npython', 'discord.py\n']"
532124,Botão salvar no tkinter Python,"
Preciso saber como colocar uma função para o usuário ao clicar no botão Salvar, escolher o caminho e o nome do arquivo.
No meu programa o usuario digita algumas informações nas Entry e pelo Canvas gera um PDF com essas informações, img e linhas.
Eu consegui fazer o botão abrir a janela de salvar, mas na hora de salvar o PDF fica em branco e corrompido.
def save_relatorio(self):
    self.gerar_relatorio()

    self.arquivo = filedialog.asksaveasfile(mode='w', defaultextension='.pdf',
                                            filetypes=(('Arquivos PDF', '*.pdf'), ('Todos arquivos', '.*')))

Se alguem poder me ajudar fico agradecido! Sou iniciante em programação.
","
Olhando o código que você passou, seu arquivo está em branco por quê supostamente você não está passando as variáveis no seu método save_relatório, Que deveria estar escrito assim:
def save_relatorio(self,informacoes,imagens,linhas):

Ai nessa função de salvar, você criaria o arquivo passando os dados que foram recebidos na função quando o botão foi acionado na tela anterior... O botão provavelmente vai estar escrito assim.
botao = Button(master, text=""Salvar Arquivo"", command=lambda:(save_relatorio(informacoes,imagens,linhas))).pack()

Lógica desta operação, ao clicar no botão você irá acionar uma função, mas para essa função ser acionada com as informações que você deseja, deve passar as mesmas como parâmetros na hora que for chamar a função com o botão.
","
            -1
        ",,,"['\npython', 'tkinter', 'canvas\n']"
532117,Como interromper um script em andamento com uma tecla?,"
Fiz um script em um loop python que salva vários relatórios em pdf e o transformei em executável com o pyinstall. Quando termina de salvar, ele sai em segurança, mas caso eu não queira esperar até o final para poder sair, eu preciso fechar uma espécie de prompt que abre, mas daí buga tudo e ele continua fazendo comandos mesmo fechado e precisa matar o processo no gerenciador de tarefas... enfim, muito complicado para um usuário comum.
Queria saber se não tem uma forma de apertar um ""ESC"", por exemplo, e simplesmente sair em segurança do executável.
Já tentei Ctrl C, Ctrl D, PauseBreak... nada funciona
Segue um exemplo de sair de um loop pressionando uma tecla, mas eu preciso de algo mais sofisticado, pois isso só funcionaria depois que executasse tudo que tem dentro do while, mas eu preciso que interrompa na hora que eu quiser. Se tivesse um key is NOT pressed, ou algo do tipo, seria uma maravilha, pois colocaria o script dentro dessa condição e na hora que apertasse a tecla, iria quebrar o loop.
a = 0

while a == 0:
   print('oi mundo')
   time.sleep(1)
   if keyboard.is_pressed(""q""):
      a = 1
      print('saiu')


sys.exit()

EDIT:
A solução do Zé Reis foi muito boa!! Mas tem um problema: eu tenho um for dentro do while, e aí esse método não funciona. Olha o exemplo:
while a['value'] == 0:
    # do something
    b =[1,2,3,4,5,6,7,8,9]
    print('>>> Olá Mundo')
    for n in b:
        print(n)
        time.sleep(1)
    time.sleep(1)

print('Saiu')

o resultado é o seguinte
>>> Olá Mundo
1
2
qVocê pressionou a tecla
3
4
q5
6
7
q8
9
Saiu

como pode ver, apertei 'q' 3 vezes, mas ele só saiu no final do for. Você sabe como solucionar isso? De qualquer forma, muito obrigado pela resposta!
","
Minha solução para isso foi criar uma função separada para monitorar apenas o pressed da key rodando em Thread, e transformei a variavel a em um dicionário pois da forma em que ela estava a alteração de seu valor não funcionou de forma correta, ficou da seguinte forma:
import keyboard, time, sys
from threading import Thread

a = {""value"": 0}

def monitorKey():
    while True:
        if keyboard.is_pressed('q'):
            print('Você pressionou a tecla')
            a['value'] += 1 
            break                       


Thread(target = monitorKey).start()

b = [1,2,3,4,5,6,7,8]

while a['value'] == 0:
    print('>>> Olá Mundo')
    for n in b:        
        #Condição de parada
        if(a['value'] != 0):
            break
        print(n)
        time.sleep(1)

    time.sleep(1)       

print('Saiu')


","
            2
        ",,,"['\npython', 'loop', '.exe\n']"
532064,Filtrar campos únicos utilizando Pandas Python,"
no arquivo 1.xlsx existem 2 colunas com datas, consegui verificar as ocorrências das datas nas colunas utilizando o 'isin' retornou 19 datas que não se repetem e agora preciso saber quais são essas datas para tratar, alguém tem ideia de como poderia fazer para o Python ler essas datas diferentes e imprimir? Grato desde já.
read = pd.read_excel(""./1.xlsx"")

df1 = read['Eventos']
df2 = read['Timestamp']

result = read['Eventos'].isin(read['Timestamp']).value_counts()


print(result)


","
Eu acho que isso aqui vai funcionar:
result = read.loc[read.Eventos.isin(read.Timestamp) == False]
print(result.head())

Da próxima vez, põe um exemplo dos seus dados pra quem for te responder já te dar uma resposta testada.
","
            0
        ",,,"['\npython', 'excel', 'pandas\n']"
532025,Tratar números float com vírgula e ponto separando a parte inteira da decimal,"
Digamos que tenho o seguinte dataframe e preciso passar a coluna A para ponto flutuante.
import pandas as pd

df = pd.DataFrame({
    'A': ['1', '2.0', '3.000,0'],
    'B': ['a',   'b',       'c']})






A
B




0
1
a


1
2.0
b


2
3.000,0
c




Quando eu tento fazer esta operação com o astype('float') o Python me retorna um ValueError porque não é capaz de de converter o 3,0 para ponto flutuante por causa da vírgula.
df.A.astype('float')

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
~\AppData\Local\Temp/ipykernel_2792/3410833940.py in <module>
      5     'B': ['a',   'b',   'c']})
      6 
----> 7 df.A.astype('float')

[...]

c:\python39\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
   1199     if copy or is_object_dtype(arr.dtype) or is_object_dtype(dtype):
   1200         # Explicit copy, or required since NumPy can't view from / to object.
-> 1201         return arr.astype(dtype, copy=True)
   1202 
   1203     return arr.astype(dtype, copy=copy)

ValueError: could not convert string to float: '3.000,0'

Sendo assim, como posso fazer esta conversão de forma automática e preservar os valores do meu dataframe?
","
Partindo do princípio que o o string '3.000,0' represente o número 3, você pode fazer:
df['A'] = df['A'].str.replace("","", """").astype(float)
print(df['A'])

output:
0    1.0
1    2.0
2    3.0
Name: A, dtype: float64

Agora, se o string '3.000,0' representar o número 3000, então é mais complicado porque você tem duas notações misturadas na mesma coluna. Nesse caso o ideal seria corrigir e validar a entrada dos dados ainda na fonte, na hora em que são inseridos para sua tabela ou banco de dados, antes de chegar no Python.
","
            4
        ","
Depois de muito problema aparecendo criei uma função BOLADA que trata uma enorme variedade de números reais. Você pode utilizar essa função no pandas atrvés do apply.
df['Coluna'] = df['Coluna'].apply(formata_numeros)

Em resumo ela faz as seguintes transformações:
In [1]: formata_numeros('123,456,789.1011')
Out[1]: 123456789.1011

In [2]: formata_numeros('R$ 123.456.789,1011')
Out[2]: 123456789.1011

In [3]: formata_numeros('98,99%')
Out[3]: 0.9899

In [4]: formata_numeros('98.99%')
Out[4]: 0.9899

In [5]: formata_numeros('123')
Out[5]: 123

A base que utilizei para criar a função foi:

Remover caracteres que irão me atrapalhar na conversão para int ou float, como: '%$R°º()'
Dividir o número em partes onde há ponto ou vírgula. Ou seja, o número '123,456.789,123.999,' resulta na seguinte lista: ['123', '456', '789', '123', '999']
Realizar a seguinte concatenação: lista toda sem o último elemento (['123', '456', '789', '123']) + um ponto ('.') + último elemento ('999'). Que resulta em '123456789123.999,'.

def formata_numeros(num, alphas=(), decimals=None):
    """"""
    Transforma em inteiro ou real dependendo do formato que o número apresentar.

    1. Parâmetros:
        - num: (str) string numérica a ser transformada
        - alphas: (iter) conjunto de caracteres que devem ser 
        removidos antes do número ser transformado em float.
        - decimal_houses: (int) representa a quantidade de casas decimais que o
        número terá ao ser retornado.
    
    2. Exemplos:
    In [1]: formata_numeros('123,456,789.1011')
    Out[1]: 123456789.1011

    In [2]: formata_numeros('R$ 123.456.789,1011')
    Out[2]: 123456789.1011

    In [3]: formata_numeros('98,99%')
    Out[3]: 0.9899
    >>> 
    """"""
    import re
    if num:
        num = str(num).strip()
        original = num
        percentage_pattern = re.compile(""([0-9])+[,|.]([0-9])+%"")
        percentage = bool(percentage_pattern.match(num))
        alphas = set((*alphas, *'%$R°º()'))
        num = ''.join([c for c in num if c not in alphas])
        num = re.split('\,|\.', num)
        try:
            if len(num) > 1: # É FLOAT
                num = float(''.join(num[:-1])+'.'+num[-1])
                if decimals and not percentage:
                    return format(num, f'.{decimals}f')
                elif decimals and percentage:
                    return format(num/100, f'.{decimals}f')
                elif not decimals and not percentage:
                    return num
                elif not decimals and percentage:
                    return num/100
            else: # É INTEIRO
                if percentage:
                    return int(''.join(num))/100
                else:
                    return int(''.join(num))
        except ValueError:
            num = ''.join(num[:-1]) + '.' + num[-1]
            raise ValueError(
                f""Não foi possível converter o número '{original}' para float"")

","
            0
        ","['\npython', 'pandas', 'float\n']"
532023,Combinando e rotacionando dois patches no matplotlib,"
Estou tentando simular um teste feito com feijões no matplotlib, e para isso estou usando duas elipses combinadas, como na figura:

feijao = Ellipse(xy=(2,2), width=2.5, height = 2, angle = 120)
feijao2 = Ellipse(xy=(2,2.6), width=2.5, height = 2, angle = 75)

fig, ax = plt.subplots(subplot_kw={'aspect': 'equal'})

ax.add_artist(feijao)
feijao.set_facecolor('#a38d65')
ax.add_artist(feijao2)
feijao2.set_facecolor('#a38d65')

    
ax.set_xlim(0,10)
ax.set_ylim(0,10)

plt.show()

Porém eu preciso que o plot contenha mais de um feijão, e que eles variem levemente de angulação. Eu tentei utilizar a própria construção das elipses para isso, mas como cada elipse vai rotacionar em torno do seu próprio eixo, não funciona com todos os feijões.

ang=np.random.rand(10)

eli = [Ellipse(xy=(2+(5*i), 2+(7*j)),
                   width=2.5, height=2,
                   angle = ang[i]*360)
       for i in range(10) for j in range (5)]
eli2 = [Ellipse(xy=(2+(5*i), 2.6+(7*j)),
                   width=2.5, height=2,
                   angle = ang[i]*360-45)
       for i in range(10) for j in range(5)]

fig, ax = plt.subplots(subplot_kw={'aspect': 'equal'})

for e in eli:
    ax.add_artist(e)
    e.set_facecolor('#a38d65')
for e in eli2:
    ax.add_artist(e)
    e.set_facecolor('#a38d65')

ax.set_xlim(0, 50)
ax.set_ylim(0, 35)


plt.show()

Procurei na documentação e não encontrei, mas teria alguma forma de ""combinar"" as duas elipses que formam o feijão, e depois replicar esta formação, rotacionando as figuras?
","
Pode fazer-se isso criando uma PatchCollection, copiando isso e aplicando rotacao e translacao a cada copia:
Por exemplo:
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import Ellipse
from matplotlib.collections import PatchCollection # acrescentei isto
import matplotlib as mpl
import copy # importar o copy para copiar PatchCollection()

ang=np.random.rand(10)

eli = [Ellipse(xy=(2+(5*i), 2+(7*j)),
                   width=2.5, height=2,
                   angle = ang[i]*360,
                   edgecolor=""black"")
       for i in range(10) for j in range (5)]
eli2 = [Ellipse(xy=(2+(5*i), 2.6+(7*j)),
                   width=2.5, height=2,
                   angle = ang[i]*360-45,
                    edgecolor=""black"")
       for i in range(10) for j in range(5)]

fig, ax = plt.subplots(subplot_kw={'aspect': 'equal'})

e1 = eli[0] #Isto e' apenas criar uma forma qualquer para exemplo
e2 = eli2[0]

p = PatchCollection([e1,e2]) # juntar duas elipses

pcopy = copy.copy(p) # criar uma copia

# aplicar uma transformacao com rotacao e translacao a copia
tr = mpl.transforms.Affine2D().rotate_deg(-45).translate(20,20) + ax.transData
pcopy.set_transform(tr)

ax.add_collection(p)
ax.add_collection(pcopy)

ax.set_xlim(0, 50)
ax.set_ylim(0, 35)

plt.show()


","
            1
        ",,,"['\npython', 'matplotlib\n']"
532005,funcao soma_ll que recebe uma lista de listas e retorna a soma de todos os números,"
def soma_ll(lista):

     return  lista[0] + soma_ll(lista[1:])

Por que o meu teste não roda?
def test_600_soma_ll(self):

    self.assertEqual(soma_ll([1,2,3]),6)
    self.assertEqual(soma_ll([1,2,3,4]),10)
    self.assertEqual(soma_ll([-1,-2,-3,-4]),-10)
    self.assertEqual(soma_ll([1]),1)
    self.assertEqual(soma_ll([]),0)
    self.assertEqual(soma_ll([-3]),-3)
    self.assertEqual(soma_ll([[],[]]),0)
    self.assertEqual(soma_ll([[1],[2]]),3)
    self.assertEqual(soma_ll([[[1,2,3],[4,5],11],9,8]),43)
    self.assertEqual(soma_ll([[[1,2,3],[4,5],11,4],9,8,4]),51)
    self.assertEqual(soma_ll([[-1],[1]]),0)
    self.assertEqual(soma_ll([[1],[[2],1]]),4)

","
Não funciona porque chega uma hora em que a sub-lista gerada é vazia e ocorre um  IndexError. Por exemplo, se a lista é [1, 2]:

a função soma lista[0] (o número 1) com soma_ll(lista[1:]) (ou seja, soma_ll([2]))


soma_ll([2]) soma lista[0] (o número 2) com soma_ll(lista[1:]) (ou seja, soma_ll([]))


soma_ll([]) tenta pegar lista[0], mas como a lista é vazia, não existe o índice zero, então ocorre um IndexError - veja



Para corrigir, você deve colocar uma condição de parada, que é quando a lista está vazia:
def soma_ll(lista):
    if not lista:
        return 0
    return  lista[0] + soma_ll(lista[1:])

print(soma_ll([1, 2, 3])) # 6

Se a lista é vazia, retorna zero (pois em uma lista vazia, a soma dos seus elementos - inexistentes - é zero).
if not lista verifica se a lista é vazia, porque listas vazias são consideradas False. Mas você também poderia fazer if len(lista) == 0.

E sempre vale lembrar que recursão não é a melhor forma de somar os elementos de uma lista. Para isso já existe até algo pronto na linguagem, bastando fazer sum(lista).

Outro detalhe é que em muitos casos você está somando listas dentro de listas (dentro de listas, dentro de listas, etc). Neste caso você precisa verificar se o elemento sendo somado é um número ou uma lista (e se for uma lista, deve chamar a função recursiva novamente):
def soma_ll(lista):
    if not lista:
        return 0
    if isinstance(lista[0], list):
        sum = soma_ll(lista[0])
    else:
        sum = lista[0]
    return sum + soma_ll(lista[1:])

print(soma_ll([[[1, 2, 3], [4, 5], 11, 4], 9, 8, 4])) # 51
print(soma_ll([[], []])) # 0

Aqui eu simplifiquei bastante, pois se não for lista, eu considero que é número. 
","
            2
        ",,,"['\npython', 'recursão', 'soma\n']"
532001,Como faço para finalizar o loop usando while em um determinado tempo?,"
Esse código é um exemplo, preciso fazer ele finalizar em algum momento usando while
while True:        
        #Clicar no link da planilha
        pyautogui.click(x=542, y=255)
        time.sleep(2)
        pyautogui.click(x=542, y=255)
        pyautogui.press('left')
        pyautogui.hotkey('ctrl', 'c')
    
        #Acessar o site pelo chrome
        pyautogui.click(x=741, y=357)
        pyautogui.hotkey('Ctrl', 't')
        pyautogui.hotkey('ctrl', 'v')
        pyautogui.press('enter')
        time.sleep(2)
    
        #Localizar situação cadastral
        pyautogui.hotkey('Ctrl', 'f')
        time.sleep(2)
        pyautogui.write('Situacao')
        pyautogui.press('esc')
        pyautogui.doubleClick(x=704, y=466)
        pyautogui.hotkey('ctrl', 'c')
    
        #Colocar dados no excel
        pyautogui.click(x=542, y=255)
        time.sleep(2)
        pyautogui.click(x=542, y=255)
        time.sleep(2)
        pyautogui.press('f2')
        pyautogui.hotkey('ctrl', 'v')
        time.sleep(2)
        pyautogui.press('enter')
        pyautogui.press('up')
        pyautogui.press('alt')
        pyautogui.press('c')
        pyautogui.press('zc')
        pyautogui.press('o')
        pyautogui.press('u')
        pyautogui.press('n')
        pyautogui.click(x=752, y=231)
        pyautogui.hotkey('Ctrl', 'w')
        time.sleep(5)

Eu uso o time.sleep no final para poder apertar o botão de finalizar.
","
Se vc deseja parar a execução do programa em um determinado tempo, faça da seguinte forma usando o module time. Você irá definir o tempo para condição de parada timebreak em segundos, após isso deverá iniciar seu timer timestart e por fim irá subtrair o tempo percorrido com o tempo de inicio, segue o exemplo:
import time

# define tempo para condição de parada em segundos
timebreak = 30

#Iniciar temporizador
timestart = time.time()

while True:
    #Realizar tarefa desejada
    ##########################
    
    # pegando tempo percorrido
    timenow = time.time()
    elapsedtime = (timenow - timestart)    

    # validando condição de parada 
    if(elapsedtime >= timebreak):
        print(""parando..."")
        break

","
            3
        ",,,"['\npython', 'loop', 'while\n']"
531927,python executa mas não envia nada na saída [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 5 meses.




                        Melhore esta pergunta
                    



por algum motivo, esse código está rodando, aparece que executou mas não tem resultado nenhum, alguém pode me ajudar?
def tempo(horaEntrada, minutoEntrada, horaSaida, minutoSaida):

  horaEntrada = int(input(""digite a hora de entrada ""))
  minutoEntrada = int(input(""digite o minuto da entrada ""))
  horaSaida = int(input(""digite a hora de saida ""))
  minutoSaida = int(input(""digite o minuto de saida ""))


  horaTotal = (horaSaida - horaEntrada)
  minutoTotal = (minutoSaida + minutoEntrada)

  return horaTotal, minutoTotal

  if minutoTotal >= 60:
    minutoTotal = minutoTotal - 60


  print(f""o horario de permanencia foi de {horaTotal}:{minutoTotal}"")

  if horaEntrada >= 24:
    print(""erro, a hora digitada é inválida"") 

  elif minutoEntrada >= 60:
    print(""erro, os minutos são inválidos"")

  elif horaSaida >= 24:
    print(""erro, a hora digitada é inválida"") 

  elif minutoSaida >= 60:
    print(""erro, os minutos são inválidos"")


  valorT = horaTotal * 7
  print(f""o valor total é R${valorT}"") 

","
Código Python é interpretado pela indentação. Tudo que está abaixo de return horaTotal, minutoTotal está sendo considerado como dentro da função, porém não é executado porque ao chegar no comando return, a função acaba.
","
            2
        ","
Quando a função foi determinada fez alguns parametros como obrigatorios a serem passados, e logo quando entra na função solicita novamente isso pode acarretar a erros aleatórios também
","
            -2
        ",['\npython\n']
531921,Problema ao criar vários usuários diferentes no django rest framework,"
Estou com um problema ao criar mais de um usuário e logar no django rest framework, estou usando um gerênciador de usuários personalizado para a criação de dois tipos de usuarios, pesquisadores e ofertantes, mas quando crio os meus usuarios e tento logar apenas consigo retornar um objeto de pesquisadores apesar de os dois tipos de usuários estarem criados no banco quando uso um comando GET   para verificar
models.py
class Users(models.Model):
    is_admin = models.BooleanField(default=False)
    is_active = models.BooleanField(_('active'), default=True)
    is_staff = models.BooleanField(default=False)
    username = models.CharField(_(""Username""), max_length=50)
    cpf = models.CharField(_(""CPF""), max_length=11)
    phone = models.CharField(_(""Phone""), max_length=11, unique=True)
    siape = models.IntegerField(_(""Siape""))
    email = models.EmailField(_(""Email address""), max_length=254, unique=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        abstract = True

class Bidder(Users, AbstractBaseUser):
    type = models.CharField(_(""type""), max_length=50)
    position = models.CharField(_(""Position""), max_length=50)
    prorectory = models.CharField(_(""Prorectory""), max_length=50)

    EMAIL_FIELD = 'email'
    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['username']

    @property
    def token(self):
        token = jwt.encode(
            {
                'username': self.username,
                'email': self.email,
                'exp': datetime.utcnow() + timedelta(hours=24),
            },
            settings.SECRET_KEY,
            algorithm='HS256'
        )
        return token
    objects = BidderManager()

    # For checking permissions. to keep it simple all admin have ALL permissons
    def has_perm(self, perm, obj=None):
        return self.is_admin

    # Does this user have permission to view this app? (ALWAYS YES FOR SIMPLICITY)
    def has_module_perms(self, app_label):
        return True


class Researcher(Users, AbstractBaseUser):
    curriculum_lattes = models.URLField(
        _(""curriculum""), max_length=255, unique=True)
    resume = models.TextField(_(""Resume""), blank=True, default='')

    EMAIL_FIELD = 'email'
    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['username']

    @property
    def token(self):
        token = jwt.encode(
            {
                'username': self.username,
                'email': self.email,
                'exp': datetime.utcnow() + timedelta(hours=24),
            },
            settings.SECRET_KEY,
            algorithm='HS256'
        )
        return token
    objects = ResearcherManager()

my_manager.py
class ResearcherManager(BaseUserManager):
    def create_user(
        self, username, email, cpf, curriculum_lattes,
        phone, siape, resume, password=None,
    ):
        if not username:
            raise ValueError('The given username must be set')

        if not email:
            raise ValueError('The given email must be set')

        GlobalUserModel = apps.get_model(
            self.model._meta.app_label, self.model._meta.object_name)
        username = GlobalUserModel.normalize_username(username)

        campus = users.models.Campus.objects.latest('id')
        academic_background = users.models.AcademicBackground.objects.latest(
            'id')

        researcher = self.model(
            username=username,
            email=self.normalize_email(email),
            cpf=cpf,
            curriculum_lattes=curriculum_lattes,
            resume=resume,
            phone=phone,
            siape=siape
        )
        researcher.password = make_password(password)
        researcher.save(using=self._db)
        return researcher


class BidderManager(BaseUserManager):
    def create_user(
        self, username, email, cpf, phone, siape, type,
        prorectory, password=None
    ):
        if not username:
            raise ValueError('The given username must be set')

        if not email:
            raise ValueError('The given email must be set')

        GlobalUserModel = apps.get_model(
            self.model._meta.app_label, self.model._meta.object_name)
        username = GlobalUserModel.normalize_username(username)

        
        bidder = self.model(
            username=username,
            email=self.normalize_email(email),
            cpf=cpf,
            phone=phone,
            siape=siape,
            type=type,
            prorectory=prorectory
        )
        bidder.password = make_password(password)
        bidder.save(using=self._db)
        return bidder


","
Só para salvar caso alguém sofra com o mesmo problema de authenticação de multiplos usuários, quando estava chamando o metodo authenticate ele funcionava apenas para uma tabela usuários, depois de longos estresses e analize encontrei o problema na authenticação do backend, que verificava apenas em uma modelo independente qual eu passasse na view.
Solução
Criei um novo backend e determinei manualmente a qual tabela ele deveria analizar, assim declarei meus backends em settings.py e deu tudo certo.
","
            0
        ",,,"['\npython', 'django', 'login', 'token', 'django-rest-framework\n']"
531876,Como reallizar um post em uma url https ignorando o certificado ssl ou passando os parâmetros para validar o certificado?,"
Meu código (gerado pelo postman), via postman funciona normalmente, via PowerShell também.
import requests
url = ""https://tamcmdb.tivit.com/mctwpsapi/v1/api/new?""
payload={}
files={}
headers = {}
response = requests.request(""POST"", url, headers=headers, data=payload, files=files)
print(response.text)

Minha dúvida é a seguinte, atualmente o código abaixo funciona quando o POST é feito em um ambiente dev, onde a API tem o endereço http://localhost/xpto, porém, quando usado em produção, onde o endereço é https, sempre eu retorna o erro abaixo:
HTTPSConnectionPool(host='tamcmdb.tivit.com', port=443): Max retries exceeded with url: /mctwpsapi/v1/api/new (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))
During handling of the above exception, another exception occurred:
During handling of the above exception, another exception occurred:
File ""D:\DEV\Python\MCT\BBL.py"", line 6, in <module> (Current frame)
response = requests.request(""POST"", url, headers=headers, data=payload, files=files)

Tentei o comando verify=False para ignorar, Tentei com o comando, mas não funciona, gera o erro abaixo:
('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))
During handling of the above exception, another exception occurred:
During handling of the above exception, another exception occurred:
File ""D:\DEV\Python\MCT\BBL.py"", line 6, in <module> (Current frame)
response = requests.request(""POST"", url, headers=headers, data=payload, files=files, verify=False)

Socorro
",,,,,"['\npython', 'post', 'http-request', 'request', 'https\n']"
531857,TypeError: iniciar() missing 1 required positional argument: 'self' [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 5 meses.




                        Melhore esta pergunta
                    



Estou desenvolvendo um programa simples, de controle de gastos em Python, com interface gráfica, o PySimpleGUI, o aplicativo até é executado pelo PyCharm, mas depois que fecho o app, ele não retorna os dados, apenas esse erro:

Traceback (most recent call last):   File
""C:\Users\User\Desktop\finin\finan.py"", line 31, in 
TelaPython.iniciar() TypeError: iniciar() missing 1 required positional argument: 'self'

Trecho do código:
import PySimpleGUI as sg

class TelaPython:
    def _init_(self):
        self.values = 'values'
        self.button = 'button'
    pass


layout = [
        [sg.Text('Quanto você ganhou hoje?')],
        [sg.Text('Data:   '), sg.Input(size=(16, 0), key='data')],
        [sg.Text('Ganhos:'),sg.Input(size=(15,3), key='ganhos')],
        [sg.Text('Gastos:'), sg.Input(size=(15,0),key='gastos')],
        [sg.Button('Calcular', key='calcular')]
]

janela = sg.Window(""Dados do Usuário"").layout(layout)

button, values = janela.Read()

def iniciar(self):
    data = self.values['data']
    ganhos = self.values['ganhos']
    gastos = self.values['gastos']
    print(f'data: {data}')
    print(f'ganhos: {ganhos}')
    print(f'gastos: {gastos}')


TelaPython.iniciar()

","
Erros
No seu código você está chamando o método iniciar() da classe TelaPython(), através do comando TelaPython.iniciar(), com isto o seu sistema acha que tem um método chamado iniciar() na sua classe, porém se você analisar o seu código, não contém o método iniciar() dentro da sua classe.
Um outro erro que contém o seu código é o button calcular que quando clica não exibe os dados de data, ganhos e gastos, ou seja não tem um event para o seu button  calcular para exibir os dados.
Código
Elaborei um código que não contém os erros descritos acima. Obs: após você clicar no botão de calcular ele exibe os dados no console e não fecha a interface gráfica.
Código:
import PySimpleGUI as sg  
  
  
def telaPython():  
    layout = [  
            [sg.Text('Quanto você ganhou hoje?')],  
            [sg.Text('Data:   '), sg.Input(size=(16, 0), key='data')],  
            [sg.Text('Ganhos:'),sg.Input(size=(15,3), key='ganhos')],  
            [sg.Text('Gastos:'), sg.Input(size=(15,0),key='gastos')],  
            [sg.Button('Calcular', key='calcular')]  
    ]  
  
    return sg.Window(""Dados do Usuário"", layout, finalize=True)  
  
janela = telaPython()  
  
while True:  
    window, event, values = sg.read_all_windows()  
    if event == sg.WINDOW_CLOSED:  
        break  
  
     if event == 'calcular':  
        print(f'data: {values[""data""]}')  
        print(f'ganhos: {values[""ganhos""]}')  
        print(f'gastos: {values[""gastos""]}')
 

Resultado após executar o código:

Para mais detalhes sobre o PySimpleGUI, basta acessar este site PySimpleGui
","
            3
        ",,,['\npython\n']
531847,Por que as chamadas de atributos não definidos na classe é possível?,"
Não sei se isso é um comportamento padrão em POO, mas pelo que tenho estudado, quando coloco o objeto.metodo_ou_atributo deveria chamar algum método ou atributo que foi definido na classe previamente, mas no trecho do código abaixo há a classe Pessoa e dentro dessa classe só está definido o atributo nome. Ao instanciar essa classe p1 = Pessoa(""João"") o nome ""João"" vai para o atributo self.nome. Até ai tudo bem.
Mas por que p1.outra_coisa = ""Carlos"" é aceito, se outra_coisa não está definido como atributo da classe Pessoa? Estou criando algum atributo temporário no objeto ou algo do tipo? Isso é alguma má pratica que deve ser evitada?
class Pessoa:
    def __init__(self, nome: str):
        self.nome = nome


p1 = Pessoa(""João"")
p1.outra_coisa = ""Carlos""

print(p1.outra_coisa)
print(p1.nome)

","
Quase nada é um comportamento de POO. Orientação a objeto é algo secundário da programação e não tem o valor que algumas pessoas acham que tem. OO é aprendido errado pela maioria das pessoas, se é que pode-se chamar de aprender.
O comportamento mostrado é definido pela qualidade da tipagem de Python que é definida como dinâmica. Veja mais, e também.
Em tipagem dinâmica os objetos não tem uma forma muito definida, eles são o que são. Então a classe de Python é só uma dica do que você espera que o objeto tenha e realize, mas nada impede do objeto criado com base nela seja modificado e fique diferente do que a classe projetou. Fica a cargo do programador não abusar disto.
É um mecanismo que dá alguma vantagem, mas perde-se a robustez. Por isso Python não é uma linguagem adequada para grandes projetos, apenas para scripts, mesmo que muitas pessoas usem:

O ideal é evitar esse tipo de coisa sim.
Classes em Python na verdade são dicionários um pouco modificados, então é só colocar uma chave nova e é aceito. Dá até para apagar certas partes e jogar fora todo contrato, afinal Python, por definição, não respeita contratos (tem outras formas mas não vem ao caso). Então se você disse que quer colocar algo na classe, é aceito.
É assim com todas linguagens de tipagem dinâmica. Se quer contratos fortes precisa procurar linguagens com tipagem estática e forte com bom nível de soundness. Se precisa de liberdade para fazer o que bem entender no código (não confundir com o resultado final) então Python é uma boa escolha.
","
            4
        ",,,"['\npython', 'orientação-a-objetos', 'classes', 'atributos\n']"
531837,Quero fazer o usuário ser obrigado a responder Sim ou Não,"
Estou fazendo um programa onde o usuário digita o valor e o programa escreve ele por extenso. Eu terminei o problema e gostaria de perguntar ao usuário se ele deseja continuar logo ao final, mas não estou conseguindo.
cont=('zero', 'um', 'dois', 'três', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez', 'onze','Doze','Treze','Quatorze','Quinze','Dezesseis','Dezessete','Dezoito','Dezenove','vinte')
c='S'
while c == 'S':
    while True:
        num=int(input('Digite um numero entre 0 e 20: '))
        if 0<=num<=20:
            break
        print('Tente mais uma vez.',end='')
    print(f'Você digitou o numero {cont[num]}')
    while True:
        c=str(input('Deseja continuar? [S/N]: '))

","
isso acontece, pq vc fez um laço (while) que não faz nenhuma comparação, e tem por certo que deve sempre rodar (true).
while True: 
     c=str(input('Deseja continuar? [S/N]: '))

No entanto, para seu código, ele nem é preciso, pode simplesmente tirar o while e deixar a linha de baixo
cont=('zero', 'um', 'dois', 'três', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez', 'onze','Doze','Treze','Quatorze','Quinze','Dezesseis','Dezessete','Dezoito','Dezenove','vinte')
c='S'
while c == 'S':
    while True:
        num=int(input('Digite um numero entre 0 e 20: '))
        if 0<=num<=20:
            break
        print('Tente mais uma vez.',end='')
    print(f'Você digitou o numero {cont[num]}')
    c=str(input('Deseja continuar? [S/N]: '))

","
            -4
        ",,,"['\npython', 'while\n']"
531812,Adicionar valor de outro dataset caso encontre o mesmo nome com pandas,"
Boa tarde pessoal.
Tenho algo simples para fazer mais que não estou conseguindo resolver.
Tenho dois datasets df_1 e df_2, que ambos tem uma coluna em comum USUARIO e df_2 tem uma coluna a mais que é a ID_AJUSTADO.
Segue abaixo:
No df_1.USUARIO tenho:
USUARIO

VALMIR RODRIGUES PESSOA
VALMIR RODRIGUES PESSOA
ALIOMAR DE BARROS VIANA
PEDRO DE FREITAS PESSOA

No df_2 tenho:
USUARIO | ID_AJUSTADO

VALMIR RODRIGUES PESSOA | 2918
CARLOS GUILHERME OLIVEIRA DE MELO | 7035
ALIOMAR DE BARROS VIANA | 209
EDRO DE FREITAS PESSOA  | 2512
EDRO DE FREITAS PESSOA  | 2512

Caso encontre o USUARIO de df_1 em df_2, tenho que criar uma nova coluna df_1['ID USUARIO AJUSTADO'] com a o valor da coluna ID_AJUSTADO do df_2
Caso eu não encontre, tenho que pegar o último valor de Indice e soma mais 1.
Exemplo:
O Usuário VALMIR RODRIGUES PESSOA está em df_1 e df_2.
Então preciso pegar o seu ID_AJUSTADO em df_2 e adicionar na nova coluna df_1.ID_AJUSTADO.
Então ficaria para este caso:
df_1:
USUARIO | ID_AJUSTADO

VALMIR RODRIGUES PESSOA | 2918

No meu código fiz assim:
ultimo_index = df_2['ID USUARIO AJUSTADO'].max()

df_1['ID USUARIO AJUSTADO'] = np.where(np.isin(df_1.USUARIO, df_2.USUARIO), df_2.ID_AJUSTADO, ultimo_index + 1)

Porém recebo o erro:
ValueError: operands could not be broadcast together with shapes (761,) (61222,) () 

Alguém poderia me ajudar ?
Caso não tenha ficado bem explicado, me avise por gentileza.
","
Acho que isso aqui resolve seu problema:
df_1_novo = df_1.merge(df_2, on='USUARIO', how='left')
","
            0
        ","
Fiz o merge e tirei os duplicados, depois fiz o merge de novo e deu certo.
Creio que o problema foi o um para muitos.
Obrigado pessoal.
","
            0
        ","['\npython', 'pandas\n']"
531780,DataFrame.loc[] Sintaxe - PANDAS - PYTHON - DÚVIDA,"
Estou em um projeto pessoal onde quero otimizar alguns relatórios da empresa com PANDAS.
Em uma das planilhas eu uso o SE, que de acordo com o valor de uma coluna me devolve o nome determinado.
Chegando neste mesmo ponto usando PANDAS me deparei com uma situação na qual não consigo sair do lugar.
Abaixo o script usado:
import pandas as pd

df_1 = pd.read_csv('TLV_PRE_CTRL_ATN_1610_1138997_bau.txt', encoding='iso-8859-1', sep=""|"")
f_2 = pd.read_csv('TLV_PRE_CTRL_ATN_1610_1139010_bau.txt', encoding='iso-8859-1', sep=""|"")
bau_df = pd.concat([df_1, df_2])

#ESCOLHENDO COLUNAS NECESSARIAS
bau_df = bau_df.iloc [:, [0,8,10,21,38,51]]

#CRIANDO UMA NOVA COLUNA BASEADA NA FAIXA DE INVESTIMENTO PARA O PLANO 
bau_df = bau_df.eval('INVESTIMENTO = FIELD_2 - M3M_REC')

#CRIANDO D> DE FAIXA DELTA

bau_df.loc[bau_df.INVESTIMENTO <= 5,  'FAIXA_DELTA'] = ""Faixa 2 - De R$0,00 Até R$5,00""
bau_df.loc[bau_df.INVESTIMENTO <=10,  'FAIXA_DELTA'] = ""Faixa 3 - De R$5,01 Até R$10,00""
bau_df.loc[bau_df.INVESTIMENTO <= 15, 'FAIXA_DELTA'] = ""Faixa 4 - De R$10,01 Até R$15,00""
bau_df.loc[bau_df.INVESTIMENTO <= 20, 'FAIXA_DELTA'] = ""Faixa 5 - De R$15,01 Até R$20,00""
bau_df.loc[bau_df.INVESTIMENTO <= 25, 'FAIXA_DELTA'] = ""Faixa 6 - De R$20,01 Até R$25,00""
bau_df.loc[bau_df.INVESTIMENTO <= 30, 'FAIXA_DELTA'] = ""Faixa 7 - De R$25,01 Até R$30,00""
bau_df.loc[bau_df.INVESTIMENTO <= 35, 'FAIXA_DELTA'] = ""Faixa 8 - De R$30,01 Até R$35,00""

Após rodar o código, obviamente ele me devolve todas as colunas como faixa 8, já que todos os valores serão menores que 35 e essa é a minha dúvida. como eu poderia fazer essa mudança respeitando apenas as faixas que de fato eu preciso alterar?

Eu demorei para entender o porque ele me devolvia mas de fato, faz sentido já que a última mudança é a faixa 8 e tudo é menor que o valor dela
espero que eu tenha sido claro na minha dúvida e desculpe se estou perguntando algo obvio, estou aprendendo a usar o pandas agora
","
Umas das possíveis soluções é  utilizar funções como le, ge, between do pandas. Essas funções te ajudam a comparar números em uma faixa de valores.
bau_df.loc[bau_df.INVESTIMENTO.le(5), 'FAIXA DELTA'] = ""Faixa 2""
bau_df.loc[bau_df.INVESTIMENTO.between(6, 10), 'FAIXA DELTA'] = ""Faixa 3""
bau_df.loc[bau_df.INVESTIMENTO.between(11, 15), 'FAIXA DELTA'] = ""Faixa 4""
bau_df.loc[bau_df.INVESTIMENTO.between(16, 20), 'FAIXA DELTA'] = ""Faixa 5""
bau_df.loc[bau_df.INVESTIMENTO.between(21, 25), 'FAIXA DELTA'] = ""Faixa 6""
bau_df.loc[bau_df.INVESTIMENTO.between(26, 30), 'FAIXA DELTA'] = ""Faixa 7""
bau_df.loc[bau_df.INVESTIMENTO.between(31, 35), 'FAIXA DELTA'] = ""Faixa 8""

","
            1
        ",,,"['\npython', 'pandas', 'dataframe\n']"
531707,Equações lineares diofantinas em python,"
Estou tendo problemas com esta questão e ficaria grato se alguém puder me ajudar, segue abaixo o que se pede e o que eu fiz até agora.
Você achou num velho livro de matemática uma questão pedindo soluções inteiras de uma equação do tipo ax + by = 1. Você sabe que podem haver inúmeras soluções para essa equação, dependendo dos valores de a e b. Por isso, resolveu determinar a solução na qual o valor de x é não-negativo mas tão pequeno quanto possível, ou concluir que não há solução. Faça um programa realize essa tarefa.
Entrada e Saída
entrada:
Na 1a linha da entrada é dado o valor de T, o número de caso de teste. Cada uma das linhas seguintes apresentam um dos casos de teste, que seguem o seguinte padrão:
a b
saída:
Na saída deve ser apresentado para cada caso de teste da entrada:
Apenas a string ""No Solution"" caso seja impossível determinar uma solução.
Caso contrário, o menor valor não negativo de x seguido do valor respectivo a y que solucionam a equação.

eu cheguei até aqui
def solve(a, b, c):
    
    q, r = divmod(a, b)
    
    if r == 0:
        return([0, c /b])
    else:
        sol = solve(b, r, c)
        u = sol[0]
        v = sol[1]
        return([v, u-q*v])
        
def main():
    t = int(input())
    
    for j in range(t):
        c = 1
        a, b = int(input())
        return(solve)

",,,,,"['\npython', 'equações\n']"
531702,Web Scrapping - Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Quando Header Cache-Control é private, isso quer dizer que não é possível acessar formulário pelo Requests? Ideia era coletar da fonte Pública, os dados médios do combustível de todas as cidades de todos os estados mas não encontro Parâmetros para aplicar.
Fonte: https://preco.anp.gov.br/include/Resumo_Por_Estado_Index.asp

","
Quando o cabeçalho cache-control possui o valor private. Isso significa que uma parte ou a resposta da requisição (completa) não deve utilizar um cache compartilhado, quer dizer que apenas um usuário pode ter acesso a esse cache, entenda como um cache exclusivo para um indivíduo, outro usuário em outra sessão não pode receber o mesmo cache (teoricamente) pelo servidor da aplicação.
Ainda na documentação é dito que o uso da palavra private só significa que a resposta não deve ser compartilhada em cache, e não tem relação com o fato da informação ser restrita (privacidade da informação).
Segundo a referência. Estando no link da referência, procurar por: 14.9.1 What is Cacheable
","
            2
        ",,,"['\npython', 'web-scraping', 'request\n']"
531703,Converter int em binário,"
Preciso converter uma variável np.array (300,1) em valores binários. Criei um array teste, mas a função decimal_para_binario está me retornando ['1'].
Quero converter todos os valores da variável teste para binário.
teste = np.array([[1],[2],[0],[-3]]) #shape(4,1)

def decimal_para_binario(saida_desejada):
    for i in range(len(saida_desejada)):
        binario = []
        while len(binario) < len(saida_desejada):

            saida_desejada = (bin(int(saida_desejada[i]))[2:])
        
            binario.append(saida_desejada)
        
        #print(saida_desejada)
        #break
        return binario

","
import numpy as np

teste = np.array([[1],[2],[0],[-3]]) #shape(4,1)

def decimal_para_binario(saida_desejada):
    binario = []
    for i in range(len(saida_desejada)):
        binario.append(bin(int(saida_desejada[i])))
    return binario
        
print(decimal_para_binario(teste))

Isto irá imprimir: ['0b1', '0b10', '0b0', '-0b11']
Ainda mais simples:
def decimal_para_binario(saida_desejada):
    return list(map(bin, map(int, saida_desejada)))

","
            -1
        ",,,['\npython\n']
531679,Erro ao fazer requisição post por conta do SerializerMethodField(),"
Não consigo fazer um POST para criar um novo modelo no banco, única coisa que descobri é que o erro é por conta do SerializerMethodField(), ao desabilitar ele, consigo fazer o post tranquilo, porém, preciso dele para apresentar o nome do departamento por completo ao invés de somente o ID. Já procurei bastante na web mas não consegui achar uma maneira de resolver isso de forma clara.
models.py
class Departamento(models.Model):
    departamento = models.CharField(max_length=50)

    def __str__(self):
        return self.departamento


class Professor(models.Model):
    name = models.CharField(max_length=200)
    departamento = models.ForeignKey('Departamento', on_delete=models.CASCADE)

    def __str__(self):
        return self.name

viewsets.py
class ProfessorViewSet(ModelViewSet):
    queryset = Professor.objects.all()
    serializer_class = ProfessorSerializer

serializers.py
class ProfessorSerializer(ModelSerializer):
    departamento = SerializerMethodField()

    class Meta:
        model = Professor
        fields = ('name','departamento')
    
    def get_departamento(self, obj):
        return ""%s"" %(obj.departamento)

Ao fazer um POST (utilizando o Postman, por exemplo), se eu desabilitar o SerializerMethodField() consigo criar um novo professor da seguinte forma:
{
    ""name"":""João"",
    ""departamento"":""1"" #supondo que tenho um departamento de ID=1 já cadastrado no banco
}

Mas já com o SerializerMethodField() ativado, não importa qual valor eu coloque lá, sempre apresenta o erro: NOT NULL constraint failed: professor_professor.departamento_id
Como consigo fazer o POST sem precisar retirar SMF()?
","
O SerializerMethodField serve apenas para leitura. Eu acredito que a melhor forma de resolver isso é fazendo com que departamento fosse também um serializer.
Você pode reescrever o método create() e update() do ProfessorSerializer para apenas buscar o departamento pelo ID.
class DepartamentoSerializer(serializers.ModelSerializer):
    class Meta:
        fields = [""id"", ""nome""]
        extra_kwargs = {
            ""nome"": {'read_only': True},
        }

class ProfessorSerializer(ModelSerializer):
    departamento = DepartamentoSerializer()

    class Meta:
        model = Professor
        fields = ('name', 'departamento')
   
    def create(self, validated_data):
        departamento_data = validated_data.pop(""departamento"")
        professor = Professor(**validated_data)
        professor.departamento_id = departamento_data[""id""]
        professor.save()
        return professor

e assim você poderia enviar e receber tanto o ID quanto o nome em seus requests:
POST:
{
    ""name"":""João"",
    ""departamento"": {""id"": 1}
}

GET:
{
    ""name"":""João"",
    ""departamento"": {
        ""id"": 1,
        ""nome"": ""Financeiro""
    }
}

Você pode ver aqui como atualizar ou criar objetos utilizando serializers dentro de serializers.
","
            0
        ",,,"['\npython', 'django', 'django-rest-framework\n']"
531499,O que são type hints (dicas de tipo) em Python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



A anotação de tipo em uma função não garante o tipo no Python 3?

                                (1 resposta)
                            


Quais ganhos eu tenho em especificar o tipo do argumento de uma função? [duplicada]

                                (1 resposta)
                            

Fechada há 6 meses.



Eu encontrei o seguinte código, fiz uma breve pesquisa e descobri que isso se chama ""type hint"", mas não sei o que significa.
def dobro(n: int) -> int:
    return n * 2

print(dobro(3))

",,,,,"['\npython', 'tipagem\n']"
531492,Como coloco os vários gráficos em um só,"
Basicamente preciso que ele junte os 4 gráficos que está a fazer num só, i.e. 4 linhas de cores diferentes, no mesmo gráfico para cada valor de n. O problema é que acho que a função da pressão está juntando todos os dados ao molho e não consigo chamá-los separadamente para fazer o gráfico. Alguma ajuda?
n=[4,10,30,100]

for j in range(len(n)):
    Vol = 10**7 #l

    Q = 10**4 #l/min

    p0 = 1 #bar

    pf = 0.01 #bar
    
    k = 1.4

    operation_time = - np.log(pf/p0) * Vol/Q

    dt = operation_time/n[j]


    pressure_decay_imp = np.zeros(n[j]+1)

    time = np.zeros(n[j]+1)

    #initial value

    pressure_decay_imp[0] = p0

    for i in range (n[j]):
    
        dt = operation_time/n[j]
    
        pressure_decay_imp[i+1] = pressure_decay_imp[i] / (1+ dt * k*Q/Vol)
   
        time[i+1] = time[i] + dt

        print(pressure_decay_imp)
#ploting
    fig = plt.figure(figsize=(6,5))
    plt.plot(time,pressure_decay_imp, color = 'red')
    plt.plot(time,pressure_decay_imp, color = 'blue')
    plt.plot(time,pressure_decay_imp, color = 'green')
    plt.plot(time,pressure_decay_imp, color = 'purple')
    plt.legend(frameon=False, fontsize=10)
    plt.title(""Evolução da pressão"", loc=""right"", fontsize=14)
    plt.xlabel(""tempo (dias"")
    plt.ylabel(""pressão (bar)"")

    #plt.tight_layout()
    plt.show()

","
Uma ideia seria criar uma lista com as cores que você quer utilizar e colocar, e dentro do seu ultimo for colocar o plt.plot. Seu gráfico só vai ser plotado ao final de todas as iterações.
import numpy as np
from matplotlib import pyplot as plt

n=[4,10,30,100]
colors = ['red','blue','green','purple']

for j in range(len(n)):
    
    Vol = 10**7 #l
    Q = 10**4   #l/min
    p0 = 1      #bar
    pf = 0.01   #bar
    k = 1.4
    operation_time = - np.log(pf/p0) * Vol/Q
    dt = operation_time/n[j]
    pressure_decay_imp = np.zeros(n[j]+1)
    time = np.zeros(n[j]+1)

    #initial value
    pressure_decay_imp[0] = p0

    for i in range(n[j]):

        dt = operation_time/n[j]
        pressure_decay_imp[i+1] = pressure_decay_imp[i] / (1+ dt * k*Q/Vol)
        time[i+1] = time[i] + dt  
        plt.plot(time, pressure_decay_imp, color=colors[j])
          
plt.title(""Evolução da pressão"", loc=""center"", fontsize=14)
plt.xlabel(""tempo (dias)"")
plt.ylabel(""pressão (bar)"")
      
plt.show()

","
            1
        ",,,['\npython\n']
531474,Como retornar as 10 primeiras linhas de uma tabela do postegres em python?,"
Por favor, como faço para retornar em python (flask_sqlalchemy) os 10 primeros registros de 3 colunas específicas (como 'street', 'postcode' e 'city') da tabela? Já tentei com for e trocando o query.all() por query.first(10)... quando pesquiso sobre o tema para saber o que fazer só aparece resultados de trazer um elemento específico ou em linguagem SQL. Como estou começando, não sei como pesquisar corretamente. Obrigada
from flask import Flask, Response, request
from flask_sqlalchemy import SQLAlchemy

import json

app = Flask(__name__)
app.config[""SQLALCHEMY_TRACK_MODIFICATIONS""] = True
app.config[""SQLALCHEMY_DATABASE_URI""] = 'postgresql://postgres:123@localhost:5432/db_coordinates'
db = SQLAlchemy(app)


class TbFirstBase(db.Model):
    id_first_base = db.Column(db.Integer, primary_key=True)
    lat = db.Column(db.String, unique=False, nullable=False)
    lng = db.Column(db.String, unique=False, nullable=False)
    street = db.Column(db.String, unique=False, nullable=False)
    postcode = db.Column(db.String, unique=False, nullable=False)
    city = db.Column(db.String, unique=False, nullable=False)
    country = db.Column(db.String, unique=False, nullable=False)

    def to_json(self):
        return {""id_first_base"": self.id_first_base,
                ""lat"": self.lat,
                ""lng"": self.lng,
                ""street"": self.street,
                ""postccode"": self.postcode,
                ""city"": self.city,
                ""country"": self.country}


# CRUD---------------------------------------------------------------------------------------------------------
# Select All
@app.route(""/tb_first_base"", methods=[""GET""])
def selection_adresses():
    tb_first_base_list = TbFirstBase.query.all()
    tb_first_base_json = [tb_first_base.to_json() for tb_first_base in tb_first_base_list]
    return generate_response(200, ""tb_first_base"", tb_first_base_json)

","
Se você deseja apenas trazer essas três colunas e com limit substitua:
tb_first_base_list = TbFirstBase.query.all()

Por:
tb_first_base_list = TbFirstBase.query.with_entities(TbFirstBase.street, TbFirstBase.postcode, TbFirstBase.city).limit(10)

e depois retorne em forma de Json caso desejar!
","
            1
        ",,,"['\npython', 'flask', 'sqlalchemy\n']"
531461,Como acessar apenas uma celula numa lista dentro de uma lista,"
Estou a fazer um codigo para inicializar uma grelha de sudoku em que o n^2 é o tamanho do tabuleiro e alpha a percentagem de celulas que vao ser preenchidas.
Porém quando tento alterar apenas uma celula em questao, a coluna toda é alterada e nao sei como resolver
import random
def inicializagrelha(n,alpha): 

if alpha <= 0 or alpha > 1: 
    return ""Error"" 
numeropreencher = 0
numeropreencher = round((n**4) * alpha) 
grelha = []
listaux = []
for k in range(n * n):
    listaux.append(0)
    grelha.append(listaux)

count = 0
celulaspreenchidas = []

while(count < numeropreencher):
    aux = random.randint(1,n**4)
    if aux not in celulaspreenchidas: 
        celulaspreenchidas.append(aux)
        linha = 0
        for j in range(n**2): 
            for lista in grelha: 
                if linha == j: 
                    if aux <= j*(n**2) and -aux+(j*(n**2))<9:
                        lista[-aux+(j*(n**2))] = 2
                    else: 
                        linha += 1
        count += 1
    else: 
        aux = random.randint(1,n**4)
        
return grelha

","
Já descobri, basta mudar
grelha = []
listaux = []
for k in range(n * n):
    listaux.append(0)
    grelha.append(listaux)

#Para 
grelha = [[0 for i in range(n)] for j in range(n)]

","
            0
        ",,,['\npython\n']
531414,Transformar variavel em string python [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



fotos = [""C:\dtx\145.jpg"", 'C:\dtx\148.jpg]
pyautogui.typewrite(foto)

Quando envia o valor da variável para a caixa de dialogo esconde os números e barras, colando apenas o texto puro sem os números e as barras! como faço esta conversão para str
já tentei pyautogui.typewrite(str(foto)) mas da erro também
","
Você deve colocar o formatador r na frente da sua string, dessa forma o python vai entender que você quer a string bruta:
import pyautogui

fotos = [r'C:\dtx\145.jpg', r'C:\dtx\148.jpg']

for foto in fotos:
    pyautogui.typewrite(foto)

","
            2
        ","
Quando você referencia uma string, você sabe que pode utilizar algumas funções com alguns comandos reservados, e por azar, e da msm forma em que os links de direcionamento se comporta. O r indica que sua string vai ser uma 'string bruta', é assim mesmo e não considera esses caracteres especiais que acabei de citar. Sem o r no literal a barra invertida (backslash) faria o que vem a seguir ser considerado um caractere especial.
Existe por exemplo o \n, sua função e pular a linha, e quando você encontra um link por exemplo c:\programs files\note, note que existe um \n, assim, vai dar a intender que vc quer pular a linha e continuar, atividade totalmente fora do contexto se você quer o link completo, onde a forma correta pra essa situação e:
nome_da_variavel = r'c:\programs files\note'

Assim, ele vai entender que preciso pegar caractere por caractere, desconsiderando as caracteres especiais.
Isso serve pra diversos tipos de caracteres especiais, como #, {} etc...
#Edit:
Complementando, existe tbm uma letra reservada que tem similaridade na funcionalidade. Existem diversas formas de mesclar valores de variaveis dentro da string.
Ex:
nome = 'Jose'
print('Meu nome e', nome)
# ou com .format
print('Meu nome e {}'.format(nome))
# e tambem pode ser usado a letra f, de format
print(f'Meu nome e {nome})

Ambos codigos resultam em:
>>> Meu nome e Jose

Com o tempo, treino e estudos você vai descobrindo novas funcionalidades e vai se aprimorando, evoluindo e melhorando a cada passo.
Link referencia: Clique Aqui
","
            2
        ","['\npython', 'string', 'variáveis\n']"
531371,Como posso reduzir um código python?,"
Escrevi um código python para mover os arquivos da pasta ""Downloads"" para outras pastas automaticamente.
Por exemplo: arquivos .jpg vão para a pasta ""Imagens"" e arquivos .mp4, para a pasta ""Vídeos"".
import glob, os, shutil

#Pastas destino
pasta_imagens = 'C:/Users/Leonardo/Pictures'
pasta_videos = 'C:/Users/Leonardo/Videos'

#Imagens
imagens = glob.iglob(os.path.join(pasta_downloads, ""*.jpg""))
imagens = glob.iglob(os.path.join(pasta_downloads, ""*.jpeg""))
imagens = glob.iglob(os.path.join(pasta_downloads, ""*.png""))
imagens = glob.iglob(os.path.join(pasta_downloads, ""*.gif""))
for imagem in imagens:
    if os.path.isfile(imagem):
        shutil.move(imagem, pasta_imagens)

#Videos
videos = glob.iglob(os.path.join(pasta_downloads, ""*.mp4""))
videos = glob.iglob(os.path.join(pasta_downloads, ""*.m4v""))
videos = glob.iglob(os.path.join(pasta_downloads, ""*.mov""))
videos = glob.iglob(os.path.join(pasta_downloads, ""*.avi""))
videos = glob.iglob(os.path.join(pasta_downloads, ""*.mpg""))
videos = glob.iglob(os.path.join(pasta_downloads, ""*.mpeg""))
for video in videos:
    if os.path.isfile(video):
        shutil.move(video, pasta_videos)

O código já funciona como eu esperava, porém eu ainda acho que da pra melhorar...
Tentei reduzir as linhas da seguinte forma:
imagens = glob.iglob(os.path.join(pasta_downloads, ""*.jpg"", ""*.png"", ""*.jpeg"", ""*.gif""))

Porém não funcionou 🥲
Se alguém puder me ajudar a entender o motivo, ficarei muito grato!!
","
Você pode criar um array com extensões de imagens e depois percorre-lo através de um for e adicionar as extensões no glob.iglob(). Desta forma:
imagesExtensions = [""*.jpg"", ""*.jpeg"", ""*.png"", ""*.gif""]
for extension in imagesExtensions:
    imagens = glob.iglob(os.path.join(pasta_downloads, extension))

Pode seguir o mesmo raciocínio para os videos e o que mais quiser adicionar, é uma mudança bem básica mas já vai reduzir bem as linhas de códigos
","
            -2
        ",,,"['\npython', 'automatização\n']"
531324,Como quebrar uma coluna em novas colunas no Pandas,"
Eu não sei como fazer essa pergunta, mas vou tentar descrever meu caso.
Eu tenho um DataFrame com os dados dessa forma:




Produto
Valor
Tipo do valor
Ano




A
21,5
Preço
21


A
5
Volume
21


B
55,3
Preço
21


B
10
Volume
21


C
70,0
Preço
21


D
37,5
Preço
21


D
7,7
Volume
21




Eu quero chegar a uma base como esta:




Produto
Preço
Volume
Ano




A
21,5
5
21


B
55,3
10
21


c
70,0
-
21


D
37,0
7,7
21




Pensei que a função unstack poderia fazer isso, mas não consegui manter as outras colunas (como Ano)
A solução que pensei foi bem complexa.
container = []
for label, _df in df.groupby(['Ano','Produto']):
  _df.set_index('Tipo do Valor', inplace = True)
  container.append(pd.DataFrame({
                        ""Produto"": [label[1]],
                        ""Preço"":[_df.loc['Preço', 'Valor']],
                        ""Volume"": [_df.loc['Volume', 'Valor']],
                        ""Ano"":[label[0]]}))

df_new = pd.concat(container)

Porem essa solução dá erro na linha do produto C, por essa não possuir dados de volume.
Como posso chegar ao dataframe desejado de uma maneira que seja rápida? Pois a base real é bem grande
","
Creio que seja isso que você queira.
Você deve usar a funçao .pivot() do pandas.
Aqui documentação oficial do pandas sobre .pivot()
Aqui o como deve ser:
df_new = df.pivot_table(index=['Produto','Ano'], 
               columns='Tipo do valor',
               values='Valor').reset_index()

Demonstração do código:

","
            3
        ",,,"['\npython', 'pandas', 'dataframe\n']"
531234,Operação com datas Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 5 meses.




                        Melhore esta pergunta
                    



Estou querendo calcular o valor a ser pago, levando em consideração as seguintes regras:

atraso juro de 5% + 10
pagamento adiantado tem desconto de 3%

o meu código está dando erro
import datetime
valor = float(input(' Valor do Boleto: '))
dia = int(input('Dia de Pagamento: '))
mes = int(input('Mês de Pagamento: '))
ano = int(input('Ano de Pagamento: '))
pagamento = datetime.date(day=dia, month=mes, year=ano)
dia = int(input('Dia de Vencimento: '))
mes = int(input('Mês de Vencimento: '))
ano = int(input('Ano de Vencimento: '))
Vencimento = datetime.date(day=dia, month=mes, year=ano)
dif = Vencimento - pagamento
if dif < 0:
    novo = valor + (valor * 5 / 100) + 10
else:
    novo = (valor * 97/100)
print(novo)

","
Fiz dessa forma!!
import datetime
valor = float(input(' Valor do Boleto: '))
dia = int(input('Dia de Pagamento: '))
mes = int(input('Mês de Pagamento: '))
ano = int(input('Ano de Pagamento: '))
pagamento = datetime.date(day=dia, month=mes, year=ano)
diav = int(input('Dia de Vencimento: '))
mesv = int(input('Mês de Vencimento: '))
anov = int(input('Ano de Vencimento: '))
Vencimento = datetime.date(day=diav, month=mesv, year=anov)
if pagamento < Vencimento:
    novo = valor + (valor * 5 / 100) + 10
else:
    novo = (valor * 97 / 100)
print(novo) 

","
            1
        ",,,['\npython\n']
531223,Remover um nó de uma lista encadeada em Python,"
Estou aprendendo Python e gostaria de ajuda para saber como posso remover um nó de uma lista encadeada a partir de um valor, atualmente meu código está assim:
    noRaiz = None

def novoNo(valor):
    return {
    ""valor"": valor,
    ""proximo"": None
    }

def remove(valor):
    global noRaiz
    if noRaiz is None:
        return
    noAtual = noRaiz
    if noRaiz[""valor""] == valor:
        noRaiz = noRaiz[""proximo""]
        return
    while noAtual[""proximo""] is not None:
        if noAtual[""proximo""][""valor""] == valor:
            noAtual[""proximo""] = noAtual[""proximo""][""proximo""]
        noAtual = noAtual[""proximo""]

def imprimir():
    noAtual = noRaiz
    while noAtual is not None:
        print(noAtual[""valor""])
        noAtual = noAtual[""proximo""]

noRaiz = novoNo(54)
no2 = novoNo(26)
no3 = novoNo(93)
no4 = novoNo(17)
no5 = novoNo(77)
no6 = novoNo(31)

noRaiz[""proximo""] = no2
no2[""proximo""] = no3
no3[""proximo""] = no4
no4[""proximo""] = no5
no5[""proximo""] = no6
no6[""proximo""] = None

imprimir()
remove()

Como faço para remover o número 54 ou o 17 ? Fiz a função remove mas provavelmente não está certo porque não remove.
","
no exemplo que você postou, você não passou nenhum valor para a função remove, por isso não funcionou.
aqui funcionou quando coloquei
remove(17)
remove(54)

e já que está estudando python, aconselho ler O que é código pythônico?
","
            0
        ",,,"['\npython', 'python-3.x\n']"
531187,Como fazer POO com método __str__?,"
Estou fazendo um exercício do curso que disponibilizarei logo abaixo, mas não estou obtendo alguns resultados esperados, mais especificamente no método busca_pessoa e imprime_pessoa. O professor me disse para usar str, mas eu não entendi bem como faço isso.

Crie uma classe agenda que pode armazenar 10 pessoas e seja capaz de realizar as seguintes operações:

void armazenaPessoa(string nome, int idade, float altura);
void removePessoa(string nome);
int buscaPessoa(string nome); // informa em que posição da agenda está a pessoa
void imprime agenda(); // imprime os dados de todas as pessoas da agenda
void imprimePessoa(int index); // imprime os dados da pessoa que está na posição ""i"" da agenda.


class Pessoa:

    def __init__(self, nome, idade, altura):
        self.__nome = nome
        self.__idade = idade
        self.__altura = altura

    @property
    def nome(self):
        return self.__nome

    @nome.setter
    def nome(self, novo_nome):
        self.__nome = novo_nome

    @property
    def idade(self):
        return self.__idade

    @idade.setter
    def idade(self, nova_idade):
        self.__idade = nova_idade

    @property
    def altura(self):
        return self.__altura

    @altura.setter
    def altura(self, nova_altura):
        self.__altura = nova_altura


class Agenda(Pessoa):

    bancodados = []

    def __str__(self):
        return self.nome, self.idade, self.altura

    def armazena_pessoa(self):
        if len(self.bancodados) < 11:
            self.bancodados.append(Pessoa)
        else:
            print('Não é possível adicionar mais pessoas')
        print(self.bancodados)

    def remove_pessoa(self):
        for pessoa in Agenda.bancodados:
            self.bancodados.remove(pessoa)
            print('Pessoa removida')

    def busca_pessoa(self):
            for pessoa in self.bancodados:
                print(self.bancodados.index(pessoa))

    def imprime_agenda(self):
        lista = list(self.bancodados)
        for elemento in lista:
            print(elemento)

    def imprime_pessoa(self):
        for pessoa in self.bancodados:
            print(self.bancodados.index(pessoa))

","
Fiz uma análise de seu código e encontrei alguns problemas que vou apontar logo abaixo.
Erros:

Classe Agenda herdar Pessoa:
Não faz sentido a classe Agenda herdar a classe Pessoa visto que Agenda não é um tipo de Pessoa. Também não será necessário utilizar métodos ou atributos de Pessoa a partir da classe Agenda.


Exempo: Não faria sentido utilizar:
    print(agenda.idade) #!?!?


Utilização do método ""__ str __"":
O método ""str"" é um método especial, como '__ init __', usado para retornar uma representação de string de um objeto. Por exemplo, aqui está um método str para objetos Time:


# dentro da classe Time:
    def __str__(self):
        return '%.2d:%.2d:%.2d' % (self.hour, self.minute, self.second)

Quando você disse que seu professor recomendou utilizar str provavelmente ele quiz dizer o tipo str (String).

Lista banco de dados:
O correto seria utilizar:

    class Agenda:

        def __init__(self):
            self.__bancodados = []

Dessa forma você conseguirá acessar a lista por ""self.__bancodados"".
Re-escrevi seu código e ficou dessa forma:
    class Pessoa:
        def __init__(self, nome, idade, altura):
            self.__nome = nome
            self.__idade = idade
            self.__altura = altura

        @property
        def nome(self):
            return self.__nome

        @nome.setter
        def nome(self, novo_nome):
            self.__nome = novo_nome

        @property
        def idade(self):
            return self.__idade

        @idade.setter
        def idade(self, nova_idade):
            self.__idade = nova_idade

        @property
        def altura(self):
            return self.__altura

        @altura.setter
        def altura(self, nova_altura):
            self.__altura = nova_altura

    class Agenda:

        def __init__(self):
            self.__bancodados = []

        def armazena_pessoa(self, nome, idade, altura):
            if len(self.__bancodados) < 11:
                self.__bancodados.append((nome, idade, altura))
            else:
                print('Não é possível adicionar mais pessoas')
            print(f'Pessoa {nome} armazenada com sucesso!')

        def remove_pessoa(self, nome):
            for pessoa in self.__bancodados:
                if pessoa[0] == nome:
                    self.__bancodados.remove(pessoa)
                    print(f'Pessoa {nome} removida')

        def busca_pessoa(self, nome):
            for pessoa in self.__bancodados:
                if pessoa[0] == nome:
                    return pessoa

        def imprime_agenda(self):
            for pessoa in self.__bancodados:
                print(pessoa)

        def imprime_pessoa(self, nome):
            print(self.busca_pessoa(nome))

    #Instanciar pessoa
    pessoa1 = Pessoa('nome01', '20', '1.74')
    pessoa2 = Pessoa('nome02', '30', '1.70')
    pessoa3 = Pessoa('nome03', '27', '1.66')

    #Instanciar agenda
    agenda = Agenda()

    #Armazenar pessoa na agenda
    agenda.armazena_pessoa(pessoa1.nome, pessoa1.idade, pessoa1.altura)
    agenda.armazena_pessoa(pessoa2.nome, pessoa2.idade, pessoa2.altura)
    agenda.armazena_pessoa(pessoa3.nome, pessoa3.idade, pessoa3.altura)

    #Remover pessoa da agenda
    #agenda.remove_pessoa('nome02')

    #Imprimir busca de pessoa
    #print(agenda.busca_pessoa('nome03'))

    #Imprimir dados da agenda
    agenda.imprime_agenda()

","
            0
        ",,,"['\npython', 'orientação-a-objetos\n']"
531160,Gerar executável sem console com python,"
estou com um script para apagar backups antigos e compactar outros, fiz ele em python e estou tentando gerar um executável que não retorne a saída no console, para o cliente não ser surpreendido no meio de alguma venda com o console pulando na tela dele quando for executado, estou usando o cx_freeze com o silent_level 3, mas não sei por qual motivo, mesmo não aparecendo os logs no console, ele ainda abre a tela preta com o cursos piscando e quando finaliza ele fecha, segue abaixo meu código e a configuração que estou usando no setup.py
Código:
import os
import time
import zipfile
import datetime
import subprocess

# Diretório
srcLojamix = os.path.join('C:\\Lojamix\\Backup')

# Variaveis gerais
diasBkpsModerniza = 5
dataAtual = datetime.date.today()

# Apaga BKPs antigos do diretório padrão moderniza
subprocess.call(['forfiles', '-p', f'{srcLojamix}', '/M', '*.bak', '-d', f'-{diasBkpsModerniza}', '-c', 'cmd /c del /f /q @path'])
time.sleep(2)

# Compacta arquivos "".bak"" para ""backup.zip""
filezip = zipfile.ZipFile(f'{srcLojamix}\\Backup_Lojamix_{dataAtual}.zip', 'w')

for folder, subfolders, files in os.walk(f'{srcLojamix}'):

    for file in files:
        if file.endswith('.bak'):
            filezip.write(os.path.join(folder, file), os.path.relpath(os.path.join(folder, file), f'{srcLojamix}'), compress_type=zipfile.ZIP_DEFLATED)

filezip.close()

# Apaga ZIPs antigos do diretório padrão moderniza
subprocess.call(['forfiles', '-p', f'{srcLojamix}', '/M', '*.zip', '-d', f'-{diasBkpsModerniza}', '-c', 'cmd /c del /f /q @path'])


Setup cx freeze:
from cx_Freeze import setup, Executable

# Dependencies are automatically detected, but it might need
# fine tuning.
build_options = {'packages': [], 'excludes': [], 'silent_level': 3}

base = 'Win32GUI'

executables = [
    Executable('main.py', base=base)
]

setup(name='apaga-backups',
      version = '1.0',
      description = '',
      options = {'build_exe': build_options},
      executables = executables)

",,,,,"['\npython', 'console-application', 'cx-freeze\n']"
531140,Discord.py mostrar avatar de qualquer id,"
Bom, eu tenho um comando de avatar e quando eu tento pegar o id de uma pessoa que não esteja no mesmo servidor que o meu bot, e usar o !avatar [id da pessoa que não esteja no mesmo servidor que o meu bot] ele dá esse erro:
discord.ext.commands.errors.MemberNotFound: Member  not found.

e eu queria que ele mostrasse o avatar de qualquer pessoa que não esteja no mesmo servidor que o bot.
Meu código:
@commands.command()
    async def avatar(self, ctx, user: discord.Member = None):
        if user == None:
            user = ctx.author
        else:
            if user == None:
                user = ctx.author

                avatar2Embed = discord.Embed(title=f'{user.name}\nClique no icon/gif para baixá-lo.', description= f'Ou clique [aqui]({user.avatar_url_as})', timestamp=datetime.datetime.utcnow(), color=discord.Color.dark_blue())
                avatar2Embed.set_image(url=f'{user.avatar_url_as}')

                await ctx.send(embed=avatar2Embed)


        icon_url = user.avatar_url
        avatarEmbed = discord.Embed(title=f'{user.name}\nClique no icon/gif para baixá-lo.', description= f'Ou clique [aqui]({user.avatar_url})', timestamp=datetime.datetime.utcnow(), color=discord.Color.dark_blue())
        avatarEmbed.set_image(url=f'{icon_url}')
        await ctx.send(embed=avatarEmbed)

Se alguém puder ajudar, agradeço.
(Eu sei que ficou meio complicado essa explicação, mas eu posso explicar melhor nos comentários caso alguém não entenda)
","
O problema é que o objeto que você está retornando é um discord.Member, o que você quer é um discord.User. Além disso quando você utiliza o comando você está passando uma string e não o usuário propriamente dito, para isso você tem que usar o método: Bot.fetch_user(id)
Por fim existe um erro na lógica, no caso do else você está verificando o mesmo do if, portanto é impossível o código executar caso user != None.
Reescrevendo o código para algo funcional:
@commands.command()
    async def avatar(self, ctx, userid: int = None):
        if userid == None:
            user = ctx.author
        else:
            user = bot.fetch_user(userid)

        icon_url = user.avatar_url
        avatarEmbed = discord.Embed(title=f'{user.name}\nClique no icon/gif para baixá-lo.', description= f'Ou clique [aqui]({user.avatar_url})', timestamp=datetime.datetime.utcnow(), color=discord.Color.dark_blue())
        avatarEmbed.set_image(url=f'{icon_url}')
        await ctx.send(embed=avatarEmbed)


","
            0
        ",,,"['\npython', 'syntax-error\n']"
531125,Inserir valores em lista,"
Estou fazendo um exercício de Python que pede para o usuário colocar cinco números de 1 a 5, se o usuário digitar um numero que não atenda esse critério retorne um erro e não inclua o nº na lista
fiz dessa forma:
lista = int(input(""digite um numero de 1 a 5""))

if lista > 1  and  lista < 5:   
    print(""Excelente"")
else:
    print(""numero invalido"")

print(lista)

mas não sei se está certo, pois o correto seria incluir uma lista entre colchetes
como posso fazer isso?
","
Uma maneira simples de instanciar uma lista e inserir elementos nesta lista, seria utilizando o comando condicional while.
Para criar um fluxo em que o usuário fique ""preso"" em um laço até que ele insira 5 elementos e esses mesmos elementos estejam dentro do intervalo de 1 a 5. Seria uma lógica bem parecida com a que já implementou, porém seria necessário algumas coisas a mais.
A lógica, descrita em linguagem natural seria:

criar uma lista vazia
verificar o tamanho da lista, caso a lista possua o tamanho menor que 5, faça
ler um número fornecido pelo usuário
verificar se o número fornecidos está no intervalo desejado [1:5], caso façam parte do intervalo adicionar na lista senão perguntar novamente
repetir passo 2, 3 e 4.

Acima descrevemos o algoritmo que queremos implementar, a partir desta lógica basta agora transformar essas informações em código Python, uma das perguntas que pode surgir ao implementar é porque utilizar o while? O motivo é que teremos um número indeterminado de repetições a fazer, desta forma é recomendado usar o while. Este número é indeterminado pois será no mínimo cinco repetições (supondo que os números digitados estejam todos dentro do intervalo e o que ao preencher não haja erros). O usuário será obrigado a preencher os números até que o tamanho da lista seja 5. Mas não temos garantia de quantas vezes o laço será repetido. Isso justifica o uso do while.
lista = []

while len(lista) < 5:
    n = int(input('Digite um numero: '))
    if 1 <= n <= 5:
        lista.append(n)
print(lista)

Verifique que assim seria uma implementação simples, existem alguns problemas em relação à tratamento de erro. Para tratar os erros devemos utilizar um bloco try ... except para evitar que o nosso programa pare a execução ao encontrar o primeiro erro.
Outro ponto é a escrita do condicional, em Python é possível escrever o condicional desta maneira:
if 1 < n < 5: # <-- Veja como estamos comparando a igualdade

Porém isso só funciona em Python, então o melhor seria utilizar como você fez, que é uma abordagem mais universal usada em todas as linguagens de programação:
if n > 1  and  n < 5:

Assim uma implementação mais robusta seria:
lista = []

while len(lista) < 5:
    try:
        n = int(input('Digite um número: '))
        if 1 <= n <= 5:
            lista.append(n)
    except ValueError:
        print('Número inválido, tente novamente')
    
print(lista)

Aprenda mais sobre as funções utilizadas neste código.
Função len, bloco try..except, comando while
","
            0
        ",,,['\npython\n']
530985,"Excel encontrando um ""problema de conteúdo"" na tabela após executar Openpyxl","
Basicamente, estou executando um Openpyxl nessa planilha, porém, quando abro ela após a execução do código (até pq o terminal não da erro algum), o Excel me diz que encontrou um problema de conteúdo na planilha e pergunta se a desejo recuperar.
O código consiste em executar um ProcV na E3 e se eu executo esse ProcV diretamente na planilha, ele funciona. Mas por algum motivo o Openpyxl está bugando a planilha; talvez o problema seja pq o procv ali ta buscando uma pasta do PC e o OpenPyxl não reconhece dessa forma?! Não sei...
Alguém sabe o que possa ser?
O código:

planilha = load_workbook(""base.xlsx"")

data = planilha.active

data[""E3""] = ""=PROCV(A3;'C:\\Users\\eu\\Desktop\\main\\[lg.xlsx]Sheet1'!$B:$I;8;FALSO)""
     
planilha.save(""base.xlsx"")

","
Segundo a documentação do OpenPyXL você deve usar o nome em inglês das fórmulas, então em vez de PROCV você deve usar VLOOKUP
Além do nome a documentação também diz para usar vírgula para separar os parâmetros em vez de ponto e vírgula
","
            0
        ",,,"['\npython', 'excel', 'openpyxl\n']"
530973,Ajuda - Python3: Transformar dados de um CSV [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Eu tenho um ficheiro csv com o seguinte formato:




id
text
label




1
I am happy
happy


1
I am happy
fun


1
I am happy
energy


2
cool
happy


2
cool
satisfaction


3
this is amazing!
happy




E quero converter num novo ficheiro CSV, em que os valores que aparecem na coluna de ""label"" passam a ser novas colunas, e nessas novas colunas aparece o valor ""1"" se a label estiver associada ao ""id"" e ao ""texto"". Caso contrário, fica com o valor de ""0"".
Para o exemplo dado anteriormente, deve escrever num novo ficheiro CSV o seguinte resultado:




id
text
happy
fun
energy
satisfaction




1
I am happy
1
1
1
0


2
cool
1
0
0
1


3
this is amazing!
1
0
0
0



 ","
Veja a documentação do crosstab
Ele faz exatamente o que você quer.
Criando DataFrame de teste
df = pd.DataFrame({""id"": [1, 1, 1, 2, 2, 3], ""text"": [""I am happy"", ""I am happy"", ""I am happy"", ""cool"", ""cool"", ""this is amazing""], ""label"": [""happy"", ""fun"", ""energy"", ""happy"", ""satisfaction"", ""happy""]})

print(df)

   id             text         label
0   1       I am happy         happy
1   1       I am happy           fun
2   1       I am happy        energy
3   2             cool         happy
4   2             cool  satisfaction
5   3  this is amazing         happy

Gerando resultado
resultado_df = pd.crosstab(df.text, df.label)

print(resultado_df)

label            energy  fun  happy  satisfaction
text
I am happy            1    1      1             0
cool                  0    0      1             1
this is amazing       0    0      1             0

","
            1
        ",,,"['\npython', 'python-3.x', 'pandas', 'csv', 'dataframe\n']"
530933,Matplotlib barra de cores vertical discreta,"
Criei uma função que imprime matrizes na forma:
def PrintColourMatrix (m, title):   
    fig, (ax0) = plt.subplots(1)
    c = ax0.pcolor(m)
    ax0.set_title(title)
    fig.tight_layout()
    fig.colorbar(c)
    plt.show()
    
    filename = title + '.png'
    fig.savefig(filename)  
    return filename

Considere-se uma matriz de entradas aleatórias, definida como
m_random = np.array([[round(rd. random(),2) for j in range(n_cols)] for i in range(n_rows)]) 

Neste caso, n_rows = n_cols = 10. O aspecto final é o seguinte:

No entanto, eu quero fazer a mesma coisa com uma matriz que toma apenas os valores [-1, 0, 1] e cujo mapa de cores é dado por {-1: vermelho, 0: branco, 1: preto}. A barra de cores vertical, portanto, tem de representar valores discretos. Além disso, eu não quero que cada segmento de cor seja associado a um intervalo (ex: vermelho, [-1, 0[ ), mas sim aos valores que indiquei acima, respectivamente (vermelho, -1).
Como faço isso? Já pesquisei muitos sites e fóruns, mas quase todos consideram mapas pré-definidos, com cores que não me interessam. Até agora nenhum me ensinou o método para discretizar a barra de cores.
","
Aqui vai uma solução que se adapta ao número de cores dentro do seu mapa de cores, e que utiliza os valores desse mesmo mapa para gerar uma matriz discreta de tamanho arbitrário.
O segredo está em usar matplotlib.colors.LinearSegmentedColormap.from_list para criar um Colormap discreto, e usar ele ao plotar a matriz com plt.imshow. Esse método retorna um Colormap discreto desde que o argumento N seja igual ao tamanho da lista de cores entregue a ele.
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
import numpy as np

tamanho_matriz = (10, 10)
mapa_cores = {
    -1: '#FF0000',  # vermelho
    0 : '#FFFFFF',  # branco
    1 : '#000000',  # preto
}

N = len(mapa_cores)
valores = list(mapa_cores.keys())
cores = list(mapa_cores.values())

cmap = LinearSegmentedColormap.from_list('', cores, N)
matriz = np.random.choice(valores, tamanho_matriz)

plt.imshow(matriz, cmap=cmap)
cbar = plt.colorbar()

# Coloca cada label no meio do respectivo intervalo de cor
largura_cor = (max(valores) - min(valores)) / N 
posicoes = np.linspace(min(valores) + largura_cor/2, max(valores) - largura_cor/2, N)
cbar.set_ticks(posicoes)
cbar.set_ticklabels(valores)

plt.show()

Figura resultante:

Como comentei, a solução se adapta a qualquer tamanho_matriz e mapa_cores utilizado. Por exemplo, com os valores:
tamanho_matriz = (3, 7)
mapa_cores = {
    -3.3: '#FFFF66',
    15  : '#0123FF',
    7.2 : '#0F5AED',
    0   : '#1291AB',
}

Geramos a imagem:

","
            3
        ",,,"['\npython', 'python-3.x', 'matriz', 'matplotlib\n']"
530909,Como mudar o tamanho do Icone do PyQt5,"
Eu estou tentando aumentar o ícone de um programa que estou montando no PyQt5, mas não consegui encontrar nenhuma forma de fazer isso. Não sou muito experiente, então pode ser que seja algo óbvio. Tentei fazer diretamente no Designer e não consegui.
class Ui_MainWindow(object):
def setupUi(self, MainWindow):
    MainWindow.setObjectName(""MainWindow"")
    MainWindow.resize(500, 400)
    MainWindow.setMaximumSize(QtCore.QSize(500, 400))
    MainWindow.setMouseTracking(True)
    MainWindow.setWindowIcon(QtGui.QIcon(""Termometro.png""))
    set.__new__(QtGui.QIcon)

",,,,,"['\npython', 'pyqt-5', 'icons', 'resize\n']"
530857,criar um loop no dataframe python,"
Eu tô trabalhando em uma análise de dados e gostaria de criar uma nova coluna. Cada linha dessa nova coluna vai ser a soma de todas as linhas de uma coluna já existente até aquele momento.
Por exemplo:
estou na linha 6 da coluna f (essa é a que vai ser criada) e quero somar as 5 primeiras linhas da coluna e (já existente) e colocar esse resultado na coluna f.
Pensei neste loop, mas como ainda estou aprendendo não funcionou:
for n in range(0, len(df['realized_pnl_usdt']) - 1):
    lista.insert(i, df['realized_pnl_usdt'])

    soma = sum(lista)

    lista2.insert(j, soma)

    i = i + 1
    j = j + 1

df = df.assign(realized_trade = lista2)

","
Pelo que entendi você deseja fazer uma soma acumulada até o momento mas com um lag, neste caso você pode utilizar a função cumsum junto com o shift do pandas:
import pandas as pd
import numpy as np

Criando um data frame de teste
coluna_f = np.random.randint(0, 100, 10)
df = pd.DataFrame({'Coluna_F':coluna_f})

Aplicando o cumsum na coluna F e gerando uma nova coluna
df['somatorio'] = df['Coluna_F'].shift(1).cumsum().fillna(0)

display(df)





Coluna_F
somatorio




51
0.0


21
51.0


53
72.0


87
125.0


94
212.0


21
306.0


39
327.0


5
366.0


85
371.0


45
456.0



 ","
            -1
        ",,,"['\npython', 'dataframe\n']"
530855,Problemas c/Pyautogui,"
Estou fazendo uma automatização com o PyAutoGUI.  A princípio é uma automatização simples, onde um programa é aberto e tem que fazer o Login.  Acontece que depois que a tela de Login é aberta, os comandos de PyAutoGUI não funciona.  Já tentei de tudo.
Abaixo o código:
import os
from time import sleep
import pyautogui


os.startfile('C://Program Files (x86)//Alterdata//Pack//Diamond//DP//wdp.exe')

sleep(8)
pyautogui.click(676, 510)
sleep(.2)
pyautogui.press(""esc"")
sleep(.2)
pyautogui.press('tab')
sleep(.2)


pyautogui.press('enter')

","
tente utilizar uma variável com um valor:
pyautogui.click(x=482, y=363)

tente também um intervalo
ui.click(x=548, y=438, interval=0.25)

","
            0
        ",,,"['\npython', 'pyautogui\n']"
530783,Passar string mm/dd para datetime sem o ano,"
Eu tenho um dataframe com uma variável ""data"" que se distribui da seguinte forma:




DATA
REGISTRO




2009-05-01
2b


2009-05-11
2b


2009-05-11
3a


2009-05-13
2b


2009-05-22
3b




Eu preciso de uma nova variável de data que demonstre apenas o mês/dia. Então eu gerei uma da seguinte forma:
df['DATA_MES'] = df['DATA'].dt.strftime('%m/%d')

O retorno é o seguinte:




DATA
REGISTRO
DATA_MES




2009-05-01
2b
05/01


2009-05-11
2b
05/11


2009-05-11
3a
05/11


2009-05-13
2b
05/13


2009-05-22
3b
05/22




Até aí tudo ok, porém a variável 'DATA_MES' vem como string e eu preciso dela tipo datetime. Ao tentar realizar a conversão com o seguinte código:
df['DATA_MES'] = pd.to_datetime(df['DATA_MES'], format = '%m/%d')

Ele completa automaticamente com 1900, da seguinte forma:




DATA
REGISTRO
DATA_MES




2009-05-01
2b
1900-05-01


2009-05-11
2b
1900-05-11


2009-05-11
3a
1900-05-11


2009-05-13
2b
1900-05-13


2009-05-22
3b
1900-05-22




Já tentei modificar os parâmetros e nada. Gostaria de encontrar uma forma de ter essa variável em formato de data mês/dia e tipo datetime.
Agradeço pela atenção desde já.
","
Uma coluna de data em Pandas é uma Serie de dtype datetime64. Olhando a documentação de Datetime na biblioteca do Numpy, temos:

Datetimes are always stored based on POSIX time (though having a
TAI mode which allows for accounting of leap-seconds is proposed),
with an epoch of 1970-01-01T00:00Z. This means the supported dates are
always a symmetric interval around the epoch, called “time span” in
the table below.

Significa que uma variável de dtype datetime64 é sempre uma posição relativa criada a partir de 1970-01-01T00:00Z. Também na documentação podemos ver que dá pra se criar uma variável a partir apenas do ano, como no exemplo abaixo. Acontece que por trás das cortinas se assume que estamos falando do dia 01/janeiro do ano que tiver sido passado.
import numpy as np
>>> np.datetime64('2005') == np.datetime64('2005-01-01')
True

Já o mesmo não é passivel de ser feito passando apenas um dia ou um mês, como abaixo:
>>> np.datetime64('05-01')
numpy.datetime64('0005-01')

Ao inves de termos o dia 01 de maio, temos Janeiro do ano 5. Além disso, como anteriormente, assume-se que se trata do dia 01, como vemos abaixo:
>>> np.datetime64('05-01') == np.datetime64('0005-01-01')
True

Acredito que o melhor pro seu caso seja ter o dia e mês em duas colunas separadas ou realmente trabalhar com essa informação como uma string.
","
            0
        ",,,"['\npython', 'datetime', 'dataframe\n']"
530718,Remover tuplas de uma lista,"
Gostaria de saber como faço para remover uma tupla de uma lista, caso o primeiro índice desta tupla se repete dentre os elementos da lista. Ex:
Se eu tiver uma lista de tuplas com os valores, [('joao', 23), ('joao', 24)], deixar apenas a primeira tupla com o valor joao. Meu código está assim até o momento, qualquer alteração, edito aqui também.
nomes = []
idades = []


while True:
    nome = input('Insira um nome: ')
    if nome == 's':
        break
    idade = int(input('Insira sua idade: '))
    nomes.append(nome)
    idades.append(idade)

pessoas = list(zip(nomes, idades))
print(pessoas)    


","
lista = [('joao', 13),('joao', 23), ('joao', 24),('maria', 23), ('joao', 22), ('maria', 24), ('joaquina', 33)]

Pode transformar em dicionário, assim irá remover as chaves que são iguais. Passo a lista reversa pois você quer o  primeiro elemento.
[*{k:v for k,v in lista[::-1]}.items()]

Saída:
[('joaquina', 33), ('maria', 23), ('joao', 13)]

","
            1
        ","
Uma das soluções que poderia ser implementada é uma função para remover os nomes duplicados, deixando somente o primeiro a ser encontrado:
def remover_nomes_duplicados(lista):
    nomes = []
    idades = []
    for pessoa in lista:
        if pessoa[0] not in nomes:
            nomes.append(pessoa[0])
            idades.append(pessoa[1])
    return list(zip(nomes, idades))

Portanto, seu código ficaria desta maneira:
def remover_nomes_duplicados(lista):
    nomes = []
    idades = []
    for pessoa in lista:
        if pessoa[0] not in nomes:
            nomes.append(pessoa[0])
            idades.append(pessoa[1])
    return list(zip(nomes, idades))


nomes = []
idades = []

while True:
    nome = input('Insira um nome: ')
    if nome == 's':
        break
    idade = int(input('Insira sua idade: '))
    nomes.append(nome)
    idades.append(idade)

print(remover_nomes_duplicados(list(zip(nomes, idades))))

Neste código existem várias redundâncias e erros convencionais, mas como é somente um exemplo, tentei seguir o mesmo modo que você fez para melhor entendimento. Contudo, encorajo a leitura do PEP 8.
","
            0
        ","['\npython', 'python-3.x\n']"
530700,Python Pandas: Dividindo um DataFrame em várias partes com base nas linhas,"
Tenho um DataFrame no Pandas.
Gostaria de dividi-lo em x partes e então atribuir cada uma dessas partes a um critério.
Algo como pegar um DF de 90 linhas, dividi-lo em 3 partes e então atribuir as linhas 1-30 ao critério A, 31-60 ao critério B e 61-90 ao critério C.
Essa atribuição pode ser criando uma coluna nova, novos DFs, tanto faz, e o conteúdo da linha teria que ir completo, com todas as colunas e tal.
A operação seria feita diariamente, com o nº de linhas e de critérios podendo variar.
Alguém sugere uma forma de fazer isso?
","
rapaz, pensei dessa forma aqui:
você passando o número de critérios e quais seria eles:
num_criterios = 5
lista_criterios = ['A','B','C','D','E']
lista_criterios_df = []

Usando dois for para preencher a lista que será adicionada ao df, logo um dos for tem o número de linhas do df e o outro vai ficar alterando entre as classificações passadas, ali também temos uma verificação para garantir que a lista final tenha o comprimento igual ao numero de linhas do df.
for i in range(df.shape[0]):
  for j in range(num_criterios):
    if len(lista_criterios_df) < df.shape[0]:
      lista_criterios_df.append(lista_criterios[j])

Por fim adicionamos ao df atribuindo a uma nova coluna.
df['Nova Categoria'] = lista_criterios_df
df


Espero ter te ajudado!
","
            0
        ",,,"['\npython', 'pandas', 'dataframe', 'divisão\n']"
530695,Extração de dados de uma API - Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Olá, estou tentando fazer a extração de dados dessa API: https://www.balldontlie.io/#get-all-stats com o seguinte código em python:
import requests
import json
import time

resultados_totais = []
paginas_totais_para_ler = int(11000)
contador_extra = 0

for page_num in range(1, paginas_totais_para_ler + 1):
    url = ""https://balldontlie.io/api/v1/stats?per_page=100&page="" + str(page_num)
    print(""Lendo"", url)
    response = requests.get(url)
    data = response.json()
    response.raise_for_status()
    resultados_totais = resultados_totais + data['data']
    contador_extra = contador_extra + 1
    print(contador_extra)
    if contador_extra == 59:
        contador_extra = 0
        print('tempo')
        time.sleep(60)

print(""Temos um total de"", len(resultados_totais), ""resultados"")

with open('test.json', 'w', encoding='utf-8') as d:
    json.dump(resultados_totais, d, ensure_ascii=False, indent=4)

Porém, sempre obtenho esse erro: (https://cdn1.gnarususercontent.com.br/1/292460/5c2858ca-33df-4bd8-9b44-0d50a48ab3e0.png)
A API deveria suportar 60 requests por segundo, as vezes até passa de 60, mas no final sempre dá esse erro. Alguém teria alguma sugestão para poder me ajudar?
OBS: Precisaria dos dados de todas as 11000 páginas do 'stats'
","
Refiz o código (cada pagina salva será idexada com o número dela no JSON, se você quiser pode diminuir o tempo de sleep...)
Deste jeito ele vai salvar a 'data' e 'meta' de cada página, depois de salvo o json é possível fazer uma separação mais rápida e personalizada dos dados...
import requests
import json
import time


def get_data(url_var):
    print(f'Getting data from {url_var}')
    data_var = requests.get(url_var).json()
    print('Ok...')
    return data_var


base_url = r""https://www.balldontlie.io/api/v1/stats?per_page=100&page=""
joined_data = {}

for x in range(1, 11000 + 1):
    data = get_data(f'{base_url}{x}')
    joined_data[str(x)] = dict(data)
    time.sleep(1)

with open('output.json', 'w') as f:
    json.dump(joined_data, f)

","
            0
        ",,,"['\npython', 'api\n']"
530673,Como adicionar valores á uma coluna excel pelo python,"
Boa tarde, estou tentando alterar a idade das pessoas na lista abaixo que vem de um excel, porem ao alterar, o ultimo valor se repete para todas as outras linhas... segue o código:
TABELA:
       NOME  IDADE  teste
0    THIAGO     22      0
1    MARCOS     23      0
2      JOAO     27      0
3  VINICIUS     33      0
4    CARLOS     45      0

CÓDIGO:
import pandas as pd
ex = pd.read_excel('EXCEL.xlsx')
ex['teste'] = 0

for i, p in enumerate(ex['teste']):
    cont = 0
    if i == 0:
        ex['teste'] = int(input('Digite a idade: '))
        cont += 1
    else:
        ex['teste'] = int(input('Digite a idade: '))
        cont += 1

print(ex)

","
Você pode iterar sobre o data frame e utilizar o .loc para atribuir novos valores:
import pandas as pd

nome = ['THIAGO','MARCOS','JOAO','VINICIUS','CARLOS']
idade  = [22, 23, 27, 33, 45]

ex = pd.DataFrame({'NOME': nome, 'IDADE': idade})
ex['Teste'] = 0
display(ex)





NOME
IDADE
Teste




THIAGO
22
0


MARCOS
23
0


JOAO
27
0


VINICIUS
33
0


CARLOS
45
0




Depois iteramos:
for index, row in ex.iterrows():
    ex.loc[index, 'Teste'] = input('Digite a idade: ')

Digite a idade: 10
Digite a idade: 20
Digite a idade: 30
Digite a idade: 40
Digite a idade: 50





NOME
IDADE
Teste




THIAGO
22
10


MARCOS
23
20


JOAO
27
30


VINICIUS
33
40


CARLOS
45
50



 ","
            1
        ",,,['\npython\n']
530623,Eu fiz 2 loops q funcionem mas preciso que eles estejam dentro de outro e não fazer isso,"
from time import sleep
import pyautogui

n: int = 1
acumulador = 1
c1: int = 1
c2 = 1
pyautogui.keyDown('alt')
pyautogui.press('tab')
pyautogui.keyUp('alt')
pyautogui.move(1300, 100)
pyautogui.drag(0, 90, 2)
while n:=1:
   while acumulador <=2:
    pyautogui.click(500, 630)  # 1
    sleep(3)
    pyautogui.click(700, 300)  # 2
    sleep(0.1)
    pyautogui.click(700, 400)  # 3
    pyautogui.click(800, 700)  # 4
    sleep(3)
    acumulador = acumulador + n
       print(acumulador)

else:
    pyautogui.click(500, 700)  # 5
    sleep(1)
    pyautogui.click(400, 630)  # 6
    sleep(3)
    acumulador - acumulador

","
Bom o seu primeiro while esta rodando infinitamente. poderia ser substituido por while True:
então logo que você sai do segundo while quando a a condição retorna você nunca vai entrar no seu bloco else
rode esse exemplo e olha o prompt enquanto executa:
from time import sleep
import pyautogui

n: int = 1
acumulador = 1
c1: int = 1
c2 = 1
pyautogui.keyDown('alt')
pyautogui.press('tab')
pyautogui.keyUp('alt')
pyautogui.move(1300, 100)
pyautogui.drag(0, 90, 2)
while n:=1:
    while acumulador <=2:
        pyautogui.click(500, 630)  # 1
        sleep(3)
        pyautogui.click(700, 300)  # 2
        sleep(0.1)
        pyautogui.click(700, 400)  # 3
        pyautogui.click(800, 700)  # 4
        sleep(3)
        acumulador = acumulador + n
        print(acumulador)

    print(""estou travado aqui e nunca vou entrar no else"")

else:
    pyautogui.click(500, 700)  # 5
    sleep(1)
    pyautogui.click(400, 630)  # 6
    sleep(3)
    acumulador - acumulador

agora se você substituir o print por break acredito que vá resolver
rode esse agora e vê se é o que você precisa:
from time import sleep
import pyautogui

n: int = 1
acumulador = 1
c1: int = 1
c2 = 1
pyautogui.keyDown('alt')
pyautogui.press('tab')
pyautogui.keyUp('alt')
pyautogui.move(1300, 100)
pyautogui.drag(0, 90, 2)

while True:
    while acumulador <=2:
        pyautogui.click(500, 630)  # 1
        sleep(3)
        pyautogui.click(700, 300)  # 2
        sleep(0.1)
        pyautogui.click(700, 400)  # 3
        pyautogui.click(800, 700)  # 4
        sleep(3)
        acumulador = acumulador + n
        print(acumulador)
    
    break
    
pyautogui.click(500, 700)  # 5
sleep(1)
pyautogui.click(400, 630)  # 6
sleep(3)
acumulador - acumulador

","
            0
        ",,,"['\npython', 'loop\n']"
530555,Preciso comparar duas colunas de um dataframe para criar uma lista de resultados ainda não obtidos,"
Eu tenho um dataframe com duas colunas, a primeiro contendo um número identificação e a segunda com os resultados para esse número. Eu preciso compará-las e criar uma lista com os números de identificação que ainda não possuem valores associados.
  df.head()

  N   V
  1  NaN
  2  0.367608
  3  NaN
  4  0.312892
  5  NaN

Eu consigo separar as colunas em listas, mas não consigo comparar as listas uma posição por vez.
for col in df[['V']]:
    print (col)
    for v in df[col]:
        resultados.append(v)

for col in df[['N']]:
    print (col)
    for v in df[col]:
        amostras.append(v)

","
Você pode verificar os valores ausentes na coluna V com a função isna e retornar a coluna N, transformando em uma lista com o to_list
df['N'].loc[df['V'].isna()].to_list()

Saída:
[1, 3, 5]

","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
530341,"most likely due to a circular import - Preciso fazer um programa multi telas, de forma que de cada tela possa voltar ao menu","
No entanto, cada tela está em um uma classe diferente e em um arquivo diferente, quando tento voltar ao menu vai ocorrer o erro de círculo. Qual a melhor forma de resolver?
Segue o código de cada arquivo:
Main
from tkinter import *
from primeira import *
class main():
    def __init__(self):
        self.master = Tk()

        # Configuração da janela principal
        self.master.title('Janela Principal')
        self.master.geometry('480x240')
        self.master.configure(borderwidth=4, background='white')

        self.button = Button(self.master, text='tela 1', command= lambda: self.evento())
        self.button.pack(side='left', fill='x')

        self.master.mainloop()

    def evento(self):
        self.master.destroy()
        FirstWindow()
main()

Primeira tela (em outro arquivo)
from tkinter import *
from main import main
class FirstWindow():
    def __init__(self, master=None):
        master = Tk()
        self.master = master

        # Configuração da janela principal
        self.master.title('Primeira Janela')
        self.master.configure(background='green')
        self.master.geometry('480x240')

        self.button = Button(master, text='menu', command= lambda: self.irMain())
        self.button.pack(side='left', fill='x', expand=True)
        master.mainloop()

    def irMain(self):
        self.master.destroy()
        main()

","
Nunca usei o tkinter mas com o kivymd eu faço assim:
não importo o Main na PrimeiraTela
e na PrimaeiraTela.py faço.
from kivymd.app import MDApp
(...)
app = MDApp.get_running_app()
app.GerenciadorDeTelas.current = 'MinhaTela'
o GerenciadorDeTelas é ScreenManager()
Veja algo parecido no tkinter
","
            0
        ",,,"['\npython', 'tkinter\n']"
530329,Novo dataframe condicionado - python,"
podem me ajudar?
Como criar um novo DataFrame no lugar do código print('ok') da função abaixo?
Incluindo a coluna da empresa e colocando apenas a última linha nessa nova tabela se a condição for satisfeita.
import pandas as pd
import yfinance as yf    

lista = ['LOGN3.SA','VITT3.SA','NEOE3.SA','SAPR4.SA']
for i in lista:
  base = yf.download(i,period='1y', progress=False,show_errors=False).reset_index(drop=False)
  base['Ticker'] = i
  
  vol = base['Volume'].tail(1).item()
  
  if vol >= 10000:
    #Novo df com os dados da ultima linha dos aprovados
    print('ok')
  else:
    continue 

A expectativa é que fique igual a imagem abaixo:

Desde já agradeço quem poder me ajudar.
","
Você pode criar um dataframe fora do for e ir adicionando o resultado a ele:
import pandas as pd
import yfinance as yf    

lista = ['LOGN3.SA','VITT3.SA','NEOE3.SA','SAPR4.SA']
novo_df = pd.DataFrame()

for i in lista:
    base = yf.download(i, period='1y', progress=False, show_errors=False).reset_index(drop=False)
    base['Ticker'] = i

    if base['Volume'].tail(1).item() >= 10000:
        novo_df = novo_df.append(base.tail(1),ignore_index=True)

display(novo_df)





Date
Open
High
Low
Close
Adj Close
Volume
Ticker




2021-10-11
22.719999313354492
22.739999771118164
22.350000381469727
22.43000030517578
22.43000030517578
534200
LOGN3.SA


2021-10-11
9.40999984741211
9.479999542236328
9.359999656677246
9.390000343322754
9.390000343322754
15900
VITT3.SA


2021-10-11
15.600000381469727
15.699999809265137
15.420000076293945
15.649999618530273
15.649999618530273
367900
NEOE3.SA


2021-10-11
3.9200000762939453
3.950000047683716
3.880000114440918
3.930000066757202
3.930000066757202
2086700
SAPR4.SA



 ","
            0
        ",,,['\npython\n']
530315,Como descobrir o tipo de uma variável dada pelo usuário?,"
Gostaria de pedir que o usuário digitasse alguma coisa e descobrir qual o tipo do que ele escreveu. Até agora eu só conheço o input(), mas o input() só retorna o tipo String. Se eu por int(input()) ou float(input()) caio no mesmo problema:  
Não posso fazer:  
n = input()  
if n == int:  
  print('Tente novamente')  

e nem:
n = int(input())  
if n == str:  
  print('Tente novamente') 

Pois eu já especifiquei o tipo da variável. Como eu faço pro programa descobrir o tipo para que eu efetue a condição com base no tipo dela?
","
Mesmo que ele digite 1 ou 1.0 será string de qualquer forma, uma string pode ter formato numérico normalmente, só porque 1 é um numero não quer dizer que o tipo dele vai ser int.
O que você pode fazer é usar duas regex para detectar qual formato a string se assemelha e então fazer o cast, por exemplo:
import re

entrada = input()

if re.match('^\d+$', entrada):
    entrada = int(entrada)
elif re.match('^\d+\.\d+$', entrada):
    entrada = float(entrada)

print(type(entrada), entrada)

A regex ^\d+$ da primeira if vai procurar do começo ao fim da string se tem o formato de numero, sem ponto.
A regex ^\d+\.\d+$ da primeira if vai procurar do começo ao fim da string que comece com formato numérico até chegar a um ponto, assim que chegar no ponto irá procurar o numero após ele, se ocorrer o match irá entrar na if
Acaso não reconheça nenhum ele irá imprimir como string mesmo

Sobre Python 2.7
Apenas para constar, na versão 2.7 do Python o input() fazia a avaliada do conteúdo por conta própria (como se rodasse o ""eval""), então se fizesse um script assim:
entrada = input()

print type(entrada), entrada


Quando o input fosse 1 retornaria: <type 'int'> 1
Quando o input fosse 1.0 retornaria: <type 'float'> 1.0
Quando o input fosse ""1"" retornaria: <type 'str'> ""1""

Então o equivalente do input() do Python 3 para o Python 2 na verdade seria o raw_input()
","
            7
        ","
A resposta está na pergunta. Não tem o que fazer. Você sempre saberá o tipo do valor, não importa como ele é obtido e saberá o tipo da variável naquele momento. Na verdade linguagens como Python não possuem tipos de variáveis, apenas uma etiqueta dizendo que tipo ela está representando naquele momento.
Se o código já sabe qual é o tipo não tem porque descobrir alguma coisa.
Se está usando uma função que recebe um valor que pode ser de vários tipos aí pode usar a função type() para identificar qual é o tipo daquele objeto.
","
            1
        ","['\npython', 'python-3.x', 'variáveis', 'pycharm\n']"
530276,Discord.py não tô conseguindo implementar o ''Else'' no meu comando,"
Bom, eu estou tentando criar um comando de ""avatar"", porém só mostra o icon, e eu queria fazer que meu comando mostrasse gif também. Só que eu queria implementar o ""else"" no comando, mas fica dando erro de ""Syntax"", se alguém puder ajudar a ajeitar o meu código, etc
Meu código:
@commands.command()
    async def avatar(self, ctx, user: discord.Member=None):
        if user == None:
            user = ctx.author
        icon_url2 = user.avatar_url_as
        icon_url = user.avatar_url

        avatarEmbed = discord.Embed(title=f'{user.name}\nClique no icon para baixá-lo.', timestamp=datetime.datetime.utcnow(),color=discord.Color.dark_blue())
        avatarEmbed.set_image(url=f'{icon_url}')

        await ctx.send(embed=avatarEmbed)

Se eu coloco ""Else"" abaixo do await, aparece isso:
SyntaxError: invalid syntax (talks.py, line 346)
","
Pelo que eu entendi você quer fazer o seguinte:
@commands.command()
async def avatar(self, ctx, user: discord.Member=None):
    if user == None:
        user = ctx.author
    icon_url2 = user.avatar_url_as
    icon_url = user.avatar_url

    avatarEmbed = discord.Embed(title=f'{user.name}\nClique no icon para baixá-lo.', timestamp=datetime.datetime.utcnow(),color=discord.Color.dark_blue())
    avatarEmbed.set_image(url=f'{icon_url}')

    await ctx.send(embed=avatarEmbed)
    else:
        #seu codigo aqui

Porem em estruturas condicionais o else deve estar diretamente após o if, exemplo:
@commands.command()
async def avatar(self, ctx, user: discord.Member=None):
    if user == None:
        user = ctx.author
    else:
        #seu codigo aqui
    icon_url2 = user.avatar_url_as
    icon_url = user.avatar_url

    avatarEmbed = discord.Embed(title=f'{user.name}\nClique no icon para baixá-lo.', timestamp=datetime.datetime.utcnow(),color=discord.Color.dark_blue())
    avatarEmbed.set_image(url=f'{icon_url}')

    await ctx.send(embed=avatarEmbed)

Isso deve funcionar, qualquer duvida só perguntar.
","
            0
        ",,,"['\npython', 'syntax-error', 'comandos', 'discord.py\n']"
530184,Como alterar o nome de um endpoint?,"
Estou usando o FastAPI e meu endpoint esta assim:
@router.get(
    ""/teste"",
    include_in_schema=True,
    response_model=model_res.TRetRecepcaoLeitura,
    response_description=""Resposta do ONE para recepcao da leitura"",
    description=""Procedimento de recepcão de leituras no ONE.""
)
def receber_as_leitura_dos_equipamentos_teste(recepcao: model_rec.TRecepLeitura):
    return (recepcao)


Quando eu olho a documentação, o nome do endpoint está baseado no nome da função. Como faço para ele mostrar um nome baseado em uma string ao invés do nome da função?
","
Você pode utilizar o atributo name:
from fastapi import FastAPI

app = FastAPI()


@app.get(""/"", name=""Nome que será exibido"")
async def using_name_attr():
    """"""Descrição do endpoint.""""""
    return {}



","
            2
        ",,,"['\npython', 'redoc', 'fastapi\n']"
530173,Como fazer um programa que imprime o numero de letras do arquivo? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



O meu está a imprimir o numero de palavras, mas não sei como faz para imprimir o número de letras:
O meu está assim:
filename = open(txtfilename)
for line in filename:
    print(line, end ="""")
print(""\n"")
print(""There are"",len(txtfilename),""letters in the file."")
filename.close()

","
Rodei o seu código e está tudo ok, criei um arquivo chamado: 'texto.txt' e me retornou 9 letras, considerando que a string 'texto.txt' tem 9 caracteres.
Mas se a ideia é contar as letras do conteúdo do arquivo, você pode usar a função split() antes e depois a função len().
","
            -1
        ",,,"['\npython', 'arquivo', 'contador\n']"
530155,Python: 0 a esquerda string [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Estou com uma planilha que possui ""ID"" de clientes. Imagem abaixo.
Com a biblioteca Pandas, estou adicionando cada ID em uma posição de uma lista(list).
Mas quando eu adiciono cada elemento, o Python converte em INT eles perdem os 0 da esquerda, ficando lista = list(1234,1235,1236...)
O que eu preciso é adicionar em uma lista como string para preservar o 0 da esquerda, ficando lista = list('0000001234', '0000001235', '0000001236'...)
Alguém tem alguma ideia ?

","
você poderia reconverter o id para string e adicionar os zeros faltantes a esquerda alem disso como você esta trabalhando com pandas você pode definir o tipo do campo para texto para preservar o os zeros no seu dataframe
original_lenght = len('0000001234')
id = int('0000001234')
id_converted = '0'*(original_lenght - len(str(id))) + str(id)
print(id)
print(id_converted)

#ouput
#1234
#0000001234

import pandas
frame = pandas.DataFrame([{""id"":id_converted}])
frame['id'] = frame['id'].astype(str)
frame.head()

#output

#   id
# 0000001234



","
            0
        ",,,"['\npython', 'excel', 'tabela\n']"
530152,Python Pandas: Atualizar linhas DataFrames,"
Resumo do problema:
Boa tarde, estou com uma situação onde possuo dois DataFrames, onde um(df1) possui uma coluna com uma descrição de itens e suas respectivas ID's, e outro DataFrame(df2) com os mesmas Ids, porém com a descrição ""atualizada"", e gostaria que nesse primeiro(df1) recebesse apenas a coluna com a informação atualizada.
Problema:
O primeiro DataFrame(df1) com a descrição.
df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Descricao
0   01  Maçã
1   02  Abacaxi
2   03  Banana
3   04  Laranja
4   05  Morango

O segundo Dataframe(df2) com as informações ""atualizadas"".
df2 = {""Id"": [""02"", ""03""],""Fruta"": ['Abacaxi','Banana']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Descricao
0   02  Abacaxi Maduro
1   03  Banana Madura
  

Resultado esperado:
df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Descricao
0   01  Maçã
1   02  Abacaxi Maduro #Linha atualizada
2   03  Banana Madura #Linha atualizada
3   04  Laranja
4   05  Morango

O que foi tentado:
df1 = pd.merge(df1, df2, how = 'inner' , on = ['Item'])

Mas não resultou o esperado.
","
Você não tem que fazer um merge, mas substituir os valores nos lugares corretos. Veja se esse exemplo não resolve o seu problema:
import pandas as pd

df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
df1 = pd.DataFrame(df1)


df2 = {""Id"": [""02"", ""03""],""Fruta"": ['Abacaxi Maduro','Banana Madura']}
df2 = pd.DataFrame(df2)

df1 = df1.replace ((df1.loc[df1['Id'].isin(df2['Id'])])['Fruta'].values, df2['Fruta'].values)

print(df1)

O meu output foi:
   Id           Fruta
0  01            Maçã
1  02  Abacaxi Maduro
2  03   Banana Madura
3  04         Laranja
4  05         Morango

","
            2
        ","
A solução apresentada por @Flavio Moraes funciona adequadamente.
A solução apresentada abaixo utiliza o merge como ponto de partida. Segue abaixo para ficar documentado:
import pandas as pd

df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
df1 = pd.DataFrame(df1)


df2 = {""Id"": [""02"", ""03""],""Fruta"": ['Abacaxi Maduro','Banana Madura']}
df2 = pd.DataFrame(df2)

df = df1.merge(df2, on=""Id"", how=""left"")
df.Fruta_y.fillna(df.Fruta_x, inplace=True)
df.drop(""Fruta_x"", inplace=True, axis=1)
df.rename(columns={""Fruta_y"": ""Fruta""}, inplace=True)

O output é:
In [18]: df
Out[18]:
   Id           Fruta
0  01            Maçã
1  02  Abacaxi Maduro
2  03   Banana Madura
3  04         Laranja
4  05         Morango

","
            1
        ","['\npython', 'python-3.x', 'pandas\n']"
530096,Dividindo de um dataframe pelo outro com uma condição,"
Tenho dois dataframes, um com marca_x outro com marca_y.
df_marca_x = pd.DataFrame([['MARCA_X', 'SALVADOR', 3.5, 'PIZZA'], 
                     ['MARCA_X', 'BELO HORIZONTE', 2.1, 'PIZZA'], 
                     ['MARCA_X', 'BELO HORIZONTE', 2.1, 'PIZZA'], 
                     ['MARCA_X', 'BELO HORIZONTE', 2.0, 'PIZZA'],
                     ['MARCA_X', 'SÃO PAULO', 2.3, 'PIZZA'],
                     ['MARCA_X', 'SÃO PAULO', 2.5, 'PIZZA'],
                     ['MARCA_X', 'SÃO PAULO', 2.4, 'PIZZA'],
                     ['MARCA_X', 'SÃO PAULO', 1.8, 'PIZZA'],], columns=['MARCA', 'CIDADE', 'PRECO', 'PRODUTO'])

df_marca_y = pd.DataFrame([['MARCA_Y', 'SALVADOR', 5.5, 'PIZZA'], 
                         ['MARCA_Y', 'BELO HORIZONTE', 3.1, 'PIZZA'], 
                         ['MARCA_Y', 'BELO HORIZONTE', 1.1, 'PIZZA'], 
                         ['MARCA_Y', 'BELO HORIZONTE', 1.0, 'PIZZA'],
                         ['MARCA_Y', 'SÃO PAULO', 6.3, 'PIZZA'],
                         ['MARCA_Y', 'SÃO PAULO', 7.5, 'PIZZA'],
                         ['MARCA_Y', 'SÃO PAULO', 8.4, 'PIZZA'],
                         ['MARCA_Y', 'SÃO PAULO', 4.8, 'PIZZA'],], columns=['MARCA', 'CIDADE', 'PRECO', 'PRODUTO'])

Eu gostaria de dividir a coluna df_marca_x['PRECO'] / df_marca_y['PRECO'], onde as cidades forem iguais. Por exemplo:
A grosso modo seria
if cidade == 'sp':
    df_marca_x['PRECO'] / df_marca_y['PRECO']

Isso para todas as cidades, alguém poderia ajudar? Obrigado
","
Você pode utilizar a função where do numpy:
np.where(df_marca_x['CIDADE'] == df_marca_y['CIDADE'], df_marca_x['PRECO']/df_marca_y['PRECO'], 0)

Quando a condição for atendida ele vai dividir, caso contrário vai retornar zero mas você pode colocar um outro valor caso queira
","
            1
        ",,,"['\npython', 'pandas\n']"
530080,Tem como identificar repetição da mesma letra com regex em python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Expressão regular para caracteres repetidos

                                (2 respostas)
                            


Como remover caracteres repetidos de uma string?

                                (2 respostas)
                            


Identificar caracteres numéricos repetidos em sequência

                                (3 respostas)
                            

Fechada há 6 meses.



Quero pegar repetição de letras mais de duas vezes. Exemplo: prrrograaaaamaaçãoo. Transformaria essa string em prrograamaaçãoo usando uma lógica com regex.
Tentei /[a-zA-Z]{3,}/gi, mas pega qualquer sequência de letras e não a mesma.
",,,,,"['\npython', 'regex\n']"
530059,Python Pandas: Adicionar coluna de outro DataFrame,"
Resumo do problema:
Eu gostaria de saber o melhor método de adicionar uma coluna de um data frame em outro.
Possuo dois Dataframes como do exemplo abaixo:
df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Fruta
0   01  Maçã
1   02  Abacaxi
2   03  Banana
3   04  Laranja
4   05  Morango

E o segundo Dataframe
df2 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango'], ""AREA"":['Area 01', 'Area 02', 'Area 02', 'Area 03', 'Area 05']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Fruta    AREA
0   01  Maçã     Area 01
1   02  Abacaxi  Area 02
2   03  Banana   Area 02
3   04  Laranja  Area 03
4   05  Morango  Area 05

Gostaria de um método que acrescente a coluna ""AREA"" do df2 no df1.
O que eu já tentei:
Eu tentei a função apply e map
Apply:
df1['AREA'] = df2['AREA'].apply(lambda x: x)

Map
df1['AREA'] = df1['id'].map(df2['AREA'])

","
Dados
Fiz umas pequenas alterações nos seus dados por razão que eu não entendi de onde você tirou a variável data
df1
   df1 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
   df1 = pd.DataFrame(df1)
   display(df1)


df2
df2 = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango'], ""AREA"":['Area 01', 'Area 02', 'Area 02', 'Area 03', 'Area 05']}
df2 = pd.DataFrame(df2)
display(df2)


df1 com a coluna AREA
df1['AREA'] = df2['AREA']
df1


","
            1
        ",,,"['\npython', 'pandas\n']"
530026,Como separar uma string por datas?,"
Fiz a captura de uma string através de um regex. A string é:
""AGO/2021 Band. Verm. P2 - SET/2021 Band. Esc. Hídrica"".

O regex utilizado foi:
r""[A-Z]{3}\/[0-9 ]{4} Band[.]* [a-zA-Z]+[.]* \w+ \- [A-Z]{3}\/[0-9 ]{4} Band[.]* [a-zA-Z]+[.]* [a-zA-Z-\W]+"".

Gostaria de separar essa string pelas duas datas nela composta, ou seja:
str1 = AGO/2021 Band. Verm. P2
str2 = SET/2021 Band. Esc. Hídrica

Tentei fazer separação também por regex utilizando split(), porém sem muito sucesso. Alguma sugestão?

","
Considerando a string final :
 ""AGO/2021 Band. Verm. P2 - SET/2021 Band. Esc. Hidrica""

É possível separar essa string utilizando o split() da seguinte forma :
var= ""AGO/2021 Band. Verm. P2 - SET/2021 Band. Esc. Hidrica""
var=var.split('-')
print (var[0],var[1])

","
            -1
        ",,,"['\npython', 'regex', 'split\n']"
530017,Animar texto com Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Eu gostaria de saber se existe algum meio de gerar textos animados na tela com Python.
Eu queria fazer um texto aparecer na tela e depois sumir, como uma tela de carregamento em que três pontos aparecem e depois somem.
Eu consegui fazer as letras aparecerem uma após a outra usando essa lógica:
import sys
frase = 'frase animada'
while True:
    for letra in list(frase):
        print(letra)
        sys.stdouy.flush()

Existe alguma maneira de fazer o texto sumir e depois reaparecer?
","
você pode utilizar o parametro end do print passando ""\r"" onde ele ira reescrever
o valor da mesma linha com o novo valor
import time

logs = [
        ""Loading.""
        ""Loading..""
        ""Loading...""
        ""Loading....""
        ""Loading.....""
]

for l in logs:
  time.sleep(1)
  print(l, end=""\r"")


para que você consiga ver ele apagando e reescrevendo a linha é necessário adicionar um sleep
complementando, caso seu desenho  não caiba em 1 unico print você consegue utilizar o comando os.system()
onde executa um comando  do terminal então seria possível limpar o terminal para cada ""frame"" da sua animação.

import os

print(""----"")
print(""|  |"")
print(""|  |"")
print(""----"")

#output
#----
#|  |
#----

#limpa o terminal
os.system(""cls"")
print(""outro frame"")

#ouput
#outro frame


","
            0
        ",,,"['\npython', 'texto\n']"
529988,Expressão regular em python não pega a string completa,"
Estou utilizando este código em python, esperando como retorno [1,5L] mas o que eu recebo é [,5], onde eu estou errando?
string = ""0000000212 - COCA-COLA PET 1,5L C6""
print(re.findall(r'\d+(\,\d+)?\s?[L|ML]{1}', string))

","
Parênteses formam um grupo de captura, e a documentação diz que, quando a regex tem algum grupo, findall retorna apenas o conteúdo dos grupos.
No seu caso você colocou apenas a vírgula seguida de dígitos entre parênteses, por isso  o retorno só tem o trecho correspondente.
Para retornar tudo, basta trocar os parênteses por um grupo de não-captura, colocando ?: depois do (.
Outro detalhe é que a vírgula não precisa ser escapada com \.
E [L|ML] na verdade significa a letra ""L"", ou o caractere |, ou a letra ""M"", ou a letra ""L"" (apenas uma delas). Se a ideia é pegar ""L"" ou ""ML"", pode trocar para M?L - a interrogação indica que o M é opcional (também poderia ser (?:ML|L), mas nesse caso eu acho mais simples M?L).
E {1} significa ""uma ocorrência"", mas é redundante e desnecessário: (qualquer coisa){1} é o mesmo que (qualquer coisa).
Ou seja, ficaria assim:
print(re.findall(r'\d+(?:,\d+)?\s?M?L', string))

","
            2
        ",,,"['\npython', 'regex\n']"
529889,Obter sub-lista com o maior tamanho,"
Preciso criar uma função que receba uma lista aninhada e retorne a sub lista com o maior número de elementos desta lista aninhada. Como fazer?
lista_aninhada = [[10,20],[30,40,50],[19,29,9,49],[0]]
print(lista_aninhada[0])

def max_lista_aninhada(lista_aninhada):
  i=0
  for elemento in lista_aninhada:
    if len(lista_aninhada[i]) > len(lista_aninhada[i+1]):
      print(""a"")
      i=i+1

max_lista_aninhada(lista_aninhada)

","
Você pode usar a função max para retornar o maior elemento de uma sequência. Essa função aceita um argumento chamado key que define qual a lógica que queremos utilizar na hora de comparar elementos e definir qual é o maior.
Se passarmos o argumento key=len para max, a lógica para definir qual elemento é maior é dada pela função len - ou seja, os elementos são ordenados por tamanho e o maior deles é retornado.
Exemplo:
lista_aninhada = [[10,20],[30,40,50],[19,29,9,49],[0]]
maior_sublista = max(lista_aninhada, key=len)
print(maior_sublista)  # output: [19, 29, 9, 49]

Neste caso, cada sublista de lista_aninhada é entregue à função len e comparada com as demais. No fim, a sublista de maior tamanho é retornada.
Note que se houver empate (duas sublistas de mesmo tamanho), a sublista que aparecer primeiro na lista aninhada será retornada.
","
            2
        ",,,['\npython\n']
529886,"Eu queria saber como posso resolver o problema de instalar a biblioteca dataprep em python, já que está retorando um erro e não sei o que fazer","

O erro que a imagem retorna

The conflict is caused by:
dataprep 0.3.0 depends on bottleneck<2.0 and >=1.3
dataprep 0.2.15 depends on bottleneck<2.0 and >=1.3
dataprep 0.2.14 depends on pandas<1.1 and >=1.0
dataprep 0.2.13.post2 depends on pandas<1.1 and >=1.0
dataprep 0.2.13.post1 depends on pandas<1.1 and >=1.0
dataprep 0.2.13 depends on pandas<1.1 and >=1.0
dataprep 0.2.12 depends on pandas<1.1 and >=1.0
dataprep 0.2.11 depends on pandas<1.1 and >=1.0
dataprep 0.2.10 depends on pandas<1.1 and >=1.0
dataprep 0.2.9 depends on pandas<1.1 and >=1.0
dataprep 0.2.8 depends on pandas<1.1 and >=1.0
dataprep 0.2.7 depends on pandas<1.1 and >=1.0
dataprep 0.2.6 depends on pandas<1.1 and >=1.0
dataprep 0.2.5 depends on pandas<1.1 and >=1.0
dataprep 0.2.4 depends on pandas<1.1 and >=1.0
dataprep 0.2.3 depends on pandas<1.1 and >=1.0
dataprep 0.2.2 depends on pandas<1.1 and >=1.0
dataprep 0.2.1 depends on scipy<1.4 and >=1.3
dataprep 0.2.0 depends on scipy<1.4 and >=1.3
dataprep 0.1.0 depends on scipy<1.4 and >=1.3
To fix this you could try to:

loosen the range of package versions you've specified
remove package versions to allow pip attempt to solve the dependency conflict


este é o que o terminal retorna
","
Tenta instalar usando esses comandos que fazem a instalação direta. Eles podem responder de uma outra forma.
pip --trusted-host pypi.python.org --trusted-host pypi.org install --trusted-host files.pythonhosted.org msedge-selenium-tools dataprep

","
            -1
        ",,,"['\npython', 'pip', 'pyinstaller\n']"
529855,NameError Python,"
Estou estudando Python a algum tempo e estou com dúvida no código que fiz abaixo. Ao executá-lo está aparecendo o erro:

""NameError: name 'p1' is not defined""

Alguém pode me ajudar ?
class Produto:


def __init__(self, nome, descricao, valor, senha):
    self.__nome = nome
    self.__descricao = descricao
    self.__valor = valor
    self.__senha = senha
    self.__mostrar_produto()

def __mostrar_produto(self):
    print(f'ID do produto: {p1.__id}')
    print(f'Nome do produto: {p1.__nome}')
    print(f'Descrição do produto: {p1.__descricao}')
    print(f'Valor do produto: {p1.__valor}')
    print(f'Senha: {p1.__senha}')


p1 = Produto('Computador', 'Gamer', 4000, '123456')

","
Você está tentando acessar a instância da classe dentro de um método dela. Mas o nome p1 foi dado a uma instância fora da definição da classe. Nesse caso você deve chamar a própria instância com a palavra-chave self:
def __mostrar_produto(self):
    print(f'ID do produto: {self.__id}')
    print(f'Nome do produto: {self.__nome}')
    print(f'Descrição do produto: {self.__descricao}')
    print(f'Valor do produto: {self.__valor}')
    print(f'Senha: {self.__senha}')

E note, também, que sua classe Produto não tem um campo __id. Você pode defini-lo na classe:
def __init__(self, produto_id, nome, descricao, valor, senha):
    self.__id = produto_id
    self.__nome = nome
    self.__descricao = descricao
    self.__valor = valor
    self.__senha = senha
    self.__mostrar_produto()

Ao final, o código ficaria algo como:
class Produto:


    def __init__(self, produto_id, nome, descricao, valor, senha):
        self.__id = produto_id
        self.__nome = nome
        self.__descricao = descricao
        self.__valor = valor
        self.__senha = senha
        self.__mostrar_produto()
    
    def __mostrar_produto(self):
        print(f'ID do produto: {self.__id}')
        print(f'Nome do produto: {self.__nome}')
        print(f'Descrição do produto: {self.__descricao}')
        print(f'Valor do produto: {self.__valor}')
        print(f'Senha: {self.__senha}')


p1 = Produto(1, 'Computador', 'Gamer', 4000, '123456')

Se o executarmos teremos a seguinte saída:
ID do produto: 1
Nome do produto: Computador
Descrição do produto: Gamer
Valor do produto: 4000
Senha: 123456

","
            4
        ",,,"['\npython', 'orientação-a-objetos', 'self\n']"
529851,Python - Como alterar atributos de uma classe através de outra classe independente,"
Eu tenho uma classe principal que gera e controla objetos da classe auxiliar. Eu preciso que, ao interagir isoladamente com um desses objetos, a classe principal seja alterada apenas na instancia atual.
Segue exemplo:
class MainClass:
    def __init__(self):
        self.widgets = {}
        self.total = 0

    def create_object(self):
        obj_name = ""foo""
        obj_value = 5
        self.widgets[obj_name] = Object(obj_name, obj_value)

    def show_widgets(self):
        print(self.widgets)

    def show_total(self):
        print(self.total)


class Object:
    def __init__(self, obj_name, obj_value):
        self.obj_name = obj_name
        self.obj_value = obj_value

    def add_object(self):
        ***MAIN_CLASS_INSTANCE.total*** += self.obj_value

    def remove_object(self):
        ***MAIN_CLASS_INSTANCE.total*** -= self.obj_value


a1 = MainClass()
a1.widgets[""foo""].add_object()
a1.show_total()

Output desejado: 5
Observações:

Não gostaria de indicar a instancia manualmente. Ex: a1.total += self.obj_value, pois tenho problemas quando crio outras instâncias do MainClass.
Tentei resolver utilizando herança, mas não consegui.
Tentei extrair o nome da instancia da MainClass utilizando o self.__str() e repassar como atributo para a Class Objetc, mas é apenas uma string e não o objeto.

","
Descobri que era só enviar o self com argumento na MainClass.
def create_object(self):
    obj_name = ""foo""
    obj_value = 5
    self.widgets[obj_name] = Object(self, obj_name, obj_value)

E definir o atributo na class Object
class Object:
def __init__(self, main_class, obj_name, obj_value):
    self.main_class = main_class
    self.obj_name = obj_name
    self.obj_value = obj_value

Se alguém souber outra opção melhor... eu agradeço
","
            1
        ",,,"['\npython', 'orientação-a-objetos', 'classes', 'instanciar-objeto\n']"
529789,ordernar lista por tamanho de palavras usando bubblesort [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Estou tentando usar o bubble sort para arrumar uma lista de string em ordem decrescente, mas só estou conseguindo fazer pra arrumar por ordem alfabética. Alguém saberia me dizer o que estou fazendo de errado?
arq_palavras = open('exer_1.txt', 'r')

linhas = arq_palavras.read().lower()
lista_linhas = linhas.split()
print(lista_linhas)

for i in range(len(lista_linhas)-1):
        for j in range(len(lista_linhas) -1 -i):
            if lista_linhas[j] > lista_linhas[j + 1]:
                aux = lista_linhas[j]
                lista_linhas[j] = lista_linhas[j + 1]
                lista_linhas[j + 1] = aux

print(lista_linhas)
arq_palavras.close()

o arquivo no caso tem as seguintes string:
Top Coder comp Wedn at midnight
one three five
I love cpp C
sj sa df r e w f d s v c x z sd fd a

e o output desejado seria esse, com todas as letras minusculas, e caso as strings tenham a mesma quantidade de letras, colocar então em ordem alfabética:
midnight coder comp wedn top at 
three five one 
love cpp c i 
df fd sa sd sj a c d e f r s v w x z

","
Uma possível solução para o seu problema.
arq_palavras = open('exer_1.txt', 'r')

linhas = arq_palavras.read().lower().split('\n')

for i in range(len(linhas)):
  linha = linhas[i].split()
  for j in range(len(linha) - 1):
    for k in range(len(linha) - 1 - j):
      if len(linha[k]) < len(linha[k + 1]):
        aux = linha[k]
        linha[k] = linha[k + 1]
        linha[k + 1] = aux
      elif (len(linha[k]) == len(linha[k + 1])) and (linha[k] > linha[k + 1]):
        aux = linha[k]
        linha[k] = linha[k + 1]
        linha[k + 1] = aux
  linhas[i] = "" "".join(linha)

print(linhas)
arq_palavras.close()

","
            -1
        ",,,"['\npython', 'python-3.x\n']"
529776,Como customizar o response_model de um endpoint?,"
Estou usando a FastAPI do Python e preciso retornar um JSON assim:
{
  ""@xmlns"": ""url"",
  ""@versao"": ""versao"",
  ""tpAmb"": 2,
  ""verAplic"": ""verAplic"",
  ""cStat"": 200,
  ""xMotivo"": ""Cadastro de equipamento realizado com sucesso"",
  ""dhResp"": ""2021-10-02T12:44:49-03:00"",
  ""NSUMovto"": ""mov""
}

Criei o BaseModel no FastAPI assim:
class TRetRecepcaoLeitura(BaseModel):
    xmlns: str
    versao: str
    tpAmb: int
    verAplic: str
    cStat: int
    xMotivo: str
    dhResp: str
    NSU: str

Sé que esse schema não consegue colocar o @xmlns, aparece somente o xmlns. Existe alguma maneira de colocar esse @ no schema a ser retornado?
","
Não diretamente, por conta da própria linguagem não permitir.
Para customizar tipos mais complexos e/ou adicionar informações adicionais do campo definido no schema, você pode utilizar o Field do Pydantic. No seu caso mais especificamente, basta declarar um alias:
from pydantic import BaseModel, Field


class TRetRecepcaoLeitura(BaseModel):
    xmlns: str = Field(..., alias=""@xmlns"")
    versao: str = Field(..., alias=""@versao"")
    tpAmb: int
    verAplic: str
    cStat: int
    xMotivo: str
    dhResp: str
    NSU: str

Quando a documentação for gerada, você terá este resultado:

","
            1
        ",,,"['\npython', 'fastapi', 'pydantic\n']"
529698,Como conectar no SQLAchemy usando arroba (@) na senha do MySql,"
Para criar uma conexão entre o Flask e o MySql eu utilizei o SQLAlchemy que pede a seguinte string para conectar:
mysql://user:password@host/database

Eu fiz a seguinte linha:
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:iniciosenha@@finalsenha@localhost/mk_rb_manager'

Como pode ver, minha senha possui um arroba (@), mas o SQLAlchemy utiliza o arroba (@) para separar user:password do host e isso conflita na hora de conectar, pois ele entende que o arroba da senha é o arroba que separa o host e gera o seguinte erro:
sqlalchemy.exc.OperationalError: (MySQLdb._exceptions.OperationalError) (2005, ""Unknown MySQL server host '@finalsenha@localhost' (11003)"")

Ou seja, ele entende que @finalsenha@localhost é o host pata conectar e executa tudo errado.
Tem alguma maneira de utilizar arroba na minha senha do MySql sem que o SQLAlchemy fique com essa confusão?
","
Uma maneira de resolver o problema seria fazendo um escaping da string de conexão ao banco de dados. A maneira indicada na documentação é usando o urllib.
Na documentação ele dá o seguinte exemplo:
import urllib.parse
>>> urllib.parse.quote_plus(""kx%jj5/g"")
'kx%25jj5%2Fg'

Usando esta estratégia é possível criar a conexão, basta ""montar"" usando o método format.
import urllib.parse

usuario = 'bonzão'
senha = 'iniciosenha@@finalsenha'
urllib.parse.quote_plus(usuario)
# 'bonz%C3%A3o'
urllib.parse.quote_plus(senha)
# 'iniciosenha%40%40finalsenha'
conexao_banco = ""mysql://{}:{}@localhost/mk_rb_manager""
print(conexao_banco.format(urllib.parse.quote_plus(usuario),urllib.parse.quote_plus(senha)))
# mysql://bonz%C3%A3o:iniciosenha%40%40finalsenha@localhost/mk_rb_manager

Após fazer esses ajustes basta aplicar esta estratégia ao seu caso concreto.
A versão final ficaria:
usuario = 'bonzão'
senha = 'iniciosenha@@finalsenha'
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://{}:{}@localhost/mk_rb_manager'.format(urllib.parse.quote_plus(usuario), urllib.parse.quote_plus(senha))

Verifique que neste exemplo estou assumindo que as variáveis usuario e senha já foram declaradas previamente, se não for o caso é possível passar a string diretamente como parâmetro.
Por exemplo:
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://{}:{}@localhost/mk_rb_manager'.format(urllib.parse.quote_plus('meuusuáriotop'), urllib.parse.quote_plus('senhaforte!@#)(*'))

Para saber mais pode consultar a documentação da urllib.parse
","
            1
        ",,,"['\nmysql', 'python', 'flask', 'sqlalchemy\n']"
529688,Dividindo colunas de dataframes diferentes e mantendo seus titulos,"
Tenho um dataframe com total de valores vendidos e outro com total de quilos vendidos.
Eu gostaria de obter o preço dos mesmos dividindo as colunas das mesmas.
Exemplo:
df_valor = pd.DataFrame([[10,6,7,8],
               [1,9,12,14],
               [5,8,10,6]],
              columns = ['a','b','c','d'])

df_kg = pd.DataFrame([[100,62,75,87],
               [15,92,122,141],
               [52,83,120,61]],
              columns = ['a','b','c','d'])

O que eu queria era dividir as colunas umas pelas outras df_valor['a'] / df_kg['a'], isso deve ser feito com todas as colunas, porém mantendo a nomenclatura da coluna ex.: ['a'].
E salvar em outro dataframe, df_preços.
","
Utilizando a mesma regra do amigo jfaccioni, se você quer apenas uma divisão da coluna 'a' em um novo data frame, você deve utilizar a seguinte forma.
df_preços = df_valor['a'] / df_kg['a']
Obs. Respondi aqui pois não posso fazer comentários ainda.
","
            1
        ",,,"['\npython', 'pandas', 'numpy\n']"
529687,Como adicionar usuário em um grupo no Django utilizando CBV?,"
Estou usando CBV para meus cadastros, e tenho a seguinte classe para a criação de usuários no meu projeto:
forms.py
from django import forms
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm


class UserRegisterForm(UserCreationForm):
    email = forms.EmailField()

    class Meta:
        model = User
        fields = ['username', 'email', 'first_name']

    def save.... (Não sei aqui)


views.py
from .forms import UserRegisterForm
from django.views.generic.edit import CreateView
from django.contrib.messages.views import SuccessMessageMixin

class SignUpView(SuccessMessageMixin, CreateView):
    template_name = 'auth/register.html'
    success_url = reverse_lazy('sign-in')
    form_class = UserRegisterForm
    success_message = ""Your profile was created successfully""

Através do Django Admin, criei um grupo chamado readonly, e o que quero fazer é o seguinte:
Toda vez que adicionar um usuário, este usuário deve ser adicionado nesse grupo readonly.
Sei que preciso alterar algo na classe UserRegisterForm no metodo save, mas não tenho ideia como fazer. Alguem pode me ajudar? Obrigado.
","
Adicione o grupo dentro do form_valid. Algo conforme abaixo:
class UserRegisterForm(UserCreationForm):
    email = forms.EmailField()

    class Meta:
        model = User
        fields = ['username', 'email', 'first_name']


    def form_valid(self, form):
        # Adiciona o grupo ao form aqui...
        form.cleaned_data['grupo'] = <GRUPO>  # Veja nota
        return super().form_valid(form)

nota:  deverá ser substituído pelo nome do grupo OU pela instância do grupo OU pelo ID do grupo OU... Depende de como está no models.
Atualização em 2/10/2021
form.cleaned_data retorna um dicionário dos campos do formulário após sua validação
fim da atualização
Perceba que ao chamar o super()... o save() será automaticamente realizado. Veja aqui
","
            0
        ",,,"['\npython', 'django\n']"
529641,Como adicionar valores num dicionário usando input?,"
Criei um dicionário em Python, onde o sistema de cadastramento de livro interage com usuário
O problema que quando adiciono o gênero, eu coloco o mesmo gênero após o loop para verificar se foi adicionado, se caso tivesse sido iria exibir uma mensagem dizendo que já existe. Mas não está sendo adicionado pois o loop se repete ignorando os dados que eu coloquei anteriormente
Código completo
livraria = {'Drama' :1, 'Suspense' :2}

generoA = {'Drama' : 1}

generoB = {'Suspense' : 2}

while op != 0:

    print(""""""Escolha a opção desejada:

     \n1 - Verificar Gênero A:\n2 - Verificar Gênero B:\n0 - Sair do sistema:"""""")
    op = int(input())#Escolha da opcao

    if op == 1:

        generoA = input('Insira o tipo de gênero A: ')

        if generoA in livraria:

            print('Já existe')

        else:

            generoA = []

            titulo = input('Insira o título do livro: ')

            genero = input('Insira o gênero do livro: ')

            subgenero = input('Insira o subgenero do livro: ')

            editora = input('Insira a editora do livro: ')

            n_copias = input('Insira a quantidade de copias: ')

            preco = input('Insira o preco do livro: ')

            generoA.append(titulo)

            generoA.append(genero)

            generoA.append(subgenero)

            generoA.append(editora)

            generoA.append(n_copias)

            generoA.append(preco)

            generoA.append(generoA)

    elif op == 2:

        generoB = input('Insira o tipo do gênero B: ')

        if generoB in livraria:

            print('Já existe')

        else:

            generoB = []

            titulo = input('Insira o título do livro: ')

            genero = input('Insira o gênero do livro: ')

            subgenero = input('Insira o subgenero do livro: ')

            editora = input('Insira a editora do livro: ')

            n_copias = input('Insira a quantidade de copias: ')

            preco = input('Insira o preco do livro: ')

            generoB.append(titulo)

            generoB.append(genero)

            generoB.append(subgenero)

            generoB.append(editora)

            generoB.append(n_copias)

            generoB.append(preco)

            generoB.append(generoB)

","
antes de fazer generoA = [] você tem que colocar generoA em livraria assim livraria[generoA] = ... aí eu não sei que número você quer colocar no lugar desses pontinhos. Se for 3,4,5,6... aí você pode usar livraria[generoA] = len(livraria)
claro, isso se op for igual a 1. Se for igual a 2 vc faz livraria[generoB] = len(livraria).
","
            0
        ",,,"['\npython', 'dicionário\n']"
529596,Como inserir label dentro da aba no widget notebook do tkinter?,"
Preciso colocar um label dentro de uma ""página"" do notebook do tkinter. Quando utilizamos o código apresentado abaixo, o label não é posicionado corretamente (não aparece). O mesmo ocorre quando tentamos inserir uma imagem.
import tkinter as tk
from tkinter.ttk import *


root = tk.Tk()
root.geometry('500x500')

A_frame = Frame(root, width=400, height=400)
B_frame = Frame(root, width=400, height=400)

nb = Notebook(root)
nb.add(A_frame, text='A')
nb.add(B_frame, text='B')
nb.pack()

lb_A = tk.Label(A_frame, text='AAA')
lb_A.place(x=200, y=200)
lb_B = tk.Label(B_frame, text='BBB')
lb_B.place(x=200, y=200)

root.mainloop()

Resultado do código:

","
Você percisa definir o notebook antes dos frames e usar ele como master dos frames:
nb = Notebook(root)
A_frame = Frame(nb, width=400, height=400)
B_frame = Frame(nb, width=400, height=400)

Só fazer isso que vai resovler o seu problema.
","
            0
        ",,,"['\npython', 'imagem', 'tkinter', 'interface', 'label\n']"
529562,Erro SSL (Modulo requests Python),"
Estou desenvolvendo um programa para a captura de artigos no site da Scielo, o programa estava funcionando perfeitamente, porém hoje pela manhã quando fui executa-lo o seguinte erro me foi apresentado:

PS C:\Users\Vinicius> & C:/Users/Vinicius/AppData/Local/Programs/Python/Python39/python.exe c:/Users/Vinicius/Desktop/Estagio2.0/Estagio2.0/main.py
Digite qual o link do resumo? https://www.scielo.br/j/icse/a/jj7Rwgd4DwgBB5WrwhY4Bbb/abstract/?lang=pt
C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'www.scielo.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
warnings.warn(
Traceback (most recent call last):
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connectionpool.py"", line 699, in urlopen
httplib_response = self._make_request(
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connectionpool.py"", line 382, in _make_request
self._validate_conn(conn)
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connectionpool.py"", line 1010, in validate_conn
conn.connect()
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\connection.py"", line 411, in connect
self.sock = ssl_wrap_socket(
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\util\ssl.py"", line 449, in ssl_wrap_socket
ssl_sock = ssl_wrap_socket_impl(
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\site-packages\urllib3\util\ssl.py"", line 493, in _ssl_wrap_socket_impl
return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\ssl.py"", line 500, in wrap_socket
return self.sslsocket_class._create(
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\ssl.py"", line 1040, in _create
self.do_handshake()
File ""C:\Users\Vinicius\AppData\Local\Programs\Python\Python39\lib\ssl.py"", line 1309, in do_handshake
self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired
(_ssl.c:1129)

Acredito que o erro esteja se originando no seguinte trecho do código:
while True:
    try:
        requests.get(link, verify = False) 
    except:  
        link = input('Link fora do ar ou invalido, tente novamente: ')
    else:
        break

(Faz parte de uma função que retorna se o link está ou não on).
Já tentei com e sem o ""Verify""
","
Depois de pesquisas consegui uma resposta paliativa para o problema(pois desisntala os certificados SSL mais recentes e usa antigos), ela é:
 pip uninstall -y certifi
 pip install certifi==2015.04.28

","
            0
        ",,,"['\npython', 'web-scraping', 'ssl\n']"
529524,Como posso fazer o usuario definir quantas vezes vai usar uma função em python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Iteração usando ""while""

                                (3 respostas)
                            


Método de escolha com while

                                (1 resposta)
                            


Sentença while - not true... entendimento da lógica

                                (1 resposta)
                            

Fechada há 6 meses.



def novo(numeros):
    import random
    numeros = []    
    while(len(numeros) < 10):
        num = random.randint(1,20)
        if (not num in numeros):
            numeros.append(num)
    return numeros

","
from random import randint

def novo():
    x = int(input(""Selecione o número de vezes que pretende utilizar a função""))
    i = 0      
    numeros = [] 
    while i <= x:
        num= randint(1,20)
        
        if num not in numeros:
            numeros.append(num)
        print(num)
        i += 1           
    return(numeros)   

","
            -3
        ",,,['\npython\n']
529517,É possível utilizar C# e Python no mesmo executável?,"
Quero criar um software executável para desktop e estou utilizando Python, porém a interface gráfica gostaria de fazer no C#, visto que é muito mais pratico e bonito. Como eu posso correlacionar a interface gráfica no C# com o código criado em Python? Caso não for possível, onde posso fazer essa interface gráfica?
","
Não ficou muito claro em qual parte você utiliza o python mas estou assumindo que seria o backend.
Nesse caso você poderia criar um servidor HTTP para troca de informações via API:
Criação de uma API Rest com Python
Outra forma seria criar os scripts que tu precisa em python e fazer com que o C# os rode passando por parametro os valores:
Como executo um script Python a partir de c #?
Rodar Python e C# juntos
","
            0
        ",,,"['\nc#', 'python', 'interface\n']"
529487,Django is_activate Autentificação de usuario ERROR,"
Estou iniciando com django recentemente e gostaria de uma luz. Tenho um projeto no djando de autentificação de usuario. Basicamente é uma tela de login e senha onde o usuario se cadastra. Porem quando usuario X faz o cadastro o administrador recebe um email de alerta avisando que usuario X se cadastrou no site. O administrador então acessa o site e habilita um checkbox ""is_activate"" onde o usuario pode ter permissão para acessar o site. Até ai funciona perfeitamente.
Agora o problema. No Checkbox quando administrador permite o acesso do usuario tem um def onde é enviado um email para o usuario avisando que o mesmo foi aprovado e pode usar o sistema.
Essa função esta dentro da view update. Assim o admin acessa o formulario marca o checkbox e salva. Esse processo é feito o update. Quando precisa alterar qualquer informação do usuario e salva sempre ta enviando email. Eu queria q o envio fosse somente a primeira vez que aprova.
Alguem sabe como posso solucionar isso ?
Minha Views atualmente. Eu tentei fazer alguma coisa. Mesmo assim sem sucesso.

class UserChange(UpdateView):
    model = CustomUser
    form_class = CustomUserChangeForm
    template_name = 'accounts/user-change.html'
    success_url = reverse_lazy('users')
    success_message = 'Sua mudança de perfil foi bem-sucedida'

    def get(self, request, *args, **kwargs):
        self.object = None
        return super().get(request, *args, **kwargs)

    def post(self, request, *args, **kwargs):
        self.object = None
        username = request.POST.get('username') 
        is_active = request.POST.get('is_active', False) 
        
        # verifica campo se campo is_active estiver True não envia email e save. 
        if CustomUser.objects.get(pk=kwargs['pk']):  
            user = CustomUser.objects.get(pk=kwargs['pk'])
            user.is_active
            print(""user status:  "",user.is_active)
            print(""user activated:  "", user)   
        # se usuario marcar campo para ficar como True envia um email e save. 
        else:
            if is_active == 'on':
                # sendmail_user(username) 
                print(""email test"") 

            print(""user foi ativado"")   
            # se campo estiver is_active estiver como False nao envia email e save. 
        return super().post(request, *args, **kwargs)


",,,,,"['\npython', 'django', 'django-templates', 'django-admin', 'django-queryset\n']"
529482,Programa com lista que receba valores indeterminados em python [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Iteração usando ""while""

                                (3 respostas)
                            


Método de escolha com while

                                (1 resposta)
                            


Sentença while - not true... entendimento da lógica

                                (1 resposta)
                            

Fechada há 6 meses.



Um programa em python que leia e armazene um número indeterminado de valores em uma lista, correspondentes a notas, encerrando a entrada de dados quando for informado um valor igual a -1 (que não deve ser armazenado).
Estou tentando fazer esse programa há uns dias, gostaria de inserir uma quantidade de valores indeterminados na lista, mas até o momento eu só sei usando for i in range() e não é como deve ser...
notas = []

for i in range (0,5):
    val = int(input('digite a nota: '))
    if (val < 0):
        print('fim')
    else: notas.append(val)
    print(notas)

Esse foi o mais perto que cheguei, além disso também não consegui fazer a lista parar de receber dados após um valor menor que 0 seja enviado.
","
Uma coisa importante que você disse sobre o programa parar: ali no seu código a única coisa que o programa está fazendo é imprimir os resultados na tela, apenas usar print('fim') não vai parar a execução.
Agora sobre os laços de repetição, as diferenças básicas dos dois consiste no que o Flavio Moraes disse, vou te explicar:

For:

É necessário saber o número de vezes que se repetirá o código dentro do loop exatamente, ou seja, quando vai acabar. Pode ser usado sobre objetos iteráveis (coleções como listas [], tuplas (), dicionários {}, geradores como o range(), etc)`.

# Aqui no caso, o número de vezes que vamos iterar é o tamanho da lista
# Esta lista possui 4 elementos, então vamos iterar 4 vezes, uma para
# Cada elemento da coleção.
for i in [0,1,2,3]:
    print(i)


Vamos entender os booleanos:

O booleano é o tipo de dado que usamos para fazer comparações e as condições. As condições são usadas por exemplo em: if's, elif's e laços de repetição while.

True  # Valor verdadeiro em Python
# ou
False  # Valor falso em Python


Dica: Você pode explorar o valor booleano das coisas em Python digitando bool(valor). A função bool vai retornar o valor para você. Vamos prosseguir com as condições:

inteiro = 0  # O valor 0 em Python é False, qualquer outro número é True

string = """"  # Strings vazias """" são False em Python, Strings NÃO vazias são True

# Coleções vazias também são avaliadas como False, mas se tiverem pelo menos um 
# elemento dentro delas, serão True

lista = [""""]  # True, pois possui um elemento lá dentro
lista2 = []   # False, pois é uma lista vazia


While:

Diferentemente do for, este laço vai executar o código dentro dele enquanto uma condição for atendida. Então, você pode pensar em como você faria sem código, em português mesmo: ""Enquanto eu tiver notas para armazenar, continue. Se o valor for -1, pare de armazenar"".

while condicao == True:
    # Execute o código

# Dependendo da sua condição, você pode simplesmente colocá-la ali
# porque o Python já faz a avaliação do valor sem precisar comparar
# com os operadores relacionais { <,  >,  ==,  =>,  <=,  != }

while True:
    # Execute o código


Se a condição que está sendo avaliada no laço while for False, ele será encerrado automaticamente.


Agora vamos prosseguir para o código em si!

Uma boa solução seria escrever da seguinte maneira:

notas = []
valor = int(input(""Digite a nota: ""))

while valor != -1:  # Enquanto a entrada não for igual a -1

    # Dessa maneira, nós asseguramos que só valores >= 0 serão aceitos
    # Você também pode delimitar qual é a nota máxima que pode ser inserida
    if valor >= 0 and valor <= 100:  # Neste exemplo, a nota máx. é 100
        notas.append(valor)

    # Inserindo o próximo valor
    valor = int(input(""Digite a nota: ""))

print(notas, ""\nfim"")  # Imprime notas e imprime 'fim' em nova linha



","
            0
        ",,,"['\npython', 'lista', 'if\n']"
529353,Criar uma nova variável em um dataframe a partir da condição de uma variável já existente,"
Estou estudando python e pandas com um banco de dados no qual eu tenho as seguintes variáveis para a idade:
NU_IDADE_N = Correspondente ao número da idade
&
TP_IDADE = Correspondente ao tipo da idade, sendo:
1 - dias
2 - meses
3 - anos




NU_IDADE_N
TP_IDADE




19
3


21
2


56
1


12
3




Eu gostaria de criar uma terceira variável, 'IDADEANOS', na qual se TP_IDADE != de 3 então IDADEANOS = 0
A idéia que eu tive era da seguinte forma:
dados[""IDADEANOS""] = dados[""NU_IDADE_N""] 

if dados[""TP_IDADE""] != 3:
    dados[""IDADEANOS""] ==0

Obviamente não funcionou e apesar de ser algo bem simples eu não encontrei nada na documentação que me auxilie com essa situação especificamente.
Então se alguém tiver uma solução serei muito grato.
Desde já agradeço pela atenção.
","
Crie um função que descreva a lógica que você quer aplicar para cada uma das linhas do seu dataframe:
def func(linha):
    if linha['TP_IDADE'] != 3:
        return 0
    else:
        return linha['NU_IDADE_N']

Depois, use df.apply para aplicar essa função a elementos do seu dataframe, passando também o argumento axis=1 para determinar que a função deve ser aplicada linha-a-linha:
import pandas as pd

df = pd.DataFrame({
    'NU_IDADE_N': [19, 21, 56, 12],
    'TP_IDADE': [3, 2, 1, 3],
})

df['IDADEANOS'] = df.apply(func, axis=1)
print(df)

output:
   NU_IDADE_N  TP_IDADE  IDADEANOS
0          19         3         19
1          21         2          0
2          56         1          0
3          12         3         12

","
            3
        ","
para este caso você pode utilizar o numpy para auxiliar na sua condicional

import pandas
import numpy as np

obj = [
{""NU_IDADE_N"": 19,""TP_IDADE"": 3},
{""NU_IDADE_N"": 21,""TP_IDADE"": 2},
{""NU_IDADE_N"": 56,""TP_IDADE"": 1},
{""NU_IDADE_N"": 12,""TP_IDADE"": 3}
]

df = pandas.DataFrame(obj)

df['IDADEANOS'] = np.where(df['TP_IDADE']!=3, 0, df['NU_IDADE_N'])
df.head()

#output
NU_IDADE_N  TP_IDADE    IDADEANOS
19             3           19
21             2            0
56             1            0
12             3           12


","
            3
        ","['\npython', 'pandas', 'variáveis', 'dataframe', 'condição\n']"
529343,"Pandas read_csv, erro UTF-8. Formato diferente do csv","
estou tentando ler um arquivo csv através de um dataframe pd.read_csv('MGP.csv') e estou tento o seguinte erro.
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe7 in position 72: invalid continuation byte

Tentei também incluir o parametro  encoding='utf-8' e aparece o mesmo erro. Quando eu coloco encoding='latin-1' ou encoding='ISO-8859-1' aparece o seguinte erro:
ParserError: Error tokenizing data. C error: Expected 1 fields in line 3, saw 2

Não sei se faz alguma diferença, mas o formato do CSV que estou recebendo do sistema é bem dirente, veja abaixo:
""   P   r   o   c   e   s   s   o   ""   ;   ""   D   e   s   c   r   i   ç   ã   o   ""   ;   ""   I   D       C   o   m   p   r   a   d   o   r   ""   ;
""      2   0   2   3   3   ""   ;   ""   S   E   R   V   I   Ç   O       D   E       I   N   T   E   R   V   E   N   Ç   Ã   O              S   U   B   S   T   I   T   U   I   Ç   Ã   O       D   E       C   O   M   P   R   E   S   S   O   R   ""   ;   ""   2   5   2   3   9   ""   
   ""   2   0   2   4   5   ""   ;   ""   P   e   s   q   u   i   s   a       -       N   E   G   O   C   I   A   Ç   Ã   O       -       P   e   s   q   u   i   s   a       Q   u   a   l   i           N   o   s       ""   ;   ""   4   4   7   4   5   ""   ;

Sabem com eu consigo resolver esse problema e importar para um dataframe normalmente?
Obrigado
","
Caso queira ignorar as linhas que ocorrem o erro de parsing, pode fazer:
data = pd.read_csv('file1.csv', error_bad_lines=False)

Pode ser um problema com os delimitadores ou com alguma linha em especial. A fim de resolver, procure especificar os argumentos sep e header quando tu chama o read_csv. Um exemplo:
data = pd.read_csv('file1.csv', sep = ';', header=0)

O caracter que não é lido é o ""ç"", assim, outro meio de resolver seria a substituição do ""ç"" por ""c"". Depende do âmbito do problema.
","
            -3
        ",,,"['\npython', 'pandas\n']"
529245,Recursividade em uma lista de objetos,"
PROBLEMA
Estou precisando criar uma estrutura similar com a estrutura de diretórios a partir de uma lista de objetos semelhante à abaixo:
folders = []

folders.append(Folder(id=0, title='_ROOT', parent_id=-1000)
folders.append(Folder(id=1, title='A', parent_id=0))
folders.append(Folder(id=2, title='D', parent_id=3))
folders.append(Folder(id=3, title='B', parent_id=0))
folders.append(Folder(id=4, title='C', parent_id=1))
folders.append(Folder(id=5, title='E', parent_id=4))

Uma vez que não tenho ideia de qual será a profundidade desta estrutura, acredito que recursividade seja a solução.
Meu código
def get_folder_tree(folders):
    result = []
    for folder in folders:
        result.append(folder)
        result.extend(list(filter(lambda x: x.parent_id == folder.id, folders)))
    return result

Resultado atual
[<Folder: _ROOT>, <Folder: A>, <Folder: B>, <Folder: A>, <Folder: C>, <Folder: D>, <Folder: B>, <Folder: D>, <Folder: C>, <Folder: E>, <Folder: E>]

Resultado esperado
Alguma estrutura (dicionário ou árvore talvez) ou mesmo a impressão da estrutura conforme abaixo:
_ROOT
  A
    C
      E
  B
    D

","
Se quer uma estrutura hierárquica, então uma lista contendo todos os objetos não é uma boa opção.
Uma alternativa seria cada Folder ter uma lista contendo apenas os seus filhos diretos. Usando o seu exemplo, o Folder _ROOT teria uma lista de filhos contendo apenas ""A"" e ""B"". Já o Folder ""A"" teria uma lista contendo apenas ""C"", que por sua vez teria uma lista contendo apenas ""E"", e por fim ""B"" teria uma lista contendo apenas ""D"".
Ou seja, adicione esta lista de filhos na sua classe Folder:
class Folder:
    def __init__(self, id, title, parent_id):
        self.id = id
        self.title = title
        self.parent_id = parent_id
        self.children = [] # lista de filhos, começa vazia

Se a ideia é partir da lista que você tem, então você percorre ela e para cada elemento verifica quem é o pai, e adiciona na lista de filhos deste:
def build_tree(folders):
    root = None
    for folder in folders:
        if folder.parent_id < 0: # assumindo que o root tem parent_id negativo
            root = folder
        else: # procura o pai deste folder, e atualiza a lista de filhos deste
            parent = next(filter(lambda f: f.id == folder.parent_id, folders))
            parent.children.append(folder)
    return root # retorna o nó raiz

Estou assumindo que o Folder raiz é o que tem parent_id negativo, e que só terá um. Para os demais, eu procuro pelo pai e adiciono o folder atual na lista de filhos do pai.
Claro que uma forma melhor seria poder passar a lista de filhos no próprio construtor, ou criar um método para adicionar. Mas se a ideia é construir a partir da lista, teria que ser assim (até daria para construir um dicionário que mapeia cada id com o respectivo Folder, assim não precisaria usar filter).
Também estou assumindo que filter sempre encontrará o id em questão, ou seja, não estou validando a estrutura. Você pode incluir esta verificação, bastando checar se next lança um StopIteration, por exemplo.
Depois, tendo o folder raiz, podemos fazer uma função recursiva que imprime toda a estrutura a partir dele:
def print_tree(folder, indent=''):
    print(f'{indent}{folder.title}')
    for child in folder.children:
        print_tree(child, indent + '  ')

Ou seja, primeiro imprime o Folder atual e depois imprime os seus filhos (adicionando espaços no início para ficar indentado). Testando:
folders = []
folders.append(Folder(id=0, title='_ROOT', parent_id=-1000))
folders.append(Folder(id=1, title='A', parent_id=0))
folders.append(Folder(id=2, title='D', parent_id=3))
folders.append(Folder(id=3, title='B', parent_id=0))
folders.append(Folder(id=4, title='C', parent_id=1))
folders.append(Folder(id=5, title='E', parent_id=4))

root = build_tree(folders)
print_tree(root)

Saída:
_ROOT
  A
    C
      E
  B
    D


Solução - na minha opinião - melhor
Como já dito acima, uma forma que considero melhor seria cada Folder poder ser criado já com seus filhos, além de ter um método para adicionar um novo filho:
class Folder:
    def __init__(self, id, title, parent_id=None, children=None):
        self.id = id
        self.title = title
        self.parent_id = parent_id
        self.children = []
        if children is not None:
            for child in children:
                self.add_child(child)

    # adiciona ""child"" na lista de filhos, e atualiza o parent_id deste
    def add_child(self, child):
        self.children.append(child)
        child.parent_id = self.id

No construtor eu optei por adicionar os filhos um a um usando o método add_child, pois ele já trata da lógica de atualizar o parent_id de cada filho (assim eu reaproveito esta lógica, em vez de duplicá-la no construtor).
Desta forma, eu elimino a necessidade de usar a lista (e consequentemente, também não preciso mais da função build_tree):
c = Folder(id=4, title='C', children=[Folder(id=5, title='E')])
a = Folder(id=1, title='A', children=[c])
b = Folder(id=3, title='B', children=[Folder(id=2, title='D')])
root = Folder(id=0, title='_ROOT', parent_id=-1000, children=[a, b])

print_tree(root)

# adicionar novos folders na estrutura fica mais fácil do que usando a lista
a.add_child(Folder(id=6, title='F'))
root.add_child(Folder(id=7, title='G', children=[Folder(id=8, title='H')]))
print_tree(root)

Repare que assim fica mais simples adicionar novos folders na estrutura. Usando a lista, você teria que chamar build_tree novamente (ou então fazer um build_tree_parcial, que verifica quais folders precisariam ser atualizados), ou seja, é mais uma prova de que a lista com todos os folders não é a estrutura mais adequada. E usar a estrutura de dados correta é meio caminho andado para um código melhor.
A saída do código acima é:
_ROOT
  A
    C
      E
  B
    D
_ROOT
  A
    C
      E
    F
  B
    D
  G
    H

Se ainda sim você quiser uma lista com todos os folders (sem se preocupar muito com a hierarquia), é possível obtê-la a partir do folder raiz:
# generator que obtém todos os folders a partir de um folder inicial
def get_all_folders(initial_folder):
    yield initial_folder
    for child in initial_folder.children:
        yield from get_all_folders(child)

# cria uma lista com todos
todos = list(get_all_folders(root))

# se eu só quero percorrer todos, não preciso criar uma lista
for folder in get_all_folders(root):
    # faz algo com o folder

Enfim, uma vez tendo a estrutura correta (cada folder contém uma lista dos filhos), é possível manipulá-la da maneira que quiser, e de forma bem mais simples do que se usasse uma lista com todos os folders.

Considerações finais
Só para constar, se fosse para continuar usando a lista, você teria que fazer algo do tipo:
def print_folders(folders, indent='', current_id=0):
    current = next(filter(lambda f: f.id == current_id, folders))
    print(f'{indent}{current.title}')
    for child in filter(lambda f: f.parent_id == current.id, folders):
        print_folders(folders, indent + '  ', child.id)

print_folders(folders)

A ideia é a mesma da função print_tree: começo na raiz e depois vou buscando os filhos dela (e faço chamadas recursivas para pegar os netos, bisnetos, etc). Mas veja que, como os folders só tem a informação de quem é o pai, eu preciso percorrer a lista toda hora, buscando os elementos que tem determinado parent_id. Isso é extremamente ineficiente, pois percorre a lista várias vezes (tendo uma lista de filhos, como feito anteriormente, pode até ""gastar um pouco mais de espaço"", mas o ganho em tempo acaba compensando, na minha opinião, pois assim eu não preciso percorrer todos os folders toda hora).
Mas e se você quisesse uma lista que, além de ter os folders, também tem a informação sobre o seu respectivo nível na hierarquia, então uma alternativa seria criar uma lista de tuplas (onde cada tupla tem o folder e seu nível):
def build_tree(folders, tree, level=0, current_id=0):
    current = next(filter(lambda f: f.id == current_id, folders))
    tree.append((current, level)) # folder e seu respectivo nível na árvore
    for child in filter(lambda f: f.parent_id == current.id, folders):
        build_tree(folders, tree, level + 1, child.id)

tree = []
build_tree(folders, tree)
for folder, level in tree:
    print(f'{""  "" * level}{folder.title}')

Mas ainda sim tem o mesmo problema da ineficiência de percorrer a lista várias vezes. No fim, ainda prefiro as soluções anteriores (cada folder tem uma lista dos filhos), que não só são mais eficientes, como também são semanticamente mais corretas (já que a estrutura representa melhor como os dados são organizados de fato: como uma árvore/hierarquia).
","
            6
        ","
Também é possível representar e manipular uma arvore com o auxilio do módulo treelib.
No manual são descritas algumas das características do módulo:

O treelib foi criado para fornecer uma implementação eficiente da estrutura de dados em árvore em Python.
As principais características do treelib incluem:

Operação eficiente de pesquisa de nó, O(1).
Suporta operações de árvore comuns, como travessia, inserção, exclusão, movimentação de nó, cópia superficial/profunda, corte de subárvore etc...
Suporta carga útil de dados definida pelo usuário para acelerar a construção de seu modelo.
Exibição bonita da árvore com dump de texto/json para exibição e análise offline.
Compatíbilidade com Python 2 e 3.


Para criar uma árvore use constructor treelib.tree.Tree().
Para para criar e adicionar nós filhos use o método treelib.tree.Tree.create_node() onde os parâmetros são:

tag : Um rótulo para o nó.
identifier: O identificador do nó dentro da hierarquia.
parent: O identificador do nó ancestral.
data: Um dado definido pelo usuário armazenado no nó.

O exemplo da pergunta ficaria:
from treelib import Node, Tree

folders = Tree()
folders.create_node('_ROOT',0)
folders.create_node('A', 1, 0)
folders.create_node('B', 3, 0)     #Note que foi modificada a ordem de inserção dos nós...
folders.create_node('D', 2, 3)     #...pois só é possível inserir um descendente a um nó já existente.
folders.create_node('C', 4, 1)
folders.create_node('E', 5, 4)

print(folders)

Cujo a saída:
_ROOT
├── A
│   └── C
│       └── E
└── B
    └── D

Teste o exemplo no Repl.it
","
            5
        ","['\npython', 'python-3.x', 'recursão\n']"
529234,Tenho que fazer login toda vez que rodo um robô com Selenium,"
alguém sabe como eu consigo fazer com que um robô faça login apenas uma vez na Binomo e depois, caso eu o rode novamente, ele não precise fazer isso?
Estou usando selenium para acessar o site da Binomo, preencher o formulário e acessar a plataforma.
As vezes ele não pede um captcha, mas as vezes pede.
Existe uma maneira de deixar ele persistente(não sei se esse seria o termo)?
Este é o meu código (sou novo no python)
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
import time

linkDeAcesso = 'https://binomo.com/trading'

option1 = Options()
option1.add_argument(""--disable-notifications"")

browser = webdriver.Chrome(options=option1)
browser.get(linkDeAcesso)

time.sleep(2)

browser.find_element_by_xpath('//*[@id=""qa_auth_LoginEmailInput""]/vui-input/div[1]/div[1]/vui-input-text/input').send_keys(""e-mail"")
browser.find_element_by_xpath('//*[@id=""qa_auth_LoginPasswordInput""]/vui-input/div[1]/div[1]/vui-input-password/input').send_keys(""senha"")
browser.find_element_by_xpath('//*[@id=""qa_auth_LoginBtn""]/button').click()

time.sleep(10)

browser.find_element_by_xpath('//*[@id=""asset-0""]/button').click()
browser.find_element_by_xpath('//*[@id=""qa_trading_dealTimeInput""]/div[1]/div[1]/vui-input-number/input').click()

textoAlternativo = browser.find_element_by_xpath('//*[@id=""qa_trading_dealTimeInput""]/div[1]/vui-popover/div[2]/lib-platform-scroll/div/div/div/div[1]/vui-option[5]').text
browser.find_element_by_xpath('//*[@id=""qa_trading_dealTimeInput""]/div[1]/vui-popover/div[2]/lib-platform-scroll/div/div/div/div[1]/vui-option[5]').click()
conta = browser.find_element_by_xpath('//*[@id=""account-btn""]/div/p[1]').text

time.sleep(2)

if conta == 'Conta demo':
    print('Conta demo')
else:
    print('Conta Real')

Ele tem que seguir os passos:

Abrir o navegador
Acessar o site da Binomo
Preencher o formulário com usuário e senha
Clicar no botão de entrar (problema este que as vezes é apresentado um capctha)
Ao acessar a plataforma, ele deve escolher o tempo de 5 minutos e os pares ""Crypto IDX""

Problema é toda vez ele abrir o navegador e ter que preencher novamente o login.
","
Com o selenium coloca ele para pegar um perfil de usuario para que o cache fique salvo
from Selenium import webdriver

options = webdriver.ChromeOptions() 
options.add_argument(""user-data-dir=C:\\Path"") #acminho do seu perfil do chrome 
#EXEMPLO: C:\\Users\\NOME_DO_SEU_PC\\AppData\\Local\\Google\\Chrome\\User Data\\Default
w = webdriver.Chrome(executable_path=""C:\\Users\\chromedriver.exe"", chrome_options=options)

","
            -1
        ",,,"['\npython', 'selenium', 'testes-automatizados\n']"
529197,Não consigo usar os pacotes do PIP,"
Sou novo no python e com gerenciamento de pacotes, então várias dúvidas acabam surgindo, gostaria que alguém pudesse me ajudar a esclarecer.
Quando eu instalo um pacote via pip, ex: pip install opencv-python, eu simplesmente abro o CMD em admin e executo o comando.
Quando eu crio o projeto e importo a biblioteca, nesse caso import cv2, os compiladores não reconhecem; somente se eu der o pip dentro da pasta do projeto.
Gostaria de saber se realmente é para ser assim, ou a instalação deve ser de forma ""global""?
O que eu estou fazendo errado?
","
Anaconda
Se você possui o IDE da anaconda e o sistema operacional Windows, você simplesmente pode executar esse seguinte código:
conda install -c https://conda.binstar.org/menpo opencv

Linux
Se você possui o sistema operacional Linux, você pode simplesmente fazer dessa maneira
pip install opencv-python

ou
conda install opencv 

ou
sudo pip3 install opencv-python

Windows sem a IDE anaconda
Se você possui apenas o Windows e o Python, você pode utilizar esses seguintes comandos no terminal do CMD (obs: não pode ser no terminal do Python):
pip3 install opencv-python

ou
pip install opencv-python 

Teste
Para certificar se você conseguiu instalar a biblioteca com sucesso, basta você abrir o terminal do Python e importar o módulo cv2. Caso o terminal não informe nenhum erro, deu certo

PyCharm
Se utiliza o PyCharm como IDE e importou o módulo cv2 (já instalado) e não funcionou, você tem que fazer algumas configurações na IDE para funcionar. Da uma olhada nesse site para saber como que configura a IDE para reconhecer o cv2 PyCharm não reconhece cv2
","
            0
        ","
Você pode estar passando por esses 2 problemas.
1 - A ""chamada"" do pacote pode estar errada, você pode ter que especificar onde está o cv2 com um ""from opencv-python < (Isso daqui pode variar) import cv2"".
2 - Se você estiver usando PyCharm para desenvolver o compilador que o seu PyCharm está usando é o virtual, ai ele pode não pegar o pacote que você baixou na sua maquina. Em configurações do Pycharm e até mesmo nas configurações de execução do programa você pode editar o compilador que está utilizando, se o PyCharm estiver usando o compilador virtual só aponta ele para o compilador da maquina passando o caminho de instalação do Python.
","
            0
        ","['\npython', 'python-3.x', 'opencv', 'packages', 'pip\n']"
529183,Aplicação só funciona no meu pc [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Gostaria que fosse uma das clássicas piadas de ""só roda na minha máquina"", mas já estou perdendo a cabeça!
Então tenho uma aplicação de processamento de linguagem natural (NLP) que estou usando docker a estrutura é bem simples tenho um container com o backend em python onde a frase é processada e a comunicação é pelo framework fastapi,
O frontend é usando node/typescript/react quando um usuário escreve uma frase qualquer no form ele faz um POST usando o Axios no endpoint do backend (localhost:8000/process) até aí tá tudo perfeito! Tudo funciona isolado e em conjunto, só que em conjunto só funciona no meu pc! Dentre as soluções já configurei o CORS no fastapi e se eu faço o mesmo procedimento por outro computador só que invés de ir pelo front fazer um POST pelo insomina/postman enfim eles funcionam perfeitamente o backend devolve a resposta direitinho, mas pelo front só vai pelo meu pc! Hoje pela manhã decidi tentar um reverse-proxy usando nginx, porém como não tenho experiência com nginx não sei se está bem configurado, porém, também não funcionou, quando em outro pc eu acesso o frontend e digito a frase a ser processada não há comunicação inclusive uma das funcionalidades é reportar se a frase foi ""mal processada"" então se o usuário clica em um botão para ""reportar"" a frase ele é redirecionado pra um endpoint ""/frase-reportada"" no meu pc vai direitinho, já em outro pc invés de aparecer a frase no endpoint aparece undefined.
Esse é o docker-compose:
version: ""3.8""
services: 

rev-proxy-server:
    image: nginx:1.17.10
    container_name: rev_proxy
    depends_on:
        - api
        - client
    volumes:
        - ./reverse_proxy/nginx.conf:/etc/ngnix/nginx.conf
    ports:
        - 80:80

api:
    build: ./backend
    command: gunicorn --bind 0.0.0.0:8000 wsgi:app -w 1 -k uvicorn.workers.UvicornWorker & gunicorn --limit-request-line 0
    volumes: 
        - .:/code
    working_dir:
        /code/backend
    ports: 
        - ""8000:8000""

client:
    image: node:12
    ports: 
        - '3000:3000'
    build: ./frontend
    volumes: 
        - .:/front
    working_dir: /front/frontend
    command:  'yarn start'
    
    depends_on: 
        - api

e esse é o nginx.conf, caso o error seja mal configuração do reverse-proxy
user www-data;
worker_process auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name localhost 127.0.0.1;
    
        location / {
            proxy_pass http://api:8000;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }
}

Imagino que o problema não está nos outros arquivos, pois, isolados funcionam e em conjunto também, só que em conjunto só no meu pc
Enfim realmente não tenho mais ideia do que poderia ser, e ficarei muito grato em receber qualquer direcionamento!
","
Como havia dito o frontend fazia um POST no endpoint do backend, na configuração do Axios estava para localhost:8000/process daí obviamente só funcionaria no meu pc, qualquer outro dispositivo tentaria acessar o próprio localhost e falharia, só mudei de
const api = axios.create({
baseURL: ""http://localhost:8000""
})

Para:
const api = axios.create({
baseURL: ""http://192.168.0.108:8000"" //meu IP local e a porta do serviço
})

","
            0
        ",,,"['\npython', 'docker', 'nginx', 'docker-compose\n']"
529174,Como simular shift + click em python,"
Galera, alguem sabe como simular um shift + click?
O objetivo deste código é que o a keyboard Shift se mantenha ativada durante o clique que será executado nas coordenadas (x,y).
Não precisa necessariamente utilizar do pyautogui ou win32api. Pode ser qualquer tipo de solução que consiga simular um clique enquanto o shift está pressionado.
O problema atual é que o shift e o clique é executado, porém não são executados ao mesmo tempo ou o shift não permanece quando o comando click é executado. Tentei utilizar um while(pyautogui.keyDown('shift') e o comando shift estava sendo executado porém dentro disto o clique não era executado.
Estou tentando de varias formas com keyup keydown (até dentro da função click) e o shift sempre sai separado dos clicks:
import pyautogui
from pyautogui import *
import time
import win32api, win32con

def click(x,y,andar): #single click, u can swich andar to do a right or left click 
        if(andar):

            win32api.SetCursorPos((x,y))
            win32api.mouse_event(win32con.MOUSEEVENTF_RIGHTDOWN,0,0)
            time.sleep(0.01)
            win32api.mouse_event(win32con.MOUSEEVENTF_RIGHTUP,0,0)
            print('right click')
            
            
        else:

            win32api.SetCursorPos((x,y))
            win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,0,0)
            time.sleep(0.01)
            win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,0,0)
            print('left click')

while(True):
      if  pyautogui.locateOnScreen('C:\\xxx\\shiftclick_here.png', confidence=0.8) != None:
            pyautogui.keyDown('shiftleft')
            click(1585, 548, False)#click at where i want
            pyautogui.keyUp('shiftleft')
            time.sleep(0.01)


Explicando o código:
A def click é apenas uma função para executar o click na coordenada que eu quero sem necessariamente especificar a todo momento a coordenada, funciona como um encurtador de código sempre que eu quero clicar.
O while(True) está em loop analisando se uma imagem (shiftclick_here.png) na minha tela está presente, caso esteja presente ele executa a função de clicar na coordenada que essa imagem SEMPRE aparece.
O clique funciona perfeitamente, mas a combinação com o shift não está funcionando da forma que deveria, ou seja, ao mesmo tempo.
Já procurei pelo Stack outros tópicos sobre o assunto, tentei aplicar uma correção no meu porém não tive nenhum sucesso...
","
Tenta usar pyautogui.keydown('shift') e depois o click
","
            0
        ",,,"['\npython', 'teclado', 'eventos-do-mouse', 'winapi', 'pyautogui\n']"
529146,Iterar colunas groupby,"
Criei um DataFrame para uma análise imobiliária com 6 colunas, sendo elas: index, valor do aluguel, bairro, nº de quartos, nº de vagas e área. Depois criei um objeto agrupado:
bairros = df.groupby(by = ""Bairro"")

Como é de se esperar, agora ele tem o bairro como índice e mais 4 colunas. Gostaria de saber como posso criar um for para iterar entre as colunas. Meu objetivo final é generalizar para cada coluna a deleção de outliers que fiz somente para a coluna ""Valor"":
Q1 = bairros.quantile(0.25)
Q3 = bairros.quantile(0.75)
IIQ = Q3 - Q1
lim_inf = Q1 - 1.5*IIQ
lim_sup = Q3 + 1.5*IIQ

aluguel = pd.DataFrame()
for bairro in bairros.groups.keys():
    qual_bairro = dados[""Bairro""] == bairro
    dentro = ((dados[""Valor""] >= lim_inf[bairro]) & (dados[""Valor""] <= lim_sup[bairro]))
    selecao = qual_bairro & dentro
    df_selecao = dados[selecao]
    aluguel = pd.concat([aluguel, df_selecao])

",,,,,"['\npython', 'pandas', 'group-by\n']"
529126,extrair json dentro de resposta request,"
import requests
r = requests.get('https://www.streamersonnew.world/list')
print(r.text)

dentro da variavel r, tem um json aprensentado como:
<script id=""__NEXT_DATA__"" type=""application/json"">
eu preciso pegar esse json, mas nao faço a minima ideia de como conseguir
","
Use o PyQuery
pip install pyquery
from pyquery import PyQuery as pq
import json
import requests
r = requests.get('https://www.streamersonnew.world/list')
html = pq(r.text)
jsoncode = html('script#__NEXT_DATA__').text()
result = json.loads(jsoncode)

O JSON retornado ficou salvo na variável result
","
            0
        ","
Uma alternativa bem simples é usandoa biblioteca BeautifulSoup
Exemplo:
import requests
import json
from bs4 import BeautifulSoup

r = requests.get('https://www.streamersonnew.world/list')

# Parce do response.text para html
html_base = BeautifulSoup(r.text, 'html')

# Procura pela tag script com o id...
script = html_base.find('script', {'id':'__NEXT_DATA__'})

# Pega o conteúdo(string) da tag script encontrada
texto_do_script = script.string

print(json.loads(texto_do_script))

","
            0
        ","['\npython', 'json', 'python-requests\n']"
529106,transformar números de listas em números de uma matriz em python,"
Não consigo pegar os elementos passados pelo usuário e transformar numa matriz, sempre tá dando erro em algo.

Faça um programa que receba entradas inteiras do usuário enquanto ele não digitar ”s”, sem aspas, e as adicione em uma lista.
A seguir leia dois números, indicando, respectivamente, o número de
linhas L e o número de colunas C que a matriz resultante deve ter.
Você deve converter a lista dada em uma matriz de L linhas e C colunas, em que os C primeiros números correspondem à primeira linha, os C seguintes correspondem à segunda linha, etc.
Caso a quantidade de números fornecidos não for igual à quantidade de números necessários para a criação da matriz, seu programa deve escrever apenas ”IMPOSSIVEL”, sem aspas e sem acento.

Meu código está assim até o momento, qualquer alteração vou mudando aqui também.
lista = []

linhas = int(input('Digite um número de linhas: '))
colunas = int(input('Digite um número de colunas: '))

while True:
    n = input('Digite um número: ')
    if n == 's':
        break
    lista.append(int(n))
print(lista)


if len(lista) == linhas * colunas:
    matriz = []
    for i in range(linhas):
        for j in range(colunas):
            lista[i] = lista[i][j]
    matriz.append(lista[i], end=' ')
else:
    print('IMPOSSIVEL')
print(matriz)

","
Tem vários problemas no seu código, um deles é fazer lista[i][j]. Como lista é uma lista de números, então lista[i] é um número, e portanto não tem como acessar a posição j deste número. Mas mesmo que pudesse, a lógica está errada.
Como você já verificou antes se o tamanho da lista está correto, você não precisa mais de 2 loops aninhados. Basta iterar pela lista, e quando a quantidade de elementos completar uma linha, você adiciona na matriz e começa uma nova linha:
matriz = []
if len(lista) == linhas * colunas:
    linha = [] # criar uma nova linha
    for n in lista: # para cada elemento da lista
        linha.append(n) # adicionar na linha
        if len(linha) == colunas: # se já deu a quantidade de colunas, é porque a linha está preenchida
            matriz.append(linha) # adiciona a linha na matriz
            linha = [] # começa uma nova linha
else:
    print('IMPOSSIVEL')


Outra forma é você quebrar a lista em várias sub-listas (cujos tamanhos são a quantidade de colunas), usando a sintaxe de slice:
matriz = []
if len(lista) == linhas * colunas:
    for i in range(0, len(lista), colunas):
        matriz.append(lista[i: i + colunas])
else:
    print('IMPOSSIVEL')

No caso, o range percorre a lista, porém em vez de avançar de um em um, ele avança de colunas em colunas. Depois, o slice [i: i + colunas] cria uma sub-lista cujo tamanho é a quantidade de colunas.
Outra forma de fazer é usando list comprehension, bem mais sucinta e pythônica:
if len(lista) == linhas * colunas:
    matriz = [ lista[i: i + colunas] for i in range(0, len(lista), colunas) ]
else:
    print('IMPOSSIVEL')

Lembrando que estas soluções funcionam porque você verificou o tamanho da lista antes, por isso temos certeza que não sobrarão nem faltarão elementos na matriz. Se a ideia fosse adicionar elementos, porém tomar alguma ação no caso de sobrar ou faltar, aí teria que incluir esta verificação dos elementos restantes (ou faltantes), e tomar alguma ação em cada caso.

Por fim, outra solução (meio overkill, mas fica como curiosidade) é:
if len(lista) == linhas * colunas:
    matriz = list(map(list, zip(*[iter(lista)] * colunas)))
else:
    print('IMPOSSIVEL')

Esta solução é baseada em uma das ""receitas"" do módulo itertools (porém lá é uma solução mais genérica, já aqui eu simplifiquei porque verificamos antes que o tamanho da lista é adequado, e não precisa de tudo que tem lá).
","
            1
        ","
o segredo é que você precisa de uma lista temporária que vc vai adicionar cada elemento da lista, e depois você adiciona a lista temporária na matriz:
if len(lista) == linhas * colunas:
    matriz = []
    for i in range(linhas):
        lista_temp = []
        for j in range(colunas):
            lista_temp.append(lista[i*colunas+j])
        matriz.append(lista_temp)
    print(matriz)
else:
    print('IMPOSSIVEL')

tem esse trecho que diz lista_temp.append(lista[i*colunas+j]) isso porque a lista tem todos os elementos da matriz planificados, e você precisa saber onde da lista está elemento (i,j)
","
            0
        ","['\npython', 'python-3.x', 'matriz\n']"
529066,Identificar objeto na imagem e cortar imagem em python,"
Olá, estou trabalhando em um projeto para fins cientifico. Neste projeto irei identificar pólen e classifica-los, para isso estou utilizando opencv-python. Eu até consigo treinar as imagens e fazer testes comparativos, porém tem um preparo das imagens que estou fazendo manualmente e quero automatizar. veja abaixo a imagem original:

Eu a corto no local onde esta o pólen, porém faço manualmente. Veja abaixo como ela fica:

E então só depois disso faço o treinamento e os testes. Gostaria de fazer esta identificação de forma automática. e cortar de forma automática. Então encontrei este método para tentar ajudar que deixa um circulo ao redor do pólen. Veja exemplo abaixo:

Perceba que o formato não saiu de acordo, sendo assim sem sucesso! para isto utilizei o seguinte código:
circles = cv2.HoughCircles(img_cinza, cv2.HOUGH_GRADIENT, 1, 100, param1=50, param2=14, minRadius=170, maxRadius=300)

Então gostaria de saber se é possível construir um código capaz de realizar o corte ao redor dos pólens. Agradeço desde já.
",,,,,"['\npython', 'opencv\n']"
529058,Como alinhar saídas do comando print utilizando f strings?,"
Seja o código abaixo que funciona:
arquivo = open(""usuarios.txt"",""r"")
leitura = arquivo.readlines()
arquivo.close()
#print(leitura)


def converte_megabytes(bytes):
    return int(bytes) / 2 ** 20

def percentual(mega):
    mega = int(mega)
    total_espaço = 0
    for i in range(len(leitura)):
    #print(leitura[i].split()[1])
        total_espaço += int(leitura[i].split()[1])

    return f'{100*mega/total_espaço:.2f}'

def espaçoTotal():
    total_espaço = 0
    for i in range(len(leitura)):
        # print(leitura[i].split()[1])
        total_espaço += int(leitura[i].split()[1])
        total_espaço_mega = converte_megabytes(total_espaço)
    return total_espaço_mega


#print(percentual(456123789))

#print(f'{""Nr.""}  {""Usuário""}      {""Espaço utilizado""}     {""% do uso""}')
print(f'{""ACME INC."":^60}')
print(f'{""RELATÓRIO DE USO DE ESPAÇO EM DISCO PELOS USUÁRIOS"":^60}')
print('-' * 70)
print(""Nr."" + 'USUÁRIO' + ' '*19 + 'ESPAÇO USADO' + ' '*16 + '  % USO')
print('-' * 70)
for i in range(len(leitura)):
    print(f""{i+1} {leitura[i].split()[0]}       {converte_megabytes(leitura[i].split()[1]):^10.2f}MB        {percentual(leitura[i].split()[1]):^10}%"")

print(f""\nEspaço total ocupado {espaçoTotal():.2f} MB"")
print(f""Espaço médio ocupado {espaçoTotal()/len(leitura):.2f} MB"")

O arquivo usuarios.txt (valores em bytes):
alexandre       456123789
anderson        1245698456
antonio         123456456
carlos          91257581
cesar           987458
rosemary        789456125

O único problema é saída que não consigo alinhar:

Como deixar tudo alinhado na saída usando as f-strings (padrão print(f"""")) ?
","
Para processar e consolidar dados (como parece ser a ideia, já que você está calculando o total, porcentagens, média, etc), claro que você dispor de uma biblioteca como o Pandas, conforme já sugerido em outra resposta.
Mas para um arquivo tão pequeno e com estrutura tão simples, não precisaria disso. Dá para resolver com estruturas e funções nativas sem problema.
Primeiro, você pode calcular o total enquanto lê o arquivo. Da forma que você fez, dá muitas voltas: primeiro lê todo o arquivo, depois para cada linha você percorre todas elas para calcular o total, e esse total é recalculado toda vez para cada linha, quando você percorre os dados para imprimi-los (aliás, tem uma função para calcular o total, e a outra que, ao calcular o percentual, também calcula o total de novo). Não precisa disso: calcule o total apenas uma vez, e já aproveite para deixar os dados pré-processados (em vez de ficar chamando split toda hora, outra redundância desnecessária). Algo assim:
def converte_megabytes(size_in_bytes):
    return int(size_in_bytes) / 2 ** 20

dados = []
total = 0
with open(""usuarios.txt"",""r"") as arquivo:
    for linha in arquivo: # para cada linha do arquivo
        nome, espaco = linha.split()
        espaco = converte_megabytes(espaco)
        # insere uma tupla, contendo o nome e o espaço em MB
        dados.append((nome, espaco))
        total += espaco

Ou seja, para cada linha do arquivo eu chamo split apenas uma vez (ao invés de chamar toda hora, como você estava fazendo) e já converto o espaço ocupado em MB (pois me parece que você não está em nenhum momento usando os valores originais em bytes). Depois, insiro na lista uma tupla contendo o nome e o espaço. Assim, a lista já terá os dados no formato que preciso, e não precisarei converter toda hora (eu prefiro assim, a menos, é claro, que você precise guardar a linha inteira da forma que está no arquivo).
E repare que já vou calculando o total no mesmo loop, assim não preciso recalculá-lo várias vezes.
E também usei with, que garante que o arquivo é fechado ao final.
Depois, para formatar, basta usar as opções de formatação para alinhar à esquerda ou direita, conforme a necessidade. E para deixar mais flexível, você pode definir os tamanhos de cada coluna e usá-las no próprio formato. Assim:
def formatar(dados, total, cols_sizes):
    # cabeçalho (usa os tamanhos das colunas)
    formato_cabecalho = '{:{col1_size}} {:<{col2_size}} {:>{col3_size}} {:>{col4_size}}'
    print(f'{""RELATÓRIO DE USO DE ESPAÇO EM DISCO PELOS USUÁRIOS"":^60}')
    print('-' * 70)
    print(formato_cabecalho.format('Nr.', 'USUÁRIO', 'ESPAÇO USADO', '% USO', **cols_sizes))
    print('-' * 70)

    # os dados desta coluna tem tamanho menor, para acomodar o "" MB"" depois
    cols_sizes['col3_size_data'] = cols_sizes['col3_size'] - 3
    # dados (usa os mesmos tamanhos das colunas, exceto na coluna 3, que deve acomodar o "" MB"")
    formato_dados = '{:>{col1_size}} {:<{col2_size}} {:>{col3_size_data}.2f} MB {:>{col4_size}.2%}'
    for i, (nome, espaco) in enumerate(dados, start=1):
        print(formato_dados.format(i, nome, espaco, espaco / total, **cols_sizes))

    print(f""\nEspaço total ocupado {total:.2f} MB"")
    print(f""Espaço médio ocupado {total / len(dados):.2f} MB"")

# formatar os dados, mude o tamanho das colunas conforme a necessidade
formatar(dados, total, { 'col1_size': 3, 'col2_size': 26, 'col3_size': 20, 'col4_size': 10 })

Ou seja, eu uso um dicionário contendo os tamanhos de cada coluna. Assim fica mais flexível e também mais fácil de alterar conforme a necessidade. Claro que você também pode usar tamanhos fixos, só ficará mais difícil para mudar (pois aí você tem que mudar no cabeçalho e nos dados).
Para cada coluna eu uso < ou >, que alinham respectivamente à esquerda e à direita (conforme esta tabela), usando o tamanho informado e preenchendo com espaços.
E repare que para porcentagem posso usar o formato %, assim nem precisa multiplicar por 100.
A saída é:
     RELATÓRIO DE USO DE ESPAÇO EM DISCO PELOS USUÁRIOS     
----------------------------------------------------------------------
Nr. USUÁRIO                            ESPAÇO USADO      % USO
----------------------------------------------------------------------
  1 alexandre                             434.99 MB     16.85%
  2 anderson                             1187.99 MB     46.02%
  3 antonio                               117.74 MB      4.56%
  4 carlos                                 87.03 MB      3.37%
  5 cesar                                   0.94 MB      0.04%
  6 rosemary                              752.88 MB     29.16%

Espaço total ocupado 2581.58 MB
Espaço médio ocupado 430.26 MB


Se for com f-strings, exige uma pequena adaptação, mas ainda sim dá para usar os tamanhos das colunas como parâmetros:
from operator import itemgetter

def formatar(dados, total, cols_sizes):
    col1_size, col2_size, col3_size, col4_size = itemgetter('col1_size', 'col2_size', 'col3_size', 'col4_size')(cols_sizes)

    # cabeçalho (usa os tamanhos das colunas)
    print(f'{""RELATÓRIO DE USO DE ESPAÇO EM DISCO PELOS USUÁRIOS"":^60}')
    print('-' * 70)
    print(f'{""Nr."":{col1_size}} {""USUÁRIO"":<{col2_size}} {""ESPAÇO USADO"":>{col3_size}} {""% USO"":>{col4_size}}')
    print('-' * 70)

    # dados (usa os mesmos tamanhos das colunas, exceto na coluna 3, que deve acomodar o "" MB"")
    for i, (nome, espaco) in enumerate(dados, start=1):
        print(f'{i:>{col1_size}} {nome:<{col2_size}} {espaco:>{col3_size - 3}.2f} MB {espaco / total:>{col4_size}.2%}')

    print(f""\nEspaço total ocupado {total:.2f} MB"")
    print(f""Espaço médio ocupado {total / len(dados):.2f} MB"")

# a forma de chamar a função é a mesma
formatar(dados, total, { 'col1_size': 3, 'col2_size': 26, 'col3_size': 20, 'col4_size': 10 })

","
            3
        ","
DataFrame do Pandas
Um jeito eficaz para alinhar saídas seria utilizando a função DataFrame da biblioteca do Pandas. Essa função trabalha com dados tabulares bidimensionais, com tamanho mutável e potencialmente heterogêneos. Com o DataFrame também é capaz de calcular a média e a soma das linhas/colunas, deixando mais prático na hora de obter o espaço total ocupado e o espaço médio.
Requerimento
Para utilizar a biblioteca Pandas, primeiramente tem que instalar ela utilizando o seguinte comando no terminal:
pip install pandas

Arquivo importado
utilizarei o comando read_csv do Pandas para importar.

Código
import pandas as pd

obj = pd.read_csv('usuarios.txt', names=['Nr.', 'ESPAÇO USADO (MB)', '% USO'], sep='\s+')

obj.index += 1 # Começa do índice 1
converter_mb = lambda dado: round((dado / 2 ** 20), 2) # Função para converter para MB

obj['ESPAÇO USADO (MB)'] = obj['ESPAÇO USADO (MB)'].apply(converter_mb) # Aplicando a função
total_ocupado = obj['ESPAÇO USADO (MB)'].sum()
obj['% USO'] = round((obj['ESPAÇO USADO (MB)'] * 100) / total_ocupado, 2)

print(f'{""ACME INC."":^50}')
print(f'{""RELATÓRIO DE USO DE ESPAÇO EM DISCO PELOS USUÁRIOS"":^30}\n')

print(obj)
print(f'\nEspaço total ocupado: {total_ocupado:.2f} MB')
print(f'Espaço médio ocupado: {obj[""ESPAÇO USADO (MB)""].mean():.2f} MB')

Resultado
Após rodar o código de cima:

","
            3
        ","['\npython', 'python-3.x', 'formatação\n']"
529052,"Comparação, iteração entre linhas num dataframe - Python","
Eu possuo um dataframe que chamei de df1  com as colunas A,B,C e D.
Eu gostaria de comparar os valores das linhas  do ínicio da tabela em df1  até a última linha nas colunas A, B e C.
Deverá ser comparado o valor da  próxima linha (i+1)  com o valor da linha anterior (i) .
Fiz em cópia do dataframe df1 , no qual chamei de  df2  para realizar esta tarefa.
df2=df1.copy()
A coluna D possui as constantes da função linear matemática, conforme a linha de comparação  (i) :
função linear matemática = ax + b
função linear matemática =  a(i+1)x + b(i+1)
Como desenvolver o código abaixo?
Em  df1 , se o valor na próxima linha (i+1)  for igual à linha anterior (i) , aplicar a função linear matemática descrita acima.
O resultado desta função será escrito na referida linha  (i+1)  em  df2 .

",,,,,"['\npython', 'comparação', 'iterator', 'formatação-condicional\n']"
529014,Como mostrar só maior valor após .count() no Pandas,"
Tenho um df que tem como origem uma planilha de vendas.
Fiz uma filtragem para pegar as colunas ""ID Loja"" (Que retorna o nome da loja), ""Produto"" (Que retorna o nome do produto daquela linha) e ""Quantidade"" (Que é a quantidade do produto)
Fiz um groupby com o ""ID Loja"" e ""Produto"", seguido de uma contagem para verificar a recorrência. Até aqui ok, mas ele retorna todos os produto, o que eu queria é o produto mais recorrente de cada loja (ID Loja):

","
No seu data frame, utilize o .max() na coluna produto, acho que isso pode te ajudar se é realmente o que eu entendi da pergunta.
Eu não consigo ver a imagem.
","
            0
        ",,,"['\npython', 'pandas', 'data-science\n']"
528988,Como formatar o print de uma tabuada no terminal para que ela sempre ocupe o mesmo espaço horizontal em cada linha?,"
for i in range (0, 11):
    for j in range(0, 11):
        print(f'* {i} x {j} = {i*j:} *')
    print()
    print('*'*15)

Preciso que o output seja com o asterisco à direita alinhado com o asterisco debaixo e de cima
","
Veja na especificação da Minilinguagem de especificação de formato que para números o operador > força o alinhamento à direita do campo dentro do espaço disponível.
for i in range (0, 11):
    for j in range(0, 11):
        print(f'* {i:>3} x {j:>3} = {i*j:>3} *') 
    print()
    print('*'*19)

Teste o código no Repl.it
","
            3
        ",,,"['\npython', 'python-3.x', 'formatação', 'terminal\n']"
528879,Ordenar dicionário,"
Estou tentando ordenar esse dicionário por ordem crescente de notas, eu tentei usar a essa função, mas ela elimina as notas repetidas, o que eu devo fazer?
def Ordena_dic_notas(dic):
    dic_ord=dict()
    dic_invertido=dict()
    notas=[]
    nomes=[]
    for i in dic.keys():
        dic_invertido[dic[i]]=i
        nomes.append(i)
        notas.append(dic[i])
    notas.sort()
    for i in notas:
        nome=dic_invertido[i]
        dic_ord[nome]=i
    return dic_ord 

dic_de_notas={'Alexandre': 5.2, 'Alice': 6.7, 'Amanda': 7.3, 'Ana': 8.7,
              'Arthur': 9.2, 'Bernardo': 9.4, 'Brenda': 8.5, 'Bruno': 3.2,
              'Carlos': 4.1, 'Daniel': 6.8, 'Denilson': 9.7, 'Évelyn': 9.1,
              'Édson': 4.1, 'Gabriel': 10.0, 'Giovana': 9.3, 'Goberjelson': 0.2,
              'Helena': 7.2, 'Henrique': 8.5, 'Jorge': 6.8, 'Jorgel': 8.9,
              'Júlia': 5.6, 'Júlio': 9.0, 'Karen': 7.0, 'Kevin': 8.0,
              'Leonardo': 8.5, 'Luis': 5.8, 'Luiza': 4.9, 'Maria': 4.1,
              'Marcelo': 7.5, 'Matheus': 9.2, 'Neymar': 5.8, 'Omar': 9.9,
              'Paulo': 6.3, 'Pauderley': 8.7, 'Pauloney': 7.2,
              'Pirugorjelson': 1.0, 'Pirujelson': 1.5, 'Rafael': 7.0,
              'Tatiana': 9.4, 'Thiago': 8.6, 'Uberley': 2.4,
              'Valdinélison': 0.9, 'Vitória': 2.3, 'Wagner': 8.9,
              'Yasmin': 9.6, 'Yuri': 8.3}

","
Seu código possui coisas desnecessárias e esbarra numa impossibilidade:

dic_invertido=dict() não há razão de existir pois ele não faz o que quer faça. Uma das características de um dicionário é que as chaves sejam únicas ou seja, ao tentar criar um dicionário onde as notas sejam as chaves e nomes os valores ocorre que as notas duplicadas serão sobrescritas pela última entrada gerando o comportamento que descreveu na pergunta.
As listas  nomes=[] e notas=[] também possuem motivo para existirem pois tipo nativo dict oferece os métodos dict.keys(), que retorna uma iterável das chaves do dicionário, e dict.values(), que retorna uma iterável dos valores do dicionário.

Um dos caminhos para classificar o dicionário dic_de_notas segundo os valores das notas é aplicar a função nativa sorted(), que retorna uma lista classificada a partir de um iterável, aos itens dum dicionário obtidos pelo método dict.items(), que retorna um iterável dos itens do dicionário em tuplas (chave, valor).
A função sorted() possui um argumento key que é utilizado para extrair uma chave de comparação de cada elemento do iterável. Nesse caso use uma função lambda t:t[1] para indicar que da tupla (chave, valor) o valor é o parâmetro de comparação.
def Ordena_dic_notas(d):
  return dict(sorted(d.items(), key=lambda t:t[1]))

dic_de_notas={
  'Alexandre': 5.2, 'Alice': 6.7, 'Amanda': 7.3, 'Ana': 8.7,
  'Arthur': 9.2, 'Bernardo': 9.4, 'Brenda': 8.5, 'Bruno': 3.2,
  'Carlos': 4.1, 'Daniel': 6.8, 'Denilson': 9.7, 'Évelyn': 9.1,
  'Édson': 4.1, 'Gabriel': 10.0, 'Giovana': 9.3, 'Goberjelson': 0.2,
  'Helena': 7.2, 'Henrique': 8.5, 'Jorge': 6.8, 'Jorgel': 8.9,
  'Júlia': 5.6, 'Júlio': 9.0, 'Karen': 7.0, 'Kevin': 8.0,
  'Leonardo': 8.5, 'Luis': 5.8, 'Luiza': 4.9, 'Maria': 4.1,
  'Marcelo': 7.5, 'Matheus': 9.2, 'Neymar': 5.8, 'Omar': 9.9,
  'Paulo': 6.3, 'Pauderley': 8.7, 'Pauloney': 7.2,
  'Pirugorjelson': 1.0, 'Pirujelson': 1.5, 'Rafael': 7.0,
  'Tatiana': 9.4, 'Thiago': 8.6, 'Uberley': 2.4,
  'Valdinélison': 0.9, 'Vitória': 2.3, 'Wagner': 8.9,
  'Yasmin': 9.6, 'Yuri': 8.3
}

print(Ordena_dic_notas(dic_de_notas))

Que retorna:
{
 'Goberjelson': 0.2, 'Valdinélison': 0.9, 'Pirugorjelson': 1.0, 'Pirujelson': 1.5, 
 'Vitória': 2.3, 'Uberley': 2.4, 'Bruno': 3.2, 'Carlos': 4.1, 'Édson': 4.1, 'Maria': 4.1, 
 'Luiza': 4.9, 'Alexandre': 5.2, 'Júlia': 5.6, 'Luis': 5.8, 'Neymar': 5.8, 'Paulo': 6.3, 
 'Alice': 6.7, 'Daniel': 6.8, 'Jorge': 6.8, 'Karen': 7.0, 'Rafael': 7.0, 'Helena': 7.2, 
 'Pauloney': 7.2, 'Amanda': 7.3, 'Marcelo': 7.5, 'Kevin': 8.0, 'Yuri': 8.3, 'Brenda': 8.5,
 'Henrique': 8.5, 'Leonardo': 8.5, 'Thiago': 8.6, 'Ana': 8.7, 'Pauderley': 8.7, 'Jorgel': 8.9, 
 'Wagner': 8.9, 'Júlio': 9.0, 'Évelyn': 9.1, 'Arthur': 9.2, 'Matheus': 9.2, 'Giovana': 9.3, 
 'Bernardo': 9.4, 'Tatiana': 9.4, 'Yasmin': 9.6, 'Denilson': 9.7, 'Omar': 9.9,
 'Gabriel': 10.0
}

Teste o código no Repl.it
","
            1
        ",,,"['\npython', 'classificação', 'dicionário\n']"
528828,"""Failed download - Data doesn't exist for date"" - python - yfinance - pandas","
como posso fazer para que não mostre Failed download: das empresas que não tinham dados na data estabelecida, somente das que existem dados (as que não tiverem, deve mostrar nada)?
import pandas as pd
import yfinance as yf

lista_empresas1 = ['LOGN3.SA','VITT3.SA']
for a in lista_empresas1:
  base = yf.download(a, start='2019-01-01',end='2020-01-01',progress=False)['Close']
  print(a)
  print(base.tail(2))

Imagem do print com erro:

",,,,,['\npython\n']
528795,Contador usando PySimpleGui ou TkInter,"
Precisava desenvolver um contador para contar o número de rounds de uma programação que estou desenvolvendo. Eu sei criar uma janela normalmente em ambos os módulos, mas não consigo pensar em como fazer esse contador dentro dessa janela. Ela está a base de rounds, por exemplo, ele fez o primeiro round no 0, assim que completar o primeiro round, adicionar mais 1+. Se puderem me ajudar, ficarei grato...
import pyautogui
import time
import sys
from time import sleep
from threading import Timer
import selenium
from selenium import webdriver

driver = webdriver.Chrome()
driver.get(""https://web.whatsapp.com/"")
driver.fullscreen_window()
time.sleep(30)

def whatBot():
   #Seleciona o grupo
   driver.find_element_by_xpath(""//*[@id='pane-side']/div[1]/div/div/div[11]/div/div/div/div[2]"").click()
   #Seleciona os três pontinhos
   driver.find_element_by_xpath(""//*[@id='main']/header/div[3]/div/div[2]/div/div/span"").click()
   driver.find_element_by_xpath(""//*[@id='app']/div[1]/span[4]/div/ul/div/div/li[2]/div[1]"").click()
   #pyautogui.click(1402, 153, duration= 0.5)
   pyautogui.click(711, 970, duration= 0.2)
   #1495, 187
   driver.find_element_by_xpath(""//*[@id='main']/span[2]/div[1]/button[5]"").click()
   driver.find_element_by_xpath(""//*[@id='app']/div[1]/span[2]/div[1]/span/div[1]/div/div/div/div/div/div[1]/div/label/div"").click()
   driver.find_element_by_xpath(""//*[@id='app']/div[1]/span[2]/div[1]/span/div[1]/div/div/div/div/div/div[1]/div/label/div/div[2]"").send_keys('SP -')
   pyautogui.moveTo(100, 100)
   pyautogui.click(792, 315)
   time.sleep(3)
   pyautogui.hotkey('end')
   time.sleep(3)
   pyautogui.click(928, 897)
   pyautogui.click(928, 830)
   pyautogui.click(928, 757)
   pyautogui.click(928, 687)
   driver.find_element_by_xpath(""//*[@id='app']/div[1]/span[2]/div[1]/span/div[1]/div/div/div/div/div/span/div/div/div/span"").click()
  # pyautogui.click(928, 575, duration= -0.5)
  # pyautogui.click(928, 505, duration= -0.5)
  # pyautogui.click(928, 428, duration= -0.5)
  # pyautogui.click(928, 352, duration= -0.5)
  # pyautogui.click(928, 290, duration= -0.5)
  # pyautogui.moveTo(835, 565, duration= 0.5)
  # pyautogui.click(835, 565)
tempo = 0
while tempo != 821:
    t = Timer(1, whatBot)
    t.start()
    sleep(15)
    tempo += 1

","
Muito bem, como você disse que ode ser tkinter vou ensinar a fazer uma interface simples no tkinter somente para exibir a variável tempo.
Primeiro importe o tkinter, crie a janela principal:
import tkinter as tk
root = tk.Tk()

agora crie um label com o texto dizendo o número de rounds, que no início é zero, e coloque na janela principal:
label = tk.Label(root, text='rounds: 0')
label.pack()

a janela principal não fica aberta, ela precisa de um loop para permanecer atualizando. Normalmente isso é feito com o mainloop(), mas como você está dentro de um loop while, vc pode usar o método update(). Mas antes do update tudo que você precisa fazer é atualiar o texto do label com o valor de tempo:
tempo = 0
while tempo != 821:
    t = Timer(1, whatBot)
    t.start()
    sleep(15)
    tempo += 1
    label['text'] = 'rounds: {}'.format(tempo)
    root.update()

","
            0
        ",,,"['\npython', 'tkinter\n']"
528792,Matriz com camadas alfabéticas Python,"
Estou tentando fazer uma matriz em Python semelhante a este,

mas meu código

esta trazendo o resultado:

import string

def exibir_matriz(matriz):
    for linha in matriz:
        print(linha)

camadas = int(input(""Quantas camadas: ""))

m = camadas+(camadas+1)

n = m

matriz = []
for i in range(m):
    linha = []
    for j in range(n):
        elemento = string.ascii_uppercase[:1]
        linha.append(elemento)
    matriz.append(linha)
matriz[camadas][camadas] = ""*""


exibir_matriz(matriz)

Já tentei adicionar um while ou for, mas só consegui chegar ate aqui.
","
Tenho outra ideia de construção desse matriz, apenas compartilhando a minha ideia:
def exibir_matriz(n):
    Alfabeto = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    camadas = []
    camada_temp = []
    n_alfa = 2 * n + 1

    for i in range(n):
        camada_temp.insert(i, Alfabeto[i])
        camada_temp.insert(-i, Alfabeto[i])
        c = camada_temp.copy()
        while len(c) < n_alfa:
            c.insert(i, Alfabeto[i])
        camadas.append(c)

    meio = camadas[n-1].copy()
    meio.pop(n)
    meio.insert(n, '*')

    for camada in camadas:
        print(camada)
    print(meio)
    camadas.reverse()
    for camada in camadas:
        print(camada)

A ideia é que quando a Matriz tem 3 camadas ele tem 4 tipos de camadas:
1 A A A A A A A *tipo1*
2 A B B B B B A *tipo2*
3 A B C C C B A *tipo3*
4 A B C * C B A *tipo4*
5 A B C C C B A *tipo3*
6 A B B B B B A *tipo2*
7 A A A A A A A *tipo1*

Temos alguns padrões:

A maioria dos itens são utilizados 2 vezes.
A camada do meio é utilizado apenas 1 vez.
Número de Alfabetos é igual número de camadas, Por exemplo: 3 camadas
tem A, B, C
Número de letras por camada é igual 2 * camadas + 1
Primeira e a última camada sempre serão apenas A
Se enumeramos cada letra: 1-A, 2-B, 3-C. O número da letra é igual o número do indíce onde vai começar a letra da camada do mesmo número:



A camada é igual a camada anterior só que substituindo o meio, e deixando a pontas com 1 de cada letra existente:



Com esse padrões podemos criar os 4 tipos de camadas, começando com as camadas que duplicam (tipo1, tipo2, tipo3):
Primeiro é começar a enumerar os Alfabetos, Definir número de letras por camada e uma list de todos os tipos de camadas:
n_alfa = 2 * n + 1
Alfabeto =['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
camadas = []

Então Alfabeto[0] = A, Alfabeto[1] = B e assim por diante.
A ideia de montar todos tipos de camadas é usar uma template de list.
Para criar essa template, podemos notar que inserimos a letra no mesmo número da índice do número da letra:
#1- A
A _ _ _ _ _ A
1 2 3 4 5 6 7

#2- B
A B _ _ _ B A
1 2 3 4 5 6 7

Para inserir no fim apenas utilizamos número negativo da list:
#1- A
A _ _ _ _ _ A
7 6 5 4 3 2 1 (*index* negativo)

#2- B
A B _ _ _ B A
7 6 5 4 3 2 1 (*index* negativo)

E preencher ela com a letra de acordo com o número da camada:
#Camada 1
camada_temp = ['A','A']
#A _ _ _ _ _ A
#Preencher o meio com letra 'A' (Como disse antes 1-A)

#Camada 2
camada_temp = ['A', 'B', 'B', 'A']
#A B _ _ _ B A
# Preencher o meio com letra 'B' (2-B)

E por fim adicionamos esse tipo de camada na list de camadas.
camada_temp = []

for i in range(n):
    camada_temp.insert(i, Alfabeto[i])  #Inserindo Alfabeto no index positivo
    camada_temp.insert(-i, Alfabeto[i]) #Inserindo Alfabeto no index negativo
    c = camada_temp.copy()              #Duplicando a camada

    while len(c) < n_alfa:              #Preenchendo o meio
        c.insert(i, Alfabeto[i])
    camadas.append(c)                   #Adicionando a 'list' de camadas



Agora a camada do meio é igual a último tipo de camada só que substituindo o meio.

O meio é após o número de camadas.
A B C C C B A
A B C * C B A
1 2 3 4 5 6 7

meio = camadas[n-1].copy()
meio.pop(n)
meio.insert(n, '*')


Agora só falta montar a matriz, como criamos de camada 1 a 3 podemos imprimir ordenadamente. Depois o meio e depois imprimimos reversamente. A ordem fica:
1 2 3 meio 3 2 1
for camada in camadas:    #Imprimindo Ordenadamente
    print(camada)

print(meio)               #Meio

camadas.reverse()         #Revertendo a lista

for camada in camadas:    #Imprimindo a lista revertida
    print(camada)


Colocando input:
n = input('Numero de camadas...')
exibir_matriz(n)

","
            3
        ","
A ideia geral é primeiro entender a estrutura geral da matriz para diferentes tamanhos, e tentar abstrair uma regra que sirva para qualquer tamanho. Por exemplo, para os tamanhos 2 e 3, temos:
# 2 camadas
A A A A A  0
A B B B A  1
A B * B A  2
A B B B A  3
A A A A A  4

# 3 camadas
A A A A A A A  0
A B B B B B A  1
A B C C C B A  2
A B C * C B A  3
A B C C C B A  4
A B B B B B A  5
A A A A A A A  6

Na última coluna coloquei os índices das linhas.
Repare que na primeira linha (índice zero) só tem a letra ""A"" (apenas uma letra). Na segunda linha, tem ""A"" e ""B"" (duas letras) e assim por diante, até chegar na linha do meio (quando o índice é igual à quantidade de camadas), que terá o asterisco. E depois que passo do meio, a quantidade de letras vai diminuindo, até que chegue na última, que tem somente o ""A"". A partir daí dá para generalizar um cálculo da quantidade de letras, de acordo com o número da linha.
Depois, em cada linha, começo com ""A"" e vou avançando até a letra final (que pode ser o próprio ""A"" na primeira linha, o ""B"" na segunda, etc), imprimindo cada letra apenas uma vez, exceto pela letra final, que se repete determinado número de vezes (seria o tamanho da matriz menos as demais letras que já foram impressas).
Sendo assim, a generalização ficaria:
from string import ascii_uppercase

def montar_matriz(camadas):
    tamanho = 2 * camadas + 1 # tamanho do quadrado
    matriz = []
    for linha in range(tamanho):
        nova_linha = [] # cria uma nova linha da matriz
        # verifica até que letra deve ter nesta linha (ex: se for 3, deve ter A, B e C na linha)
        if linha <= camadas:
            qtd_letras_linha = linha + 1
        else: # na metade de baixo, o cálculo é um pouquinho mais chato
            qtd_letras_linha = linha % camadas
            if qtd_letras_linha == 0:
                qtd_letras_linha = 1
            else:
                qtd_letras_linha = camadas - qtd_letras_linha + 1

        meio = linha == camadas # estou no meio?
        # primeiro avança N letras, começando pelo ""A""
        n = qtd_letras_linha - (2 if meio else 1)
        for j in range(n):
            nova_linha.append(ascii_uppercase[j])
        letra = ascii_uppercase[camadas - 1] # letra final
        # estou no meio, imprime ""letra * letra""
        if meio:
            nova_linha.extend([letra, '*', letra])
            n -= 1
        else:
            # mostra a letra X vezes (X é o tamanho da linha menos a quantidade de letras que foi impressa apenas uma vez)
            x = tamanho - (2 * qtd_letras_linha) + 1
            nova_linha.extend([ascii_uppercase[qtd_letras_linha - 1]] * x)
        # mostra as mesmas N letras do primeiro for, mas ao contrário, até terminar no ""A""
        for j in range(n, -1, -1):
            nova_linha.append(ascii_uppercase[j])
        # adiciona a linha na matriz
        matriz.append(nova_linha)

    return matriz

def mostrar_matriz(m):
    for linha in m:
        print(' '.join(linha))

Testando para diferentes tamanhos:
for i in range(1, 7):
    print(f'\n{i} camadas:')
    mostrar_matriz(montar_matriz(i))

Saída:
1 camadas:
A A A
A * A
A A A

2 camadas:
A A A A A
A B B B A
A B * B A
A B B B A
A A A A A

3 camadas:
A A A A A A A
A B B B B B A
A B C C C B A
A B C * C B A
A B C C C B A
A B B B B B A
A A A A A A A

4 camadas:
A A A A A A A A A
A B B B B B B B A
A B C C C C C B A
A B C D D D C B A
A B C D * D C B A
A B C D D D C B A
A B C C C C C B A
A B B B B B B B A
A A A A A A A A A

5 camadas:
A A A A A A A A A A A
A B B B B B B B B B A
A B C C C C C C C B A
A B C D D D D D C B A
A B C D E E E D C B A
A B C D E * E D C B A
A B C D E E E D C B A
A B C D D D D D C B A
A B C C C C C C C B A
A B B B B B B B B B A
A A A A A A A A A A A

6 camadas:
A A A A A A A A A A A A A
A B B B B B B B B B B B A
A B C C C C C C C C C B A
A B C D D D D D D D C B A
A B C D E E E E E D C B A
A B C D E F F F E D C B A
A B C D E F * F E D C B A
A B C D E F F F E D C B A
A B C D E E E E E D C B A
A B C D D D D D D D C B A
A B C C C C C C C C C B A
A B B B B B B B B B B B A
A A A A A A A A A A A A A

","
            1
        ","['\npython', 'matriz', 'for', 'while\n']"
528714,Relacionamento entre classes: como acessar o atributo de um objeto relacionado a outra classe?,"
Eu possuo uma classe chamada Socios, que recebe alguns atributos, entre eles, mes e ano, que dizem respeito ao mês e ano de associação á um Clube.
class Socio:
    def __init__(self, nome, cpf, nascimento, mes, ano): 
        self.nome = nome
        self.cpf = cpf
        self.nascimento = nascimento
        self.mes = mes
        self.ano = ano

Também existe a classe clube, que é composta apenas por uma lista vazia de objetos da classe Socios.
class Clube:
    def __init__(self): 
        self.socios = []

    def associar(self, Socio):
        self.socios.append(Socio)

    def mes_associacao (self, mes, ano):
        soma = 0 
        if mes < 1 and mes > 12:
            raise TypeError()

        for pessoa in self.socios:
            if ((pessoa.mes) == mes) and ((pessoa.ano) == ano):
                soma += 1 
            return soma

O método mes_associacao tem como objetivo calcular quantos sócios associaram-se em determinado mês e ano, porém ele não devolvendo o cálculo esperado. Acredito que o problema esteja na hora de tentar acessar os atributos mes e ano, dentro do 'for' mas não consigo resolver.
",,,,,['\npython\n']
528703,Como substituir caracteres por asterisco de um string em Python?,"
Preciso de um código que recebe uma string e troca todas as letras por asteriscos, execeto a primeira e a ultima de cada palavra. segue o exemplo:
Entrada
Rua Barão do Caí 125
Saída
>> R*a B***o do C*í 125

meu código esta assim, mas não funciona:
frase = 'Rua Barão do Caí 125'

lista = frase.split()

for palavra in lista:
    if len(palavra) <= 2:
        pass
    elif len(palavra) == 3:
        palavra.replace(palavra[1:-1], ""*"")
    elif len(palavra) == 4:
        palavra.replace(palavra[1:-1], ""*"")
    elif len(palavra) == 5:
        palavra.replace(palavra[1:-1], ""*"")
    elif len(palavra) == 6:
        palavra.replace(palavra[1:-1], ""*"")
    elif len(palavra) == 7:
        palavra.replace(palavra[1:-1], ""*"")

","
Note que, em Python, strings são imutáveis. Você não pode alterar caracteres individuais trocando-os por asteriscos, mas pode formar uma nova string com base em pedaços de outras.
Uma tentativa:
#!/usr/bin/env python3

frase = 'Rua Barão do Caí 125'

lista = frase.split()

for i, palavra in enumerate(lista):
    try:
        numero = int(palavra)
        # é número
        continue
    except ValueError:
        # é palavra mesmo
        pass

    if len(palavra) >= 3:
        # ofusca
        palavra = palavra[0] + (""*"" * (len(palavra) - 2)) + palavra[-1]
        lista[i] = palavra

print("" "".join(lista))

","
            0
        ","
Encontrei uma solução para seu problema:
frase = ""Rua Barão do Caí 125""

lista = frase.split()
new_frase = []

for palavra in lista:
  numero = False
  try:
    int(palavra) # Verifica se é número
    numero = True
  except:
    pass
  if len(palavra) > 2 and not numero:
    palavra = palavra.replace(palavra[1:-1],""*""*(len(palavra)-2))
  new_frase.append(palavra)
new_frase = ' '.join(new_frase)
print(new_frase)

Resultado:
R*a B***o do C*í 125

","
            0
        ",['\npython\n']
528681,Como atribuir valor a letras de uma palavra,"
Quero entrar com uma palavra (str). Ex.: ""Curitiba""
Depois quero baseado em uma tabela de valores, atribuir valor (Int) a cada letra dessa entrada. Ex.: Curitiba--> ""C""=1, ""U""=2, ""R""=4... etc
Após transformado a entrada em valores quero fazer operações matemáticas, tipo soma 1+2+4....=7
Revirei a internet e não achei! Como posso fazer isso?
Achei no forum o seguinte, que separa cada letra de ""Teste""
lista = ['teste', 'teste', 'teste', 'teste', 'teste']

matriz = []

for palavra in lista:
    matriz.append(list(palavra))

print(matriz)

output:
[['t', 'e', 's', 't', 'e'], ['t', 'e', 's', 't', 'e'], ['t', 'e', 's', 't', 'e'], ['t', 'e', 's', 't', 'e'], ['t', 'e', 's', 't', 'e']]

Feito isso ou algo como isso, quero dar um valor (int) pre estabelecido para cada letra, por exemplo ""T""=1, ""E""=2, ""S""=3....
E após isso somar os valores.
Em resumo:

Entrar com um nome. Ex.: Curitiba
Separar as letras dessa entrada. Ex.: C, U, R, I, T, I, B, A
Atribuir uma valor inteiro a cada uma dessas letras. Ex.: C=1, U=2...
Pode fazer operações com esses valores. Ex.: 1(C)+2(U) = 3
A saída da informação será por exemplo: 'CURITIBA' = 100

","
Para chegar no resultado do problema apresentado, primeiro criei uma variável com um dicionário classificando todas as letras do alfabeto e atribuindo um número a cada uma:
valores = {' ':0,'a':1,'b':2,'c':3,'d':4,'e':5,'f':6,'g':7,'h':8,'i':9,'j':10,'k':11,'l':12,'m':13,'n':14,'o':15,'p':16,'q':17,'r':18,'s':19,'t':20,'u':21,'v':22,'w':23,'x':24,'y':25,'z':26}

Então criei o código:
lista = ['Curitiba', 'Fortaleza', 'Salvador']  # Lista que receberá as palavras desejadas

for palavra in lista:
  soma = 0
  for letra in palavra:
    soma += valores[letra.lower()]
  print(f'{palavra}: {soma}')

O código percorre todas as palavras, cria uma variável soma que irá somar os números atribuídos às letras, percorrerá todas as letras da palavra e somará o respectivo valor da letra definido no dicionário valores.
Utilizei letra.lower() caso seja informado letras em maiúsculo, pois o dicionário está em letras minúsculas.
Resultado:
Curitiba: 83
Fortaleza: 104
Salvador: 92

","
            -1
        ",,,['\npython\n']
528638,Como fazer um caminho de um ponto a outro ponto em um grafo?,"
Estou  tentando modificar o seguinte algoritmo (O busca em Largura) para iniciar um ponto e identificar um caminho até outro ponto especificado.
def buscaLargura(grafo, inicial):
    visitados = []
    fila = [inicial]
    while len(fila) > 0:  # Enquanto a fila nao estiver
        vertice = fila.pop(0)
        if vertice not in visitados:
            visitados.append(vertice)
            fila.extend(grafo[vertice])
    return visitados 

Exemplo: Quero chegar do ponto 5 até o ponto 6 e retornar esse caminho...

Utilizei a biblioteca networkx para fazer o grafo, alguém tem alguma dica para do que eu possa fazer para realizar tal função ?
",,,,,"['\npython', 'python-3.x\n']"
528636,Executar scripts de diferentes diretorios,"
Tenho uma série de rotinas para executar diariamente no Python.
Gostaria de um código para executar todas em um scipts apenas.
Ex:

#rotina 1
r1 = C:\Users\rotina1\rotina1.py
r1.execute

#rotina 2
r2 = C:\Users\rotina2\rotina2.py
r2.execute

Existe algo do tipo? Me ajudaria muito.
","
Para rodar scripts Python utilizando outro script Python você pode utilizar a biblioteca os.
#importando biblioteca
import os

Com a função os.system() é possível utilizar comandos do sistema operacional:
os.system('<<comando>>')

logo para a execução dessas rotinas pode ser executada com o código abaixo:
*WINDOWS
import os
r1 = 'C://Users//rotina1//rotina1.py'
r2 = 'C://Users//rotina2//rotina2.py'

rotinas = [r1, r2]

for r in rotinas:
    os.system(f'python {r}')

Para sistemas UNIX o comando provavelmente será necessário específicar a versão do python instalada no seu computados, ficando da seguinte maneira:
Exemplo Python3.X:
import os

r1 = 'C://Users//rotina1//rotina1.py'
r2 = 'C://Users//rotina2//rotina2.py'

rotinas = [r1, r2]

for r in rotinas:
    os.system(f'python3 {r}')

Espero ter ajudado :)
","
            0
        ",,,['\npython\n']
528585,Centralizar elemento no tkinter Python 3,"
Estou fazendo alguns testes com o módulo em Python 3.
Gostaria de saber como posso centralizar um elemento em uma janela do tkinter começando com o seguinte código:
import tkinter as tk
window = tk.Tk()
window.geometry(""200x600"")
label1 = tk.Label(text=""Hello world!"", font=""Arial 10 bold"")

Neste caso, como posso centralizar a Label no label1?
","
Achei o que você precisa, e comigo funcionou.
Espero que funcione para ti.

site: exame TI [https://www.ti-enxame.com/pt/python/como-centrar-uma-janela-na-tela-no-tkinter/969509846/]

Tk fornece uma função auxiliar que pode fazer isso como tk::PlaceWindow, mas eu não acredito que tenha sido exposto como um método empacotado no Tkinter. Você centralizaria um widget usando o seguinte:
from tkinter import *

app = Tk()
app.eval('tk::PlaceWindow %s center' % app.winfo_pathname(app.winfo_id()))
app.mainloop()

Essa função também deve lidar com vários monitores corretamente. Ele também tem opções para centralizar em outro widget ou em relação ao ponteiro (usado para colocar menus pop-up), para que eles não caiam da tela.
","
            0
        ",,,"['\npython', 'python-3.x', 'tkinter\n']"
528539,Pyinstaller erro no executável não acha icones e imagens,"
Fiz um app usando Tkinter e consigo gerar um executável dele com o PyIntaller, porém o app não abre e diz que não acha ícones e imagens que adicionei no Tkinter, o arquivo .py do app funciona de boa com seus ícones e imagens.
EDITADO COMO RESPOSTA
Resolvi em parte o problema exposto acima, não é um problema do pyinstaller em sí.Colocando na imagem o caminho completo até o executável usando por exemplo: icon_clear = PhotoImage(file=f""{os.getcwd()}\clear.png"")Os arquivos de imagem precisarão estar sempre no mesmo caminho de onde o executável é chamado o que não é legal.Se eu não colocar nenhum caminho e associar só o nome da imagem assim: icon_clear = PhotoImage(file=""clear.png"")Não funcionará, pois não acha os arquivos mesmo estando todos no mesmo diretório do executável.
A nova pergunta seria:
Tem como usar arquivos de imagens e ícones no Tkinter, mas de forma que ao gerar o executável esses arquivos estejam incorporados ou então pelo menos dentro de alguma dll ?
","
Embora eu tenha recebido aqui algumas dicas para tentar resolver o problema exposto, nenhuma delas foi efetiva, pois o problema ainda permanece o mesmo, mas encontrei um meio de resolver isso se considerar colocar todos os arquivos externos ao projeto, na mesma pasta em que está o executável.
Quando se compila um app Python usando o PyInstaller qualquer arquivo externo que for agregado ao projeto deve obrigatoriamente estar junto com o executável gerado dentro da pasta dist criada pelo PyInstaller, assim não haverá erros do tipo no such file or directorye o programa executável vai funcionar perfeitamente.
Porém alerto que vai surgir um segundo problema, após gerar o executável com o PyInstaller, os programas de anti-vírus detectam o executável como sendo um Trojan(Falso positivo), analisado pelo site VirusTotal e a tentativa de resolver esse problema foi descrita nos links que disponibilizo abaixo, porém e eu ainda não consegui resolver. Espero que quem ler isso consiga resolver e colabore deixando sua resposta e como foi resolvido.
Link1: https://stackoverflow.com/questions/43777106/program-made-with-pyinstaller-now-seen-as-a-trojan-horse-by-avg
e
Link2: https://github.com/google/spatial-media/issues/97
","
            0
        ","
Para o pyinstaller reconhecer seu arquivo deve estar no formato .ico no caso do seu exemplo acima você esta usando o .png teria que converter ele ai na hora de gerar use o comando --icon=nomedoseuarquivo.ico
outra alternativa e usar o freeze pra gerar seu executável ele compila tudo oque você precisa junto com seu aplicativos levando todas as dlls necessárias.
","
            -1
        ","['\npython', 'tkinter', 'pyinstaller\n']"
528526,"Por que para alguns caracteres str.isdigit() retorna True, mas dá erro ao converter para int?","
Assumindo o seguinte:
>>> square = '²'      # Superscript Two (Unicode U+00B2)
>>> cube  = '³'       # Superscript Three (Unicode U+00B3)

Curiosamente...
>>> square.isdigit()
True
>>> cube.isdigit()
True

Tá bom, vamos converter esses ""dígitos"" para um inteiro:
>>> int(square)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ValueError: invalid literal for int() with base 10: '²'
>>> int(cube)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ValueError: invalid literal for int() with base 10: '³'

Oooops!
Alguém poderia me explicar exatamente qual o é comportamento exato do método str.isdigit() ao testar strings?
","
Segundo a documentação, isdigit considera ""dígito"" uma ampla gama de caracteres:

Digits include decimal characters and digits that need special handling, such as the compatibility superscript digits. This covers digits which cannot be used to form numbers in base 10, like the Kharosthi numbers. Formally, a digit is a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal

A última frase é a chave para entender seu funcionamento: ele considera dígito qualquer caractere que tenha a propriedade Unicode Numeric_Type com o valor igual a Digit ou Decimal. Para testar isso, vou usar o módulo regex, que possui suporte à Unicode Properties e pode ser obtido aqui. O código é esse:
from unicodedata import name
import regex # módulo externo, instale com ""pip install regex""

# procura caracteres com a propriedade Numeric_Type igual a Digit ou Decimal
r = regex.compile(r'[\p{Numeric_Type=Digit}\p{Numeric_Type=Decimal}]')
for cp in range(0, 0x10ffff + 1): # para todos os code points existentes
    s = chr(cp)
    if r.match(s):
        print(f'{s} {cp:06X} {name(s, """")}')

Ou seja, para todos os code points possíveis, eu verifico o valor da propriedade Numeric_Type, e se for igual a Digit ou Decimal, eu mostro os dados do caractere.
A lista retornada é imensa, então segue abaixo apenas as primeiras linhas:
0 000030 DIGIT ZERO
1 000031 DIGIT ONE
2 000032 DIGIT TWO
3 000033 DIGIT THREE
4 000034 DIGIT FOUR
5 000035 DIGIT FIVE
6 000036 DIGIT SIX
7 000037 DIGIT SEVEN
8 000038 DIGIT EIGHT
9 000039 DIGIT NINE
² 0000B2 SUPERSCRIPT TWO
³ 0000B3 SUPERSCRIPT THREE
¹ 0000B9 SUPERSCRIPT ONE
٠ 000660 ARABIC-INDIC DIGIT ZERO
١ 000661 ARABIC-INDIC DIGIT ONE
٢ 000662 ARABIC-INDIC DIGIT TWO
٣ 000663 ARABIC-INDIC DIGIT THREE
٤ 000664 ARABIC-INDIC DIGIT FOUR
٥ 000665 ARABIC-INDIC DIGIT FIVE
٦ 000666 ARABIC-INDIC DIGIT SIX
٧ 000667 ARABIC-INDIC DIGIT SEVEN
٨ 000668 ARABIC-INDIC DIGIT EIGHT
٩ 000669 ARABIC-INDIC DIGIT NINE
... (mais um monte)

Repare que os caracteres que você usou no seu teste aparecem aí.
Só um detalhe: pode ser que dê diferença com isdigit e a lista de caracteres não seja 100% igual, pois o módulo regex atualmente usa a versão 13.0 do Unicode, enquanto diferentes versões do Python podem usar outras versões do Unicode (eu testei com Python 3.8, que usa o Unicode 12.1.0, e deu diferença com vários code points acima de U+11950 - pois estes só foram adicionados no Unicode 13.0).

Agora, por que eles dão erro com int? Porque a documentação diz que int deve receber uma string que representa um integer literal, cuja definição é:
integer      ::=  decinteger | bininteger | octinteger | hexinteger
decinteger   ::=  nonzerodigit ([""_""] digit)* | ""0""+ ([""_""] ""0"")*
bininteger   ::=  ""0"" (""b"" | ""B"") ([""_""] bindigit)+
octinteger   ::=  ""0"" (""o"" | ""O"") ([""_""] octdigit)+
hexinteger   ::=  ""0"" (""x"" | ""X"") ([""_""] hexdigit)+
nonzerodigit ::=  ""1""...""9""
digit        ::=  ""0""...""9""
bindigit     ::=  ""0"" | ""1""
octdigit     ::=  ""0""...""7""
hexdigit     ::=  digit | ""a""...""f"" | ""A""...""F""

Além da lista acima, também é citado em outro ponto da documentação que são aceitos caracteres com a propriedade Nd (que na verdade é a categoria ""Number, Decimal Digit""). E para isso podemos alterar o código acima para incluir esta verificação:
from unicodedata import name
import regex

r = regex.compile(r'[\p{Numeric_Type=Digit}\p{Numeric_Type=Decimal}]')
r1 = regex.compile(r'\p{Nd}')
for cp in range(0, 0x10ffff + 1):
    s = chr(cp)
    if r.match(s):
        print(f'{s} {cp:06X} {name(s, """")}', bool(r1.match(s)))

A saída (apenas as primeiras linhas) é:
0 000030 DIGIT ZERO True
1 000031 DIGIT ONE True
2 000032 DIGIT TWO True
3 000033 DIGIT THREE True
4 000034 DIGIT FOUR True
5 000035 DIGIT FIVE True
6 000036 DIGIT SIX True
7 000037 DIGIT SEVEN True
8 000038 DIGIT EIGHT True
9 000039 DIGIT NINE True
² 0000B2 SUPERSCRIPT TWO False
³ 0000B3 SUPERSCRIPT THREE False
¹ 0000B9 SUPERSCRIPT ONE False

Repare que ² e ³ não possuem a propriedade Nd, e portanto não funcionam com int.  Mas por ter a propriedade Numeric_Type com um dos valores já citados, retornam True com isdigit.
Se quiser o valor numérico deles, é possível obtê-los usando o módulo unicodedata:
from unicodedata import numeric

print(numeric(square)) # 2.0
# ou int(numeric(square)), se quiser o valor como um int

print(numeric(cube))   # 3.0

","
            7
        ","
Introdução
Esse comportamento se deve, principalmente, às Unicode characters properties. Essas propriedades, normatizadas pelo padrão Unicode, descrevem certas características e propriedades comuns a caracteres.
Métodos como o isdigit basicamente fazem uso dessas propriedades para determinar se o caractere em questão faz parte de um grupo específico de caracteres.
O Python fornece, em sua biblioteca padrão, três métodos que, por meio dessas propriedades, fazem algum tipo de verificação sobre valores “numéricos”. Em ordem, do mais abrangente para o menos abrangente, são eles:




Método
Propriedades Unicode requeridas (valores de Numeric_Type)




isnumeric
Decimal, Digit, Numeric


isdigit
Decimal, Digit


isdecimal
Decimal




Sobre o método isdigit, tratado pela pergunta, voltemo-nos à documentação (em tradução livre):

Retorna verdadeiro se todos os caracteres da string são dígitos e existe pelo menos um caractere, falso do contrário. Dígitos incluem caracteres decimais e dígitos que precisam de tratamento especial, como os dígitos sobrescritos de compatibilidade. Isso cobre dígitos que não podem ser usado para formar números na base 10, como os números de Kharosthi. Formalmente, um dígito é um caractere que tem a propriedade Numeric_Type=Digit ou Numeric_Type=Decimal.

A última frase, destacada por mim, trata sobre as já referidas “propriedades de caracteres”, normatizadas pelo Unicode. Para a propriedade Numeric_Type, veja nesta tabela que há quatro valores permitidos. Os métodos em questão fazem as verificações sobre três desses valores.
Seguindo as definições do Unicode, um “dígito” é um valor que pertence a uma categoria bem maior do que os caracteres permitidos pela conversão feita pelo int do Python. A motivação dessa maior abrangência dá-se tendo em vista que Unicode foi criado para suportar vários outros scripts do mundo. Naturalmente, então, os caracteres de dígitos presentes no Unicode vão muito além dos originalmente definidos pela tabela ASCII, que compreendem os famosos algarismos arábicos.
Em relação ao Unicode, Python possui o módulo unicodedata, que permite manipulações sobre esse tipo de característica de caracteres (e outras coisas a mais, mas que não vêm ao escopo desta resposta).
Sobre a conversão feita pelo int
De acordo com esta seção da documentação, int aceita:

Os literais numéricos aceitos incluem os dígitos 0 a 9 ou qualquer outro equivalente ao Unicode (code points com a propriedade Nd).

Vale frisar que a categoria geral Nd é equivalente (nas duas direções) ao conjunto de caracteres que possuem a propriedade Numeric_Type=Decimal.
Portanto, embora o método isdigit seja abrangente demais para validar uma string a ser fornecida para conversão pelo int, o método isdecimal é um substituto ideal, haja vista que tem o mesmo conjunto de caracteres permitidos, se comparado ao int.
Vale ressaltar que, nesse sentido, o int aceita também alguns caracteres “alfanuméricos” (como a, f, etc) no caso da base numérica informada for maior que 10.
Podemos confirmar com alguns exemplos:
# Devanagari 6; possui a propriedade `Numeric_Type=Decimal`
'६'.isdecimal()   #> True
int('६')          #> 6


# 1 superscript; NÃO possui a propriedade `Numeric_Type=Decimal`
'¹'.isdecimal()   #> False
int('¹')          #> ValueError lançado.

E se eu só quiser 0 a 9 mesmo?
Nesse caso, como já vimos acima, os métodos isnumeric, isdigit e isdecimal não funcionariam para isso. Todos eles são abrangentes demais.
Nesse caso, utilizar uma expressão regular pode ser uma boa solução. Mas, como vimos acima, para int, o método isdecimal já é suficiente para evitar o ValueError.
","
            5
        ","['\npython', 'python-3.x', 'string', 'int', 'unicode\n']"
528453,Como verificar se o primeiro e segundo caracter de uma string é número?,"
Estou desenvolvendo um sistema e preciso fazer uma validação de uma string. Caso o primeiro e segundo caracter seja número, o sistema deve retornar erro.
Essa lógica que coloquei aqui consegue verificar se tem algum número na string (em qualquer posição). Preciso retornar erro (True, nesse caso), apenas se tiver número na primeira e segunda casa.
str1 = ""python1""

if any(map(str.isdigit, str1)) == True:
    raise ValueError(""possui numero na string em alguma posicao"")

Alguma sugestão para desenvolver essa condição?
","
O seu código basicamente verifica se a string inteira contém qualquer número.
Como você quer verificar somente os dois primeiros caracteres, é necessário limitar o escopo dessa busca.
Existem, obviamente, várias maneiras de se fazer isso. Uma delas é utilizar um slice:
>>> 'python1'[:2]
'py'

Então:
>>> all(map(str.isdigit, 'python1'[:2]))
False

>>> all(map(str.isdigit, '1python'[:2]))
False

>>> all(map(str.isdigit, '12python'[:2]))
True

Repare que, nesse caso, ao utilizar all, adota-se a semântica do operador lógico E. Se a semântica de OU fosse necessária, deveria se utilizar a função any.
Conforme observado pelo Woss, nos comentários, para a semântica de E, pode-se utilizar o método isdigit diretamente, o que simplifica bastante:
>>> '12python'[:2].isdigit()
True

","
            5
        ","
No caso de serem apenas dois caracteres, pode verificar um a um:
if len(str1) >= 2 and str1[0].isdigit() and str1[1].isdigit():
    raise ValueError('erro')

Repare também que não precisa fazer if algo == True, pode fazer simplesmente if algo. E deve-se verificar o tamanho da string antes, para garantir que há pelo menos dois caracteres (senão dará erro ao tentar acessar um índice que não existe).

Mas falta definir o que fazer se a string tiver apenas um caractere (ou se for vazia). Nesse caso, uma alternativa seria usar slices:
if str1[:2].isdigit():
    raise ValueError('erro')

str1[:2] retorna uma outra string contendo apenas os 2 primeiros caracteres de str1. Leia aqui para saber mais sobre slices.
Repare que para verificar se todos os caracteres são dígitos, posso usar isdigit diretamente na string gerada pelo slice.
No caso, a diferença para o código anterior é que, se a string tiver somente 1 caractere, então str1[:2] retornará a string inteira, e isdigit retornará True se este caractere for número. E se a string for vazia, str1[:2] também retorna a string inteira, e nesse caso nunca entrará no if, pois a documentação diz que isdigit retorna False se a string for vazia.
","
            4
        ","['\npython', 'python-3.x', 'string', 'condição\n']"
528402,Qual o melhor metodo de realizar um menu com submenus ( while com breaks ou chamando os menus em funcoes )? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 5 anos.




                        Melhore esta pergunta
                    



Para um trabalho escolar preciso ter um menu com vários submenus. Qual é a melhor maneira de abordar isso? 
Posso colocar os menus dentro de whiles e ir dando break a esses whiles quando quiser voltar para o anterior ou separar os menus em funções e ir chamando quando preciso.
Não sei qual seria a melhor opção, estou aberto a sugestões, desde já obrigado.
por exemplo
while 1:
# menu principal
existe()
print(""========================"")
print(""     SA Airlines    "")
print(""========================"")
print(""[1] - Adicionar"")
print(""[2] - Listar"")
print(""[3] - Procurar"")
print("" "")
res = int(input(""Opcao: ""))

if res == 1:
    add.adicionar()
elif res == 2:

    while 1:

        # um menu secundario
        print(""[1] - Aeronaves"")
        print(""[2] - Aeroportos"")
        print(""[3] - Rotas"")
        print(""[4] - Voltar"")

        res = int(input(""Opcao: ""))
        if res == 1:
            listar.mostraAeronaves()
        elif res == 2:
            listar.mostraAeroportos()
        elif res == 3:
            listar.mostraRotas()
        elif res == 4:
            break;
        else:
            print(""ERRO: A opção não se encontra defenida ! tente novamente!"")

","
Quando inventaram funções para programar, é por que elas são 
MUITO melhores para organizar o códigoe  a estrtura do programa - 
e isso inclui organizar a estrutura de menus: você não deve pensar
que só as funcionalidades nas pontas deveriam ser funções e que
qualqer código no corpo principal, de qualquer jeito, serve para
fazer os menus. 
Se os menus todos se comportam da mesma forma: tem que exibir uma lista de opções, pegar um número
e executar alguma outra coisa baseada nesse número, a melhor coisa que você faz é criar uma
função genérica para exibir esses menus epegar a resposta - e aí você fica com toda a pre de estrutura
do programa bem curtinha e separada da lógica principal:
aeronaves = []
aeroportos = []


def menu(titulo, opcoes):
    while True:
        print(""="" * len(titulo), titulo, ""="" * len(titulo), sep=""\n"")
        for i, (opcao, funcao) in enumerate(opcoes, 1):
            print(""[{}] - {}"".format(i, opcao))
        print(""[{}] - Retornar/Sair"".format(i+1))
        op = input(""Opção: "")
        if op.isdigit():
            if int(op) == i + 1:
                # Encerra este menu e retorna a função anterior
                break
            if int(op) < len(opcoes):
                # Chama a função do menu:
                opcoes[int(op) - 1][1]()
                continue
        print(""Opção inválida. \n\n"")

def principal():
    opcoes = [
        (""Adicionar"", adicionar),
        (""Listar"", listar),
        (""Procurar"", procurar)
    ]
    return menu(""SA AIRLINES"", opcoes)

def adicionar():
    opcoes = [
        (""Aeronaves"", adicionar_aeronave),
        (""Aeroportos"", adicionar_aeroporto),
        # ...
    ]
    return menu(""Adicionar"", opcoes)

def adicionar_aeronave():
    aeronaves.append(input(""Nova aeronave: ""))


def adicionar_aeroporto():
    aeroportos.append(input(""Nova aeronave: ""))

    #...

def listar():
   ...

def procurar():
   ...

principal()

Eu usei uma característica importante do Python que é a possibilidade de passar funções como objetos normais - ou seja, a função ""menu""  recebe as próprias funções que deve chamr, em cada opção, com parâmetros - e chama as funções apropriadas na linha opcoes[int(op) - 1][1]().
As funções que usam o menu definem  as opções como uma sequência de items com dois outros items internos: o primeiro é o nome imprimível da opção, e o segundo é a própria função, como um objeto. Para isso é só colocar o nome da função sem acrescentar os ( ) que caracterizam a chamada da função. (Senão o Python simplesmente chama a função incondicionalmente, naquele ponto, e adiciona o valor retornado pela mesma na lista de opções)
Assim, a linha opcoes[int(op) - 1][1]() ""diz"" dentro item ""op - 1"" das opções , pegue o segundo item  - que é a própria função (isso declaramos dentro das várias funções que declaram opções para chamar o  menu) e chame esse objeto como uma função, sem parâmetros. 
Perceba que fazendo desse jeito, se amanã você resolve adiconar uma interface gráfica por exemplo em vez de usar prints e inputs, basta refazer a função ""menu"" e toda a a estrutra do programa continua funcionando normalmente.
","
            3
        ",,,"['\npython', 'python-3.x\n']"
528316,ImportError: cannot import name 'create_engine' from 'sqlalchemy',"
quero usar a biblioteca SQLalchemy para python. Até consigo importar ela inteira, porém ocorre um erro de importação ao obter create_engine.
Estou usando o python versão 3.9 e o sqlalchemy na versão 1.4.23
from sqlalchemy import create_engine

from sqlalchemy import create_engine
ImportError: cannot import name 'create_engine' from 'sqlalchemy' (unknown location)

",,,,,"['\npython', 'importação', 'sqlalchemy\n']"
528275,Iteração em listas Python,"
Alguém poderia me ajudar com este problema:
Faça um programa que receba números inteiros do usuário enquanto ele não digitar ”s”, sem
aspas, a seguir leia mais um número inteiro m e faça uma nova lista onde o elemento da posição i é dado pela soma dos elementos da lista original nas posições cujo resto da divisão do índice por m seja i. Por
fim, imprima a lista obtida.
Meu código ficou assim:
lista = []
lista2 = []

while True:
    n = input('Digite um número: ')
    if n == 's':
        break
    lista.append(int(n))
print(lista)

m = int(input('Digite um número: '))
for i in range(0, m):
    if i % m == i:
        lista[i] += lista[i] 
        lista2.append(lista[i])
print(lista2)

Não consigo pensar numa forma de fazer essa adição dos elementos de índice i com resto m. Por favor, se alguém puder me dar uma força, estou tentando faz um tempo já. Desde já agradeço.
","
Teoria
Para entender melhor o problema, vamos considerar uma lista A qualquer de 10 elementos, com índices indo de 0 a 9, como apresentado:

Vamos também supor que o valor m lido posteriormente seja 3, assim, a lista que devemos formar será:

O primeiro elemento, de índice 0, deve ser a soma de todos os valores de A em que o resto de divisão do índice nessa lista pelo valor de m é 0; sendo que os índices de A vão de 0 a 9, temos:

0 % 3 = 0, então deve ser somado;
1 % 3 = 1, então NÃO deve ser somado;
2 % 3 = 2, então NÃO deve ser somado;
3 % 3 = 0, então deve ser somado;
...


O segundo elemento, de índice 1, deve ser a soma de todos os valores de A em que o resto de divisão do índice nessa lista pelo valor de m é 1;
O terceiro elemento, de índice 2, deve ser a soma de todos os valores de A em que o resto de divisão do índice nessa lista pelo valor de m é 2;
É matematicamente impossível obtermos um resultado 3 para a operação x % 3 independente do valor de x; o que nos dá a informação de que sempre a lista a ser gerada possuirá exatos m elementos.

Desta forma, a lista gerada será, considerando as considerações acima:

Código em Python
Abstraindo essa lógica para o Python, temos:
numbers = []

# Lê os números enquanto não for informado a letra s
while (number := input('Digite um número ou ""s"" para encerrar: ')) != 's':
  numbers.append( int(number) )

m = int(input('Digite o valor de m: '))

# Gera a nova lista
result = [
  sum(number for k, number in enumerate(numbers) if k % m == i)
  for i in range(m)
]

# Exibe o resultado
print(result)

Validação da solução
Considerando que sejam informados os valores de 0 a 9 para a lista, com o m valendo 3, teríamos:
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
m = 3

Dadas as regras da lista gerada, podemos defini-la como:
result = [
  0 + 3 + 6 + 9,  # 18
  1 + 4 + 7,      # 12
  2 + 5 + 8       # 15
]

Ao executar o código supracitado come essas entradas, temos o resultado [18, 12, 15], como esperado (https://ideone.com/1APzEc).
E o seu código?
lista = []
lista2 = []

while True:
    n = input('Digite um número: ')
    if n == 's':
        break
    lista.append(int(n))
print(lista)

m = int(input('Digite um número: '))
for i in range(0, m):
    if i % m == i:
        lista[i] += lista[i] 
        lista2.append(lista[i])
print(lista2)

Podemos listar:

O laço de repetição para ler os valores e parar quando digitado ""s"" está correto;
Leitura do valor de m está correto;

Então vamos focar na lógica de calcular a nova lista.
for i in range(0, m):
    if i % m == i:
        lista[i] += lista[i] 
        lista2.append(lista[i])

Você está percorrendo, no primeiro laço de repetição, os valores de 0 a  m-1, devido à função range, o que está correto, pois gerará m valores na lista final, que é o esperado, como vimos na teoria.
O problema começou quando fez if i % m == i. A ideia até parece correta, mas o valor de i é igual dos dois lados da comparação, então não faz sentido, uma vez que só será True se i valer 0. O correto é que, como vimos também na teoria, que o primeiro i na verdade fosse o índice da lista original, o que nos leva ao segundo problema:
Você não iterou a lista original. Faltou um novo laço de repetição que iterasse a lista original para avaliar cada índice. Algo como:
for i in range(0, m):
  for k in range(0, len(lista)):
    if k % m == i:
      ...

Após isso, você fez lista[i] += lista[i], o que também não faz sentido, pois está somando o valor de lista[i] nele mesmo, duplicando-o, sendo que i, nesse ponto, nem é o índice da lista original, então nem faz sentido acessar lista[i]. Agora temos o índice k que é da lista original e é esse valor que devemos acumular:
for i in range(0, m):
  soma = 0
  for k in range(0, len(lista)):
    if k % m == i:
      soma += lista[k]

E, por fim, adicionar o valor acumulado na lista final:
for i in range(0, m):
  soma = 0
  for k in range(0, len(lista)):
    if k % m == i:
      soma += lista[k]
  lista2.append(soma)

Então o seu código corrigido seria (ignorando a parte da leitura para simplificar):
lista = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
lista2 = []
m = 3

for i in range(0, m):
  soma = 0
  for k in range(0, len(lista)):
    if k % m == i:
        soma += lista[k] 
  lista2.append(soma)

Que é equivalente ao que eu propus como solução, porém não tão idiomático (fazer uso da linguagem ao seu favor).
","
            1
        ",,,"['\npython', 'python-3.x', 'lista', 'loop', 'recursão\n']"
528274,Como limitar o dropdown a partir da seleção de outro dropdown em django,"
Como faço para limitar o dropdown de campus a filtrar os outros dois dropdown pelo admin django. Pois quando seleciono campus, quero fazer com que ocorra um filtro que limite os outros dois dropdown em Curso e etapa. Estou tentando fazer pelo try except realizar este procedimento, porém não consegui.
Vocês podem me dar alguma dica?
@reversion.register()
class CursoEditalEtapa(models.Model):
    
    edital = models.ForeignKey(Edital, verbose_name=""Edital"", on_delete=models.PROTECT)
    curso = models.ForeignKey(
        c_models.CursoSelecao, verbose_name=""Curso"", on_delete=models.PROTECT
    )
    campus = models.ForeignKey(Campus, verbose_name = ""Campus"", on_delete=models.PROTECT)
    etapa = models.ForeignKey(Etapa, verbose_name=""Etapa"", on_delete=models.PROTECT)
    objects = CursoEditalEtapaManager()
    
    def __str__(self):
        return f""Curso {self.curso} do edital {self.edital}""

    def clean(self):
        try:
            cursos = ProcessoInscricao.objects.get(edital=self.edital).cursos.all()
            
        except ProcessoInscricao.DoesNotExist:
            raise ValidationError(
                {
                    ""edital"": ""Não existe processo de inscrição para o edital.""
                }
            )
        if self.curso_id and self.curso not in cursos:
            raise ValidationError(
                {
                    ""curso"": ""O curso não está presente no referido edital de processo de inscrição""
                }
            )

        try:
            cursos = ProcessoInscricao.objects.get(edital=self.edital).cursos.all()
            
        except Campus.DoesNotExist:
            raise ValidationError(
                {
                    ""edital"": ""Não existe processo de inscrição para o edital.""
                }
            )
        self.campus = Campus.objects.get().campus.all()
        if self.curso_id and self.curso not in cursos:
            raise ValidationError(
                {
                    ""curso"": ""O curso não está presente no referido edital de processo de inscrição""
                }
            )

",,,,,"['\npython', 'django\n']"
528247,Tratamento de Erros Python,"
Estou estudando tratamentos em python e a ideia do meu código e simular dados de rpg.
só que do jeito que eu estou fazendo qualquer coisa que eu digito está sendo válido , o que eu tenho que fazer para que o tratamento só aceite sim ou não ?
eu tentei já com TypeError
import random, time
resposta = """"
# 1 ou 4 dados de 0 a 20 numeros cada dado
def dx(x,y) :
    print(""\n""+str(x) +""d""+ str(y)+"" \n"")
    total = 0
    time.sleep(1)
    for x in range(x):
       dado = int(random.randint(1,y))
       total = dado + total
       dado = str(dado)
       print (""Caiu : ""+ dado)

    print (""~~~~~~~~~~~~~~~"")   
    print (""~ Total : "" + str(total) + "" ~"" )
    print (""~~~~~~~~~~~~~~~"")

print(""Você deseja jogar um dado?"")
resposta = input(resposta)
while resposta == True:
    try :
    #resposta =""y""
        if((resposta == ""sim"") or (resposta == ""yes"") or (resposta == ""s"")or (resposta ==""y"")) :
           x = random.randint(1,4)
           y = random.randint(4,20)
           dx(x,y)
        elif ((resposta == ""nao"") or (resposta == ""no"") or (resposta == ""n"")):
           print(""fim da rodada"")
           break
    except: ValueError : print(""Responda corretamente (sim, não, yes, no, y ou n)"")

","
Uma maneira de resolver este problema seria implementando uma função auxiliar que possui o papel de validar a entrada que o usuário passou.
Segue um exemplo de como pode ser implementada:
def ler_sim_ou_nao():
    while True:
        try:
            resposta = input('Deseja jogar um dado?')
            resposta = resposta.lower()
            if resposta == ""sim"" or resposta == ""yes"" or resposta == ""s"" or resposta ==""y"":
                x = random.randint(1,4)
                y = random.randint(4,20)
                dx(x,y)
                return
            elif resposta == ""nao"" or resposta == ""no"" or resposta == ""n"":
                print(""fim da rodada"")
                return
            raise ValueError
        except ValueError:
            print(""Responda corretamente (sim, não, yes, no, y ou n)"")

Implementando desta maneira, vai manter o seu usuário preso em um loop (while True), onde apenas conseguirá sair se responder uma das opções válidas, as condições de saída da função são os mesmos condicionais utilizados no if. Caso não entre em nenhum comando condicional if é lançada uma exceção ValueError.
A versão final do seu programa será:
import random, time
# 1 ou 4 dados de 0 a 20 numeros cada dado
def dx(x,y) :
    print(""\n""+str(x) +""d""+ str(y)+"" \n"")
    total = 0
    time.sleep(1)
    for x in range(x):
       dado = int(random.randint(1,y))
       total = dado + total
       dado = str(dado)
       print (""Caiu : ""+ dado)

    print (""~~~~~~~~~~~~~~~"")   
    print (""~ Total : "" + str(total) + "" ~"" )
    print (""~~~~~~~~~~~~~~~"")

def ler_sim_ou_nao():
    while True:
        try:
            resposta = input('Deseja jogar um dado?')
            resposta = resposta.lower()
            if resposta == ""sim"" or resposta == ""yes"" or resposta == ""s"" or resposta ==""y"":
                x = random.randint(1,4)
                y = random.randint(4,20)
                dx(x,y)
                return
            elif resposta == ""nao"" or resposta == ""no"" or resposta == ""n"":
                print(""fim da rodada"")
                return
            raise ValueError
        except ValueError:
            print(""Responda corretamente (sim, não, yes, no, y ou n)"")

ler_sim_ou_nao()

","
            0
        ",,,"['\npython', 'exceção', 'try-catch\n']"
528236,Filtrar pares em uma tupla no Python,"
""Faça uma função chamada filtra_pares que receba uma tupla com quatro elementos inteiros como parâmetro, e retorne uma nova tupla contendo
apenas os elementos pares da tupla original, na mesma ordem em que se
encontravam.""
Eu tentei fazer algo do tipo.
def pares(a,b,c,d):
    nova =()
    if a%2==0 and b%2 ==0 and c%2 ==0 and d%2 == 0:
            novafiltrada = nova+a,b,c,d
            return novafiltrada

Porém da TypeError.
","
O que você está fazendo na primeira linha de código, é pedir 4 elementos, e não uma tupla com quatro elementos.
def filtra_pares(t):
    lista = [] # Aqui se declara uma lista, pois iremos modificá-la no loop, cosia que a tupla não nos permite.
    if type(t) == tuple and len(t) == 4:
        #Se o parâmetro enviado para função, for uma tupla de quatro itens, o procedimento será feito.
         #Senão, um aviso será exibido.
        for i in t:
            #Aqui faremos um loop para cada item na tupla, caso ele não for inteiro um aviso será dado, e aquela lista inicial será limpa, para que quando o loop for parado pelo break, o resultado estar vazio.
            if type(i) != int:
                lista = []
                print('Todos os itens da tuplas devem ser inteiros.')
                break
             elif i%2 == 0:
                 #Se ele for inteiro e par, será adicionado à lista.
                 lista.append(i)
        print(tuple(lista)) #A lista é transformada em tupla e o resultado é exibido quando o loop acabar.
    else:
        print('Apenas será aceito, uma tupla, com quatro itens.')



tupla_inserida = (1,4,2,3)
filtra_pares(tupla_inserida)
#Retorno: (4,2)

O loop mantém a ordem dos elementos, então não precisamos nos preocupar com isso.
","
            0
        ",,,"['\npython', 'tupla\n']"
528171,"Como esse ""Disco de César"" consegue criptografar/descriptografar sem uma função com o alfabeto abc?","
modo = ''
resultado = ''
deslocamento = ''

deslocamento = input('Qual o deslocamento: ')
 
modo = input(""Você quer:\n1 - Criptografar\n2 - Descriptografar\n"")


if(modo == '1'):
    texto = input(""Insira o texto para Criptografar: \n"")

    for i in range (0, len(texto)):
        resultado = resultado + chr(ord(texto[i]) + int(deslocamento))
        print(resultado)
        resultado = ''

if(modo == '2'):
    texto = input(""Insira o texto para descriptografar: \n"")

    for i in range (0, len(texto)):
        resultado = resultado + chr(ord(texto[i]) - int(deslocamento))
        print(resultado)
        resultado = ''

","
Não conheço Python, mas provavelmente está deslocando caracter a caracter com base no valor de cada um em codificação ASCII. A tabela ASCII é uma tabela de codificação de caracteres que associa caracteres (por exemplo, letras) a números, por exemplo a letra A maiúscula é o número 65, a letra B maiúscula é o número 66, etc. (Vale uma busca no Google para ver a cara que essa tabela tem, vai até ajudar a entender melhor o que está acontecendo no código).
No caso a função ord(caracter) caso receba a letra 'A' retorna 65 e a função chr() faz a conversão contrária (recebe 65 e retorna 'A').
Computadores apesar de não parecer só entendem números, não entendem letras (mas sabem representá-las graficamente através de fontes). Então é feita uma ressignificação que associa letras a determinados números de acordo com tabelas padronizadas, de forma a permitir renderizar esses números a partir de determinada fonte.
Poderia ter sido feito com um vetor de letras (alfabeto), o efeito seria o mesmo, mas a linguagem já tem essa codificação ""embutida"" e portanto isso não é necessário. No caso do código apresentado está permitindo codificar também números e outros caracteres, como sinais de pontuação.
Não sei se soube explicar direito mas a ideia é mais ou menos essa.
","
            1
        ",,,['\npython\n']
528089,Função de Requisição GET executa antes mesmo de ser chamada ao clique de um Botão,"
Olá, estou produzindo um programa simples de Requisição de dados climáticos de uma cidade com python, uso as seguintes bibliotecas:

Tkinter,
Requests

Objetivo:
O usuário digitará o nome da cidade desejada em uma Caixa de texto, após isso ele deverá apertar em um botão e o programa retornará informações climáticas da cidade como: Temperatura, Condição do Tempo ( Chuvoso, Ensolarado, Etc ), Maxima, Minima, entre outros.
Problema:
Ao iniciar o programa, antes mesmo de qualquer janela abrir, o PyCharm retorna este erro:
Traceback (most recent call last):
  File ""C:\Users\erico\PycharmProjects\CursoEmVideo\Projetos\Clima_Requests.py"", line 38, in <module>
    btnpesquisar = Button(janela, text='Pesquisar cidade', command=atualizar_sistema(pesquisar))
  File ""C:\Users\erico\PycharmProjects\CursoEmVideo\Projetos\Clima_Requests.py"", line 27, in atualizar_sistema
    temp['text'] = 'Temperatura: ' + str(jonas['main']['temp']) + '°C '
KeyError: 'main'

Codigo:
import requests
from tkinter import *

janela = Tk()
janela.title('Clima e Tempo')
janela.geometry('400x325')
janela.resizable(height=False, width=False)

jonas = requests.get('https://api.openweathermap.org/data/2.5/weather?q=' + 'Rio de Janeiro' + '&appid=PLACEHOLDER_DE_ID&units=metric&lang=pt')
pesquisar = Text(janela, height=1, width=50)
pesquisar.place(x=2, y=2)


def atualizar_sistema(cidade_selecionada):
    jonas = requests.get('https://api.openweathermap.org/data/2.5/weather?q=' + str(cidade_selecionada) + '&appid=PLACEHOLDER_DE_ID&units=metric&lang=pt')
    jonas = jonas.json()
    temp = Label(janela)
    temp.place(x=0, y=50)
    city = Label(janela)
    city.place(x=0, y=100)
    condition = Label(janela)
    condition.place(x=0, y=150)
    maximum = Label(janela)
    maximum.place(x=0, y=200)
    minimum = Label(janela)
    minimum.place(x=0, y=250)
    temp['text'] = 'Temperatura: ' + str(jonas['main']['temp']) + '°C '
    city['text'] = 'Cidade: ' + str(jonas['name'])
    condition['text'] = 'Condição: ' + str(jonas['weather'][0]['description'])
    maximum['text'] = 'Maxima: ' + str(jonas['main']['temp_max']) + '°C '
    minimum['text'] = 'Minima: ' + str(jonas['main']['temp_min']) + '°C '


def fechar_programa():
    janela.quit()


btnpesquisar = Button(janela, text='Pesquisar cidade', command=atualizar_sistema(pesquisar))
btnpesquisar.place(x=2, y=21)

quit_button = Button(janela, text='Sair do Programa', command=fechar_programa)
quit_button.place(x=298, y=300)

version = Label(janela, text='Feito por: Erico\n Versão: 0.3')
version.place(x=315, y=50)

janela.mainloop()

A minha teoria é que ele executa a Função antes mesmo da janela abrir, e como o parâmetro ""cidade_selecionada"" da função ""atualizar_sistema"" é igual a Caixa de Texto, ele não recebeu nenhum valor ainda portanto ocorre um erro ao fazer a requisição para a api.
Bonus:
Desculpa por alguns elementos estranhos no meu codigo, como o fato da minha variavel de requisição se chamar ""jonas"" e a minha inexperiência com a biblioteca Tkinter e as Requisições k
","
O tkinter funciona com o que chamamos de 'callback function', ou funções de retorno. Quando você define o comando do botão você precisa passar qual função ele irá executar quando for acionado. Por isso você precisa passar a função em si, que é diferente de passar o valor da função.
Se voce define command = função você está passando a função, porém se você define command = função() você está definindo como comando, o retorno da função. Nesse caso, quando o botão for contruído, o python ira chamar a função uma única vez, obter o valor retornado pela função e atribuir esse valor ao comando do botão. A função não será executada nenhuma ve mais, exatamente como está acontecendo no seu caso.
Existe um problema, porém, quando se deseja executar uma funçao que recebe um parâmetro de entrada por um botão, ocmo no seu caso. Isso porque as funções de retorno de botões não recebem nenhum parâmetro de entrada (em outros tipos de eventos do tkinter, as funções de retorno costumam receber o evento como parâmetro de entrada). Uma maneira de contornar isso é passando a função lambda como comando. A função lambda pode executar outra função, passando pra ela um parâmetro de entrada. No caso o seu botão ficaria:
btnpesquisar = Button(janela, text='Pesquisar cidade', command=lambda: atualizar_sistema(pesquisar))

Porém, no seu caso eu não faria dessa forma. Existe uma maneira mais ""apropriada"", por assim dizer. A cidade que você quer pesquisar vai ser digita em um outro objeto do tkinter. Você usou um Text mas seria melhor usar um Entry pro seu propósito. Nesse caso você poderia atribuir uma variável de texto para ele, dessa forma:
var = StringVar()
pesquisar = Entry(janela, width=50, textvariable=var)

Agora var é uma variável global que você pode acessar dentro da função atualizar sistema e portanto você não precisa passar o valor dela como parâmetro:
def atualizar_sistema():
    cidade_selecionada = var.get()

Como a sua função já não recebe nenhum parâmetro o seu botão fica:
btnpesquisar = Button(janela, text='Pesquisar cidade', command=atualizar_sistema)

","
            0
        ","
Um dos problemas mais comuns com quem está aprendendo a mexer com interface gráfica no Tkinter/Python é o de parametrizar quando os ""events"" devem acontecer, mas nesse caso é uma particularidade do Tkinter/Python em si...
Por questão de segurança, sempre que for executar um command no tkinter adicione (lambda:) antes do comando desejado, no seu caso seria assim...
btnpesquisar = Button(janela, text='Pesquisar cidade', command=lambda:atualizar_sistema(pesquisar)
Assim ele irá esperar uma ação direta de fora para dentro do programa.
No estado atual o seu button, está executando logo de cara e como não tem dados inseridos para o programa processar ele acusa erros pela falta de informação.
","
            -1
        ","['\npython', 'python-3.x', 'tkinter', 'web-scraping', 'request\n']"
527782,Pandas não lê corretamento o json,"
possui um json com o seguinte conteúdo:
{
    ""d"": {
        ""results"": [
            {
                ""Id"": 1,
                ""Title"": ""Serviços - Eventos"",
                ""STATUS"": ""INICIADA"",
                ""DESCRICAO"": ""Descrição 1""
            },
            {
                ""Id"": 2,
                ""Title"": ""Serviços - Externas"",
                ""STATUS"": ""INICIADA"",
                ""DESCRICAO"": ""Descrição 2""
            }
        ],
        ""__next"": ""https://xxxxxxxxxxxxxx""
    }
}

Eu consigo fazer o request normalmente, porém, quando eu tento converter em um dataframe pd.read_json() o pandas me retorna o seguinte:
d
__next  https://xxxxxx...
results [{'id': '1'...

o d fica como a coluna e o __next e results, junto com seus values entram na linha.
Também já tentei realizar o parse abaixo, mas não consegui:
r = requests.get(api_url, headers=headers)
json = json.load(r.text)

tentei com o load e o loads e aparece o seguinte erro:

AttributeError: 'str' object has no attribute 'load'

Alguém pode me ajudar a identificar o erro?
Obrigado!!!
","
Você está encontrando este erro pois seu json contém vários dicionários, e para ler como um dataframe é preciso somente do dicionário onde estão os dados da tabela.
Utilizando o parâmetro typ em pd.read_json, podemos selecionar o tipo do objeto a ser retornado, então ao invés de retornar um frame, vamos retornar o tipo series:
df = pd.read_json('json.json',typ='series')

Isso retornará o json completo, adicionando um slice na serie com df = pd.read_json('json.json',typ='series')[0], teremos como resultado:
{'results': [{'Id': 1,
   'Title': 'Serviços - Eventos',
   'STATUS': 'INICIADA',
   'DESCRICAO': 'Descrição 1'},
  {'Id': 2,
   'Title': 'Serviços - Externas',
   'STATUS': 'INICIADA',
   'DESCRICAO': 'Descrição 2'}],
 '__next': 'https://xxxxxxxxxxxxxx'}

E a sua tabela está justamente na chave 'results', então basta adicionar também a chave como slice e utilizar o método pd.Dataframe() para converter em tabela:
df = pd.read_json('json.json',typ='series')[0]['results']
pd.DataFrame(df)
df.set_index('Id')  # Definir coluna Id como índice

Resultado:




Id
Title
STATUS
DESCRICAO




1
Serviços - Eventos
INICIADA
Descrição 1


2
Serviços - Externas
INICIADA
Descrição 2



 ","
            1
        ",,,"['\npython', 'pandas\n']"
527760,Alterar um mesmo arquivo de varias pastas,"
Pessoal é o seguinte tenho que alterar um arquivo que encontra-se em diversas pastas (Pasta_raiz: H1, H2, H3, N1, N2,N2...) 
Fiz um código que pegasse apenas o H1 para testar as alterações, deu certo, mas agora preciso fazer para todos de uma vez, lembrando que dentro de casa pasta existe o arquivo de mesmo nome. 
Este é o código para a pasta H1 agora preciso fazer que ele replique de uma vez para todas as pastas.
# -------------------------------------
# BIBLIOTECA 
# -------------------------------------

import nibabel as nib
import numpy as np
from os import walk


#-------------------------------------
#LEITURA NIFTI
#-------------------------------------

img = nib.load('H1/aparc.DKTatlas+aseg.nii.gz')
img.shape
img2 = img.get_fdata()
y = np.ravel(img2)
x = np.unique(y)

#-------------------------------------
#REMOVER LINHAS 
#-------------------------------------

z = np.delete(x, (0, 4, 23, 47, 48, 50, 79, 80, 82), axis=0)

#-------------------------------------
# REMOVE NUMEROS DUPLICADOS
#-------------------------------------

def remove_duplicados(y):
    l = [0]
    for i in y:
        if i not in l:
          l.append(i)
    l.sort()
    return l

y = remove_duplicados(y)

","
Se todas essas pastas(H1,H2,H3,N1,N2,N2...) estão na mesma pasta (Vamos chamar de ALL) , você pode extrair as pastas do ALL para uma list com uma função do os:
import os

pastas = os.listdir('C:\\CAMINHO\QUALQUER\ALL')

E usar loop for:
for item in pastas:

A pasta seria item, o caminho do arquivo seria 'item/aparc.DKTatlas+aseg.nii.gz'. Entâo juntaremos as duas strings, item + '/aparc.DKTatlas+aseg.nii.gz':
img = nib.load(item + '/aparc.DKTatlas+aseg.nii.gz')

Ficaria assim:
# -------------------------------------
# BIBLIOTECA 
# -------------------------------------

import nibabel as nib
import numpy as np
from os import walk
import os

# -------------------------------------
# LOOP 
# -------------------------------------

pastas = os.listdir('C:\\CAMINHO\QUALQUER\ALL')

for item in pastas:
    #-------------------------------------
    #LEITURA NIFTI
    #-------------------------------------

    img = nib.load(item + '/aparc.DKTatlas+aseg.nii.gz')
    img.shape
    img2 = img.get_fdata()
    y = np.ravel(img2)
    x = np.unique(y)

    #-------------------------------------
    #REMOVER LINHAS 
    #-------------------------------------

    z = np.delete(x, (0, 4, 23, 47, 48, 50, 79, 80, 82), axis=0)

    #-------------------------------------
    # REMOVE NUMEROS DUPLICADOS
    #-------------------------------------

    def remove_duplicados(y):
        l = [0]
        for i in y:
            if i not in l:
              l.append(i)
        l.sort()
        return l

    y = remove_duplicados(y)


","
            0
        ","
Se o seu código para realizar a leitura, remover as linhas e remover os números duplicados já funciona, basta você iterar sobre as pastas iniciando da pasta raiz.
Antes de tentar o código abaixo, faça um backup das suas pastas.
import nibabel as nib
import numpy as np
import os

path_raiz = 'INSIRA O CAMINHO DA PASTA RAIZ' # Exemplo: 'C://users//fulano//Desktop ...'

# Loop para acessar as pastas que estão na pasta raiz
for pastas in os.listdir(path_raiz):

    # Loop para acessar os arquivos que estão nas pastas
    for arquivos in os.listdir(f'{path_raiz}\\{pastas}'):

        if os.path.basename(arquivos) == 'aparc.DKTatlas+aseg.nii.gz':

            #-------------------------------------
            #LEITURA NIFTI
            #-------------------------------------

            img = nib.load('H1/aparc.DKTatlas+aseg.nii.gz')
            img.shape
            img2 = img.get_fdata()
            y = np.ravel(img2)
            x = np.unique(y)

            #-------------------------------------
            # REMOVER LINHAS 
            #-------------------------------------

            z = np.delete(x, (0, 4, 23, 47, 48, 50, 79, 80, 82), axis=0)

            #-------------------------------------
            # REMOVE NUMEROS DUPLICADOS
            #-------------------------------------

            def remove_duplicados(y):
                l = [0]
                for i in y:
                    if i not in l:
                        l.append(i)
                l.sort()
                return l

            y = remove_duplicados(y)
    
        

Por favor, nos informe se a resposta deu certo.
","
            0
        ","['\npython', 'lista\n']"
527726,Como fazer migrations para uma base de dados não default,"
Estou a desenvolver um site em django em que me deu jeito utilizar a base de dados dos CTT com os seus códigos postais. Consegui encontrar uma base de dados com isso tudo e incluir no meu projeto.
Segui a política de não incluir essa base de dados na base de dados default do meu site, logo, no ficheiro settings do meu projeto, tenho:
DATABASES = {
'default': {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'bio_jose',
    'HOST': '127.0.0.1',
    'PORT': '3306',
    'USER': 'root',
    'PASSWORD': '',
},
'codigos_postais': {
    'NAME': 'codigos_postais',
    'ENGINE': 'django.db.backends.mysql',
    'HOST': '127.0.0.1',
    'PORT': '3306',
    'USER': 'root',
    'PASSWORD': '',
},

}
So far, so good e ainda não tinha encontrado problemas com esta abordagem. Encontrei algures forma de criar o código para estes models automaticamente e consegui trabalhar com a base de dados até com o django REST-API framework onde faço consultas com Javascript sem problemas para obter o que pretendo.
Agora surgiu-me a necessidade de acrescentar um campo a um dos models desta base de dados dos códigos postais, mas não consigo correr o comando makemigrations para a mesma.
Os seus models estão declarados numa app que se chama api pois não esperava usá-la para além do frontend e se correr o comando:
python3 manage.py makemigrations --database=codigos_postais

A resposta dele é a esperada pois não aceita o argumento database:
manage.py makemigrations: error: unrecognized arguments: --database=codigos_postais

Se tentar correr o mesmo comando mas indicando a app que quero atualizar, ou seja, onde se encontram os models para a base de dados (api):
python3 manage.py makemigrations api

A resposta surge como:
No changes detected in app 'api'

Pese embora eu já tenha acrescentado um campo no model que quero alterar. Isto se ocorrer numa qualquer app que utilize a base de dados default, corre bem, mas nesta não consigo aplicar as alterações na base de dados MySQL...
Tenho um Router que configurei na altura da importação da base de dados que tem o seguinte:
class MyRouter(object):
""""""
Um router serve para controlar qual a base de dados a ser utilizada pelos modelos das nossas aplicações
""""""

def db_for_read(self, model, **hints):
    """"""
    Tenta ler modelos de códigos postais para irem para a base de dados codigos_postais
    :param model:
    :param hints:
    :return:
    """"""
    if model._meta.app_label == 'codigos_postais':
        return 'codigos_postais'
    elif model._meta.app_label == 'bio_main' or model._meta.app_label == 'accounts':
        return 'default'
    return None

def db_for_write(self, model, **hints):
    """"""
    Tenta escrever modelos de códigos postais na base de dados codigos_postais
    :param model:
    :param hints:
    :return:
    """"""
    if model._meta.app_label == 'codigos_postais':
        return 'codigos_postais'
    elif model._meta.app_label == 'bio_main' or model._meta.app_label == 'accounts':
        return 'default'
    return None

def allow_relation(self, obj1, obj2, **hints):
    """"""
    Permite relações se um modelo de códigos postais está envolvido
    :param obj1:
    :param obj2:
    :param hints:
    :return:
    """"""
    if obj1._meta.app_label == 'codigos_postais' or obj2._meta.app_label == 'codigos_postais':
        return True
    elif 'codigos_postais' not in [obj1._meta.app_label, obj2._meta.app_label]:
        return True
    return False

def allow_migrate(self, db, app_label, model_name=None, **hints):
    """"""
    Verifica que os modelos de códigos postais apenas aparecem nesta base de dados
    :param db:
    :param app_label:
    :param model_name:
    :param hints:
    :return:
    """"""
    if app_label == 'codigos_postais':
        return db == 'codigos_postais'
    elif app_label == 'bio_main' or app_label == 'accounts':
        return db == 'default'
    return True

E a questão é:
Como é que consigo correr o comando makemigrations e posterior migrate numa base de dados que não a default?
Obrigado amigos, saúde para todos.
","
Para o makemigrations você pode selecionar o app, ou seja:
python manage.py makemigrations seu_app_aqui

Já para o migrate, por padrão ele usa o default, porém você pode escolher o database usando o --database conforme abaixo:
python manage.py migrate --database=codigos_postais

Para maiores detalhes veja aqui
","
            0
        ","
Ok, depois de ter acabado por ter acrescentado um campo à mão, cheguei à documentação certa para resolver o meu problema.
O que aconteceu foi que eu gerei o meu ficheiro models.py automáticamente a partir de uma base de dados já existente que primeiramente apenas queria utilizar como API e nesse código gerado automáticamente, está uma opção na classe Meta que diz:
managed = False

E aqui é que está o problema. Com managed = False, esta tabela não fica disponível para o Manager e consequentemente para todas as operações de migração.
","
            0
        ","['\nmysql', 'python', 'django\n']"
527697,Utilizando condicional para automatização com Python no SAP,"
veja se alguém consegue orientar esse iniciante aqui.
Estou fazendo a automação de um processo usando as bibliotecas: win32com.client , sys, subprocess, time e pandas.
Já consegui ler e tratar uma planilha, mapear os campos e lançar no sistema (já foi um avanço enorme para mim). Agora preciso fazer um loop para ler apenas parte da tabela e completar as informações faltantes.
É como se fosse um cabeçalho que hora tem diversos itens e hora só tem 1. Quando tem mais de um preciso preencher os demais.
Se alguém conseguir me dar uma luz eu ficarei muito agradecido. Segue abaixo o que eu fiz e o que preciso fazer.
Minha base de dados que estou lendo:

data =pd.read_excel(""C:/Users/xpto.xlsx"").astype(str)
data.columns = data.columns.str.replace(' ', '_')

Eu já consegui passar campo a campo da primeira linha e completar no sistema que estou utilizando. Agora preciso escrever uma lógica onde vou olhar a linha abaixo e se existir campos em branco ele continua a preencher a partir do campo material caso contrario ele salva no sistema e começa a preencher novamente um novo cabeçalho. Entendo que preciso fazer um “if” por aí.. mas onde e como escrevê-lo.
Segue trecho do código que estou criando
for index, row in data.iterrows():
session.findById(""wnd[0]"").maximize
session.findById(""wnd[0]/tbar[0]/okcd"").text = row.No_do_pedido '
session.findById(""wnd[0]"").sendVKey(0)
session.findById(""wnd[0]/usr/ctxtVBAK-AUART"").text = row.Data_pedido
session.findById(""wnd[0]/usr/ctxtVBAK-VKORG"").text = row.Emissor_da_ordem
session.findById(""wnd[0]/usr/ctxtVBAK-VTWEG"").text = row.Material


",,,,,"['\npython', 'pandas', 'sap\n']"
527674,Retornar string contendo somente consoantes,"
Preciso elaborar um regex para pegar somente consoantes de uma string.
Hoje apenas sei como tratar para tirar os caracteres não-alfanuméricos, mas tentei de alguns modos a inserir mais um grupo para retirar as vogais e não deu certo, segue o código:
import re

class TesteRegex:

    def trata_string( value ):
                  
        teste = re.sub(r'[\W_]','',value.upper(), flags=re.IGNORECASE)

        return teste
        
    nome = ""T3ste@_test@and000_  t3ste""

    teste = trata_string(nome)

    print(teste)

Como poderia adicionar o conjunto [aeiou] a essa estrutura?
","
Não precisa de regex
Se quer manter somente as consoantes (considerando que são apenas os caracteres ASCII, ou seja, nada de caracteres como ""ñ"", ""ÿ"", etc), bastaria fazer algo do tipo:
nome = ""T3ste@_test@and000_  t3ste""
vogais = 'aeiouAEIOU'
print(''.join(c for c in nome if (('a' <= c <= 'z') or ('A' <= c <= 'Z')) and c not in vogais))

Usei uma generator expression que percorre os caracteres da string e pega somente as consoantes (eu vejo se é uma letra de ""A"" a ""Z"" e se não é vogal). Depois junto todas em uma única string, usando join.
Nesse caso, o resultado será Tsttstndtst (somente as consoantes da string).
Ou, em vez de ter uma variável com as vogais e ver se a letra não é uma delas, faça o contrário, crie uma variável contendo todas as consoantes, e para cada letra da string você verifica se ela é uma delas:
consoantes = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'
nome = ""T3ste@_test@and000_  t3ste""
print(''.join(c for c in nome if c in consoantes))

Desta forma eu nem preciso verificar se é letra (se não for consoante, tanto faz se é letra ou não, pois não será incluído no resultado final).

Se quiser, pode usar uma função geradora que retorna somente as consoantes, e aí você usa-a no join:
def get_consoantes(s):
    consoantes = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'
    for c in s:
        # se é consoante
        if c in consoantes:
            yield c

print(''.join(get_consoantes(nome))) # Tsttstndtst


Ao fazer c in consoantes, estamos fazendo uma busca linear na string consoantes. Mas se forem feitas muitas buscas, uma pequena otimização que pode ser feita é usar set:
consoantes = set('bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ')
print(''.join(c for c in nome if c in consoantes))

A busca em um set tem tempo constante (ver aqui), por isso assim fica mais otimizado do que se buscássemos em uma string (veja comparação no final).

Mas se quiser muito usar regex...
Acho que a solução acima fica bem mais simples. Com regex ficaria, na minha opinião, mais complicado:
import re

r = re.compile('[^b-df-hj-np-t-v-z]', re.I)
nome = ""T3ste@_test@and000_  t3ste""
print(r.sub('', nome)) # Tsttstndtst

Eu usei uma classe de caracteres negados para pegar tudo que não é consoante (tudo que está entre [^ e ] é negado pela regex). E lá dentro coloquei os intervalos para indicar as letras que não quero: b-d são as letras entre ""b"" e ""d"", j-n são as letras entre ""j"" e ""n"", etc. E usei a flag re.I, que ignora a diferença entre maiúsculas e minúsculas. Ou seja, esta regex pega qualquer letra que não seja uma consoante. Por fim, uso sub para trocar tudo isso por '' (string vazia), que no fim é o mesmo que removê-las.
Usar \W, como está no seu código, não funciona bem, porque assim você vai manter também os dígitos e o caractere _, mas como você disse que quer somente as consoantes, então \W não é uma boa opção (e tentar arrumar isso com outra regex então, é pior ainda; se for mesmo para usar regex, use uma só que vai direto ao ponto).

Em outra resposta foi sugerido o uso de intersecções entre classes de caracteres, mas o módulo re nativo do Python não suporta este recurso (até a versão atual, que é 3.9; pode ser que no futuro mude, mas por enquanto não dá para usar).
Se quiser usar este recurso, atualmente a opção é instalar o módulo regex:
# ATENÇÃO: módulo externo, deve ser instalado com pip: https://pypi.org/project/regex
import regex

r = regex.compile('[^a-z&&[^aeiou]]', regex.IGNORECASE | regex.VERSION1)
print(r.sub('', nome))

No caso, o trecho a-z&&[^aeiou] são todas as letras de ""a"" a ""z"", exceto as vogais (ou seja, somente as consoantes). E o [^ no início nega esses caracteres, portanto a regex pega tudo que não for consoante.

Ainda sim, acho que não precisa de regex. As primeiras soluções acima são, na minha opinião, muito mais simples e claras.
Só como curiosidade, segue um comparativo das soluções, usando o módulo timeit para medir os tempos:
from timeit import timeit
import re

consoantes_string = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'
consoantes_set = set('bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ')
r = re.compile('[^b-df-hj-np-t-v-z]', re.I)
nome = ""T3ste@_test@and000_  t3ste""

# executa 1 milhão de vezes cada teste
params = { 'number' : 1000000, 'globals': globals() }

# imprime os tempos em segundos
print(timeit(""''.join(c for c in nome if c in consoantes_set)"", **params))
print(timeit(""''.join(c for c in nome if c in consoantes_string)"", **params))
print(timeit(""r.sub('', nome)"", **params))

Os tempos são impressos em segundos, e podem variar de uma máquina para outra. Na minha o resultado foi:
1.3250721090007573
1.4059548949999225
3.3496847289998186

Ou seja, com set ficou ligeiramente mais rápido do que se usar uma string com as consoantes, enquanto que a regex ficou quase 3 vezes mais lenta.
Claro que para strings pequenas sendo processadas poucas vezes a diferença será insignificante, mas este é mais um motivo para não preferir regex. Com for e if o código fica - na minha opinião - mais simples e claro de entender e manter, e ainda tem o bônus de ser mais rápido. Regex pode até ser legal, mas nem sempre é a melhor solução.
","
            4
        ","
Também penso que não há a necessidade de usar regex aqui.
De maneira mais simplificada e generalista, aqui vai uma função que, ao receber um string entrada e um string de caracteres_para_filtrar, retorna o string entrada sem os caracteres presentes em caracteres_para_filtrar:
def filtrar_string(entrada: str, caracteres_para_filtrar: str):
    saida = """"
    for caractere in entrada:
        if caractere not in caracteres_para_filtrar:
            saida = saida + caractere
    return saida

Exemplo de uso:
meu_string = ""Olá Mundo!""
filtro = ""OM""
meu_string_filtrado = filtrar_string(meu_string, filtro)
print(meu_string_filtrado)  # output: ""lá undo!""

Portanto, basta chamar esta função passando como entrada o seu string, e caracteres_para_filtrar como um string contendo todas as vogais (""aeiouAEIOU"").
Se preferir, aqui está uma versão da função que utiliza uma compreensão de lista no lugar do for loop explícito:
def filtrar_string(entrada: str, caracteres_para_filtrar: str):
    return """".join([
        caractere 
        for caractere in entrada 
        if caractere not in caracteres_para_filtrar
    ])

","
            2
        ","['\npython', 'python-3.x', 'regex\n']"
527662,Programa sendo executado inteiro mesmo depois de uma condição ser colocada (python) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Estou aprendendo python e oque acontece é o seguinte:
Tenho alguns if's no programa mas mesmo depois de uma das condições ser suprida o programa continua sendo executado inteiro, ocasionando em um erro
import os



acao = input(""Olá, qual ação gostaria de realizar?\n""
             ""1 - Link do perfil\n""
             ""2 - Encontrar perfil\n""
             ""Resposta: "")



if acao == ""Link"":
    pesq2 = input('Selecione a rede social que deseja usar:\n'
                  '1 - Instagram\n'
                  '2 - Facebook\n'
                  '3 - Twitter\n'
                  '4 - Tiktok \n'
                  'Resposta: ')


if pesq2 == ""Instagram"":
    pesq3 = input('Digite o perfil que deseja pesquisar: ')
    inst = ""instagram.com/"" + pesq3
    os.system(""start chrome "" + inst)




if pesq2 == ""Facebook"":
    pesq3 = input('Digite o perfil que deseja pesquisar: ')
    fc = ""facebook.com/"" + pesq3
    os.system(""start chrome "" + fc)





elif pesq2 == ""Twitter"":
    pesq3 = input('Digite o perfil que deseja pesquisar: ')

    tw = ""twitter.com/"" + pesq3
    os.system(""start chrome "" + tw)




elif acao == ""Encontrar"":
    bsc = input(""Selecione a rede social: ""
                ""1 - Perfil Facebook\n""
                ""2 - Perfil Tiktok\n""
                ""3 - Perfil Twitter\n"")


if bsc == ""Facebook"":
    pfac = input(""Digite o perfil que deseja pesquisar: "")
    fac1 = ""https://www.facebook.com/search/top/?q="" + pfac
    os.system(""start chrome "" + fac1)

    if bsc == ""Tiktok"":
        ptk = input(""Digite o perfil desejado: "")
        ptk1 = ""https://www.tiktok.com/search?q="" + ptk
        os.system(""start chrome "" + ptk1 + ""&lang=pt-BR"")


Oque acontece, é que ao digitar ""Encontrar"" o programa pula para  if pesq2 == ""Instagram"" e acaba dando erro pois pesq2 não foi declarado.
Isso foi desorganização da minha parte (e inexperiencia) ? como posso resolver?
","
Você precisa usar seus condicionais aninhados. Isso significa que um if tem que estar dentro do outro. Você faz isso usando a indentação:
acao = input(""Olá, qual ação gostaria de realizar?\n""
             ""1 - Link do perfil\n""
             ""2 - Encontrar perfil\n""
             ""Resposta: "")

if acao == ""Link"":
    pesq2 = input('Selecione a rede social que deseja usar:\n'
                  '1 - Instagram\n'
                  '2 - Facebook\n'
                  '3 - Twitter\n'
                  '4 - Tiktok \n'
                  'Resposta: ')

    if pesq2 == ""Instagram"":
        pesq3 = input('Digite o perfil que deseja pesquisar: ')
        inst = ""instagram.com/"" + pesq3
        os.system(""start chrome "" + inst)

    elif pesq2 == ""Facebook"":
        pesq3 = input('Digite o perfil que deseja pesquisar: ')
        fc = ""facebook.com/"" + pesq3
        os.system(""start chrome "" + fc)

    elif pesq2 == ""Twitter"":
        pesq3 = input('Digite o perfil que deseja pesquisar: ')

        tw = ""twitter.com/"" + pesq3
        os.system(""start chrome "" + tw)

elif acao == ""Encontrar"":
    bsc = input(""Selecione a rede social: ""
                ""1 - Perfil Facebook\n""
                ""2 - Perfil Tiktok\n""
                ""3 - Perfil Twitter\n"")

você percebe que todos os condicionais que dizem respeito a pesq2 estão alinhados e dentro do primeiro if? Além disso tome muito cuidado com o uso do if/elif em alguns lugares você usou if quando deveria ser elif
","
            0
        ",,,"['\npython', 'python-3.x\n']"
527645,Despertador em Python,"
Olá!
Estou a tentar fazer um despertador em Python, mas estou com problemas ao comparar o horário atual com o horário desejado para despertar, ele só aciona quando faço a condição If com != ao invés de ==.
O meu código está assim:
def relogio(): #função relogio
    horario.config(text = strftime(""%H:%M""))
    horario.after(1000,relogio) #atualiza o horario a cada 1 segundo
    return


def ligAlarme(hora,minuto): #função alarme
   
    print(localtime().tm_hour)
    
    while True:
        
        if  localtime().tm_hour == int(hora) and localtime().tm_min == int(minuto):
            
            pygame.mixer.init() #chama o iniciador da música
            pygame.mixer.music.load(""alarm-clock-ringing.mp3"")
            pygame.mixer.music.play(loops = 2)
            botaoParar.place(x=325, y=210)
            
            break
         
        return

def deslAlarme(): #função para desligar o alarme
    pygame.mixer.music.stop()
    return

janela = tk.Tk()
janela.title(""Despertador relógio"")
janela.geometry(""500x250"")
janela.resizable(0,0) 
janela.config(bg = ""white"") 

horario = tk.Label(janela, bg = ""white"", fg = ""black"", font = ""arial 50 bold"") 
horario.pack() 
relogio()

hora = tk.Entry(janela, width = 2, bg = ""white"", fg = ""black"", font = ""arial 25"" ) 
hora.place(x=195,y=155)

minuto = tk.Entry(janela, width = 2, bg = ""white"", fg = ""black"", font = ""arial 25"" ) 
minuto.place(x=255,y=155)

botaoIniciar = tk.Button(janela, text = ""Iniciar alarme"", command = lambda: ligAlarme(hora.get(), minuto.get())) 
botaoIniciar.place(x=100,y=210)

botaoParar = tk.Button(janela, text = ""Parar alarme"", command = deslAlarme)

janela.mainloop()


Se alguém puder ajudar agradeço!
","
O possível problemas talvez estaria no tipo de variável, por exemplo:
x = 1    #int()
y = '1'  #str()

x == y   #retorna False


No seu codigo você pode transformar um valor para int() ou outro para str():
if  localtime().tm_hour == str(hora) and localtime().tm_min == str(minuto):

ou
if  int(localtime().tm_hour) == int(hora) and int(localtime().tm_min) == int(minuto):

","
            0
        ",,,['\npython\n']
527640,Classe com duas funções while executando somente uma,"
def reward_colector(self, quit=None):
        if self.follow == True:
            while True:
                self.btn_reward_status = False
                try:
                    self.btn_reward = self.nav.find_element_by_xpath(
                        ""//button[@aria-label='Claim Bonus']""
                    )
                    self.btn_reward_status = True
                except Exception as e:
                    print('Objeto não encontrado')
                    sleep(300)
                if self.btn_reward_status == True:
                    self.btn_reward.click()
                    print(f'Reward redeemed, Current points: {self.points.text} {self.streamer}')
                if quit == True:
                    return False

    def msg_sender(self, msg, quit=None):
        while True:
            twitch_input = self.nav.find_element_by_xpath(""//textarea[@placeholder='Send a message']"")
            twitch_input.send_keys(msg)
            btn_send = self.nav.find_element_by_xpath(""//button[@data-a-target='chat-send-button']"")
            btn_send.click()
            sleep(300)
        if quit == True:
            return False




if __name__ == '__main__':
    threading.Thread(target=twitch.msg_sender('Testando meu bot :)')).start()
    twitch.reward_colector()

já tentei com threads ele executa sempre o primeiro, mas o segundo n, eles estão dentro de uma classe
","
Para o parâmetro target do construtor da classe Thread, você deve passar uma função que vai ser chamada para execução em paralelo. Do jeito que o código está escrito, você está chamando a função twitch.msg_sender com o argumento 'Testando meu bot :)' e passando o valor de retorno dela como target. Como essa função fica presa em um loop, ela nunca retorna, então o seu código fica travado tentando encontrar o valor que vai ser passado para o parâmetro target.
O código correto seria
threading.Thread(target=twitch.msg_sender, args=['Testando meu bot :)'])
twitch.reward_collector()

Note que, dessa vez, o target é a própria função e não o valor de retorno dela. Note também que o argumento args também é passado, para que o construtor da classe Thread saiba quais argumentos passar para o seu target quando ele chamá-lo.
","
            0
        ",,,"['\npython', 'selenium\n']"
527605,Como ordenar argumentos de uma função python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 6 meses.




                        Melhore esta pergunta
                    



Tenho a seguinte função:
def maluco(utrib,ucom,icms,desc,x,qtrib,vprod,fcp,ipi,dire,inf,nome=''):
    ...

E tentei chamá-la assim e de outros 30 jeitos:
qcx = maluco(utrib,ucom,icms,desc,x=y,qtrib,vprod,fcp,ipi,dire = 'nda',inf)

Porém sempre que chamo recebo um erro: SyntaxError: positional argument follows keyword argument
Qual a ordem para chamá-la e qual a diferença entre positional argument e keyword argument?
","
É porque um argumento posicional não pode ser colocado depois de um com o valor definido no argumento, isso acontece tanto na definição da função quanto na chamada.
Tenho a seguinte função:
qcx = maluco(utrib,ucom,icms,desc,qtrib,vprod,fcp,ipi,inf,dire='nda',x=y)
Tenta fazer desse modo. :)
Argumento posicional(positional argument) é aquele que não tem valores definidos na chamada que é o caso de todos menos, dire e x.
Keyword é justamente o argumento que recebe um valor, ou seja, uma chave(key)
","
            0
        ","
Imagine que temos a função:
def f(a, b):
    print(""O argumento passado como parâmetro a é"", a)
    print(""O argumento passado como parâmetro b é"", b)

Agora, chamamos a função da seguinte forma:
valor_1 = 2
valor_2 = 5
f(valor_1, valor_2)
# output:
# O argumento passado como parâmetro a é 2
# O argumento passado como parâmetro b é 5

Como o Python decide que a variável valor_1 deve entrar como o parâmetro a, e a variável valor_2 como b? Simplesmente por causa da posição que os argumentos são passados para a função. Neste caso, valor_1 e valor_2 são chamados de argumentos posicionais porque sua ordem define quem substituirá qual parâmetro dentro da função.
Mas também podemos chamar a função dessa forma:
valor_1 = 2
valor_2 = 5
f(b=valor_1, a=valor_2)
# output:
# O argumento passado como parâmetro a é 5
# O argumento passado como parâmetro b é 2

Neste caso, fomos explícitos ao indicar que valor_1 deve ser entregue à função como o parâmetro b, não a. Para isso, usamos a palavra-chave do nome do parâmetro, como em b=valor_1. Dá-se a isso o nome de argumentos de palavra-chave. Note que, neste caso, não é necessário passar os argumentos na mesma ordem em que os parâmetros foram definidos na função.
Agora olhe este caso:
valor_1 = 2
valor_2 = 5
f(b=valor_1, valor_2)
# output:
# SyntaxError: positional argument follows keyword argument

O erro aqui acontece porque usamos argumentos de palavra-chave antes de argumentos posicionais. Pela regra de argumentos posicionais, valor_2 deveria ser associado ao parâmetro b, mas estamos explicitamente passando valor_1 como b. Então, para evitar situações complicadas onde não se tem mais certeza que argumentos estão sendo passados para que parâmetros, logo de cara o Python proíbe que argumentos de palavra-chave venham antes de argumentos posicionais - é simplesmente uma regra da sintaxe da linguagem.
Então, para chamar sua função no seu caso, você pode passar todos os argumentos como argumentos posicionais (na ordem correta):
qcx = maluco(utrib, ucom, icms, desc, y, qtrib, vprod, fcp, ipi, 'nda', inf)

Ou então passar todos argumentos em qualquer ordem como argumentos de palavra-chave (decidi manter a ordem original por simplicidade, mas não é necessário):
qcx = maluco(utrib=utrib, ucom=ucom, icms=icms, desc=desc, x=y, qtrib=qtrib, vprod=vprod, fcp=fcp, ipi=ipi, dire='nda', inf=inf)

","
            0
        ","['\npython', 'funções', 'argumento\n']"
527553,"Função .replace() Python não está funcionando, retorna \n e \r [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.




                        Melhore esta pergunta
                    



def read_book(title_path):
       '''
        Read a bokk and return it as string
       '''
       with open(title_path, ""r"", encoding=""utf-8"") as current_file:
            text = current_file.read()
            text.replace(""\n"", """").replace(""\r"","""")
       return text

text = read_book(r""C:\Users\User\Desktop\PythonWeek3\Books_EngFr\Books_EngFr\English\shakespeare\Romeo and Juliet.txt"")

ind = text.find(""What's in a name?"")
ind

sample_text = text[ind : ind + 1000]
sample_text



","
Strings são considerados objetos imutáveis em Python, portanto qualquer método de string sempre irá retornar uma nova string. Veja por exemplo:
s1 = ""Olá Mundo!!!""
s2 = s1.replace(""!"", ""?"")
print(s1)
print(s2)

# output:
# Olá Mundo!!!
# Olá Mundo???

Portanto, faltou você pegar o valor retornado ao chamar text.replace.
Caso você não precise do conteúdo bruto retornado pelo current_file.read, dá para fazer a substituição em uma linha da seguinte forma:
text = current_file.read().replace(""\n"", """").replace(""\r"","""") 

","
            2
        ",,,"['\npython', 'python-3.x', 'ipython-notebook\n']"
527395,"Bot Telegram em Python ""quebra"" após primeira consulta","
Preciso de uma ajuda pra resolver um problema em um bot para Telegram em Python que após receber uma segunda consulta ""quebra""; para de funcionar. Talvez esse código tenha muitos ""erros"" aos olhos de desenvolvedores experientes, não tenho muito conhecimento. Estou aprendendo e agradeço qualquer dica ou sugestão.
import pymysql.cursors
import telebot

CHAVE_API = ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx""
bot = telebot.TeleBot(CHAVE_API)


conn = pymysql.connect(
    host= 'xxxxxxxx',
    user= 'xxxx',
    passwd= 'xxxx',
    database= 'xxxx'
)


@bot.message_handler(commands=[""start""])
def start(mensagem):
    first_name = mensagem.chat.first_name
    bot.reply_to(mensagem, ""Olá *""+first_name+""*, tudo bem?\n\nEsse bot faz consulta das informações físicas dos nodes. Para iniciar clique no comando abaixo:\n\n /node"", parse_mode='markdown')

@bot.message_handler(commands=[""node""])
def node(mensagem):
    first_name = mensagem.chat.first_name
    bot.reply_to(mensagem, ""Digite o nome do node."")


def verificar(mensagem):
    return True

@bot.message_handler(func=verificar)
def responder(mensagem):
    msg = mensagem.text.upper()
    with conn:
        with conn.cursor() as cursor:
            sql = f""SELECT * FROM nodes WHERE nome_novo LIKE '{msg}'""
            cursor.execute(sql)
            result = cursor.fetchone()
            
            if result:
                nome_novo = result[2]
                nome_antigo = result[1]
                rx1 = str(result[3])
                rx2 = str(result[6])
                rx3 = str(result[9])
                rx4 = str(result[12])
                tx1 = str(result[15])
                tx2 = str(result[18])
                tx3 = str(result[21])
                tx4 = str(result[24])
                adc = str(result[27])
                hv = str(result[29])
                site = (result[30].capitalize())
                cidade = result[31]
                bot.send_message(mensagem.chat.id, nome_novo+"" (""+nome_antigo+"")\n\nRX: ""+rx1+"" - ""+rx2+"" - ""+rx3+"" - ""+rx4+""\nTX: ""+tx1+"" - ""+tx2+"" - ""+tx3+"" - ""+tx4+""\nDGO: ""+adc+""\nHV: ""+hv+""\nSite: ""+site+"" / ""+cidade)
            else:
                bot.send_message(mensagem.chat.id, ""Node não encontrado!"")

bot.polling()



",,,,,"['\npython', 'telegram-bot\n']"
527370,Input aparece como print e não permite entrada de dados,"
O objetivo do código a seguir é passar um valor recebido - por um campo de digitação(input) pelo usuário - por parâmetro em um método de uma classe no python:
aux = float(input('Digite o percentual desejado para reajustar o valor do salario : '))
print(str(dadosFuncionario.reajustarValorHora(aux)))

Ocorre que o texto dentro do input é impresso no output e não permite entrar com o valor.
Estou usando o VSCode e uma extensão Python Preview e lá exibe o seguinte aviso : User input is not supported. Este aviso não aparece como um erro de maneira comum.
A classe que estou chamando contém o seguinte código:
def reajustarValorHora(self, Reajuste):
    return 'Valores reajustados ' + ' = Ajuste do Valor/Hora Normal : ' + str(self.__valorHora * (Reajuste/100) + self.__valorHora ) +  ' Ajuste do Valor/Hora Extra : ' + str(self.__valorHoraExtra * (Reajuste/100) + self.__valorHoraExtra)

Quando eu passei o número por parâmetro, deu certo, o método retornou os valores corretamente mas quando tento com o input não é possível entrar com valor algum.
","
Faça a conversão string - inteiro/float já dentro da função, importe o argumento reajuste como string.
Dentro da função quando invocar o parâmetro (reajuste) para cálculo faça a conversão para float ou int
","
            0
        ","
No botão Run Code, em vez de clicar nele diretamente, clica na setinha que tem ao lado do botão e seleciona Run Python File. Desta forma, a função input ficará apta a receber dados do usuário.
","
            -1
        ","['\npython', 'orientação-a-objetos', 'visual-studio-code\n']"
527366,salvar mais que um input em lista,"
Estou tendo problemas com a criação de uma lista aceitando todos os inputs. Eu preciso criar uma lista contendo todos os nomes e apostas dos usuários, mas o meu código só está guardando na lista o último input de nome e aposta, os primeiros inputs não estão sendo salvos, por exemplo:
what is your name?
carol
What is your bid?
$ 7
Are They any other bidders? Type 'yes' or 'no'
yes
what is your name?
manoel
What is your bid?
$ 6
Are They any other bidders? Type 'yes' or 'no'
no
A lista que tenho no final:
['manoel','6']
ou seja, o primeiro input desaparece.
Meu código:
while others:
  apostas = []
  nome = input(""what is your name?\n"")
  aposta = input(""What is your bid? \n $ "")
  outros = input (""Are They any other bidders? Type 'yes' or 'no' \n"")
  for n in aposta:
    apostas.append (nome) 
    apostas.append(aposta) 
  clear()
  if outros == ""no"":
    others = False
    print(""end"")
print(apostas)```

","
Testei seu código em minha máquina e encontrei alguns pontos. Quando você declara a lista vazia dentro do loop while ela sempre é resetada quando volta pra primeira linha. fiz algumas modificações e rodou bem aqui
apostas = []
while True:  
    apostas.append(input(""what is your name?\n"")) 
    apostas.append(input(""What is your bid? \n $ ""))
    outros = input (""Are They any other bidders? Type 'yes' or 'no' \n"")
    if outros == ""no"":
        others = False
        print(""end"")
        break
    else:
        continue
print(apostas)

Você pode também colocar o input dentro do append e tirar o for loop, o clear() não precisa pq o input vai sobrescrever as variáveis.
","
            3
        ",,,['\npython\n']
527350,Como criar múltiplos lambdas que chamam uma mesma função com diferentes parâmetros?,"
Suponha que eu queira criar uma aplicação que consiste em vários botões que chamam uma mesma função, no entanto, passando diferentes argumentos (números de 1 à N).
Se eu tivesse que criar 10 botões desses, eu escreveria 10 linhas de código. Se eu tivesse que criar 50 botões desses, eu escreveria 50 linhas de código. Notem que isso não parece muito prático.
Uma solução que um iniciante poderia pensar é usar o for...range para automatizar esse processo, dessa forma:
for i in range(100):
    button = Button(root, command = lambda: function(i))
    button.pack()

O problema é que isso não daria certo, porque o Python não ""salva"" o valor da variável dentro do lambda a cada iteração. As variáveis usadas dentro do lambda são tratadas como ""globais"" quanto à sua leitura. Isto é, a referência da variável dentro do lambda é a mesma da variável fora dela.
def func(x): print(x)

var = 10

# Inicialmente pensamos que sempre que chamarmos a função anônima, ele vai imprimir 10
f = lambda: func(var) 
f() # Opa! Imprimiu o valor 10 como esperado.

# E se mudarmos o valor da variável?
var = 20
f() # Puts... ele imprime o valor 20. Ou seja, o valor da variável não é salvo no lambda.

Sendo assim, existe alguma forma de automatizar esse processo em Python? Em outras palavras, é possível criar dinamicamente vários lambda que chamam uma mesma função, porém com diferentes argumentos?
","
A melhor solução, assim como o @Rfroes87 falou na resposta dele, é criar um parâmetro com um valor default para o lambda, que será o valor da variável que você deseja utilizar dentro da função.
Dessa forma, a variável utilizada dentro do lambda será tratada como local, sem a possibilidade de manipulação da mesma em outro escopo.
for num in range(100):
    button = Button(root, command = lambda num = num: print(num))
    button.pack()

Uma outra solução, que lhe dá um pouco mais de flexibilidade para manipular a criação da função anônima, é criar uma outra função que recebe a função a ser chamada e os argumentos, e depois retorna o lambda. Veja o exemplo abaixo:
def cria_lambda(func, *args, **kw):
    # Aqui você pode inserir mais código antes de retornar o lambda.
    return lambda: func(*args, **kw)

E por fim, temos também uma função própria da linguagem Python, do módulo functools, chamada partial. Essa função faz a mesma coisa que a função acima, com algumas diferenças pequenas em sua implementação.
from functools import partial

def func(x): print(x)

f = partial(func, 10)
f() # Imprime o valor 10

No caso, a função partial não retorna uma função anônima, mas sim um novo objeto de partial, que possui ainda três atributos (func, args, keywords), como mostra a documentação.
","
            6
        ","
Baseado em uma resposta no site em inglês, basta você atribuir a função lambda ao valor dinâmico de i (durante o loop for...range) e o mesmo irá persistir quando for executado posteriormente — no caso, ele não irá esperar para executar a função com o valor global de i ao final, que seria 99.
Exemplificando com a função print, ficaria da seguinte forma:
from tkinter import Tk, Button

root = Tk()

for i in range(100):
    button = Button(root, command = lambda i=i: print(i))
    button.pack()

","
            5
        ","['\npython', 'expressões-lambda\n']"
527310,No Django como restringir alteração de apenas um field do model após ter inserido um valor?,"
Exemplo.:
class Cadastro(models.Model):

    class Tipos(models.TextChoices):
        PERFIL_A = 'perfil B', 'Perfil A'
        PERFIL_B = 'perfil B', 'Perfil B'

    id = models.UUIDField(primary_key=True, editable=False, default=uuid.uuid4)
    nome = models.CharField(max_length=100)
    tipo_perfil = models.CharField(max_length=30, choices=Tipos.choices)'

o field 'tipo_perfil' não quero que altere após ter escolhido, é possível?
Tem algum recurso do django ou precisaria fazer uma logica no model?
","
Acredito que você esteja montando um formulário para o usuário. Sendo assim, você pode fazer isso no forms.py
Veja o exemplo abaixo:
class CadastroUpdateForm(forms.ModelForm):
    class Meta:
        model = Cadastro
        fields = ['nome', 'tipo_perfil']
        labels = {
            'nome': 'Nome',
            'tipo_perfil': 'Perfil',
        }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['tipo_perfil'].disabled = True

Veja que no __init__ o campo tipo_perfil está desabilitado pela linha:

self.fields['tipo_perfil'].disabled = True

Embora esteja hardcoded no exemplo, você pode passar como parâmetro na inicialização desta classe.
","
            0
        ",,,"['\npython', 'django\n']"
527308,Reticências na saída print() no Python,"
Por que não aparece o texto completo que estou colocando na saída do print()? Obs.: Estou usando google colab.

","
Altere as configurações do pandas com o método set_options. Conforme exemplo abaixo:
import pandas as pd

pd.set_option('display.max_rows', 50)
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)
pd.set_option('display.max_colwidth', None)

display.max_rows = número máximo de linhas. Caso possua mais, irá apresentar reticências
display.max_columns = número máximo de colunas. None é sem limite
display.width = tamanho do display em caracteres. Caso seja configurado para None, o pandas irá detectar
display.max_colwidth = número máximo de caracteres por coluna. None é sem limite
display.width = tamanho do display em caracteres. Caso seja configurado para None, é sem limite
Veja mais configurações aqui
","
            0
        ",,,['\npython\n']
527237,como faço para fechar uma janela dentro de outra classe no pyside?,"
class PrimeiraJanela(QWidget):
   def __init__(self):
       super().__init__()
       
       janela um...


class SegundaJanela(QWidget):
   janela dois

Basicamente eu preciso chamar a janela dois (segunda classe) através de u botão, e quando isso acontecer, fechar a janela 1, assim como na janela dois existe um botão que chama a janela um e que precisa fechar a janela 2.
O meu problema é que ou as janelas não fecham, ou quando clico no botão ambas as janelas fecham (que seria usando o sys.exit()).
O método close não está disponível.
Como é possível fechar apenas uma das janelas e chamar a outra?
",,,,,"['\npython', 'pyqt-5', 'pyside\n']"
527197,Problemas para importar pacote no Python3 em sistema de filas de cluster,"
O pacote skopt (https://scikit-optimize.github.io/stable/install.html) foi instalado em um cluster que eu uso.
Quando executo o código em python diretamente no terminal (ou seja, terminal de cluster), nenhum problema ocorre e o código funciona conforme o esperado.
No entanto, quando simplesmente coloco o comando para executar o código em um arquivo de sistema de fila PBS (por exemplo, python3 ./code.py), não consigo carregar o pacote instalado e recebo a seguinte mensagem:
 Traceback (última chamada mais recente):
     Arquivo ""./code.py"", linha 22, em <module>
        from skopt import gp_minimize
 ModuleNotFoundError: Nenhum módulo chamado 'skopt'

Alguém poderia me dar uma ideia de como resolver o problema?
Se eu precisar fornecer mais informações, me informem, por gentileza.
ps1: o pacote foi instalado no diretório /usr/local/lib/python3.6/site-packages/skopt.
","
Caso você consiga executar um código em Python em que consiga carregar pacotes normalmente executando o script diretamente no terminal, mas que não consiga fazer isso indiretamente em um arquivo de sistema de filas .PBS (que acuse que os pacotes não estão instalados), siga as seguintes etapas:

Descubra em qual diretório o pacote foi instalado (no meu caso estava em
""/usr/local/lib/python3.6/site-packages/"")

Antes de chamar a execução do seu código em Python no arquivo de filas .PBS (e.g., ""python3 ./code.py""), use um comando ""export"" baseado no diretório em que o pacote foi instalado, no meu exemplo utilizei o comando:
""export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.6/site-packages"".


Exemplo de arquivo .pbs para executar o código ""code.py"":
#!/bin/bash
#PBS -N nome_do_job
#PBS -e arquivo_de_erro
#PBS -o arquivo_de_output
#PBS -q nome_da_fila
#PBS -l nodes=x:ppn=y

### o pacote ""teste"" foi instalado na pasta ""usr/local/lib/python3.6/site-packages""

### o comando abaixo carrega o pacote:
export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.6/site-packages

### o comando abaixo executa o código em python ""code.py"" que importa o pacote ""teste""  
python3 ./code.py

Em que no arquivo ""code.py"" é importado o pacote ""teste"". Exemplo:
import teste

... código em python ...

","
            0
        ",,,"['\npython', 'python-3.x\n']"
527156,Abrir Aplicativo automaticamente pelo navegador Selenium/Python,"
Estava fazendo um Script de automacao web com Selenium/Python.
E uma das etapa é abrir o aplicativo:

Estou usando Biblioteca do Selenium (Python)
Pesquisei um pouco e descubri que ele nao é um alert e metodo como alert.accept() nao funciona.
Achei uma solucao usando keyboard mas ele necessita que a janela precisa estar focada:
keyboard.press_and_release('left, enter')

Se eu marcar a caixa: "" Always open these types of links in the associated app ""
O navegador nao salva essa opcao e proxima vez que executar o Scripts o navegador pergunta novamente se quero abrir o app.
Teria alguma solucao de ele abrir app automaticamente sem precisar estar focada na janela do navegador?
","
Esse alerta está na camada do sistema operacional, não propriamente no navegador. Então, pelo que pesquisei, o selenium não reconhece. O que você pode fazer é utilizar o pyautogui: https://pypi.org/project/PyAutoGUI/
Tirar um print do botão ""Open pick an app"" e programar o pyautogui navegar com o mouse até esse botão e clicar. Se você der uma pesquisada você vai encontrar bastante conteúdo ensinando sobre.
","
            -2
        ",,,"['\npython', 'selenium', 'selenium-webdriver\n']"
527153,Passando string via socket em Python,"
Estou tentando desenvolver um projeto de rede aqui em minha empresa e preciso passar algumas strings de um computador para o outro. Optei por fazer isso via socket.
Eu estou fazendo testes com dois scripts, server.py e client.py. O problema é que a mensagem enviada pelo client.py sempre está em um formato de b'minhamensagem'. Como faço para limpar isso?
Arquivo server.py:
import socket
def server(host = 'localhost', port=5000):
    data_payload = 5048 #The maximum amount of data to be received at once
    # Create a TCP socket
    sock = socket.socket(socket.AF_INET,  socket.SOCK_STREAM)
    # Enable reuse address/port 
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    # Bind the socket to the port
    server_address = (host, port)
    print (""Starting up echo server  on %s port %s"" % server_address)
    sock.bind(server_address)
    # Listen to clients, argument specifies the max no. of queued connections
    sock.listen(5) 
    i = 0
    while True: 
        print (""Waiting to receive message from client"")
        client, address = sock.accept() 
        data = client.recv(data_payload) 
        if data:
            print(data)
            input(""PAUSE"")
            print (""Data: %s"" %data)
            client.send(data)
            print (""sent %s bytes back to %s"" % (data, address))
            # end connection
            client.close()
            i+=1
            if i>=3: break           
server()


Arquivo client.py:
import socket
def client(host = 'localhost', port=5000): 
 # Create a TCP/IP socket 
 sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
 # Connect the socket to the server 
 server_address = (host, port) 
 print (""Connecting to %s port %s"" % server_address) 
 sock.connect(server_address) 
 # Send data 
 try: 
     # Send data 
     message = ""Teste de conexao remota CentralBR"" 
     print (""Sending %s"" % message) 
     sock.sendall(message.encode(""utf-8"")) 
     # Look for the response 
     amount_received = 0 
     amount_expected = len(message) 
     while amount_received < amount_expected: 
         data = sock.recv(64) 
         amount_received += len(data) 
         print (""Received: %s"" % data) 
 except socket.error as e: 
     print (""Socket error: %s"" %str(e)) 
 except Exception as e: 
     print (""Other exception: %s"" %str(e)) 
 finally: 
     print (""Closing connection to the server"") 
     sock.close() 

client()

Neste caso, meu server.py recebe b'Teste de conexao remota CentralBR'
","
O que está vendo de estranho nessas strings é a representação de Bytes Objects no Python. O Python tem essa representação com strings e está bem explicado neste post em inglês no próprio Stack Overflow.
A documentação também pode ajudar a entender como o Python representa esses bytes usando apenas caracteres ASCII.
Para converter os bytes para string (em Python 3) você pode usar o método decode:
byte_string = b'my byte string'
# ""encoding"" pode ter outros valores para conversão, como 'latin-1'. Depende do que quer converter.
decoded_string = byte_string.decode(encoding=""utf-8"")
print(decoded_string)

A saída do código acima seria:
my_byte_string

","
            0
        ",,,"['\npython', 'socket\n']"
527127,Existe alguma forma de fixar o IP dos Notebooks do Google Colab?,"
Sou Analista de Dados de uma empresa, e minha principal ferramenta de trabalho hoje é o Python... Como a empresa ainda está em fase de crescimento eu realizava grande parte das análises localmente, porém com o tempo fui levando meus códigos para os Notebooks do Google Colab para que outros membros da equipe pudessem ter acesso.
Minha fonte de dados é um DataLake do Mongodb que eu acesso via Pymongo, para isso o meu IP foi adicionado na lista de permissões.. O problema é que ao rodar os meus códigos nos Notebooks da Google eu percebi que esse IP vai sendo alterado com o tempo, e toda a praticidade que me motivou a colocar meus códigos online foi perdida.
Sabem se existe alguma forma de contornar esse problema?
","
Não. O google colabs é um serviço online e gratuito - e eles só podem oferecer isso justamente pela facilidade que é criar containers que se comportam como máquinas virtuais na nuvem.
O que voc^Çe pdoe fazer é contratar uma máquina na nuvem (pode ser no google, amazon, digital ocean, ou outro provedor de sua preferência), contratar o recurso de IP fixo (bem mais comum nesses casos, acho até que ainda é o padrão) e subir uma instância do Jupyter notebook -
A maior dificuldade aí é o contrário: impedir que qualquer um possa acessar o seu notebook - o que dá pra fazer com regras de firewall na máquina virtual (ruim, aí depende de você ter uma faixa de IPs fixos em casa), ou usar ssh + redirecionamento de portas para acessar o jupyter em sua instância privada (bom).
A grande vantagem dessa abordagem é poder passar código mais estruturado do seu notebook para arquivos Python puro, que aí podem ser colocados em controle de versão, podem ser testados com testes unitários, não precisam expor credênciais de conexão ao banco de dados externo aos usuários do notebook, e várias outras coisas.
","
            2
        ",,,"['\npython', 'mongodb', 'google', 'ip\n']"
527116,Duvida com uso de listas em python,"
Queria fazer um programa para sortear 2 times de 10 jogadores cada e que não repetisse nenhum dos jogadores nos times. Só consegui fazer isso até agora porém os jogadores se repetem.
import random

top1 = str(input(""Player 1: ""))
top2 = str(input(""Player 2: ""))
jg1 = str(input(""Player 3: ""))
jg2 = str(input(""Player 4: ""))
mid1 = str(input(""Player 5: ""))
mid2 = str(input(""Player 6: ""))
adc1 = str(input(""Player 7: ""))
adc2 = str(input(""Player 8: ""))
sup1 = str(input(""Player 9: ""))
sup2 = str(input(""Player 10: ""))

times = [top1, top2, jg1, jg2, mid1, mid2, adc1, adc2, sup1, sup2]
random.shuffle(times)

time1 = random.sample(times, 5)
time2 = random.sample(times, 5)
print(""O primeiro time é {}"".format(time1))
print(""O Segundo time é {}"".format(time2))

","
A Solução comentada do Woss é uma boa saida para o seu problema, porem pode acontecer de entrar jg1 e jg2 no mesmo grupo do time caso isso não seja um problema a solução de pegando os 5 primeiros e depois os 5 ultimos já é resolve o problema, mas caso precise que  apenas 1 pessoa do mesmo tipo permaneça no time então não vai atender, oque é possivel de fazer é atribuir aleatoriamente os valores em pares do mesmo grupo assim cada time tem 1 respectivo membro correto.
Exemplo de código com suas saidas
import random

top1 =  ""t1""
top2 =  ""t2""
jg1 =   ""j1""
jg2 =   ""j2""
mid1 =  ""m1""
mid2 =  ""m2""
adc1 =  ""a1""
adc2 =  ""a2""
sup1 =  ""s1""
sup2 =  ""s2""

times = [top1, top2, jg1, jg2, mid1, mid2, adc1, adc2, sup1, sup2]
random.shuffle(times)

time1 = times[:5]
time2 = times[5:10]
print(""O primeiro time é {}"".format(time1))
print(""O Segundo time é {}"".format(time2))
#Saida
# O primeiro time é ['s1', 'a1', 't2', 'a2', 't1']
# O Segundo time é ['m2', 'j2', 'm1', 'j1', 's2']


top = [top1,top2]
jg = [jg1,jg2]
mid = [mid1,mid2]
adc = [adc1,adc2]
sup = [sup1,sup2]

time_1 = []
time_2 = []
for item in [top,jg,mid,sup]:
  roll = random.randint(0,1)
  
  time_1.append(item[roll])
  time_2.append(item[(roll+1 if roll == 0 else roll-1)])

print(time_1,  ""Time 1"")
print(time_2,  ""Time 2"")
#Saida
# ['t1', 'j2', 'm2', 's2'] Time 1
# ['t2', 'j1', 'm1', 's1'] Time 2





","
            0
        ",,,"['\npython', 'lista\n']"
527080,como fazer uma busca equivalente a count com group by no pymongo,"
tenho uma collection mais ou menos assim:
[{""cidade"": ""São Paulo"", ""uf"": ""SP""},
{""cidade"": ""Campinas"", ""uf"": ""SP""},
{""cidade"": ""são lourenço"", ""uf"": ""MG""}]

E quero fazer uma busca usando pymongo equivalente a:
select uf, count(*) as qtd from cidades group by uf

","
Com base em meus testes e nos comentários da comunidade uma forma de realizar essa busca é:
db.cidades.aggregate([{""$group"": {""_id"": ""$uf"", ""qtd"": {""$sum"": 1}}}])

O resultado obtido foi:
{'_id': 'SP', 'qtd': 2}
{'_id': 'MG', 'qtd': 1}

Isso já atende a minha necessidade.
","
            1
        ",,,"['\npython', 'select', 'mongodb', 'pymongo\n']"
527036,"Converter em bitmap monocromático com PIL, python","
Estou gerando uma imagem utilizando PIL, mas preciso salvar a imagem em bmp monocromático.
Gostaria de saber se existe alguma função que possa ajudar nessa conversão deixando as letras mais legíveis, com contornos mais suaves, conforme Imagem 2.
Atualmente estou utilizando uma função lambda para converter para monocromático, pois assim eu posso definir qual o grau de cinza vira preto e qual vira branco, conseguindo definir um pouco melhor o contorno das letras, mas ainda assim deixando-as com aspecto meio ""quadrado"".
Já tentei também substituir o parâmetro paleta por ""1"", mas assim as letras ficam com definição pior do que quando aplicada a função lambda.
Segue abaixo o código que estou utilizando com a imagem gerada em Imagem 1
from PIL import ImageFont
from PIL import Image
from PIL import ImageDraw

branco = (255, 255, 255)
preto = (0, 0, 0)
paleta = ""RGB""

img = Image.new(paleta, (680, 340), branco)
draw = ImageDraw.Draw(img)
draw.multiline_text((10, 210),
                    ""ABCDEFGHIJ K L \n""
                    ""AAAAAAAAAAAAAAAAAAAA \n""
                    ""Rua ab cdefghij, 999 - CEP: 88881-000 \n""
                    ""abcdee abcdefghijkalmnopq abcdef – mnopqr – XX – Brasil \n""
                    ""Email: abcdefghij@email.com.br \n""
                    ""Res. téc.: joão da silva silda – CREA/XX 000000-0 \n""
                    ""Aaaaaaaaaaa bb ccccccccccccc DDDDDD: 0.00.000-0 \n""
                    r""AAA. :;\/?@#$*():"",
                    preto,
                    font=ImageFont.truetype(""Fontes\\UniversCondensed.ttf"", 14),
                    spacing=1)

draw.rectangle([(5, 208), (355, 335)], fill=None, outline=preto, width=2)

draw.text((5, 5), 'AAAAA', preto, font=ImageFont.truetype(""Fontes\\arialbold.ttf"", 20))
draw.text((5, 30), 'EEEeeeeeeee vvvvvvvv', preto, font=ImageFont.truetype(""Fontes\\arial.ttf"", 16))
draw.text((5, 51), 'Mmmmmm:', preto, font=ImageFont.truetype(""Fontes\\arialbold.ttf"", 20))

img = img.convert('L', dither=None, palette=Image.ADAPTIVE, colors=2).point(lambda k: 255 if k > 135 else 0, mode='1')


Imagem 1 em bmp monocromático.

Imagem 2 sem aplicação da função lambda, apenas em tons de cinza, não sendo considerado monocromático.
",,,,,"['\npython', 'pillow\n']"
526912,como fazer uma classe não criar um objeto automaticamente em python,"
eu tenho um código
import tkinter as tk
window=tk.Tk()
class exampleClass:
    def __init__(self) -> None:
        window.mainloop()
        pass

mas eu não quero que essa classe seja criada.
o python ele cria a classe mesmo sem ter definido ela.
isso serve tipo pra fazer uma classe que contem funções exemplo.
class mathf:
    def getFileTxt(src=""""):
        f=open(src,""r+"")
        f.seek(0)
        txt=f.read()
        txt=txt.strip(""\n"")
        txt=txt.replace(""\n"","""")
        f.close()
        return txt
print(mathf.getFileTxt(""testeFile.txt""))

só que eu não quero isso . pq se não da erro no meu código
pq eu tenho uma classe que tem varias variáveis, que só podem ser acessadas quando e chamada
class Tile:
    id=""TesteTile""
    name=""""
    collidible=False
    drawEvent=""""
Tiles=[Tile()]
def getTile(id=""""):
    i=0
    while i<len(Tiles):
        if not Tiles[i].id==id:
            i+=1
        else : 
            return i
Tiles.clear()
class TileGame:
    tile=Tile()
    def __init__(self,idt=""""):
        self.tile=Tiles[getTile(idt)]

pq não existe o tile que possui esse tileId de: """".
como que eu faço pra não criar essa classe?
quando vc cria uma classe em python. o python já cria um objeto com base nessa classe. e vc pode fazer objetos com funções com isto:
class mathf:
    def getFileTxt(src=""""):
        f=open(src,""r+"")
        f.seek(0)
        txt=f.read()
        f.close()
        return txt
print(mathf.getFileTxt(""testeFile.txt""))

sem definir um objeto. mas se for assim. meu programa ele cria um erro. pq ele usa o item id para buscar um item. mas não existe um item com o tile id de """", e ele não acha e ai da o erro. pq ele crio um ItemGame
","
Eu não sei se eu entendi corretamente, mas o Python só cria um novo objeto de classe (ou de função) quando a definição da classe (ou função) é ""executada"".
Isso quer dizer que se a função ou classe estiver dentro de um if, por exemplo, o objeto de classe ou função só é criado se a condição for verdadeira. Portanto:
if False:
    class ExampleClass:
        pass

# NameError:
a = ExampleClass()

Causa NameError, por outro lado:
if True:
    class ExampleClass:
        pass

# OK:
a = ExampleClass()

Roda normalmente.
","
            0
        ",,,['\npython\n']
526904,Encontrar valores constantes de uma função implícita em python,"
Estou tentando há dias encontrar os valores das constantes Isat, Rs, Rsh e n com vários métodos de otimização da biblioteca scipy mas não obtive o sucesso.
A equação abaixo é uma equação que indica o erro nas medidas de um painel solar em relação aos dados calculados.

Os valores de Vpanel e Ipanel são os dados medidos em laboratório, então o objetivo e encontrar as constantes que citei acima dados estes dois vetores.
Eu havia encontrado os valores já, criando vetores com valores de ""chute"" e usando um método de busca linear, porém este método é muito demorado.
O código que eu estava tentando fazer para isto está abaixo:
from scipy import optimize
import numpy as np

q = 1.9*pow(10, -19)
k = 1.38*pow(10, -23)
T = 303
Isc = 0.00298
Vt = k*T/q

Vpanel = [0,0.218, 0.421, 0.635, 0.856, 1.064, 1.288, 1.477, 1.650, 1.780, 1.821, 1.846, 
1.867, 1.893, 1.901, 1.922, 1.927, 1.952, 1.966, 1.973, 1.981, 1.985, 1.994, 1.997, 2.008]
Ipanel = [0.0030, 0.0030, 0.0030, 0.0030, 0.0029, 0.0029, 0.0028, 0.0028, 0.0025, 0.0021, 
0.0019, 0.0017, 0.0015, 0.0013, 0.0012, 0.0010, 0.0009, 0.0007, 0.0005, 0.0005, 0.0003, 
0.0003, 0.0002, 0.0002, 0]

initial_guess = [10, 1000, 1, pow(10,-20)]

for i in range(len(Vpanel)):
    def f(params):
        Rs, Rp, n, Isat = params 
        return Isc - Isat*(np.exp((Rs*Ipanel[i]+Vpanel[i])/(n*Vt))-1) - (Rs*Ipanel[i] + 
    Vpanel[i])/Rp - Ipanel[i] 
    root = optimize.newton(f, initial_guess)
    print(root)

Eu sei que o método de newton não e o melhor para essa situação, mas e o único que não retorna um erro ao compilar.
A minha questão é: Como eu consigo encontrar os valores das constantes utilizado um método de otimização?
Eu até pensei em usar busca binária para tentar melhorar o outro código com a busca linear, mas não sei como fazer isso com vários vetores, ainda mais quando preciso testar todos os valores até encontrar a combinação que tem como resultado o menor erro.
",,,,,"['\npython', 'matemática', 'otimização', 'scipy\n']"
526871,Executar comandos do FFMPEG de forma assíncrona em Python,"
import os
import asyncio

async def encodarTodos(crf1080, crf720, crf480):
    for ArquivosMP4original in os.listdir(""D:\!Encode\!!Polaris""):
        if ArquivosMP4original.endswith('.mp4'):
            comandomp1080pRAW = ""ffmpeg -i "" + fr'""D:\!Encode\!!Polaris\{ArquivosMP4original}' + f'"" -c:v libx264 -pix_fmt yuv420p -crf {crf1080} -profile:v high -tune animation,fastdecode -level:v 3.1 -acodec copy -movflags +faststart ' + fr'""D:\!Encode\\!!Polaris\\1080p\{ArquivosMP4original}""'
            comandomp4720pRAW = ""ffmpeg -i "" + fr'""D:\!Encode\!!Polaris\{ArquivosMP4original}' + f'"" -c:v libx264 -pix_fmt yuv420p -filter:v scale=1280:-2 -crf {crf720} -profile:v high -tune animation,fastdecode -level:v 3.1 -acodec copy -movflags +faststart ' + fr'""D:\!Encode\\!!Polaris\\720p\{ArquivosMP4original}""'
            comandomp4480pRAW = ""ffmpeg -i "" + fr'""D:\!Encode\!!Polaris\{ArquivosMP4original}' + f'"" -c:v libx264 -pix_fmt yuv420p -filter:v scale=854:-2 -crf {crf480} -profile:v high -tune animation,fastdecode -level:v 3.1 -acodec copy -movflags +faststart ' + fr'""D:\!Encode\\!!Polaris\\480p\{ArquivosMP4original}""'
            os.system(comandomp1080pRAW)
            await asyncio.sleep(1)
            os.system(comandomp4720pRAW)
            await asyncio.sleep(1)
            os.system(comandomp4480pRAW)

asyncio.run(encodarTodos(20, 20, 20,))

Este é o código atual, minha ideia é encodar as três resoluções simultaneamente usando o ffmpeg, porém, com este código, ele está executando uma resolução apenas quando acaba a anterior. Já tentei com e sem o asyncio.sleep().
","
Básicamente, o seu programa não está escrito de forma assíncrona. O asyncio.sleep não faz muita diferença, porque as funções os.system continuam executando normalmente: uma só começa depois de que a outra termina.
Eu recomendaria dividir essa função encodarTodos em três partes, e chamar cada uma individualmente. Segue um exemplo básico:
import asyncio
import os

async def funcaoDemorada(arg, tempo):
    os.system(f""echo Imagine aqui um comando demorado para videos em resolucao {arg}..."")
    await asyncio.sleep(tempo)
    os.system(f""echo Terminei de codificar os videos em {arg}!"")

async def main():
    t480 = asyncio.create_task(funcaoDemorada(""480p"", 10))
    t720 = asyncio.create_task(funcaoDemorada(""720p"", 12))
    t1080 = asyncio.create_task(funcaoDemorada(""1080p"", 50))

    await t480
    await t720
    await t1080

    print(""Done!"")

asyncio.run(main())

","
            -2
        ",,,"['\npython', 'ffmpeg\n']"
526829,Alterar formato de data no Django para dd/mm/yy,"
Olá! Eu to tentando criar uma aplicação com Django Rest para um desafio de estágio. Mas eu me deparo com um problema que não será tolerado. Preciso que a data inserida no DateField responda ao padrão brasileiro DD/MM/YYYY, mas só consigo alterá-lo para MM/DD/YY no máximo.
Meu models da app core:
from django.db import models
from organizadores.models import Organizadore


# Create your models here.
class Evento(models.Model):
    nome = models.CharField(max_length=100)
    organizadores = models.ManyToManyField(Organizadore)
    data_inicio = models.DateField(null=False)
    data_fim = models.DateField(null=False)
    confirmado = models.BooleanField(default=False)

    def __str__(self):
        return self.nome

Settings do projeto:
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@0z5o*9z7hd6@b-=_3w!x+i)bg^0*q#q!qw258wvsp(jq(2-r$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core',
    'organizadores'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eventos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eventos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATE_INPUT_FORMATS = ['%d/%m/%Y']

Como está nas configurações, já tentei usar o DATE_INPUT_FORMATS, USE_L1ON = False e não consigo de jeito nenhum achar como editar isso. Já vi pessoas sugerindo usar DateField(widget=forms.DateInput(format = '%d/%m/%Y'), input_formats=settings.DATE_INPUT_FORMATS), mas essas kwargs não existem e apontam erro no código:
widget=forms.DateInput(format = '%d/%m/%Y'), input_formats=settings.DATE_INPUT_FORMATS
Não sei mais o que fazer, já tentei mudar a linguagem pra pt-br, en-uk e en-GB, mas em nenhum caso funciona. Alguém consegue ter uma ideia?
","
Eu não entendo de Django, mas:
TIME_ZONE = 'America/Sao_Paulo'

Em ""settings.py"" talvez resolva o seu problema.
https://docs.djangoproject.com/en/3.2/ref/settings/#std:setting-TIME_ZONE
","
            1
        ","
Tem duas formas de resolver isso:
Uma é definir o formato globalmente do date, datetime e outros no settings.py (veja a documentação):
REST_FRAMEWORK = {
    'DATE_FORMAT': ""%d/%m/%Y"",
    'DATE_INPUT_FORMATS': [""%d-%m-%Y""],
    ....
}

Ou definir especificamente no campo do serializer:
data_inicio = serializers.DateField(format=""%d/%m/%Y"", input_formats=['%d-%m-%Y', 'iso-8601'])`

","
            0
        ","['\npython', 'django', 'data', 'django-rest-framework\n']"
526740,"Não sei o que fazer, estou fazendo uma tabela de resultados para um exercicio e fala que está dando erro na linha 4 [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.




                        Melhore esta pergunta
                    



a = input ('Primeiro número: ') 
b = input ('Segundo número: ')
c = a+b
d = a-b
e = a*b
f = a**b
g = a//b
h = a%b

print('a = ' , a , '\nb = ' , b , '\na + b = ', c , '\na - b = ', d , '\na * b = ', e , '\na ** b = ', f , '\na // b = ', g , '\na % b = ' , h)

Quando eu executo e coloco os dois números, aparece a isso:

Traceback (most recent call last):
File ""C:/Users/SONY/Desktop/Python/lição 1.py"", line 4, in

d = a-b
TypeError: unsupported operand type(s) for -: 'str' and 'str'

","
Você precisa converter a entrada para algum tipo numérico. Pois o padrão é retornar string
# a função float abaixo faz a conversão de tipos
a = float(input ('Primeiro número: '))
b = float(input ('Segundo número: '))
c = a+b
d = a-b
e = a*b
f = a**b
g = a//b
h = a%b

print('a = ' , a , '\nb = ' , b , '\na + b = ', c , '\na - b = ', d , '\na * b = ', e , '\na ** b = ', f , '\na // b = ', g , '\na % b = ' , h)

","
            0
        ","
Oque está errado é que está retornando para o programa abaixo em forma de string é necessário retornar em int ou float.
#Função int() serve para converter números de string(str) para inteiros (int).

a = int(input('Primeiro número: ')) #Convertendo oque o usuario digitou de str para int
b = int(input('Segundo número: ')) #Mesmo processo de cima.
c = a+b
d = a-b
e = a*b
f = a**b
g = a//b
h = a%b

print(f'A = {a} B = {b} \nA + B = {c}; \nA - B = {d}; \nA.B = {e}; \nA^B = {f}; \nA // B = {g}; \nA / B = {h}')

","
            -3
        ",['\npython\n']
526718,Qual método da tkinter.Entry é responsável por setar o valor da textvariable?,"
Eu criei a seguinte CustomEntry para poder implementar um placeholder:
class CustomEntry(tk.Entry):
    def __init__(self, master=None, placeholder="""", cnf={}, fg=""black"",
        fg_placeholder=""grey50"", *args, **kw):
        super().__init__(master=None, cnf={}, bg=""white"", *args, **kw)
        self.fg = fg
        self.fg_placeholder = fg_placeholder
        self.placeholder = placeholder
        self.bind(""<FocusOut>"", lambda event: self.fill_placeholder())
        self.bind(""<FocusIn>"", lambda event: self.clear_box())
        self.fill_placeholder()

    def clear_box(self):
        if not self.get() and super().get():
            self.config(fg=self.fg)
            self.delete(0, tk.END)

    def fill_placeholder(self):
        if not super().get():
            self.config(fg=self.fg_placeholder)
            self.insert(0, self.placeholder)

    def get(self):
        content = super().get()
        if content == self.placeholder:
            return """"
        return content

Mas quando especifico uma textvariable e recupero o valor dela recebo meu placeholder como valor, gostaria de saber qual método da Entry está associado ao atributo textvariable para que eu possa sobrescrever o método e evitar que isso aconteça.
","
Consegui resolver o problema usando a própria textvariable passada para classe, usando o evento  para chamar um método que seta a variável como string vazia caso não haja nenhuma entrada de texto:
class CustomEntry(tk.Entry):
    def __init__(self, master=None, placeholder="""", textvariable=None, cnf={}, fg=""black"",
        fg_placeholder=""grey50"", *args, **kw):
        super().__init__(master, cnf={}, bg=""white"", *args, **kw)
        self.fg = fg
        self.fg_placeholder = fg_placeholder
        self.placeholder = placeholder
        self.textvariable = textvariable
        self.bind(""<FocusOut>"", lambda event: self.fill_placeholder())
        self.bind(""<FocusIn>"", lambda event: self.clear_box())
        self.bind(""<Leave>"", lambda event: self.set_textvariable())
        self.bind(""<Key>"", lambda event: self.validate())
        self.fill_placeholder()

    def set_textvariable(self):
        if self.get() != self.placeholder:
            self.textvariable.set(self.get())
        else:
            self.textvariable.set("""")

    def clear_box(self):
        if not self.get() and super().get():
            self.config(fg=self.fg)
            self.delete(0, tk.END)

    def fill_placeholder(self):
        if not super().get() and self.placeholder != """":
            self.config(fg=self.fg_placeholder)
            self.insert(0, self.placeholder)

    def get(self):
        content = super().get()
        if content == self.placeholder:
            return """"
        return content

","
            0
        ",,,"['\npython', 'tkinter\n']"
526675,Erro de lógica ao remover itens repetidos de uma lista [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Remover inteiros repetidos lista em Python

                                (2 respostas)
                            

Fechada há 7 meses.



Estou fazendo um exercício onde devo criar uma função que remove itens repetidos de uma lista e retorna essa lista ordenada.
Meu código remove apenas alguns itens repetidos, mas deixa outros. Eu sei que existem outras soluções sem o uso do del, mas estou curioso sobre o que estou errando aqui, também aceito dicas que não envolvam a solução pro exercício.
Segue o código:
def remove_repetidos(lista):

    for itens in lista:
        if lista.count(itens) == 1:
            continue
        lista.remove(itens)

    return sorted(lista)

Caso eu coloque [7,3,33,12,3,3,3,7,12,100] como parâmetro ela devolve [3, 3, 3, 7, 12, 33, 100].
","
O problema é que o seu código modifica a lista dentro do for in. Você pode ver isso colocando um print dentro do loop.
>>> lista = [7,3,33,12,3,3,3,7,12,100]
>>> for itens in lista:
...     print(itens)
...     if lista.count(itens) == 1:
...         continue
...     lista.remove(itens)
... 
7
33
12
3
7
12
100

Em teoria deveríamos ver todos os itens no console, mas não é o que acontece.
Ao invés de usar a mesma lista, você pode criar uma nova:
>>> lista = [7,3,33,12,3,3,3,7,12,100]
>>> nova_lista = []
>>> for item in lista:
...     if not item in nova_lista:
...         nova_lista.append(item)
... 
>>> nova_lista
[7, 3, 33, 12, 100]

Ou simplesmente usar o set do Python:
>>> sorted(set([7,3,33,12,3,3,3,7,12,100]))
[3, 7, 12, 33, 100]

","
            5
        ",,,"['\npython', 'lista\n']"
526569,Como instalar módulos de um projeto Python com Flask?,"
Eu estou acostumado a trabalhar com JavaScript, e já é comum baixar um projeto do GitHub e executar o comando yarn para baixar todos os módulos que aquele projeto usa para que eu possa executar o projeto.
Porém, resolvi mexer com Flask e não estou entendendo como a instalação dos módulos funciona. O Flask também trabalha com módulos instalados como o flask e o flask-restplus, e quando eu envio meu código em Flask para o GitHub, nenhum dos módulos baixados são enviados. Até aí tudo bem, mas quando eu baixo o repositório em outro local, eu não sei como reinstalar os módulos utilizados naquele projeto.
Tem alguma maneira de reinstalar esses módulos ou eu teria que reinstalar um por um e criar uma nova venv local?
","
Você deve instalar as dependências utilizando o pip (python index packages).
Em geral (isto é uma convenção) as dependências estão listadas em um arquivo, com o nome:
requirements.txt

Que também por convenção se localiza na raiz do projeto.
Desta forma ao baixar um projeto para instalar as dependências basta executar o comando:
pip install requirements.txt

Essas convenções não fazem parte de nenhuma pep específica, mas estão documentadas no guia do mochileiro python
Executando o comando acima, as dependências serão instaladas, fazendo com que você possa iniciar a aplicação.
Boas práticas relacionadas à criação de um novo ambiente
Ao clonar o projeto o ideal é usar o virtualenv para criar um novo ambiente limpo (sem dependências externas) e a partir deste ambiente proceder para a instalação das dependências.
Criar o virtualenv
Para criar o ambiente virtual eu utilizo o programa virtualenv. Executando o seguinte comando:
virtualenv venv -p $(which python3)

Este comando vai criar um diretório de nome venv (pode escolher o nome) na pasta em que foi executado, neste caso o diretório em que estou (cwd) que utilizando  os binários do python3.
Obs: a partir da versão do python3.3 foi incluído um mecanismo para criação de ambientes virtuais incorporado ao próprio Python3. Se este for o caso não precisa ter o virtualenv instalado e para criar o ambiente virtual, basta executar o comando:
python3 -m venv </caminho/para/novo/ambiente/virtual>

Mais informações podem ser encontradas na PEP 405
Ativando o virtualenv
Para ativar o ambiente virtual, utilizando o terminal (bash, sh), devemos executar o comando:
source venv/bin/activate #para linux
#para Windows é necessário executar scripts/activate.bat

Após ativar o ambiente virtual podemos proceder para a instalação das dependências.
Em ambientes baseados em Linux um indicativo de que o ambiente virtual está ativo é que na linha de execução do shell aparece o nome do ambiente entre parêntesis.
Como no exemplo:
(venv) user@ubuntu:~$ #<-- virtualenv ativo
user@ubuntu:~$ #<-- virtualenv não está ativo, isso é o shell padrão.

Instalando as depedências
Após ativar o virtualenv agora basta instalar as dependências, com o comando:
pip install -r requirements.txt

Resumo

clonar o projeto:
git clone <endereço do projeto em algum repositório>

Entrar na pasta do projeto clonado

Criar o ambiente virtual:
virtualenv venv -p $(which python3)

ativar o ambiente virtual:
source venv bin/activate

instalar as dependências:
pip install -r requirements.txt


","
            0
        ",,,"['\npython', 'flask\n']"
526539,Python Pandas - Inserir itens de lista em ordem numa coluna,"
Esse é o tipo de dúvida que fica difícil até de explicar, mas vamos tentar.
Segue o código:
data = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['bananaAAA','bananaBBB','bananaCCC','bananaDDD','bananaEEE']}
base_dados = pd.DataFrame(data)
display(base_Dados)

    Id  Fruta
0   01  bananaAAA
1   02  bananaBBB
2   03  bananaCCC
3   04  bananaDDD
4   05  bananaEEE

Esta é o dataframe, como vocês podem ver, depois de toda ""banana"" possui um tipo de codigo, exemplo: AAA, BBB, CCC... Pois bem, eu peguei apenas apenas esses pontos desses itens no codigo abaixo.
for fruta in base_dados['Fruta']:
    fruta = fruta[6:9]
    print(fruta)

AAA
BBB
CCC
DDD
EEE

Até ai tudo bem, mas eu gostaria de inserir uma nova coluna no dataframe(base_dados) com essas informações da string, como no código abaixo
base_dados.insert(2, 'tipo', fruta)
display(base_dados)
    Id  Fruta   tipo
0   01  bananaAAA   EEE
1   02  bananaBBB   EEE
2   03  bananaCCC   EEE
3   04  bananaDDD   EEE
4   05  bananaEEE   EEE

Porém como foi visto, os itens não são inseridos em ordem.
Eis um exemplo de como eu queria:
    Id  Fruta   tipo
0   01  bananaAAA   AAA
1   02  bananaBBB   BBB
2   03  bananaCCC   CCC
3   04  bananaDDD   DDD
4   05  bananaEEE   EEE

","
Para fazer isto você deve criar outra coluna no datraframe e utilizar o método .apply() para aplicar uma fórmula para cada linha.
O código para criar a coluna de ""tipo"" fica assim:
base_dados['tipo'] = base_dados['Fruta'].apply(lambda x: x[6:9])

Resultado:





Id
Fruta
tipo




0
01
bananaAAA
AAA


1
02
bananaBBB
BBB


2
03
bananaCCC
CCC


3
04
bananaDDD
DDD


4
05
bananaEEE
EEE




O seu erro aconteceu porque você estava redefinindo a variável fruta e aplicando novamente para todas as colunas.
","
            0
        ",,,"['\npython', 'python-3.x', 'pandas\n']"
526529,Python Pandas - Condicional string parcial dataframe,"
Estou com uma seguinte situação:
Possuo um dataframe:
data = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Fruta
0   01  Maçã
1   02  Abacaxi
2   03  Banana
3   04  Laranja
4   05  Morango

Preciso procurar inserir uma condicional de uma string parcial.. Tipo
if 'Abac' in base_dados['Fruta']: #encontrou o abacaxi
    print('Encontrou o Abacaxi em uma coluna de dataframe pela parcial de uma string')


","
Primeiro você precisa percorrer os itens da coluna e após isso verificar se existe a string no texto, assim:
for i in base_dados['Fruta']:
  if 'Abac' in i:
    print('Encontrou o Abacaxi em uma coluna de dataframe pela parcial de uma string')

","
            1
        ",,,"['\npython', 'python-3.x', 'pandas\n']"
526489,"Tratando excessões ""StaleElementReferenceException"" do Selenium em Python","
Estou desenvolvendo uma automação web para inserir uma lista de números em um campo na plataforma de um site e clicar recorrentemente dentro de um laço ""for"" n vezes de acordo com a dimensão da lista. A princípio o código estava certo e fazendo a consulta com o loop nesta forma:
for i in range(0, len(unique)):  
    driver.find_element_by_xpath('//*[@id=""cph_j0_j1_UcEmpregador1_E_COD_CAMPO""]').clear() #Limpa campo
    ActionChains(driver).move_to_element(driver.find_element_by_xpath('//*[@id=""cph_j0_j1_UcEmpregador1_E_COD_CAMPO""]')).click().perform() # Seleciona campo
    driver.find_element_by_xpath('//*[@id=""cph_j0_j1_UcEmpregador1_E_COD_CAMPO""]').send_keys(unique[i]) # digita valor da lista
    driver.find_element_by_link_text('Consultar').click()
    ActionChains(driver).move_to_element(driver.find_element_by_link_text('Consultar')).click().perform()
    rand_time()

    if (driver.find_element_by_xpath('//*[@id=""cph_j0_j1_GRADITIVO""]/tbody/tr/td').text) != 'Nenhum registro encontrado!':
        convenio_update.append(unique[i])

Porém, no momento de alguma das iterações, aleatoriamente, o programa é interrompido pela mensagem: ""StaleElementeReferenceException: stale element reference: is not attached to the page document""
Pesquisando sobre a exceção, a melhor maneira que consegui tentar tratá-la, sem sucesso, foi com o seguinte código:
for i in range(0, len(unique)):
element_1 = driver.find_element_by_xpath('//*[@id=""cph_j0_j1_UcEmpregador1_E_COD_CAMPO""]')
element_2 = driver.find_element_by_link_text('Consultar') 
try:
    element_1.clear() #Limpa campo
    ActionChains(driver).move_to_element(element_1).click().perform() # Seleciona campo
    element_1.send_keys(unique[i]) # digita valor da lista
    
    element_2.click()
    ActionChains(driver).move_to_element(element_2).click().perform()
    
    rand_time()
    
except NoSuchElementException:
    pass
    
except StaleElementReferenceException: #wait para os dois elementos
    element_1 = driver.find_element_by_xpath('//*[@id=""cph_j0_j1_UcEmpregador1_E_COD_CAMPO""]')
    element_2 = driver.find_element_by_link_text('Consultar')
    
    element_1.clear() #Limpa campo
    ActionChains(driver).move_to_element(element_1).click().perform() # Seleciona campo
    element_1.send_keys(unique[i])
    
    element_2.click()
    ActionChains(driver).move_to_element(element_2).click().perform()
    
    rand_time()
   
finally:
    if (driver.find_element_by_xpath('//*[@id=""cph_j0_j1_GRADITIVO""]/tbody/tr/td').text) != 'Nenhum registro encontrado!':
        convenio_update.append(unique[i])            

Alguém saberia me apontar o erro caso o programa esteja no caminho ou possui alguma outra melhor alternativa?
OBS: importei os seguintes modulos
    # IMPORTANDO BIBLIOTECAS
import pandas as pd
import random
from selenium import webdriver
from selenium.common.exceptions import StaleElementReferenceException, NoSuchElementException
#from   selenium.webdriver.common.by            import By
#from   selenium.webdriver.support.ui           import WebDriverWait
#from   selenium.webdriver.support              import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
import time

OBRIGADO!!!
",,,,,"['\npython', 'selenium', 'exceção', 'selenium-webdriver\n']"
526447,Estou tendo um Erro TypeError: '_io.TextIOWrapper' object is not subscriptable,"
import json

def abrir():
  with open('estoque.txt', 'w+') as nome:
    nomez = str (input('Digite Nome do Produto: '))
    Quant = int (input('Digite Quantidade do produto: '))
    PC = float (input('Digite o Preço de Custo: '))
    PV =  float (input('Digite o Preço de Venda: '))
    
  
    L = [f'{nomez},{Quant}, {PC}, {PV}']
    json.dumps(L)
    nome.write(f'{L}')
def ler(nome):

    with open('estoque.txt', 'rt') as nome:
        print(nome.read())


def alterar(nome):
    with open('estoque.txt', 'r+') as nome:
     print(nome.readlines())
     print(nome[1]) 


#Quero mostra só um item dentro do arquivo não todos

resp = int (input('Digita ae: '))
if resp == 1:
  ler(ler)
elif resp == 2:
  abrir()
elif resp == 3:
  alterar(alterar)

","
Me parece que o que está causando o erro é a última linha de sua função ""alterar"", onde você está tratando um objeto de arquivo (nome) como se ele fosse um objeto ""indexável"":
print(nome[1])

Quando você executa a linha anterior:
print(nome.readlines())

Uma lista contendo todas as linhas do arquivo é impressa. Supondo que você queira imprimir apenas a primeira linha (que seria a linha 0, e não a linha 1), você pode conseguir isso simplesmente apagando o ""s"" em ""readlines"" de maneira que apenas a primeira linha seja lida. Ou seja, em vez de:
print(nome.readlines())

Deveria ser:
print(nome.readline())

Dito isso, se você não quer imprimir a primeira linha (linha 0), e sim alguma outra linha específica, como a segunda linha (linha 1), seguindo mais ou menos a sua lógica, você poderia fazer algo como:
# Crie uma referência para a lista contendo as linhas:
linhas = nome.readlines()

# Acesse a linha específica:
print(linhas[1])

# Obs: A função print anterior pode causar IndexError se a linha
# especificada não existir, e pode parecer não imprimir nada, se a
# linha especificada só contiver caracteres em branco ou estiver vazia.

Dito todas essas coisas, o seu código parece ter muitos outros problemas... A importação de json que não é usada para nada, a instrução json.dumps(L) que só causa algum efeito no modo iterativo, funções e variáveis com o mesmo nome, parâmetros e variáveis com o mesmo nome, etc.
Me parece que você está tentando resolver um problema específico sem muito conhecimento básico da linguagem. Se for isso, você escolheu a linguagem certa! Python é ótima para esse tipo de coisas! Mesmo assim, sugiro que você aprenda um pouco mais do básico da linguagem para conseguir trabalhar melhor no problema. O próprio site oficial da linguagem (https://www.python.org) possui vários recursos didáticos interessantes, caso esteja interessado.
","
            1
        ",,,['\npython\n']
526400,Retornar linhas de um dataframe que não constam em outro dataframe,"
Basicamente, tenho um DataFrame(Base de dados) que contem todos os dados cadastrado no meu sistema:
data = {""Id"": [""01"", ""02"", ""03"", ""04"",'05'],""Fruta"": ['Maçã','Abacaxi','Banana','Laranja','Morango']}
base_dados = pd.DataFrame(data)
display(base_dados)

    Id  Fruta
0   01  Maçã
1   02  Abacaxi
2   03  Banana
3   04  Laranja
4   05  Morango

E possuo outro DataFrame(Producao) com os itens produzidos que contém itens que já consta no banco, como itens novos que não consta lá, no exemplo citei a Melancia e o Melão.
data = {""Id"": [""01"", ""03"",'05','06','07'],""Fruta"": ['Maçã','Banana','Morango','Melancia','Melao']}
producao = pd.DataFrame(data)
display(producao)

    Id  Fruta
0   01  Maçã
1   03  Banana
2   05  Morango
3   06  Melancia
4   07  Melao 

O que eu preciso, é captar no python atraves do pandas, captar apenas os itens que não consta na base de dados ainda para que eu possa estar fazendo o tratamento dele no futuro.
Exemplo do resulto esperado:
    Id  Fruta
0   06  Melancia
1   07  Melao

","
Você pode fazer isso da seguinte forma:
producao.loc[~producao['Id'].isin(base_dados['Id'])].reset_index(drop=True)

output do código acima:
   Id     Fruta
0  06  Melancia
1  07     Melao

Em resumo: a expressão producao['Id'].isin(base_dados['Id']) retorna uma coluna booleana de todos os Ids da tabela producao que constam na coluna Id da tabela base_dados. Como queremos os Ids que NÃO constam na tabela base_dados, usamos o operador ~ para inverter os valores booleanos da coluna.
Aí é só passar essa coluna para produção.loc. O reset_index eu fiz apenas para que o índice do DataFrame resultante seja igual ao seu exemplo de output esperado.
","
            2
        ","
Você pode utilizar o seguinte código:
base_dados2 = base_dados[[""Id"",""Fruta""]].where(base_dados[""Id""]==""01"").dropna()

Resumindo: o dataframe base_dados2 recebe as colunas ""Id"" e ""Fruta"" do dataframe base_dados onde tem apenas a condição que você deseja, no caso onde o ""Id"" é igual a ""01"" e o dropna() no final serve para a base_dados2 receber apenas os valores que satisfação a condição.
","
            1
        ","['\npython', 'python-3.x', 'pandas', 'dataframe\n']"
526395,Como voltar para dentro do while,"
Tenho um código de uma dungeon, em que o usuário pode escolher o caminho 1 ou o caminho 2, cada caminho leva a uma sala. Caso ele chegue a sala 8 preciso que um valor entre 1 a 5 seja sorteado e o faça voltar a sala respectiva a este valor. (Não posso usar mais de um if, elif ou else dentro do meu laço)
from random import randrange

import os

os.system('CLS')

tentativas = 1

sala = 1


while tentativas <= 7 and sala <= 7 and sala:

    print(""Você está na sala: {}\nEscolha seu caminho"".format(sala))

    print(""[1] - Caminho Vermelho\n[2] - Caminho Preto"")

    escolha = int(input())

    if escolha == 1:
        sala += 1
    elif escolha == 2:
        sala += 2
    else:
        (""Não existe esse caminho!"")
    os.system('CLS')
    tentativas += 1


if tentativas >= 7:

    print(""Você gastou todos seus recursos, não há mais saidas, você e seus companheiros morreram"")

elif sala == 9:

    print(""Você está na sala: {}\nVocê venceu!!"".format(sala))

elif sala == 8:

    sala = input(randrange(1, 5))

gostaria de uma solução em que ao gerar o randrange meu código voltasse para dentro do loop.
","
Você pode transformar o while em uma função assim pode chamar ele quando quiser sem precisar ficar copiando e colando o mesmo código em diversos lugares, eu atualizei o seu código baseado no que eu entendi da sua questão, se não for exatamente o que você queria ou não entendeu algo do código é só falar que a gente da uma olhada.
from random import randrange

import os

def dungeon(tentativas, sala): # Esse código recebe como parametro a quantidade atual de tentativas e o numero da sala
    # Sempre que essa função for chamada ela realiza esse while
    while tentativas <= 7 and sala <= 7 and sala:

        print(""Você está na sala: {}\nEscolha seu caminho"".format(sala))

        print(""[1] - Caminho Vermelho\n[2] - Caminho Preto"")

        escolha = int(input())

        if escolha == 1:
            sala += 1
        elif escolha == 2:
            sala += 2
        else:
            (""Não existe esse caminho!"")
        os.system('CLS')
        tentativas += 1
    
    # Após o while ser realizado ele retorna para os valores de tentativas e sala
    return tentativas, sala

os.system('CLS')

tentativas = 1
sala = 1

tentativas, sala = dungeon(tentativas, sala)

if tentativas >= 7:

    print(""Você gastou todos seus recursos, não há mais saidas, você e seus companheiros morreram"")

elif sala == 9:

    print(""Você está na sala: {}\nVocê venceu!!"".format(sala))

elif sala == 8:

    sala = randrange(1, 5)

    tentativas = 1
    tentativas, sala = dungeon(tentativas, sala)

","
            1
        ",,,"['\npython', 'while\n']"
525383,Como habilitar extensões do firefox no selenium?,"
Eu instalei uma extensão no firefox mas quando o selenium abre o firefox ele inicia sem a extensão, existe alguma forma de o selenium iniciar o firefox com a extensão que está instalada ou fazer ele ""instalar"" a extensão ao iniciar?
Estou usando a biblioteca selenium para python
options = Options()
self.browser = webdriver.Firefox(options=options)
url = 'https://www.google.com.br/'
self.browser.get(url.lower())

","
você pode usar options
aqui está a documentação necessária.
https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/firefox.html
","
            1
        ","
Consegui descobrir, para adicionar uma extensão firefox no selenium em python é assim:
options = Options()
browser = webdriver.Firefox(options=options)   
browser.install_addon('caminho do arquivo .xpi')
browser.get('...')

","
            1
        ","['\npython', 'selenium', 'firefox', 'extensão', 'webdriver\n']"
525349,Como utilizar uma variável de um função X em uma função Y em Python?,"
Sou estudante do primeiro período de Eng. da Computação es estou tendo alguns problemas para entender como conseguiria (se for possível) utilizar a variável de uma função dentro de outra, as duas sendo executadas dentro de uma terceira função.
O problema é simples (e eu já consegui fazê-lo funcionar de forma mais rústica), tenho que criar um programa básico para calcular uma fórmula de Bhaskara e informar delta, raízes, etc. No entanto gostaria de criar uma função para lidar com delta, uma para lidar com as raízes e tudo dentro de uma função Main.
'''
def delta_res (a, b, c):
  delta = b ** 2 - 4 * a * c
  print(""\nDelta é igual a"", delta,)

def bhaskara_res (a, b, c):
  if delta < 0:
    print(""\nA equação não tem raízes.\n"")
  elif delta == 0:
    print(""\nA equação tem apenas uma raíz.\n"")
    x1 = (-b + delta ** 0.5) / (2 * a)
  else:
    print(""\nA equação tem duas raízes.\n"")
    x1 = (b + delta ** 0.5) / (2 * a)
    x2 = (b - delta ** 0.5) / (2 * a)
    print(""As raízes da equação são"",x1 , ""e"", x2,""\n"")

def main (a, b, c):
  if a == 0:
    print(""\nSe 'a' é igual a 0, a equação não é de segundo grau.\n"")
    return
  delta_res (a, b, c)
  bhaskara_res (a, b, c)

main(a=int(input(""Dê um valor para a: "")),
b=int(input(""Dê um valor para b: "")),
c=int(input(""Dê um valor para c: "")))

'''
No entanto, a variável ""delta"" dentro da função ""bhaskara_res"" não consegue acessar a variável ""delta"" dentro de ""delta_res"".
Como faria para poder resolver esse problema?
","
Eu fiz algumas alterações baseados no que você comentou, para ter acesso ao valor que uma função manipula a melhor forma é fazer essa função retornar esse valor, eu fiz a sua função delta_res retornar o valor de delta e a função bhaskara_res receber mais um valor além de a,b,c (observação: nessa função bhaskara_res a variável c nunca é utilizada então é recomendável remove-la) agora recebem também o valor de delta. E na hora de chamar a função você pode primeiro criar uma variavel para receber o valor de delta e depois colocar essa variavel na função bhaskara_res ou diretamente colocar a função delta_res na função bhaskha_res, no lugar onde deve ficar o delta. Em caso de duvidas é só falar.
def delta_res (a, b, c):
  delta = b ** 2 - 4 * a * c
  print(""\nDelta é igual a"", delta,)
  return delta

def bhaskara_res (a, b, c, delta):
  if delta < 0:
    print(""\nA equação não tem raízes.\n"")
  elif delta == 0:
    print(""\nA equação tem apenas uma raíz.\n"")
    x1 = (-b + delta ** 0.5) / (2 * a)
  else:
    print(""\nA equação tem duas raízes.\n"")
    x1 = (b + delta ** 0.5) / (2 * a)
    x2 = (b - delta ** 0.5) / (2 * a)
    print(""As raízes da equação são"",x1 , ""e"", x2,""\n"")

def main (a, b, c):
  if a == 0:
    print(""\nSe 'a' é igual a 0, a equação não é de segundo grau.\n"")
    return

  else:
    #bhaskara_res(a, b, c, delta_res(a,b,c))
    #Você pode usar o código acima ou o código abaixo
    delta = delta_res (a, b, c)
    bhaskara_res (a, b, c, delta)

main(a=int(input(""Dê um valor para a: "")),
b=int(input(""Dê um valor para b: "")),
c=int(input(""Dê um valor para c: "")))

","
            0
        ",,,"['\npython', 'funções', 'variáveis', 'declaração-de-variável\n']"
525309,Localizar campos em string com expressões regulares em python,"
Estou fazendo login em um dispositivo e dando um ifconfig nele, as informações geradas são:
['ifconfig']
['>ifconfig']
['br0       Link encap', 'Ethernet  HWaddr A4:33:D7:53:5E:08  ']
['          inet addr', '192.168.15.1  Bcast:192.168.15.255  Mask:255.255.255.0']
['          inet6 addr', ' 2804:431:c7c7:6528:a633:d7ff:fe53:5e08/64 Scope:Global']
['          inet6 addr', ' fe80::a633:d7ff:fe53:5e08/64 Scope:Link']
['          UP BROADCAST RUNNING ALLMULTI MULTICAST  MTU', '1500  Metric:1']
['          RX packets', '6563071 errors:0 dropped:0 overruns:0 frame:0']
['          TX packets', '7874170 errors:0 dropped:0 overruns:0 carrier:0']
['          collisions', '0 txqueuelen:0 ']
['          RX bytes', '714777540 (681.6 MiB)  TX bytes:886124155 (845.0 MiB)']
['']
['br0', '0     Link encap:Ethernet  HWaddr A4:33:D7:53:5E:08  ']
['          inet addr', '192.168.249.1  Bcast:192.168.249.3  Mask:255.255.255.252']
['          UP BROADCAST RUNNING ALLMULTI MULTICAST  MTU', '1500  Metric:1']

Dentro destes campos preciso buscar somente algumas informações.
Fiz assim, porém não está funcionando:
for chave in saida:
    #print(chave)
    aux = chave.split("":"",1)
    print(aux)
    if aux[0] == 'br0       Link encap':
        saida_json['MAC'] = aux[1].strip()
    elif aux[0] == '          inet6 addr':
        saida_json['IPV6'] = aux[1].strip()

","
Cara se você deseja pegar o endereço IP e o MAC de um dispositivo, recomendo usar uma ferramenta que faça isso. Exemplo a lib como a netifaces, precisa instalar ela com pip, um exemplo
import netifaces as ni
ni.ifaddresses('eth0')
ip = ni.ifaddresses('eth0')[ni.AF_INET][0]['addr']
mac = ni.ifaddresses('eth0')[ni.AF_LINK][0]['addr']

Ou então se vc ainda prefere usar regex, acho que uma abordagem melhor seria
import os
import re

ipv4 = re.search(re.compile(r'(?<=inet )(.*)(?=\/)', re.M), os.popen('ip addr show eth0').read()).groups()[0]
ipv6 = re.search(re.compile(r'(?<=inet6 )(.*)(?=\/)', re.M), os.popen('ip addr show eth0').read()).groups()[0]

","
            1
        ",,,"['\npython', 'regex\n']"
525289,Criar barra de erro manualmente no Seaborn,"
Eu tenho o erro dos meus dados calculados e quero usar essa informação para plotar uma barra de erro no gráfico. Vi que o Seaborn faz automático, mas quero usar a minha estimativa.
Estou usando o lineplot pra tentar fazer isso.
sns.lineplot(data=data, x=""x"", y=""y"")

Caso precisem de mais informações para uma resposta adequada é só pedir.
",,,,,"['\npython', 'seaborn\n']"
525233,Existe algum meio de passar um varivel Python para um script em javascript?,"

Tenho um código em JavaScript que é acionado a partir de um outro
código python, em python eu criei uma variável que puxa um objeto json
do banco de dados, e preciso consultar essa variável para saber quais
relatório vou atualizar com o código Javascript

const objeto = {
    ""ticket1"": [""Relatorio BI 1""],
    ""ticket2"": [""Relatorio BI 2""]
}

console.log('Clicker Injected');
const rows=document.querySelectorAll('#artifactContentList .row');
console.log(rows);
rows.forEach(row=>{
    objeto.chave1.forEach(valor =>{
        if(row.childNodes[4].innerText === valor){
            const button = row.children[1].firstChild.children[1]
            button.click()
    }
    })
});


Existe algum meio de pegar essa variável em python e coloca-la em
JavaScript, ou, existe alguma forma de vincular o JavaScript ao banco
de dados Postgresql
A baixo a chamada no código python do script em java.

PS: A variável que vem do banco de dados está armazenada usando a biblioteca Pandas
for n,w in workspaces.items():
        try:
            nav.driver.execute_script(clickerScript)
        except Exception as e:
            errH.report('Ocorreu erro na atualização do workspace:{n}'.format(n=n),e)
            nav.driver.quit()

",,,,,"['\njavascript', 'python\n']"
525227,"FFMPEG não consegue ler nome de arquivo que contenha ""...""","
Estou com um problema ao ler vídeos que contenham dois ou mais pontos ""."" seguidos no nome de uma das pastas ou no nome do próprio vídeo. Ex:  C://pasta 1/pasta 2/meuvideo1... parte2.ts. O problema que ocorre é que ele ""entende"" o caminho como sendo  parte2.ts, ou seja, ele lê apenas após os 2 pontos.
Eu li sobre Quoting and escaping do FFmpeg e tentei o seguinte:

Eu tentei fazer o replace de ""..."" para ""'\.\.\.'""  ficando
assim: C://pasta 1/pasta 2/meuvideo1'\.\.\.' parte2.ts

Eu também tentei fazer o replace de "".."" para ""'\.\.'.""  ficando
assim: C://pasta 1/pasta 2/meuvideo1'\.\.'. parte2.ts

Eu também tentei fazer o replace de "".."" para ""'\..'.""  ficando
assim: C://pasta 1/pasta 2/meuvideo1'\..'. parte2.ts


Nenhum funcionou todos continuaram com o mesmo erro:

[concat @ 000001c1d661e3c0] Impossible to open ' parte2.ts'
Links.txt: No such file or directory.

Eu estou criando um arquivo Links.txt onde salvo todos os seguimentos do vídeo para serem juntados pelo ffmpeg. Só lembrando que tanto o nome dos vídeos que estão no arquivo Links.txt, quanto o nome de saída possuem os três pontos.
with  open(out_link_file, mode='w', encoding='UTF-8') as Link_file:
            for line in file:
                if ""'"" in line:
                    line = line.replace('\'', r""'\''"")
                if "".."" in line:
                    line = line.replace('..', r""'\.\.'."")
                Link_file.write(f'file \'{line}\' \n')
        


    subprocess.run(f'ffmpega.exe -hide_banner -loglevel error  -f concat -safe 0 -i ""Links.txt"" -c copy -y ""{outfolder}""')

",,,,,"['\npython', 'ffmpeg\n']"
525199,Retornar nome do aluno na consulta junto com a matricula - python e django admin,"
Classe Base:
class Base(models.Model):
IncPor = models.IntegerField('Incluido Por', null=True, blank=True)
AltPor = models.IntegerField('Alterado Por', null=True, blank=True)
IncEm = models.DateTimeField('Incluido Em', auto_now_add=True)
AltEm = models.DateTimeField('Alterado Em', auto_now=True)

class Meta:
    abstract = True

Classe Pessoa:
class Pessoa(Base):    
nome = models.CharField('Nome', max_length=150)
data_nascimento = models.DateField('Data de nascimento', null=True)
pessoa_status = models.BooleanField('Pessoa ativa?', default=True)

def __str__(self):
    return self.nome

Classe Aluno:
class Aluno(models.Model):
pessoa = models.ForeignKey(""Pessoa"", on_delete=models.CASCADE, null=True)
matricula = models.IntegerField('Matricula', unique=True)
aluno_status = models.BooleanField('Aluno ativo? ', default=True)

def __str__(self):
    return str(self.matricula)

Gostaria de retornar na consulta no arquivo admin.py a matrícula e nome do aluno.
O relacionamento está 1 - n. Uma pessoa pode ter varias matrículas, e uma matricula pode ser uma pessoa.
@admin.register(Aluno)
class AdminAluno(admin.ModelAdmin):
list_display = ('matricula', )

Erro:

ERRORS: <class 'core.admin.AdminAluno'>: (admin.E108) The value of
'list_display[1]' refers to 'nome', which is not a callable, an
attribute of 'AdminAluno', or an  attribute or method on 'core.Aluno'.
System check identified 1 issue (0 silenced).

","
Você pode exibir o nome e a matrícula do aluno na página Admin do Django da seguinte forma:
Classe Aluno:
class Aluno(models.Model):
pessoa = models.ForeignKey(""Pessoa"", on_delete=models.CASCADE, null=True)
matricula = models.IntegerField('Matricula', unique=True)
aluno_status = models.BooleanField('Aluno ativo? ', default=True)

def __str__(self):
    return ""Nome: {} - Matrícula: {}"".format(self.pessoa.nome,self.matricula)

","
            0
        ","
Para recuperar o nome da class Pessoa
Utilizei como solução no admin.py
list_display = ('get_nome',)


def get_nome(self, obj):
    return obj.pessoa.nome
get_nome.short_description = 'Nome'

","
            0
        ","['\npython', 'django', 'python-2.7', 'django-admin', 'django-queryset\n']"
525102,Buscar elemento de um dicionário pelo Gherkin,"
Necessito realizar uma automação, na qual necessito que o meu código faça uma leitura das informações apresentadas na Tabela do Gherkin para que selecione a opção que apresentei dentro de um dicionário, que está em um arquivo destinado ao Page Object.
Estou com o Gherkin, escrito da seguinte maneira:
Quando selecionar os campos




Buttons




buttonOne


buttonTwo


buttonFour




No Page Object, possuo uma função para armazenar as informações, no qual os campos estão com seus locators, dentro de um dicionário, como abaixo:
def func(self):    
dicionario = {    
""Op 1"": self.botao_op1    
""Op 2"": self.botao_op2    
""Op 6"": self.botao_op6        
}
self.dicionario[**Como definir aqui um parametro que irá buscar a informação descrita na tabela do Gherkin**].click()

O meu step, está da seguinte maneira:
@when('Quando selecionar os campos')
def insert_items_profile(context):
  context.page_object.dicionario()

Como fazer com que na execução, leia a informação do meu código, que passe para função dentro do Page Object?
",,,,,"['\npython', 'selenium\n']"
525085,IMPORTAR EVENTO ESPECÍFICO - PANDAS,"
Tenho um script onde faço um loop for e percorro cerca de 330 arquivos, com a finalidade de consolidar e aplicar um filtro no fim do processo. Como sou iniciante, fiz algumas tentativas mas sem sucesso.
Quero entender se há alguma forma de filtrar um evento específico de uma coluna do arquivo já na importação. Na prática, fazer o loop e consolidar apenas o evento a ser filtrado.
Não consigo fazer isso no fim, pois dá um erro de memória, pois os arquivos são pesados.
for x in tqdm(all_files):
    df = pd.read_csv(x, low_memory=False, encoding='latin1', sep=';')
    lt.append(df)
frame = pd.concat(lt, ignore_index=True, axis=0)

","
Você pode filtrar utilizando o loc ou iloc do pandas
df = df.loc[['meu_campo'] == 'texto']

isso vai fazer com que aquele dataframe só tenha os dados referente ao filtro que adicionei
Para mais info sobre o método utilize a doc do pandas
https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html
","
            0
        ",,,"['\npython', 'pandas\n']"
525079,Como Validar Input Do Usuário dentro de um arquivo .txt,"
Tenho um programa de cadastro que recebe o dados do usuário (e-mail e senha), esse dados vão para um arquivo .txt, com a função Open() do python, exemplo:
Arquivo txt
exemplo@gmail.com, senha1234
outroexeplo@gmail.com, 12345678

Primeiro é escrito o e-mail do usuário depois vem uma "","" para separar o e-mail da senha.
Após o usuário se cadastrar ele precisa fazer o login. Ai que está o problema, como que eu posso fazer para verificar dentro do arquivo .txt se a senha que o usuário digitou no login corresponde com o email dele?
Código
import PySimpleGUI as sg

def LogIn():
sg.theme('Black')
layout = [
    [sg.Text('E-mail'), sg.Input(size=(25,5), key='email')],
    [sg.Text('Senha'), sg.Input(size=(25,0), key='Pass')],
    [sg.Button('Log-in')]
]

#  Gerar Janela
janela = sg.Window('Log-in', layout)
button, values = janela.Read()

#  Armazenando valores
email = values['email']
Pass = values['Pass']


#  Condicionais
if '@gmail.com' not in email[-10:]:
    pass


elif len(Pass) < 8:
    print('Senha deve conter 8 ou mais caracteres')


else:

    with open(r'Works\Log-in\obb\bcdds.txt', 'r', encoding='utf-8') as file:
        dados = file.read()

        if email not in dados:
            print('E-mail não cadastrado.')

        elif Pass:
            **Aqui vem a checagem para saber se a senha corresponde ao email**

","
Faça uma recursão em cada registro do arquivo e compare o email assim que encontrar o email correspondente compare a senha digita e se for verdadeiro
faça algo.
Exemplo pseudo codigo:
    for line in dado:
         eml,password = line.split("","")

         if eml == email and senha == password:
           #Do Stufff

","
            0
        ",,,['\npython\n']
524987,quantidade de elementos repetidos de um array [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como corrigir ""ValueError: invalid literal for int() with base 10: '' - Python?

                                (3 respostas)
                            


Preciso de ajuda para entender este codigo

                                (1 resposta)
                            

Fechada há 7 meses.



compra = int(input('Valor da compra: R$'))
valorPago = int(input('Valor pago: R$'))
troco = valorPago - compra
dimDisponivel = [100, 50, 25, 10, 5, 2, 1, 0.50, 0.25, 0.10, 0.05, 0.01]
print(f'Troco: R${troco}\n')



for i in dimDisponivel:
    while troco >= i:
        print(f'{dimDisponivel.count(i)} de R${i}')
        troco -= i

Gostaria de saber como mostrar apenas uma vez a quantidade de determinada cédula repetida, pois se o programa detecta 3 notas de 2 reais, escreve 1 de cada por linha, e queria saber com colocar as 3 notas de 2 numa linha só.
","
O seu método count() está contando a quantidade de valores na lista, não as necessárias para completar o troco. Faça um contador dentro do while para isso.
for i in dimDisponivel:
    count = 0
    while troco >= i:
        count += 1
        troco -= i
    if count != 0:
        print(f'{count} de R$ {i}')

","
            0
        ",,,"['\npython', 'python-3.x', 'python-requests\n']"
524982,Problema com programa que percorra duas listas e gere uma terceira sem elementos repetidos,"
Por um pouco mais de uma semana eu estive tentando resolver o seguinte exercício: ""Faça um programa que percorra duas listas e gere uma terceira sem elementos repetidos."" O enunciado em questão faz parte do Exercício 6.3 do livro ""Introdução à programação com Python"" do Professor Nilo Menezes.
A ideia do problema apresentado é que o programador crie um algoritmo que leia duas listas diferentes e que uma terceira lista seja produzida com base nessas duas, ignorando os elementos repetidos e/ou já incluídos na nova lista. Como se trata de um exercício que visa a prática de lógica da programação utilizando os novos conceitos aprendidos, ele deve ser resolvido sem a utilização de funções.
Devido a esse importante detalhe, a resolução apresentada aqui não se aplica de forma alguma, tampouco o propósito do exercício é o mesmo do link de redirecionamento.
O próprio Prof. Nilo já postou a resolução desse mesmo exercício em seu blog, mas com uma lógica significativamente diferente do que venho tentado: optei por adicionar os elementos da lista 1 e da lista 2 à lista 3 de maneira independente, verificando se há elementos repetidos de cada lista na lista 3 e, em caso negativo, realizando a adição. Devido a esse fator, meu código se encontra incompleto, tendo sido escrito até a primeira lista, já que o problema se encontra em seu respectivo laço.
Não consigo dizer o que há de errado: após inserir os valores nas variáveis, o programa simplesmente para de ser executado, sem ser encerrado pelo interpretador. Até pensei que poderia ser um problema de sintaxe, mas nesse caso pensei que alguma mensagem seria exibida e o programa seria encerrado corretamente, certo?
Como comentei em um parágrafo acima, creio que o problema esteja no segundo laço aninhado.
Segue abaixo o meu algoritmo:
# Faça um programa que percorra duas listas e gere uma terceira sem elementos repetidos.

lista_1 = []
lista_2 = []
op = ''
while op != 0:
    op = int(input(f'Digite um termo da lista 1 (0 para parar): '))
    if op != 0:
        lista_1.append(op)
    else:
        op = ''
        while op != 0:
            op = int(input(f'Digite um termo da lista 2 (0 para parar): '))
            if op != 0:
                lista_2.append(op)

indice_lista_1 = 0
indice_lista_2 = 0

lista_3 = []
indice_lista_3 = 0

while indice_lista_1 < len(lista_1):

    while indice_lista_3 < len(lista_1):
        if len(lista_3) == 0:
            lista_3.append(lista_1[indice_lista_1])  # len(lista_3) torna-se igual a 1
        else:
            if lista_1[indice_lista_1] != lista_3[indice_lista_3]:
                lista_3.append(lista_1[indice_lista_1])
                indice_lista_3 = indice_lista_3 + 1

    indice_lista_1 = indice_lista_1 + 1

print(f'A lista 1 é igual a {lista_1}')
print(f'A lista 3 é igual a {lista_3}')


lista_3 = []

Também possuo outro rascunho de uma tentativa minha menos atual. Não inclui aqui porque não achei relevante, mas por favor me sinalize caso achar necessário.
","
Eu tentei deixar da forma mais simples possivél. Primeiro  são comentários  sobre o seu código / problema, a sequência  que ele faz e por que ele não  está funcionando.
#Da criação de índices  para cima (adição de lista 1 é 2) está  tudo okay.
#No primeiro IF o Len de 3 é 0 logo ele será inicializado e o pelo que você passou a lista 3 irá receber o índice 0 da lista 1 que tem x elementos.
#Exemplo : Se a lista um era ls_1 = [1,2,3] a lista 3 sera ls_3 = [1], por conta do primeiro if.
#Logo após essa mudança ser feita esse primeiro If deixa de ser válido  pois agora a lista 3 tem len() != 0.
#A partir de agora o Else irá rodar, mas tem um problema, o indice [0] de lista um será sempre igual ao indice [0] da lista 3 logo o IF do seu else não pode rodar ,o que está causando um loop infinito, mesmo que não apareça nada na tela. Para verificar basta por um print(""Alguma coisa"") dentro do seu Else e executar o programa.
#Mas e aquela mudança no indice 1 lá embaixo ??? Bom, ela validaria e quebraria esse loop, porém foi colocada no ""escopo"", identação dentro do primeiro while e não do segundo, e como é o segundo que está rodando então nunca termina, pois o indice de lista 1/3 não muda.
...Meu código...
lista_1 = list()
lista_2 = list()
lista_3 = list()

while True:
num = int(input(""Adicionar a lista 1 : ""))

if num == 0:
    break       
else:
    lista_1.append(num)     
print()

while True:
num = int(input(""Adicionar a lista 2 :""))

if num == 0:
    break
else:
    lista_2.append(num)

#Aqui estou fazendo a filtragem das listas por meio de um loop for e uma condicional if, um e dois,
#todos os itens da lista_1 são jogados para o x e passam de um por um na condição if até que não reste mais nenhum item a ser passado.
#Caso o número não esteja presente na lista 3 ele será adicionado.
#Depois o mesmo processo é realizado com a lista 2.
for x in lista_1:
if x not in lista_3:
    lista_3.append(x)

for x in lista_2:
  if x not in lista_3:
    lista_3.append(x)
        
print(f""\n{lista_3}"")

","
            1
        ",,,"['\npython', 'lista', 'loop', 'condição', 'append\n']"
524939,Quando chamo python manage.py migrate da esse probleminha e por causa do pycham?,"

Quando estou para testar o banco de dados (SQLite3) sempre dá esse mesmo erro.
lembrando que não estou usando um banco de dados para produção, pois, esse sistema é só para treinar mesmo.
",,,,,"['\npython', 'python-3.x\n']"
524929,PIPENV - local - diretório diferente para pasta com arquivos relacionados a pacotes,"
Esse é meu primeiro post aqui gostaria de pedir um help.
Atualmente programo em python e utilizo o conda(anaconda) e/ou virtualenv para gerenciar/isolar meus pacotes no python, usando o PyCharm e/ou VsCode como IDE
Bom, tanto no virtualenv como no conda eu consigo especificar o local (diretorio) onde deve ficar a pasta com os pacotes etc... Porém quando eu crio ambiente com pipenv a pasta com os pacotes é criada em um local acredito eu que seja padrão, No caso aqui usando Linux fica no caminho:
/home/user/.local/share/virtualenvs

Como faço para mudar a localização do meu ambiente criado ???
Gostaria deixar na mesma pasta do projeto igual acontece no virtualenv/conda

Deixar os pacotes no /home/user/.local/share/virtualenvs é minha unica opção?


Me desculpem se as duvidas são de teor muito básico !!
Vlw
",,,,,"['\npython', 'virtualenv', 'anaconda', 'ambiente\n']"
524869,Como retornar os indices que um elemento aparece em uma tupla?,"
**Escreva uma função chamada 'posicoes' que recebe como argumentos de entrada
uma tupla e um item, e retorna uma lista contendo todos os índices em que o
item aparece na tupla.
Caso o item nao exista na tupla, deve retornar uma lista vazia.
**
-MEU CÓDIGO
tupla = (5, 6, 5, 3, 5)
def posicoes(tupla, item):
    indice = 0
    for i in range(len(tupla)):
      if item in tupla(i):
        indice.append((i))
    
    return indice

print(posicoes(tupla,5))

","
Para retornar o índice do item da tupla, você pode utilizar o método enumerate(tupla), ele retorna o valor da tupla junto de seu índice, então se o item for igual sua variável item, você acrescenta somente o índice na lista indice
O código fica assim:
tupla = (5, 6, 5, 3, 5)
def posicoes(tupla, item):
  indice = []
  for i in enumerate(tupla):
    if i[1] == item:
      indice.append(i[0])

  return indice

print(posicoes(tupla,5))

","
            1
        ",,,"['\npython', 'tupla\n']"
524806,Terceiro eixo y gráfico python,"
Eu estou precisando fazer um gráfico que tenha 3 eixos y. 1 no lado esquerdo e dois no direito. Eu estou conseguindo plotar eles, porém os do lado direito fica um em cima do outro. Como deixar do lado?
Segue a parte do código que ploto os gráficos:
IC_F = tabela['IC']
CGMAIS = tabela['+CG']
CGMENOS = tabela['-CG']

#Criando a figura
fig = plt.figure(figsize=(8,5))
#Criando eixo
ax = fig.add_subplot(111)
#Criando outro eixo igual o ax
ax2 = ax.twinx()
#terceiro eixo
ax3 = ax.twinx()

ax2.plot(CGMENOS, color = 'blue', marker = 'o', lw =3, ls = '--', label = '-CG')
ax3.plot(CGMAIS, color = 'red', marker = 'o', lw =3, ls = '--', label = '+CG')
ax.plot(IC_F, color = 'black', marker = 'o', lw =3, ls = '--', label = 'IC')

ax.set_xlabel('Hora Local')
ax.set_ylabel('Relâmpagos IC (ocorrências/hora)')
ax2.set_ylabel('Relâmpagos -CG (ocorrências/hora)')
ax3.set_ylabel('Relâmpagos +CG (ocorrências/hora)')

ax.ticklabel_format(style='sci', axis='y', scilimits=(0,0), useMathText=True)
ax2.ticklabel_format(style='sci', axis='y', scilimits=(0,0), useMathText=True)
ax3.ticklabel_format(style='sci', axis='y', scilimits=(0,0), useMathText=True)

plt.xticks(np.arange(0,24,1))
ax.set_yticks(np.arange(0,70000,10000))
ax2.set_yticks(np.arange(0,6000,1000))
ax3.set_yticks(np.arange(0,300,50))

fig.legend(loc=2, bbox_to_anchor=(.78,.88))

plt.title('Ciclo diurno relâmpagos BrasilDAT: novembro')
plt.show()


","
Adiciona essa linha no seu código, logo após ax3 = ax.twinx()
ax3.spines.right.set_position((""axes"", 1.07))

Ajuste o espaçamento se quiser deixar o eixo mais afastado ou mais colado do outro. Para saber mais, consulte https://matplotlib.org/stable/api/spines_api.html#:~:text=set_position(position),zero%27%20-%3E%20(%27data%27%2C%200.0)
","
            1
        ",,,"['\npython', 'gráfico\n']"
524805,Verificar se duas teclas foram pressionadas ao mesmo tempo python,"
Olá pessoal estou usando o python e o modulo pynput.keyboard para verificar teclas pressionas até ai tudo okay, mas eu gostaria de saber quando duas teclas foram pressionadas ao mesmo tempo: exemplo Shift + L ou qualquer outra combinação.
o código atual é:
from pynput.keyboard import Listener, Key

def press(key):
  print(key)

with Listener(on_press=press, on_release=release, on_pressed=pressed) as listener:
  listener.join()

","
Você teria de ter uma lista, fora das funções ""press"" e ""release"". Quando um keydown for registrado por ""press"", adiciona à lista (se já não estiver lá). Quando um keyup for registrado por ""release"", remove da lista.
Aí basta, no epílogo da função ""press"", verificar se alguma combinação de teclas está presente na lista.
","
            0
        ",,,"['\npython', 'teclado\n']"
524801,"Como faço para contar quantos dígitos, possui um resultado de uma operação? [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.
Uma edição foi enviada para análise há 7 meses e falhou em reabrir a publicação:

O(s) motivo(s) de fechamento original(is) não foi(ram) resolvido(s)





                        Melhore esta pergunta
                    



Tenho uma operação que resulta em um número qualquer.
Exemplo:



25**7 = 6103515625



O resultado tem 10 dígitos.
quero executar a contagem automática da quantidade de dígitos do resultado em qualquer operação.
","
Utilize a função nativa len().
Primeiro transforme o resultado de Inteiro para String, com str(), e chame a função len() para sua variável resultado, como por exemplo:
resultado =  str(25**7)
 
qtdNumeros = len(resultado)

","
            -1
        ",,,['\npython\n']
524800,Exclusão Lista e Retorno,"

Será passado como
entrada a lista com as informações atuais de um contato, e o telefone que se deseja excluir:
• caso o telefone esteja na lista de telefones do contato, ele deve ser removido.
• caso não esteja, nenhuma atualização será feita.
Oque fazer para obter a saída esperada da função “exclusão”?
def contato(nome,telefone='()',email='()',instagram='()'):

    '''Dados nome, telefone, email e instragram-->str. Retorna uma lista com os dados informados'''
    lista=[nome,[telefone],[email],[instagram]]
    return lista

def exclusão(lista, telefone):

    '''Dado o nome e numero de telefone, retorna a lista sem o numero de telefone informado'''
    P= lista
    B= telefone
    A= P[1]
    if (B in A):
        del(lista[2])
        return lista
    if (B not in A):
        return lista

# Entrada: contato('henrique','22222','nada','@123')
# Valor Esperado: ['henrique', ['22222'], ['nada'], ['@123']]

# Entrada: exclusão('henrique','22222')
# Valor Esperado: ['henrique',['nada'], ['@123']]
# Valor Obtido: 'henrique'

","
O seu problema está sendo você redefinir a variável lista no parâmetro da função exclusão, substitua 'lista' por 'nome', e onde del(lista[2]) por del(lista[1]) que é o índice do telefone na lista.
Defina a variável lista como variável global para que possa ser utilizada nas outras funções.
Você não precisa colocar entre parênteses as condições da fórmula if, também não precisa adicionar outra condição if caso o telefone não esteja na lista.
Seu código fica assim:
def contato(nome,telefone='()',email='()',instagram='()'):
    global lista
    '''Dados nome, telefone, email e instragram-->str. Retorna uma lista com os dados informados'''
    lista=[nome,[telefone],[email],[instagram]]
    return lista

def exclusão(nome, telefone):
    '''Dado o nome e numero de telefone, retorna a lista sem o numero de telefone informado'''
    P = lista
    B = telefone
    A = P[1]
    if B in A:
        del(lista[1])
    return lista

","
            0
        ",,,"['\npython', 'string', 'lista\n']"
524682,"Loop de elementos em Lista, boolean, se condição aceita, criar uma nova lista (python)","
podem me ajudar?
Preciso encontrar as empresas da lista empresa1 que satisfazem a seguinte condição:

o valor apresentado na ultima linha da coluna multiplo seja maior que 1 na data expecifica

essa busca deve percorrer para cada empresa na lista empresas1, ou seja, irei adicionar mais além dessas
import numpy as np
import pandas as pd
import yfinance as yf

empresas1 = ['BRKM5.SA']#,'ITSA4.SA','PETR4.SA','WEGE3.SA','BBAS3.SA'] #> adicionar loop para as empresas nesta lista (remover ""]#"" para ter a lista completa

# historico de volume das empresas em colunas
hist_vol = yf.download(empresas1, start=""2019-01-01"", end=""2021-08-19"")[['Volume']]

# adicionando coluna média móvel do volume
periodo1 = 20
hist_vol[f'MM{periodo1}'] = hist_vol[""Volume""].rolling(periodo1).mean()

# adicionando coluna múltiplo entre volume / média móvel
hist_vol['Multiplos'] = hist_vol[""Volume""] / hist_vol[f'MM{periodo1}']

# exibir apenas a coluna de múltiplos
hist_vol = hist_vol.drop(columns=['Volume',f'MM{periodo1}'])

# saida (resultado)
valor = hist_vol['Multiplos'].tail(1).item()
if valor >= 1:
  print(""ok"") #se sim, incluir o nome da empresa em uma nova lista [] e após finalizar o loop imprimir a nova lista
else:
  print(""Não faz nada"") #continua o loop e avaliar as outras empresas

","
Você precisa implementar um loop, para isso recomendo usar o for, a sintaxe é algo como: para cada item em uma lista,
    lista = ['BRKM5.SA', 'ITSA4.SA','PETR4.SA','WEGE3.SA','BBAS3.SA']
    for item in lista:
        print(item)
        # você utiliza o item  da lista para fazer suas buscas agora.


","
            3
        ",,,['\npython\n']
524680,"python, lógica em lista - remover item","
Estou desenvolvendo um jogo baseado em zombie dice, em Python.
Estou com problema especificamente no uso da lista copo[] , em que preciso remover os dados jogados e posteriormente recolocá-los no jogo usando a função adicionar_dados() que eu defini, porém ao rodar o programa acabo encontrando o erro:

IndexError: list index out of range.

Onde estou errando?
Segue abaixo o código:
import random


comeca_partida = False

#define dados
dado_verde = ""C,P,C,T,P,C""  # 6 dados verdes
dado_amarelo = ""T,P,C,T,P,C""  # 4 dados amarelos
dado_vermelho = ""T,P,T,C,P,T""  # 3 dados vermelhos

copo = []


def adicionar_dados():    #adicionar os dados
    for i in range(0, 6):
        copo.append(dado_verde)
    for i in range(0, 4):
        copo.append(dado_amarelo)
    for i in range(0, 3):
        copo.append(dado_vermelho)


turno = 0

numero_jogadores = int(input(""Digite o número de jogadores na partida: \n""))
lista_jogadores = []
for ind in range(0, numero_jogadores):
    nome = input(""Qual o nome do jogador? \n"")

if numero_jogadores >= 2:
    comeca_partida = True # iniciar a partida
    cerebros = 0
    tiros = 0
    adicionar_dados()
    i = 1
    while (i < numero_jogadores +1):
        player = dict({'jogador': i, 'cerebros': 0, 'tiros': 0})
        lista_jogadores.append(player)
        i = i + 1

        print(""Partida iniciada! "")

        while comeca_partida == True:
            for player[i] in lista_jogadores:
                try:
                    print(""\n olá, {}, digite o que deseja fazer:"".format(nome))
                    jogar = int(input(""[1] - Jogar os dados, [2] Finalziar turno ou [3] Trocar de jogador: \n""))
                except:
                    print(""valor inválido!"")

                if jogar == 1:
                    for i in range(0, 3):
                        num_sorteado = int(random.randrange(0, 12))
                        print(""Dado sorteado {}: {} "".format((i + 1), num_sorteado))

                        dado_sorteado = copo[num_sorteado]  # 'lança' o dado e verifica qual a face sorteada
                        face_dado = int(random.randrange(0, 5))  # obtem a face do dado

                        if dado_sorteado[face_dado] == ""C"":  # tirou ""cerebro no dado
                            print(""Você comeu um cérebro!!"")
                            cerebros = cerebros + 1
                            copo.remove(dado_sorteado)

                        elif dado_sorteado[face_dado] == ""T"":  # tirou tiro no dado
                            print(""Você levou um tiro!!"")
                            tiros = tiros + 1
                            copo.remove(dado_sorteado)

                        else:
                            print(""A vítima escapou!!"")


                elif jogar == 2:
                    pontos = cerebros
                    print(""Turno finalizado! Fez"", pontos, ""pontos!"")
                    print(lista_jogadores)
                    turno += 1
                    tiros = 0

                elif jogar == 3:
                    print(""Próximo jogador!"")
                    adicionar_dados()
                    #trocar jogador ???

    else:
        print(""O jogo precisa de 2 ou mais jogadores!"")

","
Como o Felipe alertou no comentário da pergunta, esse erro está acontecendo após você iniciar a partida quando o jogador seleciona a opção '1'. Nesse momento você sorteia um número aleatório entre [0,11] com a intenção de selecionar um dos dados do jogo e em seguida retirar ele da 'caixa de dados' para o jogador não ter a chance de retirar esse dado novamente (pelo menos até o próximo turno).
Porém quando você usa o método .remove(), um elemento é retirado da lista, e eventualmente isso causa problemas, porque você continua sorteando um número aleatório entre [0, 11], mas a sua lista já não tem mais os 12 elementos iniciais. 
Uma forma de você consertar isso é ao invés de sortear um número aleatório entre [0,11] sortear no intervalo [0, len(copo)]:
...
if jogar == 1:
  for i in range(0, 3):
    num_sorteado = int(random.randrange(0, len(copo)))
    print(""Dado sorteado {}: {} "".format((i + 1), num_sorteado))
...

Boa sorte com o programa!
","
            1
        ",,,"['\npython', 'lista\n']"
524675,Problema ao extrair dados de página web com Beautiful Soup em python,"
Fiz um script em python para acessar o portal de registros do inmetro para fazer uma pesquisa entre os certificados existentes.
No caso, meu script acessa esse link e pega todos os registros da página. Após isso, o script abre cada um dos registros e pega os dados do certificado.
Exemplo, para o certificado de link, ele deveria pegar os dados de ""Data"",""Alteração"",""Marca"",""Modelo"",""Descrição"" e ""Código de barras"" e armazenar.
Ao fazer isso fora do loop principal, somente para um registro específico, aparentemente funciona, mas ao inserir no loop principal não.
Ao invés de obter os dados dos certificados individuais, o script está obtendo os dados da página inicial, onde constam todos os certificados.
Código para obtenção dos links dos registros:
webPage = requests.get('http://registro.inmetro.gov.br/consulta/Default.aspx?pag=1&acao=pesquisar&NumeroRegistro=&ctl00%24MainContent%24ControlPesquisa1%24Situacao=&dataConcessaoInicio=&dataConcessaoFinal=2021-08-25&ObjetoProduto=Sistemas+e+equipamentos+para+energia+fotovoltaica+%28m%C3%B3dulo%2C+controlador+de+carga%2C+inversor+e+bateria%29&MarcaModelo=&CodigodeBarra=&Atestado=&Fornecedor=&CNPJ=&ctl00%24MainContent%24ControlPesquisa1%24SelectUF=&Municipio=')
soup = bs(webPage.content)
infoBox = soup.find(class_='corpo')
registerList = infoBox.find_all('a',href=True)

Código para obtenção dos dados de cada registro da lista anterior:
def get_content_value(rowData):
    return[li.get_text() for li in soup.select('.print')]

def get_content_key(rowData):
    return[th.get_text() for th in rowData]

def get_info_box(url):  
    webPage = requests.get(url)
    soup = bs(webPage.content)
    infoBox = soup.find(class_='table table-striped')
    infoRows = infoBox.find_all('tr')
    
    for index, row in enumerate(infoRows):
        if index == 0:
            key = row.find_all('th')
            contentKey = get_content_key(key)
        else:
            contentValue = get_content_value(row.find('tr'))

    certData = {k: [] for k in contentKey}
    count = 0        
    
    for row,item in enumerate(contentValue):
        certData[contentKey[count]].append(contentValue[row])
        count += 1
        if count > 5:
            count = 0
    return certData

registerDataset = []
errors = []

for index,item in enumerate(registerList):
    if index % 5 == 0:
        print('Actual Index: ', index)
        print('Until Finish: ', len(registerList)-index)
    if index == 4:
        break # somente para não encher o site de acessos, estava usando ao debugar o código
    try:
        url = registerList[index]['href']
        registerDataset.append(get_info_box(url))
    except Exception as e:
        print(index)
        print(e)
        errors.append(index)

",,,,,"['\npython', 'url', 'web-scraping', 'python-requests', 'beautifulsoup\n']"
524663,para oque serve os argumentos __init__ e super() em Python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Onde fica o construtor da classe em Python?

                                (2 respostas)
                            


Quando devo usar __init__ em funções dentro de classes?

                                (1 resposta)
                            


Qual a diferença entre classes inicializadas com (e sem) __init___

                                (1 resposta)
                            


Como se usa e para que serve o 'super' em classes Python?

                                (1 resposta)
                            

Fechada há 7 meses.



Estou programando um app com o kivy, e o instrutor falou desses argumentos, só que não explicou o que exatamente eles fazem, alguém pode me explicar oque eles fazem??
",,,,,"['\npython', 'python-kivy\n']"
524649,"Como fazer o SpeechRecognition ouvir os sons do sistema (youtube, zoom e etc..) ao invés do microfone? [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.




                        Melhore esta pergunta
                    



import pyaudio
import wave
import numpy as np
import pyautogui
import speech_recognition as sr


CHUNK = 1024
FORMAT = pyaudio.paInt16
RATE = 44100



p = pyaudio.PyAudio()


#stream usando o as_loopback para pegar som do SO
   
stream = p.open(
    format = FORMAT,
    channels = 2,
    rate = RATE,
    input=True,
    frames_per_buffer=CHUNK,
    input_device_index=16,)

#Função para ouvir e reconhecer a fala
def ouvir_microfone():
    #Habilita o microfone do usuário
    microfone = sr.Recognizer()
    
    
    
    #usando o microfone
    with sr.Microphone() as source:
        
        #Chama um algoritmo de reducao de ruidos no som
        microfone.adjust_for_ambient_noise(source)
        
        
        #Frase para o usuario dizer algo
        print(""Diga alguma coisa: "")
        
        #Armazena o que foi dito numa variavel
        audio = microfone.listen(source)
        
    try:
        
        #Passa a variável para o algoritmo reconhecedor de padroes
        frase = microfone.recognize_google(audio,language='pt-BR')

        stream.stop_stream()
        stream.close()
        p.terminate()

        if ""aula"" in frase:
            pyautogui.PAUSE = 1
            pyautogui.keyDown('win')  # hold down the shift key
            pyautogui.press('1')     # press the left arrow key
            pyautogui.press('1')     # press the left arrow key
            pyautogui.keyUp('win')
            pyautogui.click(x=1311, y=988)
            pyautogui.write(""Presente professor"")
            pyautogui.press('enter')
            pyautogui.hotkey('alt', 'tab') 
            

            

        
        #Retorna a frase pronunciada
        print(""Você disse: "" + frase)
        
    #Se nao reconheceu o padrao de fala, exibe a mensagem
    except sr.UnkownValueError:
        print(""Não entendi"")
        
    return frase
    

ouvir_microfone()

","
Olá! Tente mudar o valor da variável input_device_index. 
Quando você cria a variável stream, você ta passando diversos parâmetros para o PyAudio, essa variável é a responsável por selecionar de qual aparelho o pacote vai capturar o audio:
stream = p.open(
    format = FORMAT,
    channels = 11,
    rate = RATE,
    input=True,
    frames_per_buffer=CHUNK,
    input_device_index=#ALTERAR AQUI,
    as_loopback=True)

PS: Talvez você tenha que procurar por esses 'devices' com:
for i in range(0, p.get_device_count()):
    print(i, p.get_device_info_by_index(i)['name'])

Dessa forma você consegue ver qual lista de aparelhos que o PyAudio consegue capturar, e escolher qual você quer. Me avisa se conseguir.

Se ainda tiver dúvidas, dá uma olhada nessa resposta, nesse caso ele usa duas variáveis stream, e faz captura simultânea de dois aparelhos (canais).
","
            1
        ",,,['\npython\n']
524642,Como alinhar lado a lado a tag li dentro do laço for em html flask jinja2? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.




                        Melhore esta pergunta
                    



Como faço para alinhar lado a lado a tag li dentro do laço for em flask
{% for g in groups %}
<div class='circle'>
   <ul class=""circle-list"">
      <li class=""group"">
         <a href=""/layers"">
            <svg id=""{{g.id}}"" width=""250"" height=""250"" onclick=""funcaoBotao({{ g.id }});"">
               <circle cx=""95"" cy=""95"" r=""85"" />
               <text x=""38%"" y=""40%"" text-anchor=""middle"" fill=""white"" font-size=""16px"" font-family=""Arial"" dy="".3em"">{{ g.name }}</text>
            </svg>
         </a>
</div>
{% endfor %}

","
Primeiro, não esqueça de fechar as tags <ul> e <li> que estão abertas mas não fechadas.
Depois, para realizar isso você precisa usar css. Crie um arquivo css que referencie esse código html. Nesse arquivo css escreva:
ul {
  display: flex;
}

Creio que assim funcionará.
","
            1
        ",,,"['\nhtml', 'python', 'flask\n']"
524626,Como unificar datas com dataframe no Python,"
Boa tarde pessoal, estou com a seguinte situação. Tenho uma planilha com as seguintes colunas: nome, sobrenome, datas(de 2011 até 2021)
Segue a tabela para visualizarem:

Como vêem, essas datas estão fora de ordem. Como posso ordená-las sem mudar de posição as colunas nome e sobrenome?
Eu cheguei a executar o código da seguinte maneira:
df_json_meses = df_json1.iloc[:, 58:64] # Coluna referente aos meses de ago até dez/2020

df_json_meses2 = df_json1.iloc[:, 52:55] # Coluna que se refere aos meses jan a maio/2021

df_json_meses3 = df_json1.iloc[:, 99] # coluna referente ao mês de jun/2021

df_json_meses4 = df_json1.iloc[:, 55:57] # coluna referente aos meses Jul e Ago/2021

df_json_soma_meses = pd.concat([df_json_meses, df_json_meses2 , df_json_meses3, 

df_json_meses4], axis=1)
df_json_nome = df_json1.iloc[:, :2]


df_json_unico = pd.concat([df_json_nome, df_json_soma_meses], axis=1)

Consegui organizar conforme eu queria, só que me atende para esse relatório, agora se eu gerar um novo relátorio, e gerar novas colunas ou menos colunas e a quantidade for menor ou maior que eu setei no código, eu terei que alterar na mão? Se sim, eu não quero isso. Como posso automatizar esse código da melhor forma possível?
Segue o resultado final do relatório:

Agradeço imensamente quem puder ajudar.
","
Partindo do seguinte conjunto de dados como exemplo:
df = pd.DataFrame({
    'Nome': ['João', 'José'],
    'Sobrenome': ['Da Silva', 'Soares'],
    '2011-02': [10, 20],
    '2009-08': [90, 200],
    '2011-12': [1, 5],
    })
print(df)

# output:
#    Nome Sobrenome  2011-02  2009-08  2011-12
# 0  João  Da Silva       10       90        1
# 1  José    Soares       20      200        5


Primeiro, reordene todas as colunas com df.sort_index (como as datas estão no formato YYYY-MM, o algoritmo de ordenamento padrão dá conta de ordená-las em ordem crescente):
df = df.sort_index(axis=1)
print(df)

# output:
#    2009-08  2011-02  2011-12  Nome Sobrenome
# 0       90       10        1  João  Da Silva
# 1      200       20        5  José    Soares

As colunas de datas ficaram ordenadas - só falta trazer as colunas Nome e Sobrenome para a frente. Podemos fazer isso usando df.pop e df.insert para retirar a coluna e reinseri-la no começo do dataframe:
df.insert(0, ""Sobrenome"", df.pop('Sobrenome'))
df.insert(0, ""Nome"", df.pop('Nome'))
print(df)

# output:
#    Nome Sobrenome  2009-08  2011-02  2011-12
# 0  João  Da Silva       90       10        1
# 1  José    Soares      200       20        5

Por fim, caso você queira que as colunas de data estejam em ordem decrescente, basta passar o argumento ascending=False ao chamar o método df.sort_index.
","
            1
        ",,,"['\npython', 'pandas', 'dataframe\n']"
524542,Input no Selenium com Python,"
Comecei a estudar a ferramenta selenium há exatas 2 horas e queria saber se é possível fazer o seguinte:
Executar um programa e ele me perguntar o site que quero acessar, colar o link e o programa abrir o site no link que digitei, é possível?
","
É possível sim, para começar lembre-se de baixar, de acordo com a versão do navegador, o chromedriver caso esteja usando o navegador Google Chrome ou o geckodriver caso esteja usando o navegador Firefox, e deixar o executável no mesmo caminho que seu arquivo de execução.
Inicie seu código importando o módulo selenium:
from selenium import webdriver

Para definir qual site você irá abrir, crie uma vaiável que receberá um input:
url = str(input('Site: '))

Feito isso, crie a variável driver que receberá o navegador:
driver = webdriver.Chrome()

Por fim, adicione o método .get() na variável driver colocando a variável url como parâmetro para acessar o site:
driver.get(url)

O código completo fica assim:
from selenium import webdriver

url = str(input('Site: '))
driver = webdriver.Chrome()
driver.get(url)

Para saber mais sobre o módulo Selenium, Clique aqui
","
            0
        ",,,"['\npython', 'selenium\n']"
524524,Criar coluna Média Móvel para varios ativos (python - finanças),"
gostaria se saber como fazer a coluna de média ao lado de cada empresa da lista
import numpy as np
import pandas as pd
import yfinance as yf

empresas1 = ['USIM5.SA','ITSA4.SA','PETR4.SA','WEGE3.SA','BBAS3.SA']
# historico de volume das empresas em colunas
hist_vol = yf.download(empresas1, period='5y')['Volume']

# definindo as coluna das médias
periodo1 = 20

# saida (resultado)
hist_vol

Resultado atual sem tratamento:

Resultado esperado para a saída dos resultados após adição das colunas:

","
Vou sugerir uma abordagem um pouco diferente; ao invés de partir de um dataframe onde cada coluna representa uma empresa, vamos trabalhar com um dataframe onde cada coluna representa um atributo do seu dado, e cada linha representa uma instância dele (nesse caso, podemos pensar na instância como sendo o estado da empresa em um dado ponto do tempo).
Esse tipo de formatação de dados é chamada de dados limpos ou organizados (do inglês tidy data), e facilita muito a nossa vida quando queremos realizar operações dentro de determinados grupos (no seu caso, cálculo da média móvel para cada empresa). Inclusive muitas bibliotecas de Python já estão prontas para trabalhar com dados limpos de forma bastante simples.
Primeiro passo - limpando os dados:
data = hist_vol.reset_index().melt(id_vars=['Date'], var_name='Company', value_name='Volume')
print(data)

#            Date   Company      Volume
# 0    2016-08-26  BBAS3.SA   8260600.0
# 1    2016-08-29  BBAS3.SA   8798800.0
# 2    2016-08-30  BBAS3.SA   8116800.0
# 3    2016-08-31  BBAS3.SA  18848500.0
# 4    2016-09-01  BBAS3.SA   8984100.0
# ...         ...       ...         ...
# 6200 2021-08-20  WEGE3.SA   9713000.0
# 6201 2021-08-23  WEGE3.SA   6477600.0
# 6202 2021-08-24  WEGE3.SA   7439700.0
# 6203 2021-08-25  WEGE3.SA   7436300.0
# 6204 2021-08-26  WEGE3.SA   1345200.0
# 
# [6205 rows x 3 columns]

Viu como ficou mais simples? Cada coluna representa o volume de uma dada empresa em um dado ponto do tempo.
Aqui aplicamos dois métodos sobre o dataframe: reset_index serve para tirar a data do índice do dataframe e transformá-la em uma coluna padrão. Já melt serve justamente para consolidar dados espalhados em diversas colunas - dá para pensar como sendo o oposto de pivotar uma tabela.
Segundo passo - calculando a média móvel:
periodo = 20
data['Mean_Volume'] = data.groupby('Company')['Volume'].transform(lambda x: x.rolling(periodo).mean())
print(data)

#            Date   Company      Volume  Mean_Volume
# 0    2016-08-26  BBAS3.SA   8260600.0          NaN
# 1    2016-08-29  BBAS3.SA   8798800.0          NaN
# 2    2016-08-30  BBAS3.SA   8116800.0          NaN
# 3    2016-08-31  BBAS3.SA  18848500.0          NaN
# 4    2016-09-01  BBAS3.SA   8984100.0          NaN
# ...         ...       ...         ...          ...
# 6200 2021-08-20  WEGE3.SA   9713000.0    8973000.0
# 6201 2021-08-23  WEGE3.SA   6477600.0    9101260.0
# 6202 2021-08-24  WEGE3.SA   7439700.0    9136580.0
# 6203 2021-08-25  WEGE3.SA   7436300.0    8076375.0
# 6204 2021-08-26  WEGE3.SA   1345200.0    7556780.0
# 
# [6205 rows x 4 columns]

Aqui, utilizamos groupby para agrupar os dados por cada empresa, e em seguida transform, que aceita uma função qualquer, aplica a cada grupo e em seguida devolve uma coluna de mesmo tamanho dos dados não-agrupados (em resumo, isso serve para criarmos uma nova coluna nos dados não-agrupados, mas cujos valores foram calculados para cada grupo). E a função que passamos para transform é justamente uma média móvel de janela = periodo.
Como esperado, a média móvel dos volumes nos primeiros pontos de tempo foram NaNs, porque ela só é calculada a partir do momento em que há um número de pontos >= periodo (a forma de calcular da média móvel pode ser configurada - veja a documentação de DataFrame.rolling aqui).
Demonstração - seus dados já estão agrupados, agora basta utilizá-los. Por exemplo, você pode obter a média móvel de uma dada empresa com:
empresa_de_interesse = 'BBAS3.SA'
valores = data.loc[data['Company'] == empresa_de_interesse]['Mean_Volume']
print(valores)

# 0              NaN
# 1              NaN
# 2              NaN
# 3              NaN
# 4              NaN
#            ...    
# 1236    13849830.0
# 1237    14491865.0
# 1238    14894930.0
# 1239    14850910.0
# 1240    14518300.0
# Name: Mean_Volume, Length: 1241, dtype: float64

A biblioteca seaborn funciona muito bem para plotar dados organizados em dataframes limpos:
import seaborn as sns
import matplotlib.pyplot as plt

sns.lineplot(data=data,  x='Date', y='Mean_Volume', hue='Company')
plt.show()

Nesse caso, o argumento hue='Company' faz com que o seaborn separe a plotagem de cada empresa em linhas de cores diferentes automaticamente.
Gráfico gerado:

","
            2
        ",,,['\npython\n']
524484,Django não exibe as imagens do banco de dados após filtrar postagens,"
Eu tenho um blog em django que separa suas postagens por categoria e cada postagem possui uma thumbnail referente a ela. Na página inicial do blog cada imagem é exibida normalmente, mas ao mudar a página para as categorias específicas as imagens desaparecem.
O HTML da página do blog

A página sem a filtragem

A página depois da filtragem

A view da página principal do blog

A view da filtragem por categorias

",,,,,"['\nhtml', 'python', 'django\n']"
524481,Como unificar pelo Python várias linhas repetidas de um arquivo em Excel?,"
Tenho essa planilha no Excel, que é gerado no sistema pelo dataframe pandas

Eu até consigo gerar o arquivo, o problema é que ele gera dessa forma acima. Eu preciso que, por exemplo, na coluna nome e sobrenome, ele unifique os mesmos nomes em uma única linha e, por consequência, os dados ficarão na mesma linha.
O resultado final tem que ser assim:

Meu código gera a planilha, mas não está unificando as linhas. Como posso fazer isso?
Essa é a parte do código que não consigo avançar:
import pandas as pd

resultado = []
mydict = {}
for row in dados:
       if mydict  != {}:
            resultado.append(mydict)
       mydict = {}
       mydict['nome'] = row['nome']
       mydict['sobrenome'] = row['sobrenome']

Se eu tiro esse if do loop for e coloco somente um nome específico, eu consigo que imprima tudo em uma linha, mas se volta para o for, ele imprime todos os nomes e sobrenomes, só que com as informações em linhas separadas.
","
Primeiro você cria um dataframe somente com os dados que se repetem, ou seja, nome e sobrenome (que serão usados como chave primária), e remova as duplicadas, assim:
df = dados[['nome','sobrenome']].drop_duplicates()
display(df)

Resultado:




nome
sobrenome




João
Pedro


Paulo
José




Essa tabela servirá como tabela principal para juntar as outras informações.
Agora para cada coluna de idade, você precisa criar uma tabela com a chave primária da tabela principal e os valores de idade de cada nome, removendo as linhas que contém valores nulos com o método .dropna(axis=0), assim:
for i in range(2,5):  # 2,5 são os indíces das colunas com as idades
  temp = dados.iloc[:,[0,i]].dropna(axis=0)  # Recebe a coluna nome e a coluna de idade
  df = pd.merge(df, temp)

Na linha

df = pd.merge(df, temp)

estamos mesclando nossa tabela principal com a tabela temporária que contém os valores da coluna de idade.
O resultado final retorna sua tabela sem os valores nulos e duplicados:




nome
sobrenome
Idade_Agosto_2019
Idade_Agosto_2020
Idade_Agosto_2021




João
Pedro
30.0
31.0
32.0


Paulo
José
21.0
22.0
23.0



 ","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
524471,Erro no ambiente de desenvolvimento Flask,"
Criei uma aplicação em Flask, e consigo rodar normalmente executando apenas um flask run, mas quando rodo, aparece que está em ambiente de produção. Quando mudo para o ambiente de desenvolvimento, com $env:FLASK_ENV = ""development"", a aplicação roda, mas recebo um erro sempre que tento fazer uma requisição.
Aqui o meu __init__.py
from flask import Flask

from .views.mfe import mfe
from .extensions import cors

def create_app(config_file='settings.py'):
    app = Flask(__name__)

    app.config.from_pyfile(config_file)

    cors.init_app(app)

    app.register_blueprint(mfe)

    return app

E aqui um exemplo de uma view:
mfe = Blueprint('mfe', __name__, url_prefix='/cfe')

@mfe.route('/emissao', methods=['POST'])
def create():
    return 'Hello World!'

O erro recebido é o seguinte:
127.0.0.1 - - [25/Aug/2021 13:38:20] ""POST /cfe/emissao HTTP/1.1"" 500 -
    Traceback (most recent call last):
  File ""C:\Users\Livia\Documents\my-project\env\Lib\site-packages\flask\cli.py"", line 354, in __call__
    self._flush_bg_loading_exception()
  File ""C:\Users\Livia\Documents\my-project\env\Lib\site-packages\flask\cli.py"", line 342, in _flush_bg_loading_exception
    raise exc_info
TypeError: exceptions must derive from BaseException
127.0.0.1 - - [25/Aug/2021 13:38:21] ""GET /cfe/emissao?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1"" 200 -
127.0.0.1 - - [25/Aug/2021 13:38:21] ""GET /cfe/emissao?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1"" 200 -
127.0.0.1 - - [25/Aug/2021 13:38:21] ""GET /cfe/emissao?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1"" 200 -
127.0.0.1 - - [25/Aug/2021 13:38:21] ""GET /cfe/emissao?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1"" 200 -

","
Pelo que andei pesquisando no repositório do flask, esse parece ser um um problema na própria biblioteca mas que foi corrigido.
Um usuário abriu o um ticket em Maio:
https://github.com/pallets/flask/issues/4096

Exceptions are sometimes replaced with ""TypeError: exceptions must derive from BaseException""

traduzindo:

Exceptions são as vezes substituídas por ""TypeError: exceptions must derive from BaseException""

Ou seja, essa exceção que você está vendo agora talvez não seja a exceção que realmente está acontecendo no seu código, pois ela pode ter sido substituída por conta desse erro na biblioteca.
Aqui está a nota de correção que foi realizada dia 22 de junho e foi feito o merge na branch master:

fix raising error during cli lazy loading #4169

https://github.com/pallets/flask/pull/4169/commits/aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a
No entanto a solução do erro só estará disponível na versão 2.0.2 do flask que ainda não foi lançada:

Ainda assim você pode fazer o download da versão mais recente do código fonte do flask com o pip. Primeiro você deve desinstalar a versão atual do flask com:
pip uninstall flask
depois instalar do repositório do git:
pip install git+https://github.com/pallets/flask.git
repare que o pip pega o código da master com todos os últimos commits. Mas se você desejar, você pode pegar apenas até o commit da correção que você precisa, que é a aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a:
para isso basta rodar o comando assim:
pip install git+https://github.com/pallets/flask.git@aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a
Após isso acredito que quando você rodar o flask será apresentada a exceção original.
","
            0
        ",,,"['\npython', 'flask\n']"
524465,Erro do pygame ao usar o key.get_pressed(),"
Estava testando o pygame, e me deparei com um erro. Fiz um quadrado vermelho aparecer na tela, e fiz o codigo para ele se mover também, configurei o WASD para a locomoção, mas quando execultei o codigo, e apertava as teclas configuradas (WASD) o quadrado não se movia. Então decidi mudar as teclas configuradas pelas setas, quando eu execultei o codigo, estava tudo normal o quadrado estava se movendo da meneira correta com as setas, mas não com o WASD.

Meu codigo com o WASD

import pygame
from pygame.locals import *
import sys
# Iniciando os pacotes do pygame
pygame.init() 
# tela onde passará o jogo
screen = pygame.display.set_mode([800,500]) 

x = 200
y = 200

while True:
    # verificando todos os eventos do usuário
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit() # se o usuário apertar para sair, a janela fecha
        
    screen.fill([0,0,0])
            
   # quadrado vermelho que irá aparecer na tela
    quadrado = pygame.draw.rect(screen, (255,0,0), (x,y,40,40))

    if pygame.key.get_pressed()[K_w]:
        y -= 20
    if pygame.key.get_pressed()[K_s]:
        y += 20
    if pygame.key.get_pressed()[K_a]:
        x -= 20
    if pygame.key.get_pressed()[K_d]:
        x += 20
    
    # atualiza os frames do jogo
    pygame.display.update()


meu codigo com as setas

import pygame
from pygame.locals import *
import sys
# Iniciando os pacotes do pygame
pygame.init() 
# tela onde passará o jogo
screen = pygame.display.set_mode([800,500]) 

x = 200
y = 200

while True:
    # verificando todos os eventos do usuário
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit() # se o usuário apertar para sair, a janela fecha
        
    screen.fill([0,0,0])
            
   # quadrado vermelho que irá aparecer na tela
    quadrado = pygame.draw.rect(screen, (255,0,0), (x,y,40,40))

    if pygame.key.get_pressed()[K_UP]:
        y -= 20
    if pygame.key.get_pressed()[K_DOWN]:
        y += 20
    if pygame.key.get_pressed()[K_LEFT]:
        x -= 20
    if pygame.key.get_pressed()[K_RIGHT]:
        x += 20
    
    # atualiza os frames do jogo
    pygame.display.update() 

Até o momento não tentei nada, pois não tenho ideia do que tentar. Agradeço.
","
você precisa criar uma variavel com o pygame.key.get_pressed()
comandos = pygame.key.get_pressed()
if comandos[pygame.K_w]: ###key pode ser qualquer tecla como K_a K_1 etc
    y -= 20

","
            0
        ",,,"['\npython', 'pygame\n']"
524445,Como imprimir texto na mesma linha em Python,"
    list = open(""list.txt"", ""w"")
    list = list.readlines()
    for i in list:
       print i

Gostaria de Imprimir o valor de i na mesma linha, sem ficar descendo. Tipo substituindo a palavra atual.
","
Uma solução é utilizar o parâmetro end da função print igual à \r. Isso faz com que o ponteiro volte ao início da mesma linha; porém isso não faz com que a linha seja apagada. As linhas iriam se sobrescrever uma a uma e se ocorrer de uma linha tentar sobrescrever uma linha maior que ela, caracteres lixos ficariam sendo exibidos. Para certificar-se que isso não ocorra, basta limpar a linha atual com o caractere \033[k. Veja o exemplo:
Considerando um arquivo frases.txt com o seguinte conteúdo:
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Integer vitae mi interdum mauris ultricies venenatis sit amet eget sapien.
Proin sit amet ante ornare, ornare lectus sit amet, faucibus velit.
Nulla ac risus sit amet tortor vulputate congue et id urna.
Proin et nisl non dui tristique pretium.
Etiam fringilla erat id ullamcorper euismod.
Donec accumsan dolor nec nibh dictum gravida.
Etiam sed lorem non leo condimentum dictum.
Donec posuere nisl in imperdiet molestie.
Donec vel metus sollicitudin, interdum odio non, egestas neque.
Donec eleifend odio laoreet consequat ornare.
Vestibulum rutrum metus nec sollicitudin condimentum.

Fazemos:
import time

# Abre o arquivo frases.txt como leitura:
with open(""frases.txt"") as frases:

    # Percorre as linhas do arquivo:
    for frase in frases:

        # Limpa a linha atual, exibe a linha, retorna o ponteiro para o início:
        print(""\033[K"", frase.strip(), end=""\r"")

        # Tempo de 1s para poder visualizar a frase:
        time.sleep(1)

Importante: exibimos o valor de frase.strip(), pois a frase possuirá um caractere \n no seu final e se o mantivermos, cada linha do arquivo será exibida em uma linha diferente do terminal. Com o método strip removemos este caractere.
Veja funcionando:

","
            13
        ","
Altere o seu print(i) para 
print(i, end="" "")

Para Python 2 utilize:
print i,

","
            5
        ",['\npython\n']
524431,Como remover um valor de um conjunto que está dentro de um dicionário de conjuntos?,"
Por exemplo, se eu tiver um dicionário assim:
{
  x: { 1, 2, 3 },
  y: { 2, 3, 4 },
  z: { 1, 5, 6 }
}

Como faço pra remover todas as ocorrências de 2?
","
Basta iterar pelos conjuntos, e remover o 2 de cada um.
dicionario = dict()

# Iniciando valores no dicionário
dicionario['x'] = set([1, 2, 3])
dicionario['y'] = set([2, 3, 4])
dicionario['z'] = set([1, 5, 6])

# Para cada conjunto...
for conjunto in dicionario.values():
    # Remova o valor 2
    conjunto.discard(2)

# Mostrar resultado
print(dicionario)

Eu utilizei o método discard em detrimento de remove, pois remove lança erro quando o item não pertence ao conjunto. Já o discard não faz nada, silenciosamente, que é o comportamento que desejamos.
","
            1
        ",,,['\npython\n']
524250,É possível estabelecer diretório para download com urllib.request.urlretrieve?,"
Estou tentando definir um diretório padrão de encaminhamento do download após o uso do urllib.request.urlretrieve, para evitar ter que mover o arquivo com os e shutil.
Alguém sabe se é possível e como fazer?
",,,,,"['\npython', 'python-3.x', 'urllib\n']"
524235,Imprimir valor de um dicionário,"
Tenho essa questão pra resolver, preciso exibir a nota do primeiro nome na ordem de chama, mas só consigo imprimir a Key, a questão é essa:
Faça um programa em python que solicita que o usuário digite nomes e notas de 10 estudantes. A seguir, o programa deverá mostrar a nota do(a) estudante que aparece primeiro no caderno de chamada.
meu código até agora:
dicionario = {}
for x in range(0, 3):
    nome = input(""\nInsira o nome do aluno: "")
    nota = float(input(""Insira a nota do aluno: ""))
    dicionario[nome] = nota

newdict = sorted(dicionario)

print(newdict[0])

como faço pra imprimir apenas o valor da primeira key do dicionario?
","
Na linha 7, onde você cria a variável newdict que recebe o dicionário ordenado, você está alocando ele como uma lista, por exemplo:
dicionario = {'Felipe': 4.0, 'Joao': 5.0, 'Ana': 7.8}
newdict = sorted(dicionario)
print(newdict)

Resultado:
['Ana', 'Felipe', 'Joao']

O correto seria você adicionar o método .items() na frente do dicionário, veja:
dicionario = {'Felipe': 4.0, 'Joao': 5.0, 'Ana': 7.8}
newdict = sorted(dicionario.items())
print(newdict)

Resultado:
[('Ana', 7.8), ('Felipe', 4.0), ('Joao', 5.0)]

Então mostrando o primeiro item do seu dicionário com newdict[0] ele retornará a nota do(a) estudante que aparece primeiro no caderno de chamada.
Por fim, o seu código fica assim:
dicionario = {}
for x in range(0, 3):
    nome = input(""\nInsira o nome do aluno: "")
    nota = float(input(""Insira a nota do aluno: ""))
    dicionario[nome] = nota

newdict = sorted(dicionario.items())

print(newdict[0][1])

Veja mais sobre dicinários em python aqui!
","
            0
        ",,,"['\npython', 'python-3.x', 'dicionário\n']"
524225,Excluindo item de uma lista (dicionário) - Python,"
Eu possuo um dicionário chamado alunos, que funciona relacionando o nome de um aluno e uma lista de notas, por exemplo:
alunos = {'Fulano': [2, 4, 10, 5.5]}

Preciso excluir o primeiro valor dessa lista, tendo o nome do aluno como parâmetro mas não consigo fazer essa operação.
","
Para remover o primeiro elemento de uma lista, utilize o método remove passando o primeiro valor da lista como parâmetro.
alunos = {'Fulano': [2, 4, 10, 5.5]}
alunos['Fulano'].remove(alunos['Fulano'][0])
print(alunos['Fulano'])

Output:
[4, 10, 5.5]

alunos['Fulano'] refere-se à lista de notas do nome do aluno, alunos['Fulano'][0] refere-se ao primeiro valor da lista.
","
            1
        ",,,['\npython\n']
524222,Problema com modulos python,"
Eu estou tentando rodar um condigo simples que é constituído por uma requisição.
So que sempre que tento rodar ele no meu ubuntu 20 ele retorna o seguinte erro
  File ""autobump.py"", line 1, in <module>
  import requests
  ImportError: No module named requests

Usando pip list ele retorna que esta instalado

import requests
import time

while 1:
payload = {
    'content': '!d bump'
}

header = {
    'authorization': '*'
}

r = requests.post("""", data=payload, headers=header)

print('bumped')
time.sleep(7260)

","
Essa confusão é comum quando temos instaladas mais de uma versão do python ou utilizamos uma virtualenv para empacotar bibliotecas necessárias para determinados projeto. Caso você possua mais de uma versão do python, então isso significa que você tem um conjunto diferente de bibliotecas para cada uma dessas versões.
Agora vamos a uma das possíveis causas:
Dependendo da IDE que você esteja utilizando, ela pode possuir configurações para indicar qual interpretador (binário da versão do python) você deseja utilizar, como é o caso do pycharm que eu utilizo.


Nessa aba é possível ver os interpretadores que a IDE reconheceu por padrão ou eu adicionei. Com isso sugiro você verificar se a IDE aponta para o interpretador correto (que possui a biblioteca requests e que seja a versão do python que você deseja utilizar). Caso não esteja aparecendo o interpretador que você deseja utilizar, então é necessário adicionar pelo botão add interpreter.
Eu recomendo também que você passe mais informações com relação ao ambiente que você está utilizando, se está rodando o programa direto por um botão da IDE, se você realmente possuí mais de uma versão do python, ou se está utilizando virtualenv. Se você conseguir passar esse tipo de informação, facilitará para que te ajudemos a resolver o problema.
","
            0
        ",,,"['\npython', 'ubuntu\n']"
524113,Socorro com esse enigma terrível para um iniciante! [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Quero identificar os números impares, porem deixando com uma formatação no print sem espaços em branco
EX:""Esses são os ímpares:(1, (), 3, '')"" quero que mostre assim:
""Esses são os ímpares: 1, 3,""
Segue o código para melhor compreensão:
soma=0
a=int(input('Diga um número:\n'))
a1=int(input(''))
a2=int(input(''))
a3=int(input(''))
if a%2==1:
    soma+=a
    b=a
else:
    soma+=0
    b=()
if a1%2==1:
    soma+=a1
    b1=a1
else:
    soma+=0
    b1=()
if a2%2==1:
    soma+=a2
    b2=a2
else:
    soma+=0
    b2=()
if a3%2==1:
    soma+=a3
    b3=a3
    
else:
    soma+=0
    b3=('')   
print(f'Soma dos ímpares: {soma}')

print(f'Esses são os ímpares:{b,b1,b2,b3}')

","
Pra ser sincero, o código está bem confuso... Vou tentar passar algumas dicas e demonstrar como eu faria. De logo, está com uma lógica bacana, mas é bom evoluir mais algumas aulas pra ver o básico (condicionais e repetições).
Se você colhe 4 variáveis, na verdade não precisa dar 1 if para cada uma... você deve utilizar um laço de repetição para facilitar o seu código (pode usar o FOR se souber quantas vezes precisa repetir e o WHILE se não tiver certeza).
Outra coisa que você deveria utilizar seria uma lista para guardar os números ímpares, através do comando append.
Tentarei colocar um código simples que você conseguirá ver várias coisas novas (lista e laço). Nesse caso você consegue facilitar muito o código deixando-o da seguinte forma:
impares = []
for numero in range(0, 4):
num = int(input('Digite um numero: '))
if num % 2 == 1:
    impares.append(num)
    print(f'{num} é um número impar')
else:
    print(f'{num} não é um número impar.')
print(impares)

","
            1
        ",,,['\npython\n']
524093,Erro ao usar decorator em um método setter,"
Eu estou tentando implementar um código simples em Python para praticar o uso de decorators em conjunto com métodos assessores (Getters e Setters), porém estou obtendo um erro.
O código é o seguinte:
class Pessoa():
    def __init__(self, anos):
        self._idade = 0 
        self.idade = anos

    @idade.setter
    def idade(self, anos):
        self._idade = anos

alguem = Pessoa(18)


E o erro que está ocorrendo é o seguinte:
NameError: name 'idade' is not defined

Não entendi, pois 'idade' existe sim!
Eu pesquisei na internet por exemplos de uso de decorators em conjunto com métodos assessores e encontrei alguns códigos, porém não consegui perceber onde estou errando.
Existe uma forma de implementar somente o método Setter com decorators?
","
Ao atribuir um _ ou __ (private e protected) você deve tratar os atributos usando um getter antes de passá-lo pelo setter. Essa atribuição é realizada através do @property, seguido do método que retorna o atributo devidamente tratado.
Outros aspectos importantes:

não iniciar duas variáveis de mesmo nome, diferenciadas tão somente pelo atributo private e protected (não é, de nenhuma forma, uma boa prática).
Ao atribuir uma classe você não deve atribuir o (), isso é uma tarefa do iniciador que você define abaixo. O jeito correto de definir a classe é tão somente ""class Nome:""

Seu código seria corrigido da seguinte forma:
class Pessoa:
    def __init__(self, anos):
        self._idade = anos

    @property
    def idade(self):
        return self._idade

    @idade.setter
    def idade(self, anos):
        self._idade = anos

alguem = Pessoa(18)
","
            0
        ",,,"['\npython', 'python-3.x', 'orientação-a-objetos', 'getters-setters', 'decorator-pattern\n']"
524058,Como clicar no botão SEGUIR do Instagram com Selenium usando python,"
O Instagram está cada vez mais dificultando o uso da automação em seu site.
Esse código clica no primeiro botão com o texto 'Seguir'
Você pode usar isso pra localizar e clicar:
    from selenium import webdriver
    from selenium.webdriver.common.by import By
    driver = webdriver.Firefox(executable_path=r""./geckodriver.exe"")
    url=""https://www.instagram.com/PERFIL/""
    driver.get(url)

    button_follow=driver.find_elements(By.CSS_SELECTOR, 'button')

    print(len(button_follow))#Conta quantos botões encontrou

    print(button_follow[0].text)#Imprime o nome que está no botão no índice [0] da lista

    #button_follow.click()# Caso queira clicar sem conferir o texto

    if button_follow[0].text == 'Seguir': #Se o texto for 'Seguir'
        button_follow[0].click()#Clica no botão
        print('Clicou') 

Passei 5 horas pra fazer esse método acima.
Tinha usado todos esses abaixo e não encontrava:
button_follow =driver.find_element_by_xpath(""//*[@id='react-root']/section/main/div/header/section/div[1]/div[2]/div/div/div/span/span[1]/button"").click();
button_follow = driver.find_element_by_xpath('//button[contains(text(), ""Seguir"")]')
button_follow = driver.find_element_by_css_selector('button')
print(button_follow.text)
if button_follow.text == 'Seguir':
    button_follow.click()
Follow_Button = driver.find_element_by_xpath(""//*[text()='Seguir']"")
Follow_Button.click()
seguir = driver.find_element_by_css_selector('button')
seguir.click

driver.find_element_by_xpath('source=follow').click()

followButton = driver.find_element_by_tag_name('button')
print(followButton.text)
if followButton.text != 'Following': 
        followButton.click()
        time.sleep(2)
else:
    print('Não achou')
driver.find_element_by_xpath('Seguir').click()
driver.find_element_by_xpath(""//*[@aria-label='{}']"".format('Seguir')).click()
#driver.find_element_by_xpath(""/html/body/div[1]/section/main/div/header/section/div[1]/div/div/div/a/button"").click() 
#driver.find_element_by_css_selector('button._5f5mN.jIbKX._6VtSN.yZn4P').click()
#driver.find_element_by_xpath(""//button[text()='Seguir']"").click()
#driver.find_element_by_xpath(""//button[contains(text(), 'Seguir')]"").click()
#find_element_by_xpath('//button[text()=""Seguir""]').click()
#wb2 = driver.find_element(By.XPATH(""/html/body/div[1]/section/main/div/header/section/div[1]/div/div/div/a/button""))
#wb2.click()
sleep(10)

","
Utilizo a opção find_element_by_class_name para achar o botão e em seguida o código o aperta.
from selenium import webdriver
driver = webdriver.Firefox()
url = ""https://www.instagram.com/PERFIL/""
driver.get(url) #Abre a url.
followButton = driver.find_element_by_class_name(""sqdOP.L3NKy.y3zKF"") #Melhor opção na minha opinião: acha o botão pelo nome de sua classe.
followButton.click() #Clica no botão.
input(""Botão apertado, aperte enter para fechar a janela."") #Espera o usuário apertar enter e fechar o navegador e o código.
driver.close()

Testei e funcionou.
","
            -4
        ",,,"['\npython', 'selenium', 'button\n']"
524056,Todo atributo precisa de métodos assessores? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Jeito pythonico de definir setters e getters

                                (3 respostas)
                            


Getters e setters são uma ilusão do encapsulamento?

                                (4 respostas)
                            


Getters e Setters só podem ""andar"" juntos?

                                (2 respostas)
                            

Fechada há 8 meses.



Estou aprendendo POO em Python e fiquei em dúvida se devo usar os métodos assessores para todos os atributos que eu incluir em uma classe. Por exemplo, seu eu criar uma classe com 20 atributos, nos quais serão lidos e escritos valores, eu deveria, por convenção, criar 40 métodos assessores (20 Getters + 20 Setters)?
","
Na verdade, não...
Os getters e setters são normalmente utilizando quando há encapsulamento atribuído à determinada variável/método. Se não há encapsulamento não vejo razão necessária para o tratamento do dado.
","
            0
        ","
Em POO um dos pilares é  o encapsulamento dos atributos e portanto,  acredito que sim.
Sou novato tbm, mas lembrando que os métodos  gets e setters referem-se respectivamente ao acesso e modificação  dos atributos de uma determinasa classe uma vez que colocados em privado(encapsulados).
Portanto, se vc pretende acessa-los quando  criar instancias desse objeto, há  necessidade sim de criar metodos acessores e modificadores.
","
            -3
        ","['\npython', 'python-3.x', 'orientação-a-objetos\n']"
524010,Copiar texto do Wikipédia em Python,"
Olá, eu queria saber como eu posso copiar o texto de uma página no wikipédia, podendo ser apenas o primeiro parágrafo sobre o assunto
Aqui está o que eu já fiz:
from selenium.webdriver.common.keys import Keys 
print('Pesquise aqui o que você quiser:') 
var1 = input() 
navegador = webdriver.Chrome() navegador.get('https://pt.wikipedia.org/wiki/%s' %var1)

","
Olá, você pode utilizar BeautifulSoup junto com requests para fazer esse trabalho:
O código procura todo o conteúdo da página via URL e retorna ela.
Logo depois ele procura a div ""mw-parser-output"" e depois retorna o conteúdo html dela.
Por fim, ele lê esse conteúdo e procura a tag <p> retornando seu valor.
from bs4 import BeautifulSoup as bs
import requests

r = input(""Search Wiki: "")

u = requests.get(""https://pt.wikipedia.org/wiki/{}"".format(r)).text
v = bs(u, ""html.parser"")
w = v.find(""div"", {""class"": ""mw-parser-output""})

x = bs(w.decode(), ""html.parser"").find_all(""p"")[0]
print(x.text)

","
            -1
        ",,,"['\npython', 'selenium', 'automatização\n']"
523992,Migrations do meu app django não são aplicadas,"
Criei o arquivo models.py no meu app, criei todos os models, adicionei o appConfig no INSTALLED_APPS mas quando eu uso o manage.py migrate myapp ele não realiza nenhuma alteração no banco de dados mysql:

Podem me ajudar?
","
Pela maneira que descreveu o problema você criou o novo app (utilizando a nomenclatura do Django) myapp na ""mão"".
Quando o correto seria utilizar o comando disponibilizado pelo Django.
python manage.py startapp <nome_do_modulo>

Que você deve utilizar da próxima vez.
Para resolver este problema em específico você deve ""copiar"" a estrutura que seria gerada ao executar o comando citado acima.
Especificamente o fato de não gerar as migrations se deve ao fato de não haver o diretório migrations/, além disso dentro do diretório migrations deve haver um arquivo __init__.py.
Para resolver o seu problema portando basta criar esta estrutura citada, após isso será possível executar as migrations.
Além disso para gerar as migrations você deve executar o comando:
python manage.py makemigrations

Pois ele vai gerar o diff (verificar a estrutura de tabelas presentes hoje em seu banco de dados, e gerar a diferença (incremento) baseada no que existe nos models).
Segue a referência sobre como este comando funciona.
","
            1
        ",,,"['\nmysql', 'python', 'django', 'migrations\n']"
523984,Duvida em um Exercício em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Estou com duvida em um exercício.


O programa devera ler dois inteiros chamados de Min e Max. Min pode ser qualquer valor e Max, obrigatoriamente, deve ser maior que min. Em
seguida, preencher uma lista com todos os valores divisíveis por 7
contidos no intervalo fechado [Min,Max]. Exibir a lista resultante na
tela.


Eu comecei mais não consigo passar disto:
print('''Inicio do Programa''')

min = int (input('Digite um numero Minimo inteiro: '))
max = int (input('Digite um numero Maximo inteiro: '))

L = []
qtd = 0

while min and max / 7:

","
O melhor para seu problema é usar a função range(minValue, maxValue, step), pois você pode iterar perfeitamente como a descrição pede, e para verificar se um número é divisível por 7, basta usar o operador % de resto de divisão inteira, caso o resto da divisão seja 0 adicionar o valor a lista, usando o método append(value).
print('''Inicio do Programa''')

minValue = int (input('Digite um numero Minimo inteiro: '))
maxValue = int (input('Digite um numero Maximo inteiro: '))

L = []

for i in range(minValue, maxValue + 1, 1):
    if (i % 7 == 0):
        L.append(i)

print(L);

Outra opção também seria usando range de múltiplos:
minValue = int(input('Digite um numero Minimo inteiro: '))
maxValue = int(input('Digite um numero Maximo inteiro: '))

print(*range(minValue + (7 - minValue % 7), maxValue + 1, 7))

É mais compacto porem é menos legível.
Funciona assim:
Primeiro múltiplo a partidor valor mínimo = Min + (7 - Min % 7)
(7 - Min % 7) é quanto falta a partir do mínimo para o próximo múltiplo.
O salto (step) é igual a 7 por que temos a garantia de que o primeiro é um múltiplo.
maxValue + 1 porque a função range vai de 0 até maxValue - 1.
","
            3
        ",,,['\npython\n']
523957,Python - Como calcular o antecessor de um número?,"
Elabore uma função chamada antecessor que receba como parâmetro único um número inteiro a  e que imprima o seu antecessor.
Entrada
A entrada consiste de uma única linha contendo o número inteiro da entrada a (10^-5<a<10^5).
Saída
Imprima em uma única linha o antecessor de a.
Eu fiz assim, mas não tá dando certo.
def antecessor(a):
    ant = a - 1
    print(ant)
    
a = int(input())
antecessor(a)

","
Fica difícil entender sem o código de erro, porém vou tentar ajudar:

Você poderia utilizar Loop While assim:

def read_input(num):
    while True:
        try:
            c = int(input(num))
        except (ValueError, TypeError):
            print(""\033[31mERRO! Por favor digite um numero inteiro...\033[m"")
            continue
        except (KeyboardInterrupt):
            print(""\033[31mEntrada de valor interrompida, por favor, reinicie o programa\033[31m"")
            break
        else:
            return c


while True:
    numero = read_input('Digite um numero: ')
    antecessor = numero - 1
    print(f'O antecessor de seu numero é {antecessor}')

Neste exemplo eu também utilizei a função criada para tratar erros caso o usuário digite uma variavel diferente de int, read_input(). Mas ela não precisa ser utlizada, como neste exemplo:
while True:
    numero = int(input('Digite um numero: '))
    antecessor = numero - 1
    print(f'O antecessor de seu numero é {antecessor}')

Basicamente o loop while está sendo utilizado apenas para manter o programa rodando, mas ele não é necessário:
numero = int(input('Digite um numero: '))
antecessor = numero - 1
print(f'O antecessor de seu numero é {antecessor}')


Utilizando a criação de funções

def calc_antecessor():
    numero = int(input('Digite um numero: '))
    antecessor = numero - 1
    print(f'O antecessor de seu numero é {antecessor}')


calc_antecessor()

Você também poderia utilizar aqui o loop while, o colocando antes de chamar a função
Você poderia juntar tudo, como a criação de funções, loop while e tratamento de erro desta forma:
def read_input(num):
    while True:
        try:
            c = int(input(num))
        except (ValueError, TypeError):
            print(""\033[31mERRO! Por favor digite um numero inteiro...\033[m"")
            continue
        except (KeyboardInterrupt):
            print(""\033[31mEntrada de valor interrompida, por favor, reinicie o programa\033[31m"")
            break
        else:
            return c

def calc_antecessor():
    numero = read_input('Digite um numero: ')
    antecessor = numero - 1
    print(f'O antecessor de seu numero é {antecessor}')

while True:
    calc_antecessor()

","
            1
        ","
a = int(input('Digite um número: '))
b = a - 1
print('O antecessor de ', a, ' é ', b)

Seria isso?
","
            0
        ",['\npython\n']
523955,Como Fazer um scraping com Python para comparar preços em um site de compras?,"
Comparando o preço de um mesmo produto a cada minuto e me notificando quando o valor cair 50%. Usei um While >= mas está retornando um erro indicando que não pode usar >= entre str e int.
Ele acaba retornando o preço como uma string.
Vou mostrar o código como está:
https://github.com/ViniciusCavalcante2000/Scraping-de-pre-os/blob/main/scraping%20de%20pre%C3%A7os%20Python
from selenium import webdriver
from time import sleep
from selenium.webdriver.chrome.options import Options


chrome_options = Options()
chrome_options.add_argument('--hedless')
driver = webdriver.Chrome()
driver.get('https://www.magazineluiza.com.br/ssd-480gb-kingston-sata-rev-3-0-leituras-500mb-s-e-gravacoes-450mb-s-a400/p/220920100/in/ssdi/')
sleep(3)
produto = driver.find_element_by_xpath('/html/body/div[3]/div[5]/div[1]/div[2]/h1').text
preçoatual = driver.find_element_by_xpath('/html/body/div[3]/div[5]/div[1]/div[3]/div[2]/div[4]/div/div[2]/div/span[2]').text
preçoalvo = 300

while preçoatual >= preçoalvo:
    print(preçoatual)
    sleep(1)
print('preço alvo atingido')



____________________________________________________________________________






Código alterado após as sugestões do amigo:

from selenium import webdriver
from time import sleep
from selenium.webdriver.chrome.options import Options


chrome_options = Options()
chrome_options.add_argument('--hedless')
driver = webdriver.Chrome()
driver.get('https://www.magazineluiza.com.br/ssd-480gb-kingston-sata-rev-3-0-leituras-500mb-s-e-gravacoes-450mb-s-a400/p/220920100/in/ssdi/')
sleep(3)
produto = driver.find_element_by_class_name('header-product__title').text
preçoatual = driver.find_element_by_class_name('price-template__text').text
preçoatual = preçoatual.replace(',', '.')
preçoatual = float(preçoatual)
preçoalvo = 300

print(produto)
while preçoatual > preçoalvo:
    print(preçoatual)
    driver.get('https://www.magazineluiza.com.br/ssd-480gb-kingston-sata-rev-3-0-leituras-500mb-s-e-gravacoes-450mb-s-a400/p/220920100/in/ssdi/')
    sleep(3)
    produto = driver.find_element_by_class_name('header-product__title').text
    preçoatual = driver.find_element_by_class_name('price-template__text').text
    preçoatual = preçoatual.replace(',', '.')
    preçoatual = float(preçoatual)
    sleep(5)
print('preço alvo atingido')

","
Se o problema é apenas o valor estar como string, basta converte-lo para float.
preçoatual = driver.find_element_by_xpath('/html/body/div[3]/div[5]/div[1]/div[3]/div[2]/div[4]/div/div[2]/div/span[2]').text

# Para isso será necessário remover os caractere ""."" que estiverem na variável e
# depois pegar os caracteres "","" e substituir por ""."", assim será possível fazer a
# conversão sem gerar erros.
preçoatual = preçoatual.replace('.', '')
preçoatual = preçoatual.replace(',', '.')
preçoatual = float(preçoatual)

No entanto pelo que verifiquei no link do site, você está pegando o título do produto ao invés do valor. Então para facilitar e dar mais certeza que você está pegando o elemento correto, recomendo você pegar o valor pela classe dele. Para isso basta utilizar a função find_element_by_class_name() do selenium. A classe do elemento que possui o preço do produto é price-template__text.

então basta substituir:
driver.find_element_by_xpath('/html/body/div[3]/div[5]/div[1]/div[3]/div[2]/div[4]/div/div[2]/div/span[2]').text

Por:
driver.find_element_by_class_name('price-template__text').text

link para a função locate_element_by_class_name():
https://selenium-python.readthedocs.io/locating-elements.html#locating-elements-by-class-name
Agora outro detalhe importante para te informar, é que a forma que você esta comparando, acredito que esteja incorreta. Você está armazenando uma única vez o preço do produto e logo depois você usa ele para comparação no bloco while. Sendo assim você está comparado o mesmo preço do produto toda a vez. Para contornar isso, sugiro que você troque o operador do while e depois insira uma função para atualizar os dados da página e fazer a consulta do preço dentro do while, assim o valor na variável será sempre atualizado.
","
            0
        ",,,"['\npython', 'web-scraping', 'comparação\n']"
523918,Adicionar um número a outro [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Eu queria saber se alguém sabe como adicionar um número a outro em Python, por exemplo no código que estou a fazer:
Escreva um programa em python que faça o seguinte:
1 * 8 + 1 = 9

12 * 8 + 2 = 98

123 * 8 + 3 =987

os valores do primeiro termo da multiplicação e o resultado devem ser calculados pelo programa
","
Certo, se eu entendi corretamente, o seu desejo seria ""concatenar"" os contadores do for para multiplicar por oito. No caso isso é possível sim, basta você converter o valor do contador para um string e concatenar com o contador anterior. Para isso você precisará de uma variável que a cada loop fará a concatenação. Segue um exemplo:
multiplicador = ''
for i in range(1, 4):
    # aqui você deve concatenar a string multiplicador com o contador i
    # como i é do tipo inteiro, você deve converte-lo para string com a função str()
    multiplicador += str(i)
    
    # agora para fazer o calculo é necessário converter a variável multiplicador
    # para um tipo inteiro com a função int()
    print(f'{multiplicador} * 8 + {i} = {int(multiplicador) * 8 + i}')

Assim o resultado será
1 * 8 + 1 = 9

12 * 8 + 2 = 98

123 * 8 + 3 = 987

","
            0
        ",,,['\npython\n']
523913,Estou com um problema no Terminal do VsCode,"
v = float(input('Valor: R$ '))
b = 5.33
print(f'U$ {v * b:.2f}')

Quando eu faço algum código com input, da um erro no terminal após algum tempo sem digitar algo.
Erro: invalid literal for int() with base ou could not convert string to float

","
Você provavelmente está digitando um valor com a "","" (vírgula) como separador decimal ex: 1,23, experimente digitar o número com a casa decimal separada por ponto ""."" ex: 1.23.
Outra alternativa é adicionar um tratamento para o input antes de converter para float com o método .replace(), substituindo a vírgula pelo ponto:
v = float(input('Valor: R$ ').replace("","", "".""))
b = 5.33
print(f'U$ {v * b:.2f}')

","
            0
        ",,,"['\npython', 'visual-studio-code\n']"
523907,Como faço para uma janela não ser fechada? PySimpleGUI,"
Preciso desativar as opções da janela feita no PySimpleGUI e possibilitar o fechamento somente se acertar a senha numa caixa de texto.
meu codigo:
sg.theme('DarkRed')
layout = [
    [sg.Text('Senha'), sg.Input(key='senha', password_char='*')],
    [sg.Button('Liberar')]
]


janela = sg.Window('', layout)

while True:
    eventos, valores = janela.read()
    if eventos == sg.WINDOW_CLOSED:
        Mbox('Titulo', 'Você não pode fechar', 0)
        continue     
    if eventos == 'Liberar':
        if valores ['senha'] == '123456':
            Mbox('Titulo', 'Liberado', 0)
            break
        
        else:
            Mbox('Titulo', 'Senha errada', 0)

Abaixo do sg.WINDOW_CLOSED eu já tentei colocar um continue ou um pass mas não funcionou.
Alguma forma de desativar a função, esconder ou fazer o programa abrir toda hora que for fechado?
","
Para fazer isto, você pode adicionar o método enable_close_attempted_event=True na sua variável janela, exemplo:
janela = sg.Window('', layout, enable_close_attempted_event=True)

O recurso retornará um evento de confirmação de tentativa de fechamento da janela ao invés de fechá-la, exibindo uma mensagem personalizada e a janela continuará ativa. Então, adicione a verificação do evento na tentativa de fechamento da janela:
if eventos in (sg.WINDOW_CLOSED, sg.WINDOW_CLOSE_ATTEMPTED_EVENT):
   Mbox('Titulo', 'Você não pode fechar', 0)

Não se esqueça de terminar seu código com janela.close() para não gerar nenhum erro ao finalizar a estrutura de repetição e fechar a janela.
Mais sobre o método Window Close Confirmation Aqui
","
            1
        ",,,['\npython\n']
523884,Como criar uma classe que contenha uma lista de objetos de uma classe pai?,"
Preciso criar uma classe pessoa que terá os atributos (nome, idade) e uma classe grupo que conterá uma lista de objetos da classe pessoa. Entretanto não sei como fazer a segunda classe... Alguém poderia me ajudar?
class Pessoa:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade

Como eu poderia criar a classe ""grupo""?
","
Você precisa trabalhar com herança neste seu caso é mais facil criar uma classe Grupo contendo uma lista de pessoas e adicionando val
class Pessoa:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade


class Grupo:
    def __init__(self):
      self.list_pessoas = []
      pass
    
    def addPessoa(self,obj_pessoa):
      assert isinstance(obj_pessoa,Pessoa), ""Tem que ser uma classe do tipo pessoa""
      self.list_pessoas.append(obj_pessoa)
    
    def printPessoas(self):
      for p in self.list_pessoas:
        print(f'{p.nome} --> {p.idade}')

#Crio cada pessoa
pessoa1 = Pessoa('joao',12)
pessoa2 = Pessoa('maria',15)
pessoa3 = Pessoa('pedro',18)

grupo = Grupo()
#Adiciono a lista dentro da classe grupo
grupo.addPessoa(pessoa1)
grupo.addPessoa(pessoa2)
grupo.addPessoa(pessoa3)

#Printo todas as pessoas na tela
grupo.printPessoas()

# joao --> 12
# maria --> 15
# pedro --> 18


","
            0
        ",,,"['\npython', 'orientação-a-objetos', 'lista', 'objetos\n']"
523856,"Pegar informações, abrir janela e só liberar a janela quando colocar uma senha. Python","
Vou simular um ataque na minha empresa para identificar os usuários mais vulneráveis para intensificar o treinamento com objetivo de evitar ransomware e virus do tipo.
Estou tentando criar um programinha .exe que pegue as informações do computador (nome da maquina, nome do usuário, sistema operacional e a data atual) e enviar por email. Após isso, queria que abrisse uma janela com algumas mensagens repetitivas para impossibilitar o usuario continuar trabalhando e que só libere com uma senha que o T.I tenha. Podem me auxiliar?
Meu código atual está assim:
import platform
from datetime import datetime
import getpass
import ctypes

so = platform.system()

print (""Sistema Operacional:""+so)
print (""Nome da máquina:""+platform.node())
print (""Nome do usuário:""+getpass.getuser())


data_e_hora_atuais = datetime.now()
data_e_hora_em_texto = data_e_hora_atuais.strftime(""%d/%m/%Y %H:%M"")

print(data_e_hora_em_texto)


def Mbox(title, text, style):
    return ctypes.windll.user32.MessageBoxW(0, text, title, style)
Mbox('ATENÇÃO!!!!@@!!', 'VOCÊ BAIXOU O ARQUIVO, CERTO?', 3)
Mbox('ATENÇÃO!!!!@@!!', 'VOCÊ FOI INFECTADO :)', 0)
Mbox('ATENÇÃO!!!!@@!!', 'NÃO TENTE FAZER NADA SENÃO VAMOS ESPALHAR POR TODA REDE', 0)
Mbox('ATENÇÃO!!!!@@!!', 'CHAME ALGUÉM DO T.I PARA CONVERSAR COMIGO', 0)

n = 1

while n != 0:
    n = int(input('Digite a senha: '))
print('Liberado')

","
Tente isto:
Primeiro verifica se n != 0 e não é 123456:
Obs: A senha do T.I você poderia colocar em um arquivo de variáveis de desenvolvimento ou algo do tipo...
n = 1

while n != 0 and n != 123456:
    n = int(input('Digite a senha: '))

    if n == 123456:
        print('Liberado')
    else:
        print('Senha incorreta')

123456 você pode mudar pra senha que escolher
","
            -3
        ",,,['\npython\n']
523850,Criar uma coluna preenchida com 0 ou 1 baseada em outras colunas no Pandas,"
Eu tenho um data frame e preciso preencher uma coluna com 0 ou 1 baseado no valores de outras 29 colunas. Se tiver 1 em qualquer uma das colunas de 0 a 28 a coluna com Dor_leve recebe 1, caso contrário recebe 0, para a coluna Dor_media é se tiver 2 em qualquer uma das colunas de 0 a 28 e para Dor_grave se tiver o valor 3 em qualquer coluna de 0 a 28.
Eu tenho as colunas Col_0 a Col_28 e necessito gerar as colunas Dor_leve, Dor_media e Dor_grave como abaixo. Os valores contidos nas colunas Col_0 ... Col_28 são 0 ou 1 ou 2
ou 3.
Exemplo do que necessito fazer:
Col_0 Col_1 Col_2 ... Col_28 Dor_leve Dor_media Dor_grave
0      1     1    ...   0         1         0        0
1      0     2    ...   0         1         1        0  
1      0     3    ...   1         1         0        1
2      3     0    ...   0         0         1        1 
0      0     0    ...   0         0         0        0
3      0     0    ...   1         1         0        1

As colunas são diferentes partes do corpo, então a pessoa pode ter 1, 2 ou 3 em cada coluna ou 0 em todas.
Tentativa foi:
import pandas as pd
df = pd.read_excel('arquivo.xlsx', sheet_name=0, header=0)

# Crio as colunas com 0 para todos

df['Dor_leve']= 0
df['Dor_media']= 0
df['Dor_grave']= 0

# Atualizar os valores, com 1 para sim, se tem o problema

for index, value in df.items():
    if(value==1):
        df.loc[index,'Dor_leve']=1
    elif(value==2):
        df.loc[index, 'Dor_media']=1
    elif(value==3):
        df.loc[index, 'Dor_grave']=1
    insira o código aqui

Retornou esse erro:
> ValueError: The truth value of a Series is ambiguous. Use a.empty,
> a.bool(), a.item(), a.any() or a.all().

Tentei:
if(df.items()==1):
   df['Dor_leve']=1

if(df.items()==2):
   df['Dor_media']=1
    
if(df.items()==3):
  df['Dor_grave']=1

Também não deu certo. Com o if (df.items()==valor) as colunas ficaram somente com valor 0.
","
Primeiro estabeleça as colunas que você quer usar para checar a condição:
# definindo colunas manualmente
cols = ['Col_0', 'Col_1', 'Col_2', ...]  # preencha com as colunas aqui

# ou então usando uma compreensão de lista, dada uma lógica no nome das colunas
cols = [f'Col_{x}' for x in range(29)]

Depois, ""pergunte"" para cada linha das colunas de interesse se há a presença de 1, 2, ou 3. O resultado dessa pergunta (True/False) é convertido no número inteiro 1 ou 0. Podemos fazer essa pergunta usando df.apply e aplicando uma função à cada linha (com o argumento axis=1):
df['Dor_leve'] = df[cols].apply(lambda row: int(1 in row.values), axis=1)
df['Dor_media'] = df[cols].apply(lambda row: int(2 in row.values), axis=1)
df['Dor_grave'] = df[cols].apply(lambda row: int(3 in row.values), axis=1)

","
            4
        ",,,"['\npython', 'pandas', 'data-manipulation\n']"
523755,Como eu faço uma série de números(que seja de 3 em 3). Usando o for x in range? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Como eu faço uma série de números(que seja de 3 em 3). Usando o for x in range ?
","
EDITADO
XF = input(""Informe um valor inteiro e positivo:"")

if XF.isdigit():
   var = int(XF)
   if var >= 0:
      for x in range(0, var, 3):
         # x disponível aqui
   else:
      print('Valor deve ser um número positivo')
else:
   print('Numero invalido')

","
            2
        ",,,"['\npython', 'for', 'range\n']"
523750,Procurar valores de uma Lista e Substituir em outra lista - Python,"
Estou tentando procurar elementos da lista A na Lista B e substituir por outro valor se este elemento for encontrado. Como posso fazer isso?
A = [""Leao"" , ""Lobo"" , ""Largarto""]
B = [""Cachorro"" , ""Leao"" , ""Cobra"" , ""Girafa"" , ""Lobo"" , ""Largarto""]

Substituir elemento de A em B pela palavra ""Manga"" e o resultado seria
C = [""Cachorro"" , ""Manga"" , ""Cobra"" , ""Girafa"" , ""Manga"" , ""Manga""]

Pesquisando eu só consegui encontrar este código, mas ai eu teria que toda vez escrever o que preciso substituir:
B = [item.replace(""Leao"", ""Manga"") for item in B]

","
A melhor forma é você percorrer a lista B e para cada valor verificar se ele está em A; se estiver, retornar o valor a ser substituído, senão retornar o próprio valor.
Com compreensão de lista isso fica bastante simples:
C = [b if b not in A else 'Manga' for b in B]

No trecho for b in B você percorre toda a lista B; em b if b not in A else 'Manga' você mantém o valor de b quando ele não está em A ou ""Manga"" quando tiver.
","
            5
        ","
Uma outra forma de fazer é você criar um dicionário com a key sendo o elemento que você substituir e o value dessa key o novo elemento:
A = {
# ""item na array B"":""novo valor"",
    ""Leao"":""Manga"" ,
    ""Lobo"":""Banana"" ,
    ""Largarto"":""Abacaxi""
}
B = [""Cachorro"" , ""Leao"" , ""Cobra"" , ""Girafa"" , ""Lobo"" , ""Largarto""]


C = [ (A[item] if item in A else item) for item in B ]

print( C )
# SAIDA DO PRINT:
# ['Cachorro', 'Manga', 'Cobra', 'Girafa', 'Banana', 'Abacaxi']

Veja o codigo funcionando no ideone
","
            2
        ",['\npython\n']
523735,TKInter iniciando janela antes do restante da programação. (Python 3.9),"
Olá, venho pedir a ajuda de alguém mais experiente que eu nesse assunto. Estou tentando utilizar o TKinter e o PyAutoGui para automatizar uma tarefa maçante do meu cotidiano. Meu objetivo é criar um looping, ele precisa executar sem a janela do Tkinter no primeiro loop, da segunda em diante, abrir a janela, pois o botão que coloquei tem que ""despausar"" ao looping e continuar repetindo até que eu pare a programação.
Já tentei utilizar até o for in range, mas sem sucesso..
from tkinter import *
import pyautogui
import time
from time import sleep

def sd():
    time.sleep(3)
    pyautogui.click(69, 90, duration= 1)
    time.sleep(4.5)
    pyautogui.click(116, 86, duration= 1)
    time.sleep(12)
    pyautogui.click(394, 88, duration= 1)
    pyautogui.click(101, 575, duration= 1)
    pyautogui.click(153, 419, duration= 1)
    pyautogui.click(213, 578, duration= 1)
    pyautogui.click(714, 571, duration= 1)

janela = Tk()
bt = Button(janela, width=20, text=""Próximo CTE"", command=sd)
bt.place(x=50, y=50)
janela.geometry(""250x100+200+200"")
janela.mainloop()

","
Para que execute o looping antes de abrir a janela do tkinter, basta chamar a função sd() antes da linha 18 > janela = Tk():
sd()  # Chama a função sd
janela = Tk()
bt = Button(janela, width=20, text=""Próximo CTE"", command=sd)

Para fazer com que a função fique em looping até que algum comando o pare, importe a biblioteca keyboard com pip install keyboard, em seguida crie a função loop() que irá executar a função sd() até que você mantenha a tecla ESC pressionada:
def loop():
    while True:
        sd()
        if keyboard.is_pressed('ESC'):
            break

Altere o método command do botão de sd para loop:
bt = Button(janela, width=20, text=""Próximo CTE"", command=**loop**)

Clique no botão da tela do tkinter para que inicie o looping novamente.

Resultado:
from tkinter import *
import pyautogui
import time
from time import sleep
import keyboard


def sd():
    time.sleep(3)
    pyautogui.click(69, 90, duration= 1)
    time.sleep(4.5)
    pyautogui.click(116, 86, duration= 1)
    time.sleep(12)
    pyautogui.click(394, 88, duration= 1)
    pyautogui.click(101, 575, duration= 1)
    pyautogui.click(153, 419, duration= 1)
    pyautogui.click(213, 578, duration= 1)
    pyautogui.click(714, 571, duration= 1)

def loop():
   """"""Chama a função sd() em looping ate que a tecla 'ESC' se mantenha pressionada""""""
    while True:
        sd()
        if keyboard.is_pressed('ESC'):
            break
    

sd()  # Chama a função sd
janela = Tk()
bt = Button(janela, width=20, text=""Próximo CTE"", command=loop)
bt.place(x=50, y=50)
janela.geometry(""250x100+200+200"")
janela.mainloop()

","
            0
        ",,,"['\npython', 'python-3.x\n']"
523701,"Estou estudando sobre python /django e me deparei com uma from e um import chamada ""Rating"" alguém poderia me explicar para que serve?","
def show_scoring_average(self):
    from .Rating import Rating   # Gostaria de entender esta linha
    try:
        ratings = Rating.objects.filter(user_rated = self.user).aggregate(Sum('value'), Count('user'))
        if ratings['user__count'] > 0 :
            scoring_average = ratings['value__sum'] / ratings ['user__count']
            scoring_average = round(scoring_average,2)
            return scoring_average
        return 'Sem avaliações'
    except:
        return 'Sem Avaliações'

",,,,,"['\npython', 'banco-de-dados', 'django\n']"
523623,Erro em compilação usando selenium: binary is not a Firefox executable,"
Fiz o seguinte script:
#/usr/bin/env python3 -u

import time
import sys
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary

# Habilita ou não o salvar
MODO_TESTE=True
# MODO_TESTE=False


URL='https://4496263.app.netsuite.com/app/accounting/transactions/timebill.nl?whence='


USERNAME='rsousa@leadcomm.com.br'
try:
    with open('.senha', 'r') as p:
        PASSWORD=p.read()
except IOError:
        print('Não existe o arquivo .senha no diretorio atual')
        sys.exit(1)


XPATH_USERNAME='//*[@id=""userName""]'
XPATH_PASSWORD='//*[@id=""password""]'
XPATH_BTNLOGIN='//*[@id=""login-submit""]'


XPATH_DATA='//*[@id=""trandate""]'
XPATH_HORAS='//*[@id=""hours""]'
XPATH_CLIENTE='//*[@id=""customer_display""]'
XPATH_CHAMADO='//*[@id=""casetaskevent_display""]'
XPATH_ATIVIDADE='//*[@id=""inpt_item1""]'
XPATH_DESCRICAO='//*[@id=""memo""]'

XPATH_BTNSALVAR='//*[@id=""secondarysavesubmit""]'

binary = FirefoxBinary('C:\\Users\\EMPRESA\\Desktop\\LANCAMENTODEHORAS\\geckodriver.exe')
browser = webdriver.Firefox(firefox_binary=binary)


def limpaCampos():
    browser.find_element_by_xpath(XPATH_DATA).send_keys(Keys.CONTROL, 'a')
    browser.find_element_by_xpath(XPATH_DATA).send_keys('')

    browser.find_element_by_xpath(XPATH_HORAS).send_keys(Keys.CONTROL, 'a')
    browser.find_element_by_xpath(XPATH_HORAS).send_keys('')

    browser.find_element_by_xpath(XPATH_CLIENTE).send_keys(Keys.CONTROL,'a')
    browser.find_element_by_xpath(XPATH_CLIENTE).send_keys('')


def preencheInformacoes(data,hora,cliente,chamado,atividade,descricao):


    # Reset de todos os campos só pra confimar e testar se está tudo ok
    limpaCampos()

    browser.find_element_by_xpath(XPATH_DATA).send_keys(Keys.CONTROL, 'a')
    browser.find_element_by_xpath(XPATH_DATA).send_keys(str(data))
    time.sleep(1)


    browser.find_element_by_xpath(XPATH_HORAS).send_keys(str(hora))

    browser.find_element_by_xpath(XPATH_CLIENTE).send_keys(Keys.CONTROL,'a')
    time.sleep(1)
    browser.find_element_by_xpath(XPATH_CLIENTE).send_keys(str(cliente))
    browser.find_element_by_xpath(XPATH_CLIENTE).send_keys(Keys.TAB)

    # Verifica se tem chamado
    if (int(chamado) != 0 ):
       browser.find_element_by_xpath(XPATH_CHAMADO).send_keys('Chamado # ' + str(chamado))
       browser.find_element_by_xpath(XPATH_CLIENTE).send_keys(Keys.TAB)


    browser.find_element_by_xpath(XPATH_ATIVIDADE).send_keys(str(atividade))

    browser.find_element_by_xpath(XPATH_DESCRICAO).send_keys(str(descricao.replace('\\n','')))

    time.sleep(1)

    if MODO_TESTE:
        print ('Nao está salvando')
    else:
        browser.find_element_by_xpath(XPATH_BTNSALVAR).click();

def parsingArquivo(fileName):
    fileHandle = open(fileName, 'r')

    linha = 1
    for line in fileHandle:
        fields = line.split('|')

        print ( str(linha) + ""-> "" + str(fields) )

        data=fields[2]
        cliente=fields[3].split(':')[0]
        atividade=fields[4]
        chamado=int(fields[5])
        hora=fields[6]
        descricao=fields[7]

        preencheInformacoes(data,hora,cliente,chamado,atividade,descricao)
        linha +=1

    fileHandle.close()

def main():
    print('Inicio ...')
    print(datetime.now())
    if MODO_TESTE:
        print ('Estamos em MODO de TESTE')

    browser.get(URL)

    browser.find_element_by_xpath(XPATH_USERNAME).send_keys(str(USERNAME))
    browser.find_element_by_xpath(XPATH_PASSWORD).send_keys(str(PASSWORD))
    browser.find_element_by_xpath(XPATH_BTNLOGIN).click()

    parsingArquivo('./lancar')

    # browser.quit()
    print('Fim ...')
    print(datetime.now())

if __name__ == '__main__':
        main()

E ele retorna este erro:
C:\Users\EMPRESA\Desktop\LANCAMENTODEHORAS>python Apontar.py
Traceback (most recent call last):
  File ""C:\Users\EMPRESA\Desktop\LANCAMENTODEHORAS\Apontar.py"", line 42, in <module>
    browser = webdriver.Firefox(firefox_binary=binary)
  File ""C:\Users\EMPRESA\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium-3.141.0-py3.9.egg\selenium\webdriver\firefox\webdriver.py"", line 170, in __init__
    RemoteWebDriver.__init__(
  File ""C:\Users\EMPRESA\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium-3.141.0-py3.9.egg\selenium\webdriver\remote\webdriver.py"", line 157, in __init__
    self.start_session(capabilities, browser_profile)
  File ""C:\Users\EMPRESA\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium-3.141.0-py3.9.egg\selenium\webdriver\remote\webdriver.py"", line 252, in start_session
    response = self.execute(Command.NEW_SESSION, parameters)
  File ""C:\Users\EMPRESA\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium-3.141.0-py3.9.egg\selenium\webdriver\remote\webdriver.py"", line 321, in execute
    self.error_handler.check_response(response)
  File ""C:\Users\EMPRESA\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium-3.141.0-py3.9.egg\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.InvalidArgumentException: Message: binary is not a Firefox executable

Detalhe importante ele executa no LINUX normalmente.
","
O FirefoxBinary tem que apontar para o binário (executável) do Firefox e não do geckodriver.
A configuração abaixo deve funcionar:
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary

options = Options()
options.binary = FirefoxBinary(r'/caminho/para/o/binario/do/firefox')
options.headless = True  # !!!!!!

browser = webdriver.Firefox(executable_path=r'/caminho/para/o/geckodriver', options=options)

Nota Comentando a linha com options.headless ou setando para False, deverá abrir o browser. O que é melhor fazer antes de testar headless.
","
            2
        ",,,"['\npython', 'selenium', 'selenium-webdriver', 'firefox\n']"
523593,Usar IF no Pyautogui em Python(automação),"
estou tentando fazer um pedaço de um código que ele fica clicando para o lado automaticamente(com automação) e quero que quando eu clicar determinada tecla ele pare de funcionar.Eu não sei o que coloco no ""IF"" pra ele parar de funcionar, nao sei como posso dizer ""se eu clicar tal coisa pare de funcionar com o break"". Aluguem help por favor...
import pyautogui
import time
pyautogui.keyDown(""alt"")
pyautogui.press([""tab""])
pyautogui.keyUp(""alt"")
while True:
    pyautogui.press([""left""])
    if 
    break 

","
O PyAutoGUI somente realiza a automação, ele ainda não consegue detectar esse tipo de evento no computador. O que você pode fazer é usar, em conjunto do PyAutoGUI, a biblioteca pynput.
import pyautogui
from pynput import mouse

# Este é o callback para os eventos de click do mouse
def on_click(x, y, button, pressed):
    if button == mouse.Button.left and pressed:
        # Retornar False para a execução do listener de eventos
        print(""Clicou!"")
        return False

pyautogui.keyDown(""alt"")
pyautogui.press([""tab""])
pyautogui.keyUp(""alt"")

# Listener irá verificar quando o mouse clicará
with mouse.Listener(on_click=on_click) as listener:
    while True:

        # Assim que o mouse clicar, o listener irá encerrar e parar o loop
        if not listener.running:
            break

        pyautogui.press([""left""])

","
            0
        ",,,"['\npython', 'automatização', 'pyautogui\n']"
523591,"Duvida sobre substituições em python metodo replace, como acessar melhor as listas?","

fix_start

Dada uma string s, retorne uma string onde
todas as ocorrências do primeiro caracter de s
foram substituidas por '*', exceto a primeira.
Exemplo: 'babble' retorna 'ba**le'
Assuma que a string tem tamanho 1 ou maior.
Dica: s.replace(stra, strb) retorna uma versão da string s
onde todas as instancias de stra foram substituidas por strb.
def fix_start(s):
    # +++ SUA SOLUÇÃO +++
    if s[:2] == s[:1:1]:
        return s.replace(s[1:], '*',)
    


# --- Daqui para baixo são apenas códigos auxiliáries de teste. ---

def test(f, in_, expected):
    """"""
    Executa a função f com o parâmetro in_ e compara o resultado com expected.
    :return: Exibe uma mensagem indicando se a função f está correta ou não.
    """"""
    out = f(in_)

    if out == expected:
        sign = '✅'
        info = ''
    else:
        sign = '❌'
        info = f'e o correto é {expected!r}'

    print(f'{sign} {f.__name__}({in_!r}) retornou {out!r} {info}')


if __name__ == '__main__':
    # Testes que verificam o resultado do seu código em alguns cenários.
    test(fix_start, 'babble', 'ba**le')
    test(fix_start, 'aardvark', 'a*rdv*rk')
    test(fix_start, 'google', 'goo*le')
    test(fix_start, 'donut', 'donut')

","
def fix_start(palavra: str) -> str:
    primeira_letra = palavra[0]
    restante_da_palavra = palavra[1:]

    nova_palavra = primeira_letra + restante_da_palavra.replace(primeira_letra, '*')

    return nova_palavra 

print(fix_start('babble'))



Retorno: ba**le
Espero que isso ajude.
","
            0
        ","
def fix_start(s):
    return f'{s[0]}{s[1:].replace(s[0], ""*"")}'
    
    # alternativas:
    return '{}{}'.format(s[0], s[1:].replace(s[0], '*'))
    return s[0] + s[1:].replace(s[0], '*')

","
            -1
        ","['\npython', 'python-3.x\n']"
523568,Pegar números com casas decimais de uma planilha xlsx e converter em horas no python,"
Este número 25,0555556, se formatado no Excel [h]:mm:ss, representa 601:20:00, como fazer com que o Python consiga ler em horas.
Trabalho com uma planilha que busca um relatório de um sistema e converte em planilha, e no momento de verificar como esta na planilha o valor fica em formato numérico, preciso fazer a formatação em horas. Agora estou passando esses dados da planilha para o Python e o valor fica formatado como número e com casas decimais.
Acessar os arquivo para teste no Drive aqui
","
Quando se faz as contas, dá pra perceber que o número ""25.05555556"" que corresponde a ""601:20"" horas é expresso em dias.
A classe datetime.timedelta do Python pode aceita a entrada em dias, como float, e fazer as contas para segundos - automaticamente (ou você pode só fazer alguams divisões).  A partir do total de segundos é fácil obter as quantidades de horas, minutos e segundos usando o operador // para divisão inteira)
import datetime

period = datetime.timdelta(days=25.0555556)
hours = period.total_seconds() // 3600
minutes = (period.total_seconds() % 3600) // 60
seconds = (period.total_seconds() % 60) 

final = f""{hours}:{minutes}:{seconds}""

Se na sua leitura o ""25..."" está vindo como uma string
com uma "","" no lugar de ""."", a forma mais rápida é usar
o método replace da string pra trocar a , para . antes
de converter o valor pra numérico com float -
mas se for para um aplicativo que vai ficar em produção e pode
trabalhar arquivos formatados de outra forma, pode ser
mais interessante usar o módulo locale para
sempre fazer a substituição da forma correta - confira a resposta aqui: Como usar vírgula em Python em vez de ponto
","
            0
        ",,,"['\npython', 'python-3.x\n']"
523566,criar matriz através de um arquivo em python,"
Sou iniciante em python, e estou tentando criar um código para exibir informações de login, em um arquivo de texto as informações estão salvas assim: 13:30, gabriel santana, 12345678
no caso o que é salvo no arquivo é a hora do login, nome do user, e o respectivo número dele, porem quando tento transformar em matriz através deste código:
arquivo = open('arquivo.txt', 'r')
linha = {}
linha = arquivo.readline()
print(linha[0])

a intenção com o linha[0] era printar a hora e se fosse linha[1] printar o nome, porém o que é mostrado é o caracter da ordem definida entre os []
","
Algumas questões com seu código.
arquivo = open('arquivo.txt', 'r') # 1
linha = {}                         # 2
linha = arquivo.readline()         # 3
print(linha[0])                    # 4

Nota #1
Esta linha está OK
Nota #2
Esta linha não tem motivo de estar aqui, pois imediatamente abaixo, você reinicializa a variável linha
Nota #3
Este comando lê apenas uma linha, sendo assim, deveria estar dentro de um laço de repetição.
Nota #4
linha é uma variável do tipo str (String), sendo assim o índice 0 (zero) é o primeiro caracter da string.
Alternativas
Usar o readlines()
arquivo = open('arquivo.txt', 'r')
linhas = arquivo.readlines()
arquivo.close()   # 5

for linha in linhas:
    campos = linha.replace(""\n"", """").split("","")  # 6
    print(campos[0], campos[1], campos[2])

Usar o readline() dentro de um laço de repetição
arquivo = open('arquivo.txt', 'r')
linha = arquivo.readline()

while linha:
    linha = linha.replace(""\n"", """")
    campos = linha.split("","")
    print(campos[0], campos[1], campos[2])
    linha = arquivo.readline()

arquivo.close()

Nota #5
Usando esta forma, não esqueça de fechar o arquivo
Nota #6
Tem que fazer o replace(""\n"","""") para substituir as quebras de linha por vazio e usar o split("","") para separar a string em itens de uma lista
Forma mais correta de ler um arquivo
with open('arquivo.txt', 'r') as arquivo:
    # processa o arquivo aqui.

Assim, o próprio Python se encarrega de fechar o arquivo, caso tenha algum problema ""no meio do caminho""
Outra maneira seria:
linhas = open('arquivo.txt', 'r').readlines()

Sendo um arquivo com linhas separadas por vírgula, ou seja, um arquivo CSV. Sugiro dar uma lida sobre a biblioteca csv do Python aqui.
","
            0
        ",,,['\npython\n']
523558,jogo da velha em python as vezes não mostra resultado,"
fiz um programa de jogo da velha em python 3 mas o problema é que quando eu escolho uma opção não mostra nada as vezes mas certa parte do tempo funciona dizendo se ganhei ou perdi
código:
insira o código aqui
import random

pedra = 'Pedra'
papel = 'Papel'
tesoura = 'Tesoura'

jogador = str(input('Pedra, papel ou tesoura? Fale: ')).capitalize()

if jogador.capitalize() == random.choice([pedra, papel, tesoura]).capitalize():
    print('Deu empate!')
elif jogador.capitalize() == pedra and  random.choice([pedra, papel, tesoura]) == tesoura:
    print('Você venceu! Pedra ganha de tesoura.')
elif jogador.capitalize() == papel and random.choice([pedra, papel, tesoura]) == pedra:
    print('Você venceu! Papel ganha de pedra.')
elif jogador.capitalize() == tesoura and random.choice([pedra, papel, tesoura]) == papel:
    print('Você venceu! Tesoura ganha de papel.')
elif jogador.capitalize() == pedra and random.choice([pedra, papel, tesoura]) == papel:
    print('Você perdeu! Papel ganha de tesoura.')
elif jogador.capitalize() == papel and random.choice([pedra, papel, tesoura]) == tesoura:
    print('Você perdeu! Tesoura ganha de papel.')
elif jogador.capitalize() == tesoura and random.choice([pedra, papel, tesoura]) == pedra:
    print('Você perdeu! Pedra ganha de tesoura.')
else:
    print('As vezes o programa não escolhe algum então dá nisso malz kkkk')

","
Toda vez que voce verifica se a sua opção bate com random.choice([pedra, papel, tesoura]).capitalize(): voce esta criando um novo valor para a opção do sistema.
Cria uma variável antes do seus ifs e usa ela para compara com sua resposta:
selecaoComputador = random.choice([pedra, papel, tesoura]).capitalize():
depois somente faca assim:
if jogador.capitalize() == selecaoComputador:
    print('Deu empate!')
elif jogador.capitalize() == pedra and  selecaoComputador == tesoura:
    print('Você venceu! Pedra ganha de tesoura.')
elif jogador.capitalize() == papel and selecaoComputador == pedra:
    print('Você venceu! Papel ganha de pedra.')
elif jogador.capitalize() == tesoura and selecaoComputador == papel:
    print('Você venceu! Tesoura ganha de papel.')
elif jogador.capitalize() == pedra and selecaoComputador == papel:
    print('Você perdeu! Papel ganha de tesoura.')
elif jogador.capitalize() == papel and selecaoComputador == tesoura:
    print('Você perdeu! Tesoura ganha de papel.')
elif jogador.capitalize() == tesoura and selecaoComputador == pedra:
    print('Você perdeu! Pedra ganha de tesoura.')
else:
    print('nao deve chegar aqui')

","
            0
        ",,,"['\npython', 'python-3.x\n']"
523525,Como fazer quebra de linha no print de uma lista em python?,"
Minha dúvida é como fazer a quebra de linha em um print de uma lista no Python.
preciso fazer um print do código funcionando. Só que os nomes da lista estão ficando muito extensos.
A cada 10, o ganhador ganha 1 cupom, então se ele doa 100 o nome dele entra 10 vezes na lista, fazendo uma linha enorme tem como fazer uma quebra de linha no print?
listasorteio = []

while True:
    print('digite sair para encerrar')
    nome = input('digite o nome: ')
    if nome == 'sair':
        break
    valordoado = int(input('Digite o valor doado: '))
    valord = valordoado // 2
    listasorteio.extend([nome]*valord)
print(listasorteio)

","
Você pode utilizar Compreensão de listas para chamar a função print em cada elemento da lista:
[print(nome) for nome in listasorteio]

Como a função print já contém a quebra de linha, deve retornar o resultado desejado.
Para maiores informações sobre compreensão de lista, aqui no site existe bastante material sobre o assunto.
","
            -4
        ",,,"['\npython', 'python-3.x\n']"
523450,"Exibir imagens em ""Galeria"" com Python (Tkinter)","
Olá, a  ideia é selecionar todas as imagens de um diretório (pasta), ele exibiria todas essas imagens em miniatura numa JANELA via TKINTER (Python).
Consegui localizar todos os diretórios das imagens com o WHILE, como no código abaixo, mas não consigo fazer com que todas exibam automaticamente.
Teria alguma biblioteca ou função nativa para criar essa ""galeria"" de imagens?


from tkinter import *
from typing import Sized
from PIL import *
import os
import cv2

class Window(Frame):
    

    def __init__(self, master=None):
        Frame.__init__(self, master)
        self.master = master
        self.pack(fill=BOTH, expand=1)
        
        load = Image.open(""temporario/page0.png"")
        load.thumbnail((350,350))
        render = ImageTk.PhotoImage(load)
        
        img = Label(self, image=render)
        img.image = render
        img.place(x=50, y=50) 


        files = []
        pasta = 'temporario'
        for (diretorio, subpastas, arquivos) in os.walk(pasta):
            files.extend(arquivos)
        #print(pasta + '/' + files[2])
        
        
        i = 0
        while i <= 2:
            
            ronaldo = 0
            dirImg = pasta + '/' + files[i]
            loading = Image.open(dirImg)
            loading.thumbnail((350,350))
            renderiza = ImageTk.PhotoImage(loading)            
            
            i = i + 1
            print(dirImg)
            imagemA = Label(self, image=renderiza)
            imagemA.image = renderiza
            imagemA.place(x=350, y=50)

            
root = Tk()
app = Window(root)
root.wm_title(""Tkinter window"")
root.geometry(""800x500"")
root.mainloop()



","
Olá, eu não rodei o seu código, mas o meu palpite é que você não consegue colocar todas as imagens porque o tkinter perde a referência dessas imagens cada vez que você cria uma imagem nova. Lembre-se que o tkinter está rodando em um loop contínuo e ele precisa sempre checar qual imagem ele precisa mostrar. Se você muda o valor de renderiza, ele já não tem mais a referência para aquela imagem. Uma alternativa é você criar um vetor para a variável renderiza:
    renderiza = []
    i = 0
    while i <= 2:

        ronaldo = 0
        dirImg = pasta + '/' + files[i]
        loading = Image.open(dirImg)
        loading.thumbnail((350,350))
        renderiza.append(ImageTk.PhotoImage(loading))
        
        print(dirImg)
        imagemA = Label(self, image=renderiza[i])
        # imagemA.image = renderiza[i]
        imagemA.place(x=350, y=50)
        i = i + 1

","
            0
        ",,,"['\npython', 'tkinter\n']"
523435,Value_counts - Pandas - Dataframe - Quantidade zero,"
Tenho um dataframe com uma coluna de horas e a outra o tipo de relampago.Eu estou fazendo um value_counts para contar a quantidade de relampagos em cada hora o dia. O value_conts está dando certo, porém tem algumas horas do dia que não tem relampagos, mas ai não está aparecendo na série. Por exemplo eu queria que depois q eu dei um value_counts, eu queria que aparecesse uma série com as 24 horas e cada hora a quantidade de relampagos, e isso aparece, porém as horas que não teve relampagos, ele pula. Mas eu queria q aparecesse todas as horas, e mesmo as que não tivesse relampago, aparecesse o zero sabe? Pois irei precisar disso,  mas não estou conseguindo. Já tentei usar np.arange, sort_index(level=), .fillna(0). Mas não está dando certo. Minha célula está assim:
quantidade_IC = IC[""hor""].value_counts(ascending=True)
quantidade_IC.sort_index()
display(quantidade_IC.sort_index())

Ai o resultado (as horas 11 e 12 não aparecem com o zero na frente :/)
0       510
1       772
2       275
3        50
4        12
5        16
6        41
7       319
8       201
9        25
10       10
13       29
14      138
15      799
16     3619
17     9622
18    10935
19    13851
20    10928
21     6227
22     1500
23      594

","
Baseado no comentário acima:
Importando bibliotecas
import pandas as pd
import random

Variáveis auxiliares
tamanho = 1000
horas = [0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23] # sem 11 e 12

Criando dataframe de teste
df = pd.DataFrame({""hora"": [random.choice(horas) for _ in range(tamanho)], ""relampago"": [int(random.random()*10) for _ in range(tamanho)]})

Criando dicionário auxiliar
d = dict(zip(range(24), [0]*24))

print(d)

{0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0}

Atualizando dicionário auxiliar
d.update(df.groupby(""hora"")[""hora""].count().to_dict())

print(d)

{0: 54, 1: 43, 2: 48, 3: 52, 4: 52, 5: 41, 6: 50, 7: 49, 8: 39, 9: 47, 10: 45, 11: 0, 12: 0, 13: 53, 14: 38, 15: 46, 16: 52, 17: 45, 18: 42, 19: 35, 20: 48, 21: 52, 22: 32, 23: 37}

Transformando dicionário em dataframe
c = pd.DataFrame.from_dict(d, orient='index', columns=[""qtd""])

print(c)

    qtd
0    54
1    43
2    48
3    52
4    52
5    41
6    50
7    49
8    39
9    47
10   45
11    0
12    0
13   53
14   38
15   46
16   52
17   45
18   42
19   35
20   48
21   52
22   32
23   37

","
            1
        ",,,"['\npython', 'pandas\n']"
523416,"Pegar último arquivo que entrou na pasta ""Downloads"" [duplicada]","






Essa pergunta já tem respostas aqui:
                        
                    



Como verificar qual o arquivo mais recente em uma pasta com Python?

                                (2 respostas)
                            

Fechada há 8 meses.



Como posso abrir o último arquivo que foi baixado na pasta ""Downloads"" com Python?
Vi várias opções com as libs os.path e os.walk mas nenhuma delas possibilita pegar o último arquivo que entrou no diretório.
Na plataforma Colab (da Google) e utilizando Linux, vi uma pessoa fazendo:
!ls -1t *.csv

","
você pode utilizar a função glob do python desta forma:
import glob
import os.path

folder_path = r'C:\Users\MasterRoot\Desktop\Test'
file_type = '\*csv' # se nao quiser filtrar por extenção deixe apenas *
files = glob.glob(folder_path + file_type)
max_file = max(files, key=os.path.getctime)

print (max_file)

ele vai te retornar o ultimo arquivo adicionado a este diretorio.
","
            4
        ","
Para obter o último arquivo de uma pasta você pode usar o metadado data de modificação, o último arquivo baixado é o que tem a data de modificação mais recente

obter o path da pasta downloads
você pode obter o path de pasta downloads tanto no linux quanto no windows usando o código abaixo:
def get_download_path():
    """"""Returns the default downloads path for linux or windows""""""
    if os.name == 'nt':
        import winreg
        sub_key = r'SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders'
        downloads_guid = '{374DE290-123F-4565-9164-39C4925E467B}'
        with winreg.OpenKey(winreg.HKEY_CURRENT_USER, sub_key) as key:
            location = winreg.QueryValueEx(key, downloads_guid)[0]
        return location
    return os.path.join(os.path.expanduser('~'), 'downloads')

Obter o último arquivo
Agora que temos o path da pasta downloads, temos que obter o path de cada arquivos dentro dela usando a lib glob, ler a data de modificação de cada arquivo usando o os.path.getmtime() e pegamos o arquivo que tiver o maior.
def get_latest_file_path(path):
    """"""return the more recent file in a path""""""

    file_paths = glob.glob(f'{path}/*') # obtem o path de cada arquivo na pasta
    all_files_modification_time = [ os.path.getmtime(path) for path in file_paths ] # Obtem o modification time de cada arquivo
    latest_file_index = all_files_modification_time.index(max(all_files_modification_time)) # obtem o index do maior deles, o arquivo mais recente
    return file_paths[latest_file_index]

após isso basta abrir o arquivo usando o path retornado
código completo abaixo:
import os, glob

def get_download_path():
    """"""Returns the default downloads path for linux or windows""""""

    if os.name == 'nt':
        import winreg
        sub_key = r'SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders'
        downloads_guid = '{374DE290-123F-4565-9164-39C4925E467B}'
        with winreg.OpenKey(winreg.HKEY_CURRENT_USER, sub_key) as key:
            location = winreg.QueryValueEx(key, downloads_guid)[0]
        return location
    return os.path.join(os.path.expanduser('~'), 'downloads')


def get_latest_file_path(path):
    """"""return the latest file in a path""""""

    file_paths = glob.glob(f'{path}/*')
    all_files_modification_time = [ os.path.getmtime(path) for path in file_paths ]
    latest_file_index = all_files_modification_time.index(max(all_files_modification_time))
    return file_paths[latest_file_index]


downloads_path = get_download_path()
latest_file_path = get_latest_file_path(downloads_path)

with open(latest_file_path, 'r') as file:
    pass
    # seu código ...


","
            0
        ","['\npython', 'arquivo', 'path\n']"
523410,"Como gerar diversos ZIPs dinamicamente em memória, com Python?","
Estou lendo um dataframe em Python, e pra cada linha do mesmo, preciso salvar a coluna que contém um XML em um arquivo, em memória, para posteriormente zipar estes arquivos. Até aí tudo bem. A questão é que eu preciso gerar estes ZIPs dinamicamente, de acordo com uma determinada chave presente dentro dos arquivos. Se a chave for igual à anterior, deve gravar o XML no mesmo diretório. Caso contrário, deverá gerar um zip diferente para essa nova chave. Todos os arquivos com a mesma chave devem ficar juntos. Ou seja, caso existam 20 chaves diferentes, preciso gerar 20 ZIPs diferentes.
Abaixo, segue o código até o momento:
.
.
.
arrayKeys = []
memoryZip = BytesIO()
memoryXml = StringIO()
today = datetime.today()
todaysYear = str(today.year)
todaysMonth = str(today.month)
todaysDay = str(today.day)
todaysHour = str(today.hour)
todaysMinute = str(today.minute)
todaysSecond = str(today.second)

for line in range(len(dataFrame)):
.
.
.
    # Busca a chave:
    key = str(dataFrame['KEY'][line])
    directory = 'key='+key

    # Se a nova chave já existir na lista, deve gravar os dados no mesmo zip:
    if key in arrayKeys:            
        with zipfile.ZipFile(memoryZip, 'w', compression=zipfile.ZIP_DEFLATED, compresslevel=9) as zf:            

            # Cria a estrutura de pastas:        
            path = 'folder1\\folder2\\'+directory+'\\xml'+line+'.xml'

            # Salva os arquivos na estrutura necessária
            dataFrame.iloc[line,:].to_csv(memoryXml, header=False, index=False, escapechar='\\', quoting=csv.QUOTE_NONE)            
            zf.writestr(path, memoryXml.getvalue())

            # Nome do zip:
            zipName = key+'_'+todaysYear+todaysMonth+todaysDay+todaysHour+todaysMinute+todaysSecond

    # Se não, deve gravar em outro zip 
    else:
        arrayKey.append(directory)

        # Gerar outro zip dinamicamente, para cada chave
        with zipfile.ZipFile(memoryZip, 'w', compression=zipfile.ZIP_DEFLATED, compresslevel=9) as newZf:

            # Cria a estrutura de pastas em memória:        
            path = 'diretorio\\'+key+'\\xml'+line+'.xml'

            # Salva os arquivos na estrutura necessária
            dataFrame.iloc[line,:].to_csv(memoryXml, header=False, index=False, escapechar='\\', quoting=csv.QUOTE_NONE)            
            newZf.writestr(path, memoryXml.getvalue())

            # Nome do zip:
            zipName = key+'_'+todaysYear+todaysMonth+todaysDay+todaysHour+todaysMinute+todaysSecond

# Função que faz o upload dos zips (a implementação dela é irrelevante, nesse caso)
# Aqui, preciso que sejam enviados todos os zips em memória
upload('storage', memoryZip.getvalue(), f'{zipName}.zip')

","
Problema solucionado: basicamente, foi necessário abrir apenas um ZipFile (ao invés de 2, como mostrado acima) em memória, e ir salvando os arquivos de acordo com a chave. Após o laço, o ponteiro de memória da variável memoryXml foi setado pra 0 (memory.seek(0)) e depois truncado (memoryXml.truncate(0)).
","
            0
        ",,,"['\npython', 'xml', 'dataframe', 'arquivo-zip\n']"
523403,ENVIAR E-MAIL PARA VÁRIOS DESTINATÁRIOS COM O SMTPLIB PYTHON,"
estou com um código que envia e-mail para um único destinatário. Agora, eu preciso que esse código:
• ENVIE O E-MAIL PARA VÁRIOS DESTINATÁRIOS AO MESMO TEMPO DE FORMA ÚNICA.
EXEMPLO: Tenho 20 destinatários, ao invés de escrever um e-mail e colocar esses 20 endereços de e-mail no campo: PARA, eu preciso que o script envie um único e-mail para essas 20 pessoas, um por um.
Eu acredito que se eu armazenar os destinatários em uma lista, e fazer o script rodar 20 vezes através de um FOR resolva meu problema, mas não consegui coloca isso em prática. Vocês conseguem me ajudar ? Segue o código abaixo:
import smtplib
import email.message

def enviar_email():  
    corpo_email = """"""
    <p>Prezados, tudo bem?</p>
    <p></p>
    <p>Venho através deste e-mail para notificar ...</p>
    """"""

    msg = email.message.Message()
    msg['Subject'] = ""ASSUNTO"" #ASSUNTO DO E-MAIL#
    msg['From'] = 'emailquevaienviar@gmail.com' #E-MAIL QUE VAI ENVIAR O E-MAIL#
    #
    msg['To'] = 'emailquevaireceber@gmail.com'#E-MAIL QUE VAI RECEBER
    password = '123456789' #SENHA DO E-MAIL QUE VAI ENVIAR
    msg.add_header('Content-Type', 'text/html')
    msg.set_payload(corpo_email )

    s = smtplib.SMTP('smtp.gmail.com: 587')
    s.starttls()
    # Login Credentials for sending the mail
    s.login(msg['From'], password)
    s.sendmail(msg['From'], [msg['To']], msg.as_string().encode('utf-8'))
    print('Email enviado')
    enviar_email()


","
caso tente colocar para enviar varios emails, de uma forma que seja 'editavel', eu pensei desta forma, lendo um arquivo txt
def enviar_email(eml):
    
    corpo_email = """"""
    <p>Mensagem Automática</p>
    """"""

    
    msg = email.message.Message()
    msg['Subject'] = ""msg""
    msg['From'] = 'email'
    msg['To'] = eml
    password = 'senha'
    msg.add_header('Content-Type', 'text/html')
    msg.set_payload(corpo_email)
    


    s = smtplib.SMTP('smtp.gmail.com:587')
    s.starttls()
    s.login(msg['From'], password)
    s.sendmail(msg['From'], [msg['To']], msg.as_string().encode('utf-8'))
    print('Email Enviado')


with open('Email.txt') as file:
    while line := file.readline():
        enviar_email(line.rstrip())

","
            0
        ","
faz o seguinte usa uma lista de emails e faz ele executar o envio para cada 1 como no ex abaixo:
import smtplib
import email.message

def enviar_email(email):  
    corpo_email = """"""
    <p>Prezados, tudo bem?</p>
    <p></p>
    <p>Venho através deste e-mail para notificar ...</p>
    """"""

    msg = email.message.Message()
    msg['Subject'] = ""ASSUNTO"" #ASSUNTO DO E-MAIL#
    msg['From'] = 'emailquevaienviar@gmail.com' #E-MAIL QUE VAI ENVIAR O E-MAIL#
    #
    msg['To'] = email #E-MAIL QUE VAI RECEBER
    password = '123456789' #SENHA DO E-MAIL QUE VAI ENVIAR
    msg.add_header('Content-Type', 'text/html')
    msg.set_payload(corpo_email )

    s = smtplib.SMTP('smtp.gmail.com: 587')
    s.starttls()
    # Login Credentials for sending the mail
    s.login(msg['From'], password)
    s.sendmail(msg['From'], [msg['To']], msg.as_string().encode('utf-8'))
    print('Email enviado')



lista=['email1@email.com','email2@email.com','email3@email.com']
for email in lista:
    print(""enviando email para: "",email)
    enviar_email(email)

","
            -2
        ","['\npython', 'brasil\n']"
523368,Dar reply em tweets de um usuário específico com Tweepy,"
Utilizando a biblioteca Tweepy, Estou tentando fazer um bot que da reply em todos os tweets de apenas um usuário específico, o problema é que o bot está dando reply não só no tweet mas em todo mundo que da retweet ou responde o tweet.
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

id = ""1234""
user = api.get_user(id)


def randomize(status):
    tweet = status.split()
    shuffle(tweet)
    tweet_string = "" "".join(tweet)
    return tweet_string


class Reply(tweepy.StreamListener):
    def on_status(self, status):
        print(status.text)
        api.update_status(""@"" + status.user.screen_name + "" "" + randomize(status.text), in_reply_to_status_id=status.id)


listener = Reply()
stream = tweepy.Stream(auth=api.auth, listener=listener)
stream.filter(follow=[id])

Documentação da biblioteca Tweepy:
https://docs.tweepy.org/en/stable/
",,,,,"['\npython', 'twitter', 'twitter-api\n']"
523307,Há como retornar a um determinada linha de código?,"
Gostaria de saber se existe algum módulo, função, etc. que me permita voltar para uma determinada linha do código.
Tenho essa dúvida porque, sempre quando quero fazer uma pergunta repetidamente, tenho que colocar de novo a mesma variável, como acontece nas linhas 7 e 12
tupla = 'zero', 'um', 'dois', 'três', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez', 'onze',\
    'doze', 'treze', 'quatorze', 'quinze', 'dezesseis', 'dezessete', 'dezoito', 'dezenove', 'vinte'
for num in tupla:
    num = int(input('Digite um número: '))
    ext = tupla[num]
    print(f'Você digitou o número {ext}')
    opcao = str(input('Quer continuar a ler os números por extenso? [S/N] ')).upper().strip()
    while opcao == 'S':
        num = int(input('Então digita outro número: '))
        ext = tupla[num]
        print(f'Você digitou o número {ext}')
        opcao = str(input('Quer continuar a ler os números por extenso? [S/N] ')).upper().strip()
    while opcao == 'N':
        exit('Obrigado por usar nosso programa.')


","
Se entendi o seu problema basta usar uma função python para a operação que você quer repetir.
Tutorial de funções
O seu código por exemplo poderia ser reescrito assim:
numeros_por_extenso = [
    'zero', 'um', 'dois', 'três', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez', \
    'onze','doze', 'treze', 'quatorze', 'quinze', 'dezesseis', 'dezessete', 'dezoito', 'dezenove', 'vinte']

def retorna_numero_por_extenso():
    numero = int(input('Digite um número: '))
    numero_extenso = numeros_por_extenso[numero]
    print(f'Você digitou o número {numero_extenso}')

execucao = True

while execucao:
    retorna_numero_por_extenso()
    opcao = str(input('Quer continuar a ler os números por extenso? [S/N] ')).upper().strip()
    if opcao == 'N':
        execucao = False
        exit('Obrigado por usar nosso programa.')

Alguns detalhes:

Procure não abreviar o nome das suas variáveis
Não use mais de um laço while no mesmo código a menos que seja extremamente necessário.

","
            -1
        ",,,"['\npython', 'if', 'for', 'while\n']"
523275,"Problema: Python 3.8 no Visual Studio Code no terminal Não aceita Acentos, Como Resolver ? Linux Ubuntu 20.4","
Estou com esse problema, já tentei mudar as configurações no visual Studio Code e nada, não achei nada na internet sobre isso, fora do terminal o acento apare normalmente agora na entrada de dados com input() não vai.


No terminal direto vai.
Dentro do Terminal no VS não vai.
","
Também tive o mesmo problema. Não encontrei outra solução a não ser executar o Terminal a partir do Debug (F5). Desta forma aceita acentuação. No meu caso estava programando em Python.
","
            -1
        ",,,"['\npython', 'linux', 'visual-studio', 'ubuntu', 'visual-studio-code\n']"
523273,Eliminar preposições e artigos do texto no python,"
Importei um arquivo para o Python onde reconheceu todas as palavras e preciso pegar a frequência que elas aparecem nesse texto, porém as maiores frequências são de preposições (de, para, com) e artigos (a, o, os, as).
Existe uma maneira de eliminar esse tipo de informação e trazer apenas palavras relacionas ao texto?
Segue o código que me trouxe todas palavras com frequência:
from collections import Counter
with open('arquivo.txt') as f:
    ocorrencias = Counter(f.read().split())
print (ocorrencias)

","
O que você está procurando chama-se ""stopwords"" e é um tipo de filtragem tradicionalmente usado no processamento de linguagem natural. Veja um exemplo usando o pacote nltk:
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

sw = stopwords.words('portuguese')

text= '''
Processamento de língua natural (PLN) é uma subárea da ciência da computação, inteligência artificial e da linguística que estuda os problemas da geração e compreensão automática de línguas humanas naturais. Sistemas de geração de língua natural convertem informação de bancos de dados de computadores em linguagem compreensível ao ser humano e sistemas de compreensão de língua natural convertem ocorrências de linguagem humana em representações mais formais, mais facilmente manipuláveis por programas de computador. Alguns desafios do PLN são compreensão de língua natural, fazer com que computadores extraiam sentido de linguagem humana ou natural e geração de língua natural. 
'''

new_text = ' '.join([k for k in text.split("" "") if k not in sw])

print(new_text)

Retorna:
Processamento língua natural (PLN) subárea ciência computação, inteligência artificial linguística estuda problemas geração compreensão automática línguas humanas naturais. Sistemas geração língua natural convertem informação bancos dados computadores linguagem compreensível ser humano sistemas compreensão língua natural convertem ocorrências linguagem humana representações formais, facilmente manipuláveis programas computador. Alguns desafios PLN compreensão língua natural, fazer computadores extraiam sentido linguagem humana natural geração língua natural.

Você poderia fazer a filtragem definindo manualmente as preposições, como sugerido nos comentários, mas a chance de erro é maior.
","
            5
        ","

Obs: se está trabalhando com processamento de linguagem natural, melhor seguir o que foi indicado na outra resposta e usar uma biblioteca específica para tal. De qualquer forma, segue uma alternativa para fazer ""na mão"":


Basta criar um set com as palavras a serem ignoradas, e só adicionar no Counter as palavras que não estiverem neste set:
from collections import Counter

ignorar = { 'de', 'para', 'com', 'a', 'o', 'os', 'as' }
ocorrencias = Counter()
with open('arquivo.txt') as f:
    for linha in f:
        ocorrencias.update(palavra for palavra in linha.split() if palavra not in ignorar)
print(ocorrencias)

No caso eu iterei pelo arquivo com um for, pois arquivos são objetos iteráveis, e no caso de arquivos de texto, a iteração é feita linha a linha.
E para cada linha do arquivo, eu faço o split para quebrá-la em palavras, mas só adiciono as que não estiverem no set.
Também poderia ser feita com uma lista (ignorar = [ 'de', 'para', ... ] - repare nos colchetes no lugar das chaves), mas um set é mais otimizado para buscas, se comparado com uma lista (ver mais detalhes aqui e aqui). Claro que para poucas palavras a diferença será irrisória, mas se estiver lidando com muitos dados, pode fazer diferença.
Eu optei por ler linha a linha em vez de um único f.read(), pois este carrega todo o conteúdo do arquivo para a memória e pode ser um problema caso o arquivo seja muito grande. Mas nada impede que se faça tudo de uma vez:
with open('arquivo.txt') as f:
    ocorrencias = Counter(palavra for palavra in f.read().split() if palavra not in ignorar)

Ou seja, leio todo o arquivo, separo em palavras e aplico a mesma lógica acima.

Vale lembrar ainda que dependendo de como está a frase, um simples split pode não quebrar em palavras corretamente. Por exemplo, se a frase for ""Oi, tudo bem com meu bem?"", o split irá quebrar em ['Oi,', 'tudo', 'bem', 'com', 'meu', 'bem?'] e portanto bem e bem? serão contabilizados como palavras diferentes.
Nesse caso, vai depender muito da sua definição de palavra: somente letras (mas e as palavras compostas, que tem hífen)? Diferencia maiúsculas e minúsculas (""Oi"" e ""oi"" devem ser contadas juntas ou separadas)? Etc...
Sobre isso, você pode dar uma olhada aqui, aqui e aqui, ou usar o próprio nltk, que possui funcionalidades para quebrar uma frase em palavras. Uma vez tendo as palavras, basta aplicar a mesma lógica acima, de só adicionar no Counter as que não estiverem no set.
","
            2
        ","['\npython', 'data-science', 'big-data\n']"
523163,Como distribuir cartas de um baralho usando dicionário [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Estrutura de dados que represente um baralho de cartas

                                (2 respostas)
                            

Fechada há 8 meses.



Tenho o seguinte dicionário composto por uma lista em seus valores:
baralho = { 'Paus':   ['Ás',2,3,4,5,6,7,8,9,10,'Dama','Valete','Reis'] ,
            'Ouros':  ['Ás',2,3,4,5,6,7,8,9,10,'Dama','Valete','Reis'] ,
            'Espadas':['Ás',2,3,4,5,6,7,8,9,10,'Dama','Valete','Reis'] ,
            'Copas':  ['Ás',2,3,4,5,6,7,8,9,10,'Dama','Valete','Reis'] }

Gostaria de saber como percorrer estas chaves e seus valores de forma sequencial e aleatória, sorteando 5 cartas. Sem lançar mão de funções do Python. Não sei como indexar os valores para cada chave.
Tentei por uma etapa mais simples:
for b in baralho:
   print(b)

O resultado foi a impressão apenas das chaves, tentei um cont=0 e ir somando a cada loop para o índice mas deu o erro:  O objeto 'NoneType' não é subscritível.
 for b in baralho:
     print(b)[cont]     
     cont = cont + 1

Pesquisei aqui na plataforma mas não encontrei algo equivalente a esse problema, pode ser que eu não tenha utilizado de algum termo necessário.
","
Não posso afirmar que seja o método ideal, pois são diversas maneiras que pode compreender as cartas de um baralho.
Mas uma forma simples de modelar cartas de um baralho é primeiro modelar os naipes, então modelar os valores e a partir desses formar as carta em baralho.
Para modelar os naipes e os valores das cartas pode-se usar tuplas pois trata-se de um sequencia imutável, depois de definidos os valores não há o porque os alterar.
Para modelar uma única carta também use uma tupla pois criada a carta não há o porque alterar o seu valor.
Já para o baralho use uma lista pois trata-se de um sequencia mutável e é interessante mudar a ordem dos elementos assim como adicionar e remover cartas.
Exemplo1: Modelando o baralho e exibindo as suas cartas.
naipes = ('Paus', 'Ouros', 'Espadas', 'Copas')

valores = ('A', 2, 3, 4, 5, 6, 7, 8, 9, 10,'Dama', 'Valete', 'Reis')

baralho = [(v, n) for v in valores for n in naipes]

for carta in baralho:
  print(carta)

Resultado:
('A', 'Paus')
('A', 'Ouros')
('A', 'Espadas')
('A', 'Copas')
(2, 'Paus')
(2, 'Ouros')
(2, 'Espadas')
(2, 'Copas')
(3, 'Paus')
(3, 'Ouros')
(3, 'Espadas')
(3, 'Copas')
(4, 'Paus')
(4, 'Ouros')
(4, 'Espadas')
(4, 'Copas')
(5, 'Paus')
(5, 'Ouros')
(5, 'Espadas')
(5, 'Copas')
(6, 'Paus')
(6, 'Ouros')
(6, 'Espadas')
(6, 'Copas')
(7, 'Paus')
(7, 'Ouros')
(7, 'Espadas')
(7, 'Copas')
(8, 'Paus')
(8, 'Ouros')
(8, 'Espadas')
(8, 'Copas')
(9, 'Paus')
(9, 'Ouros')
(9, 'Espadas')
(9, 'Copas')
(10, 'Paus')
(10, 'Ouros')
(10, 'Espadas')
(10, 'Copas')
('Dama', 'Paus')
('Dama', 'Ouros')
('Dama', 'Espadas')
('Dama', 'Copas')
('Valete', 'Paus')
('Valete', 'Ouros')
('Valete', 'Espadas')
('Valete', 'Copas')
('Reis', 'Paus')
('Reis', 'Ouros')
('Reis', 'Espadas')
('Reis', 'Copas')

Para embaralhar uma sequencia pode ser utilizado a função shuffle() do módulo nativo random.
Exemplo2: Embaralhando as suas cartas.
import random

naipes = ('Paus', 'Ouros', 'Espadas', 'Copas')

valores = ('A', 2, 3, 4, 5, 6, 7, 8, 9, 10,'Dama', 'Valete', 'Reis')

baralho = [(v, n) for v in valores for n in naipes]

random.shuffle(baralho)

for carta in baralho:
  print(carta)

Resultado:
(2, 'Paus')
('Valete', 'Ouros')
(3, 'Ouros')
('Reis', 'Copas')
(5, 'Paus')
('Reis', 'Paus')
(6, 'Ouros')
(9, 'Copas')
(6, 'Espadas')
(4, 'Copas')
(9, 'Espadas')
(2, 'Espadas')
(6, 'Paus')
(9, 'Ouros')
(7, 'Copas')
('Valete', 'Copas')
(3, 'Paus')
('A', 'Espadas')
('A', 'Paus')
(2, 'Copas')
(8, 'Copas')
(10, 'Espadas')
(4, 'Paus')
('A', 'Ouros')
(8, 'Ouros')
(5, 'Ouros')
('Dama', 'Paus')
(7, 'Ouros')
('Valete', 'Espadas')
(9, 'Paus')
(7, 'Paus')
(2, 'Ouros')
(5, 'Copas')
(6, 'Copas')
(10, 'Paus')
('Reis', 'Espadas')
(10, 'Copas')
('Valete', 'Paus')
(4, 'Espadas')
('Dama', 'Espadas')
('Reis', 'Ouros')
(10, 'Ouros')
('Dama', 'Ouros')
(7, 'Espadas')
(3, 'Espadas')
(8, 'Espadas')
(3, 'Copas')
(4, 'Ouros')
('Dama', 'Copas')
(5, 'Espadas')
(8, 'Paus')
('A', 'Copas')

Como um teste para o modelo e exemplo de como sortear n cartas pode ser criado um jogo de 21 onde o jogador só ganha se fizer exatamente 21 pontos.
O jogo começa limpando o monte de cartas do jogado e em seguida embaralha-se o baralho.
Com o método list.pop() é retirada uma carta do baralho e adicionada ao monte do jogador. O valor da carta é computado e somado aos pontos do usuário.
Os pontos são computados segundo essa tabela:




Carta
Valor




A
1 Se a total de pontos for maior que 10


A
11 Se a total de pontos for menores que 10


2,3,4,5,6,7,8,9,10
Tem como valor o próprio valor de face


Dama
Vale 12 pontos


Valete
Vale 13 pontos


Rei
Vale 14 pontos




Se o jogador abandonar a mão com menos de 21 pontos ou se fizer mais de 21 pontos ele perde.
Ganha se somente se fizer exatos 21 pontos.
Exemplo3: Jogo de 21
import random

naipes = ('Paus', 'Ouros', 'Espadas', 'Copas')

valores = ('A', 2, 3, 4, 5, 6, 7, 8, 9, 10,'Dama', 'Valete', 'Reis')

#Função para lipar a tela.
cls = lambda: print(""\033c\033[3J"", end='')

#Função para gerar um novo baralho.
def embaralhar():
  b = [(v, n) for v in valores for n in naipes]
  random.shuffle(b)
  return b

#Função para computar o valor da carta.
def calcular(pontos, carta):
  if carta[0] == 'A':
    return 11 if pontos <= 10 else 1
  if carta[0] in ('Dama', 'Valete', 'Reis'):
    return (
      12 if carta[0] == 'Dama' else
      13 if carta[0] == 'Valete' else
      14
    )
  return int(carta[0])

vitorias = 0        #Numeros de vitórias 
derrotas = 0        #Numeros de derrotas 

frase1 = ""Bem vindo a jogatina.""
frase2 = ""Deseja jogar uma partida?(S/N)""
frase3 = ""Puxar mais uma carta?(S/N)""
frase4 = ""Você venceu.""
frase5 = ""Você perdeu.""
frase6 = ""Pressione <Enter> para continuar...""


print(frase1)
while((jogar:= input(frase2).upper()) == ""S"" ):
  cls()                       #Limpa a tela.
  monte = []                  #Limpa o monte do jogador
  baralho = embaralhar()      #Inicializa um novo baralho, já embaralhado.
  soma = 0                    #Inicializa os pontos do jogador.
  while(True):
    cls()                                      #Limpa a tela.
    monte.append(carta:= baralho.pop())        #Tira uma  carta do baralho e adiciona ao monte
    soma += calcular(soma, carta)              #Calcula o valor da carta e soma aos pontos do jogador.
    #Imprime o placar do jogo
    print(f'Vitorias: {vitorias}\tDerrotas: {derrotas}')
    print(*monte, sep=""\n"", end="""")
    print(f'\ttotal: {soma}')
    #Testa condições de saída da mão. 
    if (soma >= 21) or input(frase3).upper() != ""S"":      
      break    
  #Testa vitória ou derrota.
  if (soma == 21):
      print(frase4)
      vitorias += 1
  else:
      print(frase5)
      derrotas += 1
  input(frase6)

Teste o exemplo no Repl.it
","
            3
        ","
Para listar todas as cartas em sequência:
def lista_cartas(baralho):
lista = []
for naipe in baralho:
    for carta in baralho[naipe]:
        lista.append(carta)
return lista

print(lista_cartas(baralho))

Para escolher 5 Cartas Aleatórias:
import random

def escolhe_carta(baralho):
lista_escolhidas = []
naipe = random.choice(list(baralho.keys()))
carta = random.choice(baralho[naipe])
lista_escolhidas.append([naipe, carta])
return lista_escolhidas

for i in range(5):
    for i in escolhe_carta(baralho):
        print(f'Naipe: {i[0]} \nCarta: {i[1]}')
        print('-' * 20)

","
            1
        ","['\npython', 'lista', 'lógica\n']"
523137,Como eu posso usando a biblioteca instaloader adicionar uma lista de perfis? nesse momento tenho q adicionar um por um,"
Eu sei que é possivel usando profile_list['profile1, profile2,..'] mas quando eu tento fazer isso no meu codigo ele não funciona. Oq eu faço?
from instaloader import Instaloader, Profile
import instaloader
from instaloader.structures import Post 

list_of_profile = [''] 
for list_element in list_of_profile: 
L = Instaloader() 
profile = Profile.from_username(L.context, list_element)
posts_sorted_by_likes = sorted(profile.get_posts(), key=lambda post:post.likes, reverse=True) 

quant = 3
for elements in range(quant):
L.download_post(posts_sorted_by_likes[elements], list_element)

",,,,,"['\npython', 'python-3.x', 'python-requests\n']"
523134,Eu não consigo instalar packages porque meu pip está desatualizado e meu PyCharm não tem permissões o suficientes para realizar o upgrade,"
Estava tentando instalar o core porém quando digitei o seguinte comando pip install core me deparei com o seguinte erro
ERROR: Could not find a version that satisfies the requirement core (from versions: none)
ERROR: No matching distribution found for core

Eu tentei instalar o core pelas configurações de interpretadores do projeto, mas aconteceu o mesmo.
Então li que eu precisava atualizar meu Pip e digitei o seguinte código  pip install --upgrade pip e consequentemente apareceu este erro em meu terminal:
Requirement already satisfied: pip in c:\users\rafael\pycharmprojects\iagamerproject\venv\lib\site-packages (21.1.2)
Collecting pip
  Downloading pip-21.2.4-py3-none-any.whl (1.6 MB)
     |████████████████████████████████| 1.6 MB 1.1 MB/s
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 21.1.2
    Uninstalling pip-21.1.2:
      Successfully uninstalled pip-21.1.2
ERROR: Could not install packages due to an OSError: [WinError 5] Acesso negado: 'C:\\Users\\rafael\\AppData\\Local\\Temp\\pip-uninstall-3z9so64q\\pip.exe'
Check the permissions.

",,,,,"['\npython', 'pycharm', 'pip\n']"
523122,Obter informações dentro de um dicionário [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Estou com uma dúvida em relação a um dicionário em um dicionário, eu tenho um código que tem vários usuários em um site,cada um com um nome único e a idade, onde os nomes dos usuários e as idades são usados em chaves em um dicionário. como faço para acessar as informações do nome, sobrenome e idade através de um laço.
usuarios = {
    'jsilva': {
        'nome': 'junior',
        'sobrenome': 'silva',
        'idade': 18,
    },
    'rmatheus': {
        'nome': 'roberto',
        'sobrenome': 'matheus',
        'idade': 20,
    },
}

","
Para exibir as informações dentro de um dicionário eu fiz da seguinte forma
for usuario, usuario_info in usuarios.items():
    print(""\nUsuário: "" + usuario)
    nome_completo = usuario_info['nome'] + "" "" + usuario_info['sobrenome']
    idade = usuario_info['idade']

    print(""Nome completo: "" + nome_completo.title())
    print(""Idade: "" + str(idade))

","
            -2
        ",,,['\npython\n']
523096,pivot_table de frequencia,"
Quero construir um pivot_table no pandas que conte a frequencia.
Por exemplo, tenho uma coluna sexo, com 2 opçoes, uma de UF, com 5 opçoes, e uma de cor, com 4 opçoes, queria fazer uma tabela que mostrasse quantas pessoas de x sexo e de y UF tem z cor, mas me encontro num looping de testar o cor como values e como columns mas sem achar nenhuma resposta.
(a aggfunc count não consegui utilizar desta forma)
","
Acredito que groupby com o agg seja a solução. Veja o exemplo:
Carregando bibliotecas
import pandas as pd
import random

Variáveis auxiliares
sexos = [""M"", ""F""]
ufs = [""BA"", ""ES"", ""MT"", ""RJ"", ""SP""]
cores = [""amarelo"", ""azul"", ""vermelho"", ""roxo"", ""verde""]

tamanho = 1000

Criando dataframe de teste
df = pd.DataFrame({""sexo"": [random.choice(sexos) for _ in range(tamanho)], ""uf"": [random.choice(ufs) for _ in range(tamanho)], ""cor"": [random.choice(cores) for _ in range(tamanho)]})

Criando ""pivot_table""
print(df.groupby([""sexo"", ""uf"", ""cor""]).agg({""cor"": 'count'}))

O resultado será algo como abaixo:
                  cor
sexo uf cor
F    BA amarelo    21
        azul       20
        roxo       14
        verde      15
        vermelho   25
     ES amarelo    23
        azul       23
        roxo       22
        verde      24
        vermelho   25
     MT amarelo    24
        azul       19
        roxo       16
        verde      26
        vermelho   14
     RJ amarelo    14
        azul       20
        roxo       14
        verde      21
        vermelho   14
     SP amarelo    20
        azul       24
        roxo       17
        verde      18
        vermelho   14
M    BA amarelo    15
        azul       17
        roxo       24
        verde      22
        vermelho   30
     ES amarelo    14
        azul       19
        roxo       18
        verde      22
        vermelho   20
     MT amarelo    33
        azul       19
        roxo       15
        verde      18
        vermelho   22
     RJ amarelo    29
        azul       18
        roxo       20
        verde      19
        vermelho   19
     SP amarelo    17
        azul       22
        roxo       17
        verde      22
        vermelho   22

","
            0
        ",,,"['\npython', 'pandas', 'data', 'data-science', 'pivot\n']"
523094,Como inicializo uma lista com x posições em Python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 7 meses.




                        Melhore esta pergunta
                    



Quero criar na lista x posições vazias antes de encher, como faço?
","
Para resolver o seu problema não será necessário nada mais do que uma multiplicação...
Da mesma forma que você pode criar um print() do seguinte jeito:
print('-' * 10)

Resultado:
----------

Você pode criar uma lista utilizando a mesma técnica.

Desta forma o código seria assim:
lista = [None] * 50 #o valor 50 pode ser trocado por qualquer um

Isto ira criar uma lista com 50 posições todas preenchidas com o valor None que posteriormente poderá ser substituído por qualquer outro valor desejado.

Para ter certeza do resultado faça os seguintes testes:
print(len(lista)) #ira mostrar o tamanho da lista criada. No caso aqui vai aparecer 50.
print(lista) #Mostra toda a lista com os seus valores, se você contar irá ver que possui 50 elementos.

","
            2
        ",,,"['\npython', 'lista\n']"
523082,Tentativa de comparar valores de uma lista em uma função não gera o resultado esperado,"
Tenho uma função que recebe uma lista e dentro dela um laço de repetição com o objetivo de percorrer todas as posições e comparar o valor daquela determinada posição com o valor que vem por parâmetro:
def recebeListaVal(number, value):

    lista = number
    valor = value

Quando o laço for é executado e tento comparar os valores que estão passando no momento pela lista com o valor recebido por parâmetro, não entra na condição.
for i in range(len(lista)):    
    if valor == lista[i]:      
        print(f'{value} elemento encontrado na lista contendo: {lista[i]}')

Tentei realizar um ""debug manual"" usando print antes do if para saber se os valores estão atribuídos e constatei que sim. Contudo, o problema persiste, fiz a lista com ocorrências repetidas do número 4 para testar buscar ele mas não encontra porque não entra na condição. Abaixo estão as entradas para a função e a chamada da mesma:
L = ['1','4','3', '4', '5', '6','4']
val = int(input('Digite um valor para buscar na lista : '))

recebeListaVal(L,val)

","
Sua função não entra no loop for uma vez que no if vc compara a variável valor do tipo int com o elemento lista[i] que no caso da lista criada por vc é uma String.
Um número com ' em volta é lido como tipo String, portanto a lista
L = ['1','4','3', '4', '5', '6','4']

Guardou apenas os valores do tipo String, o que pode ser confirmado da seguinte maneira:
L = ['1','4','3', '4', '5', '6','4']
for i in L:
    print(type(i))

Retorno:

<class 'str'
<class 'str'>
<class 'str'>
<class 'str'>
<class 'str'>
<class 'str'>
<class 'str'>

Correção
Para a correção vc tem algumas opções, acredito que essas são as mais simples:

remover os ' ao criar a lista, ficando da seguinte maneira:
L = [1,4,3, 4, 5, 6,4]


Código final:
def recebeListaVal(number, value):

lista = number
valor = value

for i in range(len(lista)):    
    if valor == lista[i]:      
        print(f'{value} elemento encontrado na lista contendo: {lista[i]}')

L = [1,4,3, 4, 5, 6,4]
val = int(input('Digite um valor para buscar na lista : '))

recebeListaVal(L,val)


converter o tipo da variável para int, utilizando o método int() ao fazer a comparação
(Substituir lista[i] por int(lista[i]):
for i in range(len(lista)):
    if valor == int(lista[i]):      
        print(f'{value} elemento encontrado na lista contendo: {lista[i]}')



Código final:
def recebeListaVal(number, value):

lista = number
valor = value

for i in range(len(lista)):    
    if valor == int(lista[i]):      
        print(f'{value} elemento encontrado na lista contendo: {lista[i]}')

L = ['1','4','3', '4', '5', '6','4']
val = int(input('Digite um valor para buscar na lista : '))

recebeListaVal(L,val)

Espero ter ajudado
-v-
","
            0
        ",,,"['\npython', 'funções', 'lista', 'lógica\n']"
522990,Pylint no VSCode,"
Estou começando a usar o VSCode para trabalhar com Python, e gostaria de configurar o Pylint para que destacasse os erros|warnings enquanto digito (como o PyCharm faz), por padrão os lints só são 'executados' no VSCode quando eu salvo o arquivo... Tem como mudar esse comportamento? Dá pra configurar o Pylint pra que se comporte como no PyCharm e verifique o código enquanto ainda estou escrevendo ele?
Minhas configurações do VSCode (Settings.json) para Python são as seguintes:
    ""python.pythonPath"": ""venv\\Scripts\\python.exe"", 
    ""python.autoComplete.addBrackets"": true,
    ""python.analysis.completeFunctionParens"": true,
    ""python.linting.pylintEnabled"": true,
    ""python.linting.pylintArgs"": [
        ""--load-plugins=pylint_django"",
        ""--disable=missing-docstring""
    ],

Obrigada
","
Cara, rodar enquanto tu ta programando acho que não é possível, um solução para isso seria tu diminuir o tempo entre os salvamentos automáticos do VSCode, assim ele salva sozinho com mais frequência e já aplica o PyLint.
Acessa as preferências do teus VSCode:

Acessa Text Editor, Files e na opção Auto-save delay coloca o tempo que desejar entre os salvamentos automáticos. O valor default é 1000ms.

","
            2
        ",,,"['\npython', 'python-3.x', 'visual-studio-code', 'configuração\n']"
522944,Python - Verificação de itens em uma lista,"
Estou com um cenário, um pouco confuso de explicar... mas vou tentar...
Preciso comparar listA com listaB, onde caso 1 ou mais itens da listaA estejam dentro da listaB, eu printo isso na tela, mas caso na listaB tenha algum item que não esteja na listaA, nada aconteça.
As listas são parecidas com as abaixo:
dns_svc = ['DNS', 's-udp-53', 's-tcp-53', 'junos-dns-udp', 'junos-dns-tcp']

app1 = ['s-tcp-443', 'Domain-logon']
app2 = ['s-tcp-443', 'DNS']
app3 = ['s-udp-53', 's-tcp-80']
app4 = ['DNS']
app5 = ['s-tdp-53', 's-udp-53']
app6 = ['junos-dns-udp', 'junos-dns-tcp']

dns_svc seria a listaA, enquanto que as listas appx são a listaB.
Se alguém poder dar uma sugestão.
Fiz o script abaixo, mas ele está me trazendo mais linhas do que deveria. Ele deveria me trazer 3 linhas:
app1 = ['tcp-443', 'Domain-logon']
app2 = ['tcp-443', 'DNS']
app3 = ['udp-53', 'tcp-80']
app4 = ['DNS']
app5 = ['tcp-53', 's-udp-53']
app6 = ['junos-dns-udp', 'junos-dns-tcp']
applist = [app1, app2, app3, app4, app5, app6]

dns_svc = ['DNS', 's-udp-53', 's-tcp-53', 'junos-dns-udp', 'junos-dns-tcp']

for i in dns_svc:
    for a in applist:
        if i in a:
            print(i)

","
Uma solução para imprimir os dados únicos que estão tanto na listaA e na listaB eu utilizei o set que é uma coleção de items onde não pode ter valores duplicados
Segue o código:
dns_svc = ['DNS', 's-udp-53', 's-tcp-53', 'junos-dns-udp', 'junos-dns-tcp']

app1 = ['tcp-443', 'Domain-logon']
app2 = ['tcp-443', 'DNS']
app3 = ['udp-53', 'tcp-80']
app4 = ['DNS']
app5 = ['tcp-53', 's-udp-53']
app6 = ['junos-dns-udp', 'junos-dns-tcp']
applist = [app1, app2, app3, app4, app5, app6]

items = set()

for i in dns_svc:
    for a in applist:
        if i in a:
            items.add(i)

for item in items:
    print(item)

o resultado após rodar o código:
junos-dns-udp
DNS
junos-dns-tcp
s-udp-53

","
            1
        ","
Kaique, muito obrigado! Eu estava tentando aqui e acho que consegui tbm... Mas a sua sugestão parece ser muito mais eficiente (to começando ainda...), mais simples e mais claro :). De qualquer forma segue como eu fiz:
app1 = ['s-tcp-443', 'Domain-logon']
app2 = ['s-tcp-443', 'DNS']
app3 = ['s-udp-53', 's-tcp-80']
app4 = ['DNS']
app5 = ['s-tcp-53', 's-udp-53']
app6 = ['junos-dns-udp', 'junos-dns-tcp']
app7 = ['junos-dns-udp']
app8 = ['s-tcp-53', 'DNS']

def comparing(lst):
    dns_svc = ['DNS', 's-udp-53', 's-tcp-53', 'junos-dns-udp', 'junos-dns-tcp']
    flag = True
    for ap in lst:
        if ap not in dns_svc:
            flag = False
            continue
        else:
            if flag:
                flag = True

    return flag

applist = [app1, app2, app3, app4, app5, app6, app7, app8]

for app in applist:
    a = comparing(app)
    if a:
        print(app)

","
            -1
        ","['\npython', 'lista', 'for\n']"
522868,PyMySql - Para que serve o .cursor(),"
Estou em aprendizado de banco de dados atraves do PyMySql no Python, porém muitos videos apenas fala como fazer mas não fala, porque fez... Queria perguntar para que serve o .cursor() em PyMySQL?
","
Após a criação do banco de dados o que acontece é que o .cursor retorna um ""novo cursor"" no seu Data Base, ele serve para escrever, acrescentar, criar tabelas, editar tabelas e entre outras coisas, ele simplesmente te dá tudo que o Mysql pode oferecer no terminal(cli) com retorno é claro para o Python interpretar...
","
            -3
        ",,,"['\nmysql', 'python', 'banco-de-dados\n']"
522842,Python - Erro import pandas,"
Pessoal estou com problemas quando tento usar o pandas no meu projeto, vejam esse erro:
File ""c:\Users\jua2544825\Desktop\front_reembolso\main.py"", line 10, in <module>
    from pandas import read_csv as pd
  File ""C:\Users\jua2544825\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\__init__.py"", line 16, in <module>
    raise ImportError(
ImportError: Unable to import required dependencies:
dateutil: No module named 'dateutil'

Alguém sabe o que pode estar ocasionando esse erro?
fiz a instalação do pandas normalmente, testei em outra maquina minha e funciona normalmente.
","
Você fez a instalação utilizando o pip?
pip3 install python-dateutil

","
            1
        ",,,"['\npython', 'pandas\n']"
522804,Encontrar valores repetidos em uma lista e inserir outro valor em seu lugar com Python,"
Tenho uma lista que contém outras listas com dados referentes a nome, idade e altura de várias pessoas:
pessoas = [['PAULO', 75, 1.74], ['ANDRE', 15, 1.87], ['PEDRO', 26, 1.46], ['JULIO', 75, 1.78], ['PAULO', 84, 1.88], ['JOÃO', 34, 1.56], ['SERGIO', 88, 1.74]]

Feito isso, eu criei um for para encontrar pessoas com nomes repetidos. Caso encontre um nome igual, ele compara a idade. Se essa pessoa com o mesmo nome for mais velha, ele substitui a idade e a altura dessa pessoa com o mesmo nome, criando assim uma nova lista (l). Ou seja, eu nao quero nomes repetidos na lista. Caso haja, ele deixa na nova lista a pessoa que for mais velha, com sua respectiva idade.
Esse foi meu código:
l = []
for i in pessoas:
    if pessoas[i][0] not in l: #SE NÃO TIVER NENHUMA PESSOA COM ESSE NOME, É INSERIDO OS DADOS DA PRIMEIRA PESSOA
        l.append(i)
    else:
        idadeindex = l.index(pessoas[i][0]) #SE JÁ TIVER ESSE NOME, Ó CÓDIGO PROCURA O INDEX DO NOME QUE JA ESTA DENTRO DA LISTA
        if l[idadeindex][1] < pessoas[i][1]: #SE A IDADE DE QUEM ESTA DENTRO DA LISTA FOR MENOR DA PESSOA QUE ESTÁ FORA
            l[idadeindex][1] = pessoas[i][1] #POR FIM, ELE SUBSTITUI A IDADE E A ALTURA, MATENDO O NOME
            l[idadeindex][2] = pessoas[i][2]
print(l)

Ele volta esse erro:
TypeError: list indices must be integers or slices, not list

Sou novato em Python e não consigo fazer meu código funcionar. Alguém consegue pensar em uma forma mais fácil de fazer isso?
","
Esse erro está sendo gerado porque você está percorrendo cada lista da sua lista de listas e tentando usá-las como um índice, que deve ser um número inteiro.
O que você certamente queria fazer é:
for i in range(len(pessoas)):
    # Código...

Para verificar se os nomes já existem na lista, o ideal seria usar um dicionário. Dessa forma, não seria mais necessário pesquisar pelo índice, mas sim pelo nome. Veja o código abaixo:
pessoas_filtradas = {}

for pessoa in pessoas:
    if not pessoa[0] in pessoas_filtradas:
        # Aqui ele adiciona apenas [altura, peso] porque o
        # nome já é registrado como chave.
        pessoas_filtradas[pessoa[0]] = pessoa[1:]
    else:
        if pessoas_filtradas[pessoa[0]][0] < pessoa[1]:
            pessoas_filtradas[pessoa[0]] = pessoa[1:]

","
            0
        ",,,"['\npython', 'python-3.x\n']"
522747,Renderizar campo JSON Django,"
Estou fazendo um projeto usando o Django 3.1.2, este projeto precisa de um registro de logs.
Eu criei um modelo para logs:
class Log(models.Model):
    Usuario = models.CharField('Usuário que fez a ação', max_length=100)
    Perfil = models.SmallIntegerField('Quem está sofrendo a ação', choices=PERFIL_CHOICE)
    Acao = models.CharField('Tipo de Ação Realizada', max_length=2, choices=ACAO_CHOICE)
    Resultado = models.JSONField('Resultado', null=True, blank=True)
    Processando = models.BooleanField('Processando', default=True)
    TituloProcesso = models.CharField(""Titulo do Processo"", max_length=100, null=True, blank=True)
    DataAcao = models.DateTimeField('Data da Ação', auto_now_add=True)

O log do modelo possui o campo ""Resultado"" que é do tipo JSONField, este campo está funcionando corretamente.
Os dados que são salvos no campo são dinâmicos, então as chaves e valores json não serão sempre os mesmos, então é necessário mais fácil exibir este campo no modelo.
Estava procurando o ""django-jsonfiel"", não funciona no Django 3.1
Alguém conhece alguma forma de exibir este campo já formatado dinamicamente?
","
Obrigado Paulo a quebra de linha com o ""linebreaks"" funcionou.
To com uma outra duvida aqui que não consigo resolver que e codificar o json pro utf-8.
no terminal ele exibi normao codificado template não, já tentei codificar antes depois, até consegui codificar so que ai ele perde a formatação.
tentei dessa forma mais não vai:
@login_required

def log_detail_view(request, log_id):
objLog = Log.objects.get(pk=log_id)
print(objLog.Resultado)
data = str(objLog.Resultado).encode('utf-8')
data = data.decode('utf-8')
resultado = json.dumps(objLog.Resultado, indent=4)
print(resultado)
data = str(resultado).encode('utf-8')
data = data.decode('utf-8')
# print(data)
context = {
    'user': request.user,
    'objLog': objLog,
    'resultado': resultado,
}
return render(request, ""relatorio/log_detail.html"", context)

se alguém souber.
","
            -1
        ",,,"['\npython', 'json', 'django', 'django-templates', 'django3\n']"
522740,Loop for com comando isinstance() não funciona como esperado [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Variável se transforma em string sem motivo

                                (3 respostas)
                            

Fechada há 8 meses.



Na primeira vez que printei a variável ""b"", esperava que aparecesse o número 6, porém é retornado um 0. No entanto, fora da função ele funciona perfeitamente. Como fazer com que esse código específico funcione dentro de uma função?
a = [0, 1, 2, 3, 4, 5, 'b']
b = 0


def how_many_integers(aa, bb):
    for i in aa:
        if isinstance(i, int):
            bb += 1


how_many_integers(a, b)
print(b) # Retorna 0

for i in a:
    if isinstance(i, int):
        b += 1

print(b) # Retorna 6

","
Para justificar esse comportamento será necessário comentar sobre objetos mutáveis e imutáveis. Em resumo, objetos mutáveis permitem que seu valor seja alterado, enquanto imutáveis não.
Seu objeto b é do tipo int, que é imutável e, portanto, não permite ter seu valor alterado. Mas como posso fazer b += 1 então e incrementar o valor dele? O que acontece, na verdade, é a criação de um novo objeto do tipo int com o valor b+1 e a sobrescrita do b original pelo novo objeto.
Então por que não funciona em um caso e em outro não?
Quando você passa o objeto para a função, toda essa operação irá ocorrer no objeto bb, que é o parâmetro da função, existindo apenas localmente. Quando você faz print(b), você ainda estará exibindo o objeto original, sem alterações, por isso aparece o zero.
Quando você modifica diretamente esse objeto no escopo global, como fez no laço  for, você perde a referência do objeto original b e sempre terá uma ""versão atualizada"" e, por isso, é exibido o valor 6.
Como comentado, a solução mais simples é você fazer o devido retorno do contador na função:
def how_many_integers(aa):
    bb = 0
    for i in aa:
        if isinstance(i, int):
            bb += 1
    return bb

b = how_many_integers(a)
print(b)  # 6

","
            3
        ",,,"['\npython', 'python-3.x\n']"
522655,Erro: string indices must be integers em loop,"
boa noite, estou precisando fazer um for para uma requisição baseado em um excel, com isso estou fazendo assim:
df1 = pd.read_excel('D:/repositorio/python/leitura.xls')
count = 0
for y in df1['EAN']:   
        data =""{\""productCode\"":\""EAN%d\""}"" % (y)

Funciona corretamente, mas preciso usar outros campos do Excel Po, e estou tentando fazer assim:
df1 = pd.read_excel('D:/repositorio/python/leitura.xls')
count = 0
for y in df1:   
        data =""{\""productCode\"":\""EAN%d\""}"" % (y['EAN'])

Só que assim esse erro está dando:
TypeError                                 Traceback (most recent call last)
C:\Users\OTACIO~1.BAR\AppData\Local\Temp/ipykernel_11848/1268633844.py in <module>
     19 for y in df1:
     20 
---> 21         data =""{\""productCode\"":\""EAN%d\""}"" % (y['EAN'])
TypeError: string indices must be integers

Poderiam me ajudar com a forma correta de fazer?
","
Você deve usar a função iterrows do dataframe do panda.
Faça algo como:
for index, row in df1.iterrows():
data =""{""productCode"":""EAN%d""}"" % (row['EAN'])
","
            3
        ",,,"['\npython', 'excel\n']"
522633,Como criar uma estrutura de diretórios em memória com Python?,"
Olá. Estou com o seguinte cenário: estou lendo um dataframe, o qual possui uma coluna com XMLs. Estou gravando estes XMLs em arquivos .xml separadamente, para posteriormente salvá-los em uma determinada estrutura de pastas e, por fim, zipar essa estrutura. Porém, preciso fazer isso em memória.
Segue a tentativa de código até o momento:
import os
import zipfile
import pandas as pd
import csv
from io import StringIO, BytesIO

df = pd.read_csv(arq.csv, low_memory=False)

version = '1'
year = '2021'
month = 'august'
day = '1'
my_id = 'some_id'
memory_zip = BytesIO()    
memory_xml = StringIO()
memory_path = StringIO()
    
with zipfile.ZipFile(memory_zip, 'w', compression=zipfile.ZIP_DEFLATED, compresslevel=9) as zf: 
     for line in range(len(df)):
          path = version+'/'+year+'/'+month+'/'+day+'/'+my_id+'.xml'
          if (memory_path.getvalue() == path):
               pass
          else:
               memory_path.write(path)
          df.iloc[line,:].to_csv(memory_xml, header=False, index=False, escapechar='\\', quoting=csv.QUOTE_NONE) 
          zf.writestr(memory_path, memory_xml.getvalue())

Porém, estou recebendo o seguinte erro:
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-62-73f2d5a6d220> in <module>
---> 74         zf.writestr(memory_path, memory_xml.getvalue())

~\Anaconda3\lib\zipfile.py in writestr(self, zinfo_or_arcname, data, compress_type, compresslevel)
   1786             data = data.encode(""utf-8"")
   1787         if not isinstance(zinfo_or_arcname, ZipInfo):
-> 1788             zinfo = ZipInfo(filename=zinfo_or_arcname,
   1789                             date_time=time.localtime(time.time())[:6])
   1790             zinfo.compress_type = self.compression

~\Anaconda3\lib\zipfile.py in __init__(self, filename, date_time)
    347         # Terminate the file name at the first null byte.  Null bytes in file
    348         # names are used as tricks by viruses in archives.
--> 349         null_byte = filename.find(chr(0))
    350         if null_byte >= 0:
    351             filename = filename[0:null_byte]

AttributeError: '_io.StringIO' object has no attribute 'find'

Poderiam me auxiliar, por gentileza?
Agradeço desde já!
","
Solucionado: ao invés de utilizar ""/"" no path, basta trocar por aspas duplas invertidas.
","
            0
        ",,,"['\npython', 'xml', 'pandas', 'memória', 'arquivo-zip\n']"
522533,"Por que ao ordenar uma lista com sort(), retorna None? [duplicada]","






Essa pergunta já tem respostas aqui:
                        
                    



Método ""sort"" retornando apenas ""None"", qual o motivo?

                                (2 respostas)
                            

Fechada há 2 anos.



O script a seguir ordena um dicionário:
d = {'a': 10, 'g': 15, 'c': 67, 'z': 90, 'e': 144}

ordenada = list(d.keys()) # gera uma lista das chaves do dicionário (protegida por uma tupla)
ordenada.sort() # ordena a lista de chaves
for chave in ordenada:
    print(chave, '=', d[chave], end=', ') # mapeia os valores com as chaves ordenadas

Tentei desta forma também e não consegui:
ordenada = list(d.keys()).sort()
print(ordenada) # está retornando None

Queria entender porquê aplicando o método sort() na mesma linha ele está retornando None. Achei que o paradigma de orientação a objeto seria aplicado aqui, onde primeiro eu transformo d.keys() em um objeto list para em seguida coloca-lo em ordem. Faz sentido?
Aproveitando, se puderem, explicar o significado de None em algum outro caso mais elaborado.
","
Segundo a documentação, list.sort altera a lista in-place (ou seja, os elementos da lista são rearranjados internamente, em vez de retornar outra lista). Lá também é dito que ""it does not return the sorted sequence"" (não retorna a lista ordenada).
Mais ainda, a documentação também afirma que:

The methods that add, subtract, or rearrange their members in place, and don’t return a specific item, never return the collection instance itself but None.

Ou seja, métodos como sort, que alteram o conteúdo in place e não retornam a própria lista, retornam None.

Se quiser que retorne outra lista, use sorted:
d = {'a': 10, 'g': 15, 'c': 67, 'z': 90, 'e': 144}
ordenada = sorted(d.keys())
for chave in ordenada:
    print(chave, '=', d[chave], end=', ')

Obs: o for acima imprime uma vírgula a mais no final, então uma forma de imprimir corretamente seria:
print(', '.join(f'{chave} = {d[chave]}' for chave in ordenada))

Que imprime:
a = 10, c = 67, e = 144, g = 15, z = 90

","
            4
        ",,,"['\npython', 'classificação', 'dicionário\n']"
522517,erro sendkeys não digita selenium - python,"
Olá, estou criando uma automação com o webdriver e panda no python, onde os valores das celulas de uma determinada planilha excel (xlsx) devem ser digitados na pagina do chrome. Entretanto,  em um determinado campo da página quando tento utilizar o send keys, ele simplesmente não digita. Trata se de um campo de valor financeiro, que por default fica com o valor ""0,00"" exibido.
Abaixo o código, onde o erro está no find element do valor :
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
from selenium.webdriver.support.ui import Select
from selenium.webdriver import ActionChains
import os
import pandas as pd



teste= pd.read_excel(r'C:\Users\Documentos\teste.xlsx')


navegador = webdriver.Chrome()
action = ActionChains(navegador)
login=""xxx""
senha=""xxxx""


navegador.get(""site"") 

navegador.maximize_window()

navegador.find_element_by_xpath('//*[@id=""Usr""]').send_keys(login)
navegador.find_element_by_xpath('//*[@id=""Pwd""]').send_keys(senha)
navegador.find_element_by_xpath('//*[@id=""btnSubmit""]').click()
time.sleep(1)

navegador.find_element_by_xpath('//*[@id=""menu-bar""]/a[2]/img').click()
ddelement= Select(navegador.find_element_by_xpath('//*[@id=""_tabSup""]/tbody/tr/td[1]/select[1]'))
ddelement.select_by_index(34)
time.sleep(4)

navegador.find_element_by_xpath('//*[@id=""_divMnu""]/table[1]/tbody/tr[2]/td/a[2]').click()
local= navegador.find_element_by_xpath('//*[@id=""header_txt2""]')
action.context_click(local).perform()
navegador.find_element_by_xpath('//*[@id=""gridLv_menu_itemMenu_0""]').click()

for column in teste.index:
    parte=teste.loc[column,'PARTE']
    time.sleep(1)
    navegador.find_element_by_xpath(' //*[@id=""genSearch_is_cpSearch""]/input').send_keys(parte) 
    navegador.find_element_by_xpath('/html/body/center/table/tbody/tr[2]/td/table/tbody/tr/td/table/tbody/tr[3]/td[2]/button ').click()
    time.sleep(2)
    navegador.switch_to.frame(navegador.find_element_by_tag_name(""iframe""))

    valor = teste.loc[column,'VALOR']
    navegador.find_element_by_xpath(""//*[@id=el__2019434]/input"").send_keys(valor)

O print do campo

O print da estrutura HTML

Já tentei todas as possibilidades mas em nenhuma delas o campo é preenchido, inclusive com css selector.
Obrigado!
","
Nesse caso pode tentar usar
input = navegador.find_element_by_xpath(""//*[@id=el__2019434]/input"")
input.send_keys(Keys.CONTROL, 'a')
input.send_keys(valor)

mais compacto
navegador.find_element_by_xpath(""//*[@id=el__2019434]/input"").send_keys(Keys.CONTROL, 'a' + valor)

","
            0
        ",,,"['\npython', 'selenium', 'xpath\n']"
522510,Extrair texto de uma string em python,"
Estou com a seguinte dificuldade.
Tenho um df com varias colunas e uma delas é a Descrição. No meio desta descrição tenho o código do produto e gostaria de extrair essa informação para uma nova coluna. Por exemplo
Descrição.: ""Esta é a descrição AA-123.456 do produto....""
Nova coluna ""AA-123.456""
Alguém sabe como faço isso no python?
","
Caso os códigos tenham um padrão de formação conforme seu exemplo LL-NNN.NNN, onde L corresponde à uma letra uppercase e N corresponde à um número. Além disso, tanto o hífen quanto o ponto aparecem naquela posição específica. Você pode usar o método str.extract com a expressão regular ([A-Z]{2}-\d{3}\.\d{3})
Nota Em se tratando de expressões regulares, sempre existe uma mais abrangente.
Veja o exemplo abaixo:
Importando biblioteca
import pandas as pd

Criando dataframe de teste
df = pd.DataFrame({""cod"": [1, 2, 3, 4], ""descricao"": [""Um texto qualquer AA-123.456 e segue com mais coisa"", ""Outro texto com o codigo BB-232.444 e vamos lá"", ""Por fim um produto CC-666.888 e fim"", ""um errado AA-12.3.456""]})

print(df)

   cod                                          descricao
0    1  Um texto qualquer AA-123.456 e segue com mais ...
1    2     Outro texto com o codigo BB-232.444 e vamos lá
2    3                Por fim um produto CC-666.888 e fim
3    4                              um errado AA-12.3.456

Criando nova coluna
df[""novaColuna""] = df[""descricao""].str.extract(r'([A-Z]{2}-\d{3}\.\d{3})')

print(df)

   cod                                          descricao  novaColuna
0    1  Um texto qualquer AA-123.456 e segue com mais ...  AA-123.456
1    2     Outro texto com o codigo BB-232.444 e vamos lá  BB-232.444
2    3                Por fim um produto CC-666.888 e fim  CC-666.888
3    4                              um errado AA-12.3.456         NaN

Repare que para o último item, não foi extraído o código, pois o mesmo não está no padrão citado.
","
            0
        ",,,"['\npython', 'pandas\n']"
522504,Como criar um programa executavel com python e publica na PyPI,"
Quero criar um comando no terminal linux eu criei um programa simples ( atualizar a distro linux ) com Python e publiquei na PyPI mas quanto e baixei e digitei o nome dele não foi executado pior disse que não existia um comando com esse nome fiz várias tentativas e não consegui.
Queria que executasse como estivesse no meu ambiente mas não está funcionando.
main do programa:
#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
from subprocess import check_output, call
 
def process():
       print('UPDATE')
       update = check_output('sudo apt update', shell=True)
       call('clear', shell=True)
 
       print('UPGRADE')
       upgrade = check_output('sudo apt upgrade', shell=True)
       call('clear', shell=True)
 
       if (update or upgrade == True):
           call('clear', shell=True)
           print('Your system is up to date')
       else:
           call('clear', shell=True)
           print('Erro')
process()

setup.py:
#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
from setuptools import find_packages, setup
import os
import re
 
with open('README.md', 'rb') as f:
   readme = f.read().decode('utf-8')
 
with open(os.path.join('__init__.py'), 'rb') as f:
   init_py = f.read().decode('utf-8')
 
version = re.search(
   '^__version__ = [\'\""]([^\'\""]+)[\'\""]', init_py, re.MULTILINE
).group(1)
author = re.search(
   '^__author__ = [\'\""]([^\'\""]+)[\'\""]', init_py, re.MULTILINE
).group(1)
email = re.search(
   '^__email__ = [\'\""]([^\'\""]+)[\'\""]', init_py, re.MULTILINE
).group(1)
 
setup(
   name='upug',
   packages=find_packages(),
   version=version,
   description='Update linux systems',
   long_description=readme,
   long_description_content_type=""text/markdown"",
   author=author,
   author_email=email,
   url='https://github.com/ward910/UpUg',
   install_requires=[],
   license='MIT',
   keywords=['GNU/linux', 'linux', 'python3'],
   classifiers=[
       'Intended Audience :: Developers',
       'License :: OSI Approved :: MIT License',
       'Natural Language :: English',
       'Programming Language :: Python :: 3',
   ],
)

Repositório
PyPI
","
Está faltando o argumento entry_points no seu setup.py. Esse argumento define os ""pontos de entrada"" do seu pacote, isto é, indica qual função do seu pacote você deseja associar com um nome de comando no console.
Exemplo:
setup(
    # outros argumentos vão aqui ...
    entry_points={
        'console_scripts': [
            'nome-do-comando=modulo.arquivo:funcao',
            'outro-comando=modulo.submodulo:outra_funcao'
        ]
)

Depois de instalado, o pacote permite acessar diretamente a função modulo.arquivo:funcao com o comando de terminal nome-do-comando.
Note que, neste caso, estou assumindo que há um arquivo chamado arquivo.py dentro da pasta modulo (a partir da raiz do seu pacote), e neste arquivo há uma função chamada funcao.
","
            1
        ",,,['\npython\n']
522498,É possível substituir certos valores por NA em pandas sem o uso de laços?,"
Estava estudando limpeza de dados, e vi que as vezes pode haver valores int em colunas que deveriam ser string e vice versa, então a solução dada pelo autor da publicação que eu estava lendo usa um laço for para substituir os valores para NaN da seguinte maneira.
# Detecting numbers 
cnt=0
for row in df['OWN_OCCUPIED']:
    try:
        int(row)
        df.loc[cnt, 'OWN_OCCUPIED']=np.nan
    except ValueError:
        pass
    cnt+=1

mas para grande volume de dados laços não são muito lentos?
tem outra forma de fazer isso?
","
Temos dois cenários:

Colunas que possuem inteiros que deveriam ser string
Colunas que possuem string que deveriam ser inteiros

Para o primeiro caso, por exemplo, caso o inteiro 1 tenha que se transformar na string 1, a solução é simples: basta usar o astype
Exemplo
df[""coluna""] = df[""coluna""].astype(str)

Já para o segundo caso temos duas possibilidades:
a. Todos os valores que têm que ser convertidos de string para int (float) podem ser convertidos
b. Alguns (ou vários, ou todos) valores que têm que ser convertidos de string para int (float) não podem ser convertidos
Para o caso de que todos os valores podem ser convertidos, basta usar a mesma solução já descrita:
df[""coluna""] = df[""coluna""].astype(int)

Já para o segundo caso, veja o exemplo:
Criar uma função transforme para int ou retorne nan
import numpy as np

def to_int(row):
    try:
        return int(row)
    except ValueError:
        return np.nan

Usando a função em um dataframe
df = pd.DataFrame({""A"": [1, ""a"", 3, ""4""]})

print(df)

   A
0  1
1  a
2  3
3  4

df[""A""] = df[""A""].apply(to_int)

print(df)

     A
0  1.0
1  NaN
2  3.0
3  4.0

EDITADO em 10/08/2021 - motivo: comentário abaixo
Se o 10 for inteiro, faça:
df[""A""].apply(lambda x: x if isinstance(x, str) else np.nan)

Se o 10 for tipo string, faça algo como:
def only_strings(row):
    try:
        int(row)
        return np.nan
    except ValueError:
        return row

e chame com
df[""A""] = df[""A""].apply(only_string)

Fim da edição
","
            1
        ",,,"['\npython', 'pandas', 'data-science\n']"
522414,Selenium - Falta de permissão para Download,"
Criei um script em Python usando o Selenium para acessar um site e fazer o download de alguns arquivos, porém, o navegador bloqueia o download e informa a seguinte mensagem: ""Não foi possível baixar - Não há permissões"". Obs: Não possuo conta de adm no computador que executo, mas o bloqueio só acontece quando utilizo o Selenium. Se eu abrir o navegador manualmente os downloads são feitos normalmente.
Há alguma opção de ajuste no código para tratar esse bloqueio de downloads (por exemplo, alguma opção no ""Options"")?
Segue abaixo  uma parte do código como exemplo, mas o erro de permissão acontece em qualquer página/site.

def baixa_relacao():
    options = EdgeOptions()
    options.use_chromium = True
    driver = Edge(options=options)
    actionChains = ActionChains(driver)

    driver.get('confidencial')

    driver.find_element_by_xpath('//*[@id=""gsft_nav""]/div/magellan-favorites-list/ul/li[1]/div/div[1]/a/div[2]/span').click()


    driver.switch_to.frame('gsft_main')
    driver.find_element_by_link_text('Enviar Segurado...').click()

    botao = driver.find_element_by_xpath('//*[@id=""hdr_sc_req_item""]/th[5]/span/a')
    actionChains.context_click(botao).perform()

    driver.find_element_by_xpath('//*[@id=""context_list_headersc_req_item""]/div[13]').click()

    driver.find_element_by_xpath('//*[@id=""d1ad2f010a0a0b3e005c8b7fbd7c4e28_sc_req_item""]/div[2]').click()

    driver.find_element_by_id('download_button').click()


","
Utilize um User-Agent, por exemplo:
header = {'User-Agent': ""Coloque seu User-Agent aqui""}

Depois insira no parâmetro no driver.get, assim:
driver.get('confidencial', headers=header)


Obs.: para conseguir seu User-Agent basta pesquisar algum site pelo termo ""My User-Agent"".
","
            -3
        ",,,"['\npython', 'selenium', 'selenium-webdriver\n']"
522398,"Não consigo acessar o bet365 utilizando o webdriver do selenium na linguagem python, o que posso fazer?","
from selenium.webdriver.common.by import By     
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.chrome.options import Options
from time import sleep

chrome_options = Options()

chrome_options.add_argument(""--window-size=1920,1080"")

chrome_options.add_argument(""--disable-blink-features=AutomationControlled"")
                                                                                                
chrome_options.add_experimental_option(""excludeSwitches"", [""enable-automation""])

chrome_options.add_experimental_option('useAutomationExtension', False)

chrome_options.add_argument('--start-maximized')

driver = webdriver.Chrome(options=chrome_options, executable_path=r""C:\Users\chromedriver_win32"")

driver.execute_cdp_cmd(""Page.addScriptToEvaluateOnNewDocument"", {""source"": 
""""""Object.defineProperty(navigator, 
'webdriver', {get: () => undefined})""""""})
                 
driver.execute_cdp_cmd(""Page.addScriptToEvaluateOnNewDocument"", {
""source"": """"""
Object.defineProperty(navigator, 'maxTouchPoints', {
get: () => 1
})
""""""})

url = 'https://www.bet365.com/#/AVR/B2026/R^1/'

driver.get(url)

",,,,,"['\npython', 'selenium-webdriver\n']"
522383,CALCULAR PORCENTAGEM DE VENDEDORES [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



A QUESTAO QUE PEDE O SEGUINTE:

1ª proposta: Prepare arranjos (variáveis indexadas) de, no máximo, 10 posições. Receba o nome, a matrícula e o total de vendas, calcule a respectiva comissão (10% das vendas) de cada vendedor para quantos o usuário desejar. Apresente ao final: a) O nome, a matrícula, o total de vendas e a respectiva comissão de cada vendedor; b) A soma total das vendas; c) O valor da maior comissão e da menor comissão; d) Os dados do(s) vendedor(es) de maior comissão; e) Os dados do(s) vendedor(es) de menor comissão.

**ALGORITMO QUE EU PROPUS **
1º Receber o nome, a matrícula e o total de vendas

2º calcule a respectiva comissão (10% das vendas) de cada vendedor para quantos o usuário desejar.
3ºApresente ao final: a) O nome, a matrícula, o total de vendas e a respectiva comissão de cada vendedor
4º  A soma total das vendas
5º O valor da maior comissão e da menor comissão
6º Os dados do(s) vendedor(es) de maior comissão e menor comissão
DE CODIGÓ EU CONSEGUI FAZER ISSO
Nomes = []
Matriculas = []
totalVendas = []
for i in range(0,3):
addNomes = input(f'Nome do {i+1}º funcionario: ').capitalize()
Nomes.append(addNomes)

addMatriculas = input('Número de matrícula: ')
Matriculas.append(addMatriculas)

addTotalVendas = input('Total de vendas: ')
totalVendas.append(int(addTotalVendas))

","
Utilizei o seu código e adicionei os itens da questão que estavam faltando e comentei algumas partes do código para uma boa visualização
Segue o código:
Nomes = []
Matriculas = []
totalVendas = []
comissoes = []

for i in range(0, 10):
    comissaoVendas = 0.1

    addNomes = input(f'Nome do {i+1}º funcionario: ').capitalize()
    Nomes.append(addNomes)

    addMatriculas = input('Número de matrícula: ')
    Matriculas.append(addMatriculas)

    addTotalVendas = input('Total de vendas: ')
    totalVendas.append(int(addTotalVendas))

    comissoes.append(float(addTotalVendas) * comissaoVendas)


# a) O nome, a matrícula, o total de vendas e a respectiva comissão de cada vendedor;
for i in range(0, 10):
    print(""\n--- "" + str(i+1) + ""º funcionario ---"")
    print(""Nome: "" + Nomes[i])
    print(""Matricula: "" + Matriculas[i])
    print(""Total de vendas: "" + str(totalVendas[i]))
    print(""Comissão: "" + str(comissoes[i]))

# b) A soma total das vendas;
print(""\nSoma total das vendas: "" + str(sum(totalVendas)))

# c) O valor da maior comissão e da menor comissão;
print(""O maior valor da comissão: "" + str(max(comissoes)) + ""\nO menor valor da comissão: "" + str(min(comissoes)))

# d) Os dados do(s) vendedor(es) de maior comissão;
maiorcomissao = float(max(comissoes))
posicaomaior = comissoes.index(maiorcomissao)
print(""\nDados do(s) vendedor(es) de maior comissão"")
print(""Nome: "" + Nomes[posicaomaior])
print(""Matricula: "" + Matriculas[posicaomaior])
print(""Total de vendas: "" + str(totalVendas[posicaomaior]))
print(""Comissão: "" + str(comissoes[posicaomaior]))


# e) Os dados do(s) vendedor(es) de menor comissão.
menorcomissao = float(min(comissoes))
posicaomenor = comissoes.index(menorcomissao)
print(""\nDados do(s) vendedor(es) de menor comissão"")
print(""Nome: "" + Nomes[posicaomenor])
print(""Matricula: "" + Matriculas[posicaomenor])
print(""Total de vendas: "" + str(totalVendas[posicaomenor]))
print(""Comissão: "" + str(comissoes[posicaomenor]))

","
            0
        ",,,['\npython\n']
522381,Dúvida sobre uma questão que eu estou tentando resolver tenho esse seguinte código em python: [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



temperaturas_c = [('Argentina', 20), ('Brasil', 30), ('Estados Unidos', 28)]

eu possuo uma lista que contém os nomes dos países e a sua temperatura em Celsius numa tupla, eu gostaria de transformar
os valores em celsius em fahrenheit e exibir a mesma lista de tuplas com o nome do país e as temperaturas em fahrenheit
","
Para fazer de um jeito bem eficiente vou usar a função map() do python no seu código para obter a lista de tuplas com o nome original e a temperatura modificada em Fahrenheit
Então ficaria desse jeito:
temperaturas_f = list(map(lambda temp: (temp[0], (9/5) * temp[1] + 32), temperaturas_c))

","
            -2
        ",,,['\npython\n']
522332,Criptografar uma string em python,"
Gostaria de saber se existe algum algoritmo de criptografia onde é possivel escolher qual a chave ou parte dela que sera usada para criptografar/descriptografar a mensagem
Um exemplo:
mensagem = 'string qualquer'

chave = 'chave escolhida'

mensagem_encriptada = encrypt(mensagem, key = chave)

print(mensagem_encriptada)

mensagem_recuperada = decrypt(mensagem_encriptada, key = chave)

print(mensagem_recuperada)

Saida esperada seria essa:
(uma string qualquer como dfg1tre*vf2d3jnh&&^/vfdfhgf34@@cfr%ws76z!)string qualquer
","
Depende da criptografia  simétrica ou assimétrica.
Há bibliotecas que auxiliam a criar uma boa criptografia  usando AES e a RSA.
um simples exemplo usando a função xor:
Quanto maior a chave mais segura sera, quanto menor  mais fácil sera para identificar a mensagem
import string
import random


chave = ''.join(random.choice(string.ascii_lowercase + string.ascii_uppercase + string.digits + '^!\$%&/()=?{[]}+~#-_.:,;<>|\\') for _ in range(0, 1024))


print(chave)

mensagem = 'python'

print(""Msg: "" + mensagem + '\n')




def str_xor(s1, s2):
    return """".join([chr(ord(c1) ^ ord(c2)) for (c1, c2) in zip(s1,s2)])



secreta = str_xor(mensagem, chave)

print(""Mensagem secreta :""+secreta + ""\n"")

recuperando_mensagem_secreta = str_xor(secreta, chave)
print(""Mensagem descriptografada "" + ""\n"" + recuperando_mensagem_secreta + ""\n"")

A cada vez que o código for iniciado uma nova criptografia sera criada
","
            -2
        ","
Você pode usar alguma biblioteca para fazer a criptografia. Tem várias bibliotecas, como a pycrypto, cryptocode e etc. Tem dezenas de bibliotecas por aí.
Um exemplo simples desse seu mesmo programinha usando a biblioteca cryptocode:
import cryptocode

chave = ""423338233093093""
mensagem = ""Esta eh a minha mensagem! :)""

MensagemCriptografada = cryptocode.encrypt(mensagem, chave)
print(""Sua mensagem criptografada: "" + MensagemCriptografada)

MensagemDescriptografada = cryptocode.decrypt(MensagemCriptografada, chave)
print(""Sua mensagem descriptografada: "" + MensagemDescriptografada)

A saída será:

Sua mensagem criptografada: gSjdIssy9DOYfPnACctSaoNn4/VcTRzlLYh4PQ==*dv9iN+Uwsad+v8QMBUgF7A==*4G2FKJ2n+WJxwak9LpyaWw==*lvCp3brLC0nJVd1g4lf3Vg==
Sua mensagem descriptografada: Esta eh a minha mensagem! :)

","
            -2
        ","['\npython', 'criptografia\n']"
522330,Função para Soma e Média Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Estou tentando desenvolver essas funções, quando digito os número 1, 2, 3, 4 e 5, elas me retornam os resultados 1 e 0,2. Conseguem me ajudar a saber o que estou fazendo errado?
def soma(lista):
    soma_lista = 0
    for i in lista:
        soma_lista += i
        return soma_lista
        
def media(lista):
    media_lista = soma(lista) / len(lista)
    return media_lista

lista = list()

for i in range(5):
    num = float(input('Números: '))
    lista.append(num)

print('A soma dos seus números é',soma(lista),'e a média deles é',media(lista),'.')

","
Na primeira função seu return precisa ficar fora do laço, assim:
def soma(lista):
    soma_lista = 0
    for i in lista:
        soma_lista += i
    return soma_lista

","
            2
        ",,,"['\npython', 'soma\n']"
522322,Python + Selenium + find_element,"
Boa tarde, estou iniciando no Python e estou fazendo um robo de web scraping para um site onde sou obrigado a informar usuário e senha.
Estou utilizando o Selenium e a parte de informar usuário e senha ok, abaixo o codigo já produzido
gecko = ""C:\Temp\Projetos\SCRAPER\src\scraper\geckodriver.exe""
binary = FirefoxBinary(r""C:\Program Files\Mozilla Firefox\firefox.exe"")
browser = webdriver.Firefox(firefox_binary=binary, executable_path=gecko)

# Variaveis para processamento
url = ""https://xxxxxx.xxxxxxx.com.br/sbe-web/login/login.html?modulo=PESSOA_JURIDICA""
usr = ""123456""
pwd = ""123456""

# Abre o browser
browser.get(url)
browser.implicitly_wait(10)

usuario = browser.find_element_by_name(""nomeUsuario"")
usuario.clear()
usuario.send_keys(usr)

senha = browser.find_element_by_name(""senha"")
senha.clear()
senha.send_keys(pwd)

elem = browser.find_element(with_tag_name(""input"").below(senha)).click

Porém me deparei com um caso onde o elemento que eu preciso clicar é uma imagem que não tem tag/name, já tentei obter o xpath mas ele traz um html gigante, entrei na documentação do Selenium e tentei usar comando bellow(), pois entendi que ele busca o próximo elemento, mas sem sucesso
elem = browser.find_element(with_tag_name(""input"").below(senha)).click
<td rowspan=""2"" valign=""center"">
    <input type=""image"" src=""/sbe-web/especifico/imagens/ok.jpg"" tabindex=""3"">
</td>

Podem me ajudar.
","
Usando Microsoft Edge ou Google Chrome, aperte f12... Irá abrir uma telinha exibindo o código html/css do site em  questão, procure no topo desta telinha dois icones 1 de um mouse clicando em uma telinha e outro de um celular e tela... Click no primeiro e depois clica na imagem em questão, uma parte do código irá ser destacada na telinha de código, aperta com o botão direito nesta parte e copia o Full Xpath.
Agora no seu código digita o seguinte:
elem = browser.find_element_by_xpath(""FULL XPATH AQUI !! DENTRO DAS ASPAS DUPLAS"").click()
Espero ter ajudado.
","
            0
        ",,,"['\npython', 'selenium\n']"
522313,Qual a diferença entre método e instrução? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Quais são as definições de método, função e procedimento?

                                (4 respostas)
                            


Função e método são a mesma coisa?

                                (2 respostas)
                            

Fechada há 8 meses.



estou estudando python, e eu vi uma coisa que estou em dúvida, quando acrescento algo em uma lista, uso .(ponto), mas quando deleto não, diz ser um método, quando uso o .(ponto), exemplo: amigos.insert(0, 'colegas de classe'), e quando não se usa o ponto? Tem algum nome diferente, ou continua sendo um método, só que sem nome?
",,,,,['\npython\n']
522307,"Estou fazendo um programa em python, e o return não está funcionando [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



def primo(b, d):
    d = 0
    c = 1
    x = 0
    while c < b+1:
        if b % c == 0:
            x += 1
        c +=1
    if x == 2:
        d = 1
    return d

d = 0
c = []
b = 3
a = int(input (""coloque o número que você quer que seja 'fatorado': ""))
while a > 1:
    d = 0
    if a % 2 == 0:
        a = a / 2
        int(a)
        c.append(""2x"")
        print (a)
    else:
        primo(b, d)
        if d == 1:
            print (d)
            c.append(b, ""x"")
            a = a /b
            b = 3
        else:
            b +=1

print (c)

","
Seu método primo(b, d) retorna o valor ""d"", porém quando você chama o método ele não está armazenando este retorno em nenhum lugar. Para solucionar este problema, atribua a função a uma variável, por exemplo:
variavel_retorno = primo(b, d)

Se quiseres descobrir se o método está funcionando coloca um print(variavel_retorno) logo após chamar o método.
","
            1
        ",,,"['\npython', 'return\n']"
522262,Como dar uma mesma resposta a diferentes possíveis entradas do usuário,"
Fiz este código para tentar obter diferentes tipos de opções de resposta do usuário, por exemplo, se eu responder ""bom dia"" ou ""BOM DIA"" em ambos posso obter a mesma saída:
print('Olá! Sou Maria, fale comigo!')
maria = input()
if maria == ['bom dia', 'BOM DIA', 'Bom dia', 'bom Dia']:
    print('Bom dia! Como você está?')

Mas o código funciona sem imprimir nada. Não entendi o porquê, alguém poderia me ajudar?
","
Você não pode utilizar o comparador de igualdade (==) para verificar se uma lista contém determinado elemento. Nesse caso, você está comparando a lista com um valor que nem sequer é do tipo lista. Isso sempre dará falso a não ser que você compare duas listas iguais. Leitura complementar.
O erro do seu código está aqui:

if maria == ['bom dia', 'BOM DIA', 'Bom dia', 'bom Dia']:


Para isso você pode utilizar o operador in, assim:

if maria in ['bom dia', 'BOM DIA', 'Bom dia', 'bom Dia']:


Mas repare que sua lista de respostas esperadas tem a mesma resposta. A diferença encontra-se apenas na caixa de cada uma das letras. Nesse sentido, uma alternativa melhor é converter tudo para caixa baixa e fazer somente uma comparação. Assim:
if maria.lower() == 'bom dia':

No entanto, se existirem respostas que variam não somente em relação à caixa, será necessário comparar a resposta a uma série de valores pré-definidos.
Contudo, utilizar uma lista pode não ser sempre uma boa ideia para esse tipo de coisa, uma vez que o método in faz buscas lineares. Uma alternativa melhor é utilizar um set, que faz buscas, em média, em tempo constante. O operador in também é utilizado. A diferença dá-se não pelo operador, mas sim pela estrutura de dados utilizada.
No fim, você teria algo mais ou menos assim:
print('Olá! Sou Maria, fale comigo!')

resp = input().lower()

# note o erro de digitação no segundo elemento, que também é visto como válido
if resp in {'bom dia', 'bon dia'}:
    print('Bom dia! Como você está?')

Repare que, ao contrário de listas, que são denotadas por colchetes, sets são denotados por chaves.
Claro que, para um conjunto pequeno de respostas, a diferença na eficiência é irrisória, mas conforme a quantidade de elementos a serem comparados aumenta, a diferença pode ser grande.
","
            2
        ",,,['\npython\n']
522177,Como entender o mapeamento (map) de lista de funções em Python?,"
lista = [0, 1, 2, 3, 4]

def square(y):
    return (y**2)
    
def cube(y):
    return (y**3)

funcs = [square, cube]

for i in lista:
    valor = map(lambda x: x(i), funcs)
    print(list((valor)))

Saída:
[0, 0]
[1, 1]
[4, 8]
[9, 27]
[16, 64]


Não consigo entender, a função map está recebendo uma lista de funções no seu segundo argumento.
Até agora só havia visto lista de valores nesse argumento. E na função lambda, o x(i) está passando cada elemento da lista como argumento para cada função na lista funcs (que tem cada elemento uma função definida).
Esse exemplo está muito diferente do havia aprendido sobre a função map.
Alguém pode explicar como interpretar esse código?
","

Até agora só havia visto lista de valores nesse argumento.

Não tem diferença porque, de certo modo, uma lista de funções não deixa de ser uma lista de valores. A lógica é a mesma, vamos recapitular.
O propósito mais genérico do map é fazer um mapeamento sobre um contêiner. No Python, a função built-in map mapeia cada elemento de um iterável (o contêiner) a uma função fornecida. Esse iterável pode ser um lista, tupla, etc.
Isso significa que, para cada um dos valores do iterável (uma lista, por exemplo) fornecido no segundo argumento, a função de mapeamento será aplicada, gerando uma nova lista de mesmo comprimento, mas com os valores alterados de acordo com a função de mapeamento.
Com essa definição, voltemos ao código da pergunta:
lista = [0, 1, 2, 3, 4]

def square(y):
        return (y**2)
    
def cube(y):
        return (y**3)

funcs = [square, cube]

for i in lista:
    valor = map(lambda x: x(i), funcs)
    print(list(valor))

Como o map está dentro de um for, ele será executado várias vezes. Nesse caso específico, executar-se-á map para cada um dos elementos da lista lista.
Para analisar o map, podemos estudar o caso de somente uma das iterações. Vejamos o que ocorre na terceira iteração (onde o valor de i é 2):
# `i` está definido como `2`.
valor = map(lambda x: x(i), funcs)
print(list(valor))

Forneceremos ao map o iterável funcs, que é basicamente uma lista de funções. Para cada uma das funções dessa lista, executaremos a função de mapeamento passada.
No caso, essa função de mapeamento é, basicamente, aplicar a função do mapeamento atual ao valor i.
Então, i sendo 2 (terceira iteração), o map produzirá um iterável correspondente a:
[square(2), cube(2)]
# Que é avaliado para: [4, 8]

Talvez a dificuldade de entender o map tenha advindo do fato de um mapeamento ser feito a cada uma das iterações do for externo. Nesse caso, ao analisar somente uma das iterações podemos ter uma noção melhor do que, de fato, o map está fazendo.
Com esse entendimento, podemos expandir para um nível superior do código: o mapeamento das funções de funcs será feito para cada um dos elementos de lista.

Outra coisa que pode ajudar a entender é fazer um teste de mesa, mas aí acho que já foge do escopo desta resposta.
","
            7
        ","
Vamos começar do começo. Segundo a documentação:

Functions are first-class objects.

Ou seja, em Python as funções são ""cidadãos de primeira classe"": elas são tratadas como se fossem valores ""normais"", podendo ser colocadas em listas, atribuídas a uma variável, passadas como parâmetro para outras funções, etc. Sobre este assunto, você pode ler mais aqui, aqui e aqui.

Portanto, uma função pode ser atribuída a uma variável:
def square(y):
        return y ** 2
    
def cube(y):
        return y ** 3

# atribui a função a uma variável
funcao = square
# como ""funcao"" aponta para ""square"", posso chamá-la normalmente
print(funcao(3)) # 9

# atribui outra função na mesma variável
funcao = cube
# agora ""funcao"" aponta para ""cube""
print(funcao(3)) # 27

E também posso criar uma lista contendo várias funções, percorrer essa lista em um loop e chamar todas elas:
def square(y):
        return y ** 2
    
def cube(y):
        return y ** 3

# lista contendo as funções
funcs = [square, cube]
# para cada função da lista, chamá-la passando o número 3 como argumento
for funcao in funcs:
    print(f'chamando {funcao.__name__}: {funcao(3)}')

A saída deste código é:
chamando square: 9
chamando cube: 27


Agora sobre o map: tudo que ele faz é aplicar uma função a todos os elementos de um iterável. Ou seja, se eu faço:
def dobro(n):
    return n * 2

valores = [1, 2, 3]
for result in map(dobro, valores):
    print(result)

Isso irá imprimir 2, 4 e 6, pois map(dobro, valores) aplica a função dobro a cada um dos elementos da lista valores. Essencialmente, isso seria equivalente a:
for valor in valores:
    print(dobro(valor))


Só que no seu caso a lista não tem valores que são passados para uma função. O que ela tem são funções que serão chamadas com determinado valor. Ou seja, seria como fazer isso:
# para cada função da lista ""funcs"", chamá-la passando o ""3"" como argumento
for funcao in funcs:
    print(funcao(3))

E nesse caso, o equivalente usando map teria que ser:
for result in map(lambda funcao: funcao(3), funcs):
    print(result)

Ou seja, a função que map recebe é um lambda (que no fundo também é uma função), que recebe como argumento uma função e a chama (passando, no caso, o número 3 como argumento). Ou seja, em vez de eu mesmo chamar a função diretamente dentro do loop, é o map que a chama e retorna o resultado (por isso, dentro do for eu já posso pegar o resultado direto).

Mas no seu caso você não está iterando pelo map, e sim pegando o resultado dele e passando para list, que por sua vez cria uma lista contendo todos os resultados. Ou seja, quando você faz:
valor = map(lambda funcao: funcao(3), funcs)
print(list(valor)) # [9, 27]

Seria equivalente a fazer:
results = [] # cria uma lista vazia
# para cada resultado do map, adicioná-lo na lista
for result in map(lambda funcao: funcao(3), funcs):
    results.append(result)
print(results) # [9, 27]

E por fim, no seu código tudo isso é feito dentro de um loop, que itera pelos valores da lista [0, 1, 2, 3, 4]. Nos exemplos acima eu sempre passei o número 3 para as funções, mas no seu loop ele faz isso para todos os valores da lista.
Ou seja, primeiro ele chama as funções para o 0 e imprime a lista com os resultados, depois faz o mesmo para o 1, para o 2 etc.

E só para constar, outra forma de criar esta lista com os resultados seria usar uma list comprehension:
for i in lista:
    print([ funcao(i) for funcao in funcs ])

","
            3
        ","['\npython', 'python-3.x', 'map\n']"
522168,Erro do tkinter na reentrada,"
Estava usando tkinter, fiz o codigo normalmente, e quando executei o mesmo, estava tudo funcionando normalmente, mas, quando saí do programa e entrei novamente ele deu erro:

meu codigo:

from tkinter import *
from random import randint

def meu_jogo():
    computador = randint(1, 10)
    texto_ganhador['text'] = 'O computador pensou no número {}'.format(computador)

janela = Tk()
janela.title('meu primeiro teste')

label = Label(janela, text='O computador irá sortea um número para você entre 0 a 10')
label.grid(column=0,row=0, padx=10, pady=10)

button = Button(janela, text='clique aqui para começar', command=meu_jogo)
button.grid(column=0, row=1, padx=10, pady=10)

texto_ganhador = Label(janela, text='')
texto_ganhador.grid(column=0,row=2)

janela.mainloop()


erro:

Traceback (most recent call last):
  File ""/storage/emulated/0/qpython/PySimpleGUI/tkinter.py"", line 1, in <module>
    from tkinter import *
  File ""/storage/emulated/0/qpython/PySimpleGUI/tkinter.py"", line 8, in <module>
    janela = Tk()
NameError: name 'Tk' is not defined

não entendo porque está acontecendo isso, Na primeira vez rodou como o esperado. Queria resolver esse erro, mas, não sei como.
",,,,,"['\npython', 'python-3.x', 'tkinter\n']"
522128,"""subplot"" está dando erro no ""title"" [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Estou tentando rodar um subplot,só que está dando erro no title(título):
> TypeError Traceback (most recent call last)
> ~\AppData\Local\Temp/ipykernel_17364/305905731.py in <module> 4
> graf_dados=df.groupby('lojas_cidade').count().produto_valor.sort_values(ascending=False)
> 5 plt.bar(graf_dados.index,graf_dados.values) ----> 6
> plt.title('Vendas por Loja') 7 plt.xticks(rotation=90) 8 TypeError:
> 'str' object is not callable

O que pode ser?
Quando tiro o title funciona normalmente.
plt.figure(figsize = (10,7))

plt.subplot(2,2,1)
graf_dados=df.groupby('lojas_cidade').count().produto_valor.sort_values(ascending=False)
plt.bar(graf_dados.index,graf_dados.values)
plt.title('Vendas por Loja')
plt.xticks(rotation=90)

plt.subplot(2,2,2)
graf_dados=df.groupby('produto_produto').count().produto_valor.sort_values(ascending=False)
plt.bar(graf_dados.index,graf_dados.values)
plt.title('Produtos que mais Vendem')
plt.xticks(rotation=90)

plt.subplot(2,2,3)
graf_dados = df[['lojas_cidade','produto_valor']].groupby('lojas_cidade').sum().produto_valor.sort_values(ascending=False)
plt.bar(graf_dados.index,graf_dados.values)
plt.title('Receita por Loja')
plt.xticks(rotation=90)

plt.subplot(2,2,4)
graf_dados=df[['produto_produto','produto_valor']].groupby('produto_produto').sum().produto_valor.sort_values(ascending=False)
plt.bar(graf_dados.index,graf_dados.values)
plt.xticks(rotation=90)
plt.title=('Receitas por Produto')
plt.tight_layout()

","
Verifique se em algum código antes, você não está setando o valor de plt.title ao invés de chamá-lo como uma função.
Por exemplo, se houver uma linha do tipo
plt.title = ""Título aqui""

e subsequentemente for executada uma linha como
plt.title(""Outro título aqui"")

esse erro vai acontecer, pois o nome title de plt foi modificado, tornando-se uma string, então chamá-lo como se ele fosse uma função produz um erro.
Numa situação normal, o nome title do Pyplot é uma função, então a linha que tem erro não fez nada de errado. O erro de fato está em modificar o title como se ele fosse uma propriedade. É um erro chato de encontrar, porque a exceção aparece num lugar, mas o erro de fato está ocorrendo antes... então você é induzido a procurar problema onde não tem.
Enfim, procure no restante do seu código por linhas como a primeira ali em cima, pois chamar plt.title não é um erro. Ele deveria ser uma função, e não uma string.
","
            -1
        ",,,"['\npython', 'matplotlib\n']"
522102,smtplib.SMTPServerDisconnected: Connection unexpectedly closed,"
Estava tentando enviar um email com python:
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

host = 'smtp.gmail.com'
port = 587
user = '***********@gmail.com'
password = '*********'

print('Criando objeto servidor...')
server = smtplib.SMTP(host, port)

print('Login...')
server.ehlo()
server.starttls()
server.login(user, password)

message = 'Ola Mundo!'

print('Criando mensagem...')
email_msg = MIMEMultipart()
email_msg['From'] = user
email_msg['To'] = '*****************@gmail.com'
email_msg['Subject'] = 'Assunto da Mensagem'

print('Adicionando texto...')
email_msg.attach(MIMEText(message, 'plain'))

print('Enviando mensagem...')
server.sendmail(email_msg['From'], email_msg['To'], email_msg.as_string())

print('Mensagem enviada!')
server.quit()

Prompt:
Criando objeto servidor...
Login...
Criando mensagem...
Adicionando texto...
Enviando mensagem...
Traceback (most recent call last):
  File ""c:\Users\Ivone\Desktop\git\web scraping\emailTest.py"", line 29, in <module>
    server.sendmail(email_msg['From'], email_msg['To'], email_msg.as_string())
  File ""C:\Users\Ivone\AppData\Local\Programs\Python\Python39\lib\smtplib.py"", line 887, in sendmail
    (code, resp) = self.data(msg)
  File ""C:\Users\Ivone\AppData\Local\Programs\Python\Python39\lib\smtplib.py"", line 574, in data
    (code, msg) = self.getreply()
  File ""C:\Users\Ivone\AppData\Local\Programs\Python\Python39\lib\smtplib.py"", line 398, in getreply
    raise SMTPServerDisconnected(""Connection unexpectedly closed"")
smtplib.SMTPServerDisconnected: Connection unexpectedly closed

","
Eu achei a resposta: desativar o módulo email do antivírus (Avast, no meu caso)
","
            -4
        ",,,"['\npython', 'python-3.x', 'smtp\n']"
522046,Estrutura de repetição while não repete trecho específico do código!,"
Estou fazendo um jogo simples de par ou ímpar em python que não executa de forma correta!
Quando o jogador vence, o jogo não pergunta novamente se ele que par ou ímpar! Como posso resolver?
from random import randint
P_OU_I = ' '
v = 0
while True:
    player = int(input('Digite um valor: '))
    computador = randint(0, 10)
    total = player + computador
    while P_OU_I not in 'PI':
        P_OU_I = str(input('Par ou ímpar: [P/I] ')).strip().upper()[0]
    print(f'Você jogou {player} e o computador {computador}. Total de {total}')
    if P_OU_I == 'P':
        if total % 2 == 0:
            print('Você VENCEU!')
            v = v + 1
        else:
            print('Você PERDEU!')
            break
    elif P_OU_I == 'I':
        if total % 2 == 1:
            print('Você VENCEU!')
            v = v + 1
        else:
            print('Você PERDEU!')
            break
    print('Vamos jogar novamente...')
print(f'GAME OVER! Você venceu {v}')

","
Na verdade seu código está executando corretamente de acordo com o que foi programado, ele só não está fazendo o que você deseja porque você não programou como deveria.
O seu erro é o seguinte: Na linha 8 você faz uma conferência para saber se já foi escolhido par ou ímpar
while P_OU_I not in 'PI':

Na primeira execução o código entra neste while pois a variável ainda se encontra vazia. No entanto, note que você não limpou essa variável em nenhum momento após a primeira rodada.
Para corrigir é bem simples, você só precisa definir novamente P_OU_I = ' ' tal qual fez no início do código. Veja como fica após corrigido:
from random import randint
P_OU_I = ' '
v = 0

while True:
    player = int(input('Digite um valor: '))
    computador = randint(0, 10)
    total = player + computador
    while P_OU_I not in 'PI':
        P_OU_I = str(input('Par ou ímpar: [P/I] ')).strip().upper()[0]
    print(f'Você jogou {player} e o computador {computador}. Total de {total}')
    if P_OU_I == 'P':
        if total % 2 == 0:
            print('Você VENCEU!')
            v += 1
        else:
            print('Você PERDEU!')
            break
    elif P_OU_I == 'I':
        if total % 2 == 1:
            print('Você VENCEU!')
            v += 1
        else:
            print('Você PERDEU!')
            break
    P_OU_I = ' '
    print('Vamos jogar novamente...')
print(f'GAME OVER! Você venceu {v}')

Também mudei algumas coisas que acho que ficam melhores. Dê uma olhada.
","
            0
        ",,,['\npython\n']
522031,Ordenar dados em dataframe pandas pela frequência de repetição de cada elemento,"
Eu tenho um dataframe e quero organizar os dados pela frequência de aparecimento de cada elemento. Do que mais se repete para o que menos se repete, para criar um ranking. Eu quero que a organização seja feita a partir das colunas uf e tipo_acidente
acidentes2020 = pd.read_csv('https://arquivos.prf.gov.br/arquivos/index.php/s/jdDLrQIf33xXSCe/download', compression='zip',encoding='iso8859-1', sep=';')

ranking2020 = acidentes2020[['uf', 'tipo_acidente']]

","
Em detalhes:
Carregando biblioteca
import pandas as pd

Criando DataFrame de teste
df = pd.DataFrame({""A"": [1,2,3,1,2,3,1,1,2,2,1,3]})

print(df)

    A
0   1
1   2
2   3
3   1
4   2
5   3
6   1
7   1
8   2
9   2
10  1
11  3

Criando coluna com frequências
df['frequencia'] = df.groupby('A')['A'].transform('count')

print(df)

    A  frequencia
0   1           5
1   2           4
2   3           3
3   1           5
4   2           4
5   3           3
6   1           5
7   1           5
8   2           4
9   2           4
10  1           5
11  3           3

Ordenando por frequência
df1 = df.sort_values(by='frequencia')

print(df1)

    A  frequencia
2   3           3
5   3           3
11  3           3
1   2           4
4   2           4
8   2           4
9   2           4
0   1           5
3   1           5
6   1           5
7   1           5
10  1           5

Nota 1: usar o ascending=False para ordenar em ordem decrescente
Nota 2: usar o inplace=True para não ter que atribuir o resultado a outro DataFrame
","
            1
        ",,,"['\npython', 'pandas', 'classificação', 'dataframe\n']"
521961,"Por que quando eu informo ""1.93"" dá erro ao converter para inteiro? [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



print('Calculadora de IMC')
peso = input('Insira o seu peso (em kg): ')
altura = input('Insira sua altura (em metros): ')

IMC = int(peso) / int(altura)**2

Quando coloco o valor da altura como ""1.93"" aparece um erro falando assim:
    IMC = int(peso) / int(altura)**2
ValueError: invalid literal for int() with base 10: '1.93'

Tem como deixar o código de jeito que eu possa colocar os valores quebrados?
","
Como pode ver na documentação oficial:

class int([x]) / class int(x, base=10)
Return an integer object constructed from a number or string x, or return 0 if no arguments are given. If x defines __int__(), int(x) returns x.__int__(). If x defines __trunc__(), it returns x.__trunc__(). For floating point numbers, this truncates towards zero.
If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance representing an integer literal in radix base.

O parâmetro pode ser um número ou uma string. Se o parâmetro implementar o método __trunc__(), será retornado o valor x.__trunc__(), que é o caso quando você passa um número com ponto flutuante.
Se o parâmetro define __int__() então será retornado x.__int__().
Se o parâmetro for do tipo string, bytes ou bytearray, então será feito a conversão conforme a base informada, que por padrão é 10, base decimal, que usamos no dia-a-dia. Ao passar um valor como '1.93', devida a presença das aspas, isso será uma string e, portanto, será tentada a conversão dessa string para inteiro na base 10. Como o valor 1.93 é inválido na base 10 (pois o caractere . não existe na base 10), dá o erro citado.
Mas isso foi só para explicar o porquê do erro, pois a solução é mais simples que isso, dado que é um erro de lógica mesmo, visto que é esperada uma entrada decimal e está sendo tratada como inteira. Basta. então, tratá-la devidamente como decimal. Para isso, uma das formas de fazer é usando float.
Uma alternativa é utilizar a biblioteca decimal, nativa do Python.
","
            3
        ",,,"['\npython', 'conversão-de-tipo', 'int\n']"
521902,Lista salvando valores do último laço utilizando random em todas as posições [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como inicializar uma lista de listas vazias?

                                (3 respostas)
                            

Fechada há 8 meses.



Gente, to tentando criar uma lista com valores aleatórios dentro de outras listas predefinidas. Aí no laço ele me retorna certinho 10 linhas com 4 dados com valores diferentes. Mas quando sai do laço e eu mando um print em todas as linhas salvou apenas os valores aleatórios do ultimo laço em todos os índices.
numbers = 10
x_tes2 = [[0,0,0,0]]*numbers


for key in range(0,numbers):
    x_tes2[key][0]=int(random.choice(year))
    x_tes2[key][1]=int(random.choice(km_driven))
    x_tes2[key][2]=str(random.choice(fuel))
    x_tes2[key][3]=str(random.choice(transmission))

    print(x_tes2[key][0:4])
print(""\n"")
print(x_tes2)

O output:

Alguém sabe o porquê?
","
O problema é que quando você cria um array da forma x_tes2 = [[0,0,0,0]]*numbers você está multiplicando a mesma lista, copiando e colando ela várias vezes. Dessa forma, quando você alterar qualquer um dos arrays todos serão alterados, porque todas se referenciam à mesma lista.
A melhor maneira para você chegar ao resultado é criar um array vazio, preencher a lista no laço for e adicionar essa lista ao array principal, algo como isso:
numbers = 10
x_tes2 = []
for key in range(0, numbers):
    random_array = [int(random.choice(year)), int(random.choice(km_driven)), str(random.choice(fuel)), str(random.choice(transmission))]
    x_tes2.append(random_array)

","
            1
        ",,,['\npython\n']
521880,Como parar execução de código Python por tempo?,"
Como posso fazer para que um trecho de código seja executado por x segundos e depois pare?
No caso em especifico, estou esperando uma resposta de uma pagina usando request, mas se demorar mais de 5 segundos, quero parar e fazer a próxima requisição.
","
Por padrão, request aguardará indefinidamente pela resposta a uma solicitação.
Se quiser especificar um tempo limite para solicitação, use o parâmetro timeout
O exemplo abaixo o tempo limite da solicitação será atingido após 10 segundos:
requests.get(`https://pt.stackoverflow.com/users/137387/augusto-vasques`, timeout=10)

Também pode ser passado uma tupla como valor de timeout:
requests.get(`https://pt.stackoverflow.com/users/137387/augusto-vasques`, timeout=(10, 5))

O primeiro elemento da tupla define o tempo limite que deve ser aguardado para se fazer uma conexão e segundo elemento é o tempo limite que deve ser aguardado para se fazer a leitura dos dados após conectado.
","
            4
        ",,,"['\npython', 'python-requests\n']"
521848,Build aplicação feita com Flask,"
Ao executar flash run, recebo o seguinte erro:

Error: Detected factory 'create_app' in module 'spcdados.app', but
could not call it without arguments. Use
""FLASK_APP='spcdados.app:create_app(args)'"" to specify arguments.

Minha estrutura é essa:

Meus arquivos de config estão da seguinte forma:
#app.py
from flask import Flask, abort, url_for, render_template
from spcdados.extensoes import configuration

def minimal_app(**config):
    app = Flask(__name__)
    configuration.init_app(app, **config)
    return app
    

def create_app(**config):
    app = minimal_app(**config)
    configuration.load_extensions(app)
    return app

#settings.toml
[default]
DEBUG = false
SQLALCHEMY_DATABASE_URI = 'sqlite:///development.db'
TITLE = ""SPC DADOS""
SECRET_KEY = ""Pocornio2233""
EXTENSIONS = [

    ""spcdados.extensoes.appearence:init_app"",
    ""spcdados.extensoes.database:init_app"",
    ""spcdados.extensoes.auth:init_app"",
    ""spcdados.extensoes.admin:init_app"",
    ""spcdados.extensoes.commands:init_app"",
    ""spcdados.blueprints.views:init_app"",
    ""spcdados.blueprints.restapi:init_app""
]
#.env
FLASK_ENV = development 
FLASK_APP = spcdados.app:create_app

Não consigo entender onde mais é necessario declarar o FLASK_APP, alguém já passou por isso?
","
Esse é um bug que ainda não foi resolvido no flask, segue debate no git
Debate sobre o bug em questão
Sendo assim, modifiquei o meu app.py dessa forma
from flask import Flask
from spcdados.extensoes import configuration


def minimal_app():
    app = Flask(__name__)
    configuration.init_app(app)
    return app


def create_app():
    app = Flask(__name__)
    configuration.init_app(app)
    configuration.load_extensions(app)
    return app

","
            0
        ",,,"['\npython', 'aplicação-web', 'flask\n']"
521812,Regex python para encontrar todos os valores com math na moeda brasileira,"
Preciso de uma regex para encontrar todos os valores monetários do brasil, já fiz varias pesquisas e teste mas não consegui chegar a um resultado satisfatório.
1.566.545,00 = True
154.565,00 = True
22.555,00 = True
1.550,00 = True
11,10 = True
1100 = false


regex utilizada: '\d{0,}\W{0,}\d{1,}\d{0,}\W{0,}\d{0,}\,{0,1}\d{0,}'

","
\d{0,} significa ""zero ou mais dígitos"", então se não tiver nenhum dígito, também vai encontrar um match.
Enfim, um valor monetário da forma que você quer segue as seguintes regras:

pode ter até 3 dígitos iniciais
depois, pode ter um ponto seguido de mais 3 dígitos, e isso pode se repetir várias vezes (ou nenhuma)
sempre termina com vírgula e dois dígitos

Uma primeira tentativa seria:
import re

regex = re.compile(r'^\d{1,3}(\.\d{3})*,\d{2}$')

valores = ['1.566.545,00', '154.565,00', '22.555,00', '1.550,00', '11,10', '1100']
for v in valores:
    print(f'{v} = {bool(regex.match(v))}')

Usei os marcadores ^ e $, que indicam o início e final da string, assim eu garanto que ela só tem o que está na regex.

\d{1,3} quer dizer ""no mínimo 1 e no máximo 3 dígitos""
Depois temos um ponto, seguido de exatamente 3 dígitos (o {3} indica que são exatamente 3). Tudo isso está entre parênteses e com o quantificador *, que significa ""zero ou mais vezes"" (é o mesmo que {0,}). Ou seja, o ponto seguido de 3 dígitos pode se repetir várias vezes (ou nenhuma)
Depois temos a vírgula e mais dois dígitos

A saída do código acima é:
1.566.545,00 = True
154.565,00 = True
22.555,00 = True
1.550,00 = True
11,10 = True
1100 = False


Mas isso ainda não trata alguns casos, como por exemplo 012,12 - deveria começar com zero? Os únicos casos que talvez pudessem começar com zero seria 0,15 ou 0,00 por exemplo. Se for o caso, aí já começa a complicar. Teria que ser algo como:
regex = re.compile(r'^((?!0)\d{1,3}(\.\d{3})*|0),\d{2}$')

Agora usei alternância (o caractere |, que significa ""ou""). E ela tem duas alternativas:

(?!0)\d{1,3}(\.\d{3})*: o trecho (?!0) é um lookahead negativo, que verifica se não tem um zero à frente. O restante é o que já vimos acima (os dígitos e as sequências de ponto + 3 dígitos). Ou seja, esta sequência não pode começar com zero.
0: é um único dígito zero

Isso quer dizer que, ou tem um zero e logo depois a vírgula, ou tem vários dígitos, desde que o primeiro não seja zero.
Depois disso temos a vírgula e os dois dígitos. Com isso, a regex aceita valores como 0,00 e 0,15, mas rejeita 00,00 e 012,12.
","
            2
        ",,,"['\npython', 'regex\n']"
521807,"pegar elemento superior selenium, python, scraping","
<div class=""cell-list-content-icon"">
<span><i class=""fa fa-briefcase""></i>EMPRESA XXXXXXXX</span>
<span><i class=""fas fa-map-marker-alt""></i>Remoto</span>
<span><i class=""fa fa-building""></i>Grande empresa</span>
<span><i class=""far fa-money-bill-alt""></i>R$7.000</span>
<span><i class=""far fa-chart-bar""></i>Pleno</span><span>
<i class=""far fa-file-alt""></i>CLT</span>
<span><i class=""fas fa-plane""></i>Aceita candidatos de fora</span></div>

Como faço para pegar o valor ""R$7.000
<span><i class=""far fa-money-bill-alt""></i>R$7.000</span>

Ele está dentro das chaves SPAN
Consigo localizar o id = ""far fa-money-bill-alt""
Mas o Valor está em uma marcação superior ou pai, marcação span
","
from bs4 import BeautifulSoup as bs
html = """"""
<div class=""cell-list-content-icon"">
<span><i class=""fa fa-briefcase""></i>EMPRESA XXXXXXXX</span>
<span><i class=""fas fa-map-marker-alt""></i>Remoto</span>
<span><i class=""fa fa-building""></i>Grande empresa</span>
<span><i class=""far fa-money-bill-alt""></i>R$7.000</span>
<span><i class=""far fa-chart-bar""></i>Pleno</span><span>
<i class=""far fa-file-alt""></i>CLT</span>
<span><i class=""fas fa-plane""></i>Aceita candidatos de fora</span></div>
""""""
belo = bs(html, 'html5lib')
spans = belo.find_all('span')
spans[3].text

edit:
Com Selenium depois do driver criado usa o método:
.find_element_by_xpath('//div/span[3]/text()')
","
            1
        ",,,"['\npython', 'selenium', 'selenium-webdriver', 'web-scraping\n']"
521717,Como resolver produto escalar sem usar a biblioteca numpy (python) [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Produto entre vetores [fechada]

                                (2 respostas)
                            

Fechada há 8 meses.



Olá, eu estou tentando fazer essa operação sem usar a biblioteca Numpy, coisa que por si só já é uma tragédia.
Eu recebo do usuário dois vetores de tamanhos iguais, e preciso fazer a operação de produto escalar entre eles. Lembrando que produto escalar é a.b = a1.b1 + a2.b2 .... + an.bn
Acho que está faltando alguma coisa que eu não entendi completamente...
Por exemplo, se eu colocar o vetor A como [1, 2, 3] e o vetor B como [3, 2, 1], o resultado da multiplicação entre eles deveria ser vetor C = [3, 4, 3]. Mas do jeito que esse código foi escrito o que eu tenho é: [3, 2, 1, 6, 4, 2, 9, 6, 3] Como eu não estou conseguindo nem multiplicar os elementos dos vetores, não faz nem sentido tentar somar os elementos do vetor C, para obter o produto final.
segue o código:
vetorA = []
vetorB = []

numA = int(input('Digite o tamanho do vetor do A: '))
while len(vetorA) < numA:
    vetorA.append(int(input('Digite um numero para preencher o vetor A: ')))

numB = int(input('Digite o tamanho do vetor do B: '))
while len(vetorB) < numB:
    vetorB.append(int(input('Digite um numero para preencher o vetor B: ')))

if len(vetorA) == len(vetorB):
    vetorC = []
    for itemA in vetorA:
        for itemB in vetorB:
            new = itemA * itemB
            vetorC.append(new)
    print(vetorC)

","
Você pode usar uma compreensão de lista:
vetorC = [elemA * elemB for elemA, elemB in zip(vetorA, vetorB)]


A função zip retorna os elementos do vetorA e vetorB em paralelo para cada iteração, então
list(zip([1, 2, 3, 4], [5, 6, 7, 8]))

retorna
[(1, 5), (2, 6), (3, 7), (4, 8)]

Já a compreensão de lista cria uma lista construindo um item para cada iteração. Nesse caso, o item a ser construído é o valor elemA * elemB. Na documentação existe uma explicação explicando e demonstrando o uso de compreensões de lista.
","
            -1
        ",,,"['\npython', 'array', 'matemática\n']"
521669,Como comparar vários termos diferentes de maneira simplificada em Python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Eu queria saber como mostrar que vários termos são diferentes de um outro termo, sem ter que ficar repetindo ? Como no exemplo:
if termo1 != valor_aleatorio and termo2 != valor_aleatorio and termo3 != valor_aleatorio:

Eu tentei de algumas formas, mas deram erro.
","
Uma possibilidade é fazer um teste de pertinência, o que nos deixa duas possibilidades:
if valor_aleatorio not in (termo1, termo2, termo3):

No caso acima é verificado se o valor da variável valor_aleatorio não está presente na tupla (termo1, termo2, termo3).

if valor_aleatorio in (termo1, termo2, termo3):

Nesse último caso é verificado se o valor da variável valor_aleatorio está presente na tupla (termo1, termo2, termo3).
","
            4
        ","
Você pode utilizar all:
if all(termo != valor_aleatorio for termo in (termo1, termo2, termo3)):

","
            -1
        ","['\npython', 'python-3.x\n']"
521655,Erro <generator object <genexpr> ao ler matriz em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    



Quero ler matriz colocando as vírgulas para separar os números, mas quando peço para mostrar a matriz, ele dá esse erro:

<generator object <genexpr>

Isso nunca me aconteceu, não faço a mínima ideia de como regularizar.
Segue abaixo o código:
leia =input('Digite a dimensão da matriz: ')
vet = [float (x) for x in leia.split(',')]
matriz = []

for i in range (len(vet)):
    linha =[]
    linha.append(float(x) for x in input(f'Digite a linha {i}: ').split(','))
    matriz.append(linha)
    
print('Matriz digitada:')
for linha in matriz:
    print(linha)

","
Você precisa usar um objeto tuple() ou list() para converter o resultado da expressão que está gerando sua matriz, mais precisamente no seu for.
código funcionando:
leia = input('Digite a dimensão da matriz: ')
vet = [float(x) for x in leia.split(',')]
matriz = []

for i in range(len(vet)):
    linha = []
    linha.append(tuple(float(x) for x in input(f'Digite a linha {i}: ').split(',')))
    matriz.append(linha)

print('Matriz digitada:')
for linha in matriz:
    print(linha)

","
            -1
        ",,,['\npython\n']
521649,Obter somente nome do arquivo do pathlib,"
Atualmente tenho o seguinte código:
from pathlib import Path

for file in Path(""resources/maps"").glob(""*.json""):
    print(file)

O qual retorna:
resources\maps\map1.json
resources\maps\map2.json
resources\maps\map3.json

Porém eu preciso apenas do nome do arquivo, e não do caminho inteiro até ele...
Existe algum método do próprio pathlib para isso?
Desde já obrigado.
","
from pathlib import Path

for file in Path(""resources/maps"").glob(""*.json""):
    print(file.name)

Documentação (em inglês)
","
            -3
        ",,,"['\npython', 'string', 'path', 'substring\n']"
521639,Obter o mesmo valor de uma subtração no Arduino com Python,"
O seguinte codigo no arduino produz o valor 26.
int a = 32760;
int b = -32750;
void setup()
{
  Serial.begin(9600);
}

void loop()
{
  Serial.println(b-a); 
}

Eu gostaria de enviar esses dois valores via serial para um script python (Serial.println(String(a)) e Serial.println(String(b))) e obter o mesmo valor da subtração com o python
Eu acredito que devo usar a biblioteca python  Struct com o formato signed short, porem não sei exatamente como fazer isso.
","
conforme: https://stackoverflow.com/questions/68614950/how-to-convert-a-number-to-signed-short-in-python
No python  para se obter o mesmo valor no resultado basta limitar em 16bits o resultado da subtração, algo como:
result = (int(b) - int(a)) & 0xffff

","
            1
        ",,,['\npython\n']
521618,Como implementar a função seno usando série de Taylor em Python?,"
Estou com uma dificuldade no meu código. Eu preciso criar um código que calcula o seno de um ângulo utilizando a série de Taylor, no intervalo de [-pi, +pi]. Assim, a função seno se repete. Ou seja, o valor do seno do angulo de pi/6 é igual ao valor do angulo de 5pi/6. Então se você passar um angulo fora do intervalo [-pi,pi], o programa deve encontrar o equivalente dele intervalo. O ângulo passado como parâmetro para a função deve estar em radianos. Sendo a entrada, o ângulo em radianos (x) e o incremento (n).

O meu código está assim,
import math
 
def seno(x, grau):
    
    assert type(grau) == int, ""Seno: O grau do polinômio não é um inteiro""
    assert grau >= 0, ""Seno: O grau do polinômio não é positivo""
    assert (grau % 2) == 1, ""Seno: O grau do polinômio não é impar""
    
    
    if (-math.pi >= x >= math.pi):    
        senx = 0        
        for n in range (0, grau, 1):               
            senx = senx + (-1)**n*((x**(2*n+1))/(math.factorial(2*n+1)))
                
    else:    
        senx = 0        
        y = (math.pi + x) % (2*math.pi)     
        z = y - math.pi    

        for n in range (0, grau, 1):    
            senx = senx + (-1)**n*((z**(2*n+1))/(math.factorial(2*n+1)))    
    
    return (senx)


Eu consegui encontrar o cálculo que ""converte"" ângulos maiores que o intervalo [-pi,pi] para dentro do intervalo. Mas o meu problema é, para ângulos que já estão no intervalo eu não preciso fazer esse cálculo. Então estou tentando criar uma condição, utilizando o if para ângulos (x) no intervalo.
","
A série de Taylor para a função seno é valida para todo valor de x, portanto não é preciso se preocupar o caso de o valor não estar no intervalo [-π, π]. Vamos utilizar seu exemplo de π/6 e 5π/6 comparando com a definição da função seno pela biblioteca math:
import math

def seno(x, n):
    senx = 0        
    for i in range(0, n):               
        senx += (-1)**i*((x**(2*i+1))/(math.factorial(2*i+1)))
    return senx

print(seno(math.pi/6, 21))    # Utilizando sua função:   0.49999999999999994
print(math.sin(math.pi/6))    # Utilizando a biblioteca: 0.49999999999999994

print(seno(5*math.pi/6, 21))  # Utilizando sua função:   0.4999999999999997
print(math.sin(5*math.pi/6))  # Utilizando a biblioteca: 0.49999999999999994

","
            0
        ",,,"['\npython', 'algoritmo', 'loop', 'matemática\n']"
521595,Pegar trecho de uma string entre dois caracteres,"
Tenho uma informação que preciso que vem no seguinte formato:
<http://informacaoquepreciso.com.br> ""rel""=""next""

Neste caso o que preciso pegar somente o texto que está dentro dos < >, existe alguma função pronta para pegar este tipo de informação? Consegui fazer usando o replace.
","
Se você tem certeza que essa informação sempre vem dessa forma, você pode usar o método split.
texto = '<http://informacaoquepreciso.com.br> ""rel""=""next""'
parte_util = texto.split('>')[0][1:]]
#http://informacaoquepreciso.com.br

Esse método, vai dividir a string baseado no caracter que você passa e retorna um lista, sendo assim, usando o index (primeiros colchetes), você consegue pegar a parte que vem antes do '>'. E com string slice (os segundos colchetes), você recupera a string sem o primeiro caractere, no caso, o '<'.
","
            0
        ","
Você pode utilizar uma expressão regular:
import re

texto = '<http://informacaoquepreciso.com.br> ""rel""=""next""'

padrao = re.compile('<(.*?)>')
achado = padrao.match(texto)
if achado:
    print(achado.group(1))
    # Imprime http://informacaoquepreciso.com.br

Note que esse método não funcionará caso haja um caractere > na informação que você precisa, como por exemplo <http://informacaoquepreciso>.com.br> ""rel""=""next"".
","
            -1
        ","['\npython', 'python-3.x\n']"
521576,Como extrair uma informaçao de uma request python,"
import requests
from requests.structures import CaseInsensitiveDict


  url = f""http://localhost/teste.php""
            headers = CaseInsensitiveDict()
            headers[""Accept""] = ""*/*""
            resp = requests.get(url, headers=headers)

Então eu tenho esse simples script, eu gostaria de poder pegar uma informaçao que esta no response dele
Exemplo: Nome"":""Joao""
e eu gostaria de poder extrair apenas o nome Joao
Alguem poderia me ajudar?
","
Você pode usar a biblioteca json:
import json
import requests

url = ""http://localhost/teste.php""
headers = requests.structures.CaseInsensitiveDict()
headers[""Accept""] = ""*/*""
response = requests.get(url, headers=headers)

# Transforma o texto da resposta em um dicionário
data = json.loads(response.text)

nome = data[""Registro""][""nome""]
print(nome)
# Imprime joao

","
            -2
        ",,,"['\npython', 'python-requests\n']"
521552,Não consigo colocar as minhas opções todas funcionando,"
Só funciona a opção 1 de calculadora, as outras nem sequer printam nada quando são chamadas! Alguém pode me ajudar?
import datetime
from datetime import time
from datetime import datetime
from datetime import date
from datemain import currentlydate
from sistemabanco import Acc
from sistemabanco import ContaBlock
import math



print('@' * 50)
print('          ', 'Welcome to NeryPhone', '          ')
while (True):
    print('       ', 'Escolha as suas opcoes abaixo!', '          ')
    print('[Calculadora(1)] -> Voce podera fazer calculos')
    print('[Conta Bancaria(2)] -> Voce podera operar sua conta bancaria!')
    print('[Sair(3)] -> Celular sera desligado!')
    print('[Agenda Telefonica(4)] -> Sera mostrado sua agenda telefonica!')
    print()
    oopt = input('O que voce deseja fazer? [1-4]')

    while True:
        try:
         if oopt == '1':
             print('Calculadora')
             print('Estes sao os operadores possiveis: +, -, /, *, ** ou Raiz ')
             operator = input('Qual operação você deseja fazer? ').title()
             n1 = float(input('1º Valor: '))
             n2 = float(input('2º Valor: '))
             if operator == '+':
                 result = n1 + n2
                 print('Valor 1 + Valor2 -->' , result)

             elif operator == '-':
                 result = n1 - n2
                 print('Valor 1 - Valor2 -->' , result)

             elif operator == '/' or '\'':
                 result = n1 / n2
                 assert n1 and n2 > 0, 'Você digitou 0 ou um valor irreal!'
                 print('Valor 1 / Valor 2 -->' , result)
             
             elif operator == '*':
                 result = n1 * n2
                 print('Valor 1 * Valor2 -->' , result)
             
             elif operator == '**':
                 result = n1 ** n2
                 print('Valor 1² -->', result)
            
             elif operator == 'Raiz':
                 result = math.sqrt(n1)
                 print('A raiz do valor é:' , result)
             else:
                 print('Valor não reconhecido, tente novamente!')
             close = input('Você deseja encerrar o programa? (S/N)').title()
             if close == 'S':
                 break
             else:
                 pass    
        
        except ValueError:
            print('Digite valores reais')
        except ZeroDivisionError:
            print('Não divida por 0!')

     
    while True:
        if oopt == '4':
            comando = ""Continue""
            contatos = {}
            while comando != 'sair':
                comando = input('Registro, Pesquisar, Exibir').title()
                if comando == 'Registrar':
                    try:
                        nome = input('Nome: ').strip()
                        telefone = int(input('Telefone: ')).strip()
                        contatos[nome] = {
                        ""Nome"": nome,
                        ""Telefone"": telefone
                      }
                    except ValueError:
                        print('Insira números no telefone!')
                
                elif comando == 'Pesquisar':
                    nome = input('Nome: ')
                    if nome in contatos:
                        contato = contatos[nome]
                        print(contato)
                    else:
                        print('Contato nao encontrado!')
                
                elif comando == 'Exibir':
                    print(contatos)
                else:
                    print('Valor nao encontrado!')
                
                close2 = input('Voce deseja sair do programa? (S/N)').title()
                if close2 == 'S':
                    break
                else:
                    pass
        
        if oopt == '3':
            break
    
    while True:
        if oopt == '2':
            namebanc = input('Your name: ')
            x = 0
            
            print(f'Olá {namebanc} \n Data: {currentlydate(x)}')
            print('@@@@@@Sacar@@@@@@')
            print('@@@@@@Depositar@@@@@@')
            print('@@@@@@Sair@@@@@@')
            optbank = input('Qual opção você deseja? ').title()

            while optbank != 'Sair':
                if optbank == 'Sacar':
                    try:
                        saldo = int(input('Seu saldo: '))
                        while True:
                            saque = int(input('Quanto você deseja sacar? '))
                            assert saldo - saque >= 0, 'Saldo insuficiente para Saque'
                            operation = saldo - saque
                            print(f'Seu saldo atual: {operation}')
                            closebank1 = input('Você deseja sair? (S/N)').title()
                            if closebank1 == 'S':
                                break
                            else:
                                pass
                    except ValueError:
                        print('Valor inválido!')
                
                
                elif optbank == 'Depositar':
                    try:
                        print(f'Seu saldo atual: {operation}')
                        while True:
                            deposit = int(input('Quanto você deseja depositar?'))
                            assert deposit > 0, 'Valor irreal para depósito'
                            depop = operation + deposit
                            print(f'Seu saldo atual: {depop}')
                            closebank2 = input('Você deseja sair? (S/N)').title()
                            if closebank2 == 'S':
                                break
                            else:
                                pass
                    except ValueError:
                        print('Valor irreal!')

                elif optbank == 'Sair':
                    break

","
Vamos olhar a sua sequência de execução:
oopt = input('O que voce deseja fazer? [1-4]')

while True:
    try:
        if oopt == '1':
             # ...

    except ValueError:
        print('Digite valores reais')
    except ZeroDivisionError:
        print('Não divida por 0!')

Caso oopt seja '2', o programa

entra no loop infinito;

entra no bloco de tratamento de exceção;

verifica se oopt é igual a '1';

como a condição é falsa, o programa sai do bloco try;

como nenhuma exceção ocorreu, o programa sai do bloco de tratamento de exceção;

como o loop infinito não foi quebrado em nenhum momento, o programa volta para o passo 1.


Por isso nada acontece caso você insira oopt diferente de '1'. Caso você realmente queira usar um loop infinito junto com um bloco de tratamento de exceção, basta inverter a ordem dos ifs, refatorando seu código para
oopt = input('O que voce deseja fazer? [1-4]')

if oopt == '1':
    while True:
        try:
            # ...

        except ValueError:
            print('Digite valores reais')
        except ZeroDivisionError:
            print('Não divida por 0!')

elif oopt == '4':
    while True:
        # ...

elif oopt == '3':
    pass

elif oopt == '2':
    while True:
        #...

","
            -1
        ",,,['\npython\n']
521492,Erro ao clicar no botão em Tkinter Python,"
Olá estou desenvolvendo um aplicativo em python usando tkinter mas não sei porque está a dar-me erro. Inspirei-me num exemplo.
O meu código.
from tkinter import *
win = Tk()

win.geometry(""400x150"")

class Application:
def __init__(self, master=None):

    self.title = Label(win,text=""Please enter the username and password"",font=('Helvetica',13))
    self.title.pack()

    self.suc = Label(win,font=('Helvetica',10))
    self.suc.pack()
    
    self.username = Entry(win,width=20)
    self.username.pack()

    self.password = Entry(win,show=""*"",width=20)
    self.password.pack()

    self.btnConfirm = Button(win, text=""Enter"",font=('Helvetica bold',10),command=self.enter)
    self.btnConfirm.pack()

    self.btnQuit = Button(win, text=""Quit"",font=('Helvetica bold',10),command=self.exit)
    self.btnQuit.pack()

def exit(self):
   win.destroy()

def enter(self):
    if username==""admin"" and password==""123"":
        self.suc[""text""] = ""Sucess""
    else:
        self.suc[""text""] = ""Error""

Application(win)
win.mainloop()

O erro que acontece ao clicar no botão Enter:
Exception in Tkinter callback
Traceback (most recent call last):
  File ""C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.9_3.9.1776.0_x64__qbz5n2kfra8p0\lib\tkinter\__init__.py"", line 1892, in __call__
    return self.func(*args)
  File ""C:\Users\ESFA\Desktop\Project Python\index1.py"", line 29, in enter
    if username==""admin"" and password==""123"":
NameError: name 'username' is not defined

   

","
EDIT
Você precisa também adicionar self._<atributo> = StringVar() no seu construtor para username e password, a resposta do Elton Nunes tem o código completo.
Na função def_enter(self) você chama os objetos username e password, mas eles não foram declarados previamente na função.
Há duas opções numa situação dessas:

reescrever a função e passar os parâmetros def_enter(self, username, password)

chamar os atributos do método construtor(__init__) da sua classe:
if self._username.get()==""admin"" and self._password.get()==""123"".


Ao usar a segunda opção o Tkinter lerá os inputs e fará a comparação lógica corretamente.
","
            0
        ","
Tentei seguir as indicações mas gera outro erro.
Exception in Tkinter callback
Traceback (most recent call last):
  File ""C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.9_3.9.1776.0_x64__qbz5n2kfra8p0\lib\tkinter\__init__.py"", line 1892, in __call__
    return self.func(*args)
TypeError: enter() missing 2 required positional arguments: 'username' and 'password'

","
            0
        ","['\npython', 'python-3.x', 'tkinter\n']"
521436,Como criar um botão para alterar um texto no meu html com dados vindos do models.py do Django?,"
Estou começando a trabalhar com Django e estou iniciando um teste para solidificar o que venho aprendendo. A ideia é uma página única, que exiba uma frase assim que o site for aberto. Abaixo da frase, há um botão que eu gostaria de mudar a frase para alguma outra frase vinda de uma variável declarada em models.py e que contém várias frases que foram registradas através do painel de administração do Django.
Este é meu arquivo models.py:
from django.db import models


class Base(models.Model):
    criado = models.DateField('Criado', auto_now_add=True)
    modificado = models.DateField('Atualização', auto_now=True)
    ativo = models.BooleanField('Ativo', default=True)

    class Meta:
        abstract = True


class Frase(Base):
    frase = models.CharField('Frase', max_length=100)
    dica = models.CharField('Dica', max_length=200, default='-')

    class Meta:
        verbose_name = 'Frase'
        verbose_name_plural = 'Frases'

    def __str__(self):
        return self.frase

Este é meu arquivo views.py:
from django.views.generic import TemplateView
from .models import Frase


class IndexView(TemplateView):
    template_name = 'index.html'

    def get_context_data(self, **kwargs):
        context = super(IndexView, self).get_context_data(**kwargs)
        context['frases'] = Frase.objects.order_by('?').all()

        return context


Este é meu index.html:
            <div class=""container px-4 px-lg-5 h-100"">
                <div class=""row gx-4 gx-lg-5 h-100 align-items-center justify-content-center text-center"">
                    <div class=""col-lg-8 align-self-end"">
                        <h1 class=""text-white font-weight-bold"" id=""frase"">{{ frases|first }}</h1>
                        <hr class=""divider"" />
                    </div>
                    <div class=""col-lg-8 align-self-baseline"">
                        <a class=""btn btn-primary btn-xl"" onclick=""nova_frase()"">Nova frase</a>
                    </div>
                </div>
            </div>
     (...) <!--rest of the html code-->
        
         <script type=""text/javascript"">
            function nova_frase() {
                document.getElementById('frase').innerText = '{{ frases|random }}';
            }
        </script>


Estou tendo dificuldades para encontrar textos para fazer esta tarefa (clique no botão e altere a frase que está sendo exibida por outra frase proveniente da variável definida em models.py, sem que seja preciso atualizar a página).
Estou usando Python 3.9.5 e Django 3.2.5.
Se alguém puder me ajudar, ficaria muito grato.
","
Quando você envia o contexto para o front-end do Django, isso acontece apenas uma vez. Para você pegar todas as frases, você poderia fazer um loop no template e colocar cada frase num elemento html (div, p, ou outra coisa que você queira), e esses elementos podem ser criados como display none com uma classe css comum a todos, e serem administrados pelo javascript.
No html:
{% for frase in frases %}
<p class='hide'>{{ frase }}</p>
{% endfor %}

No JS:
let button = document.getElementById('seu-botao')//pega o botão e adiciona um listener de click
button.addEventListener('click',function(){
    let fraseAtual = document.getElementsByClassName('show')[0]//Pega frase atual
    fraseAtual.classList.remove('show') // Limpa a frase atual, para iniciar um novo sorteio
    fraseAtual.classList.add('hide') // Limpa a frase atual, para iniciar um novo sorteio
    let frases = document.getElementsByClassName('hide');//Pega todas as frases invisíveis, como são várias, o retorno é semelhante a um array.
    let sorteio = Math.floor(Math.random() * frases.length);//Sorteia um index do ""array""
    let frase_visivel = frases[sorteio].classList.remove('hide')// Pega a frase do index sorteado e remove a classe css invisível
    frase_visivel.classList.add('show')//Adiciona classe visível.
  
})

No css:
.hide{
  display:none;
}
.show{
  display:block;
}

Vamos revisar o que ocorreu em cada linha do listener:
(Vou pular as duas primeiras para explicar depois.)
let frases = document.getElementsByClassName('hide')

Aqui pegamos todas as frases pela classe css comum a todas.
O retorno é quase como um array, então cada elemento pode ser retornado chamando o index.
let sorteio = Math.floor(Math.random() * frases.length)

Para sortear um index, usamos o random. Aqui ele retornará um número entre 0 e o tamanho da lista menos 1.
let frase_visivel = frases[sorteio].classList.remove('hide')
frase_visivel.classList.add('show')

Aqui pegamos o index sorteado e resgatamos nossa frase, removendo a classe invisível e adicionando a classe visível.
Agora, voltando ao início, nessas duas linhas, estamos apenas preparando o código para limpar nosso Dom, e permitir que haja um outro sorteio com todas as frases, e evitando que as frases se acumulem na tela.
let fraseAtual=document.getElementsByClassName('show'[0].classList.remove('show')
fraseAtual.classList.add('hide')

Para finalizar deixo aqui 3 sugestões:

Você pode, ao invés de fazer isso acima, usar AJAX, para dar dinâmica à página, você pode ver um pouco mais sobre ajax nessa questão do stackoverflow.

Caso preferir, ao invés de remover e adicionar classes, você pode simplesmente trocar, com o próprio classList, caso não conheça o classList leia essa documentação. 

Para trabalhar com aleatóriedade no javascript você pode tentar usar esse pequeno módulo, feito por mim. Se quiser contribuir também, fique à vontade.


","
            -1
        ",,,"['\njavascript', 'html', 'python', 'django', 'dom\n']"
521428,Django - No module named 'polls',"
Olá, estou começando a estudar Django (versão atual: 3.2.5), e segui este artigo na tentativa de configura-lo (versão consultada em 29/07/2021):
https://www.alura.com.br/artigos/django-instalacao-configuracao-e-escrevendo-seu-primeiro-app
Porém, ao executar o trecho citado no artigo:

from polls.models import Question, Choice

Recebo:

ModuleNotFoundError: No module named 'polls'

Revisei o passo a passo e não encontrei a causa.
Procurei no site da biblioteca Django, e lá encontrei um trecho citando:

from .models import Choice, Question

Mas também não consegui importar desta forma.
Fico pensando que talvez o artigo esteja desatualizado, pois em outros trechos do artigo citava um método que já não é mais atual no Django, motivo pelo qual recebi aviso de 'deprecated'.
Mas, talvez tenha faltado alguma compreensão de minha parte, que também não estava no artigo, ou eu não estou vendo onde errei.
Alguém sabe onde está o problema/erro?
","
Encontrei uma solução para essa parte. Mas aviso que devido a algumas divergências na versão atual do artigo da Alura, os próximos passos também não funcionaram (creio que faltam instruções/etapas foram puladas no artigo, por exemplo: É citado classes, que me parece que não foram criadas entre as etapas ali apontadas (Choice e Question)).
Obs.: Lancei a questão e o pedido de revisão do artigo no fórum da Alura, mas ainda não recebi retorno, portanto ficam as informações abaixo, que talvez possam ser úteis para outros que esbarrem no mesmo problema.
Fiz diversos testes e comparações, até entender que:
from polls.models import Question, Choice #Este trecho se parece muito com o do site do projeto Django (https://docs.djangoproject.com/pt-br/3.2/intro/tutorial02/), porém, lá a palavra ""polls"" foi o nome dado ao app criado. E no artigo da Alura, o nome do app foi citado como de livre escolha do aluno, conforme trecho abaixo:

especifique o nome do aplicativo no campo Nome e selecione OK

Depois de pesquisar e ler as sugestões que citaram, entendi que quando criamos um app, usando o comando python manage.py startapp nome_do_app, ela gera um diretório na raiz do projeto, que se comporta como um pacote Python, com imports e tudo mais.
Ou seja, no artigo, onde consta:from polls.models import Question, Choice
O correto seria: from nome_do_app.models import Question, Choice #Substituindo 'nome_do_app' pelo nome escolhido pelo aluno.
Além disso, dependendo de como está configurado seu projeto e onde seu IDE buscará os pacotes python para import, pode ser necessário especificar o caminho completo, tal como exemplo:
from aprendendodjango.nome_do_app.models import Question, Choice

Obrigado
","
            0
        ",,,"['\npython', 'python-3.x', 'django', 'django-admin\n']"
521379,Tkinter Python - Json + Entry,"
Estou tentando criar uma janela com 3 Entry, e 2 botoes, um para abrir um JSON e carregar alguns dados nestes entrys e o outro botão para salvar as alterações no JSON.
o botão de salvar e as posições dos Entry já estão ok!
O problema é para abrir e carregar os dados do JSON, pois ele é um array um pouco longo. Abaixo minha função.
def abrirArquivo(self):
data = {
    ""first_name"": self.txtemail.get()
}
with open('name.json', 'w') as f:
    json.dump(data, f, indent=4)

filename =  filedialog.askopenfile(title = ""Select file"",filetypes = ((""Json Files"",""*.json""),(""all files"",""*.*"")))

self.txtemail.insert(0, filename)

",,,,,"['\npython', 'json', 'tkinter\n']"
521364,Verificar quais números são primos dentro de um vetor,"
Estou com dificuldade nessa atividade:

b) Módulo que recebe como parâmetro um vetor de números inteiros e retorna a quantidade de números primos no vetor. Este módulo deve chamar a função IsPrime da próxima pergunta.
c) Um módulo que recebe um número inteiro positivo como parâmetro e retorna verdadeiro se o número for primo ou falso se o número não for primo. O método NumberOfPrimes deve chamar o método IsPrime.

Eu estou lendo o vetor assim:
vetor = []
valor = int(input('Digite o tamanho do vetor: '))

while len(vetor) < valor:
    vetor.append(int(input('Digite um numero: ')))

print('=' * 50)
print(""Seu vetor é: {0}"".format(vetor))
print('=' * 50)

Mas quando preciso passar por cada elemento do vetor, e fazer uma verificação e contar se é primo, sai errado.
c = 0
qntPrimo = 0

for elemento in vetor:
    for divisor in range(1, elemento +1):
        if elemento % divisor == 0:
            c = c + 1
    if c == 2:
        qntPrimo += 1
        print(qntPrimo)

","
A sua variável c (que conta a quantidade de divisores do número) deve ser zerada a cada número sendo testado. Da forma que você fez, ela acaba contando a quantidade total de divisores de todos os números. Além disso, você só deveria imprimir a quantidade de primos no final, depois de feito os loops:
qntPrimo = 0
for elemento in vetor:
    c = 0 # zerar aqui
    for divisor in range(1, elemento +1):
        if elemento % divisor == 0:
            c = c + 1
    if c == 2:
        qntPrimo += 1

print(qntPrimo) # só imprime a contagem no final

Se bem que o exercício pede para criar funções separadas: uma que só verifica se um número é primo, e outra que conta a quantidade de primos, usando a primeira função. Ou seja:
# verifica se o número é primo
def IsPrime(n):
    if n <= 1: # 0 e 1 não são primos, e estou considerando que os negativos também não são
        return False

    qtd_divisores = 0
    # todo número é divisível por 1 e por ele mesmo, então pra que testá-los? Comece pelo 2 mesmo
    for i in range(2, n):
        if n % i == 0:
            qtd_divisores += 1

    # é primo se a quantidade de divisores é zero
    return qtd_divisores == 0

# retorna a quantidade de números primos
def NumberOfPrimes(numeros):
    qtd_primos = 0
    for n in numeros:
        if IsPrime(n):
            qtd_primos += 1
    return qtd_primos

Eu mudei um pouco o algoritmo que verifica se é primo, já que 1 e 0 não são primos, além de não precisar verificar se o número é divisível por 1 e por ele mesmo (todos são, é redundante verificar isso). Claro que ainda dá pra melhorar bastante, tem algoritmos melhores, mas não é o foco da pergunta.
Uma vez tendo as funções acima, basta usá-las:
vetor = []
qtd = int(input('Digite o tamanho do vetor: '))
for _ in range(qtd): # outra forma de ler os números
    vetor.append(int(input('Digite um numero: ')))

qtd_primos = NumberOfPrimes(vetor)
print(f'No vetor {vetor} existem {qtd_primos} números primos')

Repare também que, separando em funções, fica mais simples de entender o que cada parte do programa faz. Ao tentar fazer duas coisas com dois loops aninhados, as variáveis usadas por cada um acabam se confundindo e o código ficou mais confuso e difícil de ser depurado.
Por fim, também dei nomes melhores para as variáveis. Pode parecer um detalhe besta, mas dar nomes melhores ajuda na hora de programar.
","
            0
        ","
Ola, espero que compreenda a minha explicação caso não vamos dialogando :p
explicação do loop:
Após informar os valores (tamanho do vetor), terá que expandir o numero  , a função range vai gera números de um intervalo até o limite especificado.
digitado um vetor de 1 posição e depois digitado numero 5...range retornara  o numero de  2,3,4,5.
primeiro loop é do tamanho do vetor e o segundo gera o tamanho informado pelo
valor do vetor.
Abaixo do segundo for, a verificação o if  testa se o resto da divisão de um numero por  outro vai ser 0(zero) sendo assim é múltiplo do antecessor e não é primo enquanto foi acrescentando na variável chamada de  ""primo"" o resultado  sera de múltiplos e não primo contra partida se na interação dos loops não houver acréscimos na variável ""primo"" indicara que o numero é primo devido o resto da divisão não é 0
vetor = []
primo=0
valor = int(input('Digite o tamanho do vetor: '))

while len(vetor) < valor:
    vetor.append(int(input('Digite um numero: ')))

#Os números primos são os números naturais que podem ser divididos por apenas dois fatores: o número um e ele mesmo.
for indice in range(len(vetor)):
   for percorrer in range(2,vetor[indice]):
     if vetor[indice] %  percorrer == 0:
        print(""Numeros multiplos"", vetor[indice])
        primo+=1
   if primo ==0:
     print(""Numero primo"",vetor[indice])





print('=' * 50)
print(""Seu vetor é: {0}"".format(vetor))
print('=' * 50)

","
            -1
        ","['\npython', 'array\n']"
521312,Pandas agrupar em grupos com um range determinando,"
beleza? Estou tentando agrupar valores de um dataframe que se chama

df_agenda

por idade, queria agrupar os valores dessa forma na idade: de (0-20),(20-40), (40-60) e assim até o maximo valor da lista de idade.
    status_consulta confirm_consulta  idade       sexo  contagem
171        AGENDADA        DESMARCOU      5   FEMININO         1
140        AGENDADA  FALTA_CONFIRMAR      6  MASCULINO         1
47       FINALIZADA       CONFIRMADO      7  MASCULINO         3
131        AGENDADA  FALTA_CONFIRMAR      7   FEMININO         1
217      FINALIZADA       CONFIRMADO      7   FEMININO         1
216      FINALIZADA       CONFIRMADO      8  MASCULINO         1
130        AGENDADA  FALTA_CONFIRMAR      9  MASCULINO         1
34       FINALIZADA       CONFIRMADO      9  MASCULINO         4
139        AGENDADA  FALTA_CONFIRMAR     10   FEMININO         1
77       FINALIZADA       CONFIRMADO     10  MASCULINO         2
129        AGENDADA  FALTA_CONFIRMAR     10  MASCULINO         1
215      FINALIZADA       CONFIRMADO     11  MASCULINO         1
28       FINALIZADA       CONFIRMADO     12  MASCULINO         4
128        AGENDADA  FALTA_CONFIRMAR     12  MASCULINO         1
123        AGENDADA  FALTA_CONFIRMAR     14  MASCULINO         1
193      FINALIZADA       CONFIRMADO     14  MASCULINO         1

tentei dessa forma:
df_agenda = df_agenda.sort_values(by='idade')
df_agenda = df_agenda.groupby(cut(df_agenda['idade'], np.arange(0, max(n), 20)))
print(df_agenda.head())

mas o meu retorno é:
TypeError: Cannot cast array data from dtype('int64') to dtype('int32') according to the rule 'safe'

Alguém? Valeu
","
Primeiro crie uma coluna com a faixa etária (pode ser utilizando o pd.cut como você tentou), depois agrupe por ela:
df = ... # seu DataFrame aqui
faixas_etarias = np.arange(0, df['idade'].max()+1, 20)
df['faixa_etaria'] = pd.cut(df['idade'], faixas_etarias)

# A partir daqui, use `df.groupby` para agrupar pela coluna 'faixa_etaria'
df_agrupado = df.groupby('faixa_etaria')

Note que df_agrupado é um objeto do tipo DataFrameGroupBy, sobre o qual você normalmente vai querer fazer uma operação que será aplicada a cada grupo. Por exemplo, df_agrupado['idade'].mean() mostrará a média de idade dentro de cada grupo de faixa etária.
","
            1
        ",,,"['\npython', 'python-3.x', 'pandas', 'data-science\n']"
519294,Como criar mensagens automáticas pelo bot do discord com atualizações constantes? (api python),"
import discord
import TOKEN_value
import memes

client = discord.Client()
TOKEN = TOKEN_value.token()

memes_ON = False


@client.event
async def on_ready():
    print('BOT HAS BEEN CONNECTED.')
    print(client.user.name)
    print(client.user.id)


@client.event
async def on_message(message):
    global memes_ON
    if message.content.lower().startswith('!memes'):
        memes_ON = True
        await message.channel.send('Now I gonna send memes for you!')

    if memes_ON:
        meme = memes.memes_search()
        if meme != 'no memes here':
            await message.channel.send(meme)


client.run(TOKEN)

A função memes_search() me retorna um link de algum meme do imgur, mas nunca é um link repetido, ou seja, nem sempre tem algo novo para mandar, e nesse caso ele retorna a string 'no memes here'.
A função token() apenas me retorna meu token
O que eu gostaria de fazer é que toda vez que tivesse algum link novo ele fosse mandado para o chat automaticamente no local que foi digitado !memes, porém ele para de rodar caso não haja novos links e só volta caso alguém mande mensagem no servidor. A única forma que fez ele funcionar foi mandar mensagens infinitamente mesmo que não sejam links, caso contrário ele para de rodar. já tentei várias coisas e nenhuma funciona. O que preciso é que a função não pare de rodar e continue fazendo a verificação ""if memes_ON"", já tentei printar alguns valores e vi que a partir do momento que não é devolvido um link ele roda a função duas vezes e para até ter novas mensagens no server.
","
Não conheço bem a API do discord.py, mas talvez possa ser implementado dessa maneira:

Criar uma lista (ou um conjunto) que armazenará todos os canais nos quais serão enviados memes:

channels = set()


Quando um canal enviar a mensagem ""!memes"", adicionar o ID do canal em channels:

@client.event
async def on_message(message):
    if message.content.lower().startswith('!memes'):
        await message.channel.send('Now I gonna send memes for you!')
        channels.add(message.channel.id)


Quando um canal enviar a mensagem ""!stopmemes"", por exemplo, remover o ID do canal de channels:

@client.event
async def on_message(message):
    if message.content.lower().startswith('!memes'):
        await message.channel.send('Now I gonna send memes for you!')
        channels.add(message.channel.id)

    elif message.content.lower().startswith('!stopmemes'):
        await message.channel.send('Now I gonna stop sending memes for you!')
        channels.discard(message.channel.id)


Criar uma corrotina que rodará infinitamente, enviando memes para os canais em channels:

async def meme_loop():
    while True:
        meme = memes.memes_search()
        if meme == ""no memes here"":
            continue
  
        for channel_id in channels:
            channel = client.get_channel(channel_id)
            await channel.send(meme)


Rodar o código do discord junto com o código dos memes:

# Substitua
#
# client.run(TOKEN)
#
# por
 
import asyncio
await asyncio.gather(client.start(TOKEN), meme_loop())

","
            -2
        ",,,"['\npython', 'api', 'automatização\n']"
519283,pycharm nao reconhece arquivo mp3,"
Aqui glr, eu tava fazendo o curso de python no curso em video e no desafio 21 era pra conseguir tocar algum mp3 no pycharm, mas quando eu tentei importar um arquivo mp3 apareceu isso aqui. alguem sabe como solucionar esse problema???
","
O .mp3 é um arquivo binário, não um arquivo de texto, por isso você não consegue visualizá-lo em um editor de texto. Você pode abrir o arquivo em um reprodutor de música para verificar seu conteúdo ou, no Python:

reproduzir utilizando o reprodutor de música padrão do sistema utilizando o modulo os:

import os
os.startfile('mm.mp3')


inspecionar seu conteúdo binário utilizando o parâmetro mode da função open:

with open('mm.mp3', 'rb') as f:
    mp3_bytes = f.read()

","
            0
        ","
Olá eu estou fazendo o mesmo curso e também tive problemas, a única solução que encontrei foi essa.
from pygame import mixer
mixer.init()
mixer.music.load('ex021.mp3')
mixer.music.play()
import time
time.sleep(360)

Foi a única forma que consegui fazer tocar mas com certeza deve ter uma outra maneira melhor.
","
            0
        ","['\npython', 'pycharm\n']"
519279,DRF/Django - Como enviar valor de um atributo ao invés de enviar um objeto JSON,"
Olá, que tenho um objeto relacionados com vários outros, porém quando envio o JSON, ou vai o ID do objetivo relacionado ou eu serializo ele e vai o objeto inteiro, gostaria de enviar apenas um atributo deste objeto relacionado.
Como está retornando o objeto:
    ""id"": 2,
    ""tipoManifestacao"": {
        ""id"": 2,
        ""tipoManifestacao"": ""Sugestão"",
        ""created_at"": ""2021-07-14T20:34:00.176140-03:00""
    },
    ""modoResposta"": {
        ""id"": 2,
        ""modoResposta"": ""Por Telefone"",
        ""created_at"": ""2021-07-14T20:34:29.092794-03:00""
    },
    ""orgao"": {
        ""id"": 2,
        ""orgao"": ""HOSPITAL DE IGARASSU"",
        ""contato"": ""81818118"",
        ""created_at"": ""2021-07-14T20:33:44.335234-03:00"",
        ""setor"": null
    },
    ""protocolo"": ""20210718002"",
    ""descricao"": ""string"",
    ""created_at"": ""2021-07-18T17:53:12.902620-03:00""
}```

como eu gostaria que retornasse: 

{
    ""id"": 2,
    ""tipoManifestacao"": ""Sugestão"",
    ""modoResposta"": ""Por Telefone"",
    ""orgao"": ""HOSPITAL DE IGARASSU"",
    ""protocolo"": ""20210718002"",
    ""descricao"": ""string"",
    ""created_at"": ""2021-07-18T17:53:12.902620-03:00""
}

meu views.py

'''class ManifestacaoViewSet(ModelViewSet):
    serializer_class = ManifestacaoSerializer
    filter_backends = [SearchFilter]

    permission_classes = [permissions.IsAuthenticated, ]
    search_fields = ['protocolo', 'pessoa']

    def get_queryset(self):
        return Manifestacao.objects.filter()

    def list(self, request, *args, **kwargs):
        return super(ManifestacaoViewSet, self).list(request, *args, **kwargs)

    def create(self, request, *args, **kwargs):
        #try:
        data = datetime.datetime.now()
        ultima_manifestacao = Manifestacao.objects.last()

        if ultima_manifestacao:
            ultimo_protocolo = ultima_manifestacao.protocolo
            ultima_data = ultimo_protocolo[:8]
            ultimo_numero = ultimo_protocolo[-3:]
        else:
            ultima_data = '00000000'
            ultimo_numero = '000'

        nova_data = str(data.year) + str(data.month).zfill(2) + str(data.day).zfill(2)

        if int(ultima_data) == int(nova_data):
            novo_numero = int(ultimo_numero) + 1
        else:
            novo_numero = '001'

        novo_protocolo = nova_data + str(novo_numero).zfill(3)
        request.data['protocolo'] = novo_protocolo
        user = request.user
        request.data['funcionario'] = user.pk
        return super(ManifestacaoViewSet, self).create(request, *args, **kwargs)

    def retrieve(self, request, *args, **kwargs):
        return super(ManifestacaoViewSet, self).retrieve(request, *args, **kwargs)

    def destroy(self, request, *args, **kwargs):
        return super(ManifestacaoViewSet, self).destroy(request, *args, **kwargs)

    def update(self, request, *args, **kwargs):
        user = request.user
        request.data['funcionario'] = user.pk
        print(""passou por update views"")
        serializer = self.serializer_class(data=request.data)
        serializer.is_valid(raise_exception=True)
        return Response(serializer.data, status=status.HTTP_200_OK)

    def partial_update(self, request, *args, **kwargs):
        return super(ManifestacaoViewSet, self).partial_update(request, *args, **kwargs)'''


meu serializers.py

class ManifestacaoSerializer(ModelSerializer):
    localDoFato = LocalDoFatoSerializer(required=False, allow_null=True)
    envolvidos = EnvolvidosSerializer(required=False, allow_null=True)
    assunto = AssuntoSerializer()
    tipoManifestacao = TipoManifestacaoSerializer()
    modoResposta = ModoRespostaSerializer()
    orgao = OrgaoSerializer()
    CanalDeEntrada = CanalDeEntradaSerializer()
    pessoa = PessoaSerializer()
    funcionario = UserSerializer()


    class Meta:
        model = Manifestacao
        fields = '__all__'

    def create(self, validated_data):
        envolvidos_data = validated_data.pop('envolvidos')
        local_data = validated_data.pop('localDoFato')

        if envolvidos_data:
            envolvidos = Envolvidos.objects.create(**envolvidos_data)
        if local_data:
            localDoFato = LocalDoFato.objects.create(**local_data)

        if local_data and envolvidos_data:
            manifestacao = Manifestacao.objects.create(envolvidos=envolvidos, localDoFato=localDoFato, **validated_data)
        elif local_data and not envolvidos_data:
            manifestacao = Manifestacao.objects.create(localDoFato=localDoFato, **validated_data)
        elif envolvidos_data and not local_data:
            manifestacao = Manifestacao.objects.create(envolvidos=envolvidos,**validated_data)
        else:
            manifestacao = Manifestacao.objects.create(**validated_data)
        return manifestacao

    def update(self, instance, validated_data):
        manifestacao = Manifestacao.objects.get(id=self.data['id'])
        envolvidos_data = validated_data.pop('envolvidos')
        localDoFato_data = validated_data.pop('localDoFato')
        if envolvidos_data:
            if manifestacao.envolvidos:
                id_env = manifestacao.envolvidos.id
                envolvidos = Envolvidos.objects.get(id=id_env)
                for key in envolvidos_data:
                    setattr(envolvidos, key, envolvidos_data.get(key, getattr(envolvidos, key)))
                    envolvidos.save()
            else:
                envolvidos = Envolvidos.objects.create(**envolvidos_data)
                manifestacao.envolvidos = envolvidos
                manifestacao.save()

        if localDoFato_data:
            if manifestacao.localDoFato:
                id_soc = manifestacao.localDoFato.id
                localDoFato = LocalDoFato.objects.get(id=id_soc)
                for key in localDoFato_data:
                    setattr(localDoFato, key, localDoFato_data.get(key, getattr(localDoFato, key)))
                    localDoFato.save()
            else:
                localDoFato = LocalDoFato.objects.create(**localDoFato_data)
                manifestacao.localDoFato = localDoFato
                manifestacao.save()
        print(""passou por update Serializers"")
        mensagem = 'Atualizado com sucesso'
        return mensagem

","
Você pode tentar modificar o comportamento do seu serializer.
Como diz essa documentação.
Você especifica o retorno __str__ dos seus objetos relacionados, e irá recuperar apenas essa informação.
Quando acessar o link, veja o primeiro exemplo, logo após os modelos de exemplo.
","
            0
        ","
Você pode usar o atributo source dos Fields do Django Rest Framework para dizer onde buscar o dado que o serializer vai colocar no JSON.
Supondo que você está usando um ModelSerializer, seu exemplo ficaria algo como:
class MeuSerializer(serializers.ModelSerializer):
    tipoManifestacao = serializers.CharField(source=""tipoManifestacao.tipoManifestacao"")
    modoResposta = serializers.CharField(source=""modoResposta.modoResposta"")
    orgao = serializers.CharField(source=""orgao.orgao"")

    class Meta:
        model = MeuModel
        fields = [
            ""id"",
            ""tipoManifestacao"",
            ""modoResposta"",
            ""orgao"",
            ""protocolo"",
            ""descricao"",
            ""created_at"",
        ]

Note que eu não preciso criar Fields para os campos que já estão corretos, eu só sobrescrevo os que quero mudar o comportamento.
O que fiz foi falar para o DRF que, ao invés de serializar o campo como um ""sub-serializer"" era para que esse campo fosse uma string e onde seu valor deve ser procurado.
PS: eu informei apenas o parâmetro source para não poluir o exemplo mas talvez você queira adicionar outros, como read_only.
","
            0
        ","['\npython', 'json\n']"
519235,"Pandas - Problemas com "".loc[]"" em múltiplas entradas","
Meu projeto possui 4 inputs dado pelo usuário que são armazenados nas variáveis a, b, c, d.
Uso essas entradas para filtrar informações vindas de um .csv gigante, armazenando-as em um dataframe. O filtro é feito usando ""loc[]"", da seguinte forma:
arquivo = chunk.loc[(chunk['Coluna1'] == a) & (chunk['Coluna2'] == b) & (chunk['Coluna3'] == c) & (chunk['Coluna4'] == d)]

O problema é que o usuário pode ou não preencher os 4 inputs. Preciso que o método ""loc"" seja capaz de filtrar informações mesmo quando por exemplo, o usuário dê input na variável ""a"" e deixe as outras em branco.
Da maneira que montei, as variáveis que não receberam informações, recebem o a string: """". O "".loc[]"" então tenta achar linhas onde a coluna em questão tem """".
Pensei que uma solução possível, seria atribuir um ""valor coringa"" às variáveis não preenchidas, porém não sei se isso é possível.
","
Creio que isso possa ser feito não na chamada do loc, mas sim quando você obtém as variáveis pelo usuário. Primeiro, precisamos considerar uma entrada que o usuário não forneceu como None. Atualmente, você está considerando uma string vazia (''). Precisamos então convertê-la:
def retorna_variavel(nome):
    # Insira aqui o código para obter a entrada do usuário pela interface
    # gráfica. Estou assumindo que a entrada esteja sendo obtida por meio
    # de uma caixa de texto por exemplo, portanto ela será do tipo string
    texto = retorna_variavel_de_caixa_de_texto(nome)

    # Verifica se o usuário não digitou nada. Essa verificação é equivalente
    # à `if texto is None or len(texto) == 0:`
    if not texto:
        return None
    
    # Converte a variável inserida pelo usuário para um tipo inteiro. Você
    # também pode convertê-la para o tipo ponto flutuante utilizando `float`. 
    return int(texto)

Em seguida, você cria as variáveis a, b, c e d desejadas:
a = retorna_variavel('a')
b = retorna_variavel('b')
c = retorna_variavel('c')
d = retorna_variavel('d')

Por fim, você pode utilizar o seguinte código para filtrar o pd.DataFrame:
import pandas as pd

# Um DataFrame de exemplo
chunk = pd.DataFrame({
    'Coluna1': [1, 1],
    'Coluna2': [2, 2],
    'Coluna3': [3, 3],
    'Coluna4': [5, 6],
})

arquivo = chunk.loc[
    (a is None or chunk['Coluna1'] == a) & 
    (b is None or chunk['Coluna2'] == b) & 
    (c is None or chunk['Coluna3'] == c) & 
    (d is None or chunk['Coluna4'] == d)]
    
print(arquivo)

Neste exemplo,

caso a == 1, b == 2, c == 3 e d == 4, a saída será

Empty DataFrame
Columns: [Coluna1, Coluna2, Coluna3, Coluna4]
Index: []


caso a == 1, b == 2, c == 3 e d == 5, a saída será

   Coluna1  Coluna2  Coluna3  Coluna4
0        1        2        3        5


caso a == 1, b == 2, c == 3 e d == 6, a saída será

   Coluna1  Coluna2  Coluna3  Coluna4
1        1        2        3        6


caso a == 1, b == 2, c == 3 e d == None (o usuário omitiu o valor de d), a saída será

   Coluna1  Coluna2  Coluna3  Coluna4
0        1        2        3        5
1        1        2        3        6

Como d foi omitido, todos os valores da coluna 4 foram retornados.
","
            0
        ",,,"['\npython', 'pandas\n']"
519212,Como colar com indentação correta?,"
Sempre dá muito trabalho para corrigir indentação após copiar e colar, mas tem um jeito de colar com indentação correta?
Por exemplo:
x = int(input(""0 ou 1? ""))
if x == 1:
    print(""ON"")                                                     
if x == 0:
    print(""OFF"")

Depois eu mudei da ideia, coloquei while loop por exemplo, eu copiei tudo e colei
Antes:
while True:

Depois de colar:
while True:
    x = int(input(""0 ou 1? ""))
if x == 1:
    print(""ON"")                                                     
if x == 0:
    print(""OFF"")

Tudo está errado. Deve ser assim:
while True:
    x = int(input(""0 ou 1? ""))
    if x == 1:
        print(""ON"")                                                     
    if x == 0:
        print(""OFF"")

Google Colaboratory tem esse recurso para colar com indentação? E Visual Studio Code?
",,,,,"['\npython', 'python-3.x', 'visual-studio-code', 'ipython-notebook', 'indentação\n']"
519193,Problemas com a escolha da opção 'papel' num programa que 'joga' jokenpo comigo,"
Estou fazendo um programa que ""jogue"" jokenpo comigo.
As opções 'pedra' e 'tesoura' estão funcionando. Entretanto, quando entro com a opção 'papel' e a máquina escolhe a opção 'tesoura', o programa diz que eu venci.
Eu li código novamente e não consigo encontrar o erro. Segue o código:
import random
e1: str = 'pedra'
e2: str = 'papel'
e3: str = 'tesoura'
lista = [e1, e2, e3]
esc_maquina = random.choice(lista)
minha_esc = str(input('Minha escolha é: '))
if minha_esc == esc_maquina:
    print('Houve empate! Sua escolha foi {} e da máquina também foi {}.'.format(minha_esc, esc_maquina))
    print('Pressione Shift+F10 e tente novamente!')
elif minha_esc != esc_maquina:
        if minha_esc == e1 and esc_maquina == e2 or esc_maquina == e3:   # Pedra
            if esc_maquina == e2:
                print('Você perdeu! A máquina escolheu {}.'.format(e2))
                print('Para tentar novamente, pressione Shift+F10')
            elif esc_maquina == e3:
                print('Você venceu! A máquina escolheu {}.'.format(e3))
                print('Para tentar novamente, pressione Shift+F10')
        elif minha_esc == e2 and esc_maquina == e1 or esc_maquina == e3:   # Papel
            if esc_maquina == e1:
                print('Você venceu! A máquina escolheu {}.'.format(e1))
                print('Para tentar novamente, pressione Shift+F10')
            elif esc_maquina == e3:
                print('Você perdeu! A máquina escolheu {}.'.format(e3))
                print('Para tentar novamente, pressione Shift+F10')
        elif minha_esc == e3 and esc_maquina == e1 or esc_maquina == e2:   # Tesoura
            if esc_maquina == e1:
                print('Você perdeu! A máquina escolheu {}.'.format(e1))
                print('Para tentar novamente, pressione Shift+F10')
            elif esc_maquina == e2:
                print('Você venceu! A máquina escolheu {}.'.format(e2))
                print('Para tentar novamente, pressione Shift+F10')
else:
    print('Não há nada aqui. Pressione Shift+F10 e volte ao começo!')

","
Sua lista ficou ['pedra', 'papel', 'tesoura']. Ou seja, o primeiro elemento perde do segundo, o segundo perde do terceiro e o terceiro perde do primeiro. Então bastaria pegar a posição de cada uma das opções e compará-las. Para isso podemos usar o método index da lista.
Se as opções são iguais, deu empate. Se a posição que você escolheu é anterior à posição que o computador escolheu, você perdeu. Senão, você ganhou. Ou seja:
# verifica se eu ganhei do computador
def resultado(opcoes, eu, comp):
    if eu == comp: # se forem iguais, empatou
        return 'empate'
    # busca a posição de cada um
    indice_eu = opcoes.index(eu)
    indice_comp = opcoes.index(comp)
    if (indice_eu + 1) % len(opcoes) == indice_comp:
        return 'perdi'
    return 'ganhei'

A ideia é ver se a posição do computador é imediatamente depois da minha. Mas eu também uso o operador % (resto da divisão) para voltar à primeira posição, caso ela seja a terceira.
Testando:
opcoes = ['pedra', 'papel', 'tesoura']
for eu in opcoes:
    for comp in opcoes:
        print(f'eu={eu}, comp={comp}, resultado={resultado(opcoes, eu, comp)}')

Saída:
eu=pedra, comp=pedra, resultado=empate
eu=pedra, comp=papel, resultado=perdi
eu=pedra, comp=tesoura, resultado=ganhei
eu=papel, comp=pedra, resultado=ganhei
eu=papel, comp=papel, resultado=empate
eu=papel, comp=tesoura, resultado=perdi
eu=tesoura, comp=pedra, resultado=perdi
eu=tesoura, comp=papel, resultado=ganhei
eu=tesoura, comp=tesoura, resultado=empate


Claro que assim eu tenho que ter certeza que minha escolha está na lista, então teria que fazer algo do tipo:
while True:
    minha_escolha = input('Minha escolha é: ')
    if minha_escolha in opcoes: # escolha está na lista
        break # interrompe o while
    else:
        print(f'As escolhas válidas são: {"", "".join(opcoes)}')

Ou seja, se digitar uma escolha que não está na lista, pede que digite novamente. Note também que input já retorna uma string, então fazer str(input()) é redundante e desnecessário.
Assim eu garanto que só digitei um elemento que com certeza existe na lista, e assim index sempre retornará um índice válido. Para a escolha do computador não precisa, pois você usa random.choice que garantidamente pega um elemento que existe nela. Claro que se a lista fosse maior, o mais eficiente seria trabalhar diretamente com os índices (em vez de buscá-los toda hora), mas para uma lista com apenas 3 elementos não deve fazer diferença.
E claro que, em vez de retornar ""ganhei"" ou ""perdi"", você pode fazer quaisquer ações que desejar (como imprimir alguma mensagem específica, etc). Só que, como return encerra a execução da função, se for para retirá-lo você deve alterar um pouco. Ex:
def resultado(opcoes, eu, comp):
    if eu == comp:
        print(f'Empate, ambos escolheram {eu}')
    else:
        indice_eu = opcoes.index(eu)
        indice_comp = opcoes.index(comp)
        if (indice_eu + 1) % len(opcoes) == indice_comp:
            msg = 'Você perdeu!'
        else:
            msg = 'Você venceu!'
        print(f'{msg} A máquina escolheu {comp} e você escolheu {eu}')

","
            1
        ",,,['\npython\n']
519189,Como identificar permutações em colunas de matrizes em C++,"
Na faculdade, preciso fazer um exercício --- o enunciado está baixo --- em que eles testam com matrizes de diferentes dimensões, ou seja, preciso fazer um programa que lê matriz e escreve a matriz que o programa de teste dá input. Fiz um código em python, mas não consegui traduzir ele para C++.
Segue o código que lê e escreve em python:
    quantidade_linhas = 0
def ler_matriz():
    m = []
    ler_linha = input()
    global quantidade_linhas
    while ler_linha:
        m.append([int(i) for i in ler_linha.split(' ') if i])
        ler_linha = input()
        quantidade_linhas += 1
    return m

Segue o que tentei fazer em C++:
#include <iostream>
#include <iomanip>
#include <vector>
#include <string>
using namespace std;

vector<vector<int> > leiaMatriz(int L, int C) {
  vector<vector<int> > m;
  for (int i = 0; i < L; i++) {
    vector<int> v1;
    for (int j = 0; j < C; j++) {
      int aux;
      cin >> aux;
      v1.push_back(aux); 
    }
    m.push_back(v1); 
  }  
  return m;
}
void escrevaMatriz(vector<vector<int> > m) {
  for (int i = 0; i < m.size(); i++) {
    for (int j = 0; j < m[0].size(); j++) {
       cout << m[i][j] << ""\t "";
    }
    cout << ""\n"";
  }
}

Também vou deixar um exemplo de exercicio que pedem essa singularidade:

Poderiam me dar uma luz?
","
C++ e C não tem essa noção de matrizes como em FORTRAN. Existe apenas vetor, e uma matriz é um vetor de vetor, ou um vetor de vetor de vetor e assim por diante. No seu caso ousou por exemplo vector<vector<int>>
Uma matriz é apenas um endereço, dado pelo nome, e as dimensões. Note que pode escrever
    using Matriz = vector<vector<int>>;
    vector<vector<int>> teste;
    Matriz outra;

e teste e outra serão vetores de vetores de int
De volta ao programa
Para saber se os elementos de um vetor são ou não permutação dos valores de outro vetor em geral se usa um vetor de bits, com um bit para cada elemento,para marcar os elementos que já encontrou, e num loop procura todos elementos do vetor original. E vai marcando no vetor de bits, já que podem ter valores repetidos, como no caso de seu exemplo. Se encontrar todos então tem claro uma permutação.
Como no seu caso os valores já estão em uma matriz lida pode não fazer sentido extrair os vetores correspondentes às colunas pares para ver depois se são todas permutações, como pede o enunciado.
C++ aloca vetores por linha, então considerando sua matriz de exemplo
    int const M[6][4] =
    {
        { 8, 3, 7, 1 },
        { 5, 8, 8, 8 },
        { 7, 1, 6, 1 },
        { 8, 6, 8, 7 },
        { 6, 7, 6, 1 },
        { 6, 1, 5, 1 }
    };

esses valores vão estar na memória assim
         8, 3, 7, 1, 5, 8, 8, 8, 7, 1, 6, 1, ...

Assim os elementos de uma certa coluna ficam a uma distância fixa um do outro, e essa distância é o número de colunas. E os elementos de uma linha ficam alinhados um depois do outro.
Pode ser vantagem então usar a matriz simplesmente como int* e passar as dimensões para uma função que verifique a permutação sem extrair as colunas, sem criar o vetor de bits e sem mexer na matriz original para marcar os elementos encontrados. Algo como
int cpp_matriz (const int A, const int B, int* const M, int l, int c);

Onde

A e B são as colunas,
M é a matriz
l e c são as dimensões

e que retorna 1 se A e B são permutações dos mesmos elementos
Vou mostrar um exemplo em C++, que compila em C também, e que faz isso. Não há muita vantagem em usar vector ou classes para um caso desses, já que é apenas manipulação de memória.
Um exemplo em C++
Esse exemplo compila em C também. Não achei relevante a diferença aqui porque a idéia é a mesma. E não vi vantagem em usar STL.
Saída do exemplo

        matriz exemplo 6x4

        8    3    7    1
        5    8    8    8
        7    1    6    1
        8    6    8    7
        6    7    6    1
        6    1    5    1

original    8    5    7    8    6    6
alvo        8    5    7    8    6    6
colunas (0,0) = permutacao

original    8    5    7    8    6    6
alvo        3    8    1    6    7    1
colunas (1,0) = NAO permutacao

original    8    5    7    8    6    6
alvo        7    8    6    8    6    5
colunas (2,0) = permutacao

original    8    5    7    8    6    6
alvo        1    8    1    7    1    1
colunas (3,0) = NAO permutacao

o algoritmo
O programa apenas replica o que se faria com papel e caneta. comparando os valores das colunas A e B usando um vetor de índices que mostra os elementos ainda não usados na outra coluna, e usa esse vetor para orientar as comparações. Ao final ele deve estar vazio.
Eis o código relevante
int cpp_matriz(const int A, const int B, int* const M, int l, int c)
{
    // prepara ix[], vetor de indices
    int* ix = (int*)malloc( (1 + l) * sizeof(int) );
    for (int i = 0; i < l; i += 1) ix[1 + i] = i;
    ix[0] = l;
    // procura todos de A em B
    for (int li = 0, fim = l*c; li < fim; li += c)
    {   // usa so os que sobraram de B, que estao em ix[]
        for (int j = 1; j <= ix[0]; j += 1)
        {
            if ( *(M + A + li) == *(M + B + ix[j] * c))
            {   // achou esse
                // se nao for o ultimo inverte
                if (j != ix[0]) ix[j] = ix[ix[0]];
                ix[0] -= 1; // um a menos
                break;       // esse tinha
            };  // if()
        }; // for(j)
    }; // for(li)
    int res = (ix[0] == 0);  // se nao sobrou = permutacao
    free(ix);
    return res;
};  // cpp_matriz()

O resumo do resumo
            if ( *(M + A + li) == *(M + B + ix[j] * c))

Essa é a comparação que resolve o problema. A e B são as coluna e M a matriz com li linhas e c colunas. E o vetor ix traz os elementos ainda não usados
O código completo
#include <cstdio>
#include <cstdlib>
using namespace std;

int cpp_matriz (const int A, const int B, int* const M, int l, int c);
int mostra_coluna(int const coluna, int* const M, int l, int c, const char* tit);
int mostra_matriz(
    int* const M, int const l, int const, char const* tit);


int main(void)
{
    int       res     = 0;
    int const M[6][4] =
    {
        { 8, 3, 7, 1 },
        { 5, 8, 8, 8 },
        { 7, 1, 6, 1 },
        { 8, 6, 8, 7 },
        { 6, 7, 6, 1 },
        { 6, 1, 5, 1 }
    };  //  permutacao exemplo

    mostra_matriz((int* const)M, 6, 4, ""\n\tmatriz exemplo 6x4\n"");
    int base = 0;  // compara com todas as outras
    for (int alvo = 0; alvo < 4; alvo += 1)
    {
        mostra_coluna(base, (int* const)M, 6, 4, ""\noriginal"");
        mostra_coluna(alvo, (int* const)M, 6, 4, ""alvo    "");
        res = cpp_matriz(base, alvo, (int* const)M, 6, 4);
        if (res)
            printf(""colunas (%d,%d) = permutacao\n"", alvo, base);
        else
            printf(""colunas (%d,%d) = NAO permutacao\n"", alvo, base);
    };  // for()
    return 0;
}


// retorna 1 se colunas A e B em M[l][c] forem permutacoes
int cpp_matriz(const int A, const int B, int* const M, int l, int c)
{
    // prepara ix[], vetor de indices
    int* ix = (int*)malloc( (1 + l) * sizeof(int) );
    for (int i = 0; i < l; i += 1) ix[1 + i] = i;
    ix[0] = l;
    // procura todos de A em B
    for (int li = 0, fim = l*c; li < fim; li += c)
    {   // usa so os que sobraram de B, que estao em ix[]
        for (int j = 1; j <= ix[0]; j += 1)
        {
            if ( *(M + A + li) == *(M + B + ix[j] * c))
            {   // achou esse
                // se nao for o ultimo inverte
                if (j != ix[0]) ix[j] = ix[ix[0]];
                ix[0] -= 1; // um a menos
                break;       // esse tinha
            };  // if()
        }; // for(j)
    }; // for(li)
    int res = (ix[0] == 0);  // se nao sobrou = permutacao
    free(ix);
    return res;
};  // cpp_matriz()


int mostra_coluna(
    int const coluna, int* const M, int l, int c, const char* tit)
{  // mostra a coluna 'coluna'
    if (tit != NULL)
        printf(""%s"", tit);
    else
        printf(""coluna %d: "", coluna);
    for (int j = 0, fim = l * c; j < fim; j += c)
        printf(""%5d"", *(M + coluna + j));
    printf(""\n"");
    return 0;
}


int mostra_matriz(int* const M, int l, int c, char const* tit)
{
    if (tit != NULL) printf(""%s\n"", tit);
    for (int i = 0; i < l; i += 1)
    {
        printf(""    ""); // margem esquerda
        for (int j = 0; j < c; j += 1)
        {
            printf(""%5d"", *(M + (c * i) + j));
        }
        printf(""\n"");
    }
    return 0;
}
/*
https//pt.stackoverflow.com/questions/519189/
como-fazer-um-m%c3%a9todo-de-leitura-e-escrita-de-matriz-em-c
*/``` 


","
            0
        ",,,"['\npython', 'c++\n']"
519132,Como fazer validação de senha em python:,"
Fiz um código para validar a senha com alguns requisitos:
print(""Cadastre aqui sua senha com os seguintes criétios: \n""
      ""         *Ao menos 8 digitos\n""
      ""         *Ao menos uma letra MAIÚSCULA\n""
      ""         *Ao menos um número\n""
      ""         *Ao menos um caractere especial(!@#$%¨&*)\n"")
senha = str(input(""Digite sua senha : ""))

#validação

while senha.islower():
        senha = input(""A senha deve ter pelo menos um caractere MAIUSCULO: "")

while len(senha) < 7 :
    senha = input(""A senha deve ter pelo menos 8 caracteres: "")

while senha.isalpha() :
    senha = input(""Necessita de um numero: "")

while senha.isalnum() :
    senha = input(""Necessita de um Caractere especial: "")

o problema é que ele faz uma validação por vez, gostaria que olhasse todas as situações..Como posso fazer isso ? Além do mais é importante que quando o usuário nao cumprir um requisito ele solite novamente a senha.
","
Não pule os conceitos básicos, tenha calma e busque fazer as perguntas corretas.
Tutoriais Python ...
while True:
    senha = str(input(""Digite sua senha : ""))
    if senha.islower():
        print(""A senha deve ter pelo menos um caractere MAIUSCULO: "")
    elif len(senha) < 7 :
        print(""A senha deve ter pelo menos 8 caracteres: "")
    elif senha.isalpha() :
        print(""Necessita de um numero: "")
    elif senha.isalnum() :
        print(""Necessita de um Caractere especial: "")
    else:
        break

","
            0
        ",,,"['\npython', 'while\n']"
519113,Como enviar múltiplas requisições para mesma URL (mesma API) em Python?,"
Estou chamando uma API que cria tabela no Hive.
Estou desenvolvendo um script de teste automatizado para fazer 30 requisições e conseguir criar 30 tabelas no Hive. Para isso, coloquei uma lógica em que o nome_tabela a cada requisição fica nome_tabela_0, nome_tabela_1 e assim por diante (fiz com range).
Porém, quando executo a função, apenas a primeira tabela é inserida no Hive (nome_tabela_0) e retorna status_code 200. A requisição das demais retorna status_code 200 mas as tabelas não são criadas no Hive.
Alguém tem sugestões para conseguir de fato que as outras requisições sejam atendidas e as tabelas criadas?
def tests_requests_loops(table_sufix: str):

      nome_tabela = f""nome_tabela_{table_sufix}""

      body = {
        ""name_table"": nome_tabela,
        ""schema_table"": ""{\""name\"": \""Value\"", \""type\"": \""record\"", \""namespace\"": \""com.demo.producer.avro\"", \""fields\"": [{\""name\"": \""id\"", \""type\"": \""int\""}, {\""name\"": \""first_name\"", \""type\"": [\""null\"", \""string\""]}"",
        ""location"":""hive-desenvolvimento""
      }
      print(body)

      url = ""https://api-dev-cloud/development/ingestion-events/configuracoes""

      response = requests.request(""POST"", url, data=json.dumps(body), verify=False)
      print(response)

for i in range(30):
      tests_requests_loops(table_sufix=i)

Obs: tem os parâmetros de headers mas retirei pois não fazia muito diferença para a pergunta.
","
Acredito que seu problema não esteja na concepção de ""enviar multiplas requisições"". Mas já parou pra validar este seu dicionario python misturado com json em string.... No qual você ainda converte para json, ao enviar post? Se você tivesse criado um dicionário e depois convertido, teria visto o erro de sintax... Ou outra idéia seria utilizar o parametro json que já realiza está conversão.
def tests_requests_loops(table_sufix):

    body = {
            ""name_table"": f""nome_tabela_{table_sufix}"",
            ""schema_table"": {
                    ""name"": ""Value"",
                    ""type"": ""record"",
                    ""namespace"": ""com.demo.producer.avro"",
                    ""fields"": [
                            {
                                ""name"": ""id"",
                                ""type"": ""int""
                            },
                            {
                                ""name"": ""first_name"",
                                ""type"": [""null"", ""string""]
                            },
                    ]
            }
    }

    url = ""https://api-dev-cloud/development/ingestion-events/configuracoes""
    response = requests.request(""POST"", url, json=body, verify=False)
    return response

","
            0
        ",,,"['\npython', 'python-3.x', 'api', 'post', 'python-requests\n']"
519101,Em python como eu faço a leitura de dados digitados na mesma linha e atribui as variaveis [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como eu faço para os input ficarem na mesma linha? [fechada]

                                (1 resposta)
                            


É possível incluir mais de uma variável por 'input' no Python?

                                (3 respostas)
                            

Fechada há 8 meses.



Preciso realizar a leitura de 3 dados digitados na mesma linha e inserir em três variáveis diferentes utilizado o python.
",,,,,['\npython\n']
519086,Calculadora em Python,"
Fiz uma calculadora em Python como exercício prático, não usei funções nem pesquisei nada, apenas fiz o que sei. gostaria de saber se o código está bom, mesmo sem a utilização de funções(após irei utilizar também para praticar :D). se puderem dar esse auxilio de dizer se está um código limpo, bem comentado e fácil de entender. Estou aprendendo ainda e gostaria de saber se estou no caminho certo. agradeço muito desde já!
# Calculadora 1.0

# importa a função sleep() para criar pausas
from time import sleep as sl


# Da start no programa - OK
while True:
    while True:
        try:
            rodar = int(input(""Deseja iniciar o programa? [1- sim  2- não] : ""))
            break
        except:
            print(""Erro: Você deve digitar um número"")
            sl(2)
            continue

    # caso sim - OK
    if rodar == 1:
        Roda = True
        break
        sl(2)

    # caso não - OK
    elif rodar == 2:
        print(""\nBeleza então!"")
        Roda = False
        break
        sl(2)
    
    # verifica erro - OK
    elif rodar != 1 or rodar != 2:
        print(""Erro: Opção inválida, tente novamente!"")
        sl(2)
        continue

# Loop principal - OK
while Roda:
    # Entrada de dados - OK
    while True:
        try:
            pn = float(input(""Primeiro número: ""))
            sn = float(input(""Segundo  número: ""))
            break
        except:
            print(""Erro: você deve digitar um número!"")
            sl(2)
            continue

    # Loop de operções com os números passados - OK
    sim = True
    while sim:
        # testa se o usuario inseriu mesmo um número - OK
        while True:
            try:
                print(""""""
                Qual operração matemática você gostaria de realizar?
                1- soma
                2- subtração
                3- divisão
                4- multiplicação

                5- sair
                """""")
                opc = int(input("">: ""))
                break
            except:
                print(""Erro: valor inválido tente novamente!"")
                sl(2)
                continue

        # Saída de dados/Programa - OK
        # soma - OK
        if opc == 1:
            soma = pn + sn
            print(f""\n{pn} + {sn} = {soma}"")
            
        # subtração - OK
        elif opc == 2:
            sub = pn - sn
            print(f""\n{pn} - {sn} = {sub}"")

        # divisão - OK
        elif opc == 3:
            div = pn / sn
            print(f""\n{pn} / {sn} = {div}"")

        # multiplicação - OK
        elif opc == 4:
            mult = pn * sn
            print(f""\n{pn} x {sn} = {mult}"")

        # sair do programa - OK
        elif opc == 5:
            print(""Até a próxima!"")
            exit()

        # Erro - OK
        else:
            print(""Erro: Você deve escolher uma das opções disponíveis!"")
            sl(2)
            continue
        
        # verifica se o usuario ainda vai usar os mesmos números - OK
        while True:
            while True:
                try:
                    esc = int(input(""Deseja realizar mais alguma operação com estes números [1- sim  2- não] : ""))
                    break
                except:
                    print(""Erro: escolha apenas entre as duas opções!"")
                    sl(2)
                    continue

            # caso sim - OK
            if esc == 1:
                sim = True
                break
                sl(2)

            # caso não - OK
            elif esc == 2:
                print(""\nBeleza então!"")
                sim = False
                break
                sl(2)
            
            # verifica erro - OK
            elif esc != 1 or esc != 2:
                print(""Erro: Opção inválida, tente novamente!"")
                continue
        
        # Testa se o usuario ainda quer usar o programa
        while True:
            while True:           
                try:
                    rodar = int(input(""\nDeseja continuar no programa? [1- sim  2- não] : ""))
                    break
                except:
                    print(""Erro: Você deve digitar um número!"")
                    sl(2)
                    continue

            # caso sim - OK
            if rodar == 1:
                Roda = True
                break
                sl(2)

            # caso não - OK
            elif rodar == 2:
                print(""\nAté a próxima!"")
                Roda = False
                break
                sl(2)
            
            # verifica erro - OK
            elif rodar != 1 or rodar != 2:
                print(""Erro: Opção inválida, tente novamente!"")
                continue

","
A seguir algumas coisas que atrapalham na compreensão do código.

Você nomeou o sleep da biblioteca time como sl, mas acho que seria bom não nomeá-lo, porque ficará melhor para a compreensão, principalmente em códigos maiores.

Alguns comentários têm que melhorar. Como o ""caso sim"". O que ""caso sim""? E o ""caso não"". Caso não o quê? Seria melhor que fossem algo como ""caso queira iniciar o programa"" e ""senão"".

Melhore os nomes das variáveis, e tente não fazer coisas como ""rodar"" e ""Roda"" para nomear as variáveis. Os nomes de variáveis devem por convenção estar em letras minúsculas, e é bom que você deixe claro o que elas são. Um exemplo:


while True:
    try:
        n1 = float(input(""Entre um número: ""))
        n2 = float(input(""Entre outro número: ""))
        
        soma = n1 + n2
        break
        
    except ValueError:
        print(""\nVocê precisa digitar um número!\n"")
    
print(soma)



Se puder, diminua os while. Tente deixar os while True claros ou tente mudar para coisas como while estiver_rodando ou while not acabou.

Existem alguns sleep que não estão funcionando porque estão vindo depois de um break, ou seja, estão sendo ignorados.


Estas são algumas coisas que atrapalham a compreensão do código. Minha dica é que agora que você tem uma visão de como o programa funciona, reescreva-o do zero consultando este. Sempre me ajuda.
","
            1
        ",,,['\npython\n']
519070,Como transitar entre janelas?,"
Estou criando um sistema simples apenas para aprender um pouco sobre a biblioteca tkinter.
Porém, empaquei bem aqui.
A ideia é criar várias páginas no mesmo código (eu sei que o correto seria modularizar o código, mas por se tratar de um projeto pequeno, tudo junto irá servir). Porém, eu gostaria de poder apertar um botão e assim ficar viajando de uma página para outra.
Por exemplo, eu executo o programa e então me é mostrado a Página 1.

Ao clicar no botão ""Página 2"", eu deveria ir para a página 2. Onde lá deveria ter um botão ""Voltar"" que me leve de volta a Página 1.

E esse processo deveria ocorrer com qualquer página que eu queira criar.
Eu quero pedir essa ajuda, pois todos os códigos que eu encontrei eram muito confusos e/ou não trabalhavam com páginas isoladas separadamente onde o botão iria chamá-las.
Código:
from tkinter import *
import sys

janela1 = Tk()
b1 = Button(janela1, text=""Janela 2"")
b1.grid()
b2 = Button(janela1, text=""Janela 3"")
b2.grid()
janela1.geometry(""200x100"")
janela1.mainloop()

sys.exit()

janela2 = Tk()
b3 = Button(janela2, text=""Voltar"")
b3.grid()
janela2.geometry(""200x100"")
janela2.mainloop()

janela3 = Tk()
b4 = Button(janela3, text=""Voltar"")
b4.grid()
janela3.geometry(""200x100"")
janela3.mainloop()

","
Para isso existe o Tkinter.Frame e com o método pack para exibir o frame que deseja e usando o pack_forget (pode usar o forget_grid se for tabalhar com grids) para ocultar (remover), exemplo bem simples:
from tkinter import *

root = Tk()

frame1 = Frame(root)
frame2 = Frame(root)


def go_home():
    frame2.pack_forget()
    frame1.pack()


def go_second():
    frame1.pack_forget()
    frame2.pack()


root.title(""páginas"")

btn_page2 = Button(frame1, text=""Página 2"", command=go_second)
btn_page2.pack()

btn_home = Button(frame2, text=""inicial"", command=go_home)
btn_home.pack()

frame1.pack()

root.mainloop()

Também existe o método raise que tem o equivalente em python como frame.tkraise(), que irá mudar a ordem dos frames adicionados no root, nesse caso ambos frames sempre estarão lá (nesse caso não achei documentado em Python, assim que encontrar vou tentar produzir um exemplo).
","
            2
        ",,,"['\npython', 'tkinter\n']"
519042,"Como passar variáveis ""invisíveis"" de uma página para outra usando um link no Django?","
Imagine que eu tenha o seguinte código no urls.py;
url(r'^relatorio', views.relatorioView, name='relatorio'), url(r'^relatorio/grafico', views.graph, name='grafico'),
Na página relatório eu tenho uma tabela com nomes e códigos de itens.
Como eu posso fazer um link que redirecione para a página do gráfico daquele determinado item sem deixar o código explícito na url?
","
Você pode fazer um POST, e enviar os dados para a outra view. Ela faz a query set e retorna uma resposta, mas como você enviou por POST, os identificadores não vão aparecer na url. Mas você tem que estar preparado para um solicitação get, na mesma view, nessa caso, você pode redirecionar o usuário para outra parte do site.
Isso você pode fazer com funcition views assim(isso está nessa documentação):
    if request.method == 'GET':
        do_something()
    elif request.method == 'POST':
       do_something_else()

Com classes, você usaria os métodos apropriados para cada tipo de requisição.
Para pegar o valor passado pro POST, você pode fazer:
request.POST['chave-do-valor']

Use um form, para enviar os dados, você deve especificar o enctype. Para o código acima funcionar.
<form action=""/view-url"" method=""post"" enctype=""multipart/form-data"">

","
            0
        ",,,"['\npython', 'django', 'url\n']"
519004,"Tenho um dataframe de datas/horas inicio e final, como faço pra separar para datas / hora inicio / hora final no pandas?","
Na base de dados eu tenho um relatorio que contem:
INICIO              FINAL
20/07/2021 09:17    20/07/2021 09:25
20/07/2021 09:17    20/07/2021 09:25
20/07/2021 09:17    20/07/2021 09:25
20/07/2021 09:28    20/07/2021 09:33

Preciso transformar em isso:
DATA       HORA INICIO  HORA FINAL
20/07/2021  09:17:10    09:25:17
20/07/2021  09:17:10    09:25:17
20/07/2021  09:17:10    09:25:17
...

fiz um codigo tentando duas funções
 import pandas as pd
 
 relatorio = pd.read_csv('relatorio.csv', encoding='latin1', sep=';')

 datas_df = relatorio[['INICIO','FINAL']]

 for dhi in datas_df['INICIO']:
    data, hora_inicio = dhi.split(' ')
    datas_df['DATA'] = data
    datas_df['HORA INICIO'] = hora_inicio
    relatorio.append(datas_df['DATA'])
    relatorio.append(datas_df['HORA INICIO'])

 for dhf in datas_df['FINAL']:
    data_f, hora_final = dhf.split(' ')
    datas_df['HORA FINAL'] = hora_final
    relatorio.insert(loc=2, column='HORA FINAL', value=datas_df['HORA FINAL'])

Dessa forma o 1º for da erro pois não existe o 'DATA', e no 2º for não da erro, mas só pega o ultimo valor da data e hora.
Fiz com esses 2 for para citar exemplos de métodos que eu tentei.
Conseguem ajudar? Acho que é alguma coisa no sentido do loop for né?
","
Apenas use o constructor do pandas.DataFrame() combinado com as propriedades pandas.Series.dt para acessar os valores datetime das series:
import pandas as pd

df = pd.DataFrame([
  [""20/07/2021 09:17:10"", ""20/07/2021 09:25:17""],
  [""20/07/2021 09:17:10"", ""20/07/2021 09:25:17""],
  [""20/07/2021 09:17:10"", ""20/07/2021 09:25:17""],
  [""20/07/2021 09:28:16"", ""20/07/2021 09:33:27""],
], columns=['INICIO', 'FIM'], dtype='datetime64[ns]');

df2 = pd.DataFrame({
  ""DATA"": df['INICIO'].dt.date,
  ""HORA INICIO"": df['INICIO'].dt.time,
  ""HORA FIM"": df['FIM'].dt.time,  
})

print(df2)

Teste o exemplo no Repl.it
         DATA HORA INICIO  HORA FIM
0  2021-07-20    09:17:10  09:25:17
1  2021-07-20    09:17:10  09:25:17
2  2021-07-20    09:17:10  09:25:17
3  2021-07-20    09:28:16  09:33:27

No caso fora usados pandas.Series.dt.date e pandas.Series.dt.time
","
            3
        ","
Fiz dessa forma:
datas_df = relatorio[['INICIO','FINAL']]
datas = []
horas_i = []
horas_f = []
for dhi in datas_df['INICIO']:
    data, hora_inicio = dhi.split(' ')
    datas.append(data)
    horas_i.append(hora_inicio)
for dhf in datas_df['FINAL']:
    data_f, hora_final = dhf.split(' ')
    horas_f.append(hora_final)
datas_df['DATA'] = datas
datas_df['HORA INICIO'] = horas_i
datas_df['HORA FINAL'] = horas_f
datas_df = datas_df.drop(columns=['INICIO', 'FINAL'])
display(datas_df)

    DATA    HORA INICIO HORA FINAL
0   20/07/2021  09:17:10    09:25:17
1   20/07/2021  09:17:10    09:25:17
2   20/07/2021  09:17:10    09:25:17
3   20/07/2021  09:28:16    09:33:27
4   20/07/2021  09:28:16    09:33:27

Se voces quiserem me dar algumas dicas. Sempre bem vindo!
","
            0
        ","['\npython', 'pandas\n']"
518985,Como acessar um atributo ou método a partir de uma variável?,"
Estou recebendo este erro:
Erro: "" 'Series' object has no attribute 'medida' ""

Tem alguma maneira de colocar uma variável no lugar do método e o DataFrame reconhecer o atributo? Abaixo tem o código como eu achei que funcionaria.
   def desc():
        lista_colunas = ['Pclass', 'Age', 'Parch', 'Fare']
        lista_medidas = ['mean','max','min','std','var']
        for medida in lista_medidas:
            for feat in lista_colunas:
                df_join[feat + '_' + medida] = df_join[feat].medida()
        df_join.head()
    desc()

","
Você pode pegar um método / atributo qualquer de um objeto através de um string com a função built-in getattr:
import numpy as np

a = np.array([1, 2, 3])
# a linha abaixo equivale a escrever ""soma = a.sum()""
soma = getattr(a, 'sum')()

print(soma)  # output = 6

Sem dados de exemplo, não consigo testar se o a lógica do seu código está funcionando. Mas focando na sua pergunta, você pode fazer a operação com:
df_join[feat + '_' + medida] = getattr(df_join[feat], medida)()

","
            0
        ","
Você pode usar o eval para fazer o que você quer.
def desc():
    lista_colunas = ['Pclass', 'Age', 'Parch', 'Fare']
    lista_medidas = ['mean','max','min','std','var']
    for medida in lista_medidas:
        for feat in lista_colunas:
            func = f""df_join['{feat}'].{medida}()""
            df_join[feat + '_' + medida] = eval(func)
    print(df_join.head())

desc()

Nota Cuidado com o uso do eval. Em determinadas situações onde o programa tem uma falha de segurança, pode ser perigoso o uso deste. Imagine que neste pequeno script seja possível a inserção de valor para func. Caso uma pessoa mal intensionada insira select * from table ou apenas 1/0, ou outra coisa; o script poderia lançar uma exceção, apagar arquivos, elevar a utilização da CPU em 100% ou outro problema.
","
            0
        ","['\npython', 'pandas', 'dataframe', 'data-science\n']"
518906,"Ao tentar extrair um PDF usando Python Textract, retorna um erro","
Estou usando a biblioteca Python, que é o Textract, para extrair texto de um arquivo PDF, mas está obtendo um erro ao executar o script. Abaixo está o script e o erro retornado no console.
import textract

text = textract.process(""C:\Users\Willian Ambisis\Downloads\licenca-ambiental2.pdf"")
print(text)

Erro:

File ""c:\Users\Willian Ambisis\Desktop\Textract\textractPython.py"",
line 3
text = textract.process(""C:\Users\Willian Ambisis\Downloads\licenca-ambiental2.pdf"")
^ SyntaxError: (unicode error) 'unicodeescape' codec can't decode
bytes in position 2-3: truncated \UXXXXXXXX escape

","
Esse erro é causado porque você tá usando uma string normal como endereço doa rquivo. Pra solucionar tem 3 possibilidades:
1: Adicionar r antes da string pra converter de normal em raw string:
text = textract.process(r""C:\Users\Willian Ambisis\Downloads\licenca-ambiental2.pdf"")

2: Inverter as barras:
text = textract.process(""C:/Users/Willian Ambisis/Downloads/licenca-ambiental2.pdf"")

3: Usar barras duplas para escapar o caractere:
text = textract.process(""C:\\Users\\Willian Ambisis\\Downloads\\licenca-ambiental2.pdf"")

","
            -1
        ","
O problema se dá porque você está tratando as barras invertidas do caminho do arquivo como caracteres normais ao invés de caracteres especiais. Da documentação:

O caractere de barra invertida (\) é usado para escapar os caracteres que, de outra forma, têm um significado especial, como nova linha, a própria barra invertida ou o caractere de aspas.

Tente adicionar o prefixo r à sua string, que lida com as barras invertidas por você:
import textract

#                       v
text = textract.process(r""C:\Users\Willian Ambisis\Downloads\licenca-ambiental2.pdf"")
print(text)

","
            -2
        ","['\npython', 'ocr\n']"
518861,Como automatizar a execução de scripts Python no Google Colab? Sheduler,"
Desenvolvi um script em python para automatizar requisições e integração de dados com o BigQuery. Gostaria de saber se há alguma forma de executar este script automaticamente em uma rotina de segunda a sexta, sempre à meia noite, ou algo do tipo.

Alguém sabe informar se é possível criar essa rotina?
Vou precisar subir o script em alguma maquina virtual (cloud)?
O Google Colab é capaz de executar o código sem que meu computador esteja ligado?

Fico muito grato!
",,,,,"['\npython', 'python-3.x', 'python-requests', 'ipython-notebook', 'scheduler\n']"
518824,Como pegar uma URL completa usando Django?,"
Existe alguma função do Django que concatene um caminho específico com a URL base e retorne uma URL completa?
Exemplo:
url_completa = criar_url_completa(""/meu_app/minha_view"")
print(url_completa) # Resultado: https://meusite.com/meu_app/minha_view

","
No settings.py tem um campo chamado ALLOWED_HOSTS, nele pode ser colocado o endereço do site em várias formas.
EX:
ALLOWED_HOSTS = ['https://meusite.com' , 'meusite.com']
Daí, vai na tua view onde quer pegar essa tua url base e importa o settings:
from django.conf import settings

url_completa = criar_url_completa(""{}/meu_app/minha_view"".format(ALLOWED_HOSTS[0]) 
print(url_completa) # Resultado: https://meusite.com/meu_app/minha_view

","
            0
        ",,,"['\npython', 'django\n']"
518748,ModuleNotFound quanto tento importar uma biblioteca externa,"
pip install pillow

>>> Requirement already satisfied: pillow in c:\users\miguel\appdata\local\packages\pythonsoftwarefoundation.python.3.9_qbz5n2kfra8p0\localcache\local-packages\python39\site-packages (8.3.1)

import pillow

>>> Traceback (most recent call last):
  File ""C:\Users\Miguel\PycharmProjects\Testing\main\__init__.py"", line 1, in <module>
    import pillow
ModuleNotFoundError: No module named 'pillow'

por algum motivo eu sempre consigo esse erro quando tento importar uma biblioteca externa, mesmo depois de baixa-la. tentei pesquisar mas sem resultados. alguém sabe o motivo desse erro?
","
Se a biblioteca for para manipulação de imagens o correto é:
Instalação
pip install Pillow

Nota Pillow com a letra P em maiúsculo.
Carregando
import PIL

ou
from PIL import Image

","
            0
        ",,,"['\npython', 'importação\n']"
518711,Dúvida sobre encontrar informação no banco de dados,"
Estou tentando fazer um sistema simples de login, gostaria que o sistema verificasse os logins que já estão cadastrados no banco de dados, para que não tenha mais de um igual cadastrado. Estou usando o SqLite3 como banco.
Eu estou fazendo assim.
import sqlite3

banco = sqlite3.connect('sistema_cadastro.db')
cursor = banco.cursor()
cursor.execute(""SELECT login FROM usuarios"")
banco.commit()
tabela = cursor.fetchall()
print(tabela)
login = [tabela]
str(login)
if 'bruno' in login:
    print('Encontrou! (: ')
else:
    print('Não encontrou ): ')
banco.close()

Estou fazendo um select de 'login' na tabela 'usuarios' e dando um print
O print está mostrando a seguinte informação:
[('adm',), ('bruno',), ('teste',)]

Logo em seguida, coloquei um if procurando 'bruno' na lista 'login'.
Mas ele não acha, e sempre joga para o else.
Gostaria de ver uma forma de ele procurar a variável 'bruno' na lista 'login'.
","
O retorno de um banco de dados consiste em uma lista de tuplas, ou seja, você deve acessar a lista, logo após o conteúdo das tuplas e procurar pela informação necessária. Com apenas um ""IF "" o seu código estará utilizando apenas a primeira lista como parâmetro. Com isso, aconselho que você utilize um laço ""FOR"" para percorrer todo o conteúdo da lista (as tuplas) e por último um ""IF IN"" nas tuplas para que o programa possa acessar as strings e, ao encontrar a informação desejada, ele possa executar o código de caso verdadeiro. Ainda dou a dica de utilizar as funções Index(retorna o Index de um valor da coleção) e len(retorna o tamanho da coleção) para imprimir a negação apenas quando o programa finalizar a busca em toda a lista, além de um break no fim da execução do IF para sair do laço FOR quando o valor procurado for encontrado. Em anexo mando um exemplo para que você possa entender melhor a explicação:
b = [('bruno',), ('rodrigo',), ('joana',)]

for x in b:
        if 'rodrigo' in x:
            print('Nome encontrado :)')
            break
        elif b.index(x) == len(b) -1:
            print('Nome não encontrado :(')

","
            -2
        ",,,"['\npython', 'python-3.x', 'lista', 'sqlite', 'login\n']"
518681,como posso simplificar essas duas funções?,"
Este código soma as colunas e as linhas de uma matriz separadamente. Criei estas duas funções para fazer isso e preciso simplificar meu código transformando-as em uma só. Note que a única coisa que muda é de matriz[j][i] para matriz[i][j]. Existe uma maneira de chamar somente uma função mudando apenas o parâmetro?
def somar_linhas():
    soma = 0
    for i in range(4):
        for j in range(4):
            soma = soma + matriz[i][j]
        print(f""A soma da linha {i + 1} é {soma}"")
        soma = 0


def somar_colunas():
    soma = 0
    for i in range(4):
        for j in range(4):
            soma = soma + matriz[j][i]
        print(f""A soma da coluna {i + 1} é {soma}"")
        soma = 0


matriz = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12,], [13, 14, 15, 16]]

somar_linhas()
print()
somar_colunas()

","
É possível simplificar e unir suas funções com o uso dum operador condicional:
expressão1 ""if"" condição ""else"" expressão2

Ele funciona testando o valor lógico da condição e caso:

condição == True o operador condicional retorna expressão1.
condição == False o operador condicional retorna expressão2.

Algumas mudanças também são benvindas como a declaração da variável soma diretamente no seu escopo de aplicação e o uso de uma declaração de atribuição aumentada +=
def somar4x4(linhas=False):    
    for i in range(4):
        soma = 0
        for j in range(4):
            soma += matriz[i][j] if linhas else matriz[j][i]
        print(f""A soma da {'linha' if linhas else 'coluna'} {i + 1} é {soma}"")

matriz = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12,], [13, 14, 15, 16]]

somar4x4(linhas=True)
somar4x4(linhas=False)

Teste o código no Repli.it
Como já foi comentado prefira passar a matriz como parâmetro da função, pois assim você faz com que o seu código se torne reaproveitável:
def somar4x4(m, linhas=False):    
    for i in range(4):
        soma = 0
        for j in range(4):
            soma += m[i][j] if linhas else m[j][i]
        print(f""A soma da {'linha' if linhas else 'coluna'} {i + 1} é {soma}"")

matriz = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12,], [13, 14, 15, 16]]

somar4x4(matriz, linhas=True)
somar4x4(matriz, linhas=False)

Teste o exemplo no Repl.it
Também pode ser aplicado a função embutida sum() a uma compreensão de lista no laço iteração aninhado:
def somar4x4(m, linhas=False):
  for i in range(4):
    soma = sum([m[i][j] if linhas else m[j][i] for j in range(4)])
    print(f""A soma da {'linha' if linhas else 'coluna'} {i + 1} é {soma}"")

matriz = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12,], [13, 14, 15, 16]]

somar4x4(matriz, True)
somar4x4(matriz, False)

Teste o código no Repl.it
","
            3
        ","
Para criar uma função que some ou linhas ou colunas, a função deve receber um parâmetro indicando o que ela deve somar.
A partir daí, um condicional escolhe quais parâmetros somar, bem como, quais textos imprimir:
def somar(colunas = False):
    soma = 0
    for i in range(4):
        for j in range(4):
            if(colunas):
                soma = soma + matriz[j][i]
            else:
                soma = soma + matriz[i][j]
        if(colunas): 
            tipo = 'colunas'
            indice = j
        else:
            tipo = 'linhas'
            indice = i 
        print(f'A soma da {tipo} {indice+1} é {soma}') 
        soma = 0
    indice = 0

Nesta função, chamando somar() (sem parâmetros) ou soma(False) (que é padrão) será efetuada a soma das linhas.
E a chamada somar(True) irá efetuar a soma das colunas.
","
            0
        ","['\npython', 'funções', 'revisão-de-código\n']"
518621,Alguém me ajuda a subtrair uma lista de outra? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Gente sei que é simples mas estou me batendo aqui pra fazer isso, gostaria de fazer uma subtração de listas da seguinte maneira
lista_inicio = [""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""J"", ""Q"", ""K"", ""A""]
lista_chamada = [""1"", ""2""]
Lista = []

print(lista_inicio)
print(lista_chamada)
lista = lista_inicio - lista_chamada < **Como faço essa parte?**
print(lista)

","
Faça verificação pela lista_inicio e armazene todos os elementos que não estão na lista_chamada:

def compara_chamada(lista_i, lista_c):
    return [i for i in lista_i if i not in lista_c]

lista_inicio = [""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""J"", ""Q"", ""K"", ""A""]
lista_chamada = [""1"", ""2""]
# é aqui que a mágica acontece: verifico todos da lista_inicio e armazeno
# exceto os que aparecem na lista_chamada
lista = compara_chamada(lista_inicio, lista_chamada)
print(lista)

","
            0
        ","
As operações que você está querendo, são operações de conjunto. O python tem uma estrutura de dados própria para isso chamada set()
Veja abaixo:
>>> lista_inicio = [""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""J"", ""Q"", ""K"", ""A""]
>>> lista_chamada = [""1"", ""2""]
>>> print(set(lista_inicio) - set(lista_chamada))
{'9', '4', 'A', 'Q', '8', '5', 'K', 'J', '7', '3', '6'}

Caso você precise que o resultado seja uma lista, use:
print(list(set(lista_inicio) - set(lista_chamada)))

Claro que você pode atribuir a uma variável
lista_resultado = list(set(lista_inicio) - set(lista_chamada)))

Quanto aos itens repetidos, a estrutura do set já trata isso
>>> lista = [1, 1, 1, 2, 2, 3, 3, 3, 3]
>>> print(set(lista))
{1, 2, 3}

Veja abaixo rapidamente como acrescentar itens no set()
>>> conjunto = set([1, 2, 3])

>>> print(conjunto)
{1, 2, 3}

>>> conjunto.add(4)

>>> print(conjunto)
{1, 2, 3, 4}

>>> conjunto.add(4)

>>> print(conjunto)
{1, 2, 3, 4}

>>> conjunto.add(1)

>>> print(conjunto)
{1, 2, 3, 4}

Perceba que o segundo 4 e, posteriormente, o segundo 1, não foram incluídos.
Em tempo: A resposta marcada como solução em 22/07/2021, não é performática.
","
            0
        ","['\npython', 'funções', 'lista', 'python-requests\n']"
518601,Como buscar um item da lista e retornar em uma mensagem?,"
estou iniciando na programação, e estou fazendo um bot no discord
usando python (discord.py)

preciso criar um comando pra que o bot retorne a disponibilidade das
frutas dentro da lista.

class Frutas(commands.Cog):  # cog 

    def __init__(self, client):  # setup pra cog.
        self.client = client

    @commands.command(aliases=['f'])  # comando para escolher frutas.
    async def fruta(self, ctx, *, fruta):
        responses = [  # frutas disponíveis
            'Maçã vermelha',
            'Maçã verde',
            'Banana amarela'
        ]
        if fruta in responses:  # se a fruta solicitada existe em ""responses"":
            await ctx.channel.send(responses.index)  # (aqui deveria mandar a fruta correspondente à lista.)
        else:  # se não:
            await ctx.channel.send(f'não temos essa fruta na loja ({fruta})')  # retorne que não temos a fruta.


def setup(client):
    client.add_cog(Frutas(client))  # cog


com esse código, ele me retorna isso

eu queria colocar !f maçã e fazer o bot identificar a ""Maçã vermelha""
na lista e retornar a mesma como uma mensagem de minha escolha, mas não sei como fazer pra ele identificar isso...

já testei também sem o index, mas aí ele manda a lista com todas as frutas, e eu ainda assim, preciso digitar ""!f Maçã vermelha"" invés de ""!f maçã""
","
A lógica básica é, assim que o código for chamado ele iterar a lista de possíveis frutas e testar se a fruta alvo é contida na fruta atual.
Pontos importantes:

Acentuação e cedilha
Evitar acentuação, pois 'Maca' in 'Maçã vermelha' retorna falso, então para contornar isso, talvez seja interessante evitação acentuação e o 'c' com a cedilha

Usar o método .upper()
O método upper() converte todas as letras da string em UPPERCASE, isso é importante, pois, o in é case sensitive, então o código banana in Banana retorna falso.


frutas = ['MACA VERMELHA', 'MACA VERDE', 'BANANA AMARELA']

frutaAlvo = 'MacA'
resultado = list()

for fruta in frutas:
    if frutaAlvo.upper() in fruta.upper():
        resultado.append(fruta) # Com apenas esse trecho você terá as possíveis repostas.
    #Com o código abaixo salva o index da primeira ocorrência ""mínima"":
        #indice = frutas.index(fruta)
        #break


print(resultado)


Output: ['MACA VERMELHA', 'MACA VERDE']
","
            0
        ","
O seu erro mais imediato é que index é um método do tipo list. Quando você usa responses.index como valor para o método ctx.channel.send(...), você está apenas enviando o método index, e não uma invocação do método. Por isso que ele sempre responde com <built-in method index of list object at ...>, pois esse é o ponteiro (localização na memória) do método em si.
Seu código, portanto, está funcionando bem; você precisa apenas alterar o valor enviado de volta, de responses.index para a mensagem que você quiser retornar, como f'Aqui está sua {fruta}!'
","
            0
        ","['\npython', 'lista\n']"
518598,Verificar a existência de uma string em um arquivo a partir de outro arquivo,"
Tenho dois arquivos, um é esse:
gp2,POL-AES-SHA1,Prop-AES-SHA1
gp2,POL-AES-SHA1-PFS-2,Prop-AES-SHA
POL-3DES-SHA,Prop-3DES-SHA

Repare que podem ter 2 ou 3 itens por linha (separados por virgula).
No segundo arquivo tenho:
Prop-AES-SHA1,sha1,aes-256-cbc,8
Prop-AES-SHA,sha1,aes-128-cbc,24
POL-3DES-SHA,sha1,3des
IPSEC-AES-256-MD5,md5,aes-256-cbc
IPSEC-AES-256-CBC-SHA256,sha256,aes-256-cbc,8

Repare que  pode ter 3 ou 4 itens por linha, também separados por vírgula.
A ideia é que eu pegue o último item de cada linha do primeiro arquivo e procure por ela no segundo arquivo. Se eu encontrar, eu trago todos os itens da linha e crie uma linha misturando itens dos dois arquivos.
Ele só analisa 1 linha e o código para:
file1 = open('file1')
file2 = open('file2')

for i in file1:
    i = i.strip().split(',')
    last_i = i[-1]
    for i2 in file2:
        if last_i in i2:
            print(f'{i} + {i2}')

","
Pelo que entendi, você quer apresentar todos que derem 'match', mas esse seu segundo for só esta percorrendo o arquivo uma única vez. Neste caso, ou você armazenaria o conteúdo dele em algum canto, ou teria que percorrê-lo novamente a cada iteração do i.
Desta forma deve resolver seu problema.
file1 = open('file1.txt')

for i in file1:
    i = i.strip().split(',')
    last_i = i[-1]

    with open('file2.txt') as file2:
        for j in file2:
            if last_i in j:
                print(f'{i} + {j}')

","
            -1
        ",,,"['\npython', 'python-3.x\n']"
518576,Gostaria de saber maneiras mais rápidas para executar a inserção de informações em uma coluna baseado no valor de outra,"
Possuo um Dataframe com inúmeras colunas, mas para a seguinte questão as colunas importantes são:

ID (número) do relato
Produto
Evento

Exemplo:




id_relato
evento
produto




456
edema
medicamento1


456
prurido



456
sonolência



789
eritema
medicamento2


789
tontura





Um mesmo relato de um produto pode conter mais de 1 Evento e por isso, pode conter mais de 1 linha. Porém, o produto não é preenchido nas outras linhas, somente na primeira e por isso fiz um for loop para inserir o nome desse produto nessas outras linhas da coluna de Produto.
for i in relatos['id_elato']:
   relatos.loc[relatos['id_elato'] == i, 'produto'] = list(relatos.loc[relatos['id_elato'] == i]['produto'].unique())[0]

Resultado:




id_relato
evento
produto




456
edema
medicamento1


456
prurido
medicamento1


456
sonolência
medicamento1


789
eritema
medicamento2


789
tontura
medicamento2




Consigo o resultado esperado, porém, em um dataframe maior o processamento fica bem demorado. Por isso, haveria alternativas com melhor desempenho do que o for loop?
","
Considerando que os campos produto estão em branco, ou seja string vazia (""""). Siga os passos abaixo:
Criando DataFrame de teste
import pandas as pd

df = pd.DataFrame({""id_relato"": [456, 456, 456, 789, 789], ""evento"": [""edema"", ""prurido"", ""sonolência"", ""eritema"", ""tontura""], ""produto"": [""medicamento1"", """", """", ""medicamento2"", """"]})

df

   id_relato      evento       produto
0        456       edema  medicamento1
1        456     prurido
2        456  sonolência
3        789     eritema  medicamento2
4        789     tontura

Substituindo a string vazia por NaN
import numpy as np

df[""produto""] = df[""produto""].replace("""", np.nan)

df

   id_relato      evento       produto
0        456       edema  medicamento1
1        456     prurido           NaN
2        456  sonolência           NaN
3        789     eritema  medicamento2
4        789     tontura           NaN

Usando fillna com o método ffill (forward fill)
df = df.fillna(method=""ffill"")

df
   id_relato      evento       produto
0        456       edema  medicamento1
1        456     prurido  medicamento1
2        456  sonolência  medicamento1
3        789     eritema  medicamento2
4        789     tontura  medicamento2

","
            1
        ",,,"['\npython', 'pandas', 'dataframe\n']"
518537,Enviar E-mail formatado Python,"
Boa tarde, estou precisando de uma ajuda em relação ao python e o pandas.
Preciso gerar um ranking semanalmente a partir de uns relatórios que extraio do sistema,
os dados eu estou conseguindo consultar porem eu preciso que eu pegue todos esses display
que eu imprimo no terminal e colocar eles formatados uma tabela ao lado da outra com a posição do ranking de cada um e enviar no corpo do e-mail com disparo automático.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from pandas.core.indexes.base import Index
import win32com.client as win32

arquivo1 = 'TA0413-CPC.EV-Listagemgeraldeatividadedoconsultor.xlsx'
arquivo2 = 'RAA-RelatoriodeAnalisedeAgendas.xlsx'
arquivo3 = 'Validacoesdedespesas.xlsx'


ranking1= pd.read_excel(arquivo1,sheet_name='Sheet')
ranking2= pd.read_excel(arquivo2,sheet_name='Sheet')
#display (ranking1)

#Atendimentos
atendimentos =ranking1.sort_values(['Qtd. Atendimentos'],ascending=False)
display(""Ranking Atendimentos"",atendimentos[[""Consultor"",""Qtd. Atendimentos""]])


#Clientes atendidos
clientes = ranking1.sort_values(['Qtd. Cliente Atendidos'],ascending=False)
display(""Ranking Clientes Atendidos"",clientes[[""Consultor"",""Qtd. Cliente Atendidos""]])


#Agendas planejadas
agendap = ranking1.sort_values(['Agendas Planejadas'],ascending=False)
display(""Ranking Agendas Planejadas"",agendap[[""Consultor"",""Agendas Planejadas""]])

#Agendas Realizadas
agendar= ranking1.sort_values(['Agendas Realizadas'],ascending=False)
display(""Ranking Agendas realizadas"",agendar[[""Consultor"",""Agendas Realizadas""]])

# % completude de agenda

ranking1['Porcentagem']=(ranking1['Agendas Realizadas']/ranking1['Agendas Planejadas'])*100
porcentagemf=ranking1.sort_values(['Porcentagem'],ascending=False)
display(porcentagemf[[""Consultor"",""Porcentagem""]])
 
 #Quantidade de serviços
servicos= ranking1.sort_values(['Qtd. Serviços'],ascending=False)
display(servicos[[""Consultor"",""Qtd. Serviços""]])


#Rtr Gerados
rtr = ranking2.groupby([""Usuário""]).sum(""RTR Gerado"")
display (rtr.sort_values(by=[""RTR Gerado""],ascending=False)[[""RTR Gerado""]])




# Integração com o Outlook
outlook = win32.Dispatch('outlook.application')
# Email
email = outlook.CreateItem(0)
# Info Emails
email.To = """"
email.Subject = ""Teste disparo de email""
email.HTMLBody = f"""""" 
<p>Olá Lucas, esse é o</p> 
<p>teste do email automatico em phyton.</p> 
<p>Deu certo.</p> 

<p>Ass:</p>
""""""
email.Display()
email.Send()
print(""Email Enviado"")


","
Pandas tem o método .to_html() para converter cada tabela em HTML e você adicionar ao relatório.
Já testou esse método?
","
            0
        ",,,"['\npython', 'excel', 'pandas', 'envio-de-email', 'automatização\n']"
518518,Clicar em um botão dentro do power bi com python,"
Meus caros, preciso que meu robô clique no botão dentro do power Bi de atualizar, para ele atualizar sozinho, só falta essa parte para que ele fique 100%
import os
import pyautogui
import time

os.system(""C:/Teste.pbix"")

Ele já está abrindo o arquivo, quando abrir eu só preciso que ele atualize sozinho
","
Eu sugiro para uma aplicação deste tipo uma atualização agendada do próprio Power BI.
Caso você não queira, tente utilizar o pyautogui com posicionamento de cursor para fazer a atualização ou por Screenshot. Lembrando que o posicionamento de cursor é variável de acordo com a janela ou configuração do monitor.
Link Power BI atualização
","
            0
        ",,,"['\npython', 'pandas', 'selenium', 'pyautogui\n']"
518497,Como escrever data e hora atual no selenium,"
Gostaria de saber como faço para incluir a data atual em formato PT/BR como no exemplo: 21/07/2021
e uma data especifica como por exemplo: 01/01/2020
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from datetime import datetime

navegador.find_element_by_xpath('//*[@id=""ctl00_Periodo_drpPeriodo""]').click()
navegador.find_element_by_xpath('//*[@id=""APeriodoDigitar""]').click()
navegador.find_element_by_xpath('//*[@id=""ctl00_Periodo_txtPeriodoDataInicial""]').(quero digitar aqui a data!)

",,,,,"['\npython', 'selenium\n']"
518488,Dúvida em lógica de exercício de Python (Iniciante) [duplicada],"






Essa pergunta já tem uma resposta aqui:
                        
                    



duvida de Lógica em Python

                                (1 resposta)
                            

Fechada há 9 meses.



Olá, comecei recentemente meu estudo em Lógica de Programação em Python. Tenho uma pequena base em C. Me deparei com um exercício na internet no qual diz o seguinte:
""Faça um Programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1 litro para cada 6 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R$ 80,00 ou em galões de 3,6 litros, que custam R$ 25,00.
Informe ao usuário as quantidades de tinta a serem compradas e os respectivos preços em 3 situações:

comprar apenas latas de 18 litros;
comprar apenas galões de 3,6 litros;
misturar latas e galões, de forma que o desperdício de tinta seja menor. Acrescente 10% de folga e sempre arredonde os valores para cima, isto é, considere latas cheias.""

O problema é que eu cheguei no terceiro cenário e não consegui desenvolver o pensamento correto de como deveria fazer para calcular a forma de maior custo x benefício. Alguém poderia dar uma dica e informar se a lógica que eu tô seguindo está correta ?
Código:
metros = float(input(""Informe os m²: ""))
litros = metros/6
if(metros%108 > 0 and metros%21.6>0): 
latas = metros//108
latas = latas + 1
preçol = latas * 80
galao = metros//21.6
galao = galao + 1
preçog = galao * 25
print(""Você vai precisar de: {} latas de 18L e vai gastar {} reais"".format(latas,preçol))
else:
latas = metros/108
preçol = latas * 80
galao = metros/21.6
preçog = galao * 25
print(""Você vai precisar apenas de {} latas de 18L e vai gastar {} reais"".format(latas,preçol))
print(""Você vai precisar apenas de {} galao de 3,6L e vai gastar {} reais"".format(galao,preçog))

","
Eu bati cabeça pra resolver esse problema tbm. Mas eu consegui resolver
De inicio, fiz a funcao do calculo, onde eu declaro algumas variaveis base como o preco e o tamanho das latas/galoes.
Apos isso, declarei outra variavel pra receber o valor do litro total passado pelo user, divido pelo tamanho das latas/galoes para ter o valor de maximo de latas serao necessarias e com uma condicionante adicionada, se caso o valor der diferente de 0 ( ou seja, a quantia de latas e menor do que o que e preciso), onde esse resultado do restante da divisao (%) e feito com os galoes de 3,6L.
segue abaixo o codigo:
def calculo_loja_tintas(litro):
    # LATAS
    latas = litro / 18
    if latas % 18 != 0:
        latas += 1
    preco_das_latas= latas * 80

    # GALOES
    galoes = litro / 3.6
    if galoes % 3.6 != 0:
        galoes += 1
    preco_dos_galoes = galoes * 25

    mistura_lata = int(litro / 18.0)
    mistura_galao = int((litro - (mistura_lata * 18)) / 3.6)
    if litro - (mistura_lata * 18) % 3.6 != 0:
        mistura_galao += 1
    galoes_total = (mistura_lata * 80) + (mistura_galao * 25)


    print(f'''
        Total de Litros necessário para pintar: {litro:.0f}L
        Apenas latas de 18 litros: {latas:.0f} Und. - Preço: R$ {preco_das_latas:.2f}
        Apenas galões de 3.6 litros: {galoes:.0f} Und. - Preço: R$ {preco_dos_galoes:.2f}
        Mistura: {mistura_lata:.0f} Latas e {mistura_galao:.0f} Galões = 
        R$ {galoes_total:.2f}''')

area_pintura = float(input('Tamanho em metros quadrados da área a ser pintada: '))
litros = area_pintura / 6  * 1.1
calculo_loja_tintas(litros)

Gosto de declarar variaveis completos, para melhor leitura.
Nao sou muito bom em explicar muitas coisas, mas se caso tiver alguma duvida ainda sobre, comenta ai que eu tento te ajudar dnv.
Obrigado e bons estudos.
@edit:
Existeuma pergunta com o mesmo problema, caso tu quiser outra forma de resolver o exercicio:
Clique Aqui para ser direcionado para o post
","
            0
        ",,,"['\npython', 'python-3.x', 'lógica\n']"
518476,Contar quantas vezes um determinado valor aparece em uma lista,"
Preciso escrever um código que crie uma lista com números que são inseridos pelo usuário (a quantidade de números é definida pelo próprio) e imprimir qual valor dessa lista é o maior e quantas vezes ele aparece. Parece que consegui a primeira parte mas estou tendo dificuldade em contar quantas vezes o maior valor aparece para também imprimi-lo.
lista = (input('Digite números inteiros:').split())
max_value = None

for num in lista:
    if (max_value is None or num > max_value):
        max_value = num

print(f'Os números digitados foram {lista} e seu maior valor é {max_value}.')

","
Experimente dessa forma, o processo está comentado:
# Recupera a entrada do usuário
numeros_str = input('Digite números inteiros:')

# Cria uma lista de strings
lista_str = numeros_str.split()

# Converte em uma lista de inteiros
lista = list(map(int, lista_str))

# Identifica o valor máximo da lista
max_value = max(lista)

# Conta as ocorrências desse valor na lista
count_max_value = lista.count(max_value)

print(f'Os números digitados foram {lista} e seu maior valor é {max_value}, que se repete {count_max_value} vezes.')

","
            1
        ","
No teu caso o input retorna um tipo literal, sua lista contera literais ['12','32'] precisa converter
para [12,32] sem aspas simples.
Foi Transposta a lista e convertida  em numero inteiro naturais

Essa situação utilizei o sort para ordernar a lista do menor ao maior
primeira posição é o menor ultima bem óbvio é o maior
e uma funcao que conta as repetições count()


em python um texto é um lista:
exemplo 


texto =""Ola Mundo""
for txt in texto:
   print(txt)


resultado  
O
l
a
 
M
u
n
d
o

pode acessar por posição

o input tem a entrada do tipo string, os numeros são todos leterais
converti para inteiro e ordenei e apenas peguei a posição 0 e a ultima [-1]
talvez seja isso o que procura?
lista = input('Digite números inteiros:').split() #literal


lista = [int(i) for i in lista]#transposta, numeros  naturais


lista.sort() #ordena do menor ao maior
   
minimo= lista[0]  #  primeira posicao ou min(lista)
maximo= lista[-1]  # ultima posicao max(lista)  

minimo_rep = lista.count(minimo) # do minino quantas vezes repetiu      
maximo_rep = lista.count(maximo) # fo maximo quantas vezes repetiu
   
   

print(f'Os números digitados foram {lista}')
print(f'e seu maior valor é {maximo} repetiu {maximo_rep}')
print(f'e o menor é {minimo} repetiu {minimo_rep}')

","
            0
        ","['\npython', 'python-3.x\n']"
518473,"IF no pandas retornando The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()","
Estou com uma DS com duas colunas, uma com mês de 1 a 12, e outra com ano de 2015 a 2021, e estou tentando criar uma coluna chamada Fiscal Year.
Estou criando uma função para que quando o mês estiver entre 4 e 12 dentro do ano 2017 retornar FY17/18.
def fiscal_year(x,y):
    if ((x >= 4.0) & (x <= 12.0)) & (y == 2017.0):
        return 'FY 17/18'
    else:
        return 'nada'

E quando vou aplicar:
instal_final_csa['Fiscal Year'] = instal_final_csa.apply(fiscal_year(instal_final_csa['MÊS'],instal_final_csa['ANO']))

Retorna o erro:

ValueError: The truth value of a Series is ambiguous. Use a.empty,
a.bool(), a.item(), a.any() or a.all().

","
Consegui fazer por np.select
instal_final_csa2 =instal_final_csa
conditions = [((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2016),
              ((instal_final_csa2['MÊS'] >= 1 )&(instal_final_csa2['MÊS'] <= 3))&(instal_final_csa2['ANO'] == 2017),
              ((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2017),
              ((instal_final_csa2['MÊS'] >= 1 )&(instal_final_csa2['MÊS'] <= 3))&(instal_final_csa2['ANO'] == 2018),
              ((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2018),
              ((instal_final_csa2['MÊS'] >= 1 )&(instal_final_csa2['MÊS'] <= 3))&(instal_final_csa2['ANO'] == 2019),
              ((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2019),
              ((instal_final_csa2['MÊS'] >= 1 )&(instal_final_csa2['MÊS'] <= 3))&(instal_final_csa2['ANO'] == 2020),
              ((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2020),
              ((instal_final_csa2['MÊS'] >= 1 )&(instal_final_csa2['MÊS'] <= 3))&(instal_final_csa2['ANO'] == 2021),
              ((instal_final_csa2['MÊS'] >= 4 )&(instal_final_csa2['MÊS'] <= 12))&(instal_final_csa2['ANO'] == 2021),]
choices = ['FY16/17','FY16/17','FY17/18','FY17/18','FY18/19','FY18/19','FY19/20','FY19/20','FY20/21','FY20/21','FY21/22']
instal_final_csa['Fiscal Year'] = np.select(conditions,choices,default = 'nada')

","
            0
        ",,,"['\npython', 'python-3.x', 'pandas', 'numpy\n']"
518368,"TypeError: can only concatenate str (not ""_io.TextIOWrapper"") to str","
Olá, Eu estou a tentar fazer um Assisstente Virtual, mas está me a dar um erro que eu não percebo o que esta acontecendo
name = open(""user_data.txt"")
user = name.read()

def main():
    main_question = input(""O que deseja, "" + name + ""?"")

E dá o seguinte erro:
    main_question = input(""O que deseja, "" + name + ""?"")
TypeError: can only concatenate str (not ""_io.TextIOWrapper"") to str

","
Esse erro está ocorrendo pois você está passando a variável name que abre o arquivo para leitura. Você deveria usar a variável user pois você já fez a chamada do método .read() nela que retorna o conteúdo do arquivo.
   main_question = input(""O que deseja, "" + user + ""?"")

","
            1
        ",,,['\npython\n']
518344,Como fazer o programa rodar a partir de qualquer ponto da programação,"
Tenho um programa usando pyautogui que preenche 20 formularios web de forma sequencial, mudando pagina por pagina automaticamente e coloquei um temporizador pra cada pagina de 5 segundos. Geralmente as paginas carregam em 2 segundos o que me da uma folga, porém as vezes ele demora 20 segundos e o programa continua operando encavalando as funçoes.
Gostaria de ter uma linha que deixasse eu começar de qq uma das 20 páginas.
import pyautogui
#Pagina 1#
pyautogui.press('tab') # na pagina 1 ele seleciona a caixa de mensagem
pyautogui.write('pagina 1') # escreve ""pagina 1"" na caixa de mensagem
pyautogui.press('tab', presses=2) # pula até o botao ""proxima pagina""
pyautogui.press('enter') # seleciona o botao
pyautogui.sleep(5) # espera 5 segundos ate continuar o proximo comando
#Pagina 2#
pyautogui.press('tab')
pyautogui.write('pagina 2')
pyautogui.press('tab', presses=2)
pyautogui.press('enter')
pyautogui.sleep(5)
#Pagina 3#
pyautogui.press('tab')
pyautogui.write('pagina 3')
pyautogui.press('tab', presses=2)
pyautogui.press('enter')
pyautogui.sleep(5)

Se as paginas fluirem com 2 segundos cada o programa finaliza as 20 paginas normalmente. Se uma delas demora pra carregar, o programa continua sem esperar. Preciso algo q eu possa parar o programa e mandar recomeçar da pagina X q encavalou... Ou algo que aguarde a pagina carregar e só assim continue, mas nao quero a opção de deixar todos em 20 segundos de espera por pagina. Obrigado a todos!
","
Então acredito que para automatizar funções no seu navegador a biblioteca recomendada seria Selenium, onde você consegue buscar informações através das classes do HTML da pagina. fica aqui a documentação do Seleniun para você entender melhor a aplicação e sua funcionalidades.
Porem se você quiser continuar usando o pyautogui recomendo você usar a função da biblioteca pyautogui.locateOnScreen(caminho para foto), o retorno dessa função é as coordenadas de onde foi encontrado o print na tela que você estava no momento, assim você gera um laço de repetição ate o momento em que ela localiza na tela e faz o comando assim não importando o tempo que demorar a resposta.
fica aqui um exemplo de uso
import pyautogui
a = None

while a is None:
      a = pyautogui.locateOnScreen(r'local do arquivo do print.png')

print(a)

mas ainda assim a biblioteca selenium é a melhor para esse tipo de automação, pois foi feita pensado nisso vou deixar um exemplo que existe na documentação da biblioteca
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Firefox()
driver.get(""http://www.python.org"")
assert ""Python"" in driver.title
elem = driver.find_element_by_name(""q"")
elem.clear()
elem.send_keys(""pycon"")
elem.send_keys(Keys.RETURN)
assert ""No results found."" not in driver.page_source
driver.close()

","
            2
        ",,,"['\npython', 'pyautogui\n']"
518323,Qual a melhor forma de selecionar um texto e como armazená-lo em uma variavel?,"
Preciso copiar um texto e estou utilizando o pyautogui. Gostaria de saber qual a melhor forma de selecionar o texto e como armazenar essa informação em uma variável?
A solução que encontrei, até o momento, para o primeiro problema, foi apertar o shift e clicar no ponto final do texto. Para o segundo, ainda estou aprendendo.
Segue o código.
import pyautogui

pyautogui.leftClick(1218,1051)
pyautogui.keyDown('shift')
pyautogui.leftClick(82,68)
pyautogui.keyUp('shift')

","
Bom como você já consegue copiar o texto, da para usar a biblioteca clipboard  junto com o  PyAutoGui para executar a função.
Pode ser usado assim:
import clipboard
import pyautogui

pyautogui.doubleClick(x, y) # ou na sua solução pressionar shift e clicar
pyautogui.hotkey('ctrl', 'c')
texto = clipboard.paste()
clipboard.copy("""") # caso queira deixar vazia após settar a variavel.
print(text)

","
            0
        ","
Se esse texto estiver em uma espécie de textbox, onde o cursor fica parecendo o número 1 romano, você pode clicar nessa área e usar o CTRL+A (selecionar tudo), depois copiar com o CTRL+C.
","
            0
        ","['\npython', 'pyautogui\n']"
518302,AttributeError: 'function' object has no attribute 'values',"
Olá
Eu estou a criar um programa para criar projetos só que ao iniciar o programa a ver se iniciava a janela, onde pergunta a path e o nome do projeto deparei-me com este erro
Traceback (most recent call last):
File ""F:\Projects\Project creator\main.py"", line 24, in 
main(main.values)
AttributeError: 'function' object has no attribute 'values'
Eu não sei o que fazer!
Aqui está o meu codigo do ficheiro main.py
import PySimpleGUI as sg
import criar_pasta

def main(values):
    layout = [
        [sg.Text(""Insira o nome do projeto"")], [sg.Input(key=""nome_do_projeto"")],
        [sg.Text(""Insira a path do projeto"")], [sg.Input(key=""path"")],
        [sg.Button(""Criar ficheiro de programação"")], [sg.Button(""Cancelar"")]
    ]
    window = sg.Window(""Project creator"", layout=layout)
    while True:
        event, values = window.read()
        if event == sg.WIN_CLOSED:
            break
        if event == ""Cancelar"":
            break
        if event == ""Criar ficheiro de programação"":
            criar_pasta.criar_pasta()

    window.close()

if __name__ == '__main__':
    main(values)```

","
A variável values não é inicializada antes da chamada a main(...) na linha 23.
Esse é exatamente o código que vc está executando? A mensagem de erro acusa a linha 24, mas esse código vai até a linha 23 (se contei corretamente).
O erro é compatível com tentar escrever main.values, tentando acessar um atributo em uma função.
","
            0
        ",,,['\npython\n']
518236,Python: Função 'upper' e 'lower' não funcionam [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Se strings em Python são imutáveis, como conseguimos alterá-la com o método replace()?

                                (2 respostas)
                            

Fechada há 9 meses.



Estou realizando experimentos em Python e dessa vez meus alvos foram as funções que tratam Strings.
Em meus testes, estou tentando fazer um conversor de textos, porém, as funções não estão realizando suas funcionalidades no meu Visual Studio Code. O estranho é que no IDLE as conversões ocorrem normalmente, o problema ocorre apenas no VSCode.
Alguém sabe o que pode estar acontecendo?
Segue print.

","
Você precisa atribuir a uma variável.
Seu código pode ficar assim:
name = 'Romulo'
name = name.upper()
print(name)

SAÍDA: ROMULO
","
            0
        ","
Acredito que você precise declarar uma nova variável passando o name.upper() nesta nova e depois imprimir ou então colocar a função upper() diretamente dentro do print para funcionar. O que esta acontecendo é que você esta usando o upper() e depois na linha de baixo onde imprime este não está mais sendo utilizado.
","
            0
        ","['\npython', 'funções', 'visual-studio-code\n']"
518219,Como aumentar a fonte do título de um gráfico seaborn.displot?,"
Olá! Eu tenho o seguinte código:
f = sns.displot(df,x=""yearOfRegistration"", kde=True, binwidth=5) 
f.set(title = ""Distribuição de Veículos com base no Ano de Registro"")
f.set_axis_labels(""Ano de Registro"",""Densidade (KDE)"")

plt.show()

O resultado obtido é esse:

Já tentei vários comandos diferentes que encontro na documentação do seaborn para aumentar a fonte do título, como fontsize ou font_scale, porém sem sucesso.
Alguém pode me ajudar? Desde já agradeço!
EDITED:
Consegui por meio do comando plt.title:
f = sns.displot(df,x=""yearOfRegistration"", kde=True, binwidth=5) 
plt.title(""Distribuição de Veículos com base no Ano de Registro"", fontdict = {'fontsize': 14})
f.set_axis_labels(""Ano de Registro"",""Densidade (KDE)"")
plt.show()

o seaborn.displot aparentemente não possui argumento pra aumentar o título.
","
f = sns.displot(df,x=""yearOfRegistration"", kde=True, binwidth=5) 
f.set_title(""Distribuição de Veículos com base no Ano de Registro"" , fontsize = 20)
f.set_axis_labels(""Ano de Registro"",""Densidade (KDE)"")

plt.show()

Você chegou colocar um fontsize no método set?, Ele apresenta algum erro ou simplesmente não funciona??
Teste com esse meu código que modifiquei, por gentileza. Acho que o erro esta na so seu set na segunda linha
","
            0
        ","
Encontrei a respota! Segue o código abaixo:
f = sns.displot(df,x=""yearOfRegistration"", kde=True, binwidth=5)
plt.title(""Distribuição de Veículos com base no Ano de Registro"", fontdict = {'fontsize': 14})
f.set_axis_labels(""Ano de Registro"",""Densidade (KDE)"")

plt.show()

A dificuldade estava em utilizar o seaborn.displot. Com o pyplot.title resolve.
Agradeço a todos que responderam!
","
            0
        ","['\npython', 'ipython-notebook', 'histograma', 'seaborn\n']"
518218,Como verificar se tem número na senha em Python?,"
Preciso de ajuda quanto a uma questão sobre strings em Python. O enunciado diz o seguinte:
Escreva um programa para ler uma senha e verificar se a mesma contém as exigências de segurança: Pelo menos um caractere maiúsculo e um minúsculo, além de conter números e letras, bem como contenha no mínimo 6 e no máximo 10 caracteres.
No código que eu fiz, tava tudo certo, até o momento que tinha que verificar se tinha números na senha. O código é esse:
while True:
  senha = input('Digite sua senha: ')
  list(senha)
  if len(senha) < 6:
    print('Deve conter no mínimo 6 caracteres.')
  elif len(senha) > 10:
    print('Deve conter no máximo 10 caracteres.')
  else:
    if any(x.isupper() for x in senha):
      print('Deve conter pelo menos uma letra minúscula.')
    elif any(x.islower() for x in senha):
      print('Deve conter pelo menos uma letra maiúscula.')
    elif any(x.isdigit() == False for x in senha):
      print('Deve conter pelo menos um número.')
    else:
      break
    
print('Senha válida.')

No output tentei várias situações possíveis, pra testar todas as exigências de segurança, mas aí deu problema na última exigência que está no código. O resultado no output deu isso:
Digite sua senha: ash
Deve conter no mínimo 6 caracteres.
Digite sua senha: Charlie12345
Deve conter no máximo 10 caracteres.
Digite sua senha: r4gn4rok
Deve conter pelo menos uma letra maiúscula.
Digite sua senha: H41LM4RY
Deve conter pelo menos uma letra minúscula.
Digite sua senha: Brazuka
Deve conter pelo menos uma letra minúscula.

OBS.: Na última linha deveria ter dado um aviso de que a senha deve conter pelo menos um número, mas ao invés disso, aparece essa mensagem.
Como eu faço pra resolver isso? Poderiam me ajudar nesse código?
","
Existem várias formas de poder fazer essas checagens de forma mais elegante, segura e performática, porém vou focar simplesmente em explicar o por que o seu código não funcionou pra chegar se existe números na senha.
O motivo principal é que a forma que você está usando a função any() está invertida. Ela está invertida para todas as condições, e por isso está parando o seu código na primeira condição ""verificar se tem pelo menos uma letra maiúscula"".
if any(x.isupper() for x in senha):
    print('Deve conter pelo menos uma letra minúscula.')

Primeiramente, como o any() funciona:

se qualquer item da lista for verdadeiro, o any retorna True
se TODOS os itens da lista forem falsos, o any retorna False

Então, basicamente, o seu elif pode ser lido da seguinte como ""se qualquer item da minha lista for uma letra maiúscula, retorna a mensagem de que deve conter pelo menos um uma letra minúscula"". Enquanto o que você quer é algo como ""se NENHUM item da minha lista for uma letra maiúscula, retorna a mensagem de que deve conter uma letra maiúscula"".
A forma de corrigir isso no código atual é negando a condição e invertendo a mensagem.
if not any(x.isupper() for x in senha):
  print('Deve conter pelo menos uma letra maiúscula.')

Isso tem que ser feito pra todas as condições usando o any().
","
            0
        ",,,['\npython\n']
518210,Como criar gráfico de barras com 2 eixos y diferentes e o mesmo eixo x?,"
Estou tentando traçar um gráfico de barras com 2 eixos y diferentes e o mesmo eixo x.
O mais próximo que cheguei do sucesso com o seguinte código:
fig = plt.figure() # Create matplotlib figure

ax = fig.add_subplot(111) # Create matplotlib axes
ax2 = ax.twinx() # Create another axes that shares the same x-axis as ax.

width = 0.4

final_df['GDP Value'].plot(kind='bar', color='red', ax=ax, width=width, position=1)
final_df['Homicides per 100 people'].plot(kind='bar', color='blue', ax=ax2, width=width, position=0)

ax.set_ylabel('GDP Value')
ax2.set_ylabel('Homicides per 100 people')

plt.show()

Mas como vocês podem ver na imagem abaixo o eixo x é o índice do meu DF, mas gostaria que fosse uma coluna específica, chamada 'Nome do País'. Tentei especificá-lo assim:
final_df['GDP Value'].plot(x=final_df['Country Name'],kind='bar', color='red', ax=ax, width=width, position=1)

Mas não funcionou.

Aqui está a estrutura do meu DF:

Agradeço antecipadamente, vocês são os melhores.
","
De uma forma geral, é mais fácil utilizar os objetos Axes do módulo matplotlib.pyplot diretamente do que tentar plotar com df.plot (que nada mais é um ""atalho"" que o pandas oferece para tentar plotar as coisas por você). Nesse caso, o que você quer é o método Axes.bar (que também é acessível via plt.bar, caso você já tenha visto essa função por aí).
Você acertou em usar plt.Axes.twinx para criar um segundo eixo Y. Faltou apenas usar cada objeto Axes para plotar o dado em cada respectivo eixo. Exemplo com uma pequena porção dos seus dados:
import matplotlib.pyplot as plt
import pandas as pd

# Conjunto de dados para teste
df = pd.DataFrame({
    'Country Name': ['United States', 'China', 'Japan'],
    'GDP Value': [1.75e+13, 1.05e+13, 4.85e+12],
    'Homicides per 100 people': [4.44, 0.72, 0.31],
})
width = 0.4

# Cria figura com eixo Y na esquerda (padrão), e plota dados nele
figure, left_ax = plt.subplots()
left_ax.bar(df['Country Name'], df['GDP Value'], color='red', width=-width, align='edge')
left_ax.set_ylabel('GDP Value')

# Cria eixo Y na direita e plota dados nele
right_ax = left_ax.twinx()
right_ax.bar(df['Country Name'], df['Homicides per 100 people'], color='blue', width=width, align='edge')
right_ax.set_ylabel('Homicides per 100 people')

# Mostra o gráfico
plt.show()

Gráfico gerado:

","
            0
        ",,,"['\npython', 'data', 'dataframe', 'matplotlib', 'plot\n']"
518198,"Jogo não reconhece Input de teclado pelo ""pynput""","
Estou criando um bot para pressionar a tecla: ""A"" dentro de um jogo.
Código que estou utilizando:
from pynput.keyboard import Controller;
from time import sleep;

keyboard = Controller();

sleep(2)

keyboard.press(""a"");
keyboard.release(""a"");


No bloco de notas o script funciona bem, pressiona a tecla sem problemas.
Porém, dentro do jogo não funciona. Ele não simula a tecla desejada.
Dei uma pesquisada e aparentemente tem a ver com o foco do sistema. Como resolvo?
","
Isso são mecanismos de segurança dos jogos, a maioria consegue diferenciar inputs reais de inputs de scripts.
O vídeo a seguir tem uma explicação do por quê input pelo ""pyautogui"" não funcionaou no jogo dele, mas o mesmo conceito se aplica ao ""keyboard"". O vídeo está em inglês (Vídeo ""PyAutoGUI not working? Use DirectInput"")
No caso ele sugeriu a utilização do PyDirectInput para fazer os inputs de mouse e teclado de uma maneira que os games interpretem como um input nativo. Mas mesmo assim, esteja ciente que as desenvolvedoras de jogos estão sempre buscando formas de não reconhecer entradas de script, e cuidado para não ferir as regras do jogo em sí.
","
            1
        ",,,"['\npython', 'teclado', 'automatização', 'pynput\n']"
518196,KeyError: None Flask,"
Olá, gostaria da ajuda de vocês, pois estou tentando entender o porquê não executa!?
config.py
import os
import random, string


class Config(object):
  CSRF_ENABLED = True
  SECRET = '87725E7FC56B98E656AB7A4AEF9D01CAAA625FCF2F7133A48AD42F500E939884'
  TEMPLATE_FOLDER = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'templates')
  ROOT_DIR = os.path.dirname(os.path.abspath(__file__))
  APP = None


class DevelopmentConfig(Config):
  TESTING = False
  DEBUG = True
  IP_HOST = 'localhost'
  PORT_HOST = 8000
  URL_MAIN = 'http://%s:%s/' % (IP_HOST, PORT_HOST)


class TestingConfig(Config):
  TESTING = True
  DEBUG = True
  IP_HOST = 'localhost'  # Aqui geralmente é um IP de um servidor na nuvem e não o endereço da máquina local
  PORT_HOST = 5000
  URL_MAIN = 'http://%s:%s/' % (IP_HOST, PORT_HOST)


class ProductionConfig(Config):
  DEBUG = False
  TESTING = False
  IP_HOST = 'localhost'  # Aqui geralmente é um IP de um servidor na nuvem e não o endereço da máquina local
  PORT_HOST = 8080
  URL_MAIN = 'http://%s:%s/' % (IP_HOST, PORT_HOST)


app_config = {
  'development': DevelopmentConfig(),
  'testing': TestingConfig(),
  'production': ProductionConfig()
}

app_active = os.getenv('FLASK_ENV')

app.py
# -*- coding: utf-8 -*-
from flask import Flask

# config import
from config import app_config, app_active

config = app_config[app_active]


def create_app(config_name):
  app = Flask(__name__, template_folder='templates')

  app.secret_key = config.SECRET
  app.config.from_object(app_config[config_name])
  app.config.from_pyfile('config.py')

  @app.route('/')
  def index():
    return 'Meu primeiro run'

  return app


run.py
from importlib import reload

from app import create_app
from config import app_config, app_active

config = app_config[app_active]

config.APP = create_app(app_active)

if __name__ == '__main__':
  config.APP.run(host=config.IP_HOST, port=config.PORT_HOST)



Quando executo com python run.py
é retornado o seguinte erro.
Traceback (most recent call last):
  File ""D:/Programação/Projetos/GitHub/python/flask_livro/run.py"", line 4, in <module>
    from app import create_app
  File ""D:\Programação\Projetos\GitHub\python\flask_livro\app.py"", line 7, in <module>
    config = app_config[app_active]
KeyError: None


Poderiam por gentileza ajudar-me a resolver?
",,,,,"['\npython', 'mvc', 'flask\n']"
518191,Como usar um comando python no Windows?,"
Fiz um código Python que pega uma planilha excel com dados do Brasil todo e cria vários arquivos separados por estados.
Ex: planilha mãe contém dados de SP, RJ, BH, RS e etc...
O python pega essa planilha mãe e separa todos os estados, criando um arquivo separado para cada estado com sua respectiva sigla.
Ex: Planilha RJ, Planilha SP, Planilha BH e etc.
Até aí blz. Só que isso está no colab. Como é algo da empresa, queria fazer isso dentro do PC da empresa e instalei o python e IDLE mas não sei como fazer rodar esse código dentro da IDLE.
No colab a gente importa o pandas entre outras bibliotecas. Alguém pode me ajudar a fazer isso usando o PC da empresa que contém o python e IDLE?
Obs: não coloquei o código porque o código me atende. Meu problema está em colocar isso pra rodar no python e IDLE.
","
Só pra entender..
Vi que você fez no colab gostaria de saber se seu código python seria um notebook, o arquivo é do tipo ipynb?
Caso for um arquivo notebook, será necessário que você tenha um ambiente pra atender isso. Normalmente é usado o Jupyter, você pode baixa-lo de forma independente, configurar ele por vscode ou baixar a ferramenta de ciências de dados Anaconda, onde ira conter a ferramenta.
O Jupyter fara o mesmo papel do colab só que localmente na sua maquina, lembrando que você terá que fazer seu próprio workspace,.
A diferença é que no colaboratory, você esta projetando tudo por um servidor em nuvem da própria Google.
-Nesse ambiente você vai trabalhar igual no colab, importara seus arquivos csv, importara as bibliotecas pandas que foi utilizado no seu projeto e executara conforme sua organização em código.
Segue aqui os links:

Instalação: https://jupyter.org/install
Documentação: https://jupyter.org/documentation
Opcional baixar via Anaconda: https://www.anaconda.com/products/individual
Exemplo do Projeto Jupyter:

Agora se for apenas um codigo python simples. Faça o download do mesmo
Com o python instalado na maquina, ele vem  acompanhado de modo nativo um terminal para execuções.
É bem simples, va no seu arquivo .py.

Clique com Botão direito > Abrir com > Selecionar cmd do Python.


-Após isso abrira um console com executando seu script.

","
            0
        ",,,"['\npython', 'excel', 'windows\n']"
518160,Versão recente do django com SQL Server,"
Olá, estou há começar com um projeto onde irei utilizar o framework Django, e devido a natureza do projeto, gostaria de utilizar o SQL Server (pois estou mais familiarizado), porem, tudo que encontro sobre o assunto, diz respeito a versões antigas do Django, neste link https://django-mssql.readthedocs.io/en/latest/quickstart.html está explicito que são necessarias versões antigas do Django, porem, ao procurar pelo site da microsoft, encontrei esse link https://docs.microsoft.com/en-us/samples/azure-samples/mssql-django-samples/mssql-django-samples/ onde o mesmo mostra como usar o Django com o mssql-django, e ao final da página, encontrei uma referencia da versão do django, e o mesmo está na versão 3.1.8 que não é uma versão muito anterior, e por se tratar de uma publicação do dia  29/04/2021 feita pela microsoft, eu fico na duvida.
Consigo utilizar a versão 3.1.8 do django com o mssql-django? pois gostaria de utilizar uma versão recente com o SQL Server.
","
No meu caso, para eu conseguir usar o SQL Server utilizei o Django na versão 3.0 e a biblioteca django-mssql-backend.
No seu caso, caso opte em utilizar a biblioteca django-mssql, de acordo com a documentação, a versão do Django deve ser a 1.8 e a versão do SQL Server deve ser 2012.
","
            0
        ","
Esqueci de atualizar aqui, eu fiz alguns testes e estou conseguindo utilizar o django na versão 3.2.5 com o mssql-django na versão 1.0rc1 (informada pelo arquivo requirements.txt), até o dado momento não vi nada de incomum ou nenhum bug, está funcionando normalmente.
Espero não encontrar erros futuros por estar usando versões tão recentes.
","
            0
        ","['\npython', 'sql-server', 'django\n']"
518126,Forçar o usuário a responder uma alternativa válida em um sistema de perguntas de multipla escolha em Python,"
O código abaixo funciona bem, porém gostaria que ele fizesse a pergunta especificada novamente caso o usuário não digitar uma das três alternativas disponíveis.
perguntas = {
    'Pergunta 1': {
        'pergunta': 'Quanto é 2+2? ',
        'respostas': {'a': '1', 'b': '4', 'c': '5',},
        'resposta_certa': 'b'
    },
    'Pergunta 2': {
        'pergunta': 'Quanto é 5*3? ',
        'respostas': {'a': '10', 'b': '40', 'c': '15',},
        'resposta_certa': 'c'
    },
}

respostas_certas = 0

for pk, pv in perguntas.items():
    print(f'{pk}: {pv[""pergunta""]}')

    print('Respostas: ')
    for rk, rv in pv['respostas'].items():
        print(f'[{rk}]: {rv}')
    
    resposta_usuario = input('Sua resposta: ')

    if resposta_usuario == pv['resposta_certa']:
        print('Certa a Resposta!')
        respostas_certas +=1
    else:
        print('Resposta errada!')

    print()

qtd_perguntas = len(perguntas)
porcentagem_acerto = respostas_certas / qtd_perguntas * 100  

print(f'Você acertou {respostas_certas} respostas')
print(f'Sua porcentagem de acerto foi de {porcentagem_acerto}%')

","
Use um pequeno laço while que continuamente pede pelo input do usuário até que ele digite uma das alternativas possíveis:
resposta_usuario = input('Sua resposta: ')
while resposta_usuario not in ('a', 'b', 'c'):
    resposta_usuario = input(""Resposta inválida, digite apenas a, b ou c:"")

","
            2
        ",,,"['\npython', 'loop', 'operadores', 'dicionário', 'iterator\n']"
518106,Como saber se em uma lista possui vários valores iguais? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Identificar elementos repetidos em lista com Python

                                (2 respostas)
                            

Fechada há 9 meses.



Eu estou querendo fazer uma função que retorne os elementos iguais de uma lista.
cartas_jogador_a = ['4', '7', '10', '8', '1', '10']

Eu queria obter somente  os valores '10', '10' em uma outra lista, já tentei usar o laço while e for mas não obtive resultado.
","
Você pode usar um for para comparar todos os elementos da lista com o valor que você procura.
cartas_jogador = [1,2,8,4,5,6,7,8]
for carta in cartas_jogador:
    valor_objetivo = 8
    if carta == valor_objetivo:
       outra_lista.append(carta)

","
            -2
        ",,,['\npython\n']
518103,Como adicionar imagens em um programa gerado pelo PyInstaller?,"
Estou criando um executável utilizando a linguagem de programação Python e sua biblioteca pyinstaller. Para criar a interface, estou usando a biblioteca TKinter.
Na interface do executável eu coloquei uma imagem utilizando um código similar a este: Como faço para adicionar uma imagem a um programa python utilizando tkinter .
No entanto, esse código exige que o usuário tenha a imagem no seu PC. Como eu faço para que não seja preciso que o usuário tenha a imagem no seu PC? Ou seja, quero mandar para ele apenas o executável e a imagem ainda continuar sendo exibida. Seria possível?
","
Tem 2 passos a seguir, primeiro adicionar o arquivo ao ""empacotado"", você pode fazer isso de duas maneiras:
Usando os parametros --add-data e --add-binary
O --add-data deve ser usado para arquivos não binários, como arquivos de texto simples, exemplo:
pyinstaller --add-data=origem:destino foobar.py

Use o pkg_resources.resource_filename
pyinstaller --add-data=origem;destino foobar.py

Em Windows usasse o ; em Linux e MacOS use o :, exemplo:
 pyinstaller --add-data=""/home/example/foo.txt:."" --add-data=""/home/example/bar.txt:."" example.py

Para separar a origem do destino. O --add-data pode ser usado múltiplas vezes, exemplo para adicionar dois arquivos em Windows:
 pyinstaller --add-data=""C:\Users\new_g\Desktop\xyz\foo.txt;."" --add-data=""C:\Users\new_g\Desktop\xyz\bar.txt;."" example.py

Note que depois do ; usei o ., o ponto se refere ao caminho inicial do ""dentro"" do programa, se quiser adicionar o arquivo a uma subpasta, por exemplo chamando-a de assets você pode fazer algo como:
 pyinstaller --add-data=""C:\Users\new_g\Desktop\xyz\foo.txt;assets"" --add-data=""C:\Users\new_g\Desktop\xyz\bar.txt;assets"" example.py

Para adicionar arquivos binários use --add-binary, todo processo é igual ao anterior, só muda que deve usar para arquivos como imagens, vídeos, compactados (gz, zip, rar, 7z, etc), exemplo:
 pyinstaller --add-binary=""C:\Users\new_g\Desktop\xyz\foo.jpg;assets"" --add-binary=""C:\Users\new_g\Desktop\xyz\bar.png;assets"" example.py


Nota: Se deseja adicionar tudo dentro de um único .exe use o
parametro --onefile, exemplo:
pyinstaller --onefile --add-binary=""C:\Users\new_g\Desktop\xyz\foo.jpg;assets"" --add-binary=""C:\Users\new_g\Desktop\xyz\bar.png;assets"" example.py


Lendo o arquivo
Agora é a segunda etapa, isso é independente de estar usando Kivy, TKinter, ou simplesmente um script Python sem GUI (interface gráfica), para ler o arquivo deve-se usar a lib pkg_resources.resource_filename, em instalações Windows geralmente já vem instalado, mas se não tiver o pkg_resources execute o comando:
pip install setuptools

Após instalar no seu script você vai ler o arquivo assim (independente de executar python exemple.py ou executar de executar o .exe gerado, exemplo:
from pkg_resources import resource_filename

resource_1 = resource_filename(__name__, 'foo.txt')
resource_2 = resource_filename(__name__, 'bar.txt')

print('resource_1:', resource_1)
print('resource_2:', resource_2)
print(resource_1)
print(__name__)

with open(resource_1) as file:
    print(file.read())

print('----------')

with open(resource_2) as file:
    print(file.read())

Isso é um exemplo totalmente adaptável a qualquer lib, como Tkinter, pois o pkg_resources.resource_filename() retorna o caminho absoluto do arquivo.
Leitura de uma imagem adicionada com --add-binary no Tkinter
No exemplo a seguir pode ler o arquivo foo.png e exibir em uma label
from pkg_resources import resource_filename
from tkinter import Tk, Label, PhotoImage


root = Tk()

resource_1 = resource_filename(__name__, 'foo.png')

photo = PhotoImage(file=resource_1)

message = Label(root, image=photo)
message.pack()

root.mainloop()

","
            5
        ","
Você pode armazenar sua imagem em uma pasta ""images"", junta do executável/.py. Infelizmente não é possível utilizar uma imagem que não esteja armazenada no dispositivo...
","
            -4
        ","['\npython', 'pyinstaller\n']"
518071,Como usar uma variável do dentro de função em fora de função?,"
Passado até hoje, sempre errei, continuo não entender nada porque não funcionava. Alguém pode explicar?
Vou usar um exemplo de código:
def test(x, y):
    if x == y:
        v1 = False
    else: 
        v1 = True
    return v1
test(3,3)
if v1 == True:
    print(""OK"")

Apareceu assim:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-28-11958f52b994> in <module>
      6     return v1
      7 test(3,3)
----> 8 if v1 == True:
      9     print(""OK"")

NameError: name 'v1' is not defined

Já tentei usar ""return"", mas parece que ""return"" não serve nada.
","
Você precisa estudar melhor sobre escopo de variáveis (este artigo, por exemplo).
Sua variável v1 é criada dentro da função test, ou seja, ela só existe dentro desta função.
Quando você faz return v1 você está retornando o valor contido na variável de nome v1, depois que a função encerra sua execução o nome v1 ""deixa de existir"" (você não pode usá-lo pois escopo onde ele é válido é dentro da função em que ele foi criado).
O que você não entendeu ainda do return é que o valor retornado pode ser usado quando a função é chamada.
No seu caso você poderia pegar o valor retornado na função e salvar numa variável e fazer a comparação que você deseja.
Exemplo:
resultado = test(3, 3)

if resultado:
    print('Números são diferentes.')
else:
    print('Números são iguais.')

Note que você pode escolher o nome que quiser para a variável que guardará o resultado retornado pelo função teste, não precisa ser v1.
Quando você entender melhor como funcionam os escopos de variáveis você também conhecerá os statements global e nonlocal que te ajudam a instruir o interpretador sobre o escopo de suas variáveis.
","
            3
        ","
Eu consegui ajeita o seu codigo assim
Declarei a variavel v1 fora da função, e o return foi direto pra ela
v1 = True

def test(x, y):
    if x == y:
        v1 = False
    else:
        v1 = True
    return v1
v1 = test(3,3)
if v1 == True:
    print(""OK"")
else:
    v1 = False
    print('FALSE')

","
            -1
        ","['\npython', 'python-3.x\n']"
517970,(Python + MySQL) Inserir a senha do banco automaticamente em um dump,"
Estou criando um script em Python que faz um backup da base de dados da empresa em que trabalho e ele irá rodar no crontab semanalmente.
Minha dúvida:
Como inserir a senha automaticamente, já que ela é requisitada depois do comando mysqldump??
Como o código está atualmente:
import subprocess

import os

command = 'mysqldump -u root -p testes_script > testandoo.sql'

os.system(command)
subprocess.Popen('senhatestes')

print('Dump realizado com sucesso')

Retorno ao executar o código:
Enter password:

Tentei executar um subprocess.Popen('senha') porém não tive sucesso, o erro retornado é:
Traceback (most recent call last):
  File ""teste_dump.py"", line 7, in <module>
    subprocess.Popen('senhatestes')
  File ""/usr/lib64/python3.6/subprocess.py"", line 729, in _init_
    restore_signals, start_new_session)
  File ""/usr/lib64/python3.6/subprocess.py"", line 1364, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'senhatestes': 'senhatestes'

Esta é apenas uma versão de testes, preciso fazer este dump rolar antes de escrever efetivamente o código que vou rodar em produção.
","
Se estiver usando linux (Ubuntu), tudo que precisa é criar um um arquivo .my.cnf em sua home.
touch ~/.my.cnf

Preencher o arquivo .my.cnf, com seguinte conteúdo:
[mysqldump]
user = mysqluser
password = senhasuperseguradoseubancodedadosT0p+

Mudar a permissão do arquivo criado (~/.my.cnf) via chmod para 600, isso vai prevenir outros usuário de ver o conteúdo do arquivo.
chmod 600 ~/.my.cnf

Agora ao executar o mysqldump, ao passar o parâmetro -p a senha não será mais solicitada, pois será lida do arquivo.
mysqldump -u mysqluser -p > testandoo.sql

Repare que neste exemplo estou utilizando outro usuário.
Os passos demonstrados aqui podem ser visto neste link.
","
            0
        ",,,"['\nmysql', 'python', 'backup', 'cron', 'dump\n']"
517968,Como faço para colocar um botão de fechar no meu arquivo python?,"
Estou começando em python e estou escrevendo um código, mas quando todas as ações acabam o programa fecha, como faço para colocar um comando onde clique por exemplo em ESC e ele feche? Quero que quando a pessoa não digite Youtube, ela possa escrever novamente, ao envés de fechar.
ver = input()
if ver == 'Youtube' :
        print('Abrindo youtube...')

        import webbrowser

        webbrowser.open('https://www.youtube.com/', new=2)

else:

        print('Desculpe, não entendi')

","
Neste caso em específico, a maneira de tratar o problema de uma forma simples e objetiva, na minha visão, seria determinando uma função para receber o input em questão.
Ficaria mais ou menos assim: A função exibe a mensagem de input para o usuário e recebe o dado. Após passar pela condicional e cair no else, você poderia simplesmente exibir um print informando que a digitação foi inválida e chamar a função novamente.

Em código, ficaria parecido com isso:
    import webbrowser
    
    def insere_URL():
        ver = input(""Digite o aplicativo desejado: "")
    
        if ver == 'Youtube' :
                print('Abrindo youtube...')
                webbrowser.open('https://www.youtube.com/', new=2)
        else:
                print('Desculpe, não entendi. Tente novamente...')
                insere_URL()
    
    insere_URL()

Dicas e observações: Sempre faça seus imports logo no início do programa e atente-se um pouco mais para a indentação do seu código. Tente pular linha apenas quando a próxima instrução não for relacionada à de cima, como por exemplo, não é necessário pular linha após um if ou else já que o que está logo abaixo faz parte daquele bloco. Porém, se dentro do bloco tiverem códigos que façam atividades diferentes, vale uma pulação de linha ^^
Também é interessante exibir um texto dentro do input() para o usuário saber o que deve digitar.
!! IMPORTANTE !!! Nunca se esqueça de chamar a função, pois caso o contrário ela não será executada!

Estou iniciando em Python igualmente a você e pontuo que esta é uma maneira bastante simples e talvez até pouco recomendada de resolver isto, mas sem dúvidas é uma boa forma de iniciar as tratativas de entrada de dados do usuário em seu sistema.
EDIT 1 A função que permite interromper a execução do seu código é:  exit()
","
            0
        ",,,"['\npython', 'python-3.x', 'if', 'for', 'while\n']"
517967,Como dividir números grandes sem o python abreviar ele?,"
Sempre que eu tento fazer cálculos no python com números grandes, ele acaba abreviando o resultado.
Por exemplo:
a = 8682372684397235357614080000
b = 86400
c = a/b

print(c)
1.0049042458793097e+23 \\resultado

Eu gostaria de imprimir o numero inteiro.
","
Para pegar o número por inteiro, você deve usar uma “string” formatada, ou seja, para determinar o modo como ele sera printado na tela:
O tipo ""float"" pode ser formatado destas formas:

:.0f # sem zeros a esquerda
:.2f # com dois zeros

Obs: pode se colocar mais do que 2 apenas.
Neste caso
a = 8682372684397235357614080000
b = 86400

c = a/b # divisão normal

print(f""{c:.0f}"") # :.0f sem zeros a esquerda

Resultado:
100490424587930965114880
","
            0
        ",,,"['\npython', 'python-3.x\n']"
517957,"Python: consolidar linhas duplicadas, somando valores","
Tenho uma planilha em formato excel (.xlsx) com as seguintes colunas: ""matricula"", ""nome"", ""valor"", conforme imagem abaixo.
Eu gostaria de excluir os dados repetidos, somando os valores.
O resultado final deveria ser uma outra planilha em excel com apenas 6 (seis) linhas, igual a segunda imagem abaixo.

Abaixo seria a planilha com o resultado desejado.

import pandas as pd


planilha = pd.read_excel(r""C:\Users\wjrs1\Downloads\nova.xlsx"", engine='openpyxl')

arquivo = pd.ExcelWriter(r""C:\Users\wjrs1\Downloads\teste.xlsx"")

arquivo.to_excel(planilha, 'sheet1',index=False) #tem algo dando errado e não sei o que é

planilha.save()

Poderiam me ajudar? Agradeço antecipadamente.
","
Use o groupby e depois o to_excel conforme abaixo
import pandas as pd

planilha = pd.read_excel(r""C:\Users\wjrs1\Downloads\nova.xlsx"", engine='openpyxl')

novo_df = planilha.groupby(['Matrícula', 'Nome'])['Valor'].sum().reset_index()

novo_df.to_excel(""C:\Users\wjrs1\Downloads\teste.xlsx"", sheet_name=""Sheet 1"", index=False)

","
            2
        ",,,"['\npython', 'pandas\n']"
517929,Quero retirar todo o texto que possui % de um PDF. mas ele não me volta o resultado,"
Estou tentando fazer voltar uma taxa de administração de diversos PDF's, porem esses PDF's não seguem um padrão, então quero trazer todas as porcentagens que contenham nesse PDF, Então o arquivo final teria: NOME DO ARQUIVO; CNPJ; TAXA
import json
from logging import PercentStyle
import os
import threading
import re
from pdfminer.high_level import extract_text

class Worker(threading.Thread):

    def __init__(self, queue, base_dir, logger):
        super(Worker, self).__init__()

        # Inicializa as variáveis locais
        self.my_queue = queue
        self.logger = logger
        self.base_dir = base_dir

        self.ptn_cnpj = re.compile(r'[0-9]{2}\.?[0-9]{3}\.?[0-9]{3}\/?[0-9]{4}\-?[0-9]{2}')

    def run(self):

        while True:
            # Imprime log para o usuário
            # self.logger.info(f""Aguardando arquivo para processamento."")

            # Busca os dados da fila de execução
            try:
                file_to_proccess = self.my_queue.get(timeout=5)
            except:
                file_to_proccess = None

            if file_to_proccess is None:
                continue

            # Transforma o retorno da fila em formato json
            file_to_proccess = json.loads(file_to_proccess)

            # Verifica se foi enviada ordem de parada do programa
            if 'end' in file_to_proccess:
                self.logger.warning(f""Fechamento solicitado."")
                break
            # ---

            # Verifica se os dados são válidos
            if len(file_to_proccess) > 0:
                # Chama a rotina de processamento do e-mail
                self.__proccess_file(file_to_proccess)
            # ---

            # Atualiza a situação da fila para ""concluído""
            self.my_queue.task_done()

    def __proccess_file(self, file_to_proccess):
        # Verifica se existe a propriedade ""name"" no json
        if 'name' not in file_to_proccess:
            # self.logger.error('Processo sem arquivo informado, ignorado.')
            return None
        # ---

        # Busca o texto do arquivo
        text = self.__extract_text(file_to_proccess['name'])

        # Verifica se houve retorno da extração
        if text:
            fileoutput = os.path.join(self.base_dir, 'output/',
                                      f""processo_{str(threading.currentThread().getName())}.txt"")

            with open(fileoutput, ""a+"") as fn:
                fn.write(f""{text}\n"")

            self.logger.info(f'Arquivo ""{file_to_proccess[""name""]}"" processado com sucesso.')
        # ---

        # Move o arquivo para outra pasta
        try:
            from_name = os.path.join(self.base_dir, 'pending/', file_to_proccess['name'])
            to_name = os.path.join(self.base_dir, 'done/', file_to_proccess['name'])
            os.replace(from_name, to_name)
        except Exception as e:
            self.logger.error(f'Erro ao mover o arquivo ""{file_to_proccess[""name""]}"": {str(e)}')
        # ---

    def __extract_text(self, filename):
        # Verifica se o arquivo é um PDF
        if filename.lower().endswith("".pdf""):
            # Realiza a extração do texto do PDF
            try:
                full_filename = os.path.join(self.base_dir, 'pending/', filename)
                text = extract_text(full_filename).replace('\n', '')
            except Exception as e:
                self.logger.error(f'Erro na extração de dados do PDF ""{filename}"".')
                return None
            # ---

            # Verifica se existe a expressão ""cédula""

            # print(text)
            
                   
               

            if text[0:6] == 'Cédula':
                try:
                    credora_cnpj = re.findall(r'[0-9]{2}\.?[0-9]{3}\.?[0-9]{3}\/?[0-9]{4}\-?[0-9]{2}', text)[0].strip()
                except IndexError:
                    credora_cnpj = ''
            else:
                try:
                    credora_cnpj = re.findall(self.ptn_cnpj, text)[0].strip()
                except IndexError:
                    credora_cnpj = ''
            
                texto = 'taxa de administração que equivalerá a %, ou taxa de gestão é %'
            

                lista = texto.split('%')

                porcents = []
            
                for item in lista[:-1]:
                  texto_da_taxa = item.split("" "")[-1] + '%'
                porcents.append(texto_da_taxa)
                if len(texto_da_taxa)==0:
                   porcents.append('Não foi encontrado nenhuma taxa de administração')
            
            
            # --- (Fim do verifica se existe a expressão ""cédula"")

            # final_text = ""{};{};{};{};{};{};{};{};{};{};"".format(filename, credora_nome2, credora_cnpj, emitente_nome,
            #                                                      emitente_doc, emiss, venc, principal, prazo, parcela)

            final_text = ""{};{};{};"".format(filename, credora_cnpj, texto_da_taxa)
            return final_text
        else:
            self.logger.error(f'O arquivo ""{filename}"", não é um PDF.')
            return None
        # --- (Fim do verifica se o arquivo é um PDF)

",,,,,"['\npython', 'python-3.x\n']"
517889,Comparando nomes de duas listas diferentes - ideias sobre formas de comparação,"
Estou tentando fazer uma comparação de nomes de empresas entre duas listas diferentes. O caso é o seguinte: ambas as listas podem conter nomes diferentes para uma mesma empresa, por exemplo: 
Nome1: Escalar 
Nome2: Grupo Escalar 
Nome3: Escalar LTDA 
Só que eu precisaria que o algoritmo me trouxesse que são a mesma empresa. Algumas coisas que já tentei:

Verificar, por exemplo, se o Nome1 contém no Nome2. Assim dá certo para esse caso, mas algumas empresas o segundo nome pode ser diferente (exemplo: ""Escalar Participações"" e ""Escalar Empreendimentos""), então esse caso não se aplica. Abaixo está o código de comparação que estou usando:
 for j in range(len(bancodados[""COMPANY NAME""])):
    print(""j = "" + str(j))
    for i in range(len(arquivo2[""Nome do Cliente""])):
        p1 = re.compile(r""\b"" + str(bancodados[""COMPANY NAME""][j]) + r""\b"", re.IGNORECASE)
        if p1.search(str(arquivo2[""Nome do Cliente""][i])):
            bancodados[""Contém""][j] = arquivo2[""Nome do Cliente""][i]


Como explícito no exemplo acima, também usei regex para pegar somente os nomes inteiros, e não uma parte do nome, ou seja, se eu for comparar o nome ""Escalar"" vai pegar ""Escalar LTDA"", mas não ""Escalares"".

Em outros testes, usando regex, fiz o algoritmo excluir nomes como LTDA, SA, ect, assim como fazer uma dupla comparação (verificar se o Nome1 contém no Nome2, e vice-versa), na tentativa de aumentar a eficácia do algoritmo.

Qual o objetivo com esse projeto: verificar quais empresas já pertencem a uma lista previamente definida, usando como comparação uma segunda lista de empresas. Para esse projeto, eu não posso ter na lista final empresas que existem na segunda lista. Porém, ainda tenho alguns nomes que estão presentes nas duas listas que o algoritmo não consegue detectar, que basicamente são casos de empresas com nomes compostos e diferentes, como: ""Amireia Pajoara"" e ""Pajoara Industria e Comercio"". 
Então queria saber se alguém pode me dar um insight do que posso testar para aumentar a eficiência do algoritmo.



",,,,,"['\npython', 'python-3.x', 'regex\n']"
517837,"Gostaria de saber o conceito de QueryString , o que é ? , para que serve ?. Estou em uma aula sobre flask e me foi apresentado sobre QueryString","


@app.route('/novo') #novo.html
def novo():
    if 'usuario_logado' not in session or session['usuario_logado'] == None:
            return redirect('/loguin?proxima=novo')
    return render_template('novo.html', titulo='Novo Jogo')



return redirect('/loguin?proxima=novo')
",,,,,"['\npython', 'string', 'flask', 'querystring\n']"
517814,Dúvida em python com Opencv,"
Olá, preciso exibir uma área determinada da imagem com as bordas, utilizando o canny, e exibi-la em cima da própria imagem, como no exemplo abaixo.

O meu código exibe a área selecioanda e essa área com o filtro Canny, porem em janelas diferentes.

O que preciso fazer para ter essa exibição como no exemplo? Pensei em utilizar a função Rect mas não consegui.
import cv2
import numpy as np
import matplotlib.pyplot as plt

img_src = cv2.imread('moon.jpg')

roi = cv2.selectROI(img_src)
roi_cropped = img_src[int (roi [1]): int (roi [1] + roi [3]), int (roi [0]): int (roi [0] + roi [2])]
cv2.imshow('ROI', roi_cropped)

canny = cv2.Canny(roi_cropped, 100, 200)
cv2.imshow('Image canny', canny)

cv2.waitKey()

","
O motivo de você não ter conseguido deve-se ao fato da imagem original (img_src) ser um numpy array onde cada elemento possui três valores, porém a imagem canny (canny) é um numpy array onde cada elemento possui o valor 0 ou 255.
Sendo assim, para colocar o canny em cima do img_src, você tem que transformar de 0 para [0, 0, 0] e de 255 para [255, 255, 255].
Farei isso aqui da forma mais simples possível, mas acredito que existam outras formas mais rápidas.
Carregando libraries
import cv2
import numpy as np
import matplotlib.pyplot as plt

Lendo imagem original e croping
img_src = cv2.imread('foto.jpeg')

roi = cv2.selectROI(img_src)
roi_cropped = img_src[int (roi [1]): int (roi [1] + roi [3]), int (roi [0]): int (roi [0] + roi [2])]

cv2.imshow('ROI', roi_cropped)

Gerando canny
canny = cv2.Canny(roi_cropped, 100, 200)
cv2.imshow('Image canny', canny)

A ""mágica"" acontece aqui
rows, cols = canny.shape

l = []

for row in range(rows):
    l.append([])
    for col in range(cols):
        item = [0, 0, 0]
        if canny[row, col] == 255:
           item = [255, 255, 255]
        l[-1].append(item)

Nota 1 canny é algo como [[0, 0, 255, 0...], [0, 255, 255, 0...]...]
Nota 2 l é algo como [[[0, 0, 0], [0, 0, 0], [255, 255, 255], [0, 0, 0]...], [[0, 0, 0], [255, 255, 255], [255, 255, 255], [0, 0, 0]...]...]
Atribuindo l à imagem original
img_src[int (roi [1]): int (roi [1] + roi [3]), int (roi [0]): int (roi [0] + roi [2])] = np.array(l)

cv2.imshow('Imagem alterada', img_src)

Neste exemplo teríamos:




","
            3
        ","
eu fiz uma função que faz isso de forma eficiente:
def merge_image(back, front, x,y):
    # convert to rgba
    if back.shape[2] == 3:
        back = cv2.cvtColor(back, cv2.COLOR_BGR2BGRA)
    if front.shape[2] == 3:
        front = cv2.cvtColor(front, cv2.COLOR_BGR2BGRA)

    # crop the overlay from both images
    bh,bw = back.shape[:2]
    fh,fw = front.shape[:2]
    x1, x2 = max(x, 0), min(x+fw, bw)
    y1, y2 = max(y, 0), min(y+fh, bh)
    front_cropped = front[y1-y:y2-y, x1-x:x2-x]
    back_cropped = back[y1:y2, x1:x2]

    alpha_front = front_cropped[:,:,3:4] / 255
    alpha_back = back_cropped[:,:,3:4] / 255
    
    # replace an area in result with overlay
    result = back.copy()
    print(f'af: {alpha_front.shape}\nab: {alpha_back.shape}\nfront_cropped: {front_cropped.shape}\nback_cropped: {back_cropped.shape}')
    result[y1:y2, x1:x2, :3] = alpha_front * front_cropped[:,:,:3] + (1-alpha_front) * back_cropped[:,:,:3]
    result[y1:y2, x1:x2, 3:4] = (alpha_front + alpha_back) / (1 + alpha_front*alpha_back) * 255

    return result

no input dela vc usa a imagem de fundo depois a imagem que vem do canny e a posição inicial dela do x e y 1 da onde ela vai estar.
O resultado desta função ja vai ser a imagem da forma q vc precisa.
","
            -1
        ","['\npython', 'python-3.x', 'opencv', 'processamento-de-imagens\n']"
517788,"Tem alguma biblioteca do python para fzr a criação de um jogo online? A ideia é Tetris em pygame, em q nele vc pode fzr um x1 com alguem em outro pc","
Minha ideia é que as duas telas do x1, apareça para os dois jogadores, que eles possam ver os movimentos um do outro em tempo real.
Não consegui achar ninguém que saiba de uma biblioteca assim ou que saiba ensinar como usar.
",,,,,"['\npython', 'python-3.x', 'jogos', 'pygame', 'import\n']"
517785,Cardápio Lanchonete,"
Saudações, sou iniciante em python e preciso fazer um código em que o mesmo inicie com um tabela, informando o produto, seu valor e um código para o mesmo. O programa tem que solicitar o código de um produto, a quantidade desejada e devolver o valor vezes a quantidade que foi solicitada... Fiz diversos testes, em um ele não aceitava nada, no outro, não importava os valores colocados, o programa me devolvia zero, e na minha ultima tentativa, o programa solicita infinitamente o código e a quantidade, desde já agradeço

print('================================= \n| COD |     PRODUTO     | VALOR | \n| 100 | Cachorro quente | 1,20R$| \n'
      '| 101 | Bauru Simples   | 1,30R$|\n| 102 | Bauru com ovo   | 1,50R$|\n| 103 | Hamburguer      | 1,20R$| \n'
      '| 104 | Chessburguer    | 1,70R$|\n| 105 | Suco            | 2,20R$| \n| 106 | Refrigerante    | 1,00R$|\n'
      '=================================\n Para sair digite 999')
total = 0
while True:
    q = int(input('Informe o codigo: '))
    if(q == 999):
        break
    qtd = int(input('Informe a quantidade: '))
    if q == 100:
        total = 1.20 * q
    elif q == 101:
        total = 1.30 * q
    elif q == 102:
        total = 1.50 * q
    elif q == 103:
        total = 1.20 * q
    elif q == 104:
        total = 1.70 * q
    elif q == 105:
        total = 2.20 * q
    elif q == 106:
        total = 1 * q
    else:
        print('Codigo invalido')
print(total, 'reais') ``` 

","
respondendo a sua pergunta, o seu erro está na endentação do código, onde está mandando printar o valor do pedido está fora do laço do while True: assim nunca o executando,
outra coisa que pude perceber é que você esta multiplicando o valo do produto pelo código e não pela quantidade onde acredito que seria o certo,
fiz umas alterações para exemplificar o que falei espero que te ajude.
a = ('================================= \n| COD |     PRODUTO     | VALOR | \n| 100 | Cachorro quente | 1,20R$| \n'
  '| 101 | Bauru Simples   | 1,30R$|\n| 102 | Bauru com ovo   | 1,50R$|\n| 103 | Hamburguer      | 1,20R$| \n'
  '| 104 | Chessburguer    | 1,70R$|\n| 105 | Suco            | 2,20R$| \n| 106 | Refrigerante    | 1,00R$|\n'
  '=================================\n Para sair digite 999')
total = 0

while True:

    print(a)

   q = int(input('Informe o codigo: '))
    if(q == 999):
        break
    qtd = int(input('Informe a quantidade: '))
    if q == 100:
       total = 1.20 * qtd
    elif q == 101:
        total = 1.30 * qtd
    elif q == 102:
        total = 1.50 * qtd
    elif q == 103:
        total = 1.20 * qtd
    elif q == 104:
        total = 1.70 * qtd
    elif q == 105:
        total = 2.20 * qtd
    elif q == 106:
         total = 1 * qtd
    else:
        print('Codigo invalido')

    print('o Seu total foi ->', total, 'reais')

    b = input('deseja continuar: ')

    if b == 'sim':
       pass

    else:
       break

nesse caso alterei apenas a variável que estava multiplicando o valor, inseri o print dentro do laço do while True: e adicionei uma verificação para encerrar o código caso não seja mais usado
","
            -2
        ","
O utilizei o dicionário, uma estrutura de dados que é bastante útil e utiliza o par chave-valor. Acredito que trabalhar assim fica mais natural.
print('================================= \n| COD |     PRODUTO     | VALOR | \n| 100 | Cachorro quente | 1,20R$| \n'
      '| 101 | Bauru Simples   | 1,30R$|\n| 102 | Bauru com ovo   | 1,50R$|\n| 103 | Hamburguer      | 1,20R$| \n'
      '| 104 | Chessburguer    | 1,70R$|\n| 105 | Suco            | 2,20R$| \n| 106 | Refrigerante    | 1,00R$|\n'
      '=================================\n Para sair digite 0')

menu = {

    '100': ['Cachorro quente', 1.20],
    '101': ['Bauru Simples', 1.30],
    '102': ['Bauru com ovo', 1.50],
    '103': ['Hamburguer', 1.20],
    '104': ['Chessburguer', 1.70],
    '105': ['Suco', 2.20],
    '106': ['Refrigerante', 1.00]
}

pedido = {}
while True:
    codigo = input('Informe o codigo: ')
    if (codigo == '0'):
        break
    if codigo in menu:
        quantidade = int(input('Informe a quantidade: '))
        if quantidade > 0:
            valorItem = menu.get(codigo)
            pedido.update({codigo: (valorItem, quantidade)})

valorDoPedido = 0

for linha in pedido.items():
    valorDoPedido += linha[1][0][1] * linha[1][1]  # Preço * Quantidade

print('\nSEU PEDIDO: ')

for linha in pedido.items():
    print(str(linha[1][1]) + ' x ' + 'R$ ' + str(round(linha[1][0][1], 2)) + ' --- ' + str(linha[1][0][0]))

print('\nTOTAL DO PEDIDO: R$ ' + str(round(valorDoPedido, 2)))

","
            -4
        ",['\npython\n']
517778,Como posso tirar print da tela em segundo plano com Python,"
Gostaria de poder realizar screenshot, da aplicação rodando em segundo plano com o Python.
Em cada tela que a aplicação entrar, eu preciso de um print.
Consegui fazer, com o pyautogui. Mas, ele só tira screenshot da tela principal, quando deixo a aplicação rodando em segundo plano, só recebo os print da tela em que estou e não da aplicação que está rodando.

nomeArquivo = datetime.datetime.now().strftime('%Y-%M-%d_%H%M%S' + '.png') #nome e formato do arquivo.
foto = pyautogui.screenshot() #foto sendo salva.
foto.save('C:\ProjetosPython\Testes\Evidências/' + nomeArquivo) #caminho onde salvo a foto.```

","
no seu cron vc tem q utilizar o export DISPLAY=:0
segue um exemplo:
* * * * * export DISPLAY=:0; /usr/bin/python3 script.py

lembrando que o valor do display tem q ser o display ativo. na maioria das vezes é o 0. e precisa ser executado pelo cron do usuário em que a sessão esta iniciada. não pode ser root.
segunda alternativa é utilizar o scrot
como instalar: https://www.tecmint.com/take-screenshots-in-linux-using-scrot/
ex no cron:
* * * * * DISPLAY=:0 /usr/bin/scrot ""/home/user/Desktop/screenshots/$(date +'\%d-\%m-\%Y \%T').png""

mesma coisa tem q por no cron do usuario e nao do root.
","
            0
        ",,,"['\npython', 'print', 'tela\n']"
517773,Como quebrar linha após uma linha especifica? PYTHON [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Minha primeira pergunta aqui galera,
Preciso adicionar uma quebra de linha antes dele escrever o for1 novamente, como faço isso nesse código?
E também gostaria que o for7 fosse o ultimo a ser printado, como no arquivo original ele vem por segundo ele é printado em baixo de for1, e não por ultimo.
in_file = ""nomes2.txt""
out_file = ""remetentes.txt""


for1 = ""nome""
for2 = ""endereco""
for3 = ""numero""
for4 = ""bairro""
for5 = ""cidade""
for6 = ""cep""
for7 = ""cpf""



with open(out_file, ""w"") as out_f:
    with open(in_file, ""r"") as in_f:
        for line in in_f:
            if for1 in line or for2 in line or for3 in line or for4 in line or for5 in line or for6  in line or for7 in line:
                print(line)
                out_f.write(line.replace('""', '').replace('nome:', '').replace(',',''))
```


","
Acredito que se voce adicionar um print(""\n""), seja o suficiente embaixo do out_file
","
            -3
        ",,,"['\npython', 'string\n']"
517753,Somar valores de uma coluna que são duplicados utilizando groupby como critério python,"
Estou com um data frame que precisa ser removido as duplicidades e posteriormente do dataframe anterior eu preciso somar um coluna específica. Na verdade eu tenho 5 DF, 4 já deram certo, mas um por conter duplicidade de valores após o groupby ele dá erro de index. Alguém pode me ajudar? Já tentei de diversas formas.
DF1['TOTAL KBYTES VAN'] = DFORIGINAL.groupby(['CONVENIO', 'CNPJ', 'PRODUTO', 'RATEIO VAN'])['TOTAL KBYTES VAN'].transform(np.sum)
este código funciona para 4 DF, porém em um deles o TOTAL KBYTES se ""duplica"" diversas vezes, e isso é uma realidade, eu preciso somar também os duplicados.
já tentei ele de diversas formas mas sem êxito.
exemplos de tentativas:
DF1['TOTAL KBYTES VAN'] = DFORIGINAL.groupby(['CONVENIO', 'CNPJ', 'PRODUTO', 'RATEIO VAN'])['TOTAL KBYTES VAN'].sum()
DF1['TOTAL KBYTES VAN'] = DFORIGINAL.groupby(['CONVENIO', 'CNPJ', 'PRODUTO', 'RATEIO VAN'])['TOTAL KBYTES VAN'].cumsum()
DF1['TOTAL KBYTES VAN'] = DFORIGINAL.groupby(['CONVENIO', 'CNPJ', 'PRODUTO', 'RATEIO VAN'],  as_index=False)['TOTAL KBYTES VAN'].sum()
DF1['TOTAL KBYTES VAN'] = DFORIGINAL.groupby(['CONVENIO', 'CNPJ', 'PRODUTO', 'RATEIO VAN'],  as_index=False)['TOTAL KBYTES VAN'].transform(np.sum)
DFORIGINAL
VAN;CNPJ;CLIENTE;PRODUTO;RATEIO VAN;TOTAL KBYTES VAN;CONVENIO;% MARGEM
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;PAGAMENTO;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;PAGAMENTO;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1





VAN
CNPJ
CLIENTE
PRODUTO
RATEIO VAN
TOTAL KBYTES VAN
CONVENIO
% MARGEM




EMPRESA
0123456789777
EMPRESA
OUTROS
100
2,63671875
220000000
1


EMPRESA
0123456789777
EMPRESA
PAGAMENTO
100
2,63671875
220000000
1


EMPRESA
0123456789777
EMPRESA
OUTROS
100
2,63671875
220000000
1


EMPRESA
0123456789777
EMPRESA
OUTROS
100
2,63671875
220000000
1


EMPRESA
0123456789777
EMPRESA
PAGAMENTO
100
2,63671875
220000000
1


EMPRESA
0123456789777
EMPRESA
OUTROS
100
2,63671875
220000000
1




Só consegui desta forma, veja que o resultado esperado. Obs. Antes de fazer a soma, eu faço um ""drop_duplicates"" no DF1, usando o mesmo criterio do groupby, assim o DF1 trás apenas as 2 linhas únicas, e delas eu espero entregar a soma do TOTAL KBYTES VAN
RESULTADO ESPERADO DF1
VAN;CNPJ;CLIENTE;PRODUTO;RATEIO VAN;TOTAL KBYTES VAN;CONVENIO;% MARGEM
EMPRESA;0123456789777;EMPRESA;OUTROS;100;10,546875;220000000;1
EMPRESA;0123456789777;EMPRESA;PAGAMENTO;100;5,2734375;220000000;1





VAN
CNPJ
CLIENTE
PRODUTO
RATEIO VAN
TOTAL KBYTES VAN
CONVENIO
% MARGEM




EMPRESA
0123456789777
EMPRESA
OUTROS
100
10,546875
220000000
1


EMPRESA
0123456789777
EMPRESA
PAGAMENTO
100
5,2734375
220000000
1



 ","
Acredito que você tenha que usar o reset_index
Veja o exemplo:
Criando DataFrame
import pandas as pd

df = pd.DataFrame({""A"": [1,2,1,3,4], ""B"": [1,2,1,3,4]})

df
Out[3]:
   A  B
0  1  1
1  2  2
2  1  1
3  3  3
4  4  4

Somando SEM o reset_index
df1 = df.groupby([""A""])[""B""].sum()

type(df1)
pandas.core.series.Series

Somando COM reset_index
df2 = df.groupby([""A""])[""B""].sum().reset_index()

type(df2)
pandas.core.frame.DataFrame

Nota perceba que o tipo gerado é diferente entre as formas.
EDITADO em 15/07/2021, baseado na atualização do post que, agora, contém o dataframe e o esperado
Criando DataFrame
import io
import pandas as pd

txt = """"""VAN;CNPJ;CLIENTE;PRODUTO;RATEIO VAN;TOTAL KBYTES VAN;CONVENIO;% MARGEM
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;PAGAMENTO;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;PAGAMENTO;100;2,63671875;220000000;1
EMPRESA;0123456789777;EMPRESA;OUTROS;100;2,63671875;220000000;1""""""

df = pd.read_csv(io.StringIO(txt), sep="";"")

df
       VAN          CNPJ  CLIENTE    PRODUTO  RATEIO VAN TOTAL KBYTES VAN   CONVENIO  % MARGEM
0  EMPRESA  123456789777  EMPRESA     OUTROS         100       2,63671875  220000000         1
1  EMPRESA  123456789777  EMPRESA  PAGAMENTO         100       2,63671875  220000000         1
2  EMPRESA  123456789777  EMPRESA     OUTROS         100       2,63671875  220000000         1
3  EMPRESA  123456789777  EMPRESA     OUTROS         100       2,63671875  220000000         1
4  EMPRESA  123456789777  EMPRESA  PAGAMENTO         100       2,63671875  220000000         1
5  EMPRESA  123456789777  EMPRESA     OUTROS         100       2,63671875  220000000         1

Convertendo TOTAL KBYTES VAN para float
df[""TOTAL KBYTES VAN""] = df[""TOTAL KBYTES VAN""].str.replace("","", ""."")

df[""TOTAL KBYTES VAN""] = df[""TOTAL KBYTES VAN""].astype(float)

df
       VAN          CNPJ  CLIENTE    PRODUTO  RATEIO VAN  TOTAL KBYTES VAN   CONVENIO  % MARGEM
0  EMPRESA  123456789777  EMPRESA     OUTROS         100          2.636719  220000000         1
1  EMPRESA  123456789777  EMPRESA  PAGAMENTO         100          2.636719  220000000         1
2  EMPRESA  123456789777  EMPRESA     OUTROS         100          2.636719  220000000         1
3  EMPRESA  123456789777  EMPRESA     OUTROS         100          2.636719  220000000         1
4  EMPRESA  123456789777  EMPRESA  PAGAMENTO         100          2.636719  220000000         1
5  EMPRESA  123456789777  EMPRESA     OUTROS         100          2.636719  220000000         1

Agrupando e somando
novo_df = df.groupby([""VAN"", ""CNPJ"", ""CLIENTE"", ""RATEIO VAN"", ""CONVENIO"", ""% MARGEM"", ""PRODUTO""])[""TOTAL KBYTES VAN""].sum().reset_index()

novo_df
       VAN          CNPJ  CLIENTE  RATEIO VAN   CONVENIO  % MARGEM    PRODUTO  TOTAL KBYTES VAN
0  EMPRESA  123456789777  EMPRESA         100  220000000         1     OUTROS         10.546875
1  EMPRESA  123456789777  EMPRESA         100  220000000         1  PAGAMENTO          5.273438

Nota no groupby usei a coluna PRODUTO por último, pois ela é quem tem valores diferentes (PAGAMENTO e OUTROS). Isso não é obrigatório, apenas um hábito que tenho.
","
            4
        ",,,"['\npython', 'pandas', 'numpy\n']"
517700,Projeto python no github com submodulo,"
Tenho um projeto em python e quero incluir um submodulo (que é outro repo do github) no mesmo diretório, e quero que ele seja instalado de forma automática durante a instalação do modulo principal.
Isso é possível, se sim, como pode ser feito?
Modulo: https://github.com/luizoti/xkeysnail
Submodulo: https://github.com/gvalkov/python-evdev
UPDATE:
Sim, pesquisei sobre o assunto e como deve ser meio claro, é relacionado a python e não encontrei nada que sanasse a duvida.
Mas tudo bem, vamos imaginar que não seja um repositório no GIT, (nem o modulo e nem o submodulo), alguém pode me ajudar com essa duvida ou vão apenas apertar o seta para baixo?
","
Apenas pra manter um ciclo positivo de quem sabe mais ajuda quem sabe menos, segue a solução, espero que seja útil pra alguém.
No exemplo abaixo segue o setup.py, em primeiro adicionei o argumento dependency_links e nele o link do repositório no github ""https://github.com/luizoti/evdev/tarball/master#egg=evdev-1.4.1"" com a versão do pacote.
O teste foi feito no python 3.8.
Em seguida em install_requires, adicionei o nome do pacote ""evdev==1.4.1"" apontando para a versão dele.
Com esse modelo o pacote evdev é instalado ignorando o pacote existente via pip, no meu caso a necessidade veio por precisar instalar um fork modificado.
#!/usr/bin/env python

from setuptools import setup

__doc__ = None
__name__ = None
__version__ = None
__description__ = None

exec(open(""xkeysnail/info.py"").read())

setup(
    name=__name__,
    version=__version__,  # pylint: disable=undefined-variable
    author=""Masafumi Oyamada"",
    url=""https://github.com/mooz/xkeysnail"",
    description=__description__,  # pylint: disable=undefined-variable
    long_description=__doc__,
    packages=[""xkeysnail""],
    scripts=[""bin/xkeysnail""],
    license=""GPL"",
    dependency_links=[
        ""https://github.com/luizoti/evdev/tarball/master#egg=evdev-1.4.1"",
    ],
    install_requires=[
        ""evdev==1.4.1"",
        ""python-xlib"",
        ""inotify_simple"",
        ""psutil""
    ],
)

","
            0
        ",,,"['\npython', 'github\n']"
517683,Quando cria um novo par num dicionário perde os dados anteriores?,"
Estou criando um dict do zero, porém quando eu adiciono algum par novo, os pares antigos se perdem. Se tento imprimir 'nome' por exemplo, dá erro.
cidade = {
    'nome': 'São Paulo',
    'estado': 'São Paulo'
}

print(cidade)    
print(cidade['nome'])    
cidade = {'país': 'Brasil'}    
#print(cidade['nome'])    
print(cidade)

Tirem o comentário do penúltimo print() que vocês verão o erro acontecendo.
","
Você não está criando um novo par de chave e valor, você está criando um novo dicionário e guardando na mesma variável, por isso o valor anterior dela é perdido, já que não pode guardar dois valores diferentes na mesma variável.
Se deseja adicionar um elemento novo deve criar isso através da sintaxe padrão do dicionário dizendo que tem uma chave que antes não existia e guardando um valor na chave e não no dicionário. A chave é como se fosse um variável diferente, ou seja, o dicionário é um objeto cheio de variáveis.
Outra forma é usar um método que o objeto de dicionário tem por padrão e ele muda o objeto para você. Documentação.
cidade = {
    'nome': 'São Paulo',
    'estado': 'São Paulo'
}
cidade['país'] = 'Brasil'
cidade.update({'cep': '01000'})
print(cidade)

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
","
            5
        ",,,"['\npython', 'python-3.x', 'dicionário\n']"
517646,"Ordenar duas listas simultaneamente, por notas em ordem crescente, e em seguida por nome","
Criei duas listas, que é de notas e outra é de nomes. O programa deve classificar notas em ordem crescente, mas deve ordenar nomes também.
Testei da seguinte forma:
notas = [5, 7, 9, 3] 
nomes = [""Alfredo"", ""Camila"", ""Debora"", ""Joao""]

Felizmente deu certo, com o seguinte resultado:
[9, 7, 5, 4]
[""Debora"", ""Camila"", ""Alfredo"", ""Joao""]

Eu testei outra vez:
notas = [5, 9, 2, 7] 
nomes = [""Joao"", ""Debora"", ""Camila"", ""Alfredo""]

Deu errado no resultado:
[9, 7, 5, 2]
['Camila', 'Joao', 'Alfredo', 'Debora']

Eu tentei muitas vezes e não consegui resolver.
Meu código:
#---------------------------------------------------------------
lista_notas = []
backup_notas = []
ordem_list = []
lista_nomes = []
backup_nomes = []
i_to_while = 0
ii_to_while = 0
#---------------------------------------------------------------
def decrescente(notas):
    lista_notas.append(notas)
    backup_notas.append(notas)
    lista_notas.sort()
    lista_notas.reverse()
    return lista_notas, backup_notas
#---------------------------------------------------------------
def descobrindo_posicoes(notas, original):
    ii = 0
    while ii != len(notas):
        ordem = notas.index(original[ii])
        ordem_list.append(ordem)
        ii+=1
    return ordem_list
#---------------------------------------------------------------
def insere_nomes(nomes):
    lista_nomes.append(nomes)
    backup_nomes.append(nomes)
    return lista_nomes, backup_nomes
#---------------------------------------------------------------
def sincronizando_nomes(notas, ordem, nomes, original, original_notas):
    print(notas, ordem, nomes, original, original_notas)
    n = 0
    while n <= len(nomes)-1:
        nomes[n]= original[ordem[n]]
        nomes_resultado = nomes
        n+=1
    print(""Antes de programa"")
    print(original_notas)
    print(original)
    print("""")
    print(""Resultado"")
    print(notas)
    print(nomes)
#---------------------------------------------------------------
while True:
    if i_to_while == 4:
        break
    decrescente(int(input(""Suas notas? (4 notas suportadas): "")))
    i_to_while += 1
#---------------------------------------------------------------
descobrindo_posicoes(lista_notas, backup_notas)
#---------------------------------------------------------------
while True:
    if ii_to_while == 4:
        break
    insere_nomes(str(input(""Seus nomes? (4 nomes suportados: "")))
    ii_to_while += 1
#---------------------------------------------------------------
sincronizando_nomes(lista_notas, ordem_list, lista_nomes, backup_nomes, backup_notas)
#---------------------------------------------------------------

","
De forma mais pythônica, poderia ser:
Criando variáveis
notas = [5, 7, 9, 3]
nomes = [""Alfredo"", ""Camila"", ""Debora"", ""Joao""]

Juntando listas
l = list(zip(nomes, notas))

print(l)
[('Alfredo', 5), ('Camila', 7), ('Debora', 9), ('Joao', 3)]

Ordenando por nota
l.sort(key=lambda x: x[1])

print(l)
[('Joao', 3), ('Alfredo', 5), ('Camila', 7), ('Debora', 9)]

Separando as listas
nomes, notas = zip(*l)

print(nomes)
('Joao', 'Alfredo', 'Camila', 'Debora')

print(notas)
(3, 5, 7, 9)

","
            6
        ","
Se a ideia é sincronizar as duas listas (ou seja, ordenar as notas, e depois manter a ordem dos respectivos nomes), não precisa dessa complicação toda.
Em vez de ter duas listas, eu sugiro ter apenas uma, guardando tuplas que contém o nome e a respectiva nota (mas também tem uma alternativa com duas listas no final).
Assim, ficaria desta forma:
nomes_notas = []
quantidade = 4
for _ in range(quantidade):
    nome = input('digite o nome:')
    nota = int(input('digite a nota:'))

    # insere uma tupla contendo o nome e a nota
    nomes_notas.append((nome, nota))

# ordena pela nota em ordem decrescente
nomes_notas.sort(key=lambda t: t[1], reverse=True)
print(nomes_notas)

Ou seja, eu leio o nome e a respectiva nota, e depois eu insiro uma tupla - o (nome, nota): repare nos parênteses, eles não são redundantes. Se eu fizesse nomes_notas.append(nome, nota), eu estaria passando dois parâmetros para append e daria erro. Ao colocar esse par de parênteses extra, estou criando uma tupla contendo o nome e a nota, e esta tupla é inserida na lista.
Depois, basta ordenar usando o valor da nota (é o que o key=lambda... faz, pega o segundo elemento da tupla - o que está na posição 1, já que a primeira posição é zero), e o reverse=True faz com que seja em ordem decrescente.
No final a saída será algo como:
[('ciclano', 5), ('trajano', 4), ('beltrano', 3), ('fulano', 1)]

Mas se quiser criar listas separadas para os nomes e as notas, basta fazer:
nomes = [ t[0] for t in nomes_notas ]
notas = [ t[1] for t in nomes_notas ]


Mas se quiser, pode manter os dados em duas listas - o que eu não sugiro, pois se cada nome está atrelado a uma nota, então faz mais sentido agrupar estas informações, em vez de mantê-las separadas e tentar criar todo um esquema complicado para sincronizá-las. Mas enfim, seria algo assim:
quantidade = 4
nomes = []
notas = []
for _ in range(quantidade):
    nomes.append(input('digite o nome:'))
    notas.append(int(input('digite a nota:')))

indices = sorted(range(len(notas)), key=lambda i: notas[i], reverse=True)
notas_ordenadas = [ notas[i] for i in indices ]
nomes_ordenados = [ nomes[i] for i in indices ]

Ou seja, eu crio uma lista de índices (os números de zero até o tamanho da lista notas), e ordeno esses índices usando como base o valor deste índice na lista de notas (é o que o key ali faz, para cada índice, pega a respectiva nota).
Depois, basta pegar os valores dos nomes e das notas, na ordem determinada pela lista de índices.
Reforço novamente que esta é uma opção mais confusa, pois se as notas e os nomes devem estar sincronizados (cada nome tem sua nota), eu prefiro agrupar esses dados e mantê-los juntos, como feito na primeira solução acima.
","
            5
        ","['\npython', 'python-3.x', 'lista\n']"
517565,Como se livrar de uma linha vertical no editor do Pycharm [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



to inciando agr em Python e to usando o pycharm, e logo depois de abrir o editor e tem uma linha na vertical, COMO eu me livro dessa bagaça?
","
Aquela linha é pra te auxiliar, afinal, o pycharm tem uma integração com a pep8 e se não me engano, aquilo representa o tamanho máximo que uma linha deve ter de acordo com a pep8, e quando aquela linha é ultrapassada ele mostra formas de quebrar a linha e deixar o código mais clean. De qualquer forma espero ter exclarecido...
""PEP 8, às vezes escrito PEP8 ou PEP-8, é um documento que fornece diretrizes e práticas recomendadas sobre como escrever código Python. ... O foco principal do PEP 8 é melhorar a legibilidade e a consistência do código Python. PEP significa Python Enhancement Proposal, e há vários deles.""
","
            -1
        ",,,"['\npython', 'pycharm\n']"
517542,"Criar DataFrame a partir de listas com tamanhos diferentes, mantendo a correspondência entre os dados","
Eu tenho listas de comprimentos diferentes com dados extraídos de um PDF.
Cada valor e código faz parte (está dentro) de uma nota respectiva:
cliente = ['12345','15432']
nota = ['21/0576750-3', '20/063859-1']
codigo = [86, 6052,5031,1038,1025]
valor = [100.45, 200.34, 450.10, 150.58, 42.30]

Quero transformar esses dados em um DataFrame como esse:

Obs: O desafio é conseguir criar relacionamentos um para muitos de forma a manter a correspondência entre os dados das linhas.
Tentei o seguinte código, mas a tabela perde a referência dos dados das linhas.
tabela = list(zip(cliente,nota,codigo,valor)
df = pd.DataFrame(tabela, columns = ['Cliente', 'Nota', 'Código','Valor'])
df.to_excel('d:/nome.xlsx', index=False)

Alguém poderia ajudar? Obrigado!
","
Galera, consegui resolver a questão da criação do DataFrame sem perder a indexação das informações das colunas!
A solução foi a utilização da biblioteca Collections - namedtuple
Essa função permite a criação de uma tupla com itens que funcionam parecido com um dicionário, mantendo a relação entre as chaves e os valores extraídos.
Segue abaixo o código:
import pandas as pd
import re
from collections import namedtuple


formulario = namedtuple('Formulário', 'cliente nota codigo valor')


padraoCliente = re.compile('[0-9]{2}.[0-9]{3}.[0-9]{3}\/[0-9]{4}-[0-9]{2}')
padraoNota = re.compile('Número da nota')
padraoCodigoValor = re.compile('([0-9]{4})\s(\.?[0-9]*\.?[0-9]*\.?[0-9]*,[0-9]{2})')

extracao = ocr.getTexto('arquivo.pdf')

linha_items = []

for linha in extracao.split('\n'):
    if padraoCliente.match(linha):
        cliente = linha.split()
        cliente = ' '.join(cliente)

    if padraoNota.match(linha):
        nota = linha.split()
        

    linha = padraoCodigoValor.search(linha)
    if linha:
        codigo = linha.group(1)
        valor = linha.group(2)
        
        linha_items.append(formulario(cliente nota codigo valor))

df = df = pd.DataFrame(linha_items, columns=['Número do cliente','Número da Nota', 'Código do produto', 'Valor do Produto'])

Aprendi o procedimento assistindo a esse vídeo: Youtube: Use Python to extract invoice lines from a semistructured PDF AP Report
","
            2
        ","
você pode fazer isso com o seguinte código:
pd.DataFrame({'Cliente': pd.Series(cliente), 'Nota': pd.Series(nota), 'Código': pd.Series(codigo), 'Valor': pd.Series(valor)})

Saída:
  Cliente          Nota  Código   Valor
0   12345  21/0576750-3      86  100.45
1   15432   20/063859-1    6052  200.34
2     NaN           NaN    5031  450.10
3     NaN           NaN    1038  150.58
4     NaN           NaN    1025   42.30

O único ""problema"" é que você vai ter que ver como vai lidar com a repetição do código do cliente e da nota.
","
            1
        ","['\npython', 'lista', 'dataframe', 'dicionário', 'índices\n']"
517517,Enquadrar uma imagem dentro de outra,"
Estou tendo um pouco de dificuldade em implementar a seguinte situação:

Ler uma pasta com várias imagens;
Tenho que ler as imagens e redimensionar cada uma para a resolução 720x185;

Eu consegui realizar o redimensionamento da imagem como o código a seguir.
from PIL import Image
    
path = 'informe o caminho da imagem'
    
image = Image.open(r"""" + path + """")
image = image.resize((720,185))
image.save(path)

Contudo, eu tenho imagens quadradas onde elas ficam distorcidas, então o que eu precisava fazer era o seguinte:

Gerar uma imagem em branco com a resolução de 720x185;
Inserir a imagem lida no centro da imagem nova criada, respeitando apenas a altura. Com isso, acredito que não ficaria distorcida;

Como posso realizar essa tarefa?
","
Dimensionar com valores fixos não vai funcionar mesmo. Pra manter a proporção você tem que fazer um pequeno cálculo.
Primeiro tem que pegar a largura desejada e dividir pela largura da imagem original, assim vai gerar valor que será usado como multiplicador. Na sequência, esse multiplicador vai calcular a sua nova altura.
Por exemplo:
from PIL import Image
    
path = 'informe o caminho da imagem'
image = Image.open(r"""" + path + """")

new_width = 720
multiplier = new_width / image.width
new_height = image.height * multiplier
    
image = image.resize((new_width, new_height))
image.save(path)

","
            1
        ",,,"['\npython', 'python-3.x\n']"
517504,Duvida sobre conversão de str para int com py/pandas ((dataset)),"
Eu tenho uma coluna de notas no formato de string. Elas vem tipo: 432432.0
Sempre vem com .0 aí eu queria passar logo pra int e nao pra float
Como ta nesse formato vi que eu deveria primeiro converter pra float e depois pra int
Só que tem algumas linhas que tinham a string ""Unknown"" que eu previamente mudei tudo pra None
Aí quando eu rodo a conversao de float pra int da esse erro:
ValueError: Cannot convert non-finite values (NA or inf) to integer

eu consigo resolver esse erro com essa modificação aqui:
disso:
data['Score-9'] = data['Score-9'].astype(int)

pra isso:
data['Score-9'] = data['Score-9'].fillna(0).astype(int)

mas não quero que as lacunas do None fiquem com 0 pois isso vai alterar as médias, medianas e afins. Como posso fazer a conversão continuando com o None e sem dar erro?
","
Em cálculo de média, mediana e moda; o valor NaN é ignorado.
Dê preferênci para o tipo float.
Veja o exemplo:
Criando DataFrame teste
df = pd.DataFrame({""valores"": [""1"", ""1"", ""Unknown"", ""4""]})

df
   valores
0        1
1        1
2  Unknown
3        4

Convertendo Unkown para NaN
import numpy as np

df = df.replace(""Unknown"", np.nan)

Caso vc tente converter para int, será lançada a exceção
df[""valores""] = df[""valores""].astype(int)
(...)
ValueError: cannot convert float NaN to integer

Convertendo para float
df[""valores""] = df[""valores""].astype(float)

df
   valores
0      1.0
1      1.0
2      NaN
3      4.0

Média, mediana, moda
df[""valores""].mean()
2.0

df[""valores""].median()
1.0

df[""valores""].mode()
0    1.0
dtype: float64

","
            1
        ","
Você pode utilizar o lambda desta forma para remover o "".0"" já que seus números são inteiros
data['Score-9'] = data['Score-9'].apply(lambda x: x.replace('.0', ''))
","
            0
        ","['\npython', 'pandas', 'dataframe\n']"
517435,Pygame como fazer o personagem pular,"
Estou dando meus primeiros passos no pygame, e estou tentando fazer com que o personagem do jogo pule, mas me deparei com um erro: o personagem apenas teleporta para cima e para baixo em 2 frames ele fez o movimento todo, e não consigo encontrar uma maneira eficiente de fazer com que haja uma animação completa de um pulo... alguém pode me dar uma luz?
eis o código do pulo:
class Luna(pygame.sprite.Sprite):

    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.images = [pygame.image.load(os.path.join(""sprites"", ""luna2.png"")).convert_alpha(),
                       pygame.image.load(os.path.join(""sprites"", ""luna.png"")).convert_alpha(),
                       pygame.image.load(os.path.join(""sprites"", ""luna3.png"")).convert_alpha()]

        self.current_image = 0
        self.image = pygame.image.load(os.path.join(""sprites"", ""luna2.png"")).convert_alpha()

        self.rect = self.image.get_rect()
        self.rect[0] = 0
        self.rect[1] = height - 220
        self.jumping = False
        self.gravity = 10
        self.jump_height = 150

    def update(self):
        # updates walking Luna
        self.current_image = (self.current_image + 1) % 3
        self.image = self.images[self.current_image]
        self.image = pygame.transform.scale(self.image, (200, 200))

        if self.jumping:

            self.rect[1] -= 200 # posição no eixo y
            self.jumping = False


        else:
            while self.rect[1] < window_height:
                self.rect[1] += 1

    def jump(self):
        self.jumping = True

a def draw que desenha o personagem na tela:
def draw_window():
    window.blit(background_image, (0, 0))

    ground_group.update()
    ground_group.draw(window)

    luna_group.update()
    luna_group.draw(window)
    pygame.display.update()

e o loop main do pygame:
def main():
    clock = pygame.time.Clock()
    run = True
    while run:
        clock.tick(fps)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    luna.jump()

        draw_window()
    pygame.quit()

","
Eu estava sofrendo com a mesma coisa.
import pygame
from sys import exit
pygame.init()
clock = pygame.time.Clock()
width, height = 544, 320
Criando a tela
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Mais um teste de jogo')
Criando o background
bg = pygame.image.load('imagens/parallax-forest-preview.png')
bg_rect = bg.get_rect(topleft=(0, 0))
Criando o heroi
heroi = pygame.image.load('imagens/spellun-sprite.png').convert_alpha()
heroi_rect = heroi.get_rect(midbottom=(272, 300))
gravidade_heroi = 0
Laço principal
while True:
# Desenha o background
screen.blit(bg, bg_rect)
# Evento para fechar o jogo
for event in pygame.event.get():
    if event.type == pygame.QUIT:
        exit()

    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_SPACE:
            gravidade_heroi = -20

gravidade_heroi += 1
heroi_rect.y += gravidade_heroi

if heroi_rect.bottom >= 300:
    heroi_rect.bottom = 300

screen.blit(heroi, heroi_rect)

pygame.display.update()
clock.tick(60)

Observe a variavel clock no começo do programa e no final clock.tick(60).
Isso resolveu para mim.
","
            1
        ",,,"['\npython', 'pygame\n']"
517421,Inline formsets Django,"
Olá, sou até que experiente em django mas estou tendo um erro que não estou conseguindo resolver, bom o erro é o seguinte, tenho um inlineformset_factory e quando vou salvar ele não salva e diz que is_valid é falso, já fiz de tudo mas a função não funciona.
view.py
@login_required(login_url=""/login/"")
def cadastro_movimentacao_produtos(request):
    nivel = permissao(request)
    nome_empresa = consulta_nome_empresa(request)

    empresa = consulta_usuario(request)

    produtos = Produtos.objects.filter(empresa=empresa)
    
    ItensMovProdutosFormset = inlineformset_factory(MovimentacaoProdutos, ItensMovProdutos, extra=1, form=ItensMovProdutosForm)
 
    if request.method == 'POST':
    
        data_mov = request.POST['data_mov']
        
        form = MovimentacaoProdutosForm(request.user, request.POST)
        formset = ItensMovProdutosFormset(request.POST)
        print(formset.is_bound)
        if form.is_valid() and formset.is_valid():
            form.save()
            last_mov = MovimentacaoProdutos.objects.latest('id')

            for inline_form in formset:
                if inline_form.cleaned_data:
                    
                    produto_form = inline_form.save(commit=False)
                    produto_form.question = ItensMovProdutos
                    produto_form.save()

            messages.success(request, 'Movimentação de produtos cadastrado com sucesso!')

            user = request.user.id

            obj_mov = MovimentacaoProdutos.objects.filter(id=last_mov.id)

            obj_mov.update(usuario_id=user)

            return HttpResponseRedirect('/lista-movimentacao-produtos/')

        else:
            print(form.errors, 'Comum form')
            print(formset.errors, 'Formset')
            
    else:
        form = MovimentacaoProdutosForm(request.user)
        formset = ItensMovProdutosFormset()

    perm = permissao(request)
    if perm >= 2:
        return render(request, 'cadastros/cadastro-mov-produto.html', locals())
    else:        
        return render(request, 'verificacao/no-access.html', locals())


JS e HTML


    <script type=""text/javascript"">
        $(function() {
            $('.inlineform').formset({
                prefix: '{{ formset.prefix }}',
                addText: '<label id=""mais"" class=""btn btn-success"" style=""color: white !important; "">Adicionar Produto <i  class=""fas fa-plus""></i></label>',
                deleteText: '<label id=""lixo"" class=""btn btn-danger"" style=""color: white !important; "">Deletar Produto <i class=""fas fa-trash-alt""></i></label>',
            });
            $('.datetimeinput').datetimepicker();
            
        })
    </script>

<!-- language: lang-html -->

    {% for forms in formset %}
    <div class='inlineform'>
    <div class='card p-md-0'>
        <div class='card-header border-bottom p-md-4 ml-2'>
            <h2>Produto</h2>
        </div>
        <div class='card-body'>
            <div class='form-row'>
            {% for campo in forms.visible_fields %}

                <div class=""form-group col-md-3 mb-0 table"">

                        {% for hidden in forms.hidden_fields %}
                            {{ hidden }}
                        {% endfor %}
                            {{ campo.errors.as_ul }}
                            {{ campo|as_crispy_field }}
                        <hr>
                </div>


            {% endfor %}
            </div>
        </div>
    </div>
    </div>
    {% endfor %}

<!-- end snippet -->

Form
class ItensMovProdutosForm(forms.ModelForm):
    
    status = forms.ChoiceField(label='Status', required=False, choices=[
            (0, 'Ativo'),
            (1, 'Desativo'),
        ])
    
    motivos = forms.CharField(label='Motivo')
    class Meta:
        model = ItensMovProdutos

        fields = ['empresa', 'produto', 'qtde', 'vlr_unit', 'total', 'status', 'motivos']

        exclude = ['movimentacaoprodutos', 'usuario']

Model
class ItensMovProdutos(models.Model):

    empresa = models.ForeignKey(""EmpresaFilial"", on_delete=models.CASCADE, null=True)
    produto = models.ForeignKey(""Produtos"", on_delete=models.CASCADE, null=True)
    movimentacaoprodutos = models.ForeignKey(""MovimentacaoProdutos"", on_delete=models.CASCADE, null=True)
    usuario = models.ForeignKey(User, on_delete=models.CASCADE, null=True)
    motivos = models.TextField(u'Motivos', max_length=70, null=True)    
    qtde = models.DecimalField(u'Quantidade', max_digits=8, decimal_places=2, null=True)
    vlr_unit = models.DecimalField(u'Valor Unitário', max_digits=8, decimal_places=2, null=True)
    total = models.DecimalField(u'Total', max_digits=8, decimal_places=2, null=True)
    status = models.IntegerField(u'Status', null=True)

    class Meta:
        ordering = ['produto']

    def __str__(self):
        return str(self.produto) 

","
Bom depois de muito pesquisar acabei descobrindo o problema, e é o seguinte, o formset precisa que você referencie ele como management_form então é só adicionar {{ formset.management_form }} antes do loop de repetição do seu formset.
{{ formset.management_form }} <--Desta forma-->
{% for forms in formset %}
<div class='inlineform'>
   <div class='card p-md-0'>
      <div class='card-header border-bottom p-md-4 ml-2'>
         <h2>Produto</h2>
      </div>
      <div class='card-body'>
         <div class='form-row'>
                    
            {% for campo in forms.visible_fields %}
                    
               <div class=""form-group col-md-3 mb-0 table"">
                    
                  {% for hidden in forms.hidden_fields %}
                      {{ hidden }}
                  {% endfor %}
                  {{ campo.errors.as_ul }}
                  {{ campo|as_crispy_field }}
                  <hr>
               </div>
                        
                    
              {% endfor %}
           </div>
       </div>
    </div>
 </div>

{% endfor %}
","
            0
        ",,,"['\njavascript', 'html', 'python', 'django', 'django-templates\n']"
517414,Não consigo mudar o tamanho de uma figura - Matplotlib,"
Preciso criar uma figura em barras, estou tentando aumentar o tamanho, da seguinte forma:
plt.figure(figsize=(8,8))
plt.bar(df_nacoes_ano)
plt.show()

Porém recebo a seguinte mensagem:
TypeError: bar() missing 1 required positional argument: 'height'

Já tentei inserir o height mas ainda não obtive sucesso com o aumento da figura.
O que posso fazer??
",,,,,"['\npython', 'pandas', 'matplotlib', 'dataset', 'data-science\n']"
517355,Dúvidas a respeito de classes e atributos em python,"
Estou criando um programa em python e estou com algumas dúvidas a respeito da declaração de classes e atributos.
Eu tenho dois arquivos de classes, um chamado geradadosps.py e outra kpi.py
Dentro desses arquivos, eu tenho as classes Geradados e Kpi A classe Geradados importa os atributos da classe Kpi.
import random

#import numpy

from kpi import Kpi

class Geradadosps:

def __init__(self,nome_arquivo,identificador,habilidade):
    self.nome_arquivo = nome_arquivo
    self.identificador = identificador
    self.habilidade = habilidade
    self.qnt_historicos = 10
    self.qnt_kpi = 4
    self.kpi
pass

def Gerar_historico(self,kpi_identificador):
    kpi_historico = []
    for i in range(self.qnt_historico):
        kpi_historico = kpi.historico.append(round(random.random(),2))
    self.kpi = Kpi(kpi_identificador,kpi_historico)

A minha pergunta é. Como eu atribuo o objeto kpi pra dentro do atributo self.kpi da classe geradadosps?
Está certa essa atribuição?
Informações da classe kpi.py
class Kpi:

def __init__(self,identificador, historico):
    self.identificador = identificador
    self.qnt_historicos = 10
    self.historico = historico
pass

@property
def historico(self):
     return self._historico

@historico.setter
def historico(self, historico):
     self._historico= historico   

",,,,,['\npython\n']
517291,python3.9 + matplotlib Não chama o import no .py,"
Então ... versão python 3.9.1
fiz um pip install matplotlib e rodou na boa, Apesar das perguntas com erros de instalação anteriores. Acontece que :
import numpy as np 
import math 
import matplotlib as npl 

Tá dando erro de não achar o módulo, apesar do pip ter dado certo.
Tb acontece para o django não encontrar os módulos...
O que pode ser ??
Obrigado
",,,,,"['\npython', 'django', 'matplotlib\n']"
517283,Tou fazendo webscraping com python e não consigo quebrar um loop,"
Estou automatizando a pesquisa por notebooks gamer na amazon, que além de pegar a primeira página ele pega as próximas, mas ele chega num ponto que não para de tentar pegar mais paginas e nunca sai do loop e eu já tentei fazer verificações, se não existe mais páginas para seguir, que quando for verdadeiro torna a variável continuar como false, etc. Segue o código abaixo
from bs4 import BeautifulSoup
import requests

page_index = 1
index = 0
continuar = True
link = 'https://www.amazon.com.br/s?k=acer+nitro+5&rh=n%3A16364755011&s=price-asc-rank&dc&__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&qid=1625947439&rnid=18726358011&ref=sr_nr_n_1'

site = requests.get(f'{link}&page={page_index}')

print(""Notebooks gamer Acer nitro 5:\n\n"")

#a-pagination

while continuar:
    site_bs4 = BeautifulSoup(site.text, 'html.parser')

    items = site_bs4.findAll('div', class_=""s-expand-height s-include-content-margin s-latency-cf-section {{ ""
                                           ""borderCssClass }}"")

    div_paginas = site_bs4.find('div', class_='a-text-center')
    paginacao = div_paginas.find_all('li', class_='a-last')
    if (paginacao):
        for pagina in paginacao:
            global paginas
            paginas = pagina.find('a')

        if(index == len(items)):
                if(paginas):
                    site = requests.get(f'https://www.amazon.com.br/{paginas[""href""]}')

    for item in items:
        index += 1
        print(index)
        titulo = item.find('span', class_ = 'a-size-base-plus a-color-base a-text-normal')
        url = item.find('a', class_='a-link-normal a-text-normal')
        preco = item.find('span', class_='a-price-whole')

        #preco = items.find('a', class_='a-size-base a-link-normal a-text-normal')

        if(preco):
            print(f'Produto: {titulo.text}')
            print(f'https://www.amazon.com.br/{url[""href""]}')
            print(f'Preço: R${preco.text.replace("","", """")}')
        else:
            print(f'Produto não disponível: {titulo.text}...\nDa url: https://www.amazon.com.br/{url[""href""]}')
        print(""\n"")

print('\nLista acabada!')

Espero que possam me ajudar :)
","
Seu erro é mais simples do que parece: Você não colocou uma condição onde a variável continuar  vira False, assim o código fica repetindo infinitamente.
Para solucionar adicionei a linha continuar = False após a execução de todos os seus loops internos.
Também havia alguns errinhos (como a declaração de global paginas dentro de um for com que faria com que fosse redefinida a cada loop), probleminhas de identação fora do padrão Python, etc.
No final das contas o seguinte código funcionou certinho:
from bs4 import BeautifulSoup
import requests

page_index = 1
index = 0
continuar = True
link = 'https://www.amazon.com.br/s?k=acer+nitro+5&rh=n%3A16364755011&s=price-asc-rank&dc&__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&qid=1625947439&rnid=18726358011&ref=sr_nr_n_1'

site = requests.get(f'{link}&page={page_index}')

print(""Notebooks gamer Acer nitro 5:\n\n"")

#a-pagination

while continuar:
    site_bs4 = BeautifulSoup(site.text, 'html.parser')

    items = site_bs4.findAll('div', class_=""s-expand-height s-include-content-margin s-latency-cf-section {{ ""
                                           ""borderCssClass }}"")

    div_paginas = site_bs4.find('div', class_='a-text-center')
    paginacao = div_paginas.find_all('li', class_='a-last')
    if (paginacao):
        global paginas
        for pagina in paginacao:
            paginas = pagina.find('a')

        if(index == len(items)):
                if(paginas):
                    site = requests.get(f'https://www.amazon.com.br/{paginas[""href""]}')

    for item in items:
        index += 1
        print(index)
        titulo = item.find('span', class_ = 'a-size-base-plus a-color-base a-text-normal')
        url = item.find('a', class_='a-link-normal a-text-normal')
        preco = item.find('span', class_='a-price-whole')

        #preco = items.find('a', class_='a-size-base a-link-normal a-text-normal')

        if(preco):
            print(f'Produto: {titulo.text}')
            print(f'https://www.amazon.com.br/{url[""href""]}')
            print(f'Preço: R${preco.text.replace("","", """")}')
        else:
            print(f'Produto não disponível: {titulo.text}...\nDa url: https://www.amazon.com.br/{url[""href""]}')
        print(""\n"")

    continuar = False

print('\nLista acabada!')

","
            1
        ","
Achei uma solução eu mesmo, o código tá aqui pra quem quiser incorporar
https://github.com/farofaDeCachorro/myprojects/blob/main/amazon_automatic.py
licensa: cc0, pode usar a vontade
edit: quem quiser ajudar no código pode também rsrs

","
            1
        ","['\npython', 'beautifulsoup\n']"
517278,Rodando threads dependentes paralelamente em python,"
Estou tentando rodar 2 threads simultaneamente em meu programa em Python:
from threading import Thread
import manipulateData
import stream

processo1 = Thread(stream.main())
print(processo1)
processo2 = Thread(manipulateData.main())
print(processo2)

processo1.start()
processo2.start()

No processo1 eu rodo alguns websockets que coletam dados de alguns sites.
No processo2 eu manipulo esses dados para fazer algumas análises.
O problema é que quando rodo o programa ele primeiro executa o processo1 e só inicia o processo2 quando dou um stop no processo1 (clico no botão stop no PyCharm).
Aliás, alguém indica algum curso ou material específico sobre multithreading e websockets?
Valeu!
","
bom você esta executando a function dentro da thread e não passando com parâmetro
exemplo:


processo1 = Thread(target=stream.main()) # chamando a function
processo1.start()

processo1 = Thread(target=stream.main) # passando como parâmetro
processo1.start()



","
            -1
        ",,,"['\npython', 'multithreading', 'websocket', 'stream\n']"
517249,Como excluir uma linha que contenha letras em um dataframe?,"
Quero excluir linhas que contenham letras nesse dataframe
dic = {'Código':dataframe['Cod'], 'Dimensões': list_no_x}

new_dataframe = pd.DataFrame(dic)

print(new_dataframe)

A saída fica assim:
   Código  Dimensões
0    1623   10 15 7 
1    5124   15 7 8 
2    4785   20 15 8
3    5251   50 70 22 
4    1578   c10 l20
5    9684   50 10 2 
6    5187   75 20 10 

Eu quero remover todas as linhas que contenham letras ou tenham menos que 3 dimensões na coluna de dimensões.
","
Você pode encontrar as linhas que tem apenas números tirando os espaços e testando se é numérico
df=df[ df[""Dimensões""].apply( lambda x: x.replace("" "", """").isnumeric() ) ]

","
            0
        ","
Para verificar se existência de letras você pode utilizar o pandas.Series.str.contains passando como parâmetro para a busca um RegExp como r'[a-zA-Z]' para criar uma tabela verdade onde letras sejam encontradas.
E para verificar a quantidade de dimensões você pode contar a ocorrência de espaços pandas.Series.str.count
Ex.:
import pandas as pd

dados = { 
    ""Código"": [1623,5124,4785,5251,1578,9684,5187, 111, 222, 333, 444, 555 ],
    ""Dimensões"":[""10 15 7"", ""15 7 8"", ""20 15 8"", 
                ""50 70 22"", ""c10 l20"", ""50 10 2"",
                ""75 20 10"", ""10 cl20"", ""1c0 l20"", ""111 212"", ""111 22 33"", ""11 22 33 44""],
}

# Criar o DataFrame
df = pd.DataFrame( dados )

# Criar uma TABELA VERDADE para selecionar 
# as linhas que contem letras na coluna 'Dimensões'
com_letras = df['Dimensões'].str.contains(r'[A-Za-z]')

print( ""# tabela verdade de linhas que contem letras na coluna 'Dimensões':"" )
print( com_letras )
print( ""\n"")


print( ""# df de linhas COM letras na coluna 'Dimensões':"")
print( df[ com_letras ] )
print( ""\n"")


# Criar uma TABELA VERDADE para selecionar
# as linhas não tem 2 espaços na coluna 'Dimensões':
dif_2espacos = df['Dimensões'].str.count(' ') != 2

print( ""# tabela verdade de linhas não tem 2 espaços na coluna 'Dimensões':"")
print(dif_2espacos)
print( ""\n"")


print( ""# df de linhas não tem 2 espaços na coluna 'Dimensões':"")
print(df[ dif_2espacos ])
print( ""\n"")


# Agora você pode utilizar bitwise `~` (NOT)
# para negar uma TABELA VERDADE e dessa forma
# transformar quem é TRUE em FALSE e vice-versa
# e depois bitwise `&` (AND) onde ambas tabelas 
# sejam verdadeiras, ou seja:
# sem_letras = ~com_letras
# tem_2espacos = ~dif_2espacos
# sem_letras_E_tem_2espacos = sem_letras & tem_2espacos
# df = df[ sem_letras_E_tem_2espacos ].copy()
df = df[ ~tem_letras & ~dif_2espacos ].copy()

print(""# df de linhas ( SEM letras AND COM 2 espacos ) na coluna 'Dimensões' :"")
print(df)

Exemplo Online - ideone

TL;DR;
df[ ~df['Dimensões'].str.contains(r'[A-Za-z]') &\
     (df['Dimensões'].str.count(' ') == 2) ]

Exemplo Online - ideone

","
            0
        ","['\npython', 'pandas', 'dataframe', 'data-science\n']"
517204,Acessar picker dialog seleniun que sugem no Google (Python),"
Olá
Sou iniciante na programação, e não consegui encontrar uma explicação de como resolver meu problema buscando na net. Eu estou tentando acessar um arquivo de planilha que está no meu Gdrive, por meio no MY MAPS:
# coding=utf-8
from selenium import webdriver
from time import sleep

navegador = webdriver.Chrome()
#Acessar no MyMaps Google
navegador.get(""https://www.google.com/intl/pt-BR/maps/about/mymaps/"")
navegador.find_element_by_xpath('/html/body/div[3]/div/div/p[2]/a').click()
# Logar na conta
navegador.find_element_by_xpath('//*[@id=""identifierId""]').send_keys('xxxxxxxxxxxxxxxxxxxxxxxxxxxx')
navegador.find_element_by_xpath('//*[@id=""identifierNext""]/div/button/span').click()
sleep(3)
navegador.find_element_by_xpath('//*[@id=""password""]/div[1]/div/div[1]/input').send_keys('xxxxxxxxxxxxxx')
navegador.find_element_by_xpath('//*[@id=""passwordNext""]/div/button/span').click()
sleep(3)
# Entrar no mapa
navegador.find_element_by_xpath('//*[@id=""docs-editor""]/div[2]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div').click()
sleep(3)
# Carregar a planilha
navegador.find_element_by_xpath('//*[@id=""ly0-layerview-import-link""]').click()
sleep(5)
#apertar google drive
navegador.find_element_by_xpath('//*[@id="":7""]/div').click()

Porém quando eu implemento a tentaiva de clicar para acessar o GDrive, no picker dialog que aparece, me retorna esse erro:
Traceback (most recent call last):
  File ""D:/Curso de Python/Jhony2/Automacao_seleniun.py"", line 18, in <module>
    navegador.find_element_by_xpath('//*[@id=""docs-editor""]/div[2]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div').click()
  File ""C:\Users\FRANCISCP\AppData\Local\Programs\Python\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 394, in find_element_by_xpath
    return self.find_element(by=By.XPATH, value=xpath)
  File ""C:\Users\FRANCISCP\AppData\Local\Programs\Python\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 978, in find_element
    'value': value})['value']
  File ""C:\Users\FRANCISCP\AppData\Local\Programs\Python\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute
    self.error_handler.check_response(response)
  File ""C:\Users\FRANCISCP\AppData\Local\Programs\Python\Python37\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@id=""docs-editor""]/div[2]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div""}
  (Session info: chrome=91.0.4472.124)

Imagino que eu tenha de entrar no picker dialog, para poder  manipular o que esta dentro dele. Alguém poderia me ajudar a implementar isso?

",,,,,"['\npython', 'google-chrome', 'selenium-webdriver\n']"
517165,Tenho uma duvida de como posso somar cada item de 2 listas e jogar o resultados da soma para uma terceira em python [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Soma de cada elemento de duas listas

                                (5 respostas)
                            

Fechada há 9 meses.



Estou com o seguinte programa
#Faça um programa  que percorra duas listas e gere uma terceira sem elementos repetidos.

x = []

y = []

z = []

while True:

    n = int(input(""digite um número(0 sai): ""))

    if n == 0:

        break

    x.append(n) and y.append(n + 1)

c = x[x] + n[x] 

#aqui sai a falha com TypeError: list indices must be integers or slices, not list


while c < len(z):

    z = [c]

    print(z[x])

    c += 1

minha duvida é como faço para somar cada item das listas x e y, após isso adicionar esses itens na lista z, como posso fazer isso?
","
Você quer somar os elementos das duas listas e colocar o resultado em uma terceira ou você quer juntar os elementos das duas listas em uma terceira sem repetir?
Caso 1 (somar):
x=[1,3,4]
y=[1,2,3]
z=[]
for i in range(len(x)):
      z.append(x[i]+y[i])

Resultado:
z=[2,5,7]

Caso 2 (juntar):
x=[1,3,4]
y=[1,2,3]
z=x+y
z=list(dict.fromkeys(z))
print(z)

Resultado:
z=[1,3,4,2]

Isso satisfaz sua dúvida?
","
            -1
        ",,,"['\npython', 'lista', 'append\n']"
517099,Python: Como buscar a data atual,"
Estou tentando buscar alguns arquivos de uma pasta que trás um padrão no nome do arquivo, no caso é 3067-EG3067000076 mais a data, porém como serão arquivos diários a data muda diariamente e também existe outro porém, como a data de quando baixo o arquivo vem do dia anterior preciso voltar um dia (por isso o day=1) e quando o arquivo é baixado na segunda feira preciso voltar 3 dias por isso o (days=3) pensando nessas variantes desenvolvi esse código, de primeiro momento ele funcionou mas agora não funciona mais, alguém teria uma sugestão de qual função usar para a data? ou uma sugestão de código?
import os
import calendar
from datetime import date
from pathlib import Path

data_atual = calendar.day_name[my_date.weekday()]
    
if data_atual == 'Monday':
    teste= 'true'
else: 
    teste= 'false'

if teste == 'true':
    data_atual = datetime.datetime.now() - datetime.timedelta(days=3)
    data_atual = (data_atual.strftime(""%Y%m%d""))
else:
    data_atual = datetime.datetime.now() - datetime.timedelta(days=1)
    data_atual = (data_atual.strftime(""%Y%m%d""))
    
os.rename(r'C:\Users\joao\Desktop\convenios\3067-EG3067000076' + str(data_atual) + '.CNV',r'C:\Users\joao\Desktop\convenios2\arquivo.CNV')

O código gera esse erro:

NameError Traceback (most recent call last)
 in  4 from pathlib import Path
5 ----> 6 data_atual = calendar.day_name[my_date.weekday()] 7 8 if
data_atual == 'Monday': NameError: name 'my_date' is not defined

","
A sua lógica está correta, mas há coisas esquisitas no seu código.
data_atual = calendar.day_name[my_date.weekday()]
    
if data_atual == 'Monday':
    teste= 'true'
else: 
    teste= 'false'


Na primeira linha do trecho de código, você faz my_date.weekday(), mas o objeto my_date nunca foi definido, ocasionando o erro que você citou nos comentários. Você comentou que ""a primeira vez funcionou"", mas provavelmente era outro código. Esse não funcionará nunca [exceto se existe código antes disso que não colocou na pergunta].

Não faz sentido você fazer teste = 'true'. Uma que o nome de variável teste é péssimo e não remete a nada o que a variável representa. Segundo que no Python existe o tipo booleano para esses casos, representados pelos valores True e False. Não há porque criar uma string para isso.


Em resumo, o que você precisa é sempre pegar o último dia útil, então você pode simplificar o código:
import datetime


def get_last_business_day():
    today = datetime.date.today()
    delta = max(1, (today.weekday() + 6) % 7 - 3)
    return today - datetime.timedelta(days=delta)

Para fins didáticos, chamaremos o valor dentro de max, (today.weekday() + 6) % 7 - 3, de x, para então montarmos a tabela a seguir relacionando o valor de today.weekday(), que remete a qual dia da semana estamos com o valor de x:




Dia
today.weekday()
x
max(1, x)




Segunda-feira
0
3
3


Terça-feira
1
-3
1


Quarta-feira
2
-2
1


Quinta-feira
3
-1
1


Sexta-feira
4
0
1


Sábado
5
1
1


Domingo
6
2
2





Nota: importante salientar que mesmo que no nosso calendário a semana inicia-se no Domingo, no Python o dia zero é a segunda-feira como opção dos criadores da biblioteca simplesmente para facilitar a verificação se é um dia útil ou não (day.weekday() < 5)

Desta forma, vemos que se for uma segunda-feira, iremos descontar 3 dias para obter a última sexta-feira; se for domingo, serão 2 dias; se for sábado, um dia; e se for qualquer outro dia, um dia também.
","
            2
        ","
Pelo que entendi, você quer fazer algo do género:
import datetime  
import calendar

dataHoje = datetime.datetime.now() #define a data de hoje
diaHoje = (calendar.day_name[dataHoje.weekday()]) #define o dia hoje
print(""data: "", dataHoje,""\ndia semana: "", diaHoje ) #apresenta os resultados

x = int(input(""Dias a retirar: "")) #escolher dias a voltar atrás

data = datetime.timedelta(days = x) #define os -x dias em formato data
finalData = dataHoje - data #define a data -x
finalDia = calendar.day_name[finalData.weekday()] #define o dia -x
print (""Data: "", finalData, ""\nDia: "", finalDia) #Apresenta o resultado

Isto vai lhe apresentar a data e dia, basta mudar o input do ""x"" para a sua variável que retira os dias. Agora, para fazer os ""if"" basta fazer o seguinte:
if (finalDia == ""Friday""):
    #Faz aqui o que quiser

Nota: O programa retira-me os dias em Inglês, tem de alterar o ""if"" com base naquilo que retirar no seu computador.
","
            0
        ",['\npython\n']
517050,Como verificar se uma variavel recebeu um valor novo em python?,"
tenho uma Thread de uma função que insere dados no banco e outra Thread que a cada segundo recebe um valor novo para uma variavel, contudo pode ser  o mesmo valor anterior só que ""novo"".
Queria saber como faço para a thread esperar esse  valor novo e toda vez que receber  esse  valor  novo fazer o insert no banco.
Uma parte do meu codigo  :
def EnviaBanco():
    global nomepessoa  # nomepessoa é uma variavel global em outra função, esse nomepessoa esta  dentro de um  while que  esta recebendo um novo valor  a  todo momento
    global cam
    Conectando banco de dados
    try:
        mydb = mysql.connector.connect(
          host=""localhost"",
          user=""teste"",
          password=""teste102030"",
          database=""teste""
        )
        print (""Conexão realizada com sucesso"")
    except:
        print(""[ERROR] verifique a conexão com banco  de dados"")
    
    while True:
    "" if nomeatual recebeu um novo valor: ""
        time.sleep(10.0)
        #Inicializando banco
        mycursor = mydb.cursor()
        #Inserindo dados
        sql = (""INSERT INTO teste (nomes, camera) VALUES (%s,%s)"")
        #Executando os dados  e comitando
        mycursor.execute(sql,(nomepessoa, cam))
        mydb.commit()
        print(""Dados inseridos com sucesso"")
'''

","
De uma forma genérica faça algo como:
class ConexaoBanco():
   _instance = None
   def __init__(self):
       pass

   @staticmethod
   def get_instance():
       if ConexaoBanco._instance == None:
          ConexaoBanco._instance = ConexaoBanco()
       return ConexaoBanco._instance

    def conecta(self):
        # conecta no banco
        self.mydb = mysql.connector.connect(
                                            host=""localhost"",
                                            user=""teste"", 
                                            password=""teste102030"",
                                            database=""teste""
                                          )
        self.mycursor = self.mydb.cursor()

    def getCursor(self):
        return self.myCursor()

    def close(self):
        self.mycursor.close()
         self.mydb.close()


def processaNome():
    # Pega cursor
    mydb = ConexaoDB().get_instance()
    mycursor = mydb.getCursor()
    #
    lastNome = None
    while True:
        # Pega o nome
        nomePessoa = ... # aqui o processo de pegar o nome.
        if nomePessoa != lastNome:
            sql = (""INSERT INTO teste (nomes, camera) VALUES (%s,%s)"")
            mycursor.execute(sql, (nomePessoa, cam))
            lastNome = nomePessoa
        time.sleep(10)

Nota: a classe ConexaoBanco pode ser melhorada. Mas o importante é a forma de manter o último nome pego.
Ainda, acredito que você não precise cada uma delas, ou seja pegar nome e inserir no banco, em uma thread diferente.
","
            0
        ","
Há o módulo queue e a classe Queue que permite fazer isso de forma segura.
Comunicação entre threads é tecnicamente complicada, não tente criar seu próprio esquema do zero.
Aliás, se puder evitar usar threads, use processos com um pipe entre eles. Vale até usar uma conexão TCP/IP local entre dois processos para que fiquem mais bem isolados.
","
            -1
        ","['\nmysql', 'python', 'thread\n']"
517021,Erro no get_absolute_url Django,"
Estou com o seguinte erro no django:

Reverse for 'list_produtos' with arguments '(2,)' not found. 1
pattern(s) tried: ['$']

Segue os códigos:
models.py
from django.db import models
from django.urls import reverse

class ListaManager(models.Manager):
    def get_queryset(self):
        return super(ListaManager, self).get_queryset().filter(disponivel = True)
    
class Departamento(models.Model):
    nome = models.CharField(max_length = 25)
    slug = models.SlugField(max_length = 100)
    pf = models.TextField()
   
    def _str_(self):
        return self.nome
    
class Produto(models.Model):   
    nome = models.CharField(max_length = 50)
    preco = models.DecimalField(max_digits = 100,decimal_places = 2)
    estoque = models.PositiveIntegerField()
    disponivel = models.BooleanField(default = False)
    descricao = models.TextField()
    departamento = models.ForeignKey(Departamento, related_name = 'departamento', null = True, on_delete = models.CASCADE)
    numero_produto = models.CharField(max_length = 8)
    slug = models.SlugField(max_length = 100)
    lista = ListaManager()

    def get_absolute_url(self):
        return reverse('main:list_produtos', args = [self.id])
    
    def _str_(self):
        return self.nome

class dProduto(models.Model):
    dp = models.ForeignKey(Produto, related_name = 'produto', null = True, on_delete = models.CASCADE)

urls.py
from django.urls import path
from .import views

from django.views.generic import TemplateView

app_name = 'main'

urlpatterns = [
    path('', views.list_produtos, name = 'list_produtos'),
    path('ajuda/', TemplateView.as_view(template_name = 'produtos/ajuda.html'),
         name = 'ajuda'),
    path('<int:p>', views.produtos_detail, name = 'produtos_detail'),
    ]

views.py
from django.shortcuts import render, get_object_or_404
from .models import Departamento, Produto

def list_produtos(request):
    produtos = Produto.lista.all()
    return render(request, 'produtos/list_produtos.html', {'produtos': produtos})

def produtos_detail(request, p):
    produtos = get_object_or_404(Produto, id = p)
    return render(request, 'produtos/produtos_datail.html', {'produtos': produtos})

","
Na função abaixo, você está passando como parâmetro o self.id
    def get_absolute_url(self):
        return reverse('main:list_produtos', args = [self.id])

A url não está preparada para receber parâmetros:
path('', views.list_produtos, name = 'list_produtos'),

Acredito que você esteja querendo isso:
    def get_absolute_url(self):
        return reverse('main:produtos_detail', args = [self.id])

Nota: reverse link para produtos_detail
","
            2
        ",,,"['\npython', 'django\n']"
517015,Não consigo entender meu erro com o FOR e DataFrame,"
Estou com um problema no meu for, onde todos os resultados estão saindo como mesmo valor dentro da DataFrame, mas eu n consigo entender o erro, alguem poderia me ajudar
import pandas as pd

BRICS=pd.DataFrame({'País':[""Brasil"",""Russia"",""India"",""China"",""Africa do Sul""],'Capital':['Brasilia','Moscou','Nova Deli','Beijing','Pretoria'],'Area':[8.516,17.100,3.286,9.597,1.221],'População':[200.40,143.50,1252.00,1357.00,52.98]})

print(BRICS,'\n')

for i in range(len(BRICS)):
  BRICS=BRICS.assign(Densidade=BRICS['População'].values[i]/BRICS['Area'].values[i])

print(BRICS)

","
A solução mais performática seria:
BRICS[""Densidade""] = BRICS['População'] / BRICS['Area']

Usar for, apply, assign com o auxílio de uma função (nomeada ou lambda) é mais lento.
Para maiores detalhes veja aqui
","
            1
        ","
Aparentemente, para ocupar a coluna Densidade você está criando a cada iteração do for um vetor que tem apenas o valor do cálculo de densidade para o elemento i. Como esse vetor tem um único elemento, ele é replicado por todas linhas do data frame.
O valor 43.390663 que seu código coloca é justamente o valor de Densidade para o último país do data frame.
Uma sugestão de código seria
import pandas as pd

BRICS=pd.DataFrame({'País':[""Brasil"",""Russia"",""India"",""China"",""Africa do Sul""],'Capital':['Brasilia','Moscou','Nova Deli','Beijing','Pretoria'],'Area':[8.516,17.100,3.286,9.597,1.221],'População':[200.40,143.50,1252.00,1357.00,52.98]})

print(BRICS,'\n')

BRICS = BRICS.assign(Densidade = lambda x: BRICS['População'] / BRICS['Area'])

print(BRICS)

Ou seja: substituir seu laço for por uma expressão lambda que o Pandas aplicará a todos elementos do vetor.
Esta solução permitirá otimizações, caso o Panda consiga distribuir as invocações da expressão lambda entre vários processadores.
","
            0
        ","['\npython', 'pandas', 'for', 'dataframe\n']"
516978,Reverse for 'add' with keyword arguments '{'product_id': 2}' not found. 1 pattern(s) tried: ['cart/add/<int:product_id>/'],"
Olá estou estudando Django e seguindo um tutorial cheguei a parte de adicionar um produto a minha sacola de compras, porém ao clicar no botão adicionar na sacola ele me retorna este erro:

O Traceback me leva até esta parte do código:

Meu código das urls.py está assim:
from django.urls import path
from .views import cart_detail, cart_add, cart_remove

app_name = ""cart""

urlpatterns = [
    path("""", cart_detail, name=""detail""),
    path(""add/<int:product_id>/"", cart_add, name=""add""),
    path(""remove/<int:product_id>/"", cart_remove, name=""remove""),
]

Meu cart_add que me redireciona para os detalhes do carrinho/sacola:
@require_POST
def cart_add(request, product_id):
    cart = Cart(request)
    product = get_object_or_404(Product, id=product_id)

    form = CartAddProductForm(request.POST)
    if form.is_valid():
        cd = form.cleaned_data
        cart.add(
            product=product, quantity=cd['quantity'], override_quantity=cd['override'],
        )

    return redirect('cart:detail')

E meu cart_detail está deste modo:
def cart_detail(request):
    cart = Cart(request)
    return render(request, 'cart/sacola.html', {'cart': cart})

A ação de adicionar no carrinho/sacola está da seguinte forma no meu html:
<form class=""form-group"" action=""{% url 'cart:add' product.id %}"" method=""POST"">
    <p class=""form-inline"">
       {{ form.quantity.label_tag }}
       {% render_field form.quantity class+=""form-control ml-sm-3"" %}
       {{ form.override }}
    </p>
    {% csrf_token %}
    <input class=""btn btn-success"" type=""submit"" value=""Adicionar à Sacola"">
</form> 

","
O erro era que eu fiz a adição no carrinho por session e então tirei os produtos do meu site, porem na session ficou gravado o produto e acabava dando erro quando tentava acessar o carrinho.
Solução: deletar a session e então iniciar uma nova.
","
            0
        ",,,"['\nhtml', 'python', 'django\n']"
516922,"django.urls.resolvers.URLResolver._reverse_with_prefix() argument after ** must be a mapping, not set","
Olá estou tentando fazer um e-commerce com Django, fui seguindo um tutorial até a criação dos produtos, a página funcionou ok (sem produtos e categorias), quando adicionei uma categoria e um produto pelo http://127.0.0.1:8000/admin/ ele me retornou este erro ao tentar entrar na url dos produtos (http://127.0.0.1:8000/products/).


O meu get_absolute_url está desta forma:
def get_absolute_url(self):
        return reverse(""products:detail"", kwargs={""slug"", self.slug})

ele está presente dentro do meu models, da seguinte forma:
class Product(TimeStampedModel):
    category = models.ForeignKey(Category, related_name=""products"", on_delete=models.CASCADE)
    name = models.CharField(max_length=255, blank=False)
    price = models.DecimalField(max_digits=12, decimal_places=2, blank=False)
    description = models.TextField(max_length=255, blank=True)
    image = models.ImageField(upload_to=""products/%Y/%m/%d"", blank=True)
    is_available = models.BooleanField(default=True)
    slug = AutoSlugField(unique=True, always_update=False, populate_from=""name"")

    objects = models.Manager()
    available = AvailableManager()

    class Meta:
        ordering = (""name"",)
    
    def __str__(self):
        return self.name

    def get_absolute_url(self):
        return reverse(""products:detail"", kwargs={""slug"", self.slug})

porém vejo que o erro esta dando ao entrar em /products/ e não em /products/nome_do_produto/
",,,,,"['\npython', 'django\n']"
516811,Receber dados em várias linhas,"
Eu preciso criar um código que vai calcular a media, variância e desvio padrão dos dados digitados pelo usuário.
Eu pensei em jogar esses dados em uma lista e a partir de então trabalhá-los. Porém, o usuário irá digitar cada número em uma linha. Capturar esses dados, cada um em uma linha, em uma lista está sendo minha dificuldade.
Tentei trabalhar com o módulo sys e colocar um laço dentro do sys.stdin:
for n in sys.stdin:
     for x in range(n):
          lista.append(n)


Mas eu tive alguns erros.
Alguém poderia me ajudar? Não quero necessariamente trabalhar com o módulo sys, apenas foi uma ideia.
","
Isabela, o erro provavelmente existe porque esse método geralmente deixa uma linha vazia depois de encerrado, o que pode estragar operações matemáticas. Tente adicionar x.rstrip() ao código e veja se isso soluciona.
Outro método é usando o fileinput:
import fileinput

for x in fileinput.input():
    lista.append(x)

O fileinput também tem a mesma questão da linha em branco, então o x.rstrip() também se faria necessário.
Caso precise usar uma melhor estrutura de dados mais pra frente, sugiro dar uma olhada na lib Pandas.
","
            -1
        ",,,['\npython\n']
516793,Como procurar texto parcial em uma lista de strings?,"
Eu tenho uma lista com vários elementos de texto, e eu gostaria de saber como eu posso encontrar um desses elementos procurando por uma parte do texto e não pelo texto exato.
Exemplo:
Lista = ['Jorge Henrique','Matheus Oliveira Santos','Sopa de batata doce','Algorítimos maravilhosos']

Agora imagine que eu quero encontrar o elemento que contém 'de bat'
que no caso seria 'Sopa de batata doce'.
Como eu posso fazer para encontrar dessa forma em Python e salvar em uma variável?
","
Você pode usar o operador in para verificar se uma string é uma substring de outra.
Só não ficou claro se você quer apenas uma das strings da lista (a primeira que encontrar, por exemplo), ou se quer todas que possuem a substring.

Se quiser apenas uma das strings, uma forma de fazer é:
elemento_encontrado = None
busca = 'de bat'
lista = ['Jorge Henrique', 'Matheus Oliveira Santos', 'Sopa de batata doce', 'Algorítimos maravilhosos']
for s in lista:
    if busca in s: # se ""de bat"" está contido na string
        elemento_encontrado = s
        break

if elemento_encontrado:
    print(elemento_encontrado) # Sopa de batata doce

Neste caso, eu paro assim que encontrar algum caso válido (o uso do break interrompe o loop, ou seja, ele para no primeiro caso que encontrar e nem olha para o restante). Depois eu só verifico se foi realmente encontrado alguma string e a imprimo.
Você ainda pode usar um bloco else no for, que é chamado caso ele não seja interrompido pelo break (ou seja, se nenhum caso for encontrado):
for s in lista:
    if busca in s: # se ""de bat"" está contido na string
        elemento_encontrado = s
        break
else:
    print('Nenhum elemento encontrado')


Agora se quiser todas as strings que contém a substring desejada, pode usar uma list comprehension para retornar uma lista com todos os casos:
busca = 'a'
lista = ['Jorge Henrique', 'Matheus Oliveira Santos', 'Sopa de batata doce', 'Algorítimos maravilhosos']
# obtém uma lista com todas as strings que contém ""a""
encontrados = [ s for s in lista if busca in s ]
print(encontrados) # ['Matheus Oliveira Santos', 'Sopa de batata doce', 'Algorítimos maravilhosos']

A linha encontrados = [ s for s in lista if busca in s ] é a list comprehension, e é equivalente ao for abaixo:
encontrados = []
for s in lista:
    if busca in s:
        encontrados.append(s)

Mas a list comprehension é mais sucinta e pythônica.
","
            2
        ","
Ola,
Existem os Operadores de associação do Python in e not in, que são usados ​​para testar se uma sequência é apresentada em um objeto. Você pode checar mais sobre eles aqui 
Para sua solução você pode fazer o seguinte
resultado = [valor for valor in lista if 'de bat'  in valor ]

","
            2
        ","['\npython', 'python-3.x', 'string', 'lista\n']"
516711,ValueError: invalid literal for int() with base 10: 'oito',"
Preciso fazer tratamentos caso o usuário digite algo que seja diferente de valores numéricos, quando digito valores numéricos o programa roda legal, mas quando digito strings ele apresenta erros.

Traceback (most recent call last):
File ""C:\Users\Aluno\PycharmProject\guppe\Pacote\dados.py"", line 4, in leiaDinheiro
n = int(input(msg))
ValueError: invalid literal for int() with base 10: 'oito'

def leiaDinheiro(msg):
    while True:
        try:
            n = int(input(msg))
        except (ValueError, TypeError):
            print(f'\033[0;31mERRO: \""{n}\"" por favor, digite um número inteiro válido.\33[m')
        else:
            return n

from Pacote import moeda
from Pacote import dados
p = dados.leiaDinheiro('Digite o preço: R$ ')
moeda.resumo(p,20 ,12)

Digite o preço: R$ 200
------------------------------
       RESUMO DO VALOR        
------------------------------
Preço analisado:    R$200,00
Dobro do preço:     R$400,00
Metada do Preço:    R$100,00
20% de aumento:     R$240,00
12%: de redução     R$176,00
------------------------------

","
Bom isso que está tentando fazer chamamos de tratamento de erros e exceções, em Python usamos try: e except:
recomendo que de estude a documentação oficial referente a esse assunto.
Analisando seu código o tratamento esta feito porem no erro você manda a mensagem contendo o numero que naquele momento não foi declarado,
fazendo as alterações a baixo você consegue ter o resultado.
def leiaDinheiro(msg):
while True:
    try:
        n = int(input(msg))
        return n
        break
    except ValueError:
        print(f'\033[0;31mERRO: por favor, digite um número inteiro válido.\33[m')

leiaDinheiro('Digite o preço: R$ '))

","
            -2
        ",,,['\npython\n']
516697,Como carregar dinamicamente staticfiles CSS e Javascripts em Django,"
Estou escrevendo em Python com Django. Como prática comum, criei um template ""base.html"" que depois vai ser estendido por várias outras páginas. Cada uma vai ter o seu ficheiro CSS e o seu próprio ficheiro Javascript, portanto, embora sejam ficheiros ""estáticos"", eles são carregados dinamicamente conforme o doc HTML.
Encontrei duas soluções que ambas funcionam mas não sei se alguma delas dará problemas mais tarde.
1ª solução: Definir um bloco para as linhas com as tags de link e script; assim:
base.html:
<!DOCTYPE html>
<html lang=""pt"">
  <head>
...
{% block 'estilos' %}{% endblock %}
{% block 'scripts' %}{% endblock %}
...

file.html:
{% load static %}
{% block 'estilos' %}
<link rel=""stylesheet"" type=""text/css"" href=""{% static 'nome_da_app/style.css' %}"">
{% endblock %}
{% block 'scripts' %}
<script src=""{% static 'nome_da_app/javascript.js' %}""></script>
{% endblock %}

A 2ª solução, levou-me a criar um bloco apenas no sítio onde carrego o ficheiro, e é a forma que adotei e estou atualmente a utilizar:
base.html:
<!DOCTYPE html>
<html lang=""pt"">
  <head>
      <link rel=""stylesheet"" type=""text/css"" href=""{% block 'estilos' %}{% endblock %}"">
      <script src=""{% block 'scripts' %}{% endblock %}""></script>
  </head>

file.html:
{% extends 'base.html' %}
{% load static %}
{% block 'estilos' %}
{% static 'nome_da_app/style.css' %}
{% endblock %}
{% block 'scripts' %}
{% static 'nome_da_app/javascript.js' %}
{% endblock %}

Esta última solução tem um handicap que só agora a expor a questão é que me apercebi: é que só permite o carregamento de um e apenas um ficheiro de estilos e Javascript.
Mas em termos de funcionalidade, penso que ambas funcionarão corretamente?
Já agora aproveito para expor mais um problema que estava tendo: as alterações de CSS que eu ia fazendo não se refletiam e quando abria o editor de estilos das ferramentas de programador web do meu Firefox, nem as regras que lá estavam eram as atuais. ""Vi-me grego"" até conseguir resolver o problema!
SOLUÇÃO: Nas mesmas ferramentas de programador web, separador ""Rede"", há uma caixa de seleção de nome ""Desativar cache"" que ao ativar me resolveu o problema.
PS: É a minha primeira publicação, desculpem-me se estará um pouco atabalhoada, mas melhorarei no futuro.
Cumprimentos e saúde a todos!
Johnny
","
Tente assim:
base.html
{% block scripts %}
<script src=""caminho_1/script.js""></script>
...
<script src=""caminho_N/script.js""></script>
{% endblock %}

Deixa no base os que precisam estar em todas as páginas, e os adicionais pra páginas especificas, chama o bloco e adiciona nela mesmo, tipo:
template_qualquer.html
{% block scripts %}
<script src=""caminho_extra_do_template/script.js""></script>
...
<script src=""caminho_extra_do_template_N/script.js""></script>
{% endblock %}

","
            0
        ",,,"['\npython', 'css', 'django\n']"
516676,PANDAS - PYTHON - LOCALIZAR VALORES DIFERENTES,"
Boa tarde a todos!
Estou iniciando alguns estudos de Python e para por em pratica estou tentando otimizar algumas rotinas para o meu trabalho.
No setor onde trabalho temos o habito de cruzar muitos dados, principalmente os telefones de clientes, as vezes usamos Excel para fazer um PROCX ou V, mas decidi dar uma otimizada nas rotinas.
No caso estou usando a biblioteca pandas e tenho duas colunas iguais.
DF1 = NUMEROS JA USADOS
DF2 = NUMEROS QUE VOU USAR
Meu objetivo é fazer um cruzamento gerando um terceiro Data frame, onde os números que vou usar cruze com o já usados e retorne apenas os valores que não se repetem.
Esse terceiro DF seria meu arquivo final onde teria apenas oque não teria sido discado.
import pandas as pd

###LENDO ARQUIVO NOVO
Novo_Mailing_df = pd.read_csv('Novo_Mailing.csv')

Display('Novo_mailing_df)

0   21900000001
1   21900000002
2   21900000003
3   21900000004
4   21900000005
5   21900000006
6   21900000007
7   21900000008
8   21900000009
9   21900000010
10  21900000011
11  21900000012
12  21900000013
13  21900000014
14  21900000015
15  21900000016
16  21900000017
17  21900000018
18  21900000019
19  21900000020
20  2122771300
21  2122771301
22  2122771302
23  2122771303
24  2122771304
25  2122771305
26  2122771306
27  2122771307
28  2122771308
29  2122771309

###UPANDO JA TRABALHADOS
Discados_Callflex_df = pd.read_csv('Discados_Callflex.csv')

display(Discados_Callflex_df)

0   21900000001
1   21900000002
2   21900000003
3   21900000004
4   21900000005
5   21900000006
6   21900000007
7   21900000008
8   21900000009
9   21900000010
10  21900000011
11  21900000012
12  21900000013
13  21900000014
14  21900000015
15  21900000016
16  21900000017
17  21900000018
18  21900000019
19  21900000020

###USANDO OS JOINS PARA RETORNAR A DIFERENÇA

cruzamento_df = pd.merge(Novo_Mailing_df, Discados_Callflex_df, how='outer', on='telefone', indicator=True)

display(cruzamento_df)

0   21900000001 both
1   21900000002 both
2   21900000003 both
3   21900000004 both
4   21900000005 both
5   21900000006 both
6   21900000007 both
7   21900000008 both
8   21900000009 both
9   21900000010 both
10  21900000011 both
11  21900000012 both
12  21900000013 both
13  21900000014 both
14  21900000015 both
15  21900000016 both
16  21900000017 both
17  21900000018 both
18  21900000019 both
19  21900000020 both
20  2122771300  left_only
21  2122771301  left_only
22  2122771302  left_only
23  2122771303  left_only
24  2122771304  left_only
25  2122771305  left_only
26  2122771306  left_only
27  2122771307  left_only
28  2122771308  left_only
29  2122771309  left_only


Foi isso que fiz por hora, mas apenas consigo usar maneiras de devolver oque tem em comum entre um e outro, porem meu objetivo é devolver oque tem tem de diferente entre eles.
Meu objetivo final é saber se no que eu quero trabalhar hoje ja foi trabaçhado em algum outro dia, e no DF novo devolver só oque não trabalhei.
","
Você pode utilizar o isin do pandas
Importando o pandas
import pandas as pd

Criando os dataframes:
Novo_Mailing_df = pd.read_csv('../DADOS/Novo_Mailing.csv', sep = ';', names=['Coluna1'])
Discados_Callflex_df = pd.read_csv('../DADOS/Discados_Callflex.csv', sep = ';', names=['Coluna1'])

Aqui é a parte onde verificamos se valores de um dataframe estão presentes no outro:
Novo_Mailing_df[~Novo_Mailing_df['Coluna1'].isin(Discados_Callflex_df['Coluna1'])]

Saída:





Coluna1




20
2122771300


21
2122771301


22
2122771302


23
2122771303


24
2122771304


25
2122771305


26
2122771306


27
2122771307


28
2122771308


29
2122771309



 ","
            0
        ",,,"['\npython', 'pandas', 'join\n']"
516655,"Quando uso reverse() a saída é ""None"" [duplicada]","






Essa pergunta já tem respostas aqui:
                        
                    



Método reverse retorna None

                                (5 respostas)
                            

Fechada há 9 meses.



continua = 'p'
valores = [] 
cinco = 5 
while continua != 'n':
   valores.append(int(input('Digite um numero')))
   continua = input('Deseja continuar? [S/N]').lower().strip()[0]
   
   if continua =='n':
       print('Fechando programa')
       break
   if continua =='s':
       print('Continuando o programa.')
    

print(f'Foram digitados {len(valores)} valores \n Sendo eles {valores.reverse()} \n ', 'Não teve 5 na lista.'if not 5 in valores else 'Teve 5 na lista.' )

Quanto tento rodar esse codigo na parte do print 'sendo eles' ele me retorna ' none ' 
ficando assim 
' Foram digitados 3 valores
 Sendo eles None
  Não teve 5 na lista.' 

","
Tente usar o reverse antes do print
continua = 'p'
valores = [] 
cinco = 5 

while continua != 'n':
   valores.append(int(input('Digite um numero')))
   continua = input('Deseja continuar? [S/N]').lower().strip()[0]
   
   if continua =='n':
       print('Fechando programa')
       break
   if continua =='s':
       print('Continuando o programa.')

    
valores.reverse()

print(f'Foram digitados {len(valores)} valores \n Sendo eles {valores} \n ', 'Não teve 5 na lista.'if not 5 in valores else 'Teve 5 na lista.' )

","
            0
        ",,,['\npython\n']
516613,editar função python,"
Estou escrevendo um algoritmo que calcula a media de variáveis continuas e eu passo para ele uma função com a função especifica:
def media_variavel_continua(func, ini, fim):
    return quad(func, ini, fim)


resp = media_variavel_continua(lambda x: (x**2)/3, 1, 3)

Acontece que a media de uma variável continua é a própria função vezes 'x', então eu queria conseguir reescrever dentro media_variavel_continua() a função passada.
No exemplo a cima a função (x^2)/3 no final teria que ficar x*(x^2)/3.
Existe alguma forma de fazer isso?
","
Como comentado, você não precisa editar a função, basta criar uma nova que faz o proposto:
def media_variavel_continua(func, ini, fim):
    return quad(lambda x: x*func(x), ini, fim)

","
            0
        ",,,"['\npython', 'python-3.x\n']"
516578,Como ocultar um print após a função sleep no pycharm [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





tipo
from time import sleep
print('Loading ...')
sleep(3)
eaí ? depois do sleep, como ocultar o print 'Loading'?
porfavor, resposta mais simplificada possível, sou novato rs
ps: estou tentando fazer isto no pycharm e uso windows
",,,,,['\npython\n']
516538,Como declarar que um campo tem o mesmo tipo de sua classe?,"
Estou tentando adicionar tipagem no código em Python, e me deparei com um erro ao tentar anotar o tipo de uma propriedade que deve ter o mesmo tipo da classe em que ela é declarada:
from typing import Generic, TypeVar, Optional

T = TypeVar('T')

class Node(Generic[T]):
    value: T
    next: Optional[Node[T]]
                   ^ esse tipo não é reconhecido

Sei que o modo que eu anotei o tipo está correto, pois quando eu utilizo esse mesmo tipo em outra classe, eu não tenho erros:
class LinkedList(Generic[T]):
    head: Optional[Node[T]]
    tail: Optional[Node[T]]
                   ^ aqui funciona normalmente

Porém essa sintaxe não é valida dentro da classe Node. Como posso fazer para tipar a propriedade next dentro de Node?
","
Solução
Troque:
next: Optional[Node[T]]

Para:
next: Optional['Node[T]'] # agora como string

Problema e motivação
O problema é que no ponto em que o next está a ser construído a classe Node ainda não existe. O próprio erro é indicativo disso:

Unresolved reference 'Node'

Olhando para o PEP 484 em Forward Declarations consegue ver o mesmo problema sendo detalhado:

The current proposal is admittedly sub-optimal when type hints must contain forward references. Python requires all names to be defined by the time they are used

Traduzindo:
A proposta corrente é claramente não otima para tipos com referencias futuras. Python obriga a que todos os nomes estejam definidos no momento em que são utilizados.
Depois indicam como resolver:

Our solution, which isn't particularly elegant, but gets the job done, is to allow using string literals in annotations

Traduzindo:
A nossa solução que não é particularmente elegante, mas que resolve o problema, passa por possibilitar a utilização de strings nas anotações.
","
            4
        ",,,"['\npython', 'tipagem\n']"
516470,Como verificar quantas vezes aparece o número 2 dentro de uma matriz?,"
Meu objetivo neste algoritmo é encontrar quantas vezes aparece o número 2 dentro de uma matriz 8x3.
Meu resultado até o momento está assim:
from collections import Counter
import time
import numpy as np

m = int(input('Quantas linas? '))
n = int(input('Quantas colunas? '))

input(""Será aceito somente números entre -20 e 10.\n ... \nPrecione a tecla ENTER para continuar!\n"")
time.sleep(2)

matrizA = list()
for c in range(1, m + 1):
    linha = list()
    for i in range(1, n + 1):
        while True:
            try:
                valor = int(input(f'Digite o {i}º elemento da {c}ª linha: '))
                break
            except ValueError:
                print('\033[31mValor INVÁLIDO! Digite apenas valores inteiros!\033[m')
        linha.append(valor)
    matrizA.append(linha)

matriz = np.array(matrizA)
print(f'\033[32mA matriz gerada é:\n{matriz}\033[m')

c = Counter(matrizA)
print(c[2])

Eu consegui fazer a matriz e tentei usar o import Counter para retornar o resultado da repetição do número 2 dentro da matriz. Porém o resultado não saiu como eu queria.
","
Sua matrizA é na verdade uma lista de listas: é uma lista na qual cada elemento é outra lista (e essas sim tem números).
Então basta percorrer as ""linhas"" (na verdade, as listas), e depois percorrer os elementos de cada linha e ver se o valor é 2:
cont = 0
for linha in matrizA:
    for num in linha:
        if num == 2:
            cont += 1

Mas para obter a contagem de um único elemento você também pode usar o método count:
cont = 0
for linha in matrizA:
    cont += linha.count(2)

E por fim, pode usar sum (que soma uma série de valores) juntamente com uma  generator expression, bem mais sucinta e pythônica:
cont = sum(linha.count(2) for linha in matrizA)

","
            2
        ","
Pode utilizar a biblioteca numpy, por exemplo:
np.count_nonzero(matriz == 2)         

","
            1
        ","['\npython', 'python-3.x\n']"
516439,Duvida sobre python/algoritmos básicos,"
Estou fazendo um desafio pessoal,desenvolver o menor programa possivel de gere uma sequencia de fibonati e que mostre a relacao de fi(numero de ouro).
Codigo mais recente :
nf = int(input(""Quantos numeros da sequencia de fibonati voce quer ?""))
t = 0
tt = 1
ttt = 1
tf = 0


def fibo(a, b, c, d):
    d = a
    c = b + a
    print(""{} - "".format(a),end='')
    a = b
    b = c
    return a, b, c, d


for i in range(nf):
    t,tt,ttt,tf = fibo(t, tt, ttt, tf)
print(tf,""."")
print(tt / t)

O problema aparece quando tento finilizar,a queria que a sequencia termisse com um ""."".Como percebesse no codigo eu tentei usar um quarto arguemnto na funcao,mas ele recebe o ultimo valor de t,entao acaba que nao adianta de muita coisa.
Não sei como que posso fazer,e essa é a minha duvida,e caso alguem posso me dar conselos de como eu posso diminuir ainda mais o codigo eu ficaria bastante agradecido >.</
","
consegui fazer o que eu quero,mas aqui tem 20 linhas,caso de pra diminuir me fala ai =)
nf = int(input(""Quantos numeros da sequencia de fibonati voce quer ?""))
t = 0
tt = 1
ttt = 1
print(""{} - "".format(t),end="""")


def fibo(a, b, c):
    c = b + a
    print(""{} - "".format(b),end='')
    a = b
    b = c
    return a, b, c,


for i in range(nf - 2):
    t,tt,ttt = fibo(t, tt, ttt)
print(ttt,""."")
print(tt / t)

","
            -1
        ",,,"['\npython', 'algoritmo\n']"
516374,Como remover \n ao ler linhas de um arquivo,"
Estou fazendo um gráfico usando um arquivo CSV por meio do matplotlib, porém quando printo percebo que ele fica com \n no final de cada linha, a questão é como posso resolver?
Meu código:
import matplotlib.pyplot as plt

def func(a):
    lista = []
    for i in a:
        lista.append(i)
    return lista

lst = open((""wealth-per-country.csv""), ""r"").readlines()
with open(""wealth-per-country.csv"", ""r"") as lst:
    print(func(lst.readlines()))

Como ele printa:
['Country,Median_Wealth,Mean_Wealth,Population\n', 'Switzerland,""227,891"",""564,653"",""6,866""\n', 'Australia,""181,361"",""386,058"",""18,655""\n', 'Iceland,""165,961"",""380,868"",250\n', 'Hong Kong,""146,887"",""489,258"",""6,267""\n', 'Luxembourg,""139,789"",""358,003"",461\n', 'Belgium,""117,093"",""246,135"",""8,913""\n', 'New Zealand,""116,433"",""304,124"",""3,525""\n', 'Japan,""110,408"",""238,104"",""104,963""\n', 'Canada,""107,004"",""294,255"",""29,136""\n', 'Ireland,""104,842"",""272,310"",""3,491""\n', '\n']

","
Duas formas: (Existem várias)
import matplotlib.pyplot as plt

def func(a: str):
    lista = []
    for i in a:
        lista.append(i.replace('\n', ''))
    return lista

lst = open((""wealth-per-country.csv""), ""r"").readlines()
with open(""wealth-per-country.csv"", ""r"") as lst:
    print(func(lst.readlines()))
    
# OU

def func(a):
    lista = []
    for i in a:
        lista.append(i)
    return [barraN.replace('\n', '') for barraN in lista]

lst = open((""wealth-per-country.csv""), ""r"").readlines()
with open(""wealth-per-country.csv"", ""r"") as lst:
    print(func(lst.readlines()))

","
            0
        ",,,"['\npython', 'python-3.x\n']"
516343,Como mudar a cor do texto fora de uma função Tkinter?,"
Estou tentando mudar a cor de um texto fora de uma função com Tkinter. Já tentei colocar o Label dentro da função mas fica sobrescrevendo um texto sobre o outro.
Segue o código.
from tkinter import *
from tkinter import ttk
import tkinter as tk

var_35='black'
fg1='black'

master = Tk()
master.geometry('850x700')
master.title('Vias Size')


w = Canvas(master, width=600, height=400, bg='white')
w.grid(row=20,column=0, columnspan=10)



def Solve():
    global fg1
    wth = int(cth.get())
    fg1='black'
    ring = ""Ring size = %d µm"" % (wth)
    if wth>120:
        fg1 = 'orange'
        print (fg1)
        var12.set(ring)
    elif wth>80:
        fg1= 'red'
        print (fg1)
        var12.set(ring)
    else:
        print (fg1)
        var12.set(ring)


var_1=StringVar()
Label_10 = Label(master, textvariable = var_1,font=('Arial',15),padx=5).grid(row=1,column=0, columnspan=5)

var12=StringVar()
print(fg1)
Label_12 = tk.Label(master, textvariable=var12, font=('Arial',12),padx=5, fg=fg1, bg='white').place(x=80, y=440)


Button(master, text='Solve',font=('Arial',14), command=Solve).grid(row=10,column=7, columnspan=1)

cth = ttk.Combobox(master, values=('25','35', '50','100', '150', '200'),font=('Arial',12) ,width=8)
cth.current(0)
cth.grid(row=6,column=3, columnspan=1)

mainloop()


","
Olá, tudo bem?
Bom primeiro temos que resolver um problema no código acima...
Você atribuiu a variável Label_12 a instancia de um Label já com o place, isso impossibilita você a trabalhar com as propriedades do Label, então primeiro você instancia o Label e depois realiza o place
    Label_12 = tk.Label(master, textvariable=var12, font=('Arial',12),padx=5, fg=fg1, bg='white')
    Label_12.place(x=80, y=440)

Agora dentro da função aplique o seguinte comando:
    **Label_12['foreground'] = fg1**

Assim você altera a cor de acordo com o parâmetro da função....
o seu código ficaria assim:
#########################################################

#########################################################
Uma outra dica, evite usar variável global, isso pode te causar alguns problemas para você, aplique a variável como parâmetro da função, ficaria melhor
Espero ter ajudado.
","
            -1
        ",,,"['\npython', 'tkinter\n']"
516327,Carregar várias funções na pagina principal usando django,"
Estou com um problema ao tentar carregar alguns dados do banco de dados mysql usando django, tipo as funções só funcionam se eu atribuir no arquivo: urls.py o seguinte atributo:
path('', views.countregistered)

Porém este atributo já é usado para a pagina index.html como mostra abaixo:
path('', views.index, name='home')

Se eu inserir vários atributos como este apenas o primeiro é executado e o resto é ignorado, acredito não ser o correto, eu tenho várias funções para serem exibidas na página inicial que são carregadas apartir do banco de dados porém se eu digitar apenas o elemento com as funções na página html não funciona.
Grato pela ajuda, estou iniciando agora em django.
","
A função path que você está utilizando serve para registrar URLs, sendo que o primeiro parâmetro que você passa para essa função é uma string com a URL que você deseja registrar. Então quando um usuário escreve no navegador o caminho para o seu site: ""www.nome-do-seu-site.com/"", o servidor tentará localizar uma URL que bate com a que o usuário informou.
Como você já mencionou, a página index já esta registrada com uma string vazia:
path('', views.index, name='home')

No entanto você está tentando registra outra URL com a mesma string:
path('', views.countregistered)

Assim quando o servidor tenta fazer a resolução da URL existem duas iguais, por isso apenas uma das funções é utilizada. Então quando você for registrar uma URL com o path, use diferentes strings, por exemplo:
path('count-registered/', views.countregistered)

Logo cada caminho direcionará para sua função correlatada.
Também sugiro que você leia a documentação para compreender melhor o uso da função path e boas práticas em seu uso.
https://docs.djangoproject.com/pt-br/3.2/ref/urls/
","
            0
        ",,,"['\njavascript', 'html', 'python', 'django', 'view\n']"
516326,"Como usar ""objects.filter"" selecionando somente o usuário logado na aplicação?","
Estou usando a autenticação do django e nos templates HTML funciona muito bem quando eu uso por exemplo:
{% if user.is_anonymous %}
...
{% else %}
...
{% endif %}

Gostaria de usar esse mesmo ""user"", que se refere ao usuário logado, para fazer um select no momento de carregar uma view.
Como estou tentando fazer:
class IndexView(TemplateView):
    template_name = 'index.html'

    def get_context_data(self, **kwargs):
        context = super(IndexView, self).get_context_data(**kwargs)
        context['tabelas'] = Tabela.objects.filter(**usuario=user.id**)
        return context

Gostaria de pegar id do usuário logado que tem uma ForeignKey com Tabela e assim selecionar somente os dados que importam. Mas ocorre o erro:
NameError at /
name 'user' is not defined
Request Method: GET
Request URL:    http://127.0.0.1:8000/
Django Version: 3.2.4
Exception Type: NameError
Exception Value:    
name 'user' is not defined

Alguém sabe como eu faço para usar o usuário logado nesse trecho ?
","
Fuçando um pouco e enchendo o código de print(), descobri uma maneira de fazer, segue:
class IndexView(TemplateView):
    template_name = 'index.html'

    def get_context_data(self, **kwargs):
        context = super(IndexView, self).get_context_data(**kwargs)
        req_user_pk = context[""view""].request.user.pk
        context['tabelas'] = Tabela.objects.filter(usuario=req_user_pk)
        #context['tabelas'] = Tabela.objects.order_by('id')
        return context

Se alguém tem uma sugestão melhor, sou todo ouvidos :)
","
            1
        ",,,"['\npython', 'django', 'django-templates\n']"
516272,Python Any checa demais elementos mesmo retornando uma opção True com o primeiro,"
Estou com uma dúvida com relação ao funcionamento do built-in any do Python:
variavel = None

any([not variavel, variavel.get(""chave1""), variavel.get(""chave2"")])

Ao meu ver, se o primeiro item do a lista fosse True, o any já retornaria True e vida que segue.
Na própria documentação, mostra um exemplo equivalente ao que eu acreditava que seria o comportamento correto.
Porém, fui testar no terminal dentro do Pycharm:

E aparentemente, mesmo a primeira condição retornando True, ele continua checando os demais itens. Eu acredito que estou fazendo alguma caquinha, mas já testei em outros ambientes e o resultado que encontro é o mesmo. Todos os ambientes estão utilizando Python 3.8.3.
","
Quando você faz:
variavel = None

any([not variavel, variavel.get(""chave1""), variavel.get(""chave2"")])

É ""o mesmo"" que você tivesse feito:
variavel = None
lista = [not variavel, variavel.get(""chave1""), variavel.get(""chave2"")]
any(lista)

O interpretador precisa ler, executar e criar sua lista antes de passar para a função any.
Se você espera se aproveitar do comportamento ""short-circuit"" da linguagem você tem duas opções:

Usando IF, assim o interpretador não executa nada depois de saber que o resultado é verdadeiro. Exemplo:
variavel = None
if (
    not variavel
    or variavel.get(""chave1"")
    or variavel.get(""chave2"")
):
    print(f""Usando IF: True"")
else:
    print(f""Usando IF: False"")


Usando um gerador de valores juntamente com o any, assim o any só lê o primeiro valor e já retorna o resultado, nunca executando o código que gera o erro. Exemplo:
def gera_valores():
    variavel = None
    yield not variavel
    yield variavel.get(""chave1"")
    yield variavel.get(""chave2"")

resultado = any(gera_valores())
print(f""Usando ANY: {resultado!r}"")  # True



Códigos rodando no Repl.it
","
            7
        ",,,['\npython\n']
516252,"Como retirar o texto de um site e colocar em uma variável, quando não encontra com o xpath o caminho","
Bom dia!
Estou tentando extrair de um site um texto que é variavel, porém ele não encontra o elemento com o find_element_by_xpath ou com o wait.until(EC.visibility_of_element_located((By.XPATH,'xpath'
O código do site nessa parte é:

Eu queria especificamente colocar o 0 em uma variável e o 1 em outra, porém ele não encontra esse elementos dessa forma.
O código que tenho até agora dessa parte em específico é:
gols_h = driver.find_element_by_xpath('//*[@id=""root""]/div/section/section/main/div/div/div[2]/div/div/div[2]/text()[2]').text
gols_a = wait.until(EC.visibility_of_element_located((By.XPATH, '//*[@id=""root""]/div/section/section/main/div/div/div[4]/div/div/div[1]/div[4]/span/text()[3]'))).text

Esse placar do jogo tem em duas partes do site, porém são similares... por isso estou tentando dessa duas formas com 2 xpaths diferentes, mas ambos não retorna um valor nas variaveis gols_h/gols_a
Sei também que xpath desse jeito ão é o ideal, mas esse site é um problema pois os lugares tem nomes iguais, e é mal separado as classes, por isso usei o xpath mesmo.
Qual seria a forma de conseguir extrair essas infos?
",,,,,['\npython\n']
516217,Django: Otimizar buscas no Banco de Dados,"
Estou com dúvida no seguinte exercício:  A rota /albums/ está retornando uma listagem dos albuns com os artistas do album, porém em alguns de nossos clientes
que utilizam bancos armazenados em servidores próprios ela está muito lenta. Ao acompanhar as consultas SQL com um
profiler foi detectado que está sendo realizado muitas consultas no banco e isso está causando a lentidão
isso é que está representado na view:
class AlbumListAPIView(ListAPIView):
    queryset = Album.objects.all()
    serializer_class = AlbumSerializer

existe alguma forma de otimizar essa queryset ?
","
Fala aí, Dev. Acredito que já tenha encontrado uma boa solução para sua pergunta, mas percebi que ela não havia sido diretamente respondida e decidi compartilhar um artigo que já me ajudou.
Possivelmente, sua model Album deve ter um relacionamento com a model Artista. É provável que seja um relacionamento ManytoMany:
class Album(models.Model):
    artistas = models.ManyToManyField(Artista)

Se esse for o caso, vou apontar uma solução de diminua suas consultas ao banco.
class AlbumListAPIView(ListAPIView):
    queryset = Album.objects.prefetch_related('artistas').all()
    serializer_class = AlbumSerializer

Independentemente do número de álbuns ou de artistas que o seu banco tiver, apenas 02(duas) consultas serão realizadas pelo Python. Uma para pegar os álbuns e outra para pegar os artistas. Contudo, usar filtros nas QuerySets pode ajudar no tráfego de dados úteis.
O artigo, que me ajudou no passado ainda está no ar: http://pythonclub.com.br/django-introducao-queries.html
Um artigo mais recente sobre otimização:
https://betterprogramming.pub/django-select-related-and-prefetch-related-f23043fd635d
","
            0
        ",,,"['\npython', 'django', 'mysqli', 'aplicação-web\n']"
516210,Problema onde o IF e ELIF não funcionam em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Primeira vez programando, comecei há uma semana e decedi tentar algo. Porém, eu estou com um problema onde, não importa o que eu coloque na váriavel, ela sempre mostra o mesmo resultado, que no caso é :""StreamShop, R$89,99"".
Já tentei definir o tipo da váriavel para str, re-escrever todo o código, diminuir a quantidade de caracteres, nada funcionou. Estou usando o Colab da google para programar.
x = input(""Diga-me a estação que deseja fazer a compra: \n"")

if x.lower() == ""verão"" or ""verao"":
  print(""StreamShop,"",""R$89,99"")

elif x.lower() == ""primavera"":
  print(""Loajing,"", ""R$84,00"")

elif x.lower() == ""outono"":
  print(""Showpping,"", ""R$73,00"")

elif x.lower() == ""inverno"":
  print(""Loajing,"", ""R$139,00"")

else:
  print(""Valor inválido"")


","
Problema:
O fluxo do seu código sempre cairá em print(""StreamShop,"",""R$89,99""). Isso porque na linha...
if x.lower() == ""verão"" or ""verao"":

...está sendo instruindo ao programa a realizar a seguinte sequencia de operações:

x.lower() == ""verão"" uma operação para comparar a igualdade entre dois valores cujo o resultado poderá retornar True ou False dependendo do valor de x.lower() ser igual ou não a string verão. O que implica em duas possíveis expansões para expressões:

True or bool(""verao"") no caso de x.lower() == ""verão"" resultar True.

False or bool(""verao"") no caso de x.lower() == ""verão"" resultar False.


Porém como visto nessa resposta o operador lógico or retorna True bastando uma de suas premissas ser verdadeira, então em True or bool(""verao"") o interpretador automaticamente prossegue expandindo a expressão para apenas True assim ignorando a parte expressão da expressão or bool(""verao"") pois seu resultado é irrelevante.
Já em False or bool(""verao"") o interpretador converte bool(""verao"") em True usando o procedimento de teste de verdade, assim ignorando a parte expressão da expressão False or pois seu resultado é irrelevante.
Então não importado o valor de x.lower() pois x.lower() == ""verão"" or ""verao"" sempre será True e o fluxo do seu código sempre cairá em print(""StreamShop,"",""R$89,99"").
Solução 1:
Um reparo imediato no seu código seria na primeira comparação testar se x.lower() está contido no conjunto de palavras {""verão"", ""verao""} utilizando o operador in:
x = input(""Diga-me a estação que deseja fazer a compra: \n"").lower()

if x in {""verão"", ""verao""}:
  print(""StreamShop,"",""R$89,99"")    
elif x == ""primavera"":
  print(""Loajing,"", ""R$84,00"")    
elif x == ""outono"":
  print(""Showpping,"", ""R$73,00"")    
elif x == ""inverno"":
  print(""Loajing,"", ""R$139,00"")    
else:
  print(""Valor inválido"")

Teste o exemplo no Repl.it
Solução 2:
Pessoal mais idoso costumam escrever primavéra, verão, outôno e invérno, então outra possibilidade de reparo seria remover toda a acentuação da entrada utilizando o método unicodedata.normalize() para obter o equivalente unicode da entrada utilizando a forma de normalização de compatibilidade e de composição(NFKD) que basicamente modifica a representação de caracteres unicode acentuados em seus equivalente conjugados sem alterar a representação visual do caractere, seja a palavra verão, continuaria sendo exibida como verão porém o caractere ã é decomposto no conjugado a + ~. Então a seguir é feita uma conversão dessa string normalizada com o método str.encode() em ASCII para remover o conjugado, no caso os acentos, e finalmete com o método bytes.decode() e retornada a string UTF8 sem a acentuação e caracteres especiais:
import unicodedata

x = input(""Diga-me a estação que deseja fazer a compra: \n"").lower()

x = unicodedata.normalize('NFKD', x).encode('ascii', 'ignore').decode('utf8')

if x == ""verao"":
  print(""StreamShop,"",""R$89,99"")    
elif x == ""primavera"":
  print(""Loajing,"", ""R$84,00"")    
elif x == ""outono"":
  print(""Showpping,"", ""R$73,00"")    
elif x == ""inverno"":
  print(""Loajing,"", ""R$139,00"")    
else:
  print(""Valor inválido"")

Teste o exemplo no Rep.it
","
            7
        ","
O problema do seu programa é na segunda condição do if. Vou dividir esse if em 2 para você perceber:
Original:
if x.lower() == ""verão"" or ""verao"":

Dividido:
if x.lower() == ""verão"":

if ""verao"":

Repare que no primeiro if a palavra verão é comparada com a variável x, mas no segundo if isso não ocorre e isso gera o erro lógico. Para o segundo if funcionar como o esperado precisaríamos deixar:
if x.lower() == ""verao"":

Então o if seria assim:
if x.lower() == ""verão"" or x.lower() == ""verao"":

O motivo do primeiro if ser ativado é que por padrão qualquer coisa que seja diferente de zero é considerada verdade.
Você pode testar os seguintes if e ver que só o do zero que não será ativado:
if 0: print('Não ativou')

if 1: print('Ativou')

if ""Isso é diferente de zero"": print('Ativou')

if 'Isso também': print('Ativou')

if 'verao': print('Ativou')

","
            5
        ","['\npython', 'python-3.x\n']"
516209,Unexpected tokens - boostrap4,"
{% load bootstrap4 %}

<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1,
    shrink-to-fit=no"">
  <title>Learning Log</title>

  {% bootstrap_css %}
  {% bootstrap_javascript jquery='full' %}

</head>
<body>

  <nav class=""navbar navbar-expand-md navbar-light bg-light mb-4 border"">

    <a class=""navbar-brand"" href=""{% url 'learning_logs:index' %}"">
      Learning Log</a>

    <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse""
        data-target=""#navbarCollapse"" aria-controls=""navbarCollapse""
        aria-expanded=""false"" aria-label=""Toggle navigation"">
      <span class=""navbar-toggler-icon""></span></button>
    <div class=""collapse navbar-collapse"" id=""navbarCollapse"">
      <ul class=""navbar-nav mr-auto"">
        <li class=""nav-item"">
          <a class=""nav-link"" href=""{% url 'learning_logs:topics'%}"">
            Topics</a></li>
      </ul>
      <ul class=""navbar-nav ml-auto"">
        {% if user.is_authenticated %}
          <li class=""nav-item"">
            <span class=""navbar-text""}"">Hello, {{ user.username }}.</span>
          </li>
          <li class=""nav-item"">
            <a class=""nav-link"" href=""{% url 'users:logout' %}"">Log out</a>
          </li>
        {% else %}
          <li class=""nav-item"">
            <a class=""nav-link"" href=""{% url 'users:register' %}"">Register</a>
          </li>
          <li class=""nav-item"">
           <a class=""nav-link"" href=""{% url 'users:login' %}"">Log in</a></li>
        {% endif %}
      </ul>
    </div>

  </nav>

  <main role=""main"" class=""container"">
    <div  class=""pb-2 mb-2 border-bottom"">
      {% block page_header %}{% endblock page_header %}
    </div>
    <div>
      {% block content %}{% endblock content %}
    </div>
  </main>

</body>

</html>

Aparece o erro Unexpected tokens na linha <!DOCTYPE html> fazendo com que eu não consiga visualizar a página com os recursos do bootstrap, ficando somente a parte ""crua"". Quando retiro a linha {% load bootstrap4 %} o erro desaparece, mas mesmo assim a página não carrega o bootstrap. Estou usando como referência o livro Python Crash Course, e pelo código que está no livro, não há nada errado. Estou usando Python3 e Django3.1 no projeto.
","
Tente substituir:
{% load bootstrap4 %}

por:
{% load static %}

","
            0
        ",,,"['\npython', 'django', 'bootstrap-4\n']"
516196,Qual a diferença entre usar o input() e usar o sys.stdin.readline()?,"
Qual a diferença entre usar o input() e usar sys.stdin.readline()?
","
Direto da boca do cavalo:
>>> input()
bla
'bla'
>>> input(""digite algo: "")
digite algo: bla
'bla'
>>> import sys
>>> sys.stdin.readline()
bla
'bla\n'
>>> sys.stdin.readline(5)
blaaaaaaaaaaaa
'blaaa'

Como se vê, input() não inclui o caractere de fim de linha, enquanto o outro inclui. readline() aceita um parâmetro opcional que é o tamanho máximo da string a ser retornada.
Me parece que input() é mais apropriado para interação com humano enquanto readline() é mais voltado quando o programa será parte de um pipe.
","
            3
        ",,,"['\npython', 'input\n']"
516190,PYTHON: NameError: name is not defined [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



O que tem de errado nesse código pra eu não conseguir chamar a função pontosNaBorda?
def pontosNaBorda(v0, v1, v2):
    # v0, v1, v2 são coordenadas dos vértices de um triângulo
    return v0

def main():
    alienigenas = []
    n = int(input(""Quantidade de alienigenas: ""))
    for i in range(0,n):
        alienigenas.append(leAlienigena(i))
        
def leAlienigena(numero_alienigena):
    coordenadas = input(""Alienigena %d: "" %(numero_alienigena))
    
    # converte a string lida em uma lista de inteiros
    coordenadas = coordenadas.split()
    for i in range(0,6):
        coordenadas[ i ] = int( coordenadas[ i ] )
        
    # separa as três coordenadas dos vértices do alienígena
    v0 = [ coordenadas[0], coordenadas[1] ]
    v1 = [ coordenadas[2], coordenadas[3] ]
    v2 = [ coordenadas[4], coordenadas[5] ]

    return v0, v1, v2

if __name__ == '__main__':
    main()

funcao = int(input(""Digite a funcao que deseja testar: ""))

if funcao == int(1):
    pontosNaBorda(v0, v1, v2)

O erro que dá:

Traceback (most recent call last):   File ""C:/Users/*/Downloads/EP3
(Prazo_ 03_07_21)/ep03-rascunho.py"", line 32, in <module>
    pontosNaBorda(v0, v1, v2) NameError: name 'v0' is not defined


Mas o v0 não está definido na função leAlienigena?
","
Apesar de você ter comentado na outra resposta que ""funcionou"", gostaria de deixar uma alternativa - na minha opinião - melhor.
Primeiro, usar variáveis globais - ainda mais da forma que foi feito no seu programa - não me parece uma boa (spoiler: geralmente não é, leia aqui, aqui, aqui e aqui).
Por exemplo, se você ler os dados de 10 alienígenas: ao final do loop, as variáveis v0, v1 e v2 terão apenas os valores do décimo. Ou seja, a função pontosNaBorda acaba tendo apenas esses últimos valores. Todos os outros que você leu anteriormente estarão na lista alienigenas, é verdade, só que esta lista não está sendo usada para nada, então na verdade o código todo está bem confuso.
Mas antes de arrumar o código, acho melhor você entender um conceito importante: o escopo de uma variável.
Dentro da função leAlienigena você criou as variáveis v0, v1 e v2 e as retornou, e por isso achou que elas também estariam disponíveis fora da função. Mas na verdade não, pois variáveis criadas dentro de uma função são locais a esta função: elas só ""existem"" ali dentro, ninguém de fora consegue acessá-las. Ex:
def funcao():
    x = 1

# executa a função
funcao()
print(x) # NameError: name 'x' is not defined

Veja que depois de executar a função, a variável x não está acessível fora dela. Afinal, x foi declarado dentro de funcao e só existe ali dentro (o escopo desta variável é a função, fora dali ninguém consegue ""ver"" o x).
Ah, mas e se eu retornar o x?
def funcao():
    x = 1
    return x # agora eu retorno o x

# Ainda sim dá erro
funcao()
print(x) # NameError: name 'x' is not defined

Mesmo assim dá erro. Afinal, o return x só está dizendo ""retorne o valor da expressão x"". Ou seja, quem chama a função tem que pegar este valor e fazer algo com ele (atribuir em uma variável, ou usá-lo diretamente em uma outra expressão):
def funcao():
    x = 1
    return x

# executa a função
valor = funcao()
print(valor) # 1
print(x) # NameError: name 'x' is not defined

Veja que eu fiz valor = funcao() (a variável valor recebe o valor retornado pela funcao). Veja que a função retorna o valor que x tinha no momento em que ela foi executada. Esse valor (que no caso é 1) foi retornado e colocado na variável valor. Mas depois que a função terminou de executar, a variável x ""some"" (pois sendo local à função, ela só existe ali dentro, e quando a função termina de executar, todas as variáveis locais deixam de existir). Essa é uma distinção importante, pois o que é retornado é o valor, não a variável (leia aqui para mais detalhes). Veja que o x continua não existindo fora da função, e qualquer tentativa de acessá-lo dará erro.
É por isso que v0, v1 e v2 não estão disponíveis fora da função leAlienigenas, e ao tentar passá-las para pontosNaBorda, deu o NameError.
Aliás, o mesmo acontece com a lista alienigenas, que só existe na função main. Depois que esta função termina, você não usa esta lista para mais nada (nem sequer retorna), então ela deixa de existir. Ou seja, você lê um monte de dados e depois eles somem (e usando variáveis globais, você só tem o último valor digitado, perdendo todos os outros que estavam guardados na lista). Por isso achei estranho que tenha ""funcionado"", eu revisaria tudo antes de ter essa certeza (pode ser que o código não esteja completo e ""faça sentido"", mas só com o que tem na pergunta, ficou bem esquisito).

Arrumando o código
Sendo assim, uma alternativa melhor seria usar o retorno das funções, atribuindo-os em variáveis e/ou passando esses valores para as outras funções.
Para começar, o programa lê as coordenadas de um ou mais alienígenas, guardando-as em uma lista. Mas como já dito, essa lista não é usada para nada, então uma sugestão seria retorná-la:
def main():
    n = int(input(""Quantidade de alienigenas: ""))
    alienigenas = []
    for i in range(n):
        alienigenas.append(leAlienigena(i))
    return alienigenas # retorne a lista de alienígenas

E a leitura pode ser simplificada (levando em conta que não é feita validação dos dados, como por exemplo, se foi realmente digitado 6 números):
def leAlienigena(numero_alienigena):
    # converte a string lida em uma lista de inteiros
    coordenadas = list(map(int, input(f""Alienigena {numero_alienigena}: "").split()))

    # separa as três coordenadas dos vértices do alienígena
    v0 = coordenadas[0:2]
    v1 = coordenadas[2:4]
    v2 = coordenadas[4:6]
    return v0, v1, v2

E ao executar o programa, você pega a lista de alinígenas retornada por main:
if __name__ == '__main__':
    # pega os valores retornados
    alienigenas = main()

Mas só um detalhe: esta lista contém uma ou mais tuplas, sendo que cada tupla contém 3 listas contendo as coordenadas de um alienígena. E como pontosNaBorda recebe essas 3 coordenadas separadamente, você teria que passá-las uma vez para cada alienígena. Algo assim:
for v0, v1, v2 in alienigenas: # para cada alienígena, pegar as coordenadas
    pontosNaBorda(v0, v1, v2)

Ou, se quiser de um alienígena específico:
v0, v1, v2 = alienigenas[0] # pega as coordenadas do primeiro alienígena
pontosNaBorda(v0, v1, v2)

Se bem que não ficou claro o que é para fazer (mas se você leu os dados de vários alienígenas e guardou em uma lista, me parece fazer sentido analisar as coordenadas de todos, mas aí é com você: agora que você tem a lista com tudo que foi digitado, fica mais simples decidir o que fazer).
Ou seja, o código completo ficaria:
def pontosNaBorda(v0, v1, v2):
    return v0

def main():
    n = int(input(""Quantidade de alienigenas: ""))
    alienigenas = []
    for i in range(n):
        alienigenas.append(leAlienigena(i))
    return alienigenas # retorne a lista de alienígenas

def leAlienigena(numero_alienigena):
    # converte a string lida em uma lista de inteiros
    coordenadas = list(map(int, input(f""Alienigena {numero_alienigena}: "").split()))

    # separa as três coordenadas dos vértices do alienígena
    v0 = coordenadas[0:2]
    v1 = coordenadas[2:4]
    v2 = coordenadas[4:6]
    return v0, v1, v2

if __name__ == '__main__':
    # pega os valores retornados
    alienigenas = main()
    print(alienigenas)
    funcao = int(input(""Digite a funcao que deseja testar: ""))
    if funcao == 1: # assim, os valores estarão disponíveis aqui
        v0, v1, v2 = alienigenas[0] # pega as coordenadas do primeiro alienígena
        pontosNaBorda(v0, v1, v2)

É importante notar que as variáveis v0, v1 e v2 que foram criadas dentro do if não são as mesmas que estão dentro da função leAlienigena. Elas por acaso têm o mesmo nome, mas lembre-se do escopo: as que estão dentro da função são locais e só existem ali dentro. Seria o mesmo que ter isso:
def funcao():
    x = 1
    return x

x = 2
funcao()
print(x) # 2

Este código imprime ""2"", pois o x que está dentro da função é diferente do x que está fora. Uma não interfere na outra.
Esta distinção é importante para organizar o código e deixar a função mais ""auto-contida"". A cada chamada de leAlienigena, ela está lidando com os dados de um único alienígena. Deixar as variáveis globais faz com que a semântica se misture: não existem mais os dados do alienígena atual, e sim ""os dados"", uma única instância deles. E ao chamar a função pontosNaBorda, ela receberá apenas os dados do último alienígena lido. Mas se essa era a intenção, então para que ler dados de vários alienígenas, se no fim só o último será usado? (é por isso que eu disse que o código está estranho, e mais estranho ainda que o uso de global tenha ""resolvido"" o problema - pode ter resolvido o NameError, mas desconfio que a lógica ainda está esquisita e provavelmente errada).
","
            5
        ",,,"['\npython', 'funções', 'escopo-de-variáveis\n']"
516187,Python: como validar quantos arquivos tenho em uma pasta e enviar por e-mail,"
Boa tarde, tudo bem?
Estou com uma duvida em meu código python, estou tentando fazer uma automatização de envio de e-mails com arquivos específicos, esses e-mails eu envio diariamente e são e-mails aleatórios com anexos aleatórios, as vezes tem 15 arquivos que vão para 15 e-mails diferentes e tem vezes que tem 20 arquivos que vão para e-mails diferentes, depende o dia.
Minha duvida está em como validar quantos arquivos tem na pasta naquele dia especifico e como parametrizar para qual e-mail ele será mandado. Estudando ao longo do dia criei um código que valida se o arquivo com o nome especifico existe ou não, se ele existir, ele troca o nome do arquivo pelo e-mail da pessoa que será mandado e assim manda por e-mail, dessa forma ele funciona, porém, tem mais 15 e-mails para fazer isso e esse numero de e-mail é aleatório as vezes são 15,16,17,18 arquivos para enviar no dia. alguém poderia me ajudar? obs(cada arquivo tem um nome padrão, por exemplo teste1, teste2 e teste3, tenho uma lista com os e-mails definido para quem eu preciso mandar o teste1, teste2 e teste3).
import os
import win32com.client as win32
import time
from pathlib import Path
import os.path


if(os.path.exists(r'C:\Users\Desktop\convenios\teste1.txt')):
  print(""O arquivo existe"")
else:
  print(""O arquivo não existe"")



os.rename (r'C:\Users\Desktop\convenios\teste1.txt',r'C:\Users\Desktop\convenios2\joao@hotmail.com.txt')

#Informações do e-mail
outlook = win32.Dispatch('outlook.application')

folder = Path(r""C:\Users\Desktop\convenios2"")

#leitura documentos em anexo
for attachment in folder.iterdir():
    #envio de e-mail
    mail = outlook.CreateItem(0)
    mail.SentOnBehalfOfName = 'joao@hotmail.com.br'
    mail.HTMLBody = """"""
    <p>Olá,</p>
    <p>Segue documentos em anexo!</p>
    <p>Atenciosamente.</p>
    <p>João</p>""""""
    mail.Attachments.Add(str(attachment))
    # coloca o nome do arquivo, sem a extnsão, como endereço do email antes do ""@""
    mail.To = f'{attachment.stem}'
    #mail.Subject = str(attachment)
    mail.subject = ('arquivo teste')
    mail.display()
    time.sleep(5)
    mail.Send()
    print (""email enviado com sucesso!"")

","
Bom para obter os arquivos da pasta basta usar o  dir = os.listdir('local onde os arquivos estão') o valor retornado vai ser uma lista com todos arquivos
após isso basta apenas criar um laço de repetição para cada arquivo
segue exemplo:
pasta_emails = os.listdir(""local da Pasta"")
for email in pasta_emails:
    print(email)

se quiser fazer usando while você terá que ter parâmetros para quebra do laço
vide exemplo:
pasta_emails = os.listdir(""local da Pasta"")

quantidade_arquivos_na_pasta = len(pasta_emails) - 1
contador = 0

while contador != quantidade_arquivos_na_pasta:
   #obter nome do arquivo
   print(pasta_emails[contador])
   contador +=1

no caso o primeiro passo é pegar todos arquivos que estão na pasta em que você salva seu email.
usando a função built-in len() e usando como parâmetro a lista retornada com os nomes do arquivos você obtém a quantidade de itens que tem na lista. (nesse caso eu subtrai 1 pois a função len() conta apartir do 1 e a primeira posição nas listas chamamos por 0)
após isso já tem o parâmetro para definir quando o while deve ser interrompido
espero ter ajudado, bons estudos
","
            0
        ",,,"['\npython', 'python-3.x\n']"
516184,"como criar uma função que tem três parâmetros, mas só utilizo dois de cada desses parâmetros em python [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Preciso criar uma função, que calcule as razões trigonométricas existentes entre os lados de um
triângulo retângulo.
A função deve receber três parâmetros: cateto oposto, cateto adjacente
e hipotenusa. Ao executar a função, apenas dois dos três parâmetros devem receber valores.
A função vai retornar o valor referente ao Seno, Cosseno ou Tangente de acordo com os
valores recebidos.
","
Você pode fazer utilizando um dos parâmetros sendo zero, e fazer uma condição para retornar o resultado baseando-se em qual parâmetro se iguala a zero.
def calcularTriangulo(catetoOp,catetoAdj,hipotenusa):
if (catetoOp == 0):
    # retorna Cosseno
    print(catetoAdj/hipotenusa)
elif (catetoAdj == 0):
    # retorna Seno
    print(catetoOp/hipotenusa)
elif (hipotenusa == 0):
    # retorna Tangente
    print(catetoOp/catetoAdj)

Assim por exemplo, para calcular a tangente seria:
calcularTriangulo(3,4,0) -- Tangente
Mesma coisa para Seno e Cosseno:
calcularTriangulo(0,4,5) -- Cosseno
calcularTriangulo(3,0,5) -- Seno
","
            0
        ",,,"['\npython', 'python-3.x\n']"
516147,Qual a diferença do operador de resto (%) em Python e Rust?,"
Escrevendo um pequeno programa em Rust, notei que os resultados do operador % são diferentes do que obtenho no Python para números negativos. Por exemplo, em Python -4 % 26 retorna 22, mas em Rust:
fn main() {
    println!(""{}"", (-4 % 26));
}

Retorna -4!
Eu olhei a documentação dos operadores de Rust e, ao que parece, o operador % é de remainder mesmo, assim como no Python.
Por que a diferença?
P.S: Para contexto, nessa parte do código estou forçando o número de interesse a ter um valor entre 0 e 25. No Python a estratégia de usar o remainder funciona, mas no Rust, não.
","
A premissa básica é que, embora o símbolo seja o mesmo, o significado pode ser diferente.




Operador
Linguagem
Semântica




%
Rust
Remainder


%
Python
Modulus




Essa diferença ocorre entre várias outras linguagens de programação também. Há linguagens que optam por nomes como rem e mod, o que remove a ambiguidade trazida pelo %.
Existem várias formas de se definir a “Operação Módulo” em computadores. A diferença surge ao realizar a computação do quociente. As duas mais comuns são:
mod(a, b) = a - b * floor(a / b)
rem(a, b) = a - b * trunc(a / b)

Perceba que o mod irá arredondar o resultado da divisão para baixo. O rem, contudo, arredonda o número tendendo ao zero. Veja a diferença entre números negativos e positivos em 1.5 e -1.5:
 floor(1.5) =  1, trunc( 1.5) =  1
floor(-1.5) = -2, trunc(-1.5) = -1

Então, no caso de um dos dois argumentos fornecidos for menor que zero, essas definições abrem margem para diferença entre seus respectivos resultados.
Definição matemática
A Wikipedia define “Operação Módulo“ assim:

Dados dois números positivos, a e n, a modulo n é o resto da divisão Euclidiana de a por n, onde a é o dividendo e n o divisor.
Quando exatamente um de a ou n é negativo, a definição naïve falha e as linguagens de programação diferem na forma como esses valores são definidos.
Matematicamente, o resultado da operação módulo é uma classe de equivalência e qualquer membro dessa classe pode ser escolhido como representante. Comumente, contudo, o menor resto positivo é escolhido.

Como outras convenções de como escolher esse representante são possíveis, surge a diferença no momento de se implementar um algoritmo para determinar o resto da divisão Euclidiana. E esse algoritmo irá depender da linguagem de programação, já que não há consenso — todos são válidos de acordo com a identidade matemática. Tanto mod como rem são válidos, embora produzam resultados diferentes.
Veja todas as variações aqui e as implementações mais comuns por linguagem de programação.
Diferenças em aplicações
Pode-se entender mod como uma operação que mapeia um número qualquer a um conjunto bem definido de valores. Veja a aplicação x mod 3 para x de -5 até 5:
-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5       (valores de x)
 1,  2,  0,  1,  2, 0, 1, 2, 0, 1, 2       (resultados para `x mod 3`)

Veja que o resultado é cíclico e encontra-se no conjunto inteiro [0, 3[.
Contudo, ao utilizar rem, temos um resultado diferente:
-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5       (valores de x)
-2, -1,  0, -2, -1, 0, 1, 2, 0, 1, 2       (resultados para `x rem 3`)

Veja que, para rem, o conjunto de resultados possíveis depende do sinal dos operandos, o que remove o “rigor cíclico” que existe em mod.
A maioria das linguagens oferecem tanto rem quanto mod (não necessariamente com esses nomes), já que, como os resultados variam, o uso também pode ser impactado. Em algumas situações, somente mod se encaixa. Em outras, somente rem resolverá. Quando os operandos passados tiverem, garantidamente, o mesmo sinal, não há diferença.
","
            4
        ",,,"['\npython', 'operadores', 'rust\n']"
516139,Contar linhas do dataframe com string de acordo com a posição no texto Python,"
Tenho um dataframe com uma coluna de texto, como a seguir:
import pandas as pd

df = pd.DataFrame([[""1"", ""texto com PALAVRA frAse PARAGRAFO"", True, ""foo""],
                   [""2"", ""texto com palavra Paragrafo"", False, ""foo""],
                   [""3"", ""texto com Frase paragrafo"", True, ""foo""],
                   [""4"", ""texto com FRASE"", True, ""foo""],
                   [""5"", ""texto com frase"", True, ""foo""],
                   [""6"", ""frase"", True, ""foo""],
                   [""7"", ""texto"", False, ""foo""],
                   [""8"", ""texto com paRAgrafo"", False, ""foo""]],
                  columns=[""id"", ""texto"", ""col1"", ""col2""])

Quero contar todas as linhas em que, por exemplo, ""frase"" ocorre antes de ""palavra"" ou ""paragrafo""; isto é, considerando que o que aparece ""primeiro"" é mais relevante no contexto, se fossem conjuntos, desconsideraria as ""interseções"" e teria:

linhas com ""palavra"": 2

linhas com ""frase"": 4

linhas com ""paragrafo"": 1


Pode ter mais texto antes --- por exemplo, ""texto"" e ""com"" não interessam/interferem ---; e, claro, preciso desconsiderar maiúsculas e minúsculas na hora da contagem.
Com str.contains, não leva em conta a ""posição"":
df_filter = df[df['texto'].str.contains('frase',case=False)]
len(df_filter)

5

Como fazer então?
","
Você pode criar uma função que retorna True se um determinado alvo aparece antes de outros termos em um texto :
def veio_antes(texto, alvo, outros):
    texto = texto.lower()
    alvo = alvo.lower()

    if alvo in texto:
        texto_antes = texto.split(alvo)[0]

        for o in outros:
            if o.lower() in texto_antes:
                return False

        return True

    return False

Uma função lambda que passa os argumentos necessários para veio_antes pode ser mapeada para os elementos da coluna do seu dataframe que contem os textos de interesse e a série resultante pode ser sumada para indicar a quantidade total de vezes que um alvo aparece antes dos outros termos. Se você quiser fazer isso para todos os termos de uma lista, você pode fazer o seguinte:
alvos = [""palavra"", ""frase"", ""paragrafo""]

for alvo in alvos:
    outros = [a for a in alvos if a != alvo]
    veio_antes_map = lambda x: veio_antes(x, alvo, outros)
    print('linhas com ""{}"": {}'.format(alvo, sum(df[""texto""].map(veio_antes_map))))

Saída:
linhas com ""palavra"": 2
linhas com ""frase"": 4
linhas com ""paragrafo"": 1

","
            1
        ","
Bom pelo que entendi da sua pergunta você esta querendo verificar a ordem em que as palavras acontecem no texto, bom eu vou considerar que você tem as palavras quais quer verificar a ocorrência.
fiz um exemplo que pode ajudar você a criar a logica que se aplica melhor ao seu código:
frase = 'Frase para testar'

def verificar_qual_palavra_vem_antes(frase, p1, p2):

    frase = frase.lower()

    frase_partida = frase.split()

    posição_palavra_um = frase_partida.index(p1)

    posição_palavra_dois = frase_partida.index(p2)

    if posição_palavra_um < posição_palavra_dois:
        return 'a palavra 1 veio primeiro'

    else:
        return 'a palavra 2 veio primeiro'

Explicando o código
O funcionamento dele é bem simples, foi criada uma função que faz essa verificação de posições com os parâmetros Frase - palavra 1 e palavra 2
a primeira coisa que a função faz e usar a função built-in do Python lower() que consistem em transformar toda a string em caixa baixa
logo após é utilizado o split para dividir todas as palavras em um lista
e assim por final verificar o endereço de cada palavra na lista
então se o endereço da palavra 1 for menor que endereço da palavra 2 ja tem a ordem que ocorre as palavras
","
            0
        ","['\npython', 'python-3.x', 'string', 'pandas\n']"
516135,Mostrar texto na página apartir do banco de dados em django,"
Olá,
Estou tentando exibir um texto apartir do banco de dados em mysql, utilizando Django, já procurei por vários tutoriais mas nada funciona, se alguém puder ajudar agradeço desde já.
Este é parte do meu arquivo: index.html


<div class=""col-lg-4 col-6"">
  <div class=""small-box bg-warning"">
    <div class=""inner"">
      {% for rf in indrf %}
      <h3>{{rf.id}}</h3>
      {% endfor %}
      <p>Indicações registradas</p>
    </div>



Este é meu aquivo de modelo: models.py
from django.db import models

class indications(models.Model):
    name = models.CharField(max_length=50)
    phone = models.CharField(max_length=15)
    obs = models.TextField()
    status = models.CharField(max_length=10)
    user_id = models.CharField(max_length=50)

Este é parte do aquivo view: views.py
def countrefused(request):
    indrf = indications.objects.all()
    return render(request,""index.html"",{'indrf':indrf})

Porem toda vez que executo, o código não me retorna nada.
Grato!!
","
def __str__(self):
        return f'{name} {phone} {obs} {status}'

__str__ é um função usada  para retornar uma representação de string de um objeto na classe indications
( Nome de classe sempre com letra maiúscula para diferenciar de objetos e funções Indications deveria ser )
aplicando no código da classe Indications
from django.db import models

class indications(models.Model):
    name = models.CharField(max_length=50)
    phone = models.CharField(max_length=15)
    obs = models.TextField()
    status = models.CharField(max_length=10)
   # user_id = models.CharField(max_length=50) django seta como auto incremeto o ids
    def __str__(self):
        return f'{name} {phone} {obs} {status}'

esta recuperando nome phone obs e status. pode indicar quais irão ser retornadas não necessariamente pode ser todas.
na página html sera passado os nomes como:
{% for rf in indrf %}
      <h3>{{rf.id}} {{rf.name}} {{rf.phone}}</h3>
      {% endfor %}
      <p>Indicações registradas</p>

","
            0
        ",,,"['\npython', 'banco-de-dados', 'django', 'fetch\n']"
516122,Regex para arquivos AFD,"
Bom dia
Tenho um arquivo Txt com uma série de linhas que dividem as batidas de ponto que temos aqui na empresa.
Cada linha dessas pode conter as informações da batida, como o horário e colaborador.
Porém o meu REP me entrega um arquivo com muitas informações que não são úteis para coleta desses pontos. Sabendo disso pensei em fazer uma verificação REGEX para só pegar o que estiver no padrão estabelecido para as batidas.
(OBS.: O nome do colaborador é opcional. Pode ter ou não.)

Qual a melhor forma para esse tratamento das informações? Rodar uma verificação de expressão regular a cada interação/linha?
Se sim, como ficaria essa expressão tendo em vista que um AFD segue os padrões abaixo



",,,,,"['\npython', 'regex\n']"
516120,Selecionar linha certa com Split em TXT,"
Minha dúvida está em como depois de separar as linhas em listas, posso também pegar estes valores e somente fazer o append da linha correta (numero_linha da função).
Só que também, conseguir pegar a linha inteira, e não somente 10 posições da frase do txt, como está me retornando a linha 0 e 10 posições desta linha.
Arquivo musica.txt:
Roda Viva
Chico Buarque

Tem dias que a gente se sente
Como quem partiu ou morreu
A gente estancou de repente
Ou foi o mundo então que cresceu
A gente quer ter voz ativa
No nosso destino mandar
Mas eis que chega a roda viva
E carrega o destino pra lá

Roda mundo, roda-gigante
Roda moinho, roda pião

O tempo rodou num instante
Nas voltas do meu coração
A gente vai contra a corrente
Até não poder resistir
Na volta do barco é que sente
O quanto deixou de cumprir
Faz tempo que a gente cultiva
A mais linda roseira que há
Mas eis que chega a roda viva
E carrega a roseira pra lá

Roda mundo, roda-gigante
Roda moinho, roda pião

 # função para ler, extrair valores do TXT
 def extrai_linha_txt(nome_arquivo: str, numero_linha: int):

    palavras_linha = []
    
    # le o arquivo com o comando 'with' utilizando o parametro 'nome_arquivo'
    with open(file=nome_arquivo, mode='r', encoding='utf8') as fp:   
    
    # extrair linha do arquivo utilizando o parametro 'numero_linha'
     linha = fp.readline()
     count = 1
    
    # quebra a linha em palavras com o comando split ' '
    while count < numero_linha:
        
            linha = linha.rstrip('\n')
            linha_formatada = linha.split(sep=' ')
            palavras_linha.append(linha_formatada)
                                    
            count += 1 
                    
    return palavras_linha
    
 # chamada de função com parâmetros da linha selecionada
 linha10 = extrai_linha_txt(nome_arquivo='./musica.txt', numero_linha=10)
 print(linha10) # deve retornar ['Mas', 'eis', 'que', 'chega', 'a', 'roda', 'viva']

","
Para selecionar a linha correta do arquivo basta você iterar linha a linha e contar em qual linha você está, assim que chegar na linha desejada basta retornar as palavras que estão nela.
Você pode iterar sobre o contador da linha juntamente com seu conteúdo usando a função enumerate:
def le_linha(nome_arquivo, num_linha):
    with open(nome_arquivo, mode=""r"", encoding=""utf8"") as file:
        for i, linha in enumerate(file, start=1):
            if i == num_linha:
                return linha.split()

    # caso não ache a linha, retorna lista vazia
    return []


print(le_linha(""musica.txt"", 10))
# ['Mas', 'eis', 'que', 'chega', 'a', 'roda', 'viva']

print(le_linha(""musica.txt"", 11))
# ['E', 'carrega', 'o', 'destino', 'pra', 'lá']

print(le_linha(""musica.txt"", 999))
# []

Código rodando no Repl.it
Como eu retorno o resultado assim que encontro a linha, não leio desnecessariamente o resto do arquivo e tampouco carrego o arquivo inteiro em memória, apenas a linha sendo lida.

Lembrando que sempre que você itera sobre um arquivo, ele itera linha a linha do arquivo sem incluir os caracteres de quebra de linha (ver documentação) então é eficiente em termos de memória e rápido.
","
            4
        ","
Aqui:
with open(file=nome_arquivo, mode='r', encoding='utf8') as fp:   
    linha = fp.readline()
    count = 1

Você só leu uma linha do arquivo (portanto, a primeira). Depois, no while count < numero_linha você simplesmente insere essa mesma linha (a primeira) várias vezes na lista palavras_linha (já que o while incrementa count até atingir o numero_linha, ou seja, ele roda várias vezes, inserindo a mesma linha).
Então na verdade, se você quer a décima linha, pule as primeiras 9 linhas, e só depois leia a próxima:
def extrai_linha_txt(nome_arquivo: str, numero_linha: int):
    try:
        with open(nome_arquivo, encoding='utf8') as fp:
            # pula as linhas até chegar na que eu quero (sempre uma a menos do que o desejado)
            for _ in range(numero_linha - 1):
                next(fp)
            return next(fp).rstrip('\n').split(' ')
    except StopIteration:
        # se o arquivo tem menos linhas, retorna uma lista vazia (ou dá uma mensagem de erro, você decide)
        return []

linha10 = extrai_linha_txt(nome_arquivo='./musica.txt', numero_linha=10)
print(linha10) # ['Mas', 'eis', 'que', 'chega', 'a', 'roda', 'viva']

Como o modo default do open é de leitura ('r'), eu omiti, mas enfim, se quiser deixar, tudo bem.
Primeiro eu faço um for para pular as linhas do arquivo (se eu passar 10, ele pulará as 9 primeiras, repare no numero_linha - 1). Como arquivos são iteradores, eu posso usar next para obter a próxima linha. Depois, removo a quebra de linha e faço o split, já retornando o resultado.
Também coloquei um bloco try/except para capturar o StopIteration, caso você passe um número maior do que a quantidade de linhas do arquivo. Lembrando que faltou validar se o número passado for menor ou igual a zero, pois aí ele sempre retorna a primeira linha.
A outra resposta sugere ler o arquivo inteiro e separar o seu conteúdo em linhas, mas eu acho um exagero para este caso, afinal você só quer uma única linha, então faz mais sentido ir até ela, lê-la e em seguida encerrar (isso faz mais diferença ainda se o arquivo for muito grande, pois carregar tudo na memória só pra pegar uma única linha não me parece uma boa).

Outra forma de fazer é usar itertools.islice:
from itertools import islice

def extrai_linha_txt(nome_arquivo: str, numero_linha: int):
    try:
        with open(nome_arquivo, encoding='utf8') as fp:
            return next(islice(fp, numero_linha - 1, numero_linha)).rstrip('\n').split(' ')
    except StopIteration:
        # se o arquivo tem menos linhas, retorna uma lista vazia (ou dá uma mensagem de erro, você decide)
        return []

linha10 = extrai_linha_txt(nome_arquivo='./musica.txt', numero_linha=10)
print(linha10) # ['Mas', 'eis', 'que', 'chega', 'a', 'roda', 'viva']

Lembrando que neste caso, a contagem dos índices começa em zero (a primeira linha é zero, a segunda é 1, etc), por isso eu subtraí 1 ao chamar islice.
","
            3
        ",['\npython\n']
516047,falha no atributo .append ao inserir cadastro em lista - (Python) [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Inserir nomes a uma lista dependendo de seu valor

                                (4 respostas)
                            

Fechada há 9 meses.



Consegui deixar o meu cadastro em loop que será encerrado apenas se o usuário digitar N ou n.
Após encerrar o cadastro o programa exibe as listas de cadastro e lista de sorteio, porem, quando imprime a lista de cadastro, retorna apenas o ultimo nome e valor cadastrado.
preciso que o programa me retorne conforme exemplo abaixo:
Lista de Cadastro
Maria doou R$30,00João doou R$20,00
A lista de sorteio esta como eu preciso, multiplicando os nomes pelo valor doado.
Ex:
[Maria, Maria, Maria, João, João]
será que o programa não reconhece a instrução lista_cadastro.append([nome,valor])? como eu corrijo essa falha?
segue o código:
    import random
    lista_sorteio = list()#lista que vai receber o nome para sorteio
    lista_cadastro = list() #lista que vai receber o cadastro

    while True: #loop de repetição para varios cadastros
     nome = str(input('Nome: ')).capitalize() #captura o nome do doador
     valor = int(input('Valor: R$')) #captura o valor doado
      print('') # inserir espaço
      chances = int(valor // 10)
      for c in range(chances):
          lista_sorteio.append([nome])
      alexa = str(input('INSERIR NOVO CADASTRO? [S/N] ')).strip().upper()[0] # sai do loop cadastro
      if alexa in 'Nn':
         break #encerra o loop digitando N
    print('') # inserir espaço
    print('LISTA DE CADASTRO:')
    for d in range(chances):
        lista_cadastro.append([nome, valor])
        print(f'{nome} doou R${valor:.2f};')  # mostra os nomes em 
    lista_cadastro
    print('')  # inserir espaço
    print('LISTA DE SORTEIO:')
    print(lista_sorteio) # mostra os nomes em lista_sorteio
    print('') # inserir espaço
    ganhador = random.choice(lista_sorteio) #realizar sorteio
    print('O ganhador do Sorteio é {[0]}'.format(ganhador)) #mostra o nome do sorteio

","
Se bem entendi qual era o objetivo (aumentar as chances de quem colaborou mais), deu certo fazendo o final assim:
print('LISTA DE SORTEIO:')
for nom in lista_cadastro:
    nomeSorteio = int(nom[1] / 10)
    for c in range(nomeSorteio):
        lista_sorteio.append(nom[0])

print
print(lista_sorteio)
ganhador = random.choice(lista_sorteio)  # realizar sorteio
print('O ganhador do Sorteio é {}'.format(ganhador))  # mostra o nome do sorteio

Sugiro analisar as diferenças para ver o que estava errado..
","
            0
        ",,,"['\npython', 'python-3.x', 'lista', 'variáveis', 'declaração-de-variável\n']"
515938,Como selecionar valor de uma lista dropbox quando o html do site não tem select,"
Olá!
Primeiramente, desculpe meu vocabulário pouco 'técnico', sou apenas um aventureiro iniciando a aprendizagem em Python.
Em relação ao meu problema, eu já vi alguns tópicos tanto aqui quanto em inglês porém todos tratam de uma maneira semelhante, como essa:
from selenium import webdriver
from selenium.webdriver.support.ui import Select

driver = webdriver.Firefox()
driver.get('url')

select = Select(driver.find_element_by_id('fruits01'))

# select by visible text
select.select_by_visible_text('Banana')

# select by value 
select.select_by_value('1')

Porém, quando tento aplicar isso no site que desejo, o dropbox list dele não é feito com select no html dele, então da erro dizendo que não consegue usar esse comando para essa situação.
Eu consigo clicar no botão com o xpath dele, que abre a lista com todos valores (de 1 a 90 - 'minutos de um jogo de futebol'), porém não consigo selecionar nenhum desses itens. Cada uns desses valores da lista mudam as saídas da página, como placar, chutes a gol, etc.
Quando eu inspeciono os valores do botão, os valores deles estão lá embaixo do html, porém não os encontro nem com o xpath, da erro na compilação dizendo que não encontra, mesmo que eu clique nele com um time.sleep() para carregar a página ele não encontra.
O trecho do html do botão está nessas imagens:


E as opções vão até o número 90, como dito acima.
Tem alguma forma de clicar em um item dessa lista, sem ser pelo comando select? Ou há alguma forma de usar o select mesmo nesse site?
Já consegui descobrir diversas coisas novas olhando fóruns porém esse realmente me travou nos últimos dois dias e continuo sem solução.
Agradeço desde já e caso queiram mais alguma informação, só me dizer.
","
Finalmente consegui resolver
Caso alguém algum dia tenha esse problema também, segue a solução que encontrei fuçando em todo quanto é tipo de site/foruns de python:
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC 
from selenium.webdriver.common.action_chains import ActionChains
import time

droplist = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""root""]/div/section/section/main/div/div/div[2]/div/div/div[1]/div/div' ))) #encontrar botao da droplist (nesse caso achei melhor com xpath, site mal montado)
ActionChains(driver).move_to_element(droplist)
driver.execute_script('arguments[0].click();', droplist)
wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, 'li.ant-select-dropdown-menu-item')))

drop_down_click = wait.until(EC.element_to_be_clickable((By.XPATH, '//li [text()=""20""]')))
drop_down_click.click()

Isso seguindo o HLTM do site que postei em imagens, para selecionar o minuto 20 de um jogo, mas poderia ser qualquer texto dessa droplist do combobox que não era montado com select no html. Na segunda imagem postada estão as opções dessa droplist, do 1 ao 90... no caso acima ele selecionaria o minuto 20. Só postei o trecho do programa dessa solução em específico.
","
            0
        ",,,['\npython\n']
515861,AttributeError: type object 'User' has no attribute 'order_by' - SQLAlchemy,"
Estou tentando ordenar de forma descrescente os id's da tabela Transaction da seguinte forma:
from sqlalchemy import desc
from sqlalchemy.orm import query
from website.models import Transaction


def home():
    transactions = query.order_by(Transaction.id.desc())
    flash(transactions)
    return render_template(""home.html"", user=current_user)

E também da seguinte forma:
from sqlalchemy import desc
from sqlalchemy.orm import query
from website.models import Transaction


def home():
    transactions = Transaction.oder_by(Transaction.id.desc()).all()
    flash(transactions)
    return render_template(""home.html"", user=current_user)

*A tabela:
class Transaction(db.Model):
    __tablename__ = 'transaction'

    id = db.Column(db.Integer, primary_key=True)
    tipo = db.Column(db.String(150))
    nome_cripto = db.Column(db.String(150))
    quant = db.Column(db.Float)
    data = db.Column(db.String(150))
    quotation = db.Column(db.Float)

    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

    cripto = db.relationship(""Cripto"", back_populates=""transaction"", uselist=False)

Porém retornando, em ambas as tentativas: ""AttributeError: type object 'User' has no attribute 'oder_by'"".
Qual a causa disso? Está faltando algum import?
","
Está dando esta exception porque você cometeu um erro de digitação ao escrever ""oder_by"" ao invés de ""oRder_by"".
Como o comando não existe, consequentemente o seu objeto não possui este atributo, gerando o problema.
Só corrigir a digitação e funcionará como o esperado.
","
            0
        ",,,"['\npython', 'flask', 'sqlalchemy\n']"
515837,'End of statement expected' erro no pyCharm,"
Tenho um método bem simples, que recebe um parâmetro booleano e altera uma global para o valor negado do parâmetro.
Porém, utilizando a IDE PyCharm, ela retorna um erro no trecho global state = not x
state = False

def change_state(x):
    global state = not x


O que significa esse erro? Qual seria a forma correta do código?
","
O problema é que a atribuição do valor da variável global está na mesma linha.
O correto seria assim:
state = False

def change_state(x):
    global state
    state = not x
    print(state)

change_state(state)

Resultado:
True

","
            3
        ",,,"['\npython', 'pycharm\n']"
515788,Como fazer uma Janela ficar sempre acima das outras no PYQT5? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Estou criando uma pequena aplicação e preciso que a janela principal fique sempre acima das demais, qual atributo usar no pyqt 5 ?
Desde de já agradeço
","
Não existe garantia que vá ficar no topo sempre, ainda mais se outros programas usarem do mesmo recurso, eu vou ter que ser um pouco mais sincero a respeito disso, programas no topo sempre me aborreceram, eu sou o usuário, eu sei o que eu quero no topo e o que eu não quero, claro que se for uma opção dentro do programa escolhida pelo usuário seria aceitável usar isso, mas se for forçadamente e não uma opção do usuário eu me recusaria a usar o tal programa.
Voltando a parte técnica, basicamente a flag para deixar no topo é Qt.WindowStaysOnTopHint
<objeto>.setWindowFlags(<objeto>.windowFlags() | QtCore.Qt.WindowStaysOnTopHint)

Troque <objeto> pelo contexto (widget ou QMainWindow) que vai aplicar, lembrando que um mesmo programa pode ter várias janelas, um exemplo básico:
from PyQt5 import Qt, QtCore, QtWidgets
import sys

app = QtWidgets.QApplication(sys.argv)

w = QtWidgets.QWidget()
w.setWindowFlags(w.windowFlags() | QtCore.Qt.WindowStaysOnTopHint)
w.resize(800, 600)
w.show()
sys.exit(app.exec_())

Note que usei .windowFlags() para obter as flags padrões, para então com o | ""combinar"" com QtCore.Qt.WindowStaysOnTopHint.
Quase tudo do Qt em C++ em aplicável de forma semelhante no PyQt5 e como alternativa ao PyQt também existe o pyside, que é bastante semelhante, então consultar a documentação oficial da Qt pode lhe ajudar:

https://doc.qt.io/qt-5/classes.html

","
            1
        ",,,"['\npython', 'python-3.x', 'pyqt', 'pyqt-5\n']"
515786,Retirar valor não numéricos de um dataframe,"

Minha intenção é retirar os valores que aparecem com '......' conforme imagem acima e substituir por um campo vazio.
O código que estou usando para tentar remover é esse:
df['Energy Supply'].str.replace('[.]*', '')

contudo retorna um saída aonde todos os valores se tornam NaN

Como poderia consertar esse problema?
","
Uma opção é usar a opção regex do replace: df.replace('\.+', np.nan, regex=True)
Segue exemplo replicável:
import pandas as pd
import numpy as np

df = pd.DataFrame({'A': [0, 1, 2, 3, 4],
                   'B': ['......', 6, '.......', 8, 9],
                   'C': ['........', 'b', 'c', '....', 'e']})

print(df.replace('\.+', np.nan, regex=True))

Resultado:
   A    B    C
0  0  NaN  NaN
1  1  6.0    b
2  2  NaN    c
3  3  8.0  NaN
4  4  9.0    e

","
            1
        ",,,"['\npython', 'pandas', 'replace\n']"
515740,Copia entre strings dentro de listas Python,"
A operação consiste em comparar duas listas de strings, detectar quais os itens e comuns e coloca-los numa determinada ordem numa nova lista.
O mais próximo que cheguei foi:
nova = []

lista = ['a', 'b', 'c', 'd', 'e']

coluna = ['a', '1', '2', '4', 'b', '2', '4', '5', '6', 'c', '3', '3', '3', 'd', '3', '3', 'e', '1']

O objetivo é, a partir dos itens coincidentes, copiá-los até chegar ao próximo, copiar, e assim por diante, até formar uma lista como essa:
nova = ['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'c', 'c', 'c', 'c', 'd','d', 'd', 'e', 'e']

Ou seja, a depender dos índices coincidentes entre duas listas, estes serão copiados até chegar ao próximo.
O mais próximo que cheguei da resposta foi usando um laço aninhado:
for item_lista in lista:

 for item_coluna in coluna:

   if(item_lista==item_coluna):
    
      nova.append(item_lista)

   else:
     nova.append(item_coluna)
   

Retorna-se uma lista, mas a errada do que eu pretendia:
nova=['a',
 '1',
 '2',
 '4',
 'b',
 '2',
 '4',
 '5',
 '6',
 'c',
 '3',
 '3',
 '3',
 'd',
 '3',
 '3',
 'e',
 '1',
 'a',
 '1',
 '2',
 '4',
 'b',
 '2',
 '4',
 '5',
 '6',
 'c',
 '3',
 '3',
 '3',
 'd',
 '3',
 '3',
 'e',
 '1',
 'a',
 '1',
 '2',
 '4',
 'b',
 '2',
 '4',
 '5',
 '6',
 'c',
 '3',
 '3',
 '3',
 'd',
 '3',
 '3',
 'e',
 '1',
 'a',
 '1',
 '2',
 '4',
 'b',
 '2',
 '4',
 '5',
 '6',
 'c',
 '3',
 '3',
 '3',
 'd',
 '3',
 '3',
 'e',
 '1',
 'a',
 '1',
 '2',
 '4',
 'b',
 '2',
 '4',
 '5',
 '6',
 'c',
 '3',
 '3',
 '3',
 'd',
 '3',
 '3',
 'e',
 '1']

","
Use uma variável l para guardar o caractere a ser repetido e então itere pelos elementos da lista coluna e um a um, em c e verifique se estão contidos na lista lista:

se sim o c estiver contido em lista atribua esse caractere a variável l e adicione a lista nova.
se não adicione l a lista nova.

Exemplo:
nova = []
lista = ['a', 'b', 'c', 'd', 'e']
coluna = ['a', '1', '2', '4', 'b', '2', '4', '5', '6', 'c', '3', '3', '3', 'd', '3', '3', 'e', '1']

l= coluna[0]

for c in coluna:  
  nova.append(l := c if c in lista else l)

print(nova)

Teste o código no Repl.it
Ou então aplique o mesmo raciocínio usando list comprehension:
lista = ['a', 'b', 'c', 'd', 'e']
coluna = ['a', '1', '2', '4', 'b', '2', '4', '5', '6', 'c', '3', '3', '3', 'd', '3', '3', 'e', '1']

l=coluna[0]
nova = [l:= c if c in lista else l for c in coluna]

print(nova)

Teste o código no Repli.it
Ambos os códigos resultam em:
['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'e', 'e']

","
            3
        ","
Caso a lista = ['a', 'b', 'c', 'd', 'e'] não for mandatório
o código a seguir repete a letra encontrada até encontrar uma nova letra
nova = []
for x in coluna:

    if x.isnumeric():
        nova.append(letra)
    else:
        nova.append(x)
        letra = x
    
print(nova)

Caso for mandatório...
nova = []
letra = ''
for x in coluna:
    
        if x.isnumeric():
            if letra in lista:
                nova.append(letra)
        else:
            if x in lista:
                nova.append(x)
                letra = x
    
print(nova)

","
            2
        ","['\npython', 'lista', 'python-2.7\n']"
515649,Como executar um script python utilizando o VBA,"
Eu criei um projeto que consiste em enviar mensagens automáticas através da API do Telegram, fiz toda essa parte no Python e funciona perfeitamente, como mostro a seguir.
import requests
from datetime import date
import time

#TELEGRAM INFO
MyToken = ""meuToken""
MyChatID = ""-meuId""

#--------------------------- SEND TEXT TO TELEGRAM ---------------------------
DHoje = date.today() 
DHoje = DHoje.strftime(""%d/%m/%Y"")
# MY TEXT
MyMsg = ""Banco de Dados"" + "" "" + DHoje
#SEND METHOD
SendMsg = requests.post(""https://api.telegram.org/bot{}/sendMessage?chat_id={}&text={}"".format(MyToken, MyChatID, MyMsg))
time.sleep(3)

A grande questão é que preciso executar esse script através de um código no VBA, e até consigo fazer isso, mas apesar da tela piscar e abrir rapidamente, nenhuma mensagem é enviada. Segue a parte do código do VBA:
Option Explicit

Public Const PythonPath As String = """"""C:\meucaminho\Python36\python.exe""""""
Public Const MyFilePath As String = """"""C:\meucaminho\MsgFileTelegram.py""""""

Public Sub ChamarPython()

    Call VBA.Shell(PythonPath & "" "" & MyFilePath)

End Sub

Obs.: Quando rodo o código do python fora da macro do excel tudo funciona perfeitamente, mas quando executo o script pelo VBA nada. Alguma sugestão?
Obs.: Li bastante sobre o assunto e dei muito google, mas não consegui andar sozinho.
","
Tente isto:
RetVal = Shell(PythonPath & MyFilePath)

Ou se o script Python estiver no mesmo diretório da pasta de trabalho Excel, você pode tentar:
RetVal = Shell(PythonPath  & ActiveWorkBook.Path & ""\MyFilePath)

Ainda um terceira alternativa...
Sub Python()

    Dim objShell As Object
    Dim PythonPath, MyFilePath As String

    Set objShell = VBA.CreateObject(""Wscript.Shell"")

    PythonPath= ""C:\meucaminho\Python36\python.exe""
    MyFilePath= ""C:\meucaminho\MsgFileTelegram.py""

    objShell.Run PythonPath & MyFilePath

End Sub

","
            0
        ",,,"['\npython', 'vba', 'excel-vba', 'python-requests\n']"
515643,Pegar números de uma string - python,"
Como eu poderia pegar apenas os dígitos dessa string?
<SCANNER A7899739503929>

Já tentei usar o findall, mas sem sucesso ele me retorna vários números separados:
import re



txt = open(""P:/portal/cupons/sco/sc_op.024_10_06.txt"", ""r+"").read()


# usando finditer ele retorna a posição da palavra

    # Localiza o inicio do cupom
x = re.finditer(r""CAIXA.*"", txt)
    # Localiza o fim do cupom
z = re.finditer(r""SUBTOTAL.*"", txt)

espelhos = list(zip(x, z))

# Testando o valor específico para cada espelho
for espelho in espelhos:

    txt_espelho = txt[espelho[0].span()[0]: espelho[1].span()[1] + 1]

    print('===================================================================================================================================')

    codigos = re.findall(r""<SCANNER.*"", txt_espelho)

    print(codigos)

Esses são os códigos separados:
<SCANNER A7891203021106>', '<SCANNER A7891203021106>', '<SCANNER A7891203021304>', '<SCANNER A7891203021304>', '<SCANNER A7891962036984>'

Como eu posso pegar apenas os números?
","
Basta trocar por:
re.findall(r""<SCANNER A(\d+)"", txt_espelho)

No caso, \d é um atalho para ""dígitos"" e o quantificador + significa ""um ou mais"".
Já os parênteses criam um grupo de captura, e quando a regex tem grupos de captura, findall retorna somente eles. Assim, o retorno será uma lista contendo apenas os números que estão logo depois de SCANNER A.
A sua regex não funcionou porque você usou .*, e como o ponto pega qualquer caractere, pode acabar vindo caracteres que não são dígitos. Você até poderia usar apenas findall(r'\d+', ...), mas aí retornaria números que não estão depois de SCANNER A (não sei se tem, se não tiver não fará diferença).
Por fim, eu acho que essa não é a melhor forma de tratar este arquivo (com várias regex varrendo tudo várias vezes). O melhor seria ler o arquivo linha a linha e processar os dados aos poucos, conforme forem encontrados, como sugerido aqui.
","
            4
        ","
De maneira simples voce pode fazer:
txt = '<SCANNER A7899739503929>'

somente_digitos = ''.join([d for d in txt if d.isdigit()])

print(somente_digitos)
'7899739503929'

Caso você possua uma lista
>>> lista = ['<SCANNER A7891203021106>', '<SCANNER A7891203021106>', '<SCANNER A7891203021304>', '<SCANNER A7891203021304>', '<SCANNER A7891962036984>']


>>> for item in lista:
...     print(''.join([d for d in item if d.isdigit()]))
...
7891203021106
7891203021106
7891203021304
7891203021304
7891962036984

Ou ainda, usar o map
>>> lista = ['<SCANNER A7891203021106>', '<SCANNER A7891203021106>', '<SCANNER A7891203021304>', '<SCANNER A7891203021304>', '<SCANNER A7891962036984>']

>>> print(list(map(lambda item: ''.join([d for d in item if d.isdigit()]), lista)))
['7891203021106', '7891203021106', '7891203021304', '7891203021304', '7891962036984']

","
            4
        ","['\npython', 'regex\n']"
515642,Pegar informações de api com socket local,"
Boa tarde, estou desenvolvendo um programa para processar mensagens do whatsapp e responde-las (chatbot) e para isso comprei um programa chamado zapmax, nele é detectado a mensagem e é enviada para o servidor via api com o method POST, então criei um servidor local com socket, porém não consigo receber as informações com este código recebo o seguinte no terminal:
def aceitar_conexao():
    while True:
        client = {}
        endereco, client = servidor.accept()
        msg = endereco.recv(1024)
        print(msg)

mensagem que aparece no terminal: b'POST / HTTP/1.1\r\nContent-Type: application/json\r\nHost: 10.1.1.124:7000\r\nContent-Length: 177\r\nExpect: 100-continue\r\nConnection: Keep-Alive\r\n\r\n'
então tentei fazer uma requisição assim:
def aceitar_conexao():
    while True:
        client = {}
        endereco, client = servidor.accept()
        ht = 'https://10.1.1.124:' + str(client[1])
        mnsg = '\""{}\""'.format(ht)
        request = requests.get(ht)
        print(request)

e desta forma não acontece nada além de fechar o terminal, se alguem conseguir me dar uma luz, serei eternamente agradecido, ainda sou desenvolvedor júnior então não tenho muita experiência com isso, irei deixar tbm uma imagem que o suporte me mandou contendo as informações enviadas pelo programa:

","
Não use sockets, use algum módulo que implemente um servidor HTTP de verdade, tipo o SimpleHTTPServer (Python 2.x) ou http.server (Python 3.x).
","
            -1
        ",,,"['\npython', 'json\n']"
515638,Como remover nomes duplicados em linhas de um dataframe python?,"
Olá, pessoal.
Tenho o seguinte dataframe:
df = pd.DataFrame({
    'Codigo': [1, 2, 3, 4],
    'Nomes': ['Alan Silva, Alan Silva', 'Carlos Santos, Carlos Santos', 'Joao Pedro', ' João Pedro'],
})
df

    Codigo  Nomes
0   1   Alan Silva, Alan Silva
1   2   Carlos Santos, Carlos Santos
2   3   Joao Pedro
3   4   João Pedro

Existe alguma forma de remover os nomes duplicados? A saída que eu preciso é:
Codigo  Nomes
0   1   Alan Silva
1   2   Carlos Santos
2   3   Joao Pedro
3   4   João Pedro

","
Vejo aqui dois casos distintos:

Caso 1: Todo valor de Nomes que possuir o delimitador vírgula (,) é obrigatoriamente repetido

Caso 2: Os valores de Nomes que possuir vírgula não é necessariamente nome repetido.


Soluções
Caso 1
df = pd.DataFrame({'Codigo': [1, 2, 3, 4],'Nomes': ['Alan Silva, Alan Silva', 'Carlos Santos, Carlos Santos', 'Joao Pedro', ' João Pedro']})

df['Nomes'] = df['Nomes'].apply(lambda nome: nome.split(',')[0])

Caso 2
>>> df = pd.DataFrame({'Codigo': [1, 2, 3, 4],'Nomes': ['Alan Silva, Alan Silva', 'Carlos Santos, Carlos Santana', 'Joao Pedro', ' João Pedro']})

>>> df
   Codigo                          Nomes
0       1         Alan Silva, Alan Silva
1       2  Carlos Santos, Carlos Santana     # Repare que o segundo é Santana
2       3                     Joao Pedro
3       4                     João Pedro

Para este caso, defina uma função que verifique se o nome é igual e retorne o valor correto.
def verifica_repetido(nomes):
    l_nomes = nomes.split("","")
    if len(l_nomes) == 1:
        return nomes
    if l_nomes[0].lstrip().rstrip() == l_nomes[1].lstrip().rstrip():
        return l_nomes[0]
    return nomes

Depois faça como da primeira vez, mas aplicando a função.
df['Nomes'] = df['Nomes'].apply(verifica_repetido)

Nota Você pode fazer a mesma coisa com a função nomeada que fez com lambda
","
            0
        ",,,"['\npython', 'pandas\n']"
515596,Problema na execução de um programa em Python com classes,"
Crie uma classe empregado, com os seguintes atributos:

numero
nome
salBruto
salLiquido
taxaIRS
taxas

E os seguintes métodos:

calcIRS()
calcSS()
calcSalLiquido()

Levando em consideração as seguintes condições:

Se salário bruto >= 2000.00, taxa irs = 25%
Se salário bruto >= 1000.00 && < 2000.00, taxa irs = 20%
Se salário bruto < 1000.00, taxa irs = 17.5%
SS = taxa fixa de 11%

Crie um objeto a partir desta classe, leia um salário bruto digitado e apresente
no ecrã todos os cálculos pretendidos (Bruto, IRS, SS e Líquido).
class empregado:
    def __init__(self, numero, nome, salBruto, salLiquido, taxaIRS, taxas):
        self.numero = numero
        self.nome = nome
        self.salBruto = salBruto
        self.salLiquido = salLiquido
        self.taxaIRS = taxaIRS
        self.taxas = taxas

    def calcIRS(self):
        if (self.salBruto >= 2000):
            self.taxaIRS = self.salBruto * 0.25
        elif ((self.salBruto >= 1000) and (self.salBruto < 2000)):
            self.taxaIRS = self.salBruto * 0.20
        elif (self.salBruto < 1000):
            self.taxaIRS = self.salBruto * 0.175
        return self.taxaIRS

    def calcSS(self):
        self.taxas = self.salBruto * 0.11
        return self.taxas

    def calcSalLiquido(self):
        self.salLiquido = self.salBruto - (self.taxaIRS + self.taxas)
        return self.salLiquido



numero = int(input('Digite o numero do empregado: '))

nome = input('Digite o nome do empregado: ')

salBruto = float(input('Digite o seu salário bruto: '))

taxaIRS = empregado.calcIRS(self=salBruto)

taxas = empregado.calcSS(self=salBruto)

salLiquido = empregado.calcSalLiquido(self=salBruto)

empregado1 = empregado(numero, nome, salBruto, salLiquido, taxaIRS, taxas)



print('Dados Salário do empregado', empregado1.nome, ', nº ', empregado1.numero, ': ')
print('Salário Bruto: ', empregado1.salBruto)
print('Valor do IRS: ', empregado1.taxaIRS())
print('Valor da SS: ', empregado1.taxas())
print('Salário Líquido: ', empregado1.salLiquido())


Este erro aparece quando executo o programa e chega a parte de calcular o IRS ""'float' object has no attribute 'salBruto'"".
Alguem me poderia ajudar por favor!!
","
Seu código está errado. Explico com comentários abaixo:
# as três linhas seguintes chamam métodos da classe antes de criar a instância
taxaIRS = empregado.calcIRS(self=salBruto)

taxas = empregado.calcSS(self=salBruto)

salLiquido = empregado.calcSalLiquido(self=salBruto)

## cria uma instância de empregado só agora com parametros de construtor 
## calculados pela própria classe
empregado1 = empregado(numero, nome, salBruto, salLiquido, taxaIRS, taxas)

Uma forma de corrigir isso seria assim:
# cria uma instância de empregado usando um construtor que recebe
# os dados de entrada
empregado1 = empregado(numero, nome, salBruto)

# calcula o que precisa ser calculado usando a instância empregado1
taxaIRS = empregado1.calcIRS()

taxas = empregado1.calcSS()

salLiquido = empregado1.calcSalLiquido()

Dê uma estudada sobre como funciona a criação e o uso de classes em python. Aqui tem uma boa referẽncia: http://pythonclub.com.br/introducao-classes-metodos-python-basico.html
","
            0
        ",,,['\npython\n']
515569,webdriver.get(url) com problemas para acessar site da B3 consistentemente,"
Estou tentando acessar o site da B3 usando o Selenium, porém não consigo consistentemente acessar um URL específico. As vezes ele carrega normalmente, mas outras a página que tento abrir fica carregando por um tempo e depois retorno uma página com mensagem ""Sistema Indiponível"".
O código que estou tentando rodar, com o URL em questão:
nav = webdriver.Edge()

nav.implicitly_wait(10)

nav.get('http://www.b3.com.br/pt_br/produtos-e-servicos/negociacao/renda-variavel/empresas-listadas.htm')

O que posso fazer para conseguir acessar este URL consistentemente?
","
Tem que verificar se o wait de (10) seria segundos, se for ta muito pouco nem da tempo de carregar o site pode colocar algo em torno de 60s pelo menos.
Aqui no meu git eu faço uma conexão para extrair dados da b3 em python
https://github.com/eduardojc/acoesIbov
from urllib.request import urlopen
from datetime import datetime
from pandas import DataFrame
import json
import os.path


# array de ações a serem avaliadas
aval = ['BCFF11','BRCR11','HGRU11','ENAT3','ITSA4','KNRI11','MXRF11','SAPR4','TAEE4','TIET4','XPML11']

# inicia uma lista.    
acao = []

# percorrer as ações coletando os JSON's
print(""Atualizando: \n"")
for res in range(len(aval)):
    url = urlopen('http://cotacao.b3.com.br/mds/api/v1/instrumentQuotation/'+aval[res])
    result = url.read()
    data = json.loads(result)
    
    if(data['BizSts']['cd'] == 'OK'):
        # Ramos do JSON a serem analisados.
        ramo1 = data['Trad'][0]['scty']
        ramo2 = ramo1['SctyQtn']
        print(ramo1['symb'])
    # Verifica se tem cotação para a ação selecionada

        
        # Pega a data do DIC do JSON da ação.
        dia = data['Msg']['dtTm']
        # Converter str em data e mudar o formato para Brasileiro
        dia = datetime.strptime(dia, ""%Y-%m-%d %H:%M:%S"").strftime('%d/%m/%Y %H:%M:%S')
        
        # Percorrer o DIC e atribuir as variáveis:
        # name = Nome da Ação, minPr = Preço Min
        # maxPr = Preço Max, avrPr = Preço Médio
        # curPr = Preço Atual
        name = ramo1['symb'] 
        minPr = ramo2['minPric']
        maxPr = ramo2['maxPric']
        avrPr = ramo2['avrgPric']
        curPr = ramo2['curPrc']
        
        #depois do loop adiciona a busca ao array de 'acao' pelo método append
        acao.append([dia,name,minPr,maxPr,avrPr,curPr])
        
## Transformamos os dados em um DATAFRAME para inserir o Header
## Em Seguida verificamos se o Arquivo analise.txt Existe,
## Se não existir ele cria um nova arquivo com as cotações ""hora atual""
## Caso existir ele atualiza o arquivo com as cotações da ""hora atual""

df = DataFrame(acao,columns=['Data','Acao','Min','Max','Med','Atual'])
file = 'D:\\Analise\\analise.csv' #caminho onde será salvo o arquivo.

print('\n')
if os.path.isfile(file):
    # Abre o arquivo e salva em TXT
    df.to_csv(file, header=None, index=None, sep=',', mode='a')
    print(""Arquivo Atualizado!"")
else: 
    df.to_csv(file, header=True, index=None, sep=',', mode='w+')
    print(""Arquivo Criado!"")

","
            -2
        ",,,"['\npython', 'selenium\n']"
515548,Executar função de acordo com a chave do dicionário [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Quero que o usuário escolha uma opção e de acordo com a opção escolhida o sistema executa uma função específica. Queria uma solução mais genérica sem um monte de if, elif e else. Pensei em unir a solução a um dicionário, funcionando mais ou menos assim:
def funcao1():
    ...
    return ...

def funcao2():
    ...
    return ...

     .
     . 
     .

dicionario_funcoes = {1: funcao1(), 2: funcao2(), 3: funcao3() ... }

escolha = int(input('Escolha uma opcao: '))

lista_funcoes[escolha]

Mas isso não funciona, não executa a função conforme a escolha é feita.
","
Você não pode usar funções de forma direta assim, porque quando cria o dicionário está chamando a função, então o valor armazenado na chave será o resultado da função que é chamada, e aí nada dará certo.
Você tem que armazenar uma função que deseja chamar sem que a chamada ocorra. Com isso você não pode usar os parênteses que é o operador de chamada, armazene apenas o identificador da função na dicionário.
Depois quando for chamar a função deve aplicar os parênteses, porque são eles que fazem a chamada ocorrer usando aquele identificador. E esse identificador pode ser usado com uma variável, conforme estava tentando fazer, só não sabia como chamar.
def funcao1():
    return 1
def funcao2():
    return 2

dicionario_funcoes = { 1: funcao1, 2: funcao2 }
escolha = int(input('Escolha uma opcao: '))
print(dicionario_funcoes[escolha]())

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
Não estou fazendo um código robusto, apenas mostrando o mecanismo.
Toda sintaxe da linguagem tem um motivo para existir daquela forma, e sabendo porque ele está lá consegue aprender da forma correta. As coisas não existem na linguagem por acaso ou porque é bonitinho, foi pensado e está na documentação como funciona tudo. No caso os parênteses usados logo após um identificador ou um valor que entregue um identificador é o operador de chamada de função, onde usá-lo depende do que deseja (use quando quer chamar, não use se a intenção não é chamar). Ele não está lá só pra ficar bonito, ele tem uma função específica e pode ser usado em diversos contextos, assim como o + é assim, ou outros operadores.
","
            2
        ",,,"['\npython', 'python-3.x', 'funções', 'dicionário\n']"
515501,List Comprehension retornando zero,"
Galera, preciso da ajuda de vocês.
Estou com um código em python que gostaria que retornasse a quantidade de valores que atendem a um critério, porém esta retornando zero.
O arquivo txt contém dados como esse:
567886786765211267878783647866575678666869837678681226786789 cancelado

562342342342343123124234534645656756756756756756756765756178 assinado

555456456546544324234235434534645645645645654645645645645631 assinado

520757345873458374657834857897989988786785645342111575756432 cancelado

554234534534645647567867987089078655345231342536456575676777 cancelado

Esse é o retorno que estou tendo:
{'P1': {'Total': 2, 'Ativos': 0}, 'P2': {'Total': 2, 'Ativos': 0}, 'P3': {'Total': 1, 'Ativos': 0}}

E eu gostaria que ele me retornasse assim:
{'P1': {'Total': 2, 'Ativos': 0}, 'P2': {'Total': 2, 'Ativos': 1}, 'P3': {'Total': 1, 'Ativos': 1}}

Esse é o código
with open('log.txt','r') as file:
    arquivo = filter(None, [line.rstrip('\n').split() for line in file])

prefixo = []
    status = []
    for linha in arquivo:
        prefixo.append(linha[0][:2])
        status.append(linha[1])
    data = zip(prefixo, status)
    
paises = {
    'P1': {
        'Total': [p for p in prefixo if p == '55'].count('55'),
        'Ativos': [d for d in data if d[0] == '55' and d[1] == 'assinado'].count('assinado')
    },
    'P2': {
        'Total': [p for p in prefixo if p == '56'].count('56'),
        'Ativos': [d for d in data if d[0] == '56' and d[1] == 'assinado'].count('assinado')
    },

    'P3': {
        'Total': [p for p in prefixo if p == '52'].count('52'),
        'Ativos': [d for d in data if d[0] == '52' and d[1] == 'assinado'].count('assinado')
    },
}

Se puderem me ajudar
","
O problema é que zip retorna um iterável que só pode ser percorrido/iterado uma vez. Exemplo:
x = [1, 2, 3]
y = [ 'a', 'b', 'c']
z = zip(x, y)

print('primeira vez:', [ d for d in z ])
print('segunda vez:', [ d for d in z ])

A saída deste código é:
primeira vez: [(1, 'a'), (2, 'b'), (3, 'c')]
segunda vez: []

Pois na primeira vez eu percorro todos os elementos do iterável, e na segunda vez não tem mais o que percorrer. Por isso suas contagens resultam em zero, pois a partir da segunda vez que você percorre o data, não tem mais nenhum elemento, e por isso a contagem é zero.
Uma forma - não muito eficiente - de resolver seria colocar o conteúdo em uma lista:
data = list(zip(prefixo, status))

E nas list comprehensions você tem que pegar o elemento que corresponde ao status (ou seja: [d[1] for d in data if d[0] == '55' and d[1] == 'assinado'].count('assinado')).
Mas essa solução é ineficiente porque depois você percorre várias vezes a mesma lista, e chama count várias vezes (sendo que cada chamada de count percorre a lista novamente). Sem contar que você está colocando todo o conteúdo do arquivo em uma lista (se ele for muito grande, será um gasto desnecessário de memória).
Uma solução melhor é ler o arquivo linha a linha e ir atualizando o dicionário a cada linha lida. Um exemplo de como ficaria:
def get_pais(prefixo): # não precisa do slice [:2], basta ver se começa com os dígitos
    if prefixo.startswith('55'):
        return 'P1'
    elif prefixo.startswith('56'):
        return 'P2'
    elif prefixo.startswith('52'):
        return 'P3'
    return None

paises = {}
with open('log.txt', 'r') as arquivo:
    for linha in arquivo: # lê o arquivo linha a linha
        dados = linha.rstrip('\n').split()
        if len(dados) != 2: # se a linha não tem todos os dados, vai para a próxima
            continue
        prefixo, status = dados # separa o prefixo e o status
        pais = get_pais(prefixo)

        if pais is not None: # se o país é válido
            if pais not in paises:  # se o país ainda não está no dicionário paises
                paises[pais] = { 'Total': 0, 'Ativos': 0 }
            paises[pais]['Total'] += 1
            if status == 'assinado':
                paises[pais]['Ativos'] += 1

","
            1
        ",,,"['\npython', 'python-3.x', 'array', 'dicionário\n']"
515491,Como separar números em python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



É possível incluir mais de uma variável por 'input' no Python?

                                (3 respostas)
                            


Contar o número de ocorrências de um valor numa list

                                (2 respostas)
                            

Fechada há 10 meses.



Escreva um algoritmo que recebe um valor inteiro m. Logo após, seu programa receberá uma sequência de valores inteiros maiores ou iguais a 0 e menores do que m, separados por vírgula.  Seu programa deve imprimir na tela quantas vezes cada número da sequência apareceu, em ordem.
Utilize o exemplo abaixo para entender como os dados serão recebidos e como a saída deve ser exibida.
Exemplo de entrada:
4
3,1,3,0,1,1,1,3,1,3
Exemplo de saída:
0,1
1,5
3,4
No exemplo acima, as entradas m = 4 e 3,1,3,0,1,1,1,3,1,3 representa uma sequência de números inteiros separados por vírgula. Já a saída indica que o número 0 apareceu 1 vez, o número 1 apareceu 5 vezes e o número 3 apareceu 4 vezes na sequência.
Apenas as seguintes funções são permitidas nesse exercício: input print int str split len append
",,,,,['\npython\n']
515341,Pandas - Exibição após groupby,"
Como faço para que a coluna Escritórios não fique em branco, repetindo assim o nome do escritório?
mun_df = planta_df[['Empresas', 'Escritórios', 'Municípios', 'Estados']]
mun_df = mun_df.groupby(['Empresas', 'Escritórios', 'Municípios']).count()
mun_df = mun_df.rename(columns={'Estados': 'Acessos'})

mun_df.to_excel('Disponibilidade.xlsx', sheet_name='Municípios')


","
O reset_index() é o seu amigo neste caso. Veja o exemplo abaixo:
Criando dataframe de teste
>>> import pandas as pd

>>> df = pd.DataFrame({""Escritorios"": [""A"", ""A"",""A"",""A"",""A""], ""Municipios"": [""Aruja"", ""Poa"", ""Poa"", ""Aruja"", ""Poa""], ""Acessos"": [1, 2, 2, 1, 2]})

>>> df
  Escritorios Municipios  Acessos
0           A      Aruja        1
1           A        Poa        2
2           A        Poa        2
3           A      Aruja        1
4           A        Poa        2

Agrupando dados
>>> df.groupby([""Escritorios"", ""Municipios""])[""Acessos""].sum()

Escritorios  Municipios
A            Aruja         2
             Poa           6
Name: Acessos, dtype: int64

Agrupando dados e usando o reset_index()
>>> df.groupby([""Escritorios"", ""Municipios""])[""Acessos""].sum().reset_index()

  Escritorios Municipios  Acessos
0           A      Aruja        2
1           A        Poa        6

Ou seja, basta atribuir a um novo dataframe e salvar para Excel
","
            1
        ",,,"['\npython', 'pandas\n']"
515322,Escrever em um arquivo .txt com laço 'for' no Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 9 meses.




                        Melhore esta pergunta
                    



Preciso que um arquivo .txt guarde o último serial gerado, para das próximas vezes que for executado esse arquivo ser lido e continuar a sequencia. Ou seja, se o ultimo serial(serial2) gerado for o número 6 quero que seja guardado o número 6 no txt para que na proxima execução do código ele inicie no 6. Estou usando o txt como um ""Banco de Dados"".
def GerarSerial(start_at=int(open('ultimaos.txt', 'r').readlines(0)[0])+1):
    serial = f'{start_at:0>5}'
    serial2 = f'{start_at+1:0>5}'
    with open('ultimaos.txt', 'w') as ultimaosarquivo:
        ultimaosarquivo.write(serial2)
    with open('ultimaos.txt', 'r') as ultimaosarquivo:
        ultima_os = ultimaosarquivo.readlines(0)[0]
    return f'{ultima_os:0>5}'

if __name__ == '__main__':
    for x in range(3):
        GerarSerial()
        print(GerarSerial())

ultimaos.txt:
00006

Porém ao executar o código ele apenas repete o valor 3 vezes.
","
O problema é que você definiu um valor default para o parâmetro start_at. E segundo a documentação, esse valor só é avaliado uma vez, quando a função é criada, e depois não muda mais:

Default parameter values are evaluated from left to right when the function definition is executed. This means that the expression is evaluated once, when the function is defined, and that the same “pre-computed” value is used for each call.

Ou seja, quando você cria a função, o start_at terá o valor default com base no conteúdo atual do arquivo, somado com 1. E para todas as chamadas feitas sem nenhum argumento, será usado o valor inicial que ele tinha. Por isso que, não importa quantas vezes você chame a função, o mesmo valor está sendo usado.
Sendo assim, retire este parâmetro. Dentro da função você tem que sempre ler o valor atual e somar 1:
def GerarSerial(arquivo='ultimaos.txt'): # acho que faz mais sentido o nome do arquivo ser um parâmetro
    try:
        # tenta ler o arquivo
        with open(arquivo, 'r') as arq:
            atual = int(arq.read()) # como o arquivo só tem uma linha, lê tudo
    except OSError:
        # se o arquivo não existe, começa um novo serial
        # mas também poderia dar erro, você decide o que faz mais sentido para o seu caso
        atual = 0

    # calcula o novo serial (no caso, soma 1 com o atual)
    serial = f'{atual + 1:0>5}'
    with open(arquivo, 'w') as arq: # atualiza o arquivo
        arq.write(serial)
    return serial

for _ in range(3):
    print(GerarSerial())

Como o arquivo sempre tem apenas uma linha, não precisa de readlines para ler todas as linhas e depois pegar a primeira. Basta usar read para ler tudo (mas também poderia ser readline() - no singular - para ler a primeira linha).
Claro que faltou verificar se o conteúdo é um número mesmo, mas a ideia geral é essa: se o arquivo não existe, começa um novo serial (mas poderia dar erro, você decide o que faz mais sentido para o seu caso), e se existe, lê o conteúdo dele.
Depois basta somar 1 e gravar o novo serial no arquivo, e retornar este serial. E veja que não precisa abrir de novo o arquivo para ler o que você acabou de gravar, pois isso já está na variável serial.
","
            0
        ",,,"['\npython', 'arquivo\n']"
515289,Como fazer uma chamada de um script que está em outra pasta,"
Pessoal estou desenvolvendo um processo na qual será necessário fazer um chamada em um script que está em um outro diretório.
Tenho um script que está no diretório /home/formiga/testes/mobile/myphone.sh
Se eu precisasse fazer esse fluxo no shell eu faria:
FORM_PATH=""/home/formiga/testes/mobile/""
CHECK_CMP=""$FORM_PATH/myphone.sh""
Como eu poderia fazer essa chamada no python?
Obrigado
","
Fala Formiga! Tudo bem?
Acredito que sua pergunta ficou muito aberta. Ao criar sua dúvida, lembre sempre de colocar mais detalhes, exemplos do seu código e descrever suas tentativas e erros. Para o código, você pode utilizar o os.chdir() para alterar o local do diretório atual.
Lembre-se de importar o módulo com o import os.
Ao mudar o diretório para o local do arquivo é possível utilizar algo para executar seu script como o  subprocess e seu método run() que executa comandos passados para ele em string
","
            0
        ",,,"['\npython', 'python-3.x\n']"
515265,Função extrair coluna csv Python,"
Fiz esta função para extrair a coluna desejada do csv.
Depois, realizar um append na coluna[] passando um while para somente pegar o indice da coluna correspondente. E por fim uma condição para separar str de int.
Minha dúvida esta no retorno destes dados, que ao invés de trazer somente o tipo de dado str ele também retorna os int.
Agradeço desde já.
%%writefile carros.csv
id│valor_venda│valor_manutencao│portas│pessoas│porta_malas
1 │vhigh      │med             │2     │2      │small
2 │med        │vhigh           │2     │2      │small
3 │low        │vhigh           │2     │2      │small
4 │low        │high            │2     │2      │small
5 │low        │high            │2     │2      │small
6 │low        │high            │4     │4      │big
7 │low        │high            │4     │4      │big
8 │low        │med             │2     │2      │small
9 │low        │med             │2     │2      │small
10│low        │med             │2     │2      │small
11│low        │med             │4     │4      │big
12│low        │low             │2     │2      │small
13│low        │low             │4     │4      │small
14│low        │low             │4     │4      │med


def extrai_coluna_csv(nome_arquivo: str, indice_coluna: int, tipo_dado: str):

coluna = []

    ## leia o arquivo com o comando 'with' utilizando o parametro 'nome_arquivo'
with open(file=nome_arquivo, mode='r', encoding='utf8') as fp:

    ## extraia a coluna do arquivo utilizando o parametro 'indice_coluna'
linha = fp.readline()
linha_separada = linha.split(sep=',')
linha = linha_separada[indice_coluna]

coluna.append(linha)

    ## use a estrutura de decisão if/elif/else para fazer a conversão do tipo de dados utilizando o parametro 'tipo_dado'
while linha:

    if tipo_dado == 'str':
        coluna.append(linha)
    elif tipo_dado == 'int':
        coluna.append(linha)
    else:
        print('Error')

    linha = fp.readline()

return coluna


## extrair a coluna valor_venda
  valor_venda = extrai_coluna_csv(
  nome_arquivo='./carros.csv', indice_coluna=1, tipo_dado='str')
  print(valor_venda)  # deve retornar ['vhigh', 'med', 'low', ...]

","
Não acho que este seja o jeito mais pythônico de fazer mas alterei o código com um workaround. Primeiro, tirei a declaração do tipo da variável tipo_dado na função extrai_coluna_csv. Assim, posso colocar qualquer tipo de variável ali. Comentários inline explicam o uso.
def extrai_coluna_csv(nome_arquivo: str, indice_coluna: int, tipo_dado):
    print(isinstance(tipo_dado, int))
    coluna = []

    ## leia o arquivo com o comando 'with' utilizando o parametro 'nome_arquivo'
    with open(file=nome_arquivo, mode='r', encoding='utf8') as fp:
        linha=linha = fp.readline()
        while len(linha):
            ## extraia a coluna do arquivo utilizando o parametro 'indice_coluna'
            linha = fp.readline()
            #print(linha)
            linha_separada = linha.split(sep=',')
            #print(linha_separada)
            if indice_coluna >= len(linha_separada):
                break
            
            linha = linha_separada[indice_coluna]
            coluna.append(linha)
            ## use a estrutura de decisão if/elif/else para fazer a conversão do tipo de dados utilizando o parametro 'tipo_dado'
            if isinstance(tipo_dado, str):
                coluna.append(linha)
            elif isinstance(tipo_dado, int):
                coluna.append(linha)
            else:
                print('Error')

    return coluna


## extrair a coluna valor_venda
## passei um valor do tipo string no tipo_dado
valor_venda = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=1, tipo_dado="""")
print(valor_venda)  # deve retornar ['vhigh', 'med', 'low', ...]

## extrair a coluna portas
## passei um valor de tipo numérico no tipo dado
valor_venda = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=1, tipo_dado=1)
print(valor_venda) 

","
            0
        ",,,['\npython\n']
515232,Como ler <br/> em arquivos HTML e imprimir como quebra de linha?,"
Fiz um web scraper utilizando os módulos BeautifulSoup e requests, que pega a definição e exemplo de conceitos no Urban Dictionary. Este é código, utilizando a palavra ""reparation"" como exemplo.
word = 'reparation'
r = requests.get(""http://www.urbandictionary.com/define.php?term={}"".format(word))
soup = BeautifulSoup(r.content, features='html.parser')
definition = soup.find(""div"", attrs={""class"": ""meaning""}).text
example = soup.find(""div"", attrs={""class"": ""example""}).text

O programa retorna o exemplo do site como:

""Bob: Here is $50 for me hitting you.Charles: Thanks for the reparation.""

Porém, há duas quebras de linha no site, deixando o exemplo como:

""Bob: Here is $50 for me hitting you.
Charles: Thanks for the reparation.""

Como faço para incorporar essas quebras na string example?
","
Como text retorna o texto sem as tags, o <br> também é removido.
Então o jeito seria substituir as tags <br> antes de obter o text:
# obtém a tag (e não o text)
example = soup.find(""div"", attrs={""class"": ""example""})
# substitui os br que tem dentro da tag
for br in example.find_all(""br""):
    br.replace_with(""\n"")

# agora sim pega o texto
print(example.text)

Com isso eu troco cada br por uma quebra de linha (\n), e a saída será:
Bob: Here is $50 for me hitting you.

Charles: Thanks for the reparation.


Ou, em vez de substituir a tag, podemos adicionar a quebra de linha nela:
for br in example.find_all(""br""):
    br.append(""\n"") # usar append em vez de replace_with

print(example.text)

A diferença é que agora as tags br terão como conteúdo a quebra de linha (\n), e quando chamarmos text, ele removerá as tags mas manterá o \n.
Vale lembrar que tanto o MDN quanto o WHATWG definem que a tag br não tem conteúdo. Embora o WHATWG defina que na verdade o conteúdo do br é um ""Nothing content model"", que por sua vez só pode ter um inter-element whitespace (que por sua vez, é definido como um ou mais ASCII whitespaces, que no caso podem ser espaços, TAB's e quebras de linha - ou seja, o \n seria um conteúdo válido para a tag br, por isso tanto o append quanto o replace_with seriam soluções válidas).
","
            2
        ",,,"['\nhtml', 'python', 'python-3.x', 'web-scraping', 'beautifulsoup\n']"
515184,Python - append no mesmo DataFrame,"
tenho o seguinte codígo para extrair dados do yahoo que funciona perfeitamente.
O meu problema é que queria inserir todos os dados em uma mesma tabela, toda vez que ele entrar no FOR ele ir add à tabela, mas não estou conseguindo.
Obrigado pela ajuda desde já.
for codigo_acao in acoes_ibov[""Papel""]:
print(""Acessando informações da ação: "",codigo_acao)



url = ""https://br.financas.yahoo.com/quote/""+ codigo_acao +"".SA/history?period1=1170288000&period2=4117305600&interval=div%7Csplit&filter=div&frequency=1d&includeAdjustedClose=true""

header = {
  ""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.75 Safari/537.36"",
  ""X-Requested-With"": ""XMLHttpRequest""
}

r = requests.get(url, headers=header)


acao = pd.read_html(r.text ,decimal = "","", thousands = ""."" )

acao = acao[0].iloc[1:-1,:2]

informacoes_1= acao.insert(loc= 0,column=""Papel"",value=codigo_acao)
print(""Informações"")
display(acao)

","
Você pode utilizar o append do pandas, nesse caso foi criado um novo data frame para ir adicionando os resultados a ele:
import pandas as pd
import requests

header = {
      ""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.75 Safari/537.36"",
      ""X-Requested-With"": ""XMLHttpRequest""
}

# novo data frame
df = pd.DataFrame(columns=['Papel','Símbolo','Nome'])

acoes_ibov = ['AAPL','FB']

for codigo_acao in acoes_ibov:
    print(""Acessando informações da ação: "", codigo_acao)

    url = ""https://br.financas.yahoo.com/quote/""+ codigo_acao +"".SA/history?period1=1170288000&period2=4117305600&interval=div%7Csplit&filter=div&frequency=1d&includeAdjustedClose=true""

    r = requests.get(url, headers=header)

    acao = pd.read_html(r.text ,decimal = "","", thousands = ""."" )
    acao = acao[0].iloc[1:-1,:2]
    acao.insert(loc=0, column=""Papel"", value=codigo_acao)
    df = df.append(acao)
    
display(df.head())

Coloquei as acoes_ibov pois você não forneceu.
","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
515056,Group By sem 'mesclar' rótulos de dados python,"
Olá, pessoal, tenho o dataframe abaixo e preciso agrupar e somar as colunas. Para isso estou usando o groupby, porém no resultado os rótulos são cancatenados, existe uma forma de isso não acontecer?
Na coluna 'codes' gostaria que para cada linha repetisse o código.
import pandas as pd
import numpy as np

codes=['2', '2', '2', '3','3','3', '2', '3']
ano_mes=['201809', '201809', '201809', '201809','201809','201809', '201810', '201810']
produto=['Meal', 'Meal', 'Meal', 'Food', 'Food', 'Food', 'Food', 'Food']
sales=[200,300,400,200,300,300,200, 150]
receita=[2,3,4,2,3,3,2,1.5]


df = pd.DataFrame({'codes': codes,
                   'ano_mes':ano_mes,
                   'produto': produto,
                  'sales': sales,
                  'receita': receita})

df_2 = df.groupby(['codes', 'ano_mes', 'produto']).sum()


","
Você pode ""resetar"" o index fazendo uso da função reset_index() para que todos os valores sejam mostrados:
...
df_2 = df.groupby(['codes', 'ano_mes','produto']).sum().reset_index().to_string(index=False)

Ou (para melhor visualização):
...
df_2 = df.groupby(['codes', 'ano_mes', 'produto']).sum()
df_2 = df_2.reset_index().to_string(index=False)

Feito isso, o output de df_2 ficará da forma que você deseja:
codes ano_mes produto  sales  receita
    2  201809    Meal    900      9.0
    2  201810    Food    200      2.0
    3  201809    Food    800      8.0
    3  201810    Food    150      1.5

A função reset_index() tem como função ""resetar"" o index do DataFrame e usar o index padrão no lugar.
","
            0
        ",,,"['\npython', 'python-3.x', 'pandas\n']"
515046,Inserir nomes a uma lista dependendo de seu valor,"
Estou tentando fazer um código de sorteio, o usuário insere o valor a ser doado e o seu nome.
Vamos supor que Bia doe 10 reais, o nome de Bia tem que aparecer 1 vez na lista.
E vamos supor que Samuel doe 30 reais, o nome dele teria que aparecer 3 vezes na lista.
Ex: ['Bia', 'Samuel', 'Samuel', 'Samuel'] 

E assim, sucessivamente.
Eu não estou conseguindo separar o nome do usuário em uma lista, ele fica desse jeito no terminal:

E o meu código está assim:
valor = int(input('Digite o valor que você deseja doar: '))
nome = input('Qual o seu nome? ')

if valor == 10:
    total = 1
    totalNome = [nome * 1]
    print('Você vai concorrer {} vez.'.format(total))
elif valor == 20:
    total = 2
    totalNome = [nome * 2]
    print('Você vai concorrer {} vezes.'.format(total))
elif valor == 30:
    total = 3
    totalNome = [nome * 3]
    print('Você vai concorrer {} vezes.'.format(total))

nomes = []
nomes.append(totalNome)
print(nomes)

","
Quando você faz [ algo ], está criando uma lista (por causa dos [ ]), com um único elemento (algo).
No seu caso, esse algo é nome * 3, que basicamente é a string nome ""multiplicada por 3"". Em Python, quando você ""multiplica"" uma string por um número, o resultado é outra string, com o seu conteúdo repetido várias vezes. Ou seja, se nome for a string ""Samuel"", então nome * 3 será a string ""SamuelSamuelSamuel"".
Portanto, você está criando uma lista contendo apenas um elemento: uma string com o nome repetido várias vezes.
Se a ideia é criar uma lista com o mesmo nome várias vezes, você poderia fazer [ nome ] * 3 (a lista [ nome ] contém o nome uma vez, e ao ""multiplicar"" a lista por um número, você cria uma lista com este elemento repetido várias vezes), que resulta em uma lista com 3 elementos (todos iguais a nome).
Outro ponto é que no final você adiciona esta lista em outra lista, mas não parece ser o que você quer.
O que teria que ser feito é ter uma única lista, e você insere somente nela. Algo assim:
nomes = []

for _ in range(3): # lê 3 nomes (pode mudar para quantos precisar)
    # lê os dados e atualiza os nomes
    valor = int(input('Digite o valor que você deseja doar: '))
    nome = input('Qual o seu nome? ')
    total, resto = divmod(valor, 10)
    if resto == 0 and total > 0:
        print(f'Você vai concorrer {total} vez{""es"" if total > 1 else """"}.')
        nomes.extend([ nome ] * total)
    else:
        print('valor inválido, deve ser múltiplo de 10 e maior que zero')

print(nomes)

Como os valores devem ser múltiplos de 10, usei divmod para pegar o resultado da divisão por 10 e o resto desta divisão. Assim, se o resto não for zero, o valor é inválido.
Depois eu uso [ nome ] * total para criar a lista com o nome repetido várias vezes, e uso extend para adicionar esses elementos na lista nomes.
Coloquei em um loop para ler vários nomes, mas aí você pode adaptar de acordo.

Depois você pode embaralhar com random.shuffle, se quiser:
from random import shuffle
shuffle(nomes)

Se bem que, para sortear um valor qualquer, bastaria usar random.choice (talvez nem precise embaralhar, já que choice vai escolher um item da lista aleatoriamente, e tanto faz em que posição eles estão):
from random import choice
sorteado = choice(nomes)

","
            2
        ","
Uma maneira de resolver este problema é inserindo as pessoas diretamente em um array e depois fazer o sorteio.
Segue um exemplo:
from random import choice

def inserirNoSorteio(lista, nome, qtd):
    for i in range(qtd):
        lista.append(nome)
    return lista


repetir = True nomes = []

while repetir:
    valor = int(input('Digite o valor que você deseja doar: '))
    nome = input('Qual o seu nome? ')

    if valor < 20:
        total = 1
        inserirNoSorteio(nomes, nome, total)
        print('{} vai concorrer {} vezes.'.format(nome, total))
    elif valor < 30:
        total = 2
        inserirNoSorteio(nomes, nome, total)
        print('{} vai concorrer {} vezes.'.format(nome, total))
    else:
        total = 3
        inserirNoSorteio(nomes, nome, total)
        print('{} vai concorrer {} vezes.'.format(nome, total))
    
    
    inserirMaisPessoas = input('Deseja adicionar mais pessoas? (s/n)')
    if inserirMaisPessoas[0].lower() == 'n':
        repetir = False
     print('Sorteando o ganhador...') sorteado = choice(nomes) print(nomes) print('O ganhador foi: {}'.format(sorteado))

Explicando o código
Em meu exemplo utilizei a função choice do modulo random do Python. Esta função vai retornar um elemento aleatório de uma lista não vazia. Caso a lista esteja vazia é lançado o erro  IndexError.
Minha lógica é baseada no código que foi fornecido, mas eu fiz algumas suposições em relação aos valores que o usuário pode doar. Por exemplo: se eu doar valores menores que 20, sempre vou adicionar o nome 1x, se for maior ou igual a 20, faço a inserção na lista do sorteio 2x, caso seja maior que 30 apenas 3x, então se o usuário doar 50, o nome dele será inserido 3x.
Para isso deixamos o usuário em um loop de inserção de doação e nome.
Após o usuário não querer mais inserir pessoas no sorteio é feito o sorteio com as pessoas da lista.
Estou exibindo o array de nomes (pessoas no sorteio), apenas para propósito de debug.
","
            1
        ","['\npython', 'python-3.x', 'lista\n']"
515035,UnboundLocalError: local variable 'res' referenced before assignment - erro no varrimento de imagem raster (como numpy array),"
Eu criei um programa que recebe imagens raster (criadas em arcmap) e reconhece os seus polígonos (as suas divisões). Primeiro, o que eu fiz foi transformar a imagem num numpy array. Segue uma imagem exemplo construída em matplotlib:

Depois, A esse array associei um dict no formato:
polygon_dict = {poligon_number : {'class' : 1, 'pix_list' : [(0, 1), (0, 2), (0, 3)...]}}
(nota: polygon_number é um inteiro e class não é relevante aqui para o problema, mas é representada pela cor de cada polígono na imagem)
A minha pergunta tem a ver com a seguinte função que eu criei, BelongsToPolygon, que recebe um par de coordenadas x, y (linha, coluna) e retorna o número do polígono a que esse par de coordenadas pertence.
def BelongsToPolygon(x, y):
    d = polygon_dict           # polygon_dict é uma variável global e com formato referido acima
    for key, val in d.items():
        for i,j in val['pix_list']:
            if i == x and j == y:
                res = key
                break  
    return res

No entanto, eu fiz um teste para todas as coordenadas da matriz, de tamanho 250 x 254:
for i in range(n_rows):
    for j in range(n_cols):
        print('\n')
        print('i, j', i, j, BelongsToPolygon(i, j))


E o output foi:
i, j 0 0 0


i, j 0 1 0

...

i, j 32 95 4


i, j 32 96 4


Traceback (most recent call last):

  File ""<ipython-input-14-bf48386ad0ff>"", line 4, in <module>
    print('i, j', i, j, BelongsToPolygon(i, j))

  File ""C:\Users\Sarocas\Desktop\tosendtome\qgis_polygon_no_coords.py"", line 519, in BelongsToPolygon
    return res

UnboundLocalError: local variable 'res' referenced before assignment


Alguém sabe dizer-me o motivo para este erro aparecer? O código é muito maior que isto, mas ele só se queixa desta função.
","
Esse erro aparece quando se tentar usar uma variável que ainda não teve valor atribuido.
Olhando o código da sua função, dá para ver que o ""res"" é atribuido dentro de uma condição (if) - e seu valor é usado só no comando return. Isso significa que esse erro acontece nas situações em que aquele if nunca é verdadeiro, e a execução da função chega ao fim sem existir um valor em res (no caso,a posição requisitada não foi encontrada).
Para não acontecer um erro num caso desses, você tem que convencionar um valor de retorno para quando a posição não for encontrada (por exemplo, None), e atribuir esse valor à variável antes de entrar nos laços for. Nesse caso se a busca nunca encontrar nada, ao chegar no return, res vai ter esse valor padrão:
def BelongsToPolygon(x, y):
    d = polygon_dict           # polygon_dict é uma variável global e com formato referido acima
    res = None
    for key, val in d.items():
        for i,j in val['pix_list']:
            if i == x and j == y:
                res = key
                break  
    return res

","
            0
        ",,,"['\npython', 'python-3.x', 'array', 'numpy', 'processamento-de-imagens\n']"
515024,Permitir maximizar e minimizar janelas no PySimpleGUI,"
Estou tentando fazer um programa de texto/notas, como o Word ou o bloco de notas no PySimpleGUI. Antes de começar a faze-lo, precisei de programas de teste, e em um deles eu tenho um problema: permitir maximizar e retornar ao tamanho original.
Pesquisei bastante e encontrei o maximize, em que maximizava a tela, mas não permitia alternar. Até que eu pensei que poderia ter um event para isso, e eu simplesmente não encontro nada a respeito.
Segue meu código:
import tkinter as tk
from PySimpleGUI import PySimpleGUI as sg
sg.theme('Default1')
layout = [
    [sg.Text('oi')]
    ]
x = sg.Window('teste', layout=layout, finalize=True, size = (600,600))
x.maximize()
while True:
    event, values = x.read()
    if event == sg.WINDOW_CLOSED:
        break

Então como eu poderia ativar a maximização/retornar ao tamanho original da janela no PySimpleGUI?
Estou utilizando o Windows 10 Pro, 64bit.
Por favor, qualquer erro na pergunta comentem para eu alterá-la!
","
Olhando a documentação (readthedocs.io), veja que tem a opção resizable = False,, o padrão é False então basta ajustar para True, exemplo:
# -*- coding: utf-8 -*-

import PySimpleGUI as sg

sg.theme('DarkAmber')

layout = [  [sg.Text('Foo')],
            [sg.Text('Bar'), sg.InputText()],
            [sg.Button('Confirmar'), sg.Button('Cancelar')] ]

window = sg.Window('Window Title', layout, resizable = True)

while True:
    event, values = window.read()
    if event == sg.WIN_CLOSED or event == 'Cancelar':
        break

    print('Você escreveu: ', values[0])

window.close()

","
            2
        ",,,"['\npython', 'python-3.x', 'interface', 'módulo\n']"
514949,Como fazer algoritmo de tabuada rodar novamente se o usuário escolher rodar de novo? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Método de escolha com while

                                (1 resposta)
                            


Continuar loop caso entrada seja 'S'

                                (3 respostas)
                            

Fechada há 10 meses.



from time import sleep
print('-=-'*20)
print('Tabuada da adição')
print('-=-'*20)
n = int(input('Insira um número: '))
n0 = n + 0 
n1 = n + 1
n2 = n + 2
n3 = n + 3
n4 = n + 4
n5 = n + 5
n6 = n + 6
n7 = n + 7
n8 = n + 8
n9 = n + 9
n10 = n + 10
sleep(2)
print('Aguarde um pouco enquanto estou carregando.....')
print('{}+0 = {}'.format(n, n0))
print('{}+1 = {}'.format(n, n1))
print('{}+2 = {}'.format(n, n2))
print('{}+3 = {}'.format(n, n3))
print('{}+4 = {}'.format(n, n4))
print('{}+5 = {}'.format(n, n5))
print('{}+6 = {}'.format(n, n6))
print('{}+7 = {}'.format(n, n7))
print('{}+8 = {}'.fomrat(n, n8))
print('{}+9 = {}'.format(n, n9))
print('{}+10 = {}'.format(n, n10))
r = str(input('Deseja escolher outro número ? '))

","
Uma maneira de resolver o problema, seria colocar o seu código dentro de uma estrutura de um laço de repetição e manter a execução do programa em loop até que o usuário faça a opção de sair do programa.
Segue um exemplo de como pode ser implementado:
repetir = True
while repetir:
    #seu código
    entrada = input('Deseja executar novamente? (s/n)')
    if entrada[0].lower() == 'n':
        repetir = False

Para este exemplo utilizamos o laço de repetição while, a função lower da classe str e estamos extraindo a primeira posição do array, para fazer a decisão de exibir novamente.
Repare que desta forma a única maneira de parar a repetição é respondendo ""n"", foi implementado desta maneira por simplicidade, essa implementação não vai considerar a resposta ""s"", qualquer escolha do usuário (exceto a resposta n) vai fazer que haja uma nova repetição do código.
","
            2
        ",,,"['\npython', 'visual-studio-code\n']"
514870,Como juntar 2 listas em um dicionário?,"
Quero pegar 2 listas e transformá-las num dicionário, em que cada item tenha como chave o i-ésimo item da primeira lista e como valor o i-ésimo item da segunda lista.
Fiz esse código até agora:
lista_de_compras = ['arroz', 'feijao', 'macarrao']
preco_dos_itens = ['2.00', '3.80', '4.90']

lista_nova = {}

for item in lista_de_compras:
    for preco in preco_dos_itens:
        lista_nova[item] = preco

print(lista_nova)

Porém, quando eu printo essa lista_nova (que no caso é o dicionário), ele aplica os itens corretamente nas chaves, porém não entendi o pq ele repetir em todos só o último preço do item pra todos os itens, e como resolver esse problema:
output:

{'arroz': '4.90', 'feijao': '4.90', 'macarrao': '4.90'}

","
O que você deseja é a função interna zip() (documentação).
Essa função recebe uma lista de iteradores, e retorna um novo iterador, em que cada elemento é uma tupla contida por um elemento correspondente de cada iterador original.
Exemplo: Se a lista A = [1,2,3] e a lista B=[4,5,6], então zip(A,B) irá retornar (1,4), (2,5), (3,6).
Aplicando em seu caso, temos:
lista_de_compras = ['arroz', 'feijao', 'macarrao']
preco_dos_itens = ['2.00', '3.80', '4.90']
dict = {}
for i,j in zip(lista_de_compras, preco_dos_itens):
    dict[i] = j
print(dict) // {'arroz': '2.00', 'feijao': '3.80', 'macarrao': '4.90'}

O que você estava fazendo anteriormente, (isto é, vários for aninhados) não funcionava pois para cada caso único, você percorria a segunda lista inteira, o que não era o desejado.
","
            7
        ","
É desnecessário em python montar laços de iteração para criar dicionários a partir de duas listas de mesmo comprimento. Apenas agregue as listas com a função embutida zip() e passe o resultado obtido como argumento para o constructor do dicionário:
lista_de_compras = ['arroz', 'feijao', 'macarrao']
preco_dos_itens = ['2.00', '3.80', '4.90']

d = dict(zip(lista_de_compras, preco_dos_itens))

print(d)     #{'arroz': '2.00', 'feijao': '3.80', 'macarrao': '4.90'}

Teste o exemplo no IdeOne e teste no Repl.it
","
            6
        ",['\npython\n']
514732,Toda função precisa um return ao final de sua execução?,"
Bom dia a todos, estou começando meus estudos em python e durante a programação de uma função que vai na planilha e transfere os valores para um dicionário me surgiu uma dúvida: Todas as funções necessitam de um retorno?
No meu caso o dicionário foi iniciado na função init sendo assim eu vou querer o resultado após o dicionário ser preenchido com todos materiais de cada setor.
vou deixar o exemplo do código caso eu não tenha conseguido ser claro.
class ProdutoPai(object):

def __init__(self, quantidade):
    self.quantidade = quantidade
    self.materiais = {}
    self.chaves = [""Codigo"", ""Descrição"", ""Quantidade"", ""Unidade"", ""Preço""]

def setor(self):        """"""
    Essa função acrescenta a self.materiais os materiais usado no DAC para fabricação do modulo base

    :return: None
    """"""
    wb = load_workbook(self.url)
    ws = wb[""setor""]
    linhas = ws.max_row
    prod = self.materiais[""produto 1""] = {}

    for linha in range(1, linhas + 1):
       prod[ws[""A{}"".format(linha)].value] = {self.chaves[0]: ws[""A{}"".format(linha)].value,
                                             self.chaves[1]: ws[""B{}"".format(linha)].value,
                                             self.chaves[2]: (ws[""D{}"".format(linha)].value * self.quantidade),
                                             self.chaves[3]: ws[""C{}"".format(linha)].value,
                                             self.chaves[4]: (ws[""F{}"".format(linha)].value *
                                                              (ws[""D{}"".format(linha)].value * self.quantidade))}

","
A resposta depende um pouco do que você quer dizer com ""necessitar um retorno"".
Se você está perguntando se Python sempre retorna algum valor de uma função, a resposta é sim. Todas as funções em Python retornam algum valor, ainda que este valor seja o valor nulo (None).
Se você está perguntando se Python obriga você, programador, a retornar algum valor de uma função, a resposta é não. Não é necessário adicionar um valor de retorno explícito; na realidade, se você não adicionar a linha final com return algum_valor, o Python implicitamente irá retornar None.
Se você está perguntando se faz sentido criar uma função que não retorna algum valor, a resposta é depende do que você quer fazer. Em muitos casos, estamos interessados em algum ""efeito colateral"" produzido ao chamarmos uma função, como modificar um objeto mutável ou salvar um arquivo em disco. O próprio Python apresenta esse comportamento na biblioteca padrão: a função print retorna None, porque estamos interessados no seu ""efeito colateral"" (mostrar texto na tela), e não no que ela retorna.
Esse é o caso do seu método setor, que modifica o dicionário (objeto mutável) self.materiais diretamente. Como sua classe mantém uma referência a esse dicionário, não há necessidade explícita de retorná-lo. Quando falamos de classes - objetos cujo estado pode ser acessado e modificado durante a execução do código - isto é algo bastante comum.
Dito tudo isso, vale mencionar que, caso você tenha muitas funções com efeitos colaterais, pode dificultar que você entenda a lógica do seu próprio programa. Então por mais que seja possível, por exemplo, modificar um dicionário internamente em uma função sem retorná-lo, pode ser mais simples para você, programador, entender e testar seu próprio código se a função criar um novo dicionário e retorná-lo.
","
            1
        ","
Não necessariamente, somente se você precisa que a função retorne algo, como por exemplo:
def printMessage():
    print(""mensagem"")

Nesse caso não a necessidade de retorno
","
            0
        ","['\npython', 'funções\n']"
514661,Por que é necessário instanciar uma classe em Python quando eu posso chama-la diretamente?,"
class People:
    def talk():
         print('hello')

p1 = People
p1.talk()

Qual a necessidade de instancia-la se posso chama-la diretamente?
class People:
    def talk():
         print('hello')

People.talk()

","
Primeiro, classes não são necessárias em alguns casos, mesmo que as pessoas usem onde não precisa.
Classes devem criar o modelo de objeto que sirva para alguma coisa útil, por isso ele precisa ser muito bem definido antes de codificar. Se for para fazer uma classe que não tenha sentido, então não precisa criar uma classe. Entenda Qual a diferença entre uma classe e um objeto?. Se não vai criar objetos não precisa de uma classe.
Em alguns casos é possível que queria algo encapsulado na classe e não no objeto, então isso é permitido. É mais ou menos raro precisar disso de forma correta (muita gente usa incorretamente). Existem casos de ter um métodos utilitários que independem do estado do objeto, aí faz sentido.
Exemplos artificiais não são úteis para apender programar, especialmente em orientação a objeto, só o caso real pode determinar o que é certo fazer. Exemplos artificiais até são úteis se forem bons exemplos para mostrar um mecanismo, mas nunca como usar adequadamente.
Esse exemplo é só um erro, é um exemplo artificial que não faz algo útil, então ele não pode ser considerado para o aprendizado.
O código define um modelo para um objeto, ele só tem um método dentro da classe, portanto não deveria ter uma classe aí. Isso estando errado, só não faça um código assim.
Se o exemplo fosse bom, resolvesse um problema real então poderíamos discutir melhor sobre o assunto. E de fato já foi feito em:

Conceito de classe, entidade e objetos
Instâncias e variáveis no C#
Qual a diferença entre variáveis de instância de classe, automáticas (locais) e de duração estática?
Diferença entre ""Atributo"" e ""Variável de Instância""
Qual a função de um método estático?
Instanciar classe ou usar métodos públicos?
https://pt.stackoverflow.com/a/364547/101
Por que temos que utilizar o atributo self como argumento nos métodos?

Então esse caso funciona por coincidência, porque tanto faz, não está criando algo real. Se tivesse um método de verdade, ou seja, se tivesse um método com self, como poderia chamar esse método passando o self sem criar uma instância antes? Aí temos um caso que a classe faz sentido e precisa instanciar.
De forma extremamente simplificada fazendo uma classe que faz sentido e usa o self:
class People:
    nome = """"
    def __init__(self, nome):
        self.nome = nome
    def talk(self):
         print('Meu nome é ' + self.nome)

p1 = People(""joão"")
p1.talk()

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
Agora que tem uma classe real tente acessar sem instanciar.
","
            5
        ","
Você não instanciou nada
Ao fazer p1 = People, você não criou uma instância da classe People. Na verdade você fez com que p1 receba a própria classe People, veja:
class People:
    def talk():
         print('hello')

# p1 é a própria classe People
p1 = People

print(p1 == People) # True
print(type(People)) # <class 'type'>
print(type(p1))     # <class 'type'>

# p1 é uma instância de People? Não
print(isinstance(p1, People)) # False

Para criar uma instância de People, você teria que chamar People() (com os parênteses), veja a diferença:
# agora sim estou criando uma instância de People
p = People()

# p não é a própria classe People
print(p == People) # False
print(type(p))     # <class '__main__.People'>

# p é uma instância de People? Sim
print(isinstance(p, People)) # True

Por isso que no seu exemplo, p1.talk() é o mesmo que People.talk(), já que o valor de p1 é a própria classe People.

Quanto ao fato de estar usando uma classe para este caso, se faz sentido, etc, além da maneira correta de fazer, a outra resposta já disse tudo.
","
            4
        ","['\npython', 'orientação-a-objetos', 'classes\n']"
514627,"Qual a forma correta de usar os tipos float, double e decimal?","
Desde os tempos de faculdade não consigo entender a real diferença entre o tipo DOUBLE e FLOAT, acabei encontrando o tipo DECIMAL que também trata valores reais.
Sobre o tipo DECIMAL, encontrei a seguinte afirmação:

Para qualquer cálculo que envolva dinheiro ou finanças, o tipo
Decimal deve ser sempre utilizado. Só este tipo tem a precisão
adequada para evitar os erros críticos de arredondamento.
Por quê?
O tipo de dados Decimal é simplesmente um tipo de ponto flutuante que
é representado internamente como base 10 ao invés de base dois.

Em quais situações esses tipos devem ser usados de forma correta?
Poderiam me explicar o porquê do tipo decimal ser o ideal quando se tem dinheiro envolvido? Qual a diferença entre ambos?
","
Os números não inteiros podem ser implementados com base binária ou decimal. A forma pode ser com ponto flutuante ou fixo. Claro até pode de outras formas também.
No ponto fixo o tipo já indica quantas casas decimais de precisão tem ali. O ponto fixo é menos comum. Em geral bancos de dados trabalham com ponto fixo, mas também possuem tipo de ponto flutuante. A grosso modo podemos dizer que o ponto fixo é como o char e o ponto flutuante é como o varchar, que, em vez de dizer quantos caracteres ele possui, ele diz quantas casas decimais devem ser consideradas.
Tem casos que você precisa sempre ter 2 dígitos, ou seja, só centavos, não deve ter 1 e não deve ter 3. Se você dividir 1 por 8, dá 0,13 (o método de arredondamento pode variar). No ponto flutuante dá 0,125. Se dividir por 10, no fixo dá 0,10, no flutuante dá 0,1 e é problema do programador cuidar para normalizar escala se assim ele desejar.
float e double
A diferença entre o float e o double é a precisão, ou seja, o quanto varia, o quanto consegue expressar um valor próximo do real, é o número de casas decimais que ele consegue suportar.
Esses tipos são chamados de ponto flutuante binários.
O float normalmente possui 32 bits para representar o expoente e a mantissa, além do sinal. Dá pra representar muitos números, mas por sua natureza binária não consegue representar todos os números, então ele representa o que está mais próximo do que se deseja. Ele tem 24 dígitos de precisão e por isso é chamado de simples precisão.
O double geralmente é representado por 64 bits, então consegue bem mais precisão, mas ainda não a exatidão já que a forma de representação também é binária. Tem 53 dígitos de precisão e é chamado de dupla precisão.
Existem tipos padronizados, mais raramente implementados, até maiores com 128 bits ou quádrupla precisão (113 dígitos), ou ainda 256 bits ou óctupla precisão (237 dígitos). Tem ainda o tipo de meia precisão com 16 bits com 11 dígitos. Tudo tem o mesmo problema de inexatidão.
Esses tipos são regidos pelo padrão IEEE 754. Existem tecnologias que não o seguem, mas é raro. Há casos que o double possui 80 bits fora do padrão.
Os cálculos podem ser realizados por hardware ou software, obviamente o primeiro é muito mais rápido. Mesmo por software, como ele opera da forma natural para a computação, ou seja, binário, é muito rápido.
Muitos cálculos necessitam precisão, mas não exatidão. Então pelo computador se dar melhor com ele, use-o. Se for algo científico de cálculos pesados a performance faz muita diferença. O mesmo pode-se dizer de computação gráfica ou jogos. Haverá um arredondamento de qualquer forma, então a falta de exatidão prejudica nada.
0.2 + 0.8 é diferente de 1.0?!?!?!?!
Mas se vai fazer uma comparação de igualdade já complica, 1 é diferente de 0.2 + 0.8. Louco, né? Isso ocorre pela forma como o número é representado internamente. Já 1 + 1 sempre será 2, já que não tem problema de inexatidão na parte inteira.
Se você não pode representar todos os números que normalmente um humano está acostumado lidar precisará de um arredondamento, isso pode dar uma diferença mínima aqui ou ali, ou seja, pode mudar 1 único centavo. Aí você multiplica isso por 1 milhão e 1 centavo vira 10 mil reais, dólares, etc. de erro. Não pode, né? Mesmo 1 centavo em contabilidade não pode existir, não bate mais. Um saldo bancário não pode ter isso. Tem estória contada que no passado programador de banco vendo isso começou pegar essas diferenças de centavo e foi acumulando na sua conta e ficou milionário (mesmo que seja só um passarinho contado, ainda ilustra o problema).
Já há uma resposta em O que significa uma variável de dupla precisão? com mais detalhes do funcionamento. A Wikipedia e outros links contidos lá e em outras respostas linkadas dão mais detalhes para quem tiver a curiosidade de ver todos detalhes.
decimal
O tipo decimal tem exatidão, ele é sobre ter o número exato que se pretende. Ele indica que o número está em conformidade com o que se espera. Ele chama decimal por ter base 10 e não binária como os anteriores.
Cada tecnologia o implementa de alguma forma diferente. É comum guardar a parte inteira e decimal separadamente em inteiros, ou guardar tudo junto em um inteiro e determinar uma escala, ou seja, onde o ponto flutuante está, quantas casas ele deve assumir, em geral é um inteiro dividido por 1, 10, 100, 1000, etc.
O Decimal, que vou chamar de puro, costuma ter 128 bits de precisão (34 dígitos), mas isso varia se for fora do padrão, o que não é tão incomum assim.
Algumas tecnologias implementam o SmallDecimal com 64 bits (16 dígitos), e o TinyDecimal com 32 bits (7 dígitos).
É comum também ter o BigDecimal com mais de 128 bits, em geral até ilimitados. Tem tecnologia que só possui este tipo decimal. Os nomes dos tipos podem variar em cada tecnologia.
Por ser decimal a performance não é das melhores, mas longe de ser uma tragédia. Em geral não é um problema por trabalhar com valor monetário e os cálculos onde ele é envolvido costumam ser simples, se comparados com científicos e CGI. Os cálculos são feitos com instruções de inteiros do processador, o que é rápido, mas precisa de vários passos de normalização do número, precisa prover algum arredondamento, muitas vezes o seu código precisa fazer alguma conta extra, então acaba ficando mais lento, mas nada crítico.
Arredondamento
Tratar arredondamento quando a exigência é de exatidão não é tarefa fácil, cada cálculo pode exigir uma política diferente. Pense que se você dividir 1 por 3, dá dízima, o que não pode ser representada com exatidão, então precisa determinar onde vai parar, deve ter 3 casas? então daria 3 de 0,33? Tá, mas se você somar isso dá 0,99. E aí o que fazer com esse centavo? Tem que ter uma política do seu código pra tratar isso também. Pode ser que o descarte seja justificável, pode ser que uma dessas parcelas receba esse centavo que sobra e fique com valor 0,34. Mas em qual? Precisa gerar um lançamento separado para manter histórico de ter feito isso? É na primeira? Na última? E se tiver vários centavos, ainda será na primeira ou última? Ou deve distribuir? Como? Tudo preocupação do programador.
Sim, tá tudo errado por aí
Uma quantidade enorme de softwares fazem cálculos errados, não só porque usam ponto flutuante binário quando deveriam usar decimal, mas também porque não sabem lidar com o arredondamento decimal. É bem difícil lidar com isso e muitos ferem legislação, causam prejuízos.
Em geral usa-se o termo de matemática precisa, mas na verdade o correto é matemática exata.
Ele não é usado só monetariamente, mas é o melhor exemplo de uso. Onde queira exatidão é com ele que deve ir. Mas um novato pode achar que exatidão sempre é bom a abandonar o ponto flutuante binário ou um fanático por velocidade só ficar nele. A decisão não deve passar por isso, use o que for mais adequado para o problema.
Acompanhe a tag valor-monetário para ver vários exemplos aqui.
Esse tipo também é regido pelo IEEE 754. Veja tabela retirada da Wikipedia

Veja que os nomes oficiais só indicam quantos bits ele tem.
Outras codificações
Nada impede de usar outras codificações, mas hoje não é comum. Uma que foi muito usada no passado era a BCD. Implementações fracionárias também são usadas onde o mais importante é representar com exatidão a fração em si, ou seja você não quer 0,333333333333, quer 1/3.
","
            41
        ","
Sobre float e double
Esses são tipos definidos pela IEEE. Sua representação é dada pelo sinal, expoente e mantissa. Sem pegar nos pormenores, se tiver 3 dígitos para representar a mantissa:
d0 d1 d2
 1  1  0

O valor da mantissa é 11.

11? Mas só vi dois bits ligados, 11 precisa de 3!

Sim, e tem o terceiro bit ligado. d3 é implícito para números normalizados. E esse bit é sempre ligado nessas condições. A mantissa acima é interpretada como se fosse o seguinte número:
d0 d1 d2 d3
 1  1  0  1

O expoente vai resultar em um número qualquer dentro do intervalo. Não pretendo entrar em maiores detalhes aqui. Vamos assumir que o valor resultante seja e para o expoente e m para a mantissa. O valor final então é:
m * 2 ^ e

Como m é um número formado pelos bits da mantissa (deslocados para a esquerda para ficar entre 1 e 2), podemos reescrevê-lo assim (para i sendo a posição do bit e q o total de bits):
m = somatório b_i * 2 ^ (i - q)

Então, substituindo na fórmula acima:
somatório b_i * 2 ^ (e + i - q)

Ou seja, todo número de ponto flutuante representado por esse esquema é uma soma de pontências de 2. Devido a características matemáticas, todo somatório (finito) de potências de 2 tem representação finita na base 10, mas o contrário não é verdade. Por exemplo, é impossível representar 0.2 como um somatório finito de potências de 2; você representaria como uma dízima periódica sim, mas dízimas periódicas não são representáveis no formato mantissa * base ^ expoente, sendo mantissa definida por uma soma finita.
Como existem números que não são representáveis, eles são aproximados por números bons o suficiente. Com isso se gera um erro de cálculo.
Para cada valor de expoente distinto, há um erro distinto associado ao cálculo.
DECIMAL em SQL Server
No SQL Server, o tipo DECIMAL serve para indicar números de ponto fixo. O que isso significa? Significa que estamos trabalhando com números inteiros a maior parte do tempo. A bitagem é fixa, sua precisão vai até o dígito menos significativo.
Sua forma geral é:
n * 10 ^ (-s)

Onde n é um inteiro (de 32, 64, 128 ou 256 bits, de acordo com a precisão escolhida; referência), e s é a escala, um número positivo. Sua precisão vai até 10 ^ (-s), valores inferiores a isso não podem ser representados, precisando portanto serem arredondados ou truncados.
O erro associado ao cálculo é sempre menor do que 10 ^ (-s), muitas vezes sendo mitigado usando o arredondamento bancário.
A multiplicação e a divisão exigem um tratamento especial nesse campo. A divisão terá o resultado arredondado ou truncado, assim como se precisa de uma rotina especial para descartar os valores irrelevantes da multiplicação.
BigDecimal em Java
Se você está interessado apenas em calcular, não precisa saber muito além do que usar os métodos dessa classe para calcular.
De modo geral, ela permite um input de tamanho arbitrário com uma precisão absurdamente alta.
Por baixo dos panos, normalmente ele contém um BigInteger por baixo e uma escala. Ele tem a mesma representação matemática do que o DECIMAL no SQL Server:
n * 10 ^ (-s)

Sendo que aqui n é um número inteiro de bitagem variável (o BigInteger mencionado anteriormente).
O erro associado é menor do que 10 ^ (-s), sendo que é possível definir o valor de s em execução para ser grande o suficiente. Arredondamento bancário mitiga ainda mais o erro.
Note que aqui temos uma classe Java que fará operações que não são suportadas diretamente pela ULA, o que consome processamento adicional e uso de memória.
Decimal em C#
Não tenho muito a falar sobre isso por falta de vivência. Mas pelo que eu li, ele se parece muito com o DECIMAL do SQL Server.
Como usar cada uma?
Caso você precise de precisão no cálculo até certa escala, independente do valor sendo calculado, você está no caso de usar um BigDecimal ou equivalente. Em um sistema de vendas que eu presto suporte, usamos BigDecimal com precisão que varia de 6 a 30 dígitos (normalmente 30 para divisões, 6 para todas as outras operações). Nossos valores obtidos de imposto nunca foi tão preciso depois de migrar 100% do cálculo para essas especificações.
float e double são mais rápidos, eficientes e econômicos do que os BigDecimals do Java; não posso afirmar muito sobre o Decimal do C#, mas creio que para multiplicação seja muito mais leve. Normalmente, nos processadores mais modernos, existe um núcleo de processamento de aritmética de ponto flutuante. Usando esse tipo de variável, o erro incorrido é proporcional ao valor mais significativo da mantissa. Isso quer dizer que um valor de 1 que aceita um erro de 2 ^ -4 significa que o valor de 0.25 aceita um erro de 2 ^ -6.
Cálculo de 30% de imposto
Vamos colocar um exemplo de cálculo de imposto para exemplificar o erro associado ao cálculo de ambos os tipos de dados.
Digamos que vendamos gatos persas. O imposto que incide sobre eles é 30%. Sabendo que eu vendi 72 gatos a 524.7500 cada, Quanto devo pagar para o governo de
Imposto?
Aplicar 30% significa multiplicar por 0.3.
Java e BigDecimal
30% de imposto é 30 deslocado 2 casas para a esquerda (ou 3 deslocado uma casa para a esquerda). Como é um número inteiro, e não houve divisão alguma, não houve perda de precisão. Multiplico isso por 72, um inteiro que posso representar sem perder precisão com o BigDecimal. 524.7500 é equivalente a 52475 deslocado duas casas para a esquerda. Ao todo, após as multiplicações, teremos um valor inteiro não arredondado/valor inteiro exato deslocado quatro casas para a esquerda.
Cálculo com float
524.75 é representado pela seguinte soma de potências de 2:
512 + 8 + 4 + 0.5 + 0.25

Ou então:
2^9 + 2^3 + 2^2 + 2^-1 + 2^-2

Conseguimos representar sem perda de dados se houver 11 bits para a mantissa.

Por que 11 dígitos de mantissa?
Eu estava relendo essa publicação e fiquei na dúvida ""por que 11? Não deveriam ser 12?"" Afinal, estamos trabalhando com dígitos das posições 9 até a posição -2. Isso resulta em 12 casas! Mais especificamente, ordenado por significância: 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2.
O que eu mesmo havia esquecido era que o dígito mais significativo em números não denormalizados tem o valor implícito 1. Isso significa que não é necessário armazenar o dígito da posição 9, apenas os das posições 8 até a posição -2.

Precisamos multiplicar esse valor por 72, que é um valor inteiro portanto trivialmente sabemos que é uma soma de potências de 2.
O resultado disso, então, é multiplicado por 0.3. 0.3 não tem representação finita como soma de potências de 2, portanto ele será representado por um número próximo o suficiente, mas não exato. Se tiver 11 bits para a mantissa, a precisão do número resultado da representação de 0.3 é de 2 ^ -13, o que significa que o representante terá erro da ordem de 2 ^ -13.
Viu como em um simples cálculo foi possível inserir um erro em uma representação mas não em outra?
Infinite Series sobre ponto flutuante
Se tem um canal do YouTube que vale a pena acompanhar é o Infinite Series. Recentemente, eles subiram semana passada um vídeo falando de como se dá a computação de ponto flutuante, e um dos exemplos dados é que 0.1 + 0.1 != 0.2, pois 0.1 em binário é uma dizima periódica e, portanto, não pode ser representado na notação científica (usando mantissa finita) na base 2. Esse é um dos principais argumentos contra usar aritmética de pontos flutuantes para resolver questões que envolvam dinheiro.
Ressaltando aqui, o BigDecimal do Java e muitos outros esquemas se utilizam de inteiros de tamanho arbitrário para representar mantissas, depois coloca a vírgula decimal em qualquer ponto desse número. Apesar de finito, como esse esquema de cálculo permite uma precisão arbitrária de p casas (portanto erro de 5 * 10 ^ -(p+1) ao se fazer cálculos), temos certeza no cálculo dessas quantias (ie, 0.1 + 0.1 = 0.2 quando se tem p >= 1) na precisão escolhida.
Computerphile sobre ponto flutuante
O canal Computerphile (""computadófilo"" em interpretação livre) comenta que número de ponto flutuante é apenas notação científica em base 2, com uma limitação de representação. E que isso é ótimo para representar grandezas tão grandes quanto o tamanho do universo e a distância entre o núcleo atômico e o orbital de um elétron.
Nesses casos, a notação científica é benéfica pois ela consegue representar significativamente os números e os erros do arredondamento do cálculo estão dentro do esperado. Os erros do arredondamento desses cálculos por vezes pode ser menor do que o erro inerente da medição de certas grandezas (adendo meu, o canal não comenta isso, mas é verdade sim).
Sobre os erros nos cálculos, o exemplo que o apresentador fornece é na renderização de gráficos 3D de um jogo. Se por acaso o a renderização de um elemento gráfico esteja deslocado um centésimo ou um milésimo de pixel, esse erro é aceitável e facilmente ignorado na percepção do jogador.
Em um ponto do vídeo, o apresentador fala de um exemplo de cálculo financeiro com ponto flutuante. Somar 0.1 com 0.2 dá um erro de cálculo inaceitável para aplicações financeiras. Então, ele sugere trabalhar com inteiros (na unidade dos centavos ou uma fração dos centavos) ou então usar o decimal proveniente na sua linguagem de programação.
","
            23
        ","['\ncaracterística-linguagem', 'float', 'independente-de-linguagem', 'decimal', 'double\n']"
514620,Usar valor modificado dentro de IF em outra variável,"
Tenho uma condição de valor que é alterado dentro de IF e precisava usa-lo em outra opção chamada por menu, como posso executar?
from datetime import datetime

print(""Bem-vindo usuário!"")

menu = print('[1] Entrada/Saída\n[2] Estado atual de veículo\n[3] Vagas disponíveis')

iniciar = int(input(""Digite opção para iniciar: ""))

data = datetime.now().strftime('%H:%M dia:%d/%m/%Y')

vrestantes = 100

vagas = 100

if 1==iniciar:
    while (vrestantes > 0):
        carro = input(""Digite placa: "")
        acao = int(input(""[1]Entrada ou [0]Saida?: ""))

        if acao ==0:
            print(""Saída do carro {} às {}"".format(carro,data))
            vrestantes = vrestantes + 1
            print(""Total de vagas disponíveis: {}"".format(vrestantes))
            if vrestantes > 100:
                print(""Vagas não podem ser maiores que 100 por limitação de espaço"")


        else:
            if acao ==1:
                print(""Entrada do carro {} às {}"".format(carro,data))
                vrestantes = vrestantes - 1
                print(""Total de vagas disponíveis: {}"".format(vrestantes))

caso eu queira acionar uma outra opção no menu (ex:3) para imprimir o valor que foi alterado, teria como?
no caso eu queria usar a função vrestantes e imprimir ela com um valor atualizado
","
No python usamos o elif para adicionar condições. Com três opções ficaria assim:
if acao == 0:
    ...
    ...
elif acao == 1:
    ...
    ...
elif acao == 2:
    ...
    ...

","
            0
        ",,,"['\npython', 'python-3.x\n']"
514611,Problema para usar o return (Python 3),"
Estou começando agora e tentei fazer de acordo com a explicação do meu professor, mas não estou conseguindo rodar a função. Quero que retorne para o começo se o usuário responder errado ao invés de apenas encerrar.
def paintcalculator():
    print(""What measurement unit do you use?"")
    unit = int(input(""What measurement unit do you use?\n1 - Meters \n2 - Centimeters \n3 - Inches \nOption number:""))
    
    if unit == 1:  #meters
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = height * width
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters)) 

    elif unit == 2:  #centimeters
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = (height*0.01) * (width*0.01)
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters)) 

    elif unit == 3:  #inches
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = (height*0.0254) * (width*0.0254)
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters)) 

    else:
        print('Please, answer correctly.')
        return paintcalculator()

","
Boa tarde
Bom pelo que eu não acho tão legal chamar a função dentro dela mesmo, no caso de sua aplicação criar uma estrutura de repetição infinita como whle True: já estaria funcionando, assim bastaria criar uma opção para encerrar o menu
segue a alteração feita:
def paintcalculator():

while True:
    print(""What measurement unit do you use?"")
    unit = int(input(""What measurement unit do you use?\n1 - Meters \n2 - Centimeters \n3 - Inches \nIf you want break this program press number [9] \n\nOption number: ""))

    if unit == 1:  # meters
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = height * width
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters))

    elif unit == 2:  # centimeters
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = (height * 0.01) * (width * 0.01)
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters))

    elif unit == 3:  # inches
        height = float(input('What is the  height of the wall? '))
        width = float(input('What is the width of the wall? '))
        layers = float(input('How many layers do you want to use? '))
        area = (height * 0.0254) * (width * 0.0254)
        liters = 2 * area * layers
        print('You will need aproximately {:.2f} liters of paint.'.format(liters))

    elif unit == 9:
        break

    else:
        print('Please, answer correctly.')

paintcalculator()
assim você apenas chama a sua função quando deseja utilizar ela.
espero ter ajudado!
","
            1
        ","
Boas, primeiramente gostaria de o informar que devia explicitar em que cenário exato ocorre o erro que refere. Dito isto, percebi que o seu problema ocorre depois do utilizador escolher uma opção no menu e não respeitar o tipo de valor inserido.
Coisas a fazer para resolver o problema e melhorar o código:

Cada opção do menu deveria corresponder a uma função mesmo que o código seja simples.
Recorrer ao mecanismo de try e except existente no python.
Apesar na solução apresentada não o fazer, deve ser pensada uma maneira de resolver a repetição existente em height, width e layers. Talvez um objeto auxiliar que guarde a informação nos seus atributos.

Aqui fica um exemplo de solução

def optMeters():
    height = float(input('What is the  height of the wall? '))
    width = float(input('What is the width of the wall? '))
    layers = float(input('How many layers do you want to use? '))
    area = height * width
    liters = 2 * area * layers
    print('You will need aproximately {:.2f} liters of paint.'.format(liters))


def optCentimeters():
    height = float(input('What is the  height of the wall? '))
    width = float(input('What is the width of the wall? '))
    layers = float(input('How many layers do you want to use? '))
    area = (height*0.01) * (width*0.01)
    liters = 2 * area * layers
    print(
        'You will need aproximately {:.2f} liters of paint.'.format(liters))


def optInches():
    height = float(input('What is the  height of the wall? '))
    width = float(input('What is the width of the wall? '))
    layers = float(input('How many layers do you want to use? '))
    area = (height*0.0254) * (width*0.0254)
    liters = 2 * area * layers
    print(
        'You will need aproximately {:.2f} liters of paint.'.format(liters))


def paintcalculator():
    try:
        unit = int(input(
            ""What measurement unit do you use?\n1 - Meters \n2 - Centimeters \n3 - Inches \n4 - Exit \nOption number:""))
        if unit == 1:  # meters
            optMeters()

        elif unit == 2:  # centimeters
            optCentimeters()

        elif unit == 3:  # inches
            optInches()
        elif unit == 4:  # exit opt
            return
        else:
            print('Please, answer correctly.')
            paintcalculator()  # No return needed
    except:
        print('Invalid input detected')
        paintcalculator()




","
            0
        ","['\npython', 'python-3.x\n']"
514595,Como chamar função dentro de outra função em Python?,"
Oi, pessoal.
Sou nova no Python e preciso entregar um script de requests APIs.
Existem três atributos necessários para requisitar a API (client_id, client_secret e texto), sendo que as duas ""clients"" são informações sensíveis e não podem ir exibidas no script.
Criei funções no arquivo config para levar essas duas informações, e no script principal quero chamar. A questão é que não estou conseguindo chamar.
     def get_client_id():
         Config().get_client_id ##essa função chama o client_id que está no arquivo Config.py
    
     def get_client_secret():
         Config().get_client_secret ##essa função chama o client_id que está no arquivo Config.py
    
resp = NomeApi().request_api({self.get_client_id()}, {self.get_client_secret()}, texto=""Q1JFQVRFIEVYVEVSTkFMIFR="")

#os get_clients não estão conseguindo chamar o valor que está na classe Config.py


Legenda:
NomeApi() é a classe que contém todas as funções
request_api() é a função principal para requisitar a API
","
consegui uma solução.
Consegui chamar a função que estava em outro arquivo (no meu caso Config.py) e rodar nesse script. Assim a requisição retornou certinha.
def get_client_id(cls):
        Config().get_client_id

    def get_client_secret(cls):
        Config().get_client_secret


resp = NomeApi().request_api(f""{Config().get_client_id()}"", f""{Config().get_client_secret()}"",
                               texto=""Q1JFQVRHAJSOksuasnjJA="")

","
            0
        ",,,"['\npython', 'python-3.x', 'pycharm\n']"
514566,"PyQt5 - Definir um InputMask em um QLineEdit para digitar apenas a tecla ""F10""","
Tenho uma aplicação que contém um QLineEdit que ao estar ativo o usuário tem a opção de pressionar a tecla ""F10"" e assim abrir outra janela.
Porém gostaria de bloquear esse QLineEdit para edição, deixando apenas disponível a tecla ""F10""
Com a propriedade inputMask consigo fazer isso?
from sys import argv, exit
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QLineEdit, QVBoxLayout, QWidget, QShortcut, QLabel

class Tela_1(QWidget):
    def __init__(self):
        super(Tela_1, self).__init__()
        self.setWindowTitle(""Tela 1 - TESTE"")
        self.setGeometry(50, 50, 400, 400) 

        # ADD WIDGETS
        self.lineEdit = QLineEdit()

        # ADD LAYOUT
        mainLayout = QVBoxLayout()
        mainLayout.addWidget(self.lineEdit)
        self.setLayout(mainLayout)

        # AO PRESSIONAR A TECLA ""F10"" CONECTAR COM A FUNÇÃO ""abrir_janela2""
        QShortcut(Qt.Key_F10, self.lineEdit,  self.abrir_janela2, context=Qt.WidgetShortcut)

    def abrir_janela2(self):
        self.janela2 = Tela_2()
        self.janela2.show()

class Tela_2(QWidget):
    def __init__(self):
        super(Tela_2, self).__init__()
        self.setWindowTitle(""Tela 2 - TESTE"")
        self.setGeometry(50, 50, 300, 300)   
        self.label = QLabel()
        mainLayout = QVBoxLayout()
        mainLayout.addWidget(self.label)
        self.setLayout(mainLayout)
        self.label.setText(""TELA 2"")    

app = QApplication(argv)
w = Tela_1()
w.show()
exit(app.exec_())

","
Basta aplicar setReadyOnly(true)
Assim em PyQt5:
self.lineEdit.setReadOnly(True)

","
            1
        ",,,"['\npython', 'python-3.x', 'pyqt', 'pyqt-5\n']"
514561,Validação Flask WTForms,"
Estou desenvolvendo um projeto web e estou tendo problemas na parte de validação de formulário.
Segue as minhas validações:
# REGRAS DE VALIDAÇÃO #

def validate_username(form, username):
    if dao.buscar_por_id(username.data):
        raise ValidationError('Esse username já existe')


def validate_email(form, email):
    if dao.busca_por_email(email.data):
        raise ValidationError('Esse email já foi cadastrado')


class ValidaFormulario(Form):
    username = StringField('username', [
        validators.Length(min=4, max=25,
                          message='Username deve ter entre 4 e 25 caracteress'),
        validators.DataRequired(), validate_username
    ])
    email = StringField('email', [validators.DataRequired(), validate_email])
    senha = PasswordField('senha', [
        validators.Length(min=8, max=32,
                          message='Senha deve ter entre 8 e 32 caracteres'),
        validators.EqualTo('confirma', message='Senha confirmada incorretamente'),
        validators.DataRequired()
    ])
    confirma = PasswordField('confirma', [validators.DataRequired()])

Meu arquivo html:
<!DOCTYPE html>

{% from ""_formhelpers.html"" import render_field %}

<html lang=""en"" dir=""ltr"">
<head>
    <meta charset=""UTF-8"">
    <title>Cadastro</title>
    <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
    <link rel=""icon"" href=""{{ url_for('static', filename='morgan_icon.png') }}"">
</head>
<body>
    <form class=""box"" action=""{{ url_for('criar') }}"" method=""post"">
        <h1>Cadastro</h1>
        <br>
        <div class=""social.media"">
            <ul class=""list-social-media"">
                <a href=""https://pt-br.facebook.com/login/""><i class=""fab fa-facebook-f""></i></a>
                <a href=""https://accounts.google.com/ServiceLogin/signinchooser?service=accountsettings&continue=https%3A%2F%2Fmyaccount.google.com%3Futm_source%3Daccount-marketing-page%26utm_medium%3Dgo-to-account-button&flowName=GlifWebSignIn&flowEntry=ServiceLogin""><i class=""fab fa-google-plus-g""></i></a>
                <a href=""https://www.instagram.com/?hl=pt-br""><i class=""fab fa-instagram""></i></a>
             </ul>
        </div>
        <br>
        <p class=""description-primary"">Coloque seus dados pessoais</p>

        {{ render_field(form.username, 'Username', autofocus=true) }}
        {{ render_field(form.email, 'Email', type='email') }}
        {{ render_field(form.senha, 'Senha') }}
        {{ render_field(form.confirma, 'Confirmar Senha') }}

        <!--
        <input class=""inputField"" required type=""text"" name=""username"" placeholder=""Username"">
        <input class=""inputField"" required type=""email"" name=""email"" placeholder=""Email"">
        <input class=""inputField"" required type=""password"" name=""senha"" placeholder=""Senha"">
        <input class=""inputField"" required type=""password"" name=""confirma"" placeholder=""Confirmar senha"">
        -->

        <input type=""submit"" value=""Criar conta"">
    </form>

</body>
</html>

Se eu colocar os dados corretamente, eles são cadastrados, mas quando erro alguma coisa, recebo esse erro:
TypeError: The view function did not return a valid response. The function either returned None or ended without a return statement.

",,,,,"['\npython', 'validação', 'flask\n']"
514497,Como parar o while quando a condição for verdadeira em Python?,"
Meu código está assim:
x = 0
c = 0
c0, c1, c2, c3, c00 = 100, 101, 102, 103, 0

while x <= 3:
    login = str(input(""Digite o login: ""))
    senha = int(input(""Digite a senha: ""))
    x += 1

    if login == 'ifpe' and senha == 12345:
        print(""  Código  | Produto          | Preço (R$)"")
        print(""   100    | Cachorro-quente  |   1,70"")
        print(""   101    | Bauru simples    |   2,30"")
        print(""   102    | Bauru com ovo    |   2,60"")
        print(""   103    | Hambúrguer       |   2,40"")
        print(""    0     |   Sair"")
        print()
        p = input(""Digite o código do produto: "")
        q = int(input(""Digite a quantidade: ""))
        c +=1 
        if p == 100:
            print(""Valor: "", 2.30 + c)
    else:
        print(""Login e/ou senha inválidos."")
        break

Eu quero que pare de pedir o login e senha quando ele for digitado corretamente. Como faço pra isso acontecer?
","
O laço foi criado para controlar justamente se a autenticação foi validada, então é só isso que deve ter dentro do laço, mais nada.
Não vou resolver todos problemas de legibilidade e robustez do código, mas melhorei mais algumas coisas. Também não entrei no mérito da senha ser numérica, ou essas variáveis c alguma coisa que provavelmente não deveria ser assim, mas como não usou só retirei.
É possível que queira outro laço para controlar os vários pedidos, mas esse é outro problema que inclusive precisaria de melhor definição. Tem outros pontos esquisitos.
x = 0
c = 0
while x < 4:
    login = input(""Digite o login: "")
    senha = int(input(""Digite a senha: ""))
    x += 1
    if login == 'ifpe' and senha == 12345:
        break
    print(""Login e/ou senha inválidos."")

print(""  Código  | Produto          | Preço (R$)"")
print(""   100    | Cachorro-quente  |   1,70"")
print(""   101    | Bauru simples    |   2,30"")
print(""   102    | Bauru com ovo    |   2,60"")
print(""   103    | Hambúrguer       |   2,40"")
print(""    0     |   Sair"")
print()
p = input(""Digite o código do produto: "")
q = int(input(""Digite a quantidade: ""))
c += 1 
if p == 100:
    print(""Valor: "", 2.30 + c)

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
","
            1
        ",,,"['\npython', 'algoritmo\n']"
514470,Agrupamento por diversas variáveis,"
Estou trabalhando na base abaixo, e preciso agrupar a variável close, agrupando o último dia de cada semana, por mês e ano, a base que estou trabalhando tem dados de 2005 a 2017, abaixo estou apenas deixando uma amostra.
date        close   year   month  day    quarter      week
2016-12-23   961    2016    12    23      4        51
2016-12-22   928    2016    12    22      4        51
2016-12-21   926    2016    12    21      4        51
2016-12-20   914    2016    12    20      4        51
2016-12-19   927    2016    12    19      4        51
2016-12-16   946    2016    12    16      4        50
2016-12-15   966    2016    12    15      4        50
2016-12-14   1003   2016    12    14      4        50
2016-12-13   1052   2016    12    13      4        50
2016-12-12   1069   2016    12    12      4        50
2016-12-23   934    2017    12    23      4        51
2016-12-22   928    2017    12    22      4        51
2016-12-21   926    2017    12    21      4        51
2016-12-20   914    2017    12    20      4        51
2016-12-19   927    2017    12    19      4        51
2016-12-16   933    2017    12    16      4        50
2016-12-15   966    2017    12    15      4        50
2016-12-14   1003   2017    12    14      4        50
2016-12-13   1052   2017    12    13      4        50
2016-12-12   1069   2017    12    12      4        50

Agrupamento deve ficar assim:
date       close    year    month     day     quarter   week
2016-12-23  961     2016      12      23       4         51
2016-12-16  946     2016      12      16       4         50
2017-12-23  934     2017      12      23       4         51
2017-12-16  933     2017      12      16       4         50

Alguém pode me ajudar com isso?
","
Consegui o código abaixo:
df = df.sort_values(['year', 'month','quarter', 'week' , 'day']).drop_duplicates(['year', 'month','quarter', 'week'] , keep ='last')

","
            1
        ",,,['\npython\n']
514401,PyQt5 - Herdar informações de uma classe para outra. (Python),"
Criei duas janelas no PyQt5, onde a primeira janela precisa herdar informações da segunda, nesse exemplo eu criei:

Tela_1: que contém um ""QLineEdit"" para digitação e um ""QPushButton"" para abrir a outra janela.
Tela_2: também contém um ""QLineEdit"" para digitação e um ""QPushButton"" para levar as informações do texto digitado para a janela 1

No exemplo abaixo a classe Tela_1 tem uma função com o nome ""completa_campos"" que irá receber informações do que foi digitado no ""QLineEdit"" da Tela_2 e completar essa informação no ""QLineEdit"" da Tela_1
from sys import argv, exit
from PyQt5.QtWidgets import QApplication, QLabel, QLineEdit, QVBoxLayout, QWidget, QPushButton

class Tela_1(QWidget):
    def __init__(self):
        super(Tela_1, self).__init__()
        self.setWindowTitle(""Tela 1 - TESTE"")
        self.setGeometry(50, 50, 400, 400) 
        
        self.janela2 = Tela_2() 

        # ADD WIDGETS        
        self.texto_final = QLineEdit()
        self.botao_add = QPushButton()
        self.botao_add.setText(""Add"")
        mainLayout = QVBoxLayout()
        mainLayout.addWidget(self.texto_final)
        mainLayout.addWidget(self.botao_add)      
        self.setLayout(mainLayout)

        self.botao_add.clicked.connect(self.abrir_janela2)
    
    def abrir_janela2(self):
        self.janela2.show()
    
    def completa_campo(self, texto):
        print(""O valor digitado foi: "", texto)
        self.texto_final.setText(texto)

class Tela_2(QWidget):
    def __init__(self):
        super(Tela_2, self).__init__()
        self.setWindowTitle(""Tela 2 - TESTE"")
        self.setGeometry(50, 50, 200, 200)         

        # ADD WIDGETS      
        self.label = QLabel()
        self.label.setText(""Digite algo e clique no botão"")
        self.lineEdit = QLineEdit()
        self.pushButton = QPushButton()
        self.pushButton.setText(""Adicionar dados"")        
        mainLayout = QVBoxLayout()
        mainLayout.addWidget(self.label)
        mainLayout.addWidget(self.lineEdit)
        mainLayout.addWidget(self.pushButton)        
        self.setLayout(mainLayout)

        self.pushButton.clicked.connect(self.envia_dados)
    
    def envia_dados(self):
        self.janela_1 = Tela_1()

        dados = self.lineEdit.text()        
        if dados != """":
            self.janela_1.completa_campo(texto=dados)
            self.hide()

app = QApplication(argv)
w = Tela_1()
w.show()
exit(app.exec_())

No código acima não está trazendo essas informações, ele até consegue imprimir na tela o que foi digitado, mas não completa o ""QLineEdit"" quando uso .setText().
Como faço para herdar as informações de um ""QLineEdit"" de outra janela sem precisar iniciar janela atual novamente?
","
Se o que você quer é uma janela secundária que abre, pega um valor e o retorna para a janela principal, você pode fazer com que sua janela secundária herde de um QDialog. Essa classe possui um método chamado exec_ que facilita muito isso - precisamos apenas explicar para a janela secundária em que momento o diálogo é ""aceito"", ligando por exemplo o sinal self.pushButton.clicked com o método self.accept, que herdamos do QDialog.
Aqui um exemplo que faz o que você deseja (tomei a liberdade de simplificar um pouco o código). Agora toda vez em que o botão da Tela1 é clicado, ele cria o diálogo (Tela2) e espera que ele seja aceito (neste caso, que o botão seja clicado), e aí lida com o valor retornado. Espero que esteja claro o suficiente:
from sys import argv, exit
from PyQt5.QtWidgets import QApplication, QLabel, QLineEdit, QVBoxLayout, QWidget, QPushButton, QDialog


class Tela_1(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle(""Tela 1 - TESTE"")
        self.setGeometry(50, 50, 400, 400) 
        
        # CREATE LAYOUT
        mainLayout = QVBoxLayout()
        self.setLayout(mainLayout)
        
        # CREATE WIDGETS      
        self.texto_final = QLineEdit()
        self.botao_add = QPushButton(""Add"")

        # ADD WIDGETS TO LAYOUT
        mainLayout.addWidget(self.texto_final)
        mainLayout.addWidget(self.botao_add)      

        # ADD CONNECT WIDGETS
        self.botao_add.clicked.connect(self.abrir_janela2)
    
    def abrir_janela2(self):
        texto_retornado = Tela_2().exec_()
        if texto_retornado:
            self.texto_final.setText(texto_retornado)


class Tela_2(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle(""Tela 2 - TESTE"")
        self.setGeometry(50, 50, 200, 200)
        
        # CREATE LAYOUT
        mainLayout = QVBoxLayout()
        self.setLayout(mainLayout)

        # CREATE WIDGETS      
        self.label = QLabel(""Digite algo e clique no botão"")
        self.lineEdit = QLineEdit()
        self.pushButton = QPushButton(""Adicionar dados"")
        
        # ADD WIDGETS TO LAYOUT
        mainLayout.addWidget(self.label)
        mainLayout.addWidget(self.lineEdit)
        mainLayout.addWidget(self.pushButton)
        
        # CONNECT WIDGETS
        self.pushButton.clicked.connect(self.accept)
    
    def exec_(self):
        if super().exec_() == QDialog.Accepted:
            return self.lineEdit.text()
        

app = QApplication(argv)
w = Tela_1()
w.show()
exit(app.exec_())

","
            0
        ",,,"['\npython', 'python-3.x', 'pyqt', 'pyqt-5\n']"
514336,Dificuldade em mesclar colunas sequenciais em um DataFrame com Pandas,"
Possuo dois datas frames, os dois possuem exatamente o mesmo índice, a diferença é que um possui as colunas 'semana 9' até 'semana 30', e o outro possui as colunas 'semana 31' até 'semana 53'.
Até o momento eu utilizei o seguinte código porém não funcionou

import pandas as pd

parte1 = pd.read_csv(""parte1.csv"", encoding = ""utf-8"", delimiter = "";"")
parte2 = pd.read_csv(""parte2.csv"", encoding = ""utf-8"", delimiter = "";"")

parte3 = pd.merge(parte1, parte2, how = ""left"")
parte3.to_csv(""dados_mesclados_.csv"", encoding = ""utf-8"", sep = "";"")

O que ocorreu é que a única coisa que foi mesclada foram os títulos das colunas, ou seja, um arquivo foi gerado contendo os headers 'semana 9' até 'semana 53', porém os dados só estão preenchidos referentes a parte1 (semana 9 até a 30).
Fiz outros testes utilizando no lugar do parâmetro 'left' os parâmetros inner, outer e right. O que mais se aproximou do resultado que desejo foi o parâmetro left.
","
Você pode utilizar o concat do pandas, passando os data frames e o eixo das colunas:
parte3 = pd.concat([parte1, parte2], axis=1)

","
            0
        ",,,"['\npython', 'pandas', 'csv', 'dataframe\n']"
514318,Como colocar emoji em uma string?,"
Sei que em uma string posso colocar quaisquer caracteres que desejar, ex:
string = ""qualquer coisa! @#$%ª太陽""

Mas e se eu quiser colocar um emoji em uma string, como faço? Tem alguma maneira específica?
Posso colocá-lo direto no código que funciona? Pois eu fiz isso e funcionou:
emoji = '💰' # criei uma string contendo um emoji

Isso está certo ou funcionou por coincidência? Caso não esteja, tem outra maneira de fazer?
","
em Python a partir do ""3"" - , tudo internamente é unicode.  Unicode é traduzido por um ""encoding' na hora dos dados serem enviados para uma API - em geral todas funcionam com ""utf-8"" . Utf-8 é um encoding específico que suporta todos os caracteres do Unicode (em contraste com o encoding nativo do Windows por exemplo, que só suporta 256 caracteres).
Em outras palavras: se você simplesmente colar o emoji entre aspas no seu código fonte, ele vai funcionar como qualquer outra string.
Se não quiser deixar emojis no seu código fonte, você pode deixa-los escapados no código fonte com a notação ""\uXXXX"" onde ""XXXX"" é o código do
unicode-codepoint do Emoji   - (por exemplo ""\u263a"" para ""☺""). Se o código tiver mais de 5 dígitos, então é preciso usar \U maiúsculo e 8 dígitos: ""\U0001f389"" para '🎉'. (não importa se são 5 dígitos - tem que ser 8 dígitos hexadecimais depois do \U: o que faltar deve ser completado com 0 a esquerda, como nesse exemplo)
","
            8
        ",,,"['\npython', 'string', 'unicode\n']"
514258,Encontrar valores em blocos que se estendem por várias linhas,"
Eu tenho um Arquivo Espelho que contém espelhos de cupons, e criei um algoritimo para separar os cupons:
import re

txt = open(""arqEspelho.txt"", 'r+').read()

x = re.finditer(r"".*COTIA\s*C*"", txt)

z = re.finditer(r""OPR.*"", txt)

espelhos = list(zip(x, z))

for espelho in espelhos:
    txt_espelho = txt[espelho[0].span()[0]: espelho[1].span()[1] + 1]

Esse txt_espelho seria o bloco do cupom ou seja o cupom separado, porém eu precisava separar ele por valor e extrato , tem uma linha que está exatamente assim:
<N>                     Extrato No. 042356</N>

Eu tentei encontrar desa forma:
re.findall(r'Extrato No. 042356', txt_espelho):

Porém ele ainda me retorna cupons aleatórios, também tem a linha de valor, que está assim:
TOTAL R$                                                717,30

E eu tentei encontrar ela assim:
re.findall(r""TOTAL\sR.*717,30"", txt_espelho)

Porém ele se comporta como se não houvesse esse valor no txt_espelho sendo que tem
na variavel x eu defino o inicio do cupom , e na variavel z eu defino o fim do cupom.
Porém às vezes ele encontra a palavra ""COTIA"" em outros lugares do cupom, então eu tentei definir o início assim:
x = re.finditer(r"".*CENTRO"", txt)

Que se refere a palavra centro que vem antes do cotia para evitar erros, porém mesmo assim ele ainda não encontra  essa palavra.
Resumindo, eu preciso procurar o cupom pelo valor e pelo extrato nesses blocos de cupom.

Exemplo do arquivo:
                       COTIA CENTRO
                        ATACADAO S.A.
                      PROF JOSE BARRETO
--------------------------------------------------------------
CNPJ 75.315.333/0059-25
IE 278.157.726.114
IM ISENTO
--------------------------------------------------------------
<N>                     Extrato No. 042353</N>
<N>                CUPOM FISCAL ELETRÔNICO - SAT</N>
--------------------------------------------------------------
#|COD|DESC|QTD|UN|VL UN R$|(VL TR R$)*|VL ITEM R$
--------------------------------------------------------------
001 00025200 SAB.DOVE BRANCO         1X90G 
     1 UND9 X 2,39 (0,94)                                 2,39
002 00025200 SAB.DOVE BRANCO         1X90G 
     1 UND9 X 2,39 (0,94)                                 2,39
003 00061325 VINHO SANGUE BOI        1X1LT 
     1 UND9 X 11,90 (4,17)                               11,90
004 00004940 OLEO SOJA CONCORDIA   1X900ML 
     1 UND9 X 6,59 (0,74)                                 6,59
005 00048794 ESC.DENTAL DENTRAT A   1X1UND 
     1 UND9 X 2,25 (0,96)                                 2,25
006 00064376 HASTES FLEXIVEIS COT 1X150UND 
     1 UND9 X 2,29 (0,51)                                 2,29
007 00058824 SHAMP.DARLING         1X350ML 
     1 UND9 X 4,90 (2,20)                                 4,90
008 00004274 CAFE CABOCLO ALMOF.    1X500G 
     1 PCT8 X 6,88 (0,77)                                 6,88
009 00050143 REFR.PO TANG            1X25G 
     2 UND9 X 0,99 (0,48)                                 1,98
010 00050140 REFR.PO TANG            1X25G 
     1 UND9 X 0,99 (0,24)                                 0,99
011 00050144 REFR.PO TANG            1X25G 
     1 UND9 X 0,99 (0,24)                                 0,99
012 00050145 REFR.PO TANG            1X25G 
     1 UND9 X 0,99 (0,24)                                 0,99


Total bruto de Itens                                     44,54
<N>TOTAL R$                                                 44,54</N>


Dinheiro                                                 50,00

Troco R$                                                  5,46

--------------------------------------------------------------
OBSERVACOES DO CONTRIBUINTE


*Valor aproximado dos tributos do item
Valor aproximado dos tributos deste cupom
(conforme Lei Fed.12.741/2012) R$                        12,45
Vlr.Aprox.Tributos: Federal R$5,41 (12,15%) 
Vlr.Aprox.Tributos: Estadual R$7,04 (15,81%) 
Fonte: IBPT.
--------------------------------------------------------------
<N>                      SAT No. 000895390</N>
                    01/02/2021 - 07:30:50


<N>               3521 0275 3153 3300 5925 5900 </N>
<N>                  0895 3900 4235 3985 7588 </N>
CFe35210275315333005925590008953900423539857588|20210201073050|44.54||C7Vv8aEzrn2pHy6l0ldI4qbrPdlBfJ35VojuEoVTpblLmYZkerh7fZzDbLFIDdGc3ztTxM8ZaTWaF6veC3uKdy2A5a2ZiXhQZH62i3wn5PDR8rIPFGTJFmabD7GhkwOcNkPTGQKo/CW3x3ArPPjidX5cSl7O3yjWVKabD53OrAcn8HTLJsGSt/2hnHlf+RHcB9JEYC2IFQkOB9oWqlxifZUx+oUGtd3cTiad5ACHjexHh68xeYe+MPgNOECmaPPhaWq8/kgVAUZLsBnOdf3xefnU3+0NwBKujhZx3IsWbHRUFR1OPA8YFgcDGGwhJ0RtIw7wRi+dDtNNY31Cwa2o4A==
--------------------------------------------------------------
        TPLinux AT.14.c00X-18.06 - Unisys Brasil Ltda
--------------------------------------------------------------
EPSON TM-T20    VERSAO:10.02 ES    PDV:020    LJ:059
OPR:0008108Leidiana M                      01/02/2021 07:30:50
carro 



                        COTIA CENTRO
                        ATACADAO S.A.
                      PROF JOSE BARRETO
--------------------------------------------------------------
CNPJ 75.315.333/0059-25
IE 278.157.726.114
IM ISENTO
--------------------------------------------------------------
<N>                     Extrato No. 042354</N>
<N>                CUPOM FISCAL ELETRÔNICO - SAT</N>
--------------------------------------------------------------
#|COD|DESC|QTD|UN|VL UN R$|(VL TR R$)*|VL ITEM R$
--------------------------------------------------------------
001 00036102 COXA FGO SEARA IQF      1X1Kg 
     1 PCT9 X 8,98 (1,45)                                 8,98
002 00017122 ESC.D.SORRISO STD      1X1UND 
     1 UND9 X 2,35 (0,60)                                 2,35
003 00012075 CR.D.COLGATE MPA        1X90G 
     1 TBO9 X 2,14 (0,35)                                 2,14
004 00057464 SABAO PDC YPE COCO     1X200G 
     1 UND9 X 2,35 (0,52)                                 2,35
005 00033822 BISC.DUCHEN CR.CRACK   1X200G 
     1 UND8 X 1,49 (0,17)                                 1,49
006 00066640 MAC.PREDILLETO COMUM   1X500G 
     1 UND9 X 1,89 (0,21)                                 1,89
007 00066640 MAC.PREDILLETO COMUM   1X500G 
     1 UND9 X 1,89 (0,21)                                 1,89
008 00061018 SAB.PROTEX              1X85G 
     1 UND9 X 2,10 (0,47)                                 2,10


Total bruto de Itens                                     23,19
<N>TOTAL R$                                                 23,19</N>


Dinheiro                                                 24,00

Troco R$                                                  0,81

--------------------------------------------------------------
OBSERVACOES DO CONTRIBUINTE


*Valor aproximado dos tributos do item
Valor aproximado dos tributos deste cupom
(conforme Lei Fed.12.741/2012) R$                         3,98
Vlr.Aprox.Tributos: Federal R$1,20 (5,17%) 
Vlr.Aprox.Tributos: Estadual R$2,78 (11,99%) 
Fonte: IBPT.
--------------------------------------------------------------
<N>                      SAT No. 000895390</N>
                    01/02/2021 - 07:41:52


<N>               3521 0275 3153 3300 5925 5900 </N>
<N>                  0895 3900 4235 4685 9540 </N>
CFe35210275315333005925590008953900423546859540|20210201074152|23.19||cLWbQszXKX3f89kmOQ3k1Te72502OiJPKuqgKyehwiApqxvS3Jli1JVnjiCgXHHPZChueR8XXB61nurhmBJ3f/55Mphd4pq0UVjdMR61n+9/UPzq1MYCz2I3M2+/UTWw3aa3rzy+Y/bpUa6wOBn60+F/clO8jNc22AVzASdl62NH/rI2883hQfCxy53r/ECRtxDjujNHMjZcLbsBwAFeXbFANZcA3c7PECxcBxBtDP8lfuPqSPjjEbGL587KWEApILMLZwviqXUvYB6dkj5OC6iEwPpTuhRyZnHaZfSZzB3+n1qwCZVOKu8uKqHuw3gtcE3k6Q98tZ0O827+TbTMjQ==
--------------------------------------------------------------
        TPLinux AT.14.c00X-18.06 - Unisys Brasil Ltda
--------------------------------------------------------------
EPSON TM-T20    VERSAO:10.02 ES    PDV:020    LJ:059
OPR:0008108Leidiana M                      01/02/2021 07:41:52
carro 



                        COTIA CENTRO
                        ATACADAO S.A.
                      PROF JOSE BARRETO
--------------------------------------------------------------
CNPJ 75.315.333/0059-25
IE 278.157.726.114
IM ISENTO
--------------------------------------------------------------
<N>                     Extrato No. 042355</N>
<N>                CUPOM FISCAL ELETRÔNICO - SAT</N>
--------------------------------------------------------------
#|COD|DESC|QTD|UN|VL UN R$|(VL TR R$)*|VL ITEM R$
--------------------------------------------------------------
001 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,794 KG9  X 6,90 (0,89)                                 5,48
002 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,710 KG9  X 6,90 (0,79)                                 4,90
003 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,680 KG9  X 6,90 (0,76)                                 4,69
004 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,856 KG9  X 6,90 (0,96)                                 5,91
005 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,782 KG9  X 6,90 (0,87)                                 5,40
006 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,786 KG9  X 6,90 (0,88)                                 5,42
007 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,674 KG9  X 6,90 (0,75)                                 4,65
008 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,576 KG9  X 6,90 (0,64)                                 3,97
009 00009580 COXA/SOB.FGO MR FGO     1X1Kg 
 0,754 KG9  X 6,90 (0,84)                                 5,20
010 00033738 FRANGO CONFINA CONG.    1X1Kg 
 2,614 KG9  X 6,50 (2,75)                                16,99
011 00033738 FRANGO CONFINA CONG.    1X1Kg 
 2,568 KG9  X 6,50 (2,70)                                16,69
012 00033738 FRANGO CONFINA CONG.    1X1Kg 
 2,390 KG9  X 6,50 (2,52)                                15,54
013 00033738 FRANGO CONFINA CONG.    1X1Kg 
 2,564 KG9  X 6,50 (2,70)                                16,67
014 00033738 FRANGO CONFINA CONG.    1X1Kg 
 2,142 KG9  X 6,50 (2,26)                                13,92


Total bruto de Itens                                    125,43
<N>TOTAL R$                                                125,43</N>


Dinheiro                                                130,00

Troco R$                                                  4,57

--------------------------------------------------------------
OBSERVACOES DO CONTRIBUINTE


*Valor aproximado dos tributos do item
Valor aproximado dos tributos deste cupom
(conforme Lei Fed.12.741/2012) R$                        20,32
Vlr.Aprox.Tributos: Federal R$5,27 (4,20%) 
Vlr.Aprox.Tributos: Estadual R$15,05 (12,00%) 
Fonte: IBPT.
--------------------------------------------------------------
<N>                      SAT No. 000895390</N>
                    01/02/2021 - 07:44:32


<N>               3521 0275 3153 3300 5925 5900 </N>
<N>                  0895 3900 4235 5353 0841 </N>
CFe35210275315333005925590008953900423553530841|20210201074432|125.43||MMZY3pEVZjxz7vN1sCZoKgaOsMj8NqDgi3UFhuve6eSaIGstqJvtFd4Ho4jucoMxl2uJ9mTNOKzRpeuYpXOYwGJSqVzubhpNw63YmyGv8j3Yzi+HW+TXnJANrP+cPNCmCpcRYPvaxyLF/ko1JkwIUNGBN550pLsXcmCVqxXqgRR51VaspD72t4Rt8V+3ORuyJrVd07sSfnqj2jOlsYUg01M9czd7TGiddYJXC8BOR/427xYxVV1DAVKk019YXxEus3ZsKsTGDpQ4jycuTRv3DsS8OWUIVbh9Nhp5jBBijeRH7T46UyrcsJcRYfxTgS0WzhrqA3l8EBSDKdnOdeNUnQ==
--------------------------------------------------------------
        TPLinux AT.14.c00X-18.06 - Unisys Brasil Ltda
--------------------------------------------------------------
EPSON TM-T20    VERSAO:10.02 ES    PDV:020    LJ:059
OPR:0008108Leidiana M                      01/02/2021 07:44:33
carro 

","
Acho que você está complicando à toa.
Em vez de sair varrendo a string procurando pelo início e fim de cada cupom, você pode simplesmente ir lendo linha a linha, e para cada linha você vê se está no início ou fim de um cupom, ou se tem um extrato, ou o valor total, etc.
Assim, você pode até usar regex para extrair as partes que interessam, mas fica mais simples:
import re

re_extrato = re.compile(r'Extrato No. (\d+)')
re_total = re.compile(r'TOTAL R\$\s+(\d+,\d{2})')

cupons = [] # lista de cupons
with open(""arqEspelho.txt"", 'r') as arq:
    for linha in arq: # para cada linha do arquivo
        linha = linha.strip() # remove os espaços do início e fim, e as quebras de linha
        if linha == 'COTIA CENTRO': # início de um cupom
            # começa um novo cupom
            cupom = {}
        elif linha == 'carro': # final de um cupom
            cupons.append(cupom) # adiciona na lista de cupons
        else:
            # procura pelo extrato
            m = re_extrato.search(linha)
            if m: # se tem, seta o valor do extrato no cupom
                cupom['extrato'] = m.group(1)
            else: # senão, procura pelo total
                m = re_total.search(linha)
                if m: # se encontrou, pega o valor
                    cupom['total'] = m.group(1)

A partir do Python 3.8 você pode usar assignment expressions, que deixa o código um pouco mais sucinto:
# A partir do Python 3.8
import re

re_extrato = re.compile(r'Extrato No. (\d+)')
re_total = re.compile(r'TOTAL R\$\s+(\d+,\d{2})')

cupons = []
with open(""arqEspelho.txt"", 'r') as arq:
    for linha in arq:
        linha = linha.strip() # remove os espaços do início e fim, e as quebras de linha
        if linha == 'COTIA CENTRO':
            # começa um novo cupom
            cupom = {}
        elif m := re_extrato.search(linha): # assignment expression, somente para Python >= 3.8
            cupom['extrato'] = m.group(1) # se achou o extrato, seta no cupom
        elif m := re_total.search(linha): # assignment expression, somente para Python >= 3.8
            cupom['total'] = m.group(1) # se achou o total, seta no cupom
        elif linha == 'carro': # final de um cupom
            cupons.append(cupom) # adiciona na lista de cupons

No caso, as regex possuem um grupo de captura (os parênteses), que eu posso usar depois no método group para pegar somente a informação que eu quero (no caso, são os dígitos que correspondem ao extrato, ou o valor total).
O resultado será a lista cupons, na qual cada elemento é um dicionário contendo o valor do extrato e o total. Aí você pode usá-la para buscar os cupons usando o critério que quiser, por exemplo:
# buscar cupom pelo valor total
for cupom in cupons:
    if cupom['total'] == '44,54':
        print(f'achei, extrato={cupom[""extrato""]}')

No caso, o total é uma string, mas você pode converter para número se quiser (acho que já foge do escopo da pergunta, mas enfim, uma vez tendo os dados, você pode manipulá-los como achar melhor).
E para extrair mais dados de cada cupom, basta colocar mais condições no if/elif e se for o caso, criar novas expressões para extrair o que precisa, e por fim guardar esses dados no dicionário cupom.

Ainda, se quiser todo o texto de cada cupom, basta ir incrementando-o no mesmo loop:
cupons = []
texto_cupom = ''
with open(""arqEspelho.txt"", 'r') as arq:
    for linha in arq:
        texto_cupom += linha # texto do cupom
        linha_sem_espacos = linha.strip() # remove os espaços do início e fim, e as quebras de linha
        if linha_sem_espacos == 'COTIA CENTRO':
            # começa um novo cupom
            texto_cupom = '' # começa um novo texto
            cupom = {}
        elif m := re_extrato.search(linha_sem_espacos):
            cupom['extrato'] = m.group(1)
        elif m := re_total.search(linha_sem_espacos):
            cupom['total'] = m.group(1)
        elif linha_sem_espacos == 'carro': # final de um cupom
            cupom['texto'] = texto_cupom # salva o texto todo
            cupons.append(cupom) # adiciona na lista de cupons

Ou seja, quando começa um cupom eu ""zero"" o texto, e quando termina, eu adiciono o texto atual no dicionário.
","
            2
        ",,,"['\npython', 'regex\n']"
514214,Erro ao fechar uma aba no PySimpleGUI,"
Estou fazendo um programa de teste com o PySimpleGUI, mas basicamente ele pede um usuário, se estiver correto ele abre uma nova aba com a frase: ""Sucesso, você entrou na sua conta!"", e quando estivesse errado abrisse uma nova aba com uma frase ""Senha incorreta. Tente novamente"". Estava programando quando precisei interromper o loop while quando a pessoa fechasse o programa. Até consegui fazer isso na parte onde pede o usuário, mas quando estava fazendo na parte de senha incorreta, percebi que o python não estava reconhecendo o comando if click == sg.WINDOW_CLOSED:. Então modifiquei o código para colocar um input para ver se ele aparecia, e se ele aparecesse o comando estaria sendo reconhecido. Mas o resultado é o mesmo que o do início:
You have tried 100 times to read a closed window. You need to add a check for event == WIN_CLOSED
Aqui está o código (eu sei que não iria fechar com ele, mas só queria que ele reconhecesse o input primeiro)
from PySimpleGUI import PySimpleGUI as sg
from time import sleep
sg.theme(""LightGreen4"")
x = [
        [sg.Text('Usuário'), sg.Input(key='usuario')],
        [sg.Button('Entrar', key = 'entrar')]
]
janela = sg.Window('lalalala', x)
s = 's'
t = 't'
while s == 's':
    while t == 't':
        click, valores = janela.read()
        if click == sg.WINDOW_CLOSED:
            s = 't'
            click = 'closed'
            break
        elif click == 'entrar':
            if valores['usuario'] == '004848':
                layout = [
                    [sg.Text('Sucesso! Você entrou na sua conta!')]
                ]
                break
            else:
                layout = [
                    [sg.Text('Senha incorreta. Tente novamente.')]
                ]
                break
    if valores['usuario'] == '004848':
        janela3 = sg.Window('sucesso!', layout)
        while True:
            click = janela3.read()
            pass
    elif click == 'closed':
        sg.Window.close(janela)
    else:
        janela3 = sg.Window('senha incorreta', layout)
        while True:
            del(click)
            click = janela3.read()
            if click == sg.WINDOW_CLOSED:
                input('s')
                sleep(100)

Estou utilizando o Windows 10 PRO, 64bit.
Por favor, caso tenha um erro na pergunta escreva nos comentários para eu modificá-la.
Obrigado!
","
Tente isso: (Obs. não é recomendo usar sleep em uma interface gráfica, isso faz o código esperar um pouco impossibilitando de a interface ser atualizada podendo crashar)
from PySimpleGUI import PySimpleGUI as sg

def tela1(layout, name_window):
    janela = sg.Window(name_window, layout=layout, finalize=True)
    while True:
        event, values = janela.read()
        if event == sg.WINDOW_CLOSED:
            break

sg.theme(""LightGreen4"")
layout = [[sg.Text('Usuário'), sg.Input(key='usuario')],
    [sg.Button('Entrar', key = 'entrar')]]
janela = sg.Window('Window-PySimpleGUI', layout=layout, finalize=True)

while True:
    event, values = janela.read()
    if event == sg.WINDOW_CLOSED:
        break
    elif event == 'entrar':
        if values['usuario'] == '004848':
            janela.hide()
            layout1 = [[sg.Text('Sucesso! Você entrou na sua conta!')]]
            tela1(layout1, 'sucesso!')
            janela.un_hide()
        else:
            janela.hide()
            layout2 = [[sg.Text('Senha incorreta. Tente novamente.')]]
            tela1(layout2, 'senha incorreta')
            janela.un_hide()

","
            -1
        ",,,"['\npython', 'python-3.x', 'módulo\n']"
514202,Como alterar cores em gráficos utilizando matplotlib,"
Criei um gráfico de pontos utilizando matplotlib, porém estou querendo colocar a seguinte condição:
Para os pontos acima de zero ( > 0) em Y pintar de verde e para os pontos abaixo de zero ( < 0) pintar de vermelho.
plt.plot(df2[""Status""], 'o')
plt.ylabel('Eixo Y')
plt.xlabel('Eixo X')
plt.show()


","
Em primeiro lugar, se você quer plotar um gráfico de pontos/espalhamento (scatter plot), utilize a função plt.scatter.
Nesse tipo de gráfico, o que você precisa é de uma sequência informando qual a cor correspondente de cada ponto plotado. Como você está trabalhando com um DataFrame, podemos criar uma coluna nova nele com os valores ""green"" e ""red"" e passar esta coluna com ao argumento c (de color) do plt.scatter.
Para gerar esta coluna com as cores, podemos utilizar o método apply de uma coluna de DataFrame: ao escrevermos col.apply(func), o pandas passa cada elemento da coluna col pela função func, retornando uma coluna de mesmo tamanho. Aí é só escrever a lógica da função para retornar ""green"" ou ""red"" de acordo com o valor de entrada.
Exemplo:
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Gera um DataFrame com coluna Status (200 valores aleatórios entre -1 e 1)
ys = np.random.uniform(-1, 1, 200)
df = pd.DataFrame({""Status"": ys})


# Função auxiliar contendo a lógica de como colorir cada ponto
def cor_do_ponto(valor: float) -> str:
    """"""Retorna a cor de um ponto do gráfico, de acordo com o seu valor.""""""
    if valor > 0:
        return ""green""
    else:
        return ""red""

# Cria uma nova coluna aplicando a função a cada ponto da coluna Status
df['Color'] = df['Status'].apply(cor_do_ponto)

# Plota o resultado
plt.scatter(df.index, df['Status'], c=df['Color'])
plt.ylabel('Eixo Y')
plt.xlabel('Eixo X')
plt.show()

Como a função plt.scatter precisa de valores explícitos da coordenada X de cada ponto, passei o próprio índice do DataFrame, que por padrão é uma sequência numérica crescente indo de zero até len(df) - 1.
Ah, um detalhe: note que, pela lógica da nossa função, se algum valor for exatamente zero sua cor será vermelha também.
Resultado:

","
            1
        ",,,"['\npython', 'gráfico', 'matplotlib', 'cores\n']"
514161,Guardar o número de linhas de um dataframe em uma variável [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Eu tenho um dataframe que é gerado de forma randômica variando seu número de linhas. Eu gostaria de guardar esse número variável para usar futuramente.
Segue o exemplo do dataframe:

E eu gostaria de substituir o número de linhas por esse 10 para deixar mais automatico.
i = 0
lista = []

while i < 10:
  lin = x.loc[i]['index']
  p = yf.Ticker(lin)
  lista.append(p.info)
  lista.append(""-----------------------"")
  i = i + 1

","
Se entendi bem você quer substituir aquel 10 fixo pelo número de linhas que foram geradas randomicamente no seu dataframe, é isso?
Neste caso você pode utilizar o método shape que mostra a quantidade de linhas e colunas de um dataframe. Você pode, inclusive, fazer o seguinte para ter cada um desses valores armazenado em uma variável:
linhas, colunas = dataframe.shape

depois é só usar essa info para o que você deseja, no seu caso:
i = 0
lista = []

while i < linhas:
  lin = x.loc[i]['index']
  p = yf.Ticker(lin)
  lista.append(p.info)
  lista.append(""-----------------------"")
  i = i + 1

","
            0
        ",,,['\npython\n']
514112,Como usar o floodfill do PIL em python?,"
Eu estou tentando colorir uma barra usando o pacote PIL do python. Essa é a barra original:

Gostaria de colorir a parte interna inteira, com apenas uma cor. Eu tentei usar o floodfill para isso:
from PIL import Image, ImageDraw

im = Image.open('progress.jpeg')
width, height = im.size
center = (int(0.5*width), int(0.33* height))
yellow = (255, 255, 0, 255)
ImageDraw.floodfill(im, xy=center, value=yellow)
im.save('result.png')

E obtive o seguinte resultado:

Inicialmente, eu imaginei que o floodfill colorisse todos os pixels que estão entre o width e a height específicadas no argumento xy. Como peguei 1/3 da altura e metade do cumprimento, ele pintou de amarelo a área interna da esquerda para a direita, a partir da metade. No entanto, se uso 100% da width, o programa não colore nada. Então, obviamente, minha interpretação está errada.
Como o floodfill funciona? Como posso colorir a barra interna completamente?
","
Lembra da função do ""baldinho"" do Paint? O floodfill funciona de forma análoga: você passa uma cor e um ponto XY, e o PIL tenta ""preencher"" a região ao redor do ponto XY com a cor desejada.
É claro que o ponto de corte para definir a região limite do preenchimento vai depender da sua aplicação - talvez você queira que o preenchimento pegue regiões de cores parecidas, mas não idênticas à cor da região em que você adicionou a cor. Você pode controlar isso com o argumento thresh.
Para colorir a barra inteira no seu caso, acredito que o mais simples seja utilizar o floodfill duas vezes - passando uma posição XY dentro da região verde, e uma posição XY dentro da região preta. Se todos os pixels de cada região tiverem a mesma intensidade, você nem precisa se preocupar com o argumento thresh.
Edit
Testei a sua imagem e a cor ao longo da barra realmente não é homogênea - mas se utilizarmos um thresh suficientemente alto, conseguimos preencher a barra totalmente. Abaixo o exemplo de código que faz o que você quer:
im = Image.open('progress.jpeg')
width, height = im.size
green_region = (int(0.4*width), int(0.33*height))
black_region = (int(0.6*width), int(0.33* height))
yellow = (255, 255, 0, 255)
for region in (green_region, black_region):
    ImageDraw.floodfill(im, xy=region, value=yellow, thresh=150)
im.save('result.png')

Output:

A documentação do floodfill está aqui.
Exemplos:

Imagem de entrada:



Executando seu código na imagem (usa o argumento padrão thresh=0 - note o pixel amarelo sozinho no chapéu):




Adicionando o argumento thresh=30:



Adicionando o argumento thresh=100:


","
            1
        ",,,"['\npython', 'imagem\n']"
514087,Validação de strings utilizando while em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



O seguinte código tem a intenção de pedir o sexo do usuário (""f"" ou ""m"") e caso o usuário digite outra letra, ele continuaria pedindo para digitar ""f"" ou ""m"", todavia ao executá-lo ele continua pedindo o sexo, mesmo usuário digitando ""f"" ou ""m"".
sexo = 'o'

while (sexo != 'f' or sexo != 'm'):
    sexo = input('Digite seu sexo (m / f): ')

Acontece a mesma coisa quando solicito o o estado civil do usuário :
estado_civil = 'a'
while estado_civil != 's' or estado_civil != 'c' or estado_civil != 'v' or estado_civil != 'd':
    estado_civil = input('Digite seu estado civil (s, c, v, d): ')


Eu consegui resolver o problema utilizando o código a seguir, mas gostaria de saber o motivo pelo qual não funciona utilizando o código acima:
while True:
  sexo = input('Digite seu sexo (m / f): ')
  if sexo == 'f' or sexo == 'm':
    break

while True:
  estado_civil = input('Digite seu estado civil (s, c, v, d): ')
  if estado_civil == 's' or estado_civil == 'c' or estado_civil == 'v' or estado_civil == 'd':
    break

","
O motivo pelo qual um código funcionou, mas o outro não, é muito simples.
No while, a condição serve para indicar se ele vai continuar executando ou não. Enquanto a condição for verdadeira, ele continua.
Então você fez:
while (sexo != 'f' or sexo != 'm'):
    sexo = input('Digite seu sexo (m / f): ')

A condição do while é sexo != 'f' or sexo != 'm', que na verdade são duas condições mais o operador or. No fim, toda essa expressão verifica se sexo é diferente de ""f"" ou se é diferente de ""m"". O resultado do or é verdadeiro (True) se qualquer uma das duas condições for verdadeira (só uma delas já serve). Ou seja, se sexo for diferente de ""f"", o resultado é True. Mas se for diferente de ""m"", também é True.
Então o que acontece se você digita ""f""? Ele não será diferente de ""f"", mas será diferente de ""m"". Como o or só precisa que uma das condições seja verdade, o resultado é True, e por isso o while continua executando.
E se você digita ""m""? Ele será diferente de ""f"", o que já é suficiente para que o resultado do or seja True, e por isso o while continua executando.
Aliás, essa condição sempre será verdadeira: qualquer valor diferente de ""f"" cairá na primeira condição e o resultado será True. E se digitar ""f"", a primeira condiçao é falsa, mas a segunda (""f"" é diferente de ""m"") é verdadeira, também resultando em True. Portanto, você criou um loop infinito.




Valor
sexo != 'f'
sexo != 'm'
sexo != 'f' or sexo != 'm'




""f""
False
True
True


""m""
True
False*
True


não é ""f"" nem ""m""
True
True*
True




Ou seja, a condição sempre será True, independente do valor de sexo. Por isso que o while continua executando, independente do que for digitado.
* Na verdade, se a primeira expressão for True, a segunda nem sequer é avaliada, já que os operadores booleanos são short circuit (só avaliam o mínimo necessário: como no or basta que uma delas seja True, se a primeira for, a segunda nem é avaliada).

Sendo assim, o que você quer é que o loop continue executando somente se o sexo não for ""f"" e nem ""m"" (ou seja, se digitar algo que não é ""f"" e também não é ""m"", eu continuo, mas se for um dos dois, eu paro). Por isso o operador correto a ser utilizado é o and:
sexo = ''
while sexo != 'f' and sexo != 'm': # repare que não precisa dos parênteses
    sexo = input('Digite seu sexo (m / f): ')

O and só resulta em True se ambas as condições forem verdadeiras. Ou seja, se eu digitar ""f"", a primeira condição é falsa (não é diferente de ""f"") e o resultado será False. E se digitar ""m"", a primeira condição é verdadeira (é diferente de ""f""), mas a segunda é falsa (não é diferente de ""m""), e o resultado também será False. Portanto, se eu digitar ""f"" ou ""m"", ele sai do while. Para qualquer outro valor, o loop continua.
Veja a diferença:




Valor
sexo != 'f'
sexo != 'm'
sexo != 'f' and sexo != 'm'




""f""
False
True
False


""m""
True
False
False


não é ""f"" nem ""m""
True
True
True




Ou seja, agora a condição só é verdadeira se eu não digitar ""f"" nem ""m"", e aí o while continua. Se eu digitar qualquer um deles, o resultado é False e o while é interrompido.

Eu particularmente não gosto dessa solução de dar um valor arbitrário para a variável antes do loop, só para que ele entre lá uma vez. Prefiro fazer como o seu segundo código:
while True:
  sexo = input('Digite seu sexo (m / f): ')
  if sexo == 'f' or sexo == 'm':
    break

Ele funciona porque em vez de != (diferente), você usou == (igual), então agora a condição verifica se foi digitado ""f"" ou ""m"" (se sexo é igual a ""f"" ou igual a ""m""). Se eu digitar ""f"" ou ""m"", ele entra no if e o break interrompe o while. Para qualquer outro valor, ele não entra no if e o loop continua.
Então agora ficou assim:




Valor
sexo == 'f'
sexo == 'm'
sexo == 'f' or sexo == 'm'




""f""
True
False
True


""m""
False
True
True


não é ""f"" nem ""m""
False
False
False




Ou seja, se digitar ""f"" ou ""m"", entra no if e interrompe o loop. Se digitar qualquer outra coisa que não seja ""f"" nem ""m"", não entra no if e o while continua executando.
Por isso que o segundo código funcionou, mas o primeiro não.

Claro, você pode implementar de outras maneiras, como as outras respostas sugerem (if sexo in ('m', 'f'), etc), mas aí já não é o foco da pergunta. O importante é entender como as condicionais funcionam e aplicá-las corretamente.
Resumindo:

uma expressão com or resulta em True se qualquer uma das condições for verdadeira
uma expressão com and resulta em True se todas as condições forem verdadeiras

","
            2
        ","
Se você estiver utilizando python 3.8 ou superior, pode implementar Assigment Expression (Expressão de atribuição) no seu código para realizar as verificações. Desta forma o código ficaria:
while (s := input('Sexo: [M/F] ').upper()) not in {'M', 'F'}:
    print('Sexo INVÁALIDO!')

while (e := input('Estado Civil: [S/C/V/D] ').upper()) not in {'S', 'C', 'V', 'D'}:
    print('Estado Civil INVÁLIDO!')

Como funciona o código?
O primeiro bloco while verifica se o valor atribuído à variável s pertence ou não ao conjunto...
{'M', 'F'}

Enquanto não pertencer, será exibido a mensagem de erro e, também, será novamente solicitado o sexo. Caso contrário, o loop será encerrado e passará para o próximo bloco de códigos.
O segundo bloco while tem funcionamento análogo ao do primeiro. Só que desta vez a verificação terá quatro possibilidades que são:
{'S', 'C', 'V', 'D'}

","
            0
        ","['\npython', 'python-3.x', 'condição\n']"
514067,"Problema onde tenho que criar um retângulo sem preenchimento, mas estou com problema nos espaços adicionais no retângulo","
Olá, tenho que fazer um retângulo sem preenchimento, exemplo:
digite a largura: 10
digite a altura: 3
##########
#        #
##########`

Mas, por conta do corretor automático do curso, não estou conseguindo prosseguir por conta de dois espaços no lado direito no meio do retângulo, exemplo:
##########
#        #[ESPAÇO][ESPAÇO]
##########

Não estou sabendo como solucionar esse problema, esse aqui é o código:
largura = int(input(""Digite a largura: ""))
altura = int(input(""Digite a altura: ""))
    
def retangulo(largura, altura): 
    linha = 1
    while linha <= altura:
        coluna = 1
        while coluna <= largura:
            if linha == 1 or linha == altura or coluna == 1 or coluna == largura - 1:
                print(""#"", end="""")
            if 1 < linha < altura:
                print("" "", end="""")
            coluna += 1
        print()
        linha += 1
        

print(retangulo(largura, altura)) 

","
São três os equívocos:

Da forma que a função foi construída a linha:
print(retangulo(largura, altura))
é prolixa pois todo o processo de impressão ocorre dentro da própria função retangulo então ela pode ser chamada diretamente sem a necessidade do print() .
A restrição na condição coluna == largura - 1 é um contrassenso por como começa contar as colunas a partir do 1 sua última coluna terá como índice a própria largura.
A condição 1 < linha < altura é uma gambiarra para corrigir erro gerado pela condição anterior e portanto pode ser excluida.

Identificados os problemas e modificando seu código para funcionar como deseja, ficará assim:
def retangulo(largura, altura): 
    linha = 1
    while linha <= altura:
        coluna = 1
        while coluna <= largura:
            if linha == 1 or linha == altura or coluna == 1 or coluna == largura:
                print(""#"", end="""")
            else:
                print("" "", end="""")
            coluna += 1
        print()
        linha += 1  
            
retangulo(largura, altura)

Teste o código no Repl.it
Como, diz o Maniero, funcionar não é o mesmo que estar certo, o seu código pode ser reescrito e simplificado com um range, f-string e o operador de repetição de sequencia *:
largura = int(input(""Digite a largura: ""))
altura = int(input(""Digite a altura: ""))

def retangulo(largura, altura): 
  #Itera em l de 0 até altura - 1...
  for l in range(altura):
    if l == 0 or l == altura - 1:
      print(""#""*largura)             #...se a linha for ou topo ou a base imprime quantos # quanto largura.
    else:
      print(f""#{' '*(largura-2)}#"")  #...para todas as outras linhas imprime a primeira e última colunas.

retangulo(largura, altura)

Teste o código no Repl.it
Ou então usando o operador ternário:
largura = int(input(""Digite a largura: ""))
altura = int(input(""Digite a altura: ""))

def retangulo(largura, altura): 
    for l in range(altura):
      print(""#""*largura if l == 0 or l == altura - 1 else f""#{' '*(largura-2)}#"")

retangulo(largura, altura) 

Teste o código no Repl.it
","
            1
        ",,,['\npython\n']
514025,Coletar valor de um dicionário [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Estou em um projeto onde dentro do dicionario a key é um nome de pessoa e o valor dela é lista. A lista tem valores preenchidos como mostra o exemplo: Ana:(3,5) - ""Ana"" é a key do dicio e ""3,5"" é valor da lista criada e atribuida no dicio. Eu quero coletar esse valor ""3,5"", ja tentei utilizar get porém ele me retorna ""None""
Código:
nota2 = aluno.get(""{}"".format(aluno))
Nesse caso, a variável ""nota2"" deveria ter o valor 3,5. O valor da lista sempre vai variar. Espero ter sido claro o suficiente, obrigado!
",,,,,"['\npython', 'dicionário\n']"
514002,Dúvida em Laços Python [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Acrescentar um caractere a uma str em python

                                (2 respostas)
                            

Fechada há 10 meses.



Galera to quebrando a cabeça aqui faz um tempo, e e um pequeno detalhe, como que eu faço pra exibir os valores abaixo da média?, eu ja coloquei o for pra percorrer a lista mas nao printa. E tambem o valor negativo esta sendo contabilizado na soma.
import copy
tempos = []
soma = 0
qtd = 0
while True:
valores = int(input('Valores: '))
tempos.append(valores)
lista2 = copy.copy(tempos)
soma += valores
qtd+=1
media = soma/qtd
if valores < 0:
    break
print(f'MEDIA: {media}')
for c in range(tempos):
   if tempos < media:
     print(f'{tempos:}')

mesmo se vc que leu não souber oq é, mas tem uma ideia, comenta ai
","
Você comentou: [...] tambem o valor negativo esta sendo contabilizado na soma.
Isso aconteceu pois logo que você obtém o valor do usuário, você fez o seguinte:
valores = int(input('Valores: '))
tempos.append(valores)

Neste caso o correto é primeiro você avaliar a entrada do usuário e só depois adicioná-lo.
valores = int(input('Valores: '))

if valores < 0:
  break

tempos.append(valores)

Você também comentou: eu ja coloquei o for pra percorrer a lista mas nao printa
Desculpe mas não entendi o motivo de você precisar percorrer tudo de novo a cada entrada do usuário:
for c in range(tempos):
  if tempos < media:
    print(f'{tempos:}')

Mas antes de te passar uma sugestão para isso, quero te informar que tempos é uma variável do tipo list. Neste caso se você quer percorrer os itens basta você usar:
for c in tempos:

Eu tenho uma sugestão que deve atender ao que você precisa e ficará mais simples:
tempos = []

while True:
  valor = int(input('Valor: '))

  if valor < 0:
    break

  tempos.append(valor)
  media = sum(tempos) / len(tempos)

  print(f'MEDIA: {media}')

  if valor < media:
    print(f'O valor {valor} está abaixo da média: {media}')

Observe que usei sum para que o Python some os valores armazenados e len para contar quantos itens eu tenho na lista.
Eu coloquei dessa forma mais com o intuito de te ensinar que existem funções no Python que podem te ajudar nessas operações matemáticas.
Espero que eu tenha te ajudado.
","
            0
        ",,,['\npython\n']
513984,Django - Como interagir 2 formularios,"
No form1 eu tenho essa entrada ""name_car"". Esse formulario salva normalmente no banco de dados.
No form2 tenho o mesmmo campo ""name_car"" para colocar as ""peças"".
Dúvida: Como trazer o nome do carro do form1 para o campo do form2, sem precisar selecionar no field.
no models.py estão relacionados.
models.py
class car(models.Model):
    name_car= models.CharField(max_length=100) 
    nome_model= models.CharField(max_length=100)
    def __str__(self):
        return ""{} ({})"".format(nome_car, self.nome_model)

class parts(models.Model):
    name_car = models.ForeignKey(car, on_delete=models.PROTECT, related_name=""parts"")
    ns_parts = models.CharField(max_length=100) 

    def __str__(self):
        return self.nome_car.nome_car

views.py do manual2
class PartsNewView(CreateView):
    template_name = ' Parts/parts.html' 
    model = parts
    def get_queryset(self):  
            return parts.objects.filter(name_car_id=self.kwargs['pk'])
    def get_success_url(self) -> str:
        messages.success(self.request, 'A parte do carro foi Cadastrado com sucesso')
        return reverse_lazy('car')

form1 
<form method=""post"">
 {% render_field form.name_car class=""form-control"" type=""text"" %}
 <button type=""submit"" class=""btn btn-primary mr-2"">Register</button>
</form> 
save.

in form2
form2
<form method=""post"">
 <!-- Doubt: what rule do I use to bring form1's car name to form2's field. -->  
 {% render_field form.name_car value=""{{ object.name_car }}"" class=""form-control"" type=""text"" %}
  
 <br>
 {% render_field form.parts class=""form-control"" type=""text"" %}  
 <button type=""submit"" class=""btn btn-primary mr-2"">Add</button>
</form>

","
Subscrever os metodos get e post tanto o View ou CreateView
assim como utilizou o get_queryset e  get_success_url,
havendo uma ForeignKey, tera que repassar ela para outro form diretamente.
   class ItenABVIEW(View):
        template_name = 'superforms.html'
    
        def get(self, request):
            formulario1 = ItemAForms()
            formulario2 = ItemBForms()
            contexto = {'formulario1':formulario1,'formulario2':formulario2}
    
            return render(request, self.template_name, contexto)
    
        def post(self,request):
            formulario1 = ItemAForms(request.POST or None)
            formulario2 = ItemBForms(request.POST or None)
            # No caso é uma chave tera que pegar ela
            if formulario1.is_valid() and formulario2.is_valid() :
                chave = ItemA(itema=formulario1.data['itema'])
                chave.save()
                ItemB(itemb=formulario2.data['itemb'], itemdeFora_id=chave.pk).save()
                formulario1 = ItemAForms()
                formulario2 = ItemBForms()
    
            contexto = {'formulario1': formulario1, 'formulario2': formulario2}
    
    
            return render(request, self.template_name,contexto)

no html os dois form no mesmo post:
<head>
    <meta charset=""UTF-8"">
    <title>A</title>
</head>
<body>


      <form  method=""post"">
          {% csrf_token %}
    {{ formulario1 }}
          {{ formulario2 }}
          

    <button type=""submit"">save</button>
      </form>

","
            1
        ",,,"['\nhtml', 'python', 'django\n']"
513948,Por que temos que utilizar o atributo self como argumento nos métodos?,"
Assisti a uma video aula onde é dito que todo método é obrigado a passar o parâmetro self na definição do método, como no exemplo abaixo:
class Complex(object):
    def __init__(self, real, imag):
        self._real = real
        self._imag = imag

Este exemplo retirei daqui. A única explicação que achei nessa página foi esta. Mas não entendi o que o autor quis dizer.

O primeiro argumento do método é sempre referenciado no início do
  processo. Por convenção, o primeiro argumento do método tem sempre o
  nome self. Portanto, os atributos de self são atributos de instância
  da classe.

Em Java, que é uma linguagem com a qual já sou familiarizado não há essa necessidade. Alguém sabe o porquê dessa obrigação em Python?
","
Apenas uma convenção para deixar explícito a instância do objeto dentro da classe.
O autor da linguagem define (na pergunta 4.21) self da seguinte forma:

Self is merely a conventional name for the first argument of a
method -- i.e. a function defined inside a class definition.  A method
defined as meth(self, a, b, c) should be called as x.meth(a, b, c) for
some instance x of the class in which the definition occurs;
the called method will think it is called as meth(x, a, b, c).

Eu vou criar uma história fictícia que é apenas uma brincadeira para ilustrar e tentar dar um entendimento que faça mais sentido que apenas uma convenção como é explicado pelo autor.
Suponha que eu queira escrever várias funções comuns para um certo objeto, que no caso do Python pode ser um dicionário simples.
Dessa forma, ao chamar cada função que eu escrevi, teria que passar para essa função esse objeto e em seguida os parâmetros propriamente da função. Exemplo:
item = {'qt': 10, 'nome': 'Banana', 'preco': 12.20}

def Desconto(objeto, percentual):
  objeto['preco'] = objeto['preco'] * (percentual / 100.0)

E para chamar a função:
Desconto(item, 10)

Vamos dizer que eu monte uma série de funções que trabalham em cima do mesmo tipo de objeto. Podemos dizer que eu criei uma classe de funções. Para efeito de organização vamos convencionar que o nome das funções passam a ser NomeDaClasse.NomeDaFunção(Objeto, Param1, Param2, ...).
Eu teria algo do tipo:
def MinhaClasse.Funcao1(Objeto, Param1, Param2, ...)
   ...
def MinhaClasse.Funcao2(Objeto, Param1, Param2, ...)
   ...
def MinhaClasse.Funcao3(Objeto, Param1, Param2, ...)
   ...

Agora, sempre que eu quiser chamar uma função basta identificar a classe e saber que o primeiro parâmetro sempre é um objeto de um certo tipo que aquela classe de funções entende.
Se eu convencionar que no meu código fonte eu posso escrever esse conjunto de funções de uma forma diferente, por exemplo, para não repetir o nome da classe no nome da função, vou colocar assim:
class NomeDaClasse ()
   def Funcao1(Objeto, Param1, Param2, ...)
     ...
   def Funcao2(Objeto, Param1, Param2, ...)
     ...

Quando eu quiser chamar a função dessa classe, eu continuaria a fazer:
NomeDaClasse.NomeDaFuncao(Objeto, Param1, Param2, ...)

Só que como eu criei um jeito bem parecido com a estrutura de classes da OO, então eu poderia dar um jeito de criar uma forma de passar os atributos do meu objeto em um inicializador, que eu também vou convencionar com um nome bem diferente, por exemplo, __init__ e através dele eu passo os valores dos atributos do meu ""objeto"" e crio uma única instância dessa classe. Tudo vai ficar muito parecido com as classes e objetos da OO.
Eu também vou convencionar que posso chamar as funções do meu objeto com uma sintaxe mais simples, por exemplo:
MeuObjeto.MinhaFuncao(Param1, Param2, ...)

Como eu simplifiquei tudo mas não quero que o programador saiba que tem coisas implícitas nessas minhas convenções, vou manter na assinatura das funções dentro da classe um nome especial, que vou chamar de self para indicar o parâmetro que é o objeto da minha classe. Ao fazer a chamada, internamente meu compilador faria o seguinte:
MeuObjeto.MinhaFuncao(...) => MinhaClasse.MinhaFuncao(MeuObjeto, ...)

Assim eu facilitei para o programador que pode usar uma sintaxe bem parecida com a sintaxe da OO e vou deixar explícito para essas convenções que eu fiz, deixando o nome self dentro da assinatura dos métodos da classe.
","
            20
        ","
Se você seguir o Zen do Python você verá que em Python: Explícito é melhor que implícito. E isso é levado muito a sério em toda a linguagem e em todas propostas de novidades para ela.
Da mesma forma que você precisa passar self nos métodos de instância, você também não pode omitir o self. quando acessa os métodos ou variáveis de instância. Você pode enxergar isso também pela lógica oposta: linguagens como Java e C# inventaram essa palavra reservada this que nada mais é do que um argumento escondido para uma função que foi declarada como método, representando o objeto atual. 
Essas escolhas no design da linguagem Python possibilitaram não ser necessário criar uma palavra reservada para representar esse argumento implícito dentro dos métodos. Desta forma os métodos funcionam exatamente igual a todas as outras funções. Inclusive você não precisa chamar o primeiro argumento self. Pode ser o que você quiser.
Depois dê uma lida na história por trás da sintaxe de classes. 
","
            12
        ","['\npython', 'orientação-a-objetos\n']"
513834,"Como iteradores criados a partir de listas resgatam valores ""aleatórios"" em Python?","
Estou estudando iteradores e geradores em Python, e fiquei intrigado com uma questão, e não acho a resposta para isso em nenhum lugar.
Quando criamos um gerador em Python através de uma expressão geradora como (x**2 for x in range(50)), temos uma expressão matemática, uma lei que o programa consegue utilizar para calcular o próximo valor, se demandado. O mesmo acontece se criarmos o gerador por uma função geradora, como:
def quadrados(n, max):
    while n < max:
        yield n**2

Enfim, em ambos os casos o computador tem uma receita de bolo, um passo a passo que ele segue para gerar o próximo item. Acredito que o mesmo aconteça ao se criar um iterador com uma classe.
A pergunta é, como um iterador criado a partir de uma lista de valores aleatórios, por exemplo, consegue ""produzir"" os próximos valores?
Se definimos um iterador como it = iter([95, 27, 2348, 32, 27]), como ele consegue resgatar os itens sem eles estarem salvos na memória? Se ele simplesmente acessa essa lista e obtém o valor, é porque esse valor está salvo na memória, não?
","
Primeiro, um pouco de terminologia/conceitos.
De acordo com a documentação, um iterator (ou ""iterador"") é qualquer objeto que implemente os métodos __next__ e __iter__ (sendo que este último deve retornar o próprio objeto, enquanto o primeiro retorna o próximo item do iterator, ou lança um StopIteration quando não há mais elementos).
Já um generator (ou ""gerador"") é uma função (e portanto também é chamada de generator function) que retorna um generator iterator (que a documentação define como ""Um objeto criado por uma generator function""). Uma generator function é criada usando-se o yield, que já é explicado em detalhes aqui e aqui.
E existe também a generator expression, que é uma expressão que retorna um generator (como a que tem na pergunta: (x**2 for x in range(50))).
Todo objeto generator iterator (seja criado por uma generator function ou uma generator expression) é também um iterator. Mas nem todo iterator é um generator.

Um generator é lazy no sentido de que ele só retorna o próximo valor se você chamar o método __next__ (seja explicitamente através do builtin next, ou implicitamente, quando você o percorre com um for por exemplo). Internamente ele guarda o seu estado (basicamente, ""onde ele parou"" e o valor de cada variável naquele ponto; leia o link já indicado para saber mais detalhes), para que na próxima chamada de next ele possa continuar a execução de onde parou.
Em geral um generator não guarda todos os valores de uma vez na memória, gerando-os sob demanda. Mas nada impede que você faça isso:
# itera pelos elementos do iterável uma ou mais vezes
def ciclo(iteravel, repetir=1):
    # guarda os valores do iterável em uma lista
    valores = list(iteravel)
    for _ in range(repetir):
        for n in valores:
            yield n

# imprime duas vezes os valores da generator expression
for n in ciclo((x ** 2 for x in range(3)), 2):
    print(n)

Ou seja, a generator function ciclo cria um generator que itera várias vezes pelo iterável informado. Os valores são guardados em uma lista porque o iteravel pode ser outro generator (que só pode ser iterado uma vez), então guardando os valores em uma lista eu garanto que posso iterar várias vezes sem problemas. No exemplo acima, se eu fizesse o segundo for diretamente no iteravel, os valores só seriam retornados uma vez, já que a generator expression cria um generator, e este só pode ser iterado uma vez.
Ou seja, eu criei um generator que guarda todos os valores em memória de uma vez (só por curiosidade, é exatamente isso que a função itertools.cycle faz).
Claro que isso é um corner case, e em geral, os generators não guardam todos os valores na memória (a menos que eu force isso, como fiz acima), computando-os apenas quando necessário. Já um iterator que não é um generator, não necessariamente será lazy.
Quando você faz iter([1, 2, 3]), ele retorna um iterator, que não é um generator, como pode ser verificado com o módulo inspect:
import inspect

# iter cria um iterator que não é generator
x = iter([1, 30, 99, 42])
print(inspect.isgenerator(x)) # False

# generator expression cria um generator
x = (x * 2 for x in range(10))
print(inspect.isgenerator(x)) # True

Além disso, a lista [1, 2, 3] já foi criada e internamente o iterator mantém uma referência para ela. O que o iterator faz é iterar para o próximo elemento quando o método __next__ é chamado, mas como a lista já foi criada, você não tem a ""economia de memória"". Um iterator só economizaria memória se os seus valores fossem computados sob demanda, como o exemplo do generator acima. Por exemplo:
# iterator que gera os valores sob demanda
class Squares(object):
    def __init__(self, start, stop):
        self.start = start
        self.stop = stop

    def __iter__(self): return self

    # o próximo elemento é calculado somente se next for chamado
    def __next__(self):
        if self.start >= self.stop:
            raise StopIteration
        current = self.start * self.start
        self.start += 1
        return current

iterator = Squares(3, 10)
print(next(iterator)) # 9
print(next(iterator)) # 16

Se eu usar inspect.isgenerator no iterator acima, o resultado será False.
Mas se você cria um iterator com base nos valores de uma lista, e esta lista já foi criada, aí não tem como economizar nada mesmo. Então a sua pergunta ""como ele consegue resgatar os itens sem eles estarem salvos na memória?"" parte de uma premissa errada, pois os valores estão sim na memória, e é assim que o iterator consegue recuperá-los.

Indo um pouco mais a fundo, fui dar uma olhada no código fonte do CPython (que é a implementação de referência da linguagem, e muito provavelmente a que você está usando). Consultei o código hoje (11/jun/2021):
O builtin iter está definido aqui:
static PyObject *
builtin_iter(PyObject *self, PyObject *const *args, Py_ssize_t nargs)
{
    PyObject *v;

    if (!_PyArg_CheckPositional(""iter"", nargs, 1, 2))
        return NULL;
    v = args[0];
    if (nargs == 1)
        return PyObject_GetIter(v);
    if (!PyCallable_Check(v)) {
        PyErr_SetString(PyExc_TypeError,
                        ""iter(v, w): v must be callable"");
        return NULL;
    }
    PyObject *sentinel = args[1];
    return PyCallIter_New(v, sentinel);
}

No caso, quando passamos apenas um argumento (por exemplo, uma lista), ele cai no if (nargs == 1) e chama PyObject_GetIter, que por sua vez é definido aqui:
PyObject *
PyObject_GetIter(PyObject *o)
{
    PyTypeObject *t = Py_TYPE(o);
    getiterfunc f;

    f = t->tp_iter;
    if (f == NULL) {
        if (PySequence_Check(o))
            return PySeqIter_New(o);
        return type_error(""'%.200s' object is not iterable"", o);
    }
    else {
        PyObject *res = (*f)(o);
        if (res != NULL && !PyIter_Check(res)) {
            PyErr_Format(PyExc_TypeError,
                         ""iter() returned non-iterator ""
                         ""of type '%.100s'"",
                         Py_TYPE(res)->tp_name);
            Py_DECREF(res);
            res = NULL;
        }
        return res;
    }
}

No caso, o é a lista, cujo Py_TYPE(o) é PyList_Type, que por sua vez é definido aqui:
PyTypeObject PyList_Type = {
    // um monte de linhas...
    list_iter,                                  /* tp_iter */
    // mais um monte de linhas...

Veja que no campo tp_iter o valor é a função list_iter. Como esta função não é nula, a função PyObject_GetIter cai no else e chama a função list_iter, passando a lista como argumento. E essa função (definida no mesmo arquivo que define o PyList_Type) faz o seguinte:
static PyObject *
list_iter(PyObject *seq)
{
    listiterobject *it;

    if (!PyList_Check(seq)) {
        PyErr_BadInternalCall();
        return NULL;
    }
    it = PyObject_GC_New(listiterobject, &PyListIter_Type);
    if (it == NULL)
        return NULL;
    it->it_index = 0;
    Py_INCREF(seq);
    it->it_seq = (PyListObject *)seq;
    _PyObject_GC_TRACK(it);
    return (PyObject *)it;
}

E é na linha it->it_seq = (PyListObject *)seq; que vemos que a lista (seq) é atribuída para o campo it_seq do iterator. Ou seja, o iterator mantém uma referência para a lista. Definição do listiterobject (também no mesmo arquivo que define o list_iter):
typedef struct {
    PyObject_HEAD
    Py_ssize_t it_index;
    PyListObject *it_seq; /* Set to NULL when iterator is exhausted */
} listiterobject;

E a implementação do método next (também no mesmo arquivo que define o list_iter):
static PyObject *
listiter_next(listiterobject *it)
{
    PyListObject *seq;
    PyObject *item;

    assert(it != NULL);
    seq = it->it_seq;
    if (seq == NULL)
        return NULL;
    assert(PyList_Check(seq));

    if (it->it_index < PyList_GET_SIZE(seq)) {
        item = PyList_GET_ITEM(seq, it->it_index);
        ++it->it_index;
        Py_INCREF(item);
        return item;
    }

    it->it_seq = NULL;
    Py_DECREF(seq);
    return NULL;
}

Que mostra que o iterator vai percorrendo os elementos da lista um a um.

Ou seja, o iterator guarda uma referência da lista, e é assim que ele consegue retornar os seus elementos. Como a lista já foi criada, não há a geração lazy (sob demanda), como ocorre com os generators (ou com o iterator Squares do exemplo acima), pois os valores já foram criados anteriormente quando você criou a lista.
","
            4
        ","
Você parece estar se confundindo um pouco ao falar de geradores e iteradores.
Você está certo em falar que geradores geram seus valores de forma dinâmica, isto, é, se tivermos a função geradora (editei para evitar um loop infinito):
def quadrados(n, max):
    while n < max:
        yield n**2
        n += 1

E você iterar sobre essa função geradora dessa forma:
for quadrado in quadrados(2, 10):
    print(quadrado)

A cada execução do for loop, o Python acessa o corpo da função quadrados,  vai até a linha com yield e retorna o valor para ser usado no seu for loop.
O importante de entender aqui é que, no momento entre o yield e o final do bloco dentro do for loop, a função quadrados está efetivamente pausada: o gerador economiza espaço em memória porque ao invés de ter que guardar todos os valores resultantes, ele guarda simplesmente o estado atual da função. A função quadrados está lá, ""congelada"", esperando o momento em que vai poder continuar a executar - o que acontece no momento em que o bloco dentro do for loop termina e você passa para a próxima execução.
Por outro lado, uma expressão geradora como (x**2 for x in range(50)) é apenas uma forma mais simples de escrever uma ""pseudo função geradora"" em uma linha. Se tentarmos iterar sobre essa expressão, Python lidará com os valores da mesma forma: gera um valor, ""congela"" o estado do gerador, trabalha com o valor, ""descongela"" o gerador e gera o próximo valor, ...
Quando você deu seu exemplo com it = iter([95, 27, 2348, 32, 27]), note que aqui não estamos falando de geradores, mas sim de iteradores, que são simplesmente objetos sobre os quais podemos iterar com um for loop. Nesse seu exemplo, a lista [95, 27, 2348, 32, 27] é sim criada e mantida em memória, pois ela é referenciada pelo próprio iterador, mesmo que você explicitamente não a tenha referenciado por uma variável como my_list = [95, 27, 2348, 32, 27]. Este seu exemplo não envolve geradores em nenhum momento, e portanto o espaço em memória é imediatamente ocupado pela lista no momento em que é declarada.
Ok, mas e se agora combinarmos as coisas utilizando uma expressão geradora como it = iter(x**2 for x in range(50))? Nesse caso, tanto os valores originais do seu range(50) quanto os valores resultantes da expressão x**2 for x in range(50) estão dentro de geradores. Então Python só precisa ir ""congelando"" e ""descongelando"" os geradores para conseguir iterar sobre eles, sem precisar alocar todos os elementos na memória.
","
            1
        ","['\npython', 'lista', 'iterator\n']"
513810,Como funciona o operador de atribuição de soma internamente? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Qual a diferença de i += 2 e i = i + 2?

                                (4 respostas)
                            

Fechada há 10 meses.



Estou criando uma classe e quero que seus objetos possam ser somados, utilizando o operador de soma ou o operador de atribuição de soma. Eu sei que para utilizar o operador de soma, devemos criar para a classe o método especial __add__, como no código abaixo:
class list(object):
    def __add__(self, value, /):
        # Implementação de list

[1, 2, 3] + [4, 5, 6] # Utilizando o operador de soma, o retorno será: [1, 2, 3, 4, 5, 6]

Mas e para o operador de atribuição de soma? Se utiliza esse mesmo método? Estou fazendo essa pergunta porque eu não consigo entender como esse operador trabalha internamente.
Eu até pensei na possibilidade do método __add__ retornar o próprio objeto modificado, mas parece que não é isso o que acontece. Se criarmos, por exemplo, uma lista e utilizarmos esse operador para somá-la com outra, o resultado será a mesma lista.
lista = [1, 2, 3]
id(lista) # 39196952
lista += [4, 5, 6]
id(lista) # 39196952  <- É a mesma lista. Houve uma modificação diretamente no objeto.

Mas se utilizarmos apenas o operador de soma, o resultado é uma nova lista (um novo objeto):
lista = [1, 2, 3]
id(lista)      # 39196952
lista_nova = lista + [4, 5, 6]
id(lista_nova) # 39241608  <- What!? Ele retornou um novo objeto com a soma realizada.

Claramente existe uma diferença na forma em que os dois operadores trabalham internamente. Dito isso, eu gostaria de saber:

Como o operador de atribuição de soma funciona internamente?
O método __add__ tem ligação com esse operador? Se não, qual método usar?

","
Os operadores + e += possuem implementações diferentes, quando você utiliza += (__iadd__) em um objeto do tipo list a lista original sofre mutação, portanto a referência de memória se mantém.
Já o operador + (__add__) gera um novo objeto do tipo lista e o retorna.
Você pode ler mais sobre isso nessa questão aqui.
","
            -1
        ",,,"['\npython', 'python-3.x', 'operadores\n']"
513744,Python - Duvida- transformar em Dataframe,"
bom dia!
Gente conectei usando python no banco Sql usando pymssql
import pymssql
conn = pymssql.connect(server='nomeservidor', user='usuario', password='senha', 
database='banco')
cursor = conn.cursor(as_dict=True)

cursor.execute('SELECT ROTAID,DESCRICAO FROM ROTAS')
for row in cursor:
    print(""%d,%s"" % (row['ROTAID'], row['DESCRICAO']))
conn.close()

porém ele me traz os dados nesse formato abaixo
2,ROTA 02
3,ROTA 03
4,ROTA 04
5,ROTA 05
6,ROTA 06
7,ROTA 07

Gostaria de transformar em um Dataframe em tabela como abaixo, teria como ?
ROTAID  DESCRICAO
2        ROTA 02
3        ROTA 03
4        ROTA 04
5        ROTA 05
6        ROTA 06
7        ROTA 07

agradeço desde já qualquer ajuda!
","
A biblioteca pandas possui um método específico para criar um dataframe a partir de uma query SQL. O método é o read_sql_query
df = pandas.read_sql_query(""SELECT ROTAID,DESCRICAO FROM ROTAS"", con=cursor)

O comando acima deve ser suficiente.
","
            0
        ","
import pandas as pd    

cursor.execute('SELECT ROTAID,DESCRICAO FROM ROTAS')
df = pd.DataFrame(columns=[""ROTAID"", ""DESCRICAO""])
for row in cursor:
   df = df.append({
                  ""ROTAID"": row['ROTAID'],
                  ""DESCRICAO"": row['DESCRICAO']
                  }, ignore_index=True)
conn.close()

","
            -3
        ","['\npython', 'pandas', 'dataframe\n']"
513644,"No if, quando o usuário coloca outro estado que não está especificado, ao invés de entrar no else, ele entra no if e continua o código normalmente [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



O código está assim:
est = input('Qual estado reside atualmente? ')  
if est == 'São Paulo' or 'SP' or 'sao paulo' or 'São paulo':  
    email = input('Digite o seu e-mail: ')   
    tel = input('Digite o seu celular pessoal: ')  
    tel2 = input('Digite seu telefone comercial ou residencial: ')  
else:  
    print('Não atendemos na sua localidade!')  
    exit()  

","
Poderia escrever as condições do if da mesma maneira que escreveu o primeiro condicional. Segue o exemplo:
if est == 'São Paulo' or  est == 'SP' or  est == 'sao paulo' or  est == 'São paulo': 

Estou destacando apenas o trecho do if, como poderia ser re-escrito de uma maneira que possa ser avaliado corretamente.
Em seu código como o condicional está escrito nesta forma:
if est == 'São Paulo' or 'SP':

Então a comparação do if avalia o valor literal 'SP'.
Como qualquer string diferente do valor vazio """" possui o valor de retorno true, o seu condicional sempre é avaliado como verdadeiro.
","
            -1
        ","
Olá, o problema está acontecendo na condição do if. É necessário que você adicione est ==  antes de todas as possibilidades:
if est == 'São Paulo' or est == 'SP' or est == 'sao paulo' or est == 'São paulo': 

Alterando desta forma irá entrar no if corretamente.
","
            -3
        ","['\npython', 'if', 'else\n']"
513614,"Excluir uma variável que o programa recebe no input.split("" "") no Python","
Estou trabalhando em um calculadora que precisa receber uma operação (como SUM, DIV, LOG10 etc.) e os operadores na mesma linha, ex:
SUM 2 4
Porém quando recebo LOG10 ou RAIZ o usuário só vai digitar um operador, exemplo:
RAIZ 36
O código funciona na parte de calcular e quando o usuário digita 3 strings no input, quando ele digita duas (como no caso da raiz) o programa gera erro.
A minha dificuldade é fazer com que no meu input exclua essa variável a mais, caso o usuário não a digite.
O código é:

operation, n1_str, n2_str = input().split("" "")
n1 = float(n1_str)
n2 = float(n2_str)

while((operation != ""RAZ"") | (operation != ""LOG10"")):

    if(operation == ""SUM""):
        SUM = n1 + n2
        print(""%.2f"" %(SUM))
    elif(operation == ""DIF""):
        DIF = n1 - n2
        print(""%.2f"" %(DIF))
    elif(operation == ""DIV""):
        DIV = n1 / n2
        print(DIV)
    elif(operation == ""MULT""):
        MULT = n1 * n2
        print(""%.2f"" %(MULT))
    elif(operation == ""POT""):
        POT = n1 ** n2
        print(""%.2f"" %(POT))
    break

while((operation == ""RAIZ"") | (operation == ""LOG10"")):
    n1 = int(input())

    if (operation == ""RAIZ""):
        RAIZ = n1 ** 0.5
        print(""%.2f"" %(RAIZ))
    else:
        LOG10 = math.log(n1, 10)
        print(""%.2f"" %(LOG10))
    break

","
Uma forma de solucionar o problema seria pegar o valor inteiro do input, dividi-lo em variáveis (utilizando o split("" "")) e armazenar as variáveis em uma lista:
list_input = input().split("" "")

Feito isso, nós já podemos definir o valor das variáveis operation e n1_str, tendo em vista que estas sempre serão os valores armazenados no índice 0 e 1 da nossa lista:
operation = list_input[0]
n1_str = list_input[1]
n1 = float(n1_str)

Agora, para verificarmos se haverá um terceiro valor basta medirmos o tamanho da lista. Caso ela tenha tamanho igual a 3, quer dizer que será necessário criarmos a variável n2_str:
if(len(list_input) == 3):
   n2_str = list_input[2] 
   n2 = float(n2_str)

E daí já estará verificando corretamente :)
Código completo
import math

list_input = input().split("" "")
operation = list_input[0]
n1_str = list_input[1] 
n1 = float(n1_str)

if(len(list_input) == 3): 
   n2_str = list_input[2] 
   n2 = float(n2_str)

while((operation != ""RAZ"") | (operation != ""LOG10"")):

    if(operation == ""SUM""):
        SUM = n1 + n2
        print(""%.2f"" %(SUM))
    elif(operation == ""DIF""):
        DIF = n1 - n2
        print(""%.2f"" %(DIF))
    elif(operation == ""DIV""):
        DIV = n1 / n2
        print(DIV)
    elif(operation == ""MULT""):
        MULT = n1 * n2
        print(""%.2f"" %(MULT))
    elif(operation == ""POT""):
        POT = n1 ** n2
        print(""%.2f"" %(POT))
    break

while((operation == ""RAZ"") | (operation == ""LOG10"")):

    if (operation == ""RAZ""):
        RAIZ = n1 ** 0.5 
        print(""%.2f"" %(RAIZ))
    else:
        LOG10 = math.log(n1, 10) 
        print(""%.2f"" %(LOG10))
    break


","
            -1
        ","
então, essa foi o meu jeito que arrumar isso ai:
dados = input().split("" "")
if len(dados) == 3:
  operation, n1, n2 = dados
  n1 = flaot(n1)
  n2 = float(n2)
elif len(dados) == 2:
  operation, n1 = dados
        n1 = float(n1)
operation = operation.upper()

A função upper() no operation foi só pra evitar que dê erro caso a pessoa esqueça de escrever em maiúsculo, espero que tenha ajudado, forte abraço
Pelo código que você fez, acho que você sabe oque a função len() faz, mas caso não saiba, len() analisa o tamanho de uma lista ou string. Nesse caso, caso o tamanho da lista fosse de 3, significa que foi colocado a operação, o número 1 e o número 2. Mas caso o tamanho da lista fosse de 2, significa que foi colocado apenas a operação e o primeiro número.
","
            -2
        ",['\npython\n']
513566,PYTHON - RPA - Aguardar janela PROCESSAMENTO para continuar processo de automação,"
Estou automatizando a geração de relatórios em um sistema web, SAP. Nesse processo utilizo python, com as bibliotecas: selenium e rpa.
Eu consegui encontrar os campos para inserir as informações, no entanto, após clicar em ""Executar"", aparece uma pequena janela no centro da tela, escrito ""Processando"". Enquanto esta janela estiver aberta é sinal que não finalizou a geração do relatório.
Eu gostaria de colocar em meu código algo como ""while ('processando'): pause...""
E após esta janela fechar, continuar o processso.
Abaixo tem uma parte do meu código, na qual alguns elementos da página web achei com a selenium, outros com rpa...
from selenium import webdriver
import rpa as r
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


# 1 - abrindo o navegador
navegador  = webdriver.Chrome()

# 2 - Navegando até o BO
navegador.get(""http://123456/BI"")

# 3 -Logando
WebDriverWait(navegador, 10).until(EC.frame_to_be_available_and_switch_to_it((By.NAME,'servletframe')))
WebDriverWait(navegador, 10).until(EC.element_to_be_clickable((By.ID, 'logon:USERNAME'))).send_keys('meuusuario')
navegador.find_element_by_id('logon:PASSWORD').send_keys(""123"")
WebDriverWait(navegador, 10).until(EC.element_to_be_clickable((By.ID, 'logon:logonButton'))).click()

#usando rpa para inserir os dados para executar o relatório...

r.init(visual_automation = True,chrome_browser = False)

r.type('assets/CodigoEmpresa.png', '123')
r.click('assets/Executar.png')

#aqui entraria a parte que não sei fazer:
#encontrei essa função present, mas não sei se é assim que usa. 
#Não achei um exemplo no github da rpa..
while (present('Processando.png')):
 pause

#continuando código

Essa é a janela que abre enquanto o relatório é gerado:

E abaixo é uma parte do código que encontrei com F12 no navegador:
<table role=""dialog"" aria-labelledby=""ariaLabelledBy_waitDlg"" oncontextmenu=""_CW.eventCancelBubble(event);return false"" border=""0"" cellspacing=""0"" cellpadding=""0"" id=""waitDlg"" style=""display: block; padding: 0px; visibility: visible; position: absolute; top: 179px; left: 558px; width: 250px; height: 150px; z-index: 1005;""><tbody><tr><td style=""width:250px;height:150px;"" class=""dialogbox"" id=""td_dialog_waitDlg"" onresize=""_CW.DialogBoxWidget_resizeIframeCB('waitDlg',this)"" valign=""top""><table class=""dlgBox2"" width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0""><tbody><tr><td height=""0"" valign=""top""><table style=""height:26"" class=""dlgTitle"" width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0""><tbody><tr valign=""top"" style=""height:26px""><td onselectstart=""return false"" ondragstart=""return false"" onmousedown=""_CW.DialogBoxWidget_down(event,'waitDlg',this,false);return false;"" style=""cursor:move;padding-left:10px;"" width=""100%"" valign=""middle"" align=""left""><nobr><span id=""ariaLabelledBy_waitDlg"" class=""titlezone"">Executando consulta</span></nobr></td></tr></tbody></table>

O XPATH que seria uma opção: //*[@id=""waitDlg""], também não localiza.
Eu gostaria de verificar com rpa a imagem 
Enquanto existir, fica parado aguardando, após desaparecer é que finalizou a confecção do relatório.
","
Acabei de tentar o óbvio e consegui.
Para verificar se o popup ainda esta na tela, inseri o comando:
while(r.present('assets/Executando.png')):
r.wait(5)
Acredito que podera ter soluções melhores! Mas também, servirá para ajudar alguém que precise.
Se caso alguém precisar localizar o id de um elemento utilize um programa:
Accessibility Insights For Windows
Ao clicar em qualquer objeto em sua tela, é exibido o id de automação se tiver, name, class e demais propriedades caso tenha.
","
            1
        ",,,['\npython\n']
513551,Erro no INSERT INTO mysql e python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Quando eu tento fazer um INSERT INTO no meu código SQL, ele dá o mesmo erro
mysql.connector.errors.DataError: 1292 (22007): Incorrect date value: '1998' for column 'validade' at row 1

Este é o meu comando do CREATE TABLE
CREATE TABLE IF NOT EXISTS produtos(
        cod INT NOT NULL,
        nome_produto VARCHAR(45) NOT NULL,
        marca VARCHAR(45) NOT NULL,
        validade DATE NOT NULL,
        qtd_estoque INT NOT NULL,
        primary key (cod)

E este é o meu INSERT INTO
INSERT INTO produtos 
    (nome_produto, marca, preco, validade, qtd_estoque)
    values
    ('Brahma Chopp 269ml', 'Brahma', 2.39, 2021-08-15, 600),
    ('Brahma Chopp 350ml', 'Brahma', 2.59, 2021-08-15, 600),
    ('Brahma Extra Lager 350ml', 'Brahma', 2.79, 2021-08-15, 500),
    ('Skol 269ml', 'Skol', 2.29, 2021-08-15, 500),
    ('Skol 473ml', 'Skol', 3.99, 2021-08-15, 500),
    ('Skol Puro Malte 350ml', 'Skol', 2.59, 2021-08-15, 400),
    ('Budweiser 350ml', 'Budweiser', 3.29, 2021-11-11, 650),
    ('Budweiser 269ml', 'Budweiser', 2.89, 2021-11-11, 650),
    ('Budweiser 430ml', 'Budweiser', 3.99, 2021-11-11, 650),
    ('Stela Artrois 330ml','Stela Artrois', 4.49, 2021-11-11, 300),
    ('Becks 330ml','Becks', 5.99, 2021-11-11, 300),
    ('Corona Extra 330ml', 'Corona', 5.99, 2021-11-11, 350),
    ('Coronita 210ml', 'Corona', 3.99, 2021-11-11, 250),
    ('Colorado Cauim 600ml', 'Colorado', 12.99, 2021-11-11, 200),
    ('Colorado Vixnu 600ml', 'Colorado', 15.99, 2021-11-11, 200),
    ('Colorado Demoiselle 600ml', 'Colorado', 12.99, 2021-11-11, 200),
    ('Vodka Smirnoff 998ml', 'Smirnoff', 38.99, 2022-11-11, 700),
    ('Vodka Orloff 1L', 'Orloff', 26.90, 2022-11-11, 400),
    ('Vodka Absolute Elyx 750ml', 'Absolute', 169.99, 2022-11-11, 300),
    ('Vodka Absolute Original 750ml', 'Absolute', 80.90, 2022-11-11, 450),
    
    ('Whisky White Horse 1L', 'White Horse', 74.90, 2022-11-11, 300),
    ('Whisky Red Label 1L', 'Jonhie Walker', 98.90, 2022-11-11, 300),
    ('Whisky Green Label 1L', 'Jonhie Walker', 98.90, 2022-11-11, 300),

    ('Cachaça do Barril 500ml', 'Do Barril', 3.99, 2022-11-11, 200),
    ('Cachaça 51 1L', '51', 9.99, 2022-11-11, 200),

    ('Gin Tanqueray 750ml', 'Tanqueray', 126.90, 2022-11-11, 700),
    ('Gin Bombay 750ml', 'Bombay Saphire', 100.90, 2022-11-11, 700),
    ('Gin Gordons London Dry 700ml', 'Gordons', 85.90, 2022-11-11, 400),

    ('Catuaba Selvagem 1L', 'Selvagem', 13.90, 2023-11-11, 400),
    ('Coquetel Ousadia 500ml', 'Ousadia', 4.99, 2023-11-11, 400),
    ('Corote 500ml', 'Missiato', 3.99, 2023-11-11, 600),

    ('Licor Campari 900ml', 'Campari', 37.90, 2023-11-11, 400),
    ('Aperol 750ml', 'Campari', 49.90, 2023-11-11, 400),

    ('Tequila Jose Cuervo Gold Edition', 'Jose Cuervo', 129.99, 2021-11-11, 400),

    ('Vinho Tinto Cantina da Serra 800ml', 'Cantina da Serra', 17.50, 2023-11-11, 200),
    ('Vinho Tinto Pérgola 1L', 'Pérgola', 22.99, 2023-11-11, 200),

    ('Red Bull Energy Drink 250ml', 'Red Bull', 6.88, 2022-11-11, 800),
    ('Red Bull Tropical Energy Drink 250ml', 'Red Bull', 8.99, 2022-11-11, 800);

","
Você precisa colocar aspas na data, ele trata o número que você está enviando como uma subtração. Ex:
INSERT INTO produtos 
    (nome_produto, marca, preco, validade, qtd_estoque)
    values
    ('Brahma Chopp 269ml', 'Brahma', 2.39, '2021-08-15', 600);

","
            2
        ",,,"['\nmysql', 'python', 'sql', 'banco-de-dados', 'sql-insert\n']"
513546,Transformar uma coluna em várias outras colunas num data frame pandas [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Bom dia! Preciso de uma ajuda... já tentei vários comandos mas estou achando que estou indo por um caminho longo. Tenho este dataframe:

E preciso transforma neste:

","
Primeiro, adicione uma coluna com um valor constante, depois utilize pivot_table (precisamos da coluna com valor constante porque para pivotar é preciso que haja uma coluna com os valores a ser preenchidos na tabela resultante).
Exemplo:
df = pd.DataFrame({
    ""Nome Fundo"": ['FUNDO AAA', 'FUNDO AAA', 'FUNDO AAA', 'FUNDO BBB', 'FUNDO CCC'], 
    'data competencia': ['02-2021', '03-2021', '04-2021', '03-2021', '01-2021']
})

df[""constante""] = 1
resultado = df.pivot_table(
    values=""constante"", 
    index=""Nome Fundo"", 
    columns=""data competencia"",
)

print(resultado)

output (veja que pivot_table preenche as combinações inexistentes da coluna constante com NaN):
data competencia  01-2021  02-2021  03-2021  04-2021
Nome Fundo                                          
FUNDO AAA             NaN      1.0      1.0      1.0
FUNDO BBB             NaN      NaN      1.0      NaN
FUNDO CCC             1.0      NaN      NaN      NaN

","
            0
        ",,,"['\npython', 'pandas\n']"
513538,Consigo fazer em Python um código melhor que este? Sou iniciante na linguagem e gostaria de saber se estou no caminho certo,"
Objetivo desse programa é receber o raio do usuário e calcular a área do circulo.
Sou iniciante em Pyhton, então gostaria de saber se esse é o código mais eficiente que poderia fazer para resolver o problema, ou se há outra maneira mais simples (desde que não seja uma função pronta do Python para calcular a area do circulo rs). Faço essa pergunta, pois saberia se estou no caminho certo ou se posso melhorá-lo, torná-lo mais simples.
from math import pi


def area_circulo(raio):
     return pi * float(raio) ** 2


def nao_numerico(raio):
    print('Digite apenas números!')


def maior_que_zero():
    print('Raio precisa ser maior que 0!')


def se_numero(n):
    try:
        float(n)
    except ValueError:
        return False
return True


if __name__ == '__main__':
    raio = input('Informe o raio: ')

if se_numero(raio):
    if float(raio) < 1:
        maior_que_zero()
    else:
        area = area_circulo(raio)
        print('Area do circulo =', area)
else:
    nao_numerico(raio)

","
Sim, dá pra ser mais simples.
Por exemplo, você converte o raio para float várias vezes: primeiro para ver se é número mesmo, depois para ver se é menor que 1, e depois para calcular a área. Em vez disso, por que não converter apenas uma vez?
from math import pi

try:
    # lê e já tenta converter para número
    raio = float(input('Informe o raio: '))

    # se chegou aqui, é porque a conversão deu certo
    if raio < 1:
        print('Raio precisa ser maior que 0!') # veja no final considerações sobre esta mensagem
    else:
        print(f'Área do círculo = {pi * raio ** 2}')
except ValueError: # se não digitou número, cai aqui no except
    print('Digite apenas números!')

Ou seja, ao ler o número, já tente converter para float. Se der certo, você continua. Se der errado, ele cai no except e você imprime a mensagem de erro.
Também não coloquei a área em uma variável, pois se você só quer imprimir o valor e não vai fazer mais nada com ele, nem precisa de uma variável (basta imprimir o resultado da conta diretamente).
Em um código simples como esse, criar esse monte de funções só está complicando à toa. Mas claro, se quiser muito usar funções para tudo, basta chamá-las nos respectivos lugares. Eu só tiraria a função que verifica se é número, pois me parece desnecessário (a própria tentativa de conversão já indicará se deu certo ou não):
from math import pi

def area_circulo(raio):
     return pi * raio ** 2

def nao_numerico(): # se o raio não é usado, não passe ele como parâmetro
    print('Digite apenas números!')

def maior_que_zero():
    print('Raio precisa ser maior que 0!')

try:
    raio = float(input('Informe o raio: '))
    if raio < 1:
        maior_que_zero()
    else:
        print(f'Área do círculo = {area_circulo(raio)}')
except ValueError:
    nao_numerico()

Veja que a função nao_numerico não está usando o raio para nada, então não tem motivo para passá-lo como parâmetro.
E tem outra coisa estranha: você diz que o raio deve ser maior que zero, mas testa se o valor é menor que 1. Não deveria ser if raio <= 0?
","
            0
        ",,,"['\npython', 'revisão-de-código\n']"
513533,Como impedir que uma classe seja instanciada em Python?,"
Eu tenho uma classe mãe e quero herdá-la para uma classe filha. Porém a classe mãe não pode ser instanciada, apenas herdada. Em outras palavras, a classe mãe deve ser abstrata.
Apesar da POO do Python não ter suporte para abstração (ainda), existe um módulo da biblioteca padrão chamado abc — que possui a classe ABC e a função abstractmethod, para ser usado como um decorator para os métodos de classes que herdam de ABC.
Utilizando o decorador abstractmethod em um dos métodos da classe, a mesma se torna abstrata. Porém, minha classe mãe não deve ter métodos abstratos. Ela apenas deve ser abstrata.
O problema é que se eu não declarar algum dos métodos como abstrato, ela ainda pode ser instanciada. Veja o código abaixo que exemplifica o que estou dizendo:
class Mother(ABC):
    def method(self): pass

class AbstractMother(ABC):
    @abstractmethod        # Não quero que esse método seja abstrato!
    def method(self): pass

obj = Mother()          # Compila, damn it...
obj2 = AbstractMother() # Não compila (como esperado)

Uma possível solução então para o problema seria lançar uma exceção no método __new__ ou no __init__, para que desse erro sempre que alguém tentasse instanciar diretamente da classe.
class Mother():
    def __init__(self): raise TypeError
    def method(self): pass

class Daughter(Mother):
    def __init__(self): pass

Daughter() # Compila
Mother()   # Não compilar, finalmente!

Porém essa seria uma solução ""porca"", já que todas as classes que herdarem serão obrigadas a sobrescreverem o método __new__ ou o construtor, como no código acima.
Dito isso, minha dúvida é: em Python 3, como impedir que uma classe seja instanciada, sem obrigar que a classe filha sobrescreva algum método?
","
Se por algum motivo não quiser colocar uma comparação simples no __init__ como está na resposta do @jfaccioni , dá para criar um método __init_subclass__ na classe de base que sobre-escreva um método abstrato criado só para impedir o instanciamento. (e usar os mecanismos dos abcs)
O __init_subclass__ é um método de classe especial que é chamado sempre que uma subclasse é criada.
import abc
class Base(abc.ABC):
    
    @abc.abstractmethod
    def _sentinel(self): pass
    
    def __init_subclass__(cls, *args, **kw):
        # Injeta um método só para sobre-escrever o abstract-method:
        cls._sentinel = lambda self: None

class B(Base): pass

No modo interativo:
In [10]: b = B()                                                                                                                                                                             

In [11]: a = Base()                                                                                                                                                                          
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-11-befb5e64d15f> in <module>
----> 1 a = Base()

TypeError: Can't instantiate abstract class Base with abstract method _sentinel


","
            5
        ","
Se entendi direito, o que você procura é definir a funcionalidade do método __init__ (ou algum outro método qualquer) na classe Mother, mas quer que apenas a classe Daughter possa ser de fato instanciada. Ou seja, ""aproveitar"" o código de Mother para as subclasses, mas deixá-la como uma classe ""abstrata soft"".
Uma forma de fazer isso é checar a própria classe do objeto sendo criado dentro do __init__ e apenas produzir o erro caso a classe seja Mother:
class Mother:
    def __init__(self, a, b, c):
        if self.__class__ is Mother:
            raise TypeError(""Mother class cannot be instantiated"")
        self.a = a
        self.b = b
        self.c = c

class Daughter(Mother):
    pass

Daughter(1, 2, 3)  # funciona
Mother(1, 2, 3)  # produz um TypeError

Embora de um ponto de vista mais teórico, eu concorde com o comentário de que não faz muito sentido ter uma classe que é tratada como se possuísse um método abstrato, mas que está definido dentro dela.
","
            3
        ","['\npython', 'python-3.x', 'classes-abstratas\n']"
513471,Como encontrar um determinado valor em uma linha que contém uma palavra-chave - python,"
Como eu poderia achar um valor em uma determinada linha que contenha uma palavra chave
Exemplo (Esse é o arquivo Espelho)

 COTIA CENTRO

EXTRATO         05978754
ITEM 1 ITEM 2 ITEM 3
OPR: 082545444

Eu gostaria de saber como encontrar esse valor do que está a frente do extrato , Exemplo
Se o número tal estiver na mesma linha do Extrato ele retorna verdadeiro , se não estiver retorna falso
Esse é meu código
import re
import json
import os
import os.path
from time import sleep

with open('P:/portal/cupons/API/valores_api.json', 'r') as jsonFileLeitura:
    dadosJson = json.load(jsonFileLeitura)
    valor = dadosJson['valor']


def procura_cupom():
    txt = open(""P:/portal/cupons/Arquivos_Espelho/arqEspelho.txt"", ""r"").read()

    # usando finditer ele retorna a posição da palavra

    # Localiza o inicio do cupom
    x = re.finditer(r"".*COTIA CENTRO"", txt)
    # Localiza o fim do cupom
    z = re.finditer(r""OPR.*"", txt)

    espelhos = list(zip(x, z))

    # Testando o valor específico para cada espelho
    for espelho in espelhos:

        txt_espelho = txt[espelho[0].span()[0]: espelho[1].span()[1] + 1]

        if ""{}"".format(valor) in txt_espelho:
            if os.path.isfile(""P:/portal/cupons/Arquivos_Espelho/espelhado.txt""):
                open(""P:/portal/cupons/Arquivos_Espelho/espelhado.txt"", 'w').close()
            sleep(1)
            # Escreve o Cupom caso encontrado, em um novo arquivo de texto
            open(""P:/portal/cupons/Arquivos_Espelho/espelhado.txt"", ""w+"").write(txt_espelho)

        else:
            pass


if True:
    procura_cupom()

Obrigado!
","
Se o arquivo estiver apenas com a linha neste formato: ""EXTRATO 05978754""
É só ler o arquivo linha a linha:
import re

for linha in open(""P:/portal/cupons/Arquivos_Espelho/arqEspelho.txt"", ""r"").readLines():
    if ""EXTRATO"" in linha.split():
       if re.match(r'^([\s\d]+)$', linha):
          return True
   

","
            0
        ",,,['\npython\n']
513466,Como detectar Start codon e Stop codon em uma sequência de nucleotídeos utilizando Python?,"
Estou tentando resolver um exercício no qual foi solicitado uma função com um start e um stop, onde o start deve ocorrer quando encontrar ""ATG"" e o stop quando encontrar o ""TAA"", ""TAG"", ""TGA"".
Com ajuda dos comentários, consegui ajeitar um pouco o código, porém o stop está limitado a somente ao que eu colocar no s.find(). Gostaria de ajuda para fazer ele procurar por um dos três stop codons proposto no exercício.
Segue o enunciado do exercício que gerou a pergunta:

Faça uma função contacodon em Python que receba uma sequência de
letras representando nucleotídeos (e.g., A, C, G, T), verifique se a
sequência é válida (i.e. contém somente As, Cs, Gs, e Ts) e retorne
com o número de ocorrências de cada codon contando a partir do start
codon ""ATG"" até um dos stop codons, ""TAA"", ""TAG"", ""TGA""

Exemplo de entrada:
contacodon(""AGCGATCGAGATGAGCATCGCATCGCGGACTACCGCGCGCGCGCGCGGGAGATGAGCATCGACGACTCGACTAG"")

Saída para a entrada acima:
{
'ATG': 1,
'AGC': 1,
'ATC': 1,
'GCA': 1,
'TCG': 1,
'CGG': 1,
'ACT': 1,
'ACC': 1,
'GCG': 2,
'CGC': 2,
'GGG': 1,
'AGA': 1,
'TGA': 1
} 

Meu código:
def verificar (s):
    s = s.upper()
    for ent in s:
        if not ent in ""ACGT"":
                return False
    return True
   
while True:
    s = str(input(""Entre com a seq: \n"")).upper()
    if verificar(s):
        break
    print(""Seq inválida"")
  
count={}
for i in range(s.find('ATG'),s.rfind('TAA')+1,3):
    codon = s[i:i+3]
    if codon in count:
        count[codon] += 1
    else:
        count[codon] = 1
print('\n', count, '\n',)

","
O código funciona, de modo que irá realizar a contagem a partir do códon ATG até o TAA.
O problema é que existem três stop codons diferentes, e o programa só reconhece o TAA. Veja, o problema está onde você cria o intervalo para as iterações:

range(s.find('ATG'), s.find('TAA') + 1, 3)


Você está basicamente criando um intervalo, que incrementa de três em três, do índice da primeira ocorrência da substring ""ATG"" até o índice da primeira ocorrência da substring ""TAA"".
Vejo dois problemas ao especificar um índice final tal como resultado de s.find('TAA'):

Você corre o risco de criar um range que percorre sobre uma sequência com número inválido de códons (pode haver apenas 5 caracteres entre ATG e TAA, por exemplo).
Você não reconhece os outros dois códons de finalização, ""TAG"" e  ""TGA"".

Para corrigir esses dois problemas, simplesmente não defina um limite superior no range. Simplesmente itere até o comprimento total da string.
Nesse sentido, você pode fazer a verificação do stop codon dentro do próprio laço de repetição, de modo a utilizar a declaração break para interromper as repetições se tiver encontrado um códon de finalização.
Mais ou menos assim:
# Lista de stop codons:
stops = [""TAA"", ""TAG"", ""TGA""]

count = {}
for i in range(s.find('ATG'), len(s) + 1, 3):
    codon = s[i: i + 3]
    if codon in count:
        count[codon] += 1
    else:
        count[codon] = 1

    # Se tiver encontrado um stop codon, pare de iterar:
    if codon in stops:
        break
print(count)

Omiti, por brevidade, o restante do código. Veja funcionando no Ideone.
Vale lembrar que, embora funcione com um dicionário comum, o Python oferece outras abordagens melhores para realizar a contagem, tal como a classe Counter, disponível no módulo collections. Veja:
from collections import Counter

stops = [""TAA"", ""TAG"", ""TGA""]
count = Counter()
for i in range(seq.find('ATG'), len(seq) + 1, 3):
    codon = seq[i: i + 3]
    count.update([codon])
    if codon in stops:
        break

print(dict(count))

Veja funcionando no Ideone.
Uma outra alternativa é utilizar o defaultdict(int). Embora menos poderoso que o Counter, já torna implícita a inicialização de valores 0 no dicionário, o que é feito manualmente no primeiro exemplo de código. Veja mais sobre eles no SOen.
Vale observar, por fim, que os dois códigos apresentados nesta resposta imprimirão o resultado da contagem mesmo que um stop codon não seja encontrado. Ademais, se o último ""códon"" dessa string não terminada tiver um ou dois caracteres (e não três, conforme esperado), este também será contabilizado. Para prevenir isso, você pode implementar algum tipo de verificação. Um exemplo é utilizar uma expressão regular, tal como excelentemente demonstrado pela resposta do Augusto Vasques, de modo a invalidar sequências que fogem do padrão esperado. Deixo um outro exemplo no Ideone.
","
            3
        ","
Com o auxilio do módulo nativo re é possível criar uma expressão regular que valide a sua sequencia de nucleotídeos e que separe a porção da sequencia contendo os códons. Com um objeto da classe collection.Counter faça a contagem dos nucleotídeos.
import re
from collections import Counter

pattern = r""^[ACGT]*(?<=ATG)(?P<codons>([ACGT]{3})+?)(?=TAA|TAG|TGA)[ACGT]*$""

#Define a função contacodon(entrada). O parâmetro regex é inicializado na primeira chamada da função e não deve ser utilizado.
def contacodon(entrada, regex= re.compile(pattern)):
  #Verifica se houver correspondência...
  if m:= re.match(regex, s):
      #se houver correspondência separa o grupo contendo os códons e retorna o dicionário contendo a contagem dos códons.
      cdns = m[""codons""]                    
      return dict(Counter([cdns[i:i+3] for i in range(0, len(cdns), 3)]))
  else:
      #se não houver correspondência retorna um dicionário vazio.
      return dict()

#s = input(""Entre com a seq: \n"").upper()
s = ""GCGATCGAGATGAGCATCGCATCGCGGACTACCGCGCGCGCGCGCGGGAGATGAGCATCGACGACTCGACTAG""

print(contacodon(s))

Teste o código no Repl.it
A expressão regular ^[ACGT]*(?<=ATG)(?P<codons>([ACGT]{3})+?)(?=TAA|TAG|TGA)[ACGT]*$ pode ser entendida como:

^[ACGT]* a string deve iniciar com zero ou mais caracteres entre A,C,G ou T.
(?<=ATG) o grupo(?P<codons>([ACGT]{3})+?) só será capturado se for precedido do start códon ATG.
(?P<codons>([ACGT]{3})+?) define o grupo de captura codons que é composto uma ou mais grupos de três caracteres entre A,C,G ou T.
(?=TAA|TAG|TGA) o grupo(?P<codons>([ACGT]{3})+?) só será capturado se for sucedido por uma dos stop códons TAA, TAG ou TGA.
[ACGT]*$ a string deve terminar com zero ou mais caracteres entre A,C,G ou T.

EDIT
Como informado nos comentários, pelo Luiz Felipe, o mesmo comportamento também pode ser obtido  da função contacodon() usando o seguinte padrão de expressão regular:
pattern = r""^[ACGT]*ATG(?P<codons>(?:[ACGT]{3})+)(TAA|TAG|TGA)[ACGT]*$""

onde:

^[ACGT]* a string deve iniciar com zero ou mais caracteres entre A,C,G ou T.
ATG corresponda ao start códon ATG.
(?P<codons>([ACGT]{3})+?) define o grupo de captura codons que é composto uma ou mais grupos de três caracteres entre A,C,G ou T.
(TAA|TAG|TGA) corresponda ao stop códons TAA, TAG ou TGA.
[ACGT]*$ a string deve terminar com zero ou mais caracteres entre A,C,G ou T.

EDIT
Outra sugestão relevante de padrão informada nos comentários, pelo HKotsubo:
pattern = ""^[ACGT]*?ATG(?P<codons>([ACGT]{3})+?)T(?:A[AG]|GA)[ACGT]*$""


^[ACGT]*? a string deve iniciar com zero ou mais caracteres entre A,C,G ou T.
ATG corresponda ao start códon ATG.
(?P<codons>([ACGT]{3})+?) define o grupo de captura codons que é composto uma ou mais grupos de três caracteres entre A,C,G ou T.
T(?:A[AG]|GA) corresponda ao stop códons TAA, TAG ou TGA.
[ACGT]*$ a string deve terminar com zero ou mais caracteres entre A,C,G ou T.

","
            3
        ","['\npython', 'string', 'funções\n']"
513424,Em Python existe operação ternária?,"
Costumo ver várias linguagens de programações onde uma operação ternária é quase sempre idêntica.
(x % 2 == 0) ? ""par"" : ""impar""

Porém, quando fui tentar fazer isso no Python, deu erro:
(x % 2 == 0) ? ""par"" : ""impar""
             ^
SyntaxError: invalid syntax

se assim não funciona, então como seria uma operação ternária em Python?
","
Existe sim, no Python é conhecido como Expressão Condicional.
<expressao1> if <condicao> else <expressao2>

Primeiro, a condição é avaliada (ao invés de expressao1), se a condição for verdadeira, expressao1 é avaliada e seu valor é retornado; caso contrário, expressao2 é avaliada e seu valor retornado.
Com base no teu exemplo, o código fica assim:
x = 10
print (""par"" if x % 2 == 0 else ""impar"")


Uma alternativa com operadores booleanos and e or:
<condicao> and <expressao1> or <expressao2>

No entanto, não funciona do mesmo modo que uma Expressão Condicional, se a condição for verdadeira, expressao1 é avaliada e seu valor retornado; se expressao1 for falso, expressao2 é avaliada e seu valor retornado.
Com base no teu exemplo:
x = 10
print (x % 2 == 0 and ""par"" or ""impar"")


De acordo com o PEP 308, Conditional Expressions, a razão por não ter sido implementado a sintaxe <condicao> ? <expressao1> : <expressao2> usado em muitas linguagens derivadas do C é:

(Em tradução livre)
Eric Raymond até implementou isto.
O BDFL rejeitou isto por várias razões: o dois-pontos já tem muitos usos em Python (embora, na verdade, não seria ambíguo, porque o ponto de
interrogação exige o dois-pontos correspondente); para as pessoas que não
usam linguagens derivadas do C, é difícil de entender.

Obs: BDFL (Benevolent Dictator For Life): Guido van Rossum, criador do Python.
","
            41
        ","
Em Python o if pode ser usado tanto como um statement, como um operador em contextos diferentes. Como operador dá para fazer assim:
print(1 if True else 2)

No seu exemplo:
x = randint(0,9)
print (""par"" if x % 2 == 0 else ""impar"")

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
Ele pega o primeiro valor se a condição for verdadeira, se a condição for falsa ele pega o que está no else. Genericamente falando a expressão condicional (não gosto do termo ternário) fica assim:
valorVerdadeito if condicao else valorFalso

","
            11
        ","['\npython', 'operadores', 'condição\n']"
513354,CEP para Latitude e Longitude Python,"
Gostaria de rodar um CSV que contem mais de 100 CEPs e me retornasse, em um outro CSV, Latitude e Longitude.
Já tenho a base para transformar o CEP. Mas não estou conseguindo ler um CSV linha por linha e retornar latitude e longitude.
import pycep_correios
from geopy.geocoders import Nominatim

endereco = pycep_correios.get_address_from_cep('01001010')

geolocator = Nominatim(user_agent=""test_app"")
location = geolocator.geocode(endereco['logradouro'] + "", "" + endereco['cidade'] + "" - "" + endereco['bairro'])

print(location.latitude, location.longitude)

","
Assumindo que seu arquivo .csv contém uma lista simples de ceps. Ex:
cep
01001010
01017000


Faça a leitura do arquivo .csv utilizando o método open() do Python, e armazene os ceps em uma lista:
import csv    
lista_ceps = []   
with open('ceps.csv') as file:
    next(file)  # Pula o cabeçalho, caso exista
    for row in csv.reader(file):
        lista_ceps.append(row[0])


Transforme o seu código para conversão de cep em uma função:
import pycep_correios
from geopy.geocoders import Nominatim

def extrai_lat_long(cep):
    endereco = pycep_correios.get_address_from_cep(cep)

    geolocator = Nominatim(user_agent=""test_app"")
    location = geolocator.geocode(endereco['logradouro'] + "", "" + endereco['cidade'] + "" - "" + endereco['bairro'])

    return(location.latitude, location.longitude)


Crie um novo .csv com o CEP, latitude e longitude, usando o mesmo método open(), mas dessa vez com o arquivo de saída, e com o parâmetro 'w' para indicar que a operação é de escrita (write):
 with open('ceps_lat_long.csv', 'w') as file:
     cabecalho = ['cep', 'latitude', 'longitude']
     writer = csv.DictWriter(file, fieldnames=cabecalho)

     writer.writeheader() # Escreve o cabeçalho
     for cep in lista_ceps:
         latitude, longitude = extrai_lat_long(cep)
         writer.writerow({'cep': cep, 'latitude': latitude, 'longitude': longitude})



O arquivo ceps_lat_long.csv ficará assim:
cep,latitude,longitude
01001010,-23.5512564,-46.6338028
01017000,-23.5453334,-46.6206464

Espero que tenha ficado claro!
","
            5
        ",,,['\npython\n']
513348,Qual o padrão para nomeação de módulos (fontes) em Python?,"
Em Java temos o costume de criar fontes com a primeira letra maiúscula por exemplo: Carrinho.java e DetalheCompraFragment.java.
Porém até o momento não encontrei um padrão para nomeação de módulos em Python.
Recentemente vi arquivos com esses formatos: detalhe_compra.py, detalhecompra.py, DetalheCompra.py, DETALHECOMPRA.py.
Isto posto, fica a dúvida: No Python existe um padrão ou o desenvolvedor escolhe como irá nomear?
","
Sim. O Python possui vários guias de estilo denominados PEP (Python Enhancement Proposals). Em particular, o PEP 8 traz detalhes sobre como nomear corretamente cada tipo de identificador.
Lê-se:

Modules should have short, all-lowercase names. Underscores can be used in the module name if it improves readability.

Ou, em tradução livre:

Módulos devem ter nome curtos e em minúsculas. Underscores (_) podem ser usados no nome do módulo se isso melhorar a legibilidade.

Portanto, detalhecompra.py e detalhe_compra.py são os dois nomes permitidos pelo Guia de Estilos.
Classes
Para classes, no entanto, a regra é diferente. O mesmo documento traz o seguinte:

Class names should normally use the CapWords convention.
The naming convention for functions may be used instead in cases where the interface is documented and used primarily as a callable.

Ou, em tradução livre:

Nomes de classes devem, normalmente, usar a convenção CapWords (ou PascalCase).
A convenção de nomenclatura para funções pode ser usada em casos nos quais a interface é documentada e utilizada principalmente como um callable.

Então é comum ter um arquivo detalhe_compra.py que contém a classe DetalheCompra. A importação fica assim:
from detalhe_compra import DetalheCompra

Isso, é claro, também acontece nas stdlibs:
from typing import NewType

","
            9
        ",,,"['\npython', 'design-pattern\n']"
513337,Como repetir um trecho de código determinadas vezes? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Como repetir um trecho de código na quantidade de vezes que o usuário informar?
Isso foi o que tentei:
#Só um exemplo

import random    

gerar= int(input(""digite quantos números deseja gerar,o limite máximo é 20""))

   c=(""+55119"")

   while        
    print(c,(random.randrange(1,100000001)))

","
Você começou bem, utilizando um loop while. Faltou adicionar a condição para repetir o código somente a quantidade informada na variável gerar.
Existem algumas formas de fazer isso. A forma que vou mostrar é subtraindo 1 a cada repetição, e parar o laço até que chegue em zero. Por exemplo:
>>> quantidade_de_repeticoes = 3
>>> while quantidade_de_repeticoes > 0:
...   print(""oi"")
...   quantidade_de_repeticoes -= 1
... 
oi
oi
oi

No seu caso, ficaria parecido com:
import random    

gerar = int(input(""digite quantos números deseja gerar,o limite máximo é 20""))

c=(""+55119"")

while gerar != 0:     
    print(c, (random.randrange(1,100000001)))
    gerar -= 1

","
            3
        ","
O Python tem dois comandos de loop para repetição de suites: for e while.

LOOP FOR
Para o laço for, será necessário o uso da função range (que recebe como parâmetro inicial a quantidade de vezes que irá repetir um suite de código):
repeticoes = 5
for contador in range(repeticoes):
    print(contador)

Este suite irá imprimir a saída abaixo no console:
0
1
2
3
4


LOOP WHILE
Para o laço while será necessária a criação de uma variável que será incrementada a cada repetição do suite.
Enquanto a condição avaliada resultar em True, o suite será repetido:
contador = 0
repeticoes = 5

while contador < repeticoes:
    print(contador)
    contador += 1  # a cada repetição, soma 1 no valor da variável contador

Este suite irá imprimir a saída abaixo no console:
0
1
2
3
4


UTILIZANDO SEU EXEMPLO
Com base no seu exemplo, seria possível as seguintes implementações:
WHILE
import random    

gerar = int(input('Digite quantos números deseja gerar (o limite máximo é 20): '))
c = ('+55119')
contador = 0

while contador < gerar:
    print(c, random.randrange(1, 100000001))
    contador += 1

FOR
import random    

gerar = int(input('Digite quantos números deseja gerar (o limite máximo é 20): '))
c = ('+55119')

for contador in range(gerar):
    print(c, random.randrange(1, 100000001))

","
            2
        ",['\npython\n']
513300,Combinação de uma lista numérica com limitador (Python),"
Estou gerando todas as combinações possíveis dentro de uma lista, mas não encontrei nenhum que suprisse todas as minhas necessidades, sendo elas:

Resultado em formato de lista;
Listas com itens repetidos são válidas;
Listas completamente iguais não são válidas;
Deve haver um limitador de tamanho máximo para geração da lista;
O somatório dos itens da lista não pode ser maior que tamax;
O tempo de execução do código é importante;

Fiz o código abaixo, mas gostaria de saber se existe uma forma mais refinada/pythônica de escrever esse mesmo código.
OBS: Usei limitadores para diminuir o número de iterações do gerador, pois eu tinha que fazer combinações com uma lista de 30 números, e sem os limitadores o código nunca terminava de rodar.
import numpy as np
from math import floor
from itertools import product

tamax = 12 #valor máximo da soma dos itens na lista
tamin = tamax * 0.95 #valor mínimo da soma dos itens na lista
tamanhos = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] = lista para combinações
tamanhos.sort()
limites = [] #armazena os limites para cada número de iterações
iteracoes = [] #armazena o número máximo de iterações que os elementos da lista vão gerar se combinados. É pareado com a lista limites
check = [] #usado como checagem para adicionar itens na lista limites
tamcomb = [] #armazena todas as combinações de tamanhos
comb = () #combinação do gerador aleatório


def sumall(tupla): #retorna o somatório do itens da tupla gerada
  tam = len(tupla)
  lista1 = list(tupla[0:tam])
  return np.sum(lista1)


def cresc(tupla): #transforma a tupla em uma lista em ordem crescente
  tam = len(tupla)
  lista = list(tupla[0:tam])
  lista.sort()
  return lista

for i in tamanhos:
  iteracao = floor(((tamax-i)/min(tamanhos))+1) #retorna o número máximo de iterações que podem ocorrer nas combinações entre os itens da lista
  if iteracao not in iteracoes: #adicionar o número à lista iteracoes
    iteracoes.append(iteracao)
  for j in range(0, (max(iteracoes)+1)): #adiciona na lista limites o tamanho referente ao número de iterações calculado
    if j == iteracao:
      if iteracao not in check:
        limites.append(i)
        check.append(iteracao)
limites.sort(reverse=True)
iteracoes.sort()

print(""iteracoes = "", iteracoes)
print(""limites = "", limites)

for i in range(1, (max(iteracoes)+1))):
  limite = 0
  for j in iteracoes:
    if i <= j:
      if limites[iteracoes.index(j)] > limite:
        limite = limites[iteracoes.index(j)]
  tamanhos_validos = [tamanho for tamanho in tamanhos if tamanho <= limite] # gera a lista com os tamanhos que serão utilizados de acordo com o número de iterações
  gerador = product(tamanhos_validos, repeat=i) # repeat é utilizado para especificar o numero de item que as combinações irão possuir
  for comb in gerador: #gera as combinações com base no tamax e tamin
    if tamax >= sumall(comb) >= tamin:
      comb = cresc(comb)
      if comb not in tamcomb: #se a combinação ainda não existe em tambcom, é adicionada na lista
        tamcomb.append(comb)
print(""combinações validas = ""tamcomb)

Output:
iteracoes = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
limites = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
combinações validas = [[2, 10], [3, 9], [4, 8], [5, 7], [6, 6], [1, 1, 10], [1, 2, 9], [1, 3, 8], [1, 4, 7], [1, 5, 6], [2, 2, 8], [2, 3, 7], [2, 4, 6], [2, 5, 5], [3, 3, 6], [3, 4, 5], [4, 4, 4], [1, 1, 1, 9], [1, 1, 2, 8], [1, 1, 3, 7], [1, 1, 4, 6], [1, 1, 5, 5], [1, 2, 2, 7], [1, 2, 3, 6], [1, 2, 4, 5], [1, 3, 3, 5], [1, 3, 4, 4], [2, 2, 2, 6], [2, 2, 3, 5], [2, 2, 4, 4], [2, 3, 3, 4], [3, 3, 3, 3], [1, 1, 1, 1, 8], [1, 1, 1, 2, 7], [1, 1, 1, 3, 6], [1, 1, 1, 4, 5], [1, 1, 2, 2, 6], [1, 1, 2, 3, 5], [1, 1, 2, 4, 4], [1, 1, 3, 3, 4], [1, 2, 2, 2, 5], [1, 2, 2, 3, 4], [1, 2, 3, 3, 3], [2, 2, 2, 2, 4], [2, 2, 2, 3, 3], [1, 1, 1, 1, 1, 7], [1, 1, 1, 1, 2, 6], [1, 1, 1, 1, 3, 5], [1, 1, 1, 1, 4, 4], [1, 1, 1, 2, 2, 5], [1, 1, 1, 2, 3, 4], [1, 1, 1, 3, 3, 3], [1, 1, 2, 2, 2, 4], [1, 1, 2, 2, 3, 3], [1, 2, 2, 2, 2, 3], [2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 6], [1, 1, 1, 1, 1, 2, 5], [1, 1, 1, 1, 1, 3, 4], [1, 1, 1, 1, 2, 2, 4], [1, 1, 1, 1, 2, 3, 3], [1, 1, 1, 2, 2, 2, 3], [1, 1, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 5], [1, 1, 1, 1, 1, 1, 2, 4], [1, 1, 1, 1, 1, 1, 3, 3], [1, 1, 1, 1, 1, 2, 2, 3], [1, 1, 1, 1, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 4], [1, 1, 1, 1, 1, 1, 1, 2, 3], [1, 1, 1, 1, 1, 1, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1, 1, 1, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

Esse código demorou cerca de 9s para rodar no Google Colab.
","
Dá pra simplificar bastante esse código.
Pelo que entendi, a ideia é buscar todas as combinações, mas a ordem dos elementos parece não importar. Ou seja, se já tiver [2, 10] nos resultados, então não precisa ter [10, 2]. Portanto, uma opção melhor é trocar itertools.product por itertools.combinations_with_replacement.
Só isso já diminui significativamente a quantidade de possibilidades a serem testadas. No caso, sua lista tem 10 elementos (os números de 1 a 10), então product(lista, repeat=n) resulta em 10n elementos diferentes para serem testados. Já combinations_with_replacement(lista, n) resulta em (9 + n)! / n! / 9!. Por exemplo, para n igual a 6, product gera 1 milhão de possibilidades (inclusive as repetidas que não são necessárias, como já mencionado), enquanto combinations_with_replacement gera apenas 5005 combinações (ou seja, quase 200 vezes menos possibilidades). Para n igual a 10, a diferença é maior ainda: 10 bilhões de product versus 92378 de combinations_with_replacement (cerca de 100 mil vezes menos possibilidades).
Com isso você já ganha um bom tempo. E como os valores já estão ordenados, as combinações também estarão (primeiro ele gera de 1 a 10, depois (1, 1), (1, 2), etc, depois (2, 1), (2, 2) e assim por diante). Assim, não precisa ficar ordenando as tuplas, o que significa mais um ganho de tempo.
Enfim, ficaria assim:
from itertools import combinations_with_replacement

valores = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # valores usados nas combinações
valores.sort() # não precisaria nesse caso, pois vc já criou a lista ordenada
tamax = 12 # valor máximo da soma dos itens na lista
tamin = tamax * 0.95 # valor mínimo da soma dos itens na lista

# calcula as iteracoes
iteracoes = []
etc... (confesso que não entendi essa parte, mas usei o seu código, e a mesma lista abaixo)


results = []
for i in range(1, max(iteracoes) + 1):
    for comb in combinations_with_replacement(valores, i):
        if tamin <= sum(comb) <= tamax:
            results.append(list(comb)) # transforma a tupla em lista e adiciona nos resultados

print(results)

Repare que não precisa de uma função para calcular a soma, pois o Python já tem isso pronto: sum recebe qualquer iterável, inclusive uma tupla (não precisa transformá-la em lista, ganhando mais tempo ainda).
E nos resultados, para converter a tupla em lista, basta usar list passando a tupla direto (criar os slices, como você fez com [0:tam], além de gastar mais tempo, é desnecessário nesse caso em que você quer pegar todos os elementos - isso faria sentido se você quisesse pegar apenas um pedaço da tupla). E como agora eu não retorno mais as combinações repetidas, nem preciso verificar se já existe na lista de resultados.
Rodei no Colab e demorou cerca de 0,3 segundos.

Também fiz um teste com o módulo timeit:
def com_permutations():
    # seu código com permutations...

def com_combinations():
    # meu código usando combinations_with_replacement...

from timeit import timeit

# executa 1 vez cada teste
params = { 'number' : 1, 'globals': globals() }
# imprime os tempos em segundos
print(timeit('com_permutations()', **params))
print(timeit('com_combinations()', **params))

Os tempos podem variar de uma máquina para outra, na minha foram (em segundos):
5.775390355000127
0.13096024300102727

Como pode ver, um ganho significativo (de 5,7 para 0,13 segundos, cerca de 40 vezes mais rápido).
","
            1
        ",,,"['\npython', 'lista', 'combinações\n']"
513286,PyQt5 - Identificar que pressionou F10 em um QLineEdit,"
Como faço para abrir uma função ao pressionar a tecla F10 em um QLineEdit?
Pesquisando encontrei a função ""returnPressed"" mas só funciona para a tecla ""Enter""
class Ui_MainWindow(object):
def setupUi(self, MainWindow):
    MainWindow.setObjectName(""MainWindow"")
    MainWindow.resize(612, 430)
    self.centralwidget = QtWidgets.QWidget(MainWindow)
    self.centralwidget.setObjectName(""centralwidget"")
    self.lin1 = QtWidgets.QLineEdit(self.centralwidget)
    self.lin1.setGeometry(QtCore.QRect(20, 130, 113, 20))
    self.lin1.setObjectName(""lin1"")
    self.lin2 = QtWidgets.QLineEdit(self.centralwidget)
    self.lin2.setGeometry(QtCore.QRect(150, 130, 113, 20))
    self.lin2.setObjectName(""lin2"")
    self.lin3 = QtWidgets.QLineEdit(self.centralwidget)
    self.lin3.setGeometry(QtCore.QRect(290, 130, 113, 20))
    self.lin3.setObjectName(""lin3"")
    self.lin4 = QtWidgets.QLineEdit(self.centralwidget)
    self.lin4.setGeometry(QtCore.QRect(430, 130, 113, 20))
    self.lin4.setObjectName(""lin4"")
    MainWindow.setCentralWidget(self.centralwidget)

    # -----------------------------------------------------------------
    self.lin1.returnPressed.connect(self.teste)
    # -----------------------------------------------------------------

    self.retranslateUi(MainWindow)
    QtCore.QMetaObject.connectSlotsByName(MainWindow)

def teste(self):
    print('Tecla ENTER pressionada')

def retranslateUi(self, MainWindow):
    _translate = QtCore.QCoreApplication.translate
    MainWindow.setWindowTitle(_translate(""MainWindow"", ""MainWindow""))

","
Use o PyQt5.QtWidgets.QShortcut com PyQt5.QtGui.QKeySequence('F10') ou com o atalho PyQt5.QtCore.Qt.Key_F10
Note que para executar o atalho somente no widget especifico é necessário informar o contexto, o evento será executado em qualquer parte do programa (contexto WindowShortcut).
Para especificar o contexto como sendo o próprio QLineEdit defina no atributo:
context=QtCore.Qt.WidgetShortcut

Dessa forma:
PyQt5.QtWidgets.QShortcut(<atalho>, <widget>, <evento>, context=QtCore.Qt.WidgetShortcut)

Um exemplo bem simples com dois campos de texto com funções diferentes:
from sys import argv, exit
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QLabel, QLineEdit, QMessageBox, QShortcut, QVBoxLayout, QWidget
from PyQt5.QtGui import QKeySequence


class Examplo(QWidget):
    def __init__(self):
        super(Examplo, self).__init__()

        self.textEdit1 = QLineEdit()
        self.textEdit2 = QLineEdit()

        QShortcut(Qt.Key_F10, self.textEdit1, self.eventoFoo, context=Qt.WidgetShortcut)
        QShortcut(Qt.Key_F10, self.textEdit2, self.eventoBar, context=Qt.WidgetShortcut)

        mainLayout = QVBoxLayout()

        mainLayout.addWidget(QLabel(""Primeiro label F10""))
        mainLayout.addWidget(self.textEdit1)

        mainLayout.addWidget(QLabel(""Segundo label F10""))
        mainLayout.addWidget(self.textEdit2)

        self.setLayout(mainLayout)

        self.setWindowTitle(""Exemplo"")


    def eventoFoo(self):
        msg = QMessageBox(self)
        msg.setText(""#1 eventoFoo() executado"")
        msg.show()


    def eventoBar(self):
        msg = QMessageBox(self)
        msg.setText(""#2 eventoBar() executado"")
        msg.show()


app = QApplication(argv)
exemplo = Examplo()
exemplo.show()
exit(app.exec_())

","
            0
        ",,,"['\npython', 'python-3.x', 'pyqt-5\n']"
513271,Exercicio - Recebendo tempo em segundos e retornando a media e os valores menores a media,"
Tenho um exercicio onde o mesmo solicita que seja criado um programa que receba como entrada tempo de corridas e calcule a media aritmetica dos tempos gastos para percorrer um percurso de corrida diario. Ao final o programa deve exibit todos os tempos que ficaram abaixo da media na mesma ordem que foi recebido na entrada.
ENTRADA:
Diversos valores inteiros, um por linha que represeta os tempos gastos em cada corrida (em segundos), a entrada e finalizada com a inserção de um valor negativo que não devera ser contabilizado.
SAIDA
Na primeira linha devera ser impresso a palavra ""MEDIA: "" seguido do valor real com duas casas decimais que indica a media dos tempos recebidos. Nas linhas seguintes os tempos que ficaram abaixo da media sendo impressos um por linha.
EXEMPLOS

O que eu consegui ate agora foi o seguinte:
lista = []
segundos = int(input())

while segundos >= 0:
        lista.append(segundos)
        segundos = int(input())

media = sum(lista) / len(lista)
print(f'MEDIA: {media:.2f}')

Porem nao consegui realizar a impressao dos valores menores que a media.
","
Você só precisa percorrer a lista fazendo um if. Se for menor que a média printa, senão não.
Algo mais ou menos assim:
lista = []
segundos = int(input())

while segundos >= 0:
        lista.append(segundos)
        segundos = int(input())

media = sum(lista) / len(lista)
print(f'MEDIA: {media:.2f}')
for x in lista:
    if x < media:
       print(x)

","
            0
        ",,,"['\npython', 'python-3.x\n']"
513231,Erro: MySQL backend does not support timezone-aware datetimes when USE_TZ is False,"
Estou com um problema na api do pagseguro, estou usando o django 1.8 quando tento enviar um pagamento ele apresenta o erro ""MySQL backend does not support timezone-aware datetimes when USE_TZ is False.""
Não posso mudar a configuração do USE_TZ pra True, porque ira interferir em outras parte da aplicação.
Já alterei onde estava usando o timezone.now() para datetime.now() e mesmo assim ainda perciste esse erro alguem tem alguam solução pra isso ?
Segue o codigo de como esta a função da api:
def checkout(self):
    self.build_params()
    headers = {
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8'
    }
    response = requests.post(
        self.checkout_url, self.params, headers=headers
    )

    data = {}

    if response.status_code == 200:
        root = xmltodict.parse(response.text)
        data = {
            'code': root['checkout']['code'],
            'status_code': response.status_code,
            'date': parse(root['checkout']['date']),
            'redirect_url': '{0}?code={1}'.format(
                self.redirect_url, root['checkout']['code']
            ),
            'success': True
        }
        checkout_realizado_com_sucesso.send(
            sender=self, data=data
        )
    else:
        data = {
            'status_code': response.status_code,
            'message': response.text,
            'success': False,
            'date': datetime.datetime.now()
        }
        checkout_realizado_com_erro.send(
            sender=self, data=data
        )

    checkout_realizado.send(
        sender=self, data=data
    )
    return data

",,,,,"['\npython', 'api', 'timezone', 'django-1.8\n']"
513221,word_tokenize criando tokens com apenas um caractere em vez de palavras,"
Quando crio a lista abaixo, com os tokens de múltiplos textos .txt, o for loop tokeniza os caracteres e não as palavras propriamente ditas:
import glob
import nltk
      
l = []

for file in glob.glob('C:\\Users\\User\\Desktop\\lima\\*.txt'):
    texts = open(file,'r',encoding='utf-8').read()
        for text in texts:
            tokenize = nltk.word_tokenize(text, language='portuguese')
            l.extend(tokenize)

    print(l) 

output:
['N', 'ã', 'o', 'f', 'o', 'i', 'o', 'u', 'n', 'ã', 'o', 'é',]
etc

Já tentei com o append, mas ele cria uma lista de listas de caracteres. O que estou fazendo errado?
","
read() pega todo o conteúdo do arquivo e retorna em uma única string. Ou seja, texts é uma string.
Ao fazer for text in texts você está percorrendo os caracteres de texts, um a um. Ou seja, a cada iteração do for, a variável text conterá apenas um caractere. Por isso que o word_tokenize acaba gerando tokens com apenas um caractere.
Se a ideia é tokenizar todo o texto, não faça este for, passe toda a string de uma vez:
l = []

for file in glob.glob('C:\\Users\\User\\Desktop\\lima\\*.txt'):
    texts = open(file,'r',encoding='utf-8').read()
    tokenize = nltk.word_tokenize(texts, language='portuguese')
    l.extend(tokenize)

print(l) 


Se os arquivos forem muito grandes, não recomendo ler tudo de uma vez com read() (pois aí estará carregando todo o conteúdo para a memória). Uma opção é ler o arquivo linha a linha, e aí sim precisa de um loop:
tokens = []

for file in glob.glob('C:\\Users\\User\\Desktop\\lima\\*.txt'):
    with open(file ,'r',encoding='utf-8') as arq: # abre o arquivo
        for linha in arq: # para cada linha do arquivo
            tokenize = nltk.word_tokenize(linha, language='portuguese')
            tokens.extend(tokenize)

print(tokens)

Repare que é diferente do seu loop: no seu, o for itera em cada caractere da string. No meu, estou iterando por cada linha, e passando toda a linha para word_tokenize.
Também usei with para abrir o arquivo, pois isso garante que ele será fechado ao final (mesmo se der erro durante a leitura). E mudei o nome da lista l para algo um pouco melhor - apesar de parecer besteira, dar nomes melhores ajuda na hora de programar (ainda mais quando esse nome é l, que dependendo da fonte usada, pode ser facilmente confundido com 1, I ou |).
","
            1
        ",,,"['\npython', 'nltk\n']"
513217,Definir uma variável em tempo de execução a partir de uma string e um objeto python [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Quero adicionar uma variável ao meu código ou na memoria em tempo de execução, estou procurando algo parecido com isso desde ontem e não consigui obter o resultado desejado.
Digamos que eu tenha um objeto: (<bound method Menu.adSabor of <__main__.Menu object at 0x00000219635E6040>>), e quero referência lo em tempo de execução.
por exemplo: (def referencia(self, 'nome_da_variavel_em_string', <bound method Menu.adSabor of <__main__.Menu object at 0x00000219635E6040>>, o nome_da_variavel_em_string será a nova referencia do objeto, onde consigo chamar ele com self.nome_da_variavel_em_string)
","
Se entendi direito, você quer acessar uma variável usando um string que contém o nome da variável.
Se a variável for global, você pode utilizar a função globals, que retorna um dicionário contendo todas as variáveis globais, e acessar sua variável de interesse usando seu nome como chave:
X = ""Olá""
retorno = globals()[""X""]
print(retorno)  # printa ""Olá""

De maneira equivalente, você pode usar a função locals caso a variável seja uma variável local (ex: definida dentro do corpo de uma função):
def f():
    Y = 5
    return locals()[""Y""]

print(f())  # printa 5

Ainda, caso sua variável esteja definida em algum outro módulo, ou então seja um método/atributo de um objeto, você pode usar a função getattr, passando para dentro dela o seu módulo/objeto e o nome do atributo desejado:
import meu_modulo

print(getattr(meu_modulo, ""Z""))  # printa o valor de meu_modulo.Z

class A:
    valor = 10

instancia = A()
print(getattr(instancia, ""valor""))  # printa 10

Dito tudo isso, eu recomendo a você refletir se não faria mais sentido no seu código usar um dicionário ou alguma outra estrutura de dados para manter referências aos seus objetos de interesse. Acessar diretamente o dicionário globals parece um pouco obfuscado - se você precisa de referências a seus objetos, crie alguma estrutura que as mantenha. Explícito é melhor que implícito ;-)
Edit:
Se você quiser criar/modificar um método ou atributo de um objeto, pode usar a função setattr:
class A:
    valor = 10

    def metodo(self):
        return self.valor

setattr(A, ""novo_metodo"", A.metodo)

instancia = A()
print(instancia.novo_metodo())  # printa 10

Note que A.novo_metodo é apenas uma cópia de A.metodo - ambos existem dentro do corpo da classe. Se quiser deletar o método antigo, é necessário usar del A.metodo.
Se quiser adicionar ou modificar uma variável global/local pelo nome, terá de modificar o dicionário retornado porglobals/locals, respectivamente. Entretanto eu não recomendo esta abordagem, tanto por obfuscar ainda mais o código, quanto por potencialmente modificar algum valor do qual Python depende. Novamente, faz mais sentido definir um dicionário próprio para isso.
","
            0
        ",,,"['\npython', 'variáveis\n']"
513214,Equivalente em Python ao Proc Logistic do SAS,"
tudo bem?
Pessoal, como faço para escrever o seguinte código SAS em python?
Proc Logistis Data = Nome_Dataset outmodel Result_DataSet;
model Var1 / Var2 = Var3 /lackfit;
output out = Nome_Dataset_Fit p = Var_test
Run;
e o código
Proc Logistis Data = Nome_Dataset outmodel Result_DataSet;
class &Variavel. /param=gml;
model Var1 / Var2 = Var3 &Variavel. /lackfit;
output out = Nome_Dataset_Fit p = var_test;
Run;
Não tenho muito experiência com regressão logística em nenhuma dessas liguagens.
Muito obrigado.
",,,,,"['\npython', 'sas\n']"
513097,Qual o tempo de vida do decorator lru_cache?,"
Estou desenvolvendo um script em Python que necessita memorizar as informações (possivelmente um cache) de instâncias anteriores e acabei encontrando o decorator @functools.lru_cache, porém fiquei com dúvidas ao ler a documentação.
Este decorator memoriza informações apenas até o término da instância ou memoriza as informações após o término da instância também?
Caso resposta negativa, pode dar sugestões de como posso fazer isso, ou um caminho que possa seguir para chegar até isso?
","
Não há especificação para o tempo de vida, só para o tamanho, o @functools.lru_cache funciona como dicionário, então enquanto a sua aplicação e função com o decorador estiverem lá o recurso existirá, por isso é recomendado usar o maxsize= com um tamanho não muito grande (padrão é 128), para evitar o uso descontrolado, se definir maxsize=None o recurso LRU será desabilitado e o cache poderá crescer sem limites, o que pode causar sérios problemas.
Note que se usar typed=true, os argumentos da função de diferentes tipos serão armazenados em cache separadamente, exemplo: foobar(3) e foobar(3.0) serão tratados como chamadas distintas com resultados distintos, o que irá necessitar de mais recursos, então é bom avaliar o que é necessário.
Existe também o método .clear_cache, com ele em qualquer momento você poderá invalidar o cache de uma função, exemplo:
@lru_cache
def foobar():
   return ..algoaqui..

foobar() # retorna o resultado
foobar() # retorna o mesmo resultado, possivelmente em cache

# descarta o cache existente para ""foobar()""
foobar.clear_cache()

No algoritimo LRU usado por esse decorador, irá descartar os itens menos usados recentemente primeiro.
","
            1
        ",,,"['\npython', 'cache\n']"
513093,Como converter o token expires para uma data,"
Olá, estou iniciando a  minha caminhada com Python e JWT, estou me autenticando em uma API externa e tenho como retorno o Token e o    ""expires_in"", porem o valor vem em um formato que preciso converter para data e assim descobrir quando o meu Token vai expirar para poder renovar o mesmo. como posso conver o valor abaixo para uma data valida usando o PYthon.
  ""expires_in"": 1209599

","
A chave expires_in não é uma ""Registered Claim"", ou seja, não existe uma padronização e você precisa descobrir com quem gerou este número para saber o que ela significa. Abaixo explico primeiro os valores padronizados de data do JWT e depois crio um exemplo caso este número seja o número de segundos depois de criado até o token expirar.

Se você verificar o RFC7519 que formaliza o JWT verá na Sessão 4.1 ""Registered Claims"" que os claims iat (issued at), exp (expiration time) e nbf (not before) são dados do tipo NumericDate.
Para entender o que é o tipo NumericDate basta ver no fim da sessão 2 do mesmo documento:

A JSON numeric value representing the number of seconds from
1970-01-01T00:00:00Z UTC until the specified UTC date/time.

Tradução livre:

Um valor JSON numérico representando a quantidade de segundos desde
1970-01-01T00:00:00Z UTC até o date/time especificado.

Ou seja, é quantidade de segundos desde Unix Epoch e pode ser calculado usando o método datetime.utcfromtimestamp:
from datetime import datetime

datetime.utcfromtimestamp(1622950200)
# datetime.datetime(2021, 6, 6, 3, 30)


Usando a função acima para o valor 1209599 que você usa no seu exemplo vai dar 1970-01-14 23:59:59 UTC.. então valor do seu exemplo não é o padrão normalmente utilizado pelo JWT. Se esse número representa a quantidade de segundos a partir de um determinado momento (nesse caso 13 dias 23h59m59s), você pode usá-lo para criar um timedelta e validar o token:
from datetime import datetime, timedelta

expires_in = 1209599
initial_datetime = datetime(2021, 6, 6)  # valor apenas para exemplo
expire_datetime = initial_datetime + timedelta(seconds=expires_in)
# datetime.datetime(2021, 6, 19, 23, 59, 59)

# agora bastaria testar se `expire_datetime` já passou
if expire_datetime > datetime.now():
    # Token expirado

Lembrando que este exemplo é para entender como fazer isso na mão, mas o padrão JWT já possui o claim iat para informar o datetime que o token foi criado e o claim exp para dizer qual datetime expira o token. Sendo assim você poderia usar alguma biblioteca já pronta para isso e que faça essas verificações automaticamente para você.
","
            1
        ",,,"['\npython', 'flask', 'jwt\n']"
513084,Como substituir uma coluna de forma condicional no Pandas?,"
Tenho um dataframe no Pandas e preciso substituir o valor na coluna semana de forma condicional. Onde o valor é 53, quero substituir por 1.
cod; semana;
A; 53;
A; 1;
A; 1;
A; 2;
B; 53;
B; 1;
B; 1;
B; 2;

Isso foi o que tentei, mas sem sucesso:
df = pd.read_csv(""file.csv"", encoding = ""utf-8"", delimiter = "";"")

for dado in df['semana']:
    if dado == 53:
        df['semana'].replace(dado, 1)

","
Acustume-se a NÃO fazer for em um dataframe. Este seria o último recurso, pois não é nem um pouco performático. Veja este link
Para substituir todos que forem igual a 53 por 1, faça:
df.loc[df['semana'] == 53, 'semana'] = 1

Exemplo:
Criando DataFrame de teste
>>> import pandas as pd
>>> df = pd.DataFrame({""a"": [1,2,3,4], ""semana"": [1,2,53,2]})
>>> df
   a  semana
0  1       1
1  2       2
2  3      53
3  4       2

Substituindo valores
>>> df.loc[df['semana'] == 53, 'semana'] = 1
>>> df
   a  semana
0  1       1
1  2       2
2  3       1
3  4       2
>>>

","
            2
        ",,,"['\npython', 'pandas', 'dataframe\n']"
513072,Django Sessão permitida para o usuário,"
Tenho um aplicação django que cadastra um usuário,  utilizando a tabela User do Django.
Tudo desse escopo esta funcionando mas tem que haver restrições.
Ao acessar a conta username1 e o username2 já tem cadastro o usuário1  acessa dados do username2 e pode editar algo que não deveria acontecer.
dessa forma:
http://localhost:8000/perfil/1/ # <=== logado

basta alterar
http://localhost:8000/perfil/2/ #< === todos os dados podem ser editado pelo username1

Tem como bloquear acesso pelo if no html algo como, não testei é apenas uma pergunta noob
{% if user.id == user.id %}

  {{form.as_p}}
{% endif %}

Estou usando BCV
Eis o código:
from django import forms
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm


class ContaForms(UserCreationForm):
    class Meta:
        model = User
        fields = [
            'username', 'first_name', 'email', 'password1', 'password2'
        ]


class PerfilForms(forms.ModelForm):
    class Meta:
        model = User
        fields = ['username', 'first_name', 'email']

e a view tbm:
from django.views.generic import CreateView, TemplateView, UpdateView
from django.contrib.auth.models import User
from .forms import PerfilForms, ContaForms
from django.urls import reverse_lazy
from django.contrib.auth.mixins import LoginRequiredMixin


class ContaVIEW(CreateView):
    template_name = 'registro/conta.html'
    form_class = ContaForms
    success_url = reverse_lazy('login')

class PerfilVIEW(LoginRequiredMixin, UpdateView):
    template_name = 'registro/login.html'
    model = User
    form_class = PerfilForms
    login_url = reverse_lazy('login')
    redirect_field_name = reverse_lazy('login')
    success_url = reverse_lazy('home')

class HomeVIEW(LoginRequiredMixin, TemplateView):
    template_name = 'registro/home.html'
    login_url = reverse_lazy('login')
    redirect_field_name = reverse_lazy('login')

Sera que tem algum mixins que faz essa autorização ?
na documentação fala de algum assim
",,,,,"['\npython', 'django', 'request\n']"
511875,"Qual a diferença entre ""/"" e ""%"" em python?","
x1 = int(input())
v1 = int(input())
x2 = int(input())
v2 = int(input())

if x1 == x2 and v1 == v2:
  print('SIM')

elif (x1 == x2) and (v1 != v2):
  print('NÃO')

elif (x1 - x2) % (v2 - v1) == 0:
  if (x1 - x2) / (v2 - v1) > 0:
    print('SIM')
  else: print('NAO')

else: print('NAO')

Fiz esse código e percebi que o % e o / mudam totalmente o resultado. Qual a diferença entre eles?
","
Python possui alguns operadores aritméticos, estes são:
+   Adição
-   Subtração
*   Multiplicação
/   Divisão 
//  Divisão Inteira
%   Módulo 
**  Exponenciação

Cada operador tem sua função e deve ser utilizado para alcançar determinado fim. Ao utilizar o operador de divisão (/) você estará obtendo o resultado da divisão entre dois valores, já o operador módulo (%), dentro de uma operação, retornará o resto da divisão entre dois valores.
Ex:
5/2 = 2.5
5%2 = 1
","
            3
        ",,,['\npython\n']
511822,Função sorted fazendo referência a chaves de um dicionário para definir o critério de ordenação,"
dict = {'dc':20,'ba':10,'aa':5,'db':30,'za':1}

dict_2 = sorted(dict.items(), key = lambda dict: dict[1], reverse = True)

print(dict_2)

Quando eu coloco dict[1] no argumento da função tenho o seguinte retorno:
[('db', 30), ('dc', 20), ('ba', 10), ('aa', 5), ('za', 1)]

Quando eu coloco dict[0] no argumento da função tenho o seguinte retorno:
[('za', 1), ('dc', 20), ('db', 30), ('ba', 10), ('aa', 5)]

Pelo que eu entendi, se eu colocar dict[1] ele começa a ordenar considerando a segunda letra da string da chave e quando coloco dict[0] ele começa a ordenar considerando a primeira letra da string da chave. Minha dúvida é a seguinte: quando eu faço uma referência dict['x'] não deveria ser retornado o valor para a chave 'x'? Para eu conseguir ordenar pela posição na string eu não deveria ter que colocar dict['x'[0]] ou dict['x'[1]]?
","

se eu colocar dict[1] ele começa a ordenar considerando a segunda letra da string da chave

Não é nada disso.

Primeiro, vamos ver o que items() retorna:
for item in dict.items():
    print(item, type(item))

Saída:
('dc', 20) <class 'tuple'>
('ba', 10) <class 'tuple'>
('aa', 5) <class 'tuple'>
('db', 30) <class 'tuple'>
('za', 1) <class 'tuple'>

items() retorna várias tuplas, sendo que cada tupla contém uma chave do dicionário e seu respectivo valor.
Ou seja, sorted irá ordenar estas tuplas. E o critério de ordenação foi indicado pelo lambda. Então quando eu faço:
lambda dict: dict[1]

Estou dizendo que esta é uma função que recebe um parâmetro (no caso, chamado dict) e retorna o elemento que está na posição 1.
Mas como estou passando várias tuplas para sorted, então o lambda receberá uma tupla como argumento, e pegará o elemento da tupla que está na posição 1. No caso, será o valor (que no seu dicionário, é o 20, 30, etc). Pode ver:
for item in dict.items():
    print(f'posição zero: {item[0]}, posição 1: {item[1]}')

Saída:
posição zero: dc, posição 1: 20
posição zero: ba, posição 1: 10
posição zero: aa, posição 1: 5
posição zero: db, posição 1: 30
posição zero: za, posição 1: 1

Ou seja, quando você usa dict[1] no lambda, está dizendo para ordenar pelos valores (20, 30, etc), e quando você usa dict[0], está dizendo para ordenar pelas chaves (aa, ba, etc). E claro, como você usou reversed=True, o resultado estará em ordem descrescente. E vale lembrar que números são comparados de acordo com o seu valor numérico, e strings, de acordo com a ordem alfabética (para ser mais preciso, é pela ordem lexicográfica).

Dito isso, eu mudaria o nome do parâmetro do lambda, pois dict, além de ser uma das funções builtin, ainda passa a impressão errada de que ali tem um dicionário. Não tem, pois como já vimos, ali naquele ponto temos uma tupla contendo uma chave e seu respectivo valor, então mude para algo como item, por exemplo.
De qualquer forma, se quer ordenar pela primeira letra de cada chave, teria que ser algo assim:
dict_2 = sorted(dict.items(), key = lambda item: item[0][0], reverse = True)

Lembre-se: item é uma tupla contendo uma chave e um valor. Na posição zero item[0] temos a chave, que no seu caso são strings. Então para pegar o primeiro caractere desta string basta fazer item[0][0].
Se quisesse ordenar pelo segundo caractere, bastaria mudar para:
dict_2 = sorted(dict.items(), key = lambda item: item[0][1], reverse = True)
#                                                        ↑
#                                    aqui (1 indica o segundo caractere da string)

","
            2
        ",,,"['\npython', 'dicionário\n']"
511816,Qual a melhor maneira de verificar se uma string tem alguma dessas palavras?,"
Tenho uma dúvida, considerem o seguinte:
nomes_proibidos = ['Corona', 'Clorivaldo', 'Pfizernaldo', 'Hulk', 'Naruto', 'Goku', 'Cloroquina']

def verificar_nome(n):
    for nome in nomes_proibidos:
        if n.find(nome) != -1:
            return False

    return True

verificar_nome('Pedro Hulk da Silva')



Existe uma melhor maneira de fazer isso? Estou precisando fazer algo semelhante, só que com uma lista de palavras muito maior e estou preocupado com o desempenho.
","
Uma alternativa é usar split para quebrar a string em palavras, e ver se cada uma das palavras está na lista:
def verificar_nome(frase):
    for palavra in frase.split():
        if palavra in nomes_proibidos:
            return False
    return True

Esta solução é ""ingênua"" porque qualquer frase um pouco mais complicada já quebra o algoritmo. Por exemplo, se a frase for Oi, tudo bem?, as ""palavras"" serão Oi, (com a vírgula), tudo e bem? (com a interrogação), então se ""Oi"" estivesse na lista de palavras proibidas, ela não seria encontrada.
Então no fundo, precisamos definir bem o que é uma ""palavra"", conforme já discutido aqui, aqui e aqui.
Se quer só considerar os casos simples (palavras estão sempre separadas por espaço, não há pontuação, etc) então a solução acima resolveria. Usar find pode acabar pegando trechos dentro de uma palavra (por exemplo, se a palavra proibida é ""viado"", usando find você bloquearia ""enviado"", o que não é o desejado).

Na verdade filtros de palavras são um problema antigo e até hoje não está muito bem resolvido. Mas enfim...

Nos links já citados acima (esse, esse e esse) você vai ver outras formas de quebrar uma frase em palavras, usando diferentes definições. Escolha a sua e troque o split do código acima pela opção de sua preferência.

Se quiser desconsiderar a diferença entre letras maiúsculas e minúsculas, você pode usar casefold para normalizar as palavras:
nomes_proibidos = list(map(str.casefold, ['Corona', 'Clorivaldo', 'Pfizernaldo', 'Hulk', 'Naruto', 'Goku', 'Cloroquina']))

def verificar_nome(frase):
    for palavra in frase.split():
        if palavra.casefold() in nomes_proibidos:
            return False
    return True

Claro que para casos mais simples, usar lower ou upper também funcionaria, mas a documentação diz que casefold é mais ""agressivo"" e trata casos excepcionais como o caractere alemão ß, cuja versão maiúscula é ""SS"" (ou seja, para textos em português, lower ou upper seria o suficiente).

E por fim, em vez de uma lista de palavras, pode trocar para um set, já que operações de busca nesta estrutura são mais rápidas do que em uma lista:
# usar um set em vez de lista
nomes_proibidos = set(map(str.casefold, ['Corona', 'Clorivaldo', 'Pfizernaldo', 'Hulk', 'Naruto', 'Goku', 'Cloroquina']))

Claro que para poucos nomes, a diferença será imperceptível. Então teste para confirmar (mas a princípio, deve ser mais rápido que uma lista).
Fazendo um teste rápido com o módulo timeit:
from timeit import timeit

set_nomes_proibidos = set(map(str.casefold, ['Corona', 'Clorivaldo', 'Pfizernaldo', 'Hulk', 'Naruto', 'Goku', 'Cloroquina']))
list_nomes_proibidos = list(map(str.casefold, ['Corona', 'Clorivaldo', 'Pfizernaldo', 'Hulk', 'Naruto', 'Goku', 'Cloroquina']))

def verificar_nome_set(frase):
    for palavra in frase.split():
        if palavra.casefold() in set_nomes_proibidos:
            return False
    return True

def verificar_nome_list(frase):
    for palavra in frase.split():
        if palavra.casefold() in list_nomes_proibidos:
            return False
    return True

# frase com mil palavras, e com a palavra proibida no final
frase = ('abc ' * 1000) + 'Pedro Hulk da Silva'

# executa 10 mil vezes cada teste
params = { 'number' : 10000, 'globals': globals() }
# imprime os tempos em segundos
print(timeit('verificar_nome_set(frase)', **params))
print(timeit('verificar_nome_list(frase)', **params))

Na minha máquina, a solução com set foi ligeiramente mais rápida (cerca de 0,3 segundos em média), mas isso pode variar de acordo com o hardware, as frases e a lista de palavras proibidas, então cabe a você testar para os seus casos reais e ver se faz diferença.
","
            3
        ",,,"['\npython', 'string\n']"
511797,qual a utilidade de classes aninhadas em python?para que eu usaria algo do tipo? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



não consigo encontrar muita coisa do tipo para python, eu sei que dá para fazer isso e sei como fazer, mas não sei porque alguém iria querer fazer isso, visto que a classe interna é incapaz de acessar os atributos e métodos da classe externa, coisa que eu normalmente usaria uma herança para resolver, mas tirando a herança de jogo, usar isso tem alguma utlilidade? vi meu professor fazendo num curso de Django que estou fazendo atualmente.
","
Nâo sei exatamente em Python, mas isso é um problema geral de computação.
Normalmente se faz classe aninhadas para se organizar o código.
imagine que você tem uma classe GoogleAPIClient, e digamos que as respostas você deseja guardar em um objeto Response
Este objeto Response não é um objeto Response qualquer, mas dedicado, e se você nomear esta classe com um nome comum, pode colidir com outro Response de outra coisa.
Você pode nomear esse response como GoogleAPIClientResponse, mas o que se faz normalmente é aninhar, assim, dentro do seu GoogleAPIClient você referencia isso apenas como Response.
Algumas linguagens ainda permitem que classes aninhadas sejam privadas, ou seja, você nâo pode gerar uma instância desse response fora de GoogleAPIClient.
","
            1
        ",,,"['\npython', 'orientação-a-objetos', 'classes\n']"
511793,Como definir propriedades de um JSON para utilizar em um for loop?,"
Estou lendo um JSON parecido com este: Google Books e tentando exibi-lo no HTML. O input de pesquisa do usuário é o seek que é recebido através do request.form.get abaixo:
import requests
from flask import Flask, render_template, redirect, request, session

@app.route('/search', methods=[""GET"", ""POST""])
@login_required
def search():
    """"""Pesquisa um livro utilizando a API do Google Books""""""
    if request.method == ""POST"":
        try:
            seek = request.form.get(""seek"")
            url = f'https://www.googleapis.com/books/v1/volumes?q={seek}'
            response = requests.get(url)
            response.raise_for_status()
        except requests.RequestException:
            return None
        # Parse response
        try:
            search = response.json()
            search = {
                ""totalItems"": int(search[""totalItems""]),
                ""items"": search[""items""]
            }
            return render_template(""search.html"", search=search)
        except (KeyError, TypeError, ValueError):
            return None
    else:
        return render_template(""index.html"")

A pesquisa funciona bem, mas ainda não sei onde estou errando na hora de enviar para o HTML. Estou tentando exibir da seguinte forma:
{% for seek in search %}
  <figure>
    <a><img src=""{{ seek['items']['imageLinks']['thumbnail'] }}""></a>
    <p>{{ seek[""items""][""volumeInfo""][""title""] }}</p>
    <p>{{ seek[""items""][""volumeInfo""][""authors""] }}</p>
  </figure>
{% endfor %}

O terminal me retorna a seguinte mensagem:
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'items'

Alguém saberia me indicar o que estou deixando passar?
","
Ok, pelo que vejo, a estrutura de search seria algo assim:
{
  ""kind"": ""books#volumes"",
  ""totalItems"": 894,
  ""items"": [{...}, {...}]
}

quando você roda o seu for sobre o objeto search, a váriavel seek assumirá como valor as propriedade do objeto (""kind"", ""totalItems"", ""items"")
Sendo assim,você não esta iterando sobre os itens como você gostaria
o correto seria
{% for seek in search[""items""] %}
  <figure>
    <a><img src=""{{ search[""items""][seek]['volumeInfo']['imageLinks']['thumbnail'] }}""></a>
    <p>{{ search[""items""][seek][""volumeInfo""][""title""] }}</p>
    <p>{{ search[""items""][seek][""volumeInfo""][""authors""].join("","") }}</p>
  </figure>
{% endfor %}

Observe que authors também é um array, por isso recomendo o join ou outra forma de exibir
Observe também imageLinks esta dentro de volumeInfo
Outro ponto de melhoria, é que em javascript, um mapa é tratado como objeto, então você não precisa acessar as propriedades como esta fazendo, mas assim:
aqui estou adcionando também uma checagem para evitar undefined
{% for seek in search.items %}
  <figure>
    <a><img src=""{{ search.items[seek].volumeInfo.imageLinks && search.items[seek].volumeInfo.imageLinks.thumbnail }}""></a>
    <p>{{ search.items[seek].volumeInfo.title }}</p>
    <p>{{ search.items[seek].volumeInfo.imageLinks && search.items[seek].volumeInfo.authors.join("","") }}</p>
  </figure>
{% endfor %}

PS:
seek nesta sintax carrega o indice do array
PS2:
você precisa decidir o que fazer quando o attributo não existe
","
            1
        ",,,"['\npython', 'json', 'loop', 'flask\n']"
511783,Como mostrar várias linhas em uma linha de saída (output)?,"
Eu estudo no curso de Ciência de Computação. Eu fiz uma criptografia simples usando Cifra de César. Consegui codificar, mas tenho um problema que é que minha programa mostra várias linhas em output, que não queria isso.
Por exemplo de minha criptografia: 0123456789 -> 7890123456, mas minha programa mostra assim:
Output
7
8
9
0
1
...

Mas eu queria que mostrasse como assim:
Output
7890123456

Como faço a minha programa mostrar um resultado na uma linha de output?
Minha programa:
#num = str(input())
num = ""0123456789""
n_com_espaço = "" "".join(num)
n_separado = n_com_espaço.split("" "")
a1, a2, a3, a4, a5, a6, a7, a8, a9, a10 = n_separado
nr = 0
for i in range(0,10):
    nr = nr + 1
    r = ""a""+str(nr)
    x = globals()[r]
    if (x == ""0"" or x == ""1"" or x == ""2""):
        cal = int(x) - 3
        num_result_1 = cal%10
        print(num_result_1)
    else:
        num_result_1 = int(x) - 3
        print(num_result_1)

",,,,,"['\npython', 'python-3.x\n']"
511741,Várias linhas de datas para transformar em 2 colunas em um df com um intervalo de data de início e data de término,"
Eu tenho o seguinte df:
time_series                    date   sales  q1  q2  q3
store_0025_item_85011885    2020-07-19  4.0 0.0 2.0 1.0
store_0025_item_85011885    2020-07-26  4.0 0.0 2.0 1.0
store_0025_item_85011885    2020-08-09  6.0 0.0 2.0 1.0
store_0025_item_85011885    2020-08-16  4.0 0.0 2.0 1.0
store_0053_item_85011885    2020-12-06  7.0 0.0 8.0 1.0
store_0053_item_85011885    2020-12-13  7.0 0.0 8.0 1.0
store_0053_item_85011885    2020-12-20  6.0 0.0 8.0 1.0
store_0053_item_85011885    2020-12-27  5.0 0.0 8.0 1.0

Tentei usar a pivot_table com este código:
df_p = pd.pivot_table(df_m, values='q2', index=['time_series'],
                    columns=['date'], fill_value=0)

Mas, retorna colunas com datas como nomes de colunas. O que eu quero é que fique igual ao df abaixo:
time_series                 start_date   end_date   quantity
store_0025_item_85011885    2020-07-19   2020-07-26  2.0
store_0025_item_85011885    2020-08-09   2020-08-16  2.0
store_0053_item_85011885    2020-12-06   2020-12-27  8.0

Veja, que 'time_series' = store_0025_item_85011885, temos 2 intervalos de semanas consecutivas, então precisamos de 2 linhas, mas 'time_series' = store_0053_item_85011885, temos apenas 1 intervalo consecutivo, então precisamos de 1 linha. Na coluna 'quantity' a quantidade que preciso é copiar a coluna 'q2'. Como posso fazer isso?
",,,,,['\npython\n']
511728,"Como somar dígitos de um número até ""1"" dígito?","
Preciso somar todos os dígitos de um número até que o resultado desta soma seja um número de apenas ""1"" algarismo, ou seja, enquanto o número de algarismo de um determinado número for maior que 1, devo somar os seus respectivos algarismos. Desta forma, quando o número de algarismos for igual a 1 a soma deve ser encerrada, exibindo o resultado.
Exemplo:
Insere-se o número 155. Soma-se seus dígitos (1 + 5 + 5), obtendo-se o resultado 11. Como o número 11 é formado por dois algarismos, então, soma-se novamente seus dígitos (1 + 1), obtendo-se o valor 2. Então, como o valor 2 possui apenas 1 algarismo, a soma será encerrada, exibindo dessa forma o valor 2.
Cheguei a montar uma linha mas não está funcionando:
n1 = int(input(""Pessoa 1: digite um numero:""))

soma1 = 0

while((n1//10) != 0):

    while(n1 != 0):

        resto = n1 % 10

        n1 = n1//10

        soma1 = soma1 + resto

    n1 = soma1

print(""Sua soma é:"", soma1)

","
Sobre o algoritmo para somar os dígitos, você pode escolher qualquer um daqui.
Tendo isso, basta ir calculando a soma, até ela ser menor que 10 (que é quando ela tem somente um dígito). Algo assim:
n = int(input(""Pessoa 1: digite um numero:""))

# ajuste para o caso do número digitado ser negativo
# também inicializa a soma, para o caso do número já ser inicialmente menor que 10 (pois aí não entra no while)
soma = n = abs(n)

# enquanto o número for maior ou igual a 10 (ou seja, com mais que um dígito), continua
while n >= 10:
    # calcula a soma dos dígitos
    soma = 0
    while n > 0:
        n, d = divmod(n, 10)
        soma += d

    # atualiza o número com o valor da soma
    n = soma

print(f'valor final: {soma}')

Ou seja, enquanto o número for maior ou igual a 10 (tem mais que um dígito), eu continuo o loop.
Vale notar também que a soma tem que ser inicializada com zero dentro do loop, já que você quer calcular a soma dos dígitos do valor atual do número. Da forma que você fez, a soma é acumulada e o valor dela vai aumentando, e por isso nunca sai do while.
","
            3
        ","
Outra forma interessante de resolver esta questão é associar Expressões de atribuição juntamente com Expressões geradoras.
Neste caso o código ficaria:
x = input(""Digite um número: "")

while (s := sum(int(i) for i in x)) > 9:
    x = str(s)
print(f'O resultado é: {s}')

Observe que este código captura dígitos no formato de string. Em seguida, a expressão geradora se responsabilizará em calcular a soma de todos os dígitos da string convertidos em inteiros. Posteriormente, o bloco while verificará se o resultado da expressão de atribuição associada à variável s é maior que 9. Caso positivo, o valor de x será atualizado como sendo a string de s e a expressão geradora será novamente executada, só que desta vez, com o novo valor - que é a string de s.
Note que enquanto o valor atribuído à expressão de atribuição for maior que 9, os cálculos serão refeitos. Caso contrário, o laço de repetição while é encerrado e o valor será exibido.
Testando o código:
Imagine que ao executar o respectivo código digitássemos o valor:
155

O código seria executado e nos forneceria como resultado o valor 11. Pois...
1 + 5 + 5 = 11

Agora, como 11 é maior que 9, a expressão geradora será novamente executada, produzindo como resultado o valor 2. Pois...
1 + 1 = 2

Uma vez que 2 é menor ou igual a 9, o laço é encerrado exibindo como resultado o valor 2.

Outra forma interessante de resolver esta questão é aplicar os conceitos da
Prova dos nove fora, realizando uma SUTIL alteração na resposta final. Alteração esta que consiste em substituir resultado final por 9, caso o mesmo seja 0.
Por que esta alteração?
A prova dos nove fora nada mais é do que o resto da divisão inteira de um número ""n"" por 9. Desta forma, se um número ""n"" for um múltiplo de 9, logo, o resto da divisão será 0. Só que, pela lógica do seu código, só será permitido respostas entre 1 e 9. Então, se o resultado da prova dos nove fora for 0 devemos substitui-lo por 9.
OBSERVAÇÃO: Se o valor digitado for None - vazio - o programa deverá retornar o valor 0.
Com esta lógica podemos implementar o seguinte código:
def digital_root(n):
    return 0 if not n else 9 if (r := n % 9) == 0 else r


if __name__ == '__main__':
    number = int(input())
    resp = digital_root(number)

    print(resp)

Observe que este código captura o valor digitado e verifica se o mesmo é None. Caso positivo, retorna 0. Caso negativo, calcula o resto de sua divisão por 9. Caso o valor da expressão de atribuição atribuida à variável r seja 0 o valor será substituído por 9. Caso contrário, o valor da variável r será exibida.
NOTA:
ESTA QUESTÃO FOI DISPONIBILIZADA PELA PLATAFORMA CODEWARS, cujo link é: Sum of Digits / Digital Root
","
            2
        ","['\npython', 'python-3.x\n']"
511719,problema com try e except em um programa simples python,"
def questao3():
    while True:
        try:
            nome_produto = input('Digite o nome do produto: ')
            preco = float(input('Digite o preco desse produto: '))
            while preco <=0 or preco > 100:
                raise ValueError
            quantidade = int(input('Digite a quantidade do produto: '))
            while quantidade < 0 or quantidade > 1000:
                raise ValueError
        except KeyboardInterrupt:
            print('Encerrando o programa...')
            return -1
        except ValueError:
            print('valor invalido, o preco deve ser um valor maior q 0 e menor que 100.')
            print('a quantidade deve ser um inteiro entre 0 e 1000')
        else:
            lista = [nome_produto, preco, quantidade]
            return lista
print(questao3())

Gostaria de saber como eu faço p imprimir uma mensagem diferente pra cada caso, caso a resposta não possa ser convertida pra float(no preço) e não possa ser convertida pra int(na quantidade). ambos se encaixam no ValueError, mas n to sabendo imprimir uma mensagem pra cada. Gostaria de saber tb como faço pro programa insistir na mesma pergunta ate que a resposta seja a correta (ao inves de reiniciar o programa) desde já agradeço
","
Para obter o resultado desejado podemos utilizar um tratamento de erro específico para cada input da seguinte forma:
    def questao3():
    try:
        nome_produto = input('Digite o nome do produto: ')

        while True:
            preco = float(input('Digite o preco desse produto: '))
            if preco <= 0 or preco > 100:
                print('valor invalido, o preco deve ser um valor maior q 0 e menor que 100.')
            else:
                break

        while True:
            quantidade = int(input('Digite a quantidade do produto: '))
            if quantidade < 0 or quantidade > 1000:
                print('a quantidade deve ser um inteiro entre 0 e 1000')
            else:
                break
    except KeyboardInterrupt:
        print('Encerrando o programa...')
        return -1
    else:
        lista = [nome_produto, preco, quantidade]
        return lista

print(questao3())

Dessa forma o usuário ficará preso em cada entrada até que digite um valor valido e, caso erre receberá a mensagem de erro definida.
","
            -3
        ",,,['\npython\n']
511650,Comunicação socket Java e Python,"
Estou realizando um trabalho acadêmico onde estou desenvolvendo um app Android que controla uma simulação de robô feita em Python. Estou tentando fazer a comunicação através de um socket onde ao pressionar uma tecla no app é enviado o comando de uma certa letra para que o robô se movimente. Usei como base alguns exemplos encontrados aqui, mas acredito que não apliquei-os corretamente visto que o app (client) não está se conectando com a aplicação em python (server), gostaria de saber o que estou fazendo de errado.
Edit: Atualizando o código com o que foi sugerido no comentário, agora ao pressionar um botão com o evento, o app crasha. O código da clase CommSocket e da aplicação em Python estão atualizados. Adicionei também um trecho de log que coletei do celular no momento em que a aplicação crasha.
Melhorando o entendimento da situação, o teste é feito em um celular e a aplicação em python roda em um computador, ambos conectados na mesma rede.
Código da aplicação em Python:
import socket
import rospy
from geometry_msgs.msg import Twist
import sys, select, os
if os.name == 'nt':
  import msvcrt
else:
  import tty, termios

if __name__==""__main__"":

    HOST = '198.162.0.10'  # Endereco IP do Servidor
    PORT = 6789            # Porta que o Servidor esta
    queue = 5
    bufferSize = 256
    tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    orig = (HOST, PORT)
    tcp.bind(orig)
    tcp.listen(queue)

    try:
        print(msg)
        while(1):
#            key = getKey()
            con, cliente = tcp.accept()
            print ('Concetado por', cliente)
            key = con.recv(bufferSize)
            if key == 'w' :
                target_linear_vel = checkLinearLimitVelocity(target_linear_vel + LIN_VEL_STEP_SIZE)
                status = status + 1
                print(vels(target_linear_vel,target_angular_vel))
            elif key == 'x' :
                target_linear_vel = checkLinearLimitVelocity(target_linear_vel - LIN_VEL_STEP_SIZE)
                status = status + 1
                print(vels(target_linear_vel,target_angular_vel))
            elif key == 'a' :
                target_angular_vel = checkAngularLimitVelocity(target_angular_vel + ANG_VEL_STEP_SIZE)
                status = status + 1
                print(vels(target_linear_vel,target_angular_vel))
            elif key == 'd' :
                target_angular_vel = checkAngularLimitVelocity(target_angular_vel - ANG_VEL_STEP_SIZE)
                status = status + 1
                print(vels(target_linear_vel,target_angular_vel))
            elif key == ' ' or key == 's' :
                target_linear_vel   = 0.0
                control_linear_vel  = 0.0
                target_angular_vel  = 0.0
                control_angular_vel = 0.0
                print(vels(target_linear_vel, target_angular_vel))
            else:
                if (key == '\x03'):
                    break
            con.close()

CommSocket.java
import android.os.AsyncTask;
import android.os.Handler;

import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.SocketAddress;
import java.util.Arrays;

public class CommSocket extends AsyncTask<String, Integer, String>{
    private static final String hostname = ""localhost"";
    private static final String addr = ""198.162.0.10"";
    private static final int portaServidor = 6789;
    private IAsyncHandler mHandler;

    public CommSocket(IAsyncHandler mHandler) {
        this.mHandler = mHandler;
    }

    @Override
    protected String doInBackground(String... params) {
        try {
            Socket socket = new Socket(addr, portaServidor);
            //SocketAddress socket = new InetSocketAddress(addr, portaServidor);

            //dados enviados para o servidor
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));

            //Estou usando Arrays.toString(), somente para ele pegar todas as strings que passar no
            //método.
            bw.write(Arrays.toString(params));
            bw.newLine();
            bw.flush();

            //dados recebidos pelo servidor
            BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            String retorno =  ""Dados cadastrados "" + br.readLine(); //retornar ok
            socket.close();

            return retorno;
        }
        catch(IOException e) {
            return e.getMessage();
        }
    }

    @Override
    protected void onPostExecute(String result) {
        mHandler.postResult(result);
    }
}

MainActivity.java
import android.os.Bundle;
import android.view.View;
import android.view.Menu;
import android.widget.TextView;

import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.snackbar.Snackbar;
import com.google.android.material.navigation.NavigationView;

import androidx.navigation.NavController;
import androidx.navigation.Navigation;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.navigation.ui.NavigationUI;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;

import com.example.tcc_wheelchair.CommSocket;

public class MainActivity extends AppCompatActivity implements IAsyncHandler{

    private AppBarConfiguration mAppBarConfiguration;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //CommSocket task = new CommSocket(MainActivity.this);

        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        FloatingActionButton fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, ""Replace with your own action"", Snackbar.LENGTH_LONG)
                        .setAction(""Action"", null).show();
            }
        });
        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        NavigationView navigationView = findViewById(R.id.nav_view);
        // Passing each menu ID as a set of Ids because each
        // menu should be considered as top level destinations.
        mAppBarConfiguration = new AppBarConfiguration.Builder(
                R.id.nav_home, R.id.nav_gallery)
                .setDrawerLayout(drawer)
                .build();
        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);
        NavigationUI.setupActionBarWithNavController(this, navController, mAppBarConfiguration);
        NavigationUI.setupWithNavController(navigationView, navController);
    }
    
    public void eventClickStop (View view)
    {
        TextView texto = findViewById(R.id.textViewteste);
        texto.setText(""STOP"");

        CommSocket task = new CommSocket(MainActivity.this);
        task.doInBackground(""s"");
    }

    public void eventClickUp (View view)
    {
        TextView texto = findViewById(R.id.textViewteste);
        texto.setText(""UP ARROW"");

        CommSocket task = new CommSocket(MainActivity.this);
        task.doInBackground(""w"");
    }

    public void eventClickDown (View view)
    {
        TextView texto = findViewById(R.id.textViewteste);
        texto.setText(""DOWN ARROW"");

        CommSocket task = new CommSocket(MainActivity.this);
        task.doInBackground(""x"");
    }

    public void eventClickRight (View view)
    {
        TextView texto = findViewById(R.id.textViewteste);
        texto.setText(""RIGHT ARROW"");

        CommSocket task = new CommSocket(MainActivity.this);
        task.doInBackground(""d"");
    }

    public void eventClickLeft (View view)
    {
        TextView texto = findViewById(R.id.textViewteste);
        texto.setText(""LEFT ARROW"");

        CommSocket task = new CommSocket(MainActivity.this);
        task.doInBackground(""a"");
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onSupportNavigateUp() {
        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);
        return NavigationUI.navigateUp(navController, mAppBarConfiguration)
                || super.onSupportNavigateUp();
    }

    @Override
    public void postResult(String result) {
        //Neste método você pega o resultado da asynctask e aproveita de alguma forma
    }
}

interface IAsyncHandler {
    void postResult(String result);
}

Log do celular:
--------- beginning of crash
06-03 23:07:52.266  9374  9374 E AndroidRuntime: FATAL EXCEPTION: main
06-03 23:07:52.266  9374  9374 E AndroidRuntime: Process: com.example.tcc_wheelchair, PID: 9374
06-03 23:07:52.266  9374  9374 E AndroidRuntime: java.lang.IllegalStateException: Could not execute method for android:onClick
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:414)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.view.View.performClick(View.java:6608)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.view.View.performClickInternal(View.java:6585)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.view.View.access$3100(View.java:785)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.view.View$PerformClick.run(View.java:25921)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.os.Handler.handleCallback(Handler.java:873)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.os.Handler.dispatchMessage(Handler.java:99)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.os.Looper.loop(Looper.java:201)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.app.ActivityThread.main(ActivityThread.java:6864)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.lang.reflect.Method.invoke(Native Method)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:873)
06-03 23:07:52.266  9374  9374 E AndroidRuntime: Caused by: java.lang.reflect.InvocationTargetException
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.lang.reflect.Method.invoke(Native Method)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:409)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    ... 11 more
06-03 23:07:52.266  9374  9374 E AndroidRuntime: Caused by: android.os.NetworkOnMainThreadException
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1513)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:389)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.Socket.connect(Socket.java:621)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.Socket.connect(Socket.java:570)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.Socket.<init>(Socket.java:450)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at java.net.Socket.<init>(Socket.java:218)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at com.example.tcc_wheelchair.CommSocket.doInBackground(CommSocket.java:31)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    at com.example.tcc_wheelchair.MainActivity.eventClickUp(MainActivity.java:112)
06-03 23:07:52.266  9374  9374 E AndroidRuntime:    ... 13 more
06-03 23:07:52.357  1682  2970 W ActivityManager:   Force finishing activity com.example.tcc_wheelchair/.MainActivity
06-03 23:07:52.378  1682  1849 W BroadcastQueue: Background execution not allowed: receiving Intent { act=android.intent.action.DROPBOX_ENTRY_ADDED flg=0x10 (has extras) } to com.google.android.gms/.stats.service.DropBoxEntryAddedReceiver
06-03 23:07:52.378  1682  1849 W BroadcastQueue: Background execution not allowed: receiving Intent { act=android.intent.action.DROPBOX_ENTRY_ADDED flg=0x10 (has extras) } to com.google.android.gms/.chimera.GmsIntentOperationService$PersistentTrustedReceiver
06-03 23:07:52.382  1682  3467 D ActivityManager: report kill process: killerPid is:9374, killedPid is:9374
06-03 23:07:52.473  1682  2317 I WindowManager: WIN DEATH: Window{9e15302 u0 com.example.tcc_wheelchair/com.example.tcc_wheelchair.MainActivity}
06-03 23:07:52.474  1682  1776 I ActivityManager: Process com.example.tcc_wheelchair (pid 9374) has died: vis  TOP 
06-03 23:07:52.475  1682  1776 D ProcessManager: skip restart com.example.tcc_wheelchair because of low mem!
06-03 23:07:52.514  1682  1776 I Timeline: Timeline: App_transition_ready time:22000511
06-03 23:07:52.515  1682  1857 W ActivityManager: setHasOverlayUi called on unknown pid: 9374
06-03 23:07:52.522  1682  2448 I Timeline: Timeline: App_transition_ready time:22000519
06-03 23:07:52.537  1682  1929 V UiModeManager: switch night mode to 2
06-03 23:07:52.561  1682  1968 D ActivityManagerServiceInjector: Begin to report package foreground events...
06-03 23:07:52.564  1682  3467 I Timeline: Timeline: App_transition_ready time:22000560
06-03 23:07:52.576  1682  3467 I Timeline: Timeline: App_transition_ready time:22000572
06-03 23:07:52.621  1682  1929 V UiModeManager: switch night mode to 2
06-03 23:07:52.626  1682  3467 I Timeline: Timeline: App_transition_ready time:22000622
06-03 23:07:52.661  1682  1906 I Timeline: Timeline: App_transition_ready time:22000657
06-03 23:07:52.661  1682  1906 I Timeline: Timeline: App_transition_stopped time:22000657
06-03 23:07:52.668  1682  1857 I Timeline: Timeline: Activity_windows_visible id: ActivityRecord{c776715 u0 com.mi.android.globalFileexplorer/com.android.fileexplorer.activity.FileCategoryActivity t23447} time:22000665
06-03 23:07:52.713  1682  2969 I ActivityManager: Killing 7563:com.android.vending:download_service/u0a42 (adj 906): empty #17
06-03 23:07:52.740  1682  2436 D ConnectivityService: ConnectivityService NetworkRequestInfo binderDied(NetworkRequest [ TRACK_DEFAULT id=569, [ Capabilities: INTERNET&NOT_RESTRICTED&TRUSTED Unwanted:  Uid: 10042] ], android.os.BinderProxy@9406917)
06-03 23:07:52.741  1682  1946 D ConnectivityService: releasing NetworkRequest [ TRACK_DEFAULT id=569, [ Capabilities: INTERNET&NOT_RESTRICTED&TRUSTED Unwanted:  Uid: 10042] ] (release request)
06-03 23:07:52.741  1682  2970 D ProcessManager: skip restart com.android.vending:download_service because of low mem!
06-03 23:07:53.080  1682  2970 I ActivityManager: Killing 7770:com.google.android.gms.unstable/u0a30 (adj 906): empty #17
06-03 23:07:53.153  1682  2448 D ProcessManager: skip restart com.google.android.gms.unstable because of low mem!
06-03 23:07:55.004  1682  2448 W BaseMiuiPhoneWindowManager: keyCode:3 down:true eventTime:22002999 downTime:22002999 policyFlags:2b000002 flags:48 deviceId:-1 isScreenOn:true keyguardActive:false repeatCount:0
06-03 23:07:55.167  1682  2448 W BaseMiuiPhoneWindowManager: keyCode:3 down:false eventTime:22003163 downTime:22002999 policyFlags:2b000002 flags:48 deviceId:-1 isScreenOn:true keyguardActive:false repeatCount:0
06-03 23:07:55.253  1682  1921 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.miui.home/.launcher.Launcher (has extras)} from uid 1000

","
Tente isto:
Socket socket = new Socket(addr, portaServidor);

em vez disto:
 Socket socket = new Socket(hostname, portaServidor);

Se estiverem em máquinas diferentes (estou supondo que seu teste com o aplicativo Android ainda é no emulador na mesma máquina em que está o servidor) atribua o IP da máquina para addr no aplicativo e em HOST no script python do servidor. Tente usar o IP da rede local em vez de usar o localhost (ou 127.0.0.1) já que esses endereços não são acessíveis por outras máquinas na mesma rede. Também, ao testar o aplicativo em um aparelho celular lembre-se de conectar na mesma rede do servidor.
","
            -1
        ",,,"['\njava', 'android', 'python', 'socket\n']"
511642,Como desagrupar dados com o pandas?,"
Trabalho com um banco de dados que utiliza frequência, e quero desagrupar os dados de frequência e transformar em várias linhas. Segue imagem exemplo:

Quero fazer com que a linha 6, por exemplo, se transforme em 6 linhas iguais com os mesmos dados. Pensei em ""reescrever"" a planilha toda e salvar como um novo porque pode ser que só modificar as linhas dê algum problema.
","
Acredito que o que você busca pode ser alcançado com reindex e repeat:
df.reindex(df.index.repeat(df.FREQUENCIA))

Infelizmente não tenho como demonstrar a saida dos dados porque você subiu uma imagem como amostra e eu não tenho como ""copiar"" os dados dessa forma
","
            1
        ",,,"['\npython', 'banco-de-dados', 'pandas', 'powerbi\n']"
511423,"PYTHON - Como criar uma lista contendo cada elemento de uma lista anterior, dentro de outra lista [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Acho que o jeito mais fácil de descrever o problema é mostrando o objetivo, senão fica confuso.
Preciso transformar algo assim:
[['3 -1 2 0 2 0 -1 -1', '4 2 4 5 1 0 0 1 1'], ['6 -8 -8 15 15 0', '5 -1 3 2']]
Em algo assim:
[[['3 -1 2 0 2 0 -1 -1'], ['4 2 4 5 1 0 0 1 1']], [['6 -8 -8 15 15 0'], ['5 -1 3 2']]]
A ideia parece simples, mas não tô conseguindo separar isso nunca, sem perder a separação que tá no primeiro exemplo. É imperativo que eu tenha essa separação em 3 níveis (pq depois ainda tenho q separar os valores dentro de cada lista)
","
bom escrevir um codigo bem rapido aqui de acordo com que você queria, espero ter ajudando
arrays = [['3 -1 2 0 2 0 -1 -1', '4 2 4 5 1 0 0 1 1'], ['6 -8 -8 15 15 0', '5 -1 3 2']]

newArrays = list()
temp = list()

for array in arrays:
    for item in array:
        temp.append([item])

    newArrays.append(temp.copy())
    temp.clear()
    
print(newArrays)

","
            -1
        ",,,"['\npython', 'lista\n']"
511386,algoritmo ou raciocínio para obter conjuntos com médias próximas a partir de uma lista,"
Tenho a seguinte lista Cu, com 40 valores:
[1.37812, 1.25154, 1.2486 , 1.22726, 1.22645, 1.16835, 1.14414,
       1.1367 , 1.05915, 1.0446 , 1.03972, 1.03597, 0.98309, 0.94804,
       0.91199, 0.90972, 0.89231, 0.88951, 0.86708, 0.85137, 0.84879,
       0.84476, 0.83314, 0.83251, 0.8125 , 0.79611, 0.78567, 0.78422,
       0.77036, 0.76977, 0.72615, 0.71568, 0.70474, 0.69205, 0.65082,
       0.64072, 0.62434, 0.6147 , 0.56938, 0.56798])

Preciso separar essa lista em 10 conjuntos de 4 elementos cada, de forma que as médias dos conjuntos sejam o mais parecido possível entre si.
O que eu tentei foi: mesclar valores altos com valores baixos em todos os conjuntos. Já que a lista está em ordem descendente, criei uma lista order para ser o novo índice de cada elemento da lista Cu. Essa lista começa com pares em ordem crescente e termina com os ímpares em ordem decrescente. EX> [0,2,4,6,....,36,38,39,37,35,....3,1]
O código para isso é
evenArr = []
oddArr = []
order = []
i=0
j=dfbm.shape[0]

for i in range(j):
    if ((i % 2) == 0):
        evenArr.append(i)
    else:
        oddArr.append(i)

evenArr = sorted(evenArr)
oddArr = sorted(oddArr)
oddArr = oddArr[::-1]

order = evenArr + oddArr

Depois eu reordenei a lista Cu de acordo com o valor de order em um df o que me deu a seguinte configuração:

Assim, agora eu tenho os maiores e menores valores da lista alternando.
Em seguida, criei uma coluna a mais no df chamada mixture que dá o mesmo valor para cada 4 linhas e depois usei o df.groupby['mixture'].mean() para obter a média de cada grupo, que me deu a seguinte resposta:

O grande objetivo é que a média de cada mixture seja a mais parecida possível entre elas. Se a distribuição dos valores da lista Cu fosse simétrica, acredito que esse código seria bom, mas como a distribuição é assimétrica positiva, então essa raciocínio não é o melhor.
Penso que a solução esteja em fazer os conjuntos de forma que a média entre os elementos de cada conjunto seja próximo da média da lista Cu, que é 0.89.
Alguém poderia me dar uma sugestão de algoritmo ou de raciocínio para esse problema?
","
Acredito existirem muitas formas de abordar tal problema. Entretanto, muitas delas envolvem um método iterativo, como por exemplo com a minimização de uma função de custo.
Nesta pergunta podemos ver algumas formas de resolver. Escolhi a que eu achei mais simples, e converti para Python para testes. Ela fornece como saída uma boa aproximação inicial, e não envolve iteração. Acredito que vale a pena conferir as outras formas citadas na pergunta se lhe for necessário:
Basicamente, o algoritmo se resume nos seguintes passos:

Ordene a lista:

Lista_ordenada = cu.sort()


Divida em N sublistas, onde N é o número de elementos que você quer que cada sublista tenha. No seu caso, N = 4, e portanto cada sublista terá 10 elementos:

tamanho_das_sublistas = 10
numero_de_sublistas = int(len(cu) / tamanho_das_sublistas)
ListaDasSublistas = [cu[i*tamanho_das_sublistas : ((i+1) * tamanho_das_sublistas)]
                    for i in range(numero_de_sublistas)]


Obtenha a sublista com maior variância e a inverta. Acredito que com uma compreensão de lista dê para diminuir o tamanho dessa parte, mas achei mais legível assim:

listaVariancias = [] # Lista onde cada variância é salva
for sublista in ListaDasSublistas:
    media = sum(sublista)/len(sublista)
    variancia = sum((x-media)**2 for x in sublista) / len(sublista)
    listaVariancias.append(variancia)
indiceListaMenorVariancia = listaVariancias.index(max(listaVariancias)) #Obtendo o índice
ListaDasSublistas[indiceListaMenorVariancia].reverse() #Invertendo


Faça a matriz transposta, obtendo como resposta final 10 listas de 4 elementos cada:

solucao = [list(i) for i in zip(*ListaDasSublistas)]

Outros métodos de transposição podem ser encontrados aqui. Achei esse o mais simples de entender e sem a necessidade de imports.
No seu caso, podemos verificar que as médias foram:
medias = [sum(lista)/len(lista) for lista in solucao]
print(medias)

# O que imprime:
[0.89181, 0.86459, 0.8842574999999999, 0.882395, 0.8932500000000001, 0.885915, 0.904185, 0.9144175000000001, 0.9138899999999999, 0.9148149999999999]

Que é um resultado com valores bem mais próximos da média informada por você, 0.89.
A maior distância da média informada pode ser calculada com:
print(max([abs(i - 0.89) for i in medias])) # 0.025410000000000044

O que é um valor relativamente baixo para uma aproximação inicial: menos de 3% de 0.89.
","
            1
        ",,,"['\npython', 'pandas\n']"
511321,Automatizar excel em sequencia em python,"
Em um formulario google que transforma todos os dados preenchidos em planilha excel, fiz em python uma programação que copia os dados da primeira linha e preenche um formulario que preciso.
Existe a possibilidade desse programa ler a linha debaixo e preencher um proximo formulario?
    Planilha formulario.xlsx 
    NOME   IDADE  
  0  Joao    40 
  1  Maria   30 
  2  José    20

import pandas as pd

formulario = pd.read_excel(r'C:\formulario.xlsx', sheet_name='Planilha1')

nome, idade = formulario['NOME][0], str(formulario['IDADE'][0]

print(nome)
print(idade)

Hoje eu preciso toda vez executar o programa pra ele preencher com os dados da linha 0 do excel, e ao término, copiar a linha 1 pra zero e assim sucessivamente.
É possivel eu criar um input onde o programa antes de começar me pergunte de qual linha do excel eu quero buscar as informações?
",,,,,"['\npython', 'excel\n']"
511320,"Chave estrangeria não está exibindo corretamente na tela, mesmo com o método __ str __ DJANGO 3.2 [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 8 meses.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    







Mesmo com o método  colocado na classe CARGO, não está aparecendo como deveria quando mostra na identidade funcionários, como resolver esse problema? obg
","
Tente colocar o def str fora da classe meta
","
            -4
        ",,,"['\npython', 'django\n']"
511305,Como fazer um sprite ficar com tom vermelho e voltar à cor original?,"
Estou recriando um jogo em pygame como um hobby, nesse jogo tenho uma nave que pode dar um tiro único ou ficar atirando se segurar o botão, mas a nave irá esquentar e ganhar uma coloração vermelha. Mas estou com muita dificuldade em achar um jeito de fazer isso, eu até consegui fazer a nave ficar com um tom vermelho, mas o que pega é fazer ela voltar ao normal.
Para isso eu pensei em apenas tirar a opacidade apenas da surface vermelha, mas nenhum resultado satisfatório.
Segue abaixo parte do código da classe:
class Player(pygame.sprite.Sprite):
    def __init__(self, screen):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load(util.decode_b64_img(ship)).convert_alpha()
        self.image = pygame.transform.scale(self.image, (50, 40))

        self.current_heat = 0
        
        self.red_surf = pygame.Surface(self.rect.size, SRCALPHA)
        self.alpha = 255
        self.red_surf.fill((255, 0, 0, self.alpha))

    def heat_cannon(self, heat_value):
        self.current_heat = min(self.current_heat + heat_value, self.resistance)

        self.red_surf.fill((0, 5, 5, 0))
        self.image.blit(self.red_surf, (0, 0), special_flags=BLEND_RGBA_SUB)

    def cool_down(self):
        self.current_heat = max(self.current_heat - self.cool_down_rate, 0)

        self.alpha = max(self.alpha-5, 0)
        self.red_surf.fill((0, 0, 0, self.alpha))
        self.image.blit(self.red_surf, (0, 0))


O problema está no método cool_down, que a red_surf deveria ficar mais transparente e não fica. Ao meu ver, é por causa do blend mode que está no método heat_cannon.
Esse é apenas parte do código, mas vou deixar aqui o link do repositório: https://github.com/HugoPFe/Project-Asteroids
Teria algum jeito de contornar esse blend mode e fazer a surface ficar transparente?
",,,,,"['\npython', 'pygame', 'game\n']"
511274,Como transformar a cada dois registros de um DatFrame em um só no Python com base em duas colunas,"
Eu tenho um DataFrame em que a cada duas linhas referem-se a um registro apenas. Preciso fazer uma união dessas linhas com base no ""id"" e no ""mandante"" para transformar em uma só. A coluna ""mandante"" tem valor 1 indicando que o time é o mandante.
lst = [[""1001"",""1"",""LA Lakers"", 105, 12],[""1001"",""0"",""Utah Jazz"", 99, 10], [""1002"",""1"",""Chicago Bulls"", 95, 8], [""1002"",""0"",""Orlando Magic"", 90, 9], [""1003"",""1"",""Denver Nuggets"", 101, 17], [""1003"",""0"",""Miami Heat"", 84, 6]]
df = pd.DataFrame(lst, columns = [""id"", ""mandante"", ""time"", ""pontuacao"", ""faltas""])

   id    mandante  time            pontuacao  faltas
0  1001  1         LA Lakers       105        12   
1  1001  0         Utah Jazz       99         10
2  1002  1         Chicago Bulls   95         8   
3  1002  0         Orlando Magic   90         9
4  1003  1         Denver Nuggets  101        17   
5  1004  0         Miami Heat      84         6

Preciso que o DataFrame fique da seguinte forma:
   id    mandante       visitante       pts_mandante  pts_visitante  flts_mandante  flts_visitante
0  1001  LA Lakers      Utah Jazz       105           99             12               10
2  1002  Chicago Bulls  Orlando Magic   95            90             8                9   
4  1003  Denver Nuggets Miami Heat      101           84             17               6

Não tem problema se ficar com a coluna repetida, depois eu excluo com facilidade. O principal é conseguir jogar todas as informações de mesmo ""id"" em um registro index.
","
Uma forma seria dividir o DF em 2, entre mandantes e visitantes, renomear as colunas de cada DF de acordo como você deseja e com merge uni-los novamente, desta forma:
mask = df['mandante'] == '1'

df = df.drop(columns = ['mandante'])

mandante = df.loc[mask]
visitante = df.loc[~mask]

colunas_mandante = ['id', 'mandante', 'pts_mandante',  'flts_mandante']
colunas_visitante = ['id', 'visitante', 'pts_visitante',  'flts_visitante']


mandante.columns = colunas_mandante
visitante.columns = colunas_visitante

df_new = mandante.merge(visitante, on='id')

#saida:

    id          mandante        pts_mandante    flts_mandante   visitante       pts_visitante   flts_visitante
0   1001        LA Lakers       105             12              Utah Jazz       99              10
1   1002        Chicago Bulls   95              8               Orlando Magic   90              9
2   1003        Denver Nuggets  101             17              Miami Heat      84              6

","
            5
        ","
Uma outra forma bem simples de obter esse resultado é utilizando o método pivot do pandas.
Basicamente ele remodela o dataframe a partir de valores de indice e colunas fornecidos por você.
Exemplo:
import pandas as pd

lst = [
   [""1001"",""1"",""LA Lakers"", 105, 12],
   [""1001"",""0"",""Utah Jazz"", 99, 10],
   [""1002"",""1"",""Chicago Bulls"", 95, 8],
   [""1002"",""0"",""Orlando Magic"", 90, 9],
   [""1003"",""1"",""Denver Nuggets"", 101, 17],
   [""1003"",""0"",""Miami Heat"", 84, 6]
]

df = pd.DataFrame(lst, columns = [""id"", ""mandante"", ""time"", ""pontuacao"", ""faltas""])

print(df)

# Output:
#      id mandante            time  pontuacao  faltas
# 0  1001        1       LA Lakers        105      12
# 1  1001        0       Utah Jazz         99      10
# 2  1002        1   Chicago Bulls         95       8
# 3  1002        0   Orlando Magic         90       9
# 4  1003        1  Denver Nuggets        101      17
# 5  1003        0      Miami Heat         84       6

Utilizando o método pivot, selecione duas colunas. A primeira será utilizada como indice e a segunda é utilizada para ""dividir"" os valores das outras colunas, como se fosse um segundo nivel de coluna.
df_pivot = df.pivot(index='id', columns='mandante')

print(df_pivot)

# Output:
#                    time                 pontuacao      faltas    
# mandante              0               1         0    1      0   1
# id                                                               
# 1001          Utah Jazz       LA Lakers        99  105     10  12
# 1002      Orlando Magic   Chicago Bulls        90   95      9   8
# 1003         Miami Heat  Denver Nuggets        84  101      6  17


Para deixar o dataframe como o esperado, basta renomear as colunas.
colunas = [
   'visitante', 'mandante', 'pts_visitante',
   'pts_mandante', 'flts_visitante', 'flts_mandante'
]

# Renomeando o nome das colunas no Dataframe
df_pivot.columns = colunas

# Resetando os indices criados na etapa de pivotagem.
df_pivot = df_pivot.reset_index()

print(df_pivot)

# Output:
#      id      visitante        mandante  pts_visitante  pts_mandante  flts_visitante  flts_mandante
# 0  1001      Utah Jazz       LA Lakers             99           105              10             12
# 1  1002  Orlando Magic   Chicago Bulls             90            95               9              8
# 2  1003     Miami Heat  Denver Nuggets             84           101               6             17


Referências:

https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot

","
            2
        ","['\npython', 'pandas', 'dataframe\n']"
511255,Gerar vários arrays diferentes contendo números aleatórios,"
Estou desenvolvendo um programa e preciso gerar um array de 16 elementos, em que cada entrada é 0, 1 ou 2; e depois preciso verificar se esse array satisfaz certas condições. Para gerar este array, estou fazendo:
ni = np.array(np.random.randint(0,3))
for i in range(15):
    n1 = np.array(np.random.randint(0,3))
    ni = np.append(ni,n1)

O output é:
array([0, 0, 1, 0, 1, 2, 2, 0, 2, 1, 0, 1, 2, 1, 0, 2])

O problema é que este método as vezes gera arrays repetidos, o que atrapalha um pouco a performance do meu problema. Existe algum jeito de garantir que sempre será gerados novos arrays? No caso o array do output não poderia mais ser gerado.
","
No fundo você quer ""gerar N coisas aleatórias sem repetir"" (vários arrays diferentes), então uma alternativa é seguir esta ideia:

gerar todas as possibilidades (supondo que a quantidade total é 'X')
escolher N índices aleatórios entre zero e X, e pegar as possibilidades que estão nestes índices

Para o primeiro passo, você pode usar itertools.product, e para o segundo passo, use random.sample para gerar os índices, e itertools.slice para pegar o elemento que está naquele índice. Algo assim:
import numpy as np
from itertools import product, islice
from random import sample

# números que podem estar no array
nums = range(0, 3)
# tamanho dos arrays
tamanho_arrays = 16
# gerar 20 arrays diferentes
quantidade = 20
# quantidade total de arrays possíveis
total_arrays_possiveis = len(nums) ** tamanho_arrays

# sample pega 20 índices aleatórios entre zero e o total de arrays possíveis
for indice in sample(range(total_arrays_possiveis), k=quantidade):
    # gera as possibilidades
    todos_possiveis = product(nums, repeat=tamanho_arrays)
    # pega somente a que está na posição do índice
    lista = next(islice(todos_possiveis, indice, indice + 1))
    array = np.array(lista) # gera o np.array
    print(array)

Usei itertools porque seria bem custoso gerar todas as possibilidades e mantê-las em memória. No seu caso específico, há três valores possíveis (os números 0, 1 e 2), em um array com 16 elementos, então o total de possibilidades é 316 (ou seja, 43.046.721 de possibilidades - mais de quarenta e três milhões de arrays possíveis).
Usando itertools, os elementos só são obtidos quando necessário, economizando memória (e tempo também, pois gerar tudo demoraria muito).
Com sample eu garanto que não haverá índices repetidos, e assim garanto que o array a ser obtido nunca será igual aos que já foram pegos anteriormente.

Guardar os arrays já obtidos em uma lista e ir vendo se os novos já existem nesta lista (como sugerido na outra resposta) também é uma opção, porém pode não escalar bem se a quantidade de arrays a serem gerados for muito grande. Por exemplo, se você quiser gerar 10 mil arrays diferentes, vai chegar uma hora que a lista terá, por exemplo, 9 mil arrays. Aí você terá que percorrer esses 9 mil pra ver se é repetido. Depois, percorre 9001, depois 9002, etc. É um algoritmo bem ineficiente (também chamado jocosamente de Shlemiel the painter’s algorithm) - claro que para valores pequenos a diferença será ínfima, mas lembre-se que ""para valores pequenos, tudo é rápido"".

E vale lembrar que itertools.product gera todos os arrays possíveis (inclusive aqueles em que todos os números são iguais). Mas isso não é um ""bug"", já que com randint isso também pode acontecer (só tem uma chance menor, mas sendo ""aleatório"", não é impossível).
","
            2
        ","
Isso é um problema de algoritmo, e vejo diversas opções.
Para exemplificar, vou trabalhar com um array de 2 elementos:

se você pensar, esse array pode ser representado por um numero que será escrito na base 3, sendo assim, os possíveis valores (para 2 dígitos)
0(00), 1(01), 2(02), 3(10), 4(11), 5(12), 6(20), 7(21), 8(22)

Sendo assim, voce pode gerar um número aleatório entre 0 e 8 (3n - 1) e converter ele para array.
Para facilitar, vamos falar de um array de 3 posições (numero entre 0 e 26):
number # número aleatório entre 0 e 26
array[2] = number % 3
number = number / 3
array[1] = number % 3
array[0] = number / 3

Assim, você pode manter o registro de arrays mantendo um registro do numero em um array de cache.
cache # array de 3^n posições inicializado com false em todas as posições

do
  number = random(0, 3^n)
while cache[number] # o numero tem que ser regerado ate se encontrar um que nunca foi usado

cache[number] = true

array = gerar_array_from_number(number)


Gerar um string a partir do array e usar ela para checar se o array já foi gerado novamente:

string = array.join("""")


utilizar outra função para gerar um hash do array e checar se ele já foi gerado anteriormente


Outra opção é gerar vários números entre 0 e 3n - 1, e convertê-los para a base 3, obtendo assim o respectivo array:
import numpy as np
from random import sample

def gerar_array(x, base, size):
    digits = []
    while x:
        digits.insert(0, x % base)
        x //= base
    if len(digits) < size:
        digits = ([0] * (size - len(digits))) + digits
    return np.array(digits)

# números que podem estar no array estão entre 0 e n - 1
n = 3

# tamanho dos arrays
tamanho_arrays = 16
# gerar 20 arrays diferentes
quantidade = 20

for i in sample(range(n ** tamanho_arrays - 1), k=quantidade):
    print(gerar_array(i, n, tamanho_arrays))

sample garante que os números gerados não se repetem, assim nem precisaria de um cache para saber se são repetidos.
","
            2
        ","['\npython', 'random\n']"
511189,ERRO DE LÓGICA/FRAÇÃO EM PYTHON(COMO RESOLVER) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    




Nesse código de caixa de mercado, caso digite 0 na variável pv irá haver um erro no ultimo print na variavel vp/pv, pois não há como caucular um numero x dividido por zero, como faço pra que caso a pessoa digite 0 não haja erro ?(resolver o problema com códigos ou lógica de matemática ok)

t = '---'
l = '    ' * 9
print(l, 'Caixa numérico')
p = float(input('Qual o preço ?R$'))
d = float(input('Desconto por cento:'))
pv = int(input('Se deseja parcelar, coloque em quantas vezes, se não, digite ""1"":'))
v = p - (p / 100) * d
vp = p + (p / 100) * (20-d)
print('\nO produto com valor de {}, sairá por {}R${:.2f}{} a vista no desconto de {}%'.format(p, t, v, t, d))
print('ou {}R${:.2f} parcelado{} em {}{}x de R${:.2f}{}, no desconto de {}%'.format(e, vp, e, e, pv, vp/pv, e, d-20))```

","
Você deve utilizar if e else
if Variavel == 0:

print(""..."")

else:

print(""..."")

Se você ainda não aprendeu if e else recomendo acessar https://www.devmedia.com.br/python-estrutura-condicional-if-else/38217 Para entender melhor.
","
            -1
        ",,,"['\npython', 'lógica\n']"
511153,ModuleNotFoundError: No module named 'bs4' e não consigo acessar o modulo bs4,"
Estou tentando importar o modulo bs4 em um código e toda vez que eu tento o seguinte erro é exibido
ModuleNotFoundError: No module named 'bs4'

Teoricamente o modulo bs4 já foi instalado e quando eu executo no terminal o comando pip install bs4 aparece a seguinte mensagem:
C:\Users\gabri>pip install bs4
Requirement already satisfied: bs4 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (0.0.1)
Requirement already satisfied: beautifulsoup4 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from bs4) (4.9.3)
Requirement already satisfied: soupsieve>1.2 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from beautifulsoup4->bs4) (2.2.1)

O modulo requests está funcionando e quando eu tento instalar ele dá a seguinte, mensagem. Estava tentando comparar com o modulo bs4 para ver se estavam instalados em locais diferentes mas não seguinte encontrar o erro
C:\Users\gabri>pip install requests
Requirement already satisfied: requests in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (2.25.1)
Requirement already satisfied: idna<3,>=2.5 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from requests) (2.10)
Requirement already satisfied: certifi>=2017.4.17 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from requests) (2020.12.5)
Requirement already satisfied: chardet<5,>=3.0.2 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from requests) (4.0.0)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from requests) (1.26.5)

minha versão atual do python é essa:
Python 3.9.5

minha versão atual do pip é essa:
pip 21.1.2 from c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages\pip (python 3.9)

E esse é o código que estou tentando usar o comando e está dando erro:
import requests as r
from bs4 import BeautifulSoup

try:
    result = r.get('https://www.google.com.br/search?q=Python')
    
except Exception as err:
    print(""Something went wrong: "",err)
    
else:
    response = result.text
    soup = BeautifulSoup(response,'html.parser')
    
    print(soup.title)
    print(soup.title.string)

If i try to install bs4 using the commanda pip3 install bs4 i get this messages:
Requirement already satisfied: bs4 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (0.0.1)
Requirement already satisfied: beautifulsoup4 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from bs4) (4.9.3)
Requirement already satisfied: soupsieve>1.2 in c:\users\gabri\appdata\local\programs\python\python39\lib\site-packages (from beautifulsoup4->bs4) (2.2.1)

Não sei se isso ajuda de alguma forma mais o python 3.9 parece estar nesse caminho aqui
C:\Users\gabri\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.9

Segue uma foto de como está configuradas as variáveis de ambiente

","
Com a ajuda do @stack.cardoso eu consegui encontrar uma resposta. Basicamente a minha IDE estava buscando o modulo bs4 em um path diferente do que ele estava instalado. Para resolver isso eu mudei o path que minha IDE buscava as importações nas proprias configurações da IDE. Agora ela está sempre buscando nas mesmas pastas que o pip instala os módulos. Para descobrir qual o path que a IDE estava usando eu digitei no console da iDE:
import sys
for sys in sys.path:
    print(sys)    

","
            1
        ","
Oi. Onde acho esse console, estou trabalhando com bs4 e dar erro, trabalhando com vscode, pelo terminal, e pasta PATH não acho, como busco? Ou que devo fazer
Erro mensagem de from bs4 nao existe
import requests
from bs4 import BeautifulSoup
Coletar a primeira página da lista de artistas
page = requests.get('https://web.archive.org/web/20121007172955/https://www.nga.gov/collection/anZ1.htm')
Criar o objeto BeautifulSoup
soup = BeautifulSoup(page.text, 'html.parser')
","
            -1
        ","['\npython', 'beautifulsoup\n']"
511037,exibir um único valor da classe Django,"
Gostaria de saber como faço pra mostrar no meu template html, um único personagem de meu model ""Personagem"".
esse é meu models.py, inseri 10 personagens nessa classe via admin do django:
arquivo models.py
from django.db import models

# Create your models here.
class Personagem(models.Model):
    Nome = models.CharField(max_length=255)
    Idade = models.IntegerField(blank=True, null=True)
    Espécie = models.CharField(max_length=255)
    Gênero = models.CharField(max_length=255)
    Ocupação = models.CharField(max_length=255)
    Descrição = models.TextField(max_length=999)

    def __str__(self):
        return self.Nome

existe um personagem que seu campo nome é ""Finn"", queria exibir esse valor no meu html, esse é meu template:
arquivo char_info.html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <title>Adventure Time</title>
    {% include 'parciais/head.html' %}
</head>
<body>
    <h1>{{ personagens.Nome }} </h1>
    
</body>
</html>

queria que nesse {{ personagens.Nome }} aparecesse o nome do personagem, porém não sei como fazer, não está retornando nada desse meu código.
minha views.py
from django.shortcuts import render, get_object_or_404
from .models import Personagem


def index(request):
    personagens = Personagem.objects.all()
    return render(request, 'home/index.html', {
        'personagens': personagens
    })


def Finn(request):
    personagens = Personagem.objects.get(Nome=personagens.Nome)
    return render(request, 'home/char_info.html', {
        'personagens': personagens
    })

arquivo urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('Finn', views.Finn, name='Finn'),
]

infelizmente não achei nenhum exemplo assim na net, só achei usando o loop {% for %}, e exibindo todos os valores, como faço pra pegar um único valor de um único campo da classe.?
","
Nessa linha:
personagens = Personagem.objects.get(Nome=personagens.Nome)

Passe como parametro o nome do personagem dessa forma:
personagens = Personagem.objects.get(Nome='Finn')

Caso você queira que a busca do personagem seja dinâmico, você deve especificar no parâmetro na url. Na urlpatterns substitua path('Finn') por path(<str:nome>) e na sua função Finn você adiciona o nome como parâmetro.
def Finn(request, nome):
    personagens = Personagem.objects.get(Nome=nome)
    return render(request, 'home/char_info.html', {
        'personagens': personagens
    })

","
            1
        ",,,"['\npython', 'django\n']"
511033,Tkinter e classe,"
Sou iniciante em classes e tkinter e estou tendo um problema que acho ser por pouco conhecimento meu em POO.
No código abaixo, apenas uma label está executando, nem os botoes nem nada executam, oq pode ser? Dei uma diminuida na lista para caber aq na pergunta. Tive uns erros de identação ao postar o codigo aq, me desculpem.
from tkinter import *
import tkinter as tk
from tkinter import ttk

currencys_id = ['AED', 'AFN', 'ALL', 'AMD']

class CurrencyConverter(tk.Frame):
def __init__(self, master):
    super().__init__(master)
    self.master = master
    self.font = ('Courier',15,'bold')
    
    # Labels
    self.subtitle = tk.Label(self, text='Welcome to Real Time Currency Converter', font=self.font, fg='#ffffff', bg='#245985')
    self.toLabel = tk.Label(self, text='TO', font=self.font)
    
    # Combobox
    self.toCurrency = ttk.Combobox(self, values=currencys_id, font=self.font, width=10, justify='center', state=""readonly"")
    self.toCurrency.set('BRL')
    #self.toCurrency.bind('<<ComboboxSelected>>', currencyToConvert)
    
    self.fromCurrency = ttk.Combobox(self, values=currencys_id, font=self.font, width=10, justify='center', state=""readonly"")
    #self.fromCurrency.bind('<<ComboboxSelected>>', currencyConverted)
    
    # Entrys
    self.inputValue = tk.Entry(self, font=self.font, width=8, justify='center')
    self.inputValue.insert(0, '1')
    
    self.outputValue = tk.Entry(self, font=self.font, width=8, justify='center')
    
    # Buttom
    self.convertButtom = tk.Button(self, text='Convert', font=self.font, width=8, bg='#097FDF', fg='#ffffff')
    
    # Pack()
    self.pack()
    self.subtitle.pack()
    self.toLabel.pack()
    self.toCurrency.pack()
    self.fromCurrency.pack()
    self.inputValue.pack()
    self.outputValue.pack()
    self.convertButtom.pack()
    
    # position
    self.toLabel.place(x=230, y=100)
    self.toCurrency.place(x=50, y=100)
    self.fromCurrency.place(x=300, y=100)
    self.inputValue.place(x=70, y=140)
    self.outputValue.place(x=320, y=140)
    self.convertButtom.place(x=195, y=160)
    
    #def clickButtom(self):
        
def main(): 
root = tk.Tk()
app = CurrencyConverter(master=root)
root.title('Currency Converter')
root.maxsize(500, 200)
app.mainloop()

if __name__ == '__main__':
    main()
    

","
Conforme Elton Nunes comentou, ao ""inutilizar"" o place do seu código ele já apresenta mudanças. como nas imagens a seguir:


Mas se a sua intenção for apenas essa, apesar de ser uma solução ruim, ela funciona. No entanto se vc estiver pensando na funcionalidade do seu conversor, se perguntando do porquê dele não estar funcionando, é por causa do seu código ainda estar muito superficial, não há atribuições de eventos para o click, por exemplo:
import tkinter as tk
from tkinter import ttk, messagebox

[...]

# Buttom
        def nova_caixa():
            messagebox.showinfo('Olá', 'Eu sou o Goku!')

        self.convertButtom = tk.Button(self, text='Convert', font=self.font, width=8, bg='#097FDF', fg='#ffffff',
                                       command=nova_caixa)


Espero que de alguma forma isso possa ter esclarecido alguma coisa.
","
            0
        ","
O problema esta no uso de dois gerenciadores de layout que esta sendo usado no script
pack é um, e place é outro, o mesmo objeto não deve usar os dois ao mesmo tempo, no momento não recordo a forma correta de usar place, se vc comentar esta parte o layout feito com pack ira funcionar

fiz um teste rapido com o place, e o tamanho do frame realmente influencia
from tkinter import *

r = Tk()
r.minsize(200,200)

f = Frame(r, width=100, height=100, bg='#aabbcc')
f.pack()

l1 = Label(f, text='teste1')
l2 = Label(f, text='teste2')

l1.place(x=0, y=0)
l2.place(x=90, y=90)

r.mainloop()

ao rodar o codigo vc podera ver que a label l2 fica cortada. Isso mostra que em seu codigo deve especificar um tamanho para o frame
","
            0
        ","['\npython', 'orientação-a-objetos', 'classes', 'tkinter\n']"
510974,Como usar range de letras do alfabeto em python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



estou tentando fazer um programa que faça as letras do alfabeto em triangulo tipo assim, o usuário entra com um numero inteiro e o resultado é exibido em forma de triangulo.
7:
A

BB

CCC

DDDD

EEEEE

FFFFFF

GGGGGGG

4:
A

BB

CCC

DDDD

Já tentei usar o laço for mas não consegui. Segue minha tentativa:
N = int(input())

if N == 1:
    print('A')
if N == 2:
    print('A\n'
          'BB')
if N == 3:
    print('A\n'
          'BB\n'
          'CCC')
if N == 4:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD')
if N == 5:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE')
if N == 6:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF')
if N == 7:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG')
if N == 8:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH')
if N == 9:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n')
if N == 10:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ')
if N == 11:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n')
if N == 12:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n')
if N == 13:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n')
if N == 14:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN')
if N == 15:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n')
if N == 16:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n')
if N == 17:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n')
if N == 18:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n')
if N == 19:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n')
if N == 20:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n')
if N == 21:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n')
if N == 22:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n'
          'VVVVVVVVVVVVVVVVVVVVVV\n')
if N == 23:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n'
          'XXXXXXXXXXXXXXXXXXXXXXX\n')
if N == 24:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n'
          'XXXXXXXXXXXXXXXXXXXXXXX\n'
          'WWWWWWWWWWWWWWWWWWWWWWWW\n')
if N == 25:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n'
          'XXXXXXXXXXXXXXXXXXXXXXX\n'
          'WWWWWWWWWWWWWWWWWWWWWWWW\n'
          'YYYYYYYYYYYYYYYYYYYYYYYYY\n')
if N == 26:
    print('A\n'
          'BB\n'
          'CCC\n'
          'DDDD\n'
          'EEEEE\n'
          'FFFFFF\n'
          'GGGGGGG\n'
          'HHHHHHHH\n'
          'IIIIIIIII\n'
          'JJJJJJJJJJ\n'
          'KKKKKKKKKKK\n'
          'LLLLLLLLLLLL\n'
          'MMMMMMMMMMMMM\n'
          'NNNNNNNNNNNNNN\n'
          'OOOOOOOOOOOOOOO\n'
          'PPPPPPPPPPPPPPPP\n'
          'QQQQQQQQQQQQQQQQQ\n'
          'RRRRRRRRRRRRRRRRRR\n'
          'SSSSSSSSSSSSSSSSSSS\n'
          'TTTTTTTTTTTTTTTTTTTT\n'
          'UUUUUUUUUUUUUUUUUUUUU\n'
          'XXXXXXXXXXXXXXXXXXXXXXX\n'
          'WWWWWWWWWWWWWWWWWWWWWWWW\n'
          'YYYYYYYYYYYYYYYYYYYYYYYYY\n'
          'ZZZZZZZZZZZZZZZZZZZZZZZZZZ\n')

Como obtenho esse mesmo resultado usando laço for?
","
O módulo string da biblioteca padrão python define algumas constantes entre as quais string.ascii_uppercase é a sequencia das letras maiúsculas ABCDEFGHIJKLMNOPQRSTUVWXYZ.
É possível enumerar e iterar por uma fatia, do tamanho escolhido pelo usuário, da sequencia de letras e a cada elemento iterado o imprimir repetidamente com o auxilio do operador * de repetição sequencias:
import string

N = int(input(""Digite a altura da pirâmide:""))
#Itera pela fatia de caracteres onde i é índice e c é o caractere com o índice começando em 1... 
for i,c in enumerate(string.ascii_uppercase[:N], 1):
  print(c*i);         #...imprime o caractere o repetindo i vezes.

Teste o código no IdeOne
","
            3
        ","
Pra isso você pode usar as funções globais do Python como a chr.
# Quantidade de linhas
value = int(input(""Digite: ""))

# Executa a quantidade de vezes digitada
# inicialmente, para cada nova iteração
# ele printa uma nova letra
for i in range(value):
    for j in range(i + 1):
        # Mostra o caracter n vezes
        print(chr(65 + i), end="""") # 65 = 'A' na tabela ASCII
    print("""")

","
            0
        ","['\npython', 'python-3.x\n']"
510933,Descompactar .zip corrompido com python,"
Tenho a seguinte situação, preciso descompactar arquivos "".zip"", o código que estou usando é esse:
from zipfile import ZipFile
from tkinter import Tk
from tkinter import filedialog as dlg
from tkinter.filedialog import askopenfilename
import os, sys

password = b'senha123'

destino = 'C:/Users/usuario/Desktop/teste1'

Tk().withdraw() #Torna a janeka do tk invisivel

arq = askopenfilename() #seleciona um arquivo
zf = ZipFile(arq ,'r')

zf.extractall(path=destino, pwd=password)

zf.close()
print('Extração feita...')

Os arquivos "".zip"" contém fotos dentro dele, mas às vezes algumas fotos vem corrompidas, o que faz que acabe corrompendo o arquivo "".zip"" também, porém se eu usar o 7-Zip manualmente eu consigo descompactar o zip normalmente, mas com o pyhton ele dá esse erro aqui:
Traceback (most recent call last):
  File ""C:\Users\usuario\Documents\Cah\Pyton\proj_zip\teste_extracao_zips.py"", line 17, in <module>
    zf = ZipFile(arq ,'r')
  File ""C:\Users\usuario\AppData\Local\Programs\Python\Python38\lib\zipfile.py"", line 1267, in __init__
    self._RealGetContents()
  File ""C:\Users\usuario\AppData\Local\Programs\Python\Python38\lib\zipfile.py"", line 1334, in _RealGetContents
    raise BadZipFile(""File is not a zip file"")
zipfile.BadZipFile: File is not a zip file

Até agora não consegui achar solução para isso, tentei usar a biblioteca py7zr, shutil e pyunpack mas não consegui nenhum resultado, poderiam me ajudar com isso?
","
se você tem outro programa que consegue abrir o zip, o melhor a fazer é descompactar em outro lugar e recriar o zip;
O trabalho de investigar  que quebrou com o zipfile do Python ao abrir esses arquivos, e torna-lo ""tolerante"" - seja ao defeito, seja a mudança de compatibilidade da versão nova seria ordens de grandeza maior do que
simplesmente criar um zip que funciona.
Se você recebe os arquivos zip com defeito com frequência, o que dá pra fazer é em vez de usar a ziplib, chamar um programa externo de descompactação, como o 7zip, usando  subprocess.run (o primo rico do os.system). Mas é isso. Se for um arquivo só, ou poucos arquivos quebrados, melhor só recriar os arquivos e usar a zipfile mesmo.
","
            1
        ",,,"['\npython', 'arquivo-zip\n']"
510930,Como mudo o local da importação dos módulos no python?,"
import pygame


O programa da esse erro, dizendo que não tem nenhum modulo

Só funciona quando mostro o local para o programa
Estou iniciando meu estudos na linguagem.
Meu python e vscode estão instalado no disco D:, não estou entendo pq os módulos estão sendo importados no disco C:.
Gostaria de mudar o local da importação, para não ficar mostrando todo vez o local do arquivo
","
Você tem que aprender sobre ""virtual environments"": são um recurso usado pela linguagem para cada projeto ter suas próprias bibliotecas, sem que haja problemas de conflitos no sistema.
Assim, se você tem um jogo que depende do pygame 1.8, e outro que depende do pygame 2.0, pode ter os dois instalados no PC.
Além disso, usando os virtualenvs, todas as dependencias do projeto são encontradas automaticamente.
Em geral as IDEs e editores mais avançados, como o vscode oferecem suporte a virtualenv - mas claro, é um mecanismo que não depende de IDEs - apenas da linguagem, e pode ser ativado via terminal, ou especificado em um atalho pra rodar seu programa, se criar um link pra ele rodar direto.
O que um virtualenv faz é colocar cópias e atalhos para o Python e as bibliotecas do sistema dentro de uma pasta - que em geral mantemos junto com o projeto (mas pode ficar em qualquer lugar). Antes de trabalhar com o projeto, ou executar ele, ""ativamos"" o virtualenv. Aí, você instala qualquer dependencia do seu projeto direto dentro do virtualenv (mesmo se já tiver instalado no Python do sistema, instale de novo). Depois, conforme você for entendendo dos projetos, especifica essa dependência nos arquivos de configuração do próprio projeto - assim, o Python pode instalar automaticamente as dependencias pra qualquer pessoa que for instalar o seu projeto.
Para fazer na linha de comando: abra o computador, e vá com o cmd até a pasta do seu projeto (com o comando ""cd""). Chegando lá, digite python -m venv env - o Python vai criar uma pasta ""env"" com tudo lá dentro. Na sequencia, ative o virtualenv: env\scripts\activate.bat no Windows ou  source env\bin\activate no Linux/Mac.  Aí pode digitar pip install pygame que ele será instalado.
Paa trabalhar com virtuaenv no vscode, tem um guia aqui: https://code.visualstudio.com/docs/python/environments
","
            2
        ",,,"['\npython', 'visual-studio-code\n']"
510898,Como enviar um parâmetro do JavaScript para o Python?,"
Como eu envio um parâmetro para ser lido por uma função no Python?
Tenho a seguinte função em Python:
@app.route(""/add"")
def add(book_id):
    """"""Atribui o ID de um livro ao ID do usuário""""""
    db.execute(""""""
        INSERT INTO reading (user_id, book_id, price)
        VALUES (:user_id, :symbol, :book_id, :price)
        """""",
        user_id = session[""user_id""],
        book_id = book_id,
        price = 20 # TODO
    )
    return redirect(""/"")

Para chegar a esta função eu utilizo o seguinte script:


var result = document.getElementById(""result"");
var cover, title, author;

function handleResponse(response) {
  for (var i = 0; i < response.items.length; i++) {
    var item = response.items[i];
    // Cria elementos
    figure = document.createElement(""figure"");
    add = document.createElement(""a"");
    img = document.createElement(""img"");
    figcap = document.createElement(""figcaption"");
    // Recebe dados do JSON
    try {
      cover = item.volumeInfo.imageLinks.thumbnail;
      title = item.volumeInfo.title;
      author = item.volumeInfo.authors;
    } catch (error) {
      continue;
    } finally {
      // Atribui valores aos elementos e insere no HTML
      result.appendChild(figure);
      add.href = ""/add""; // AQUI EU ACESSO O @app.route no PYTHON
      figure.appendChild(add);
      img.src = cover;
      add.appendChild(img);
      figcap.innerHTML += `${title}<br>${author}`;
      add.appendChild(figcap);
    }
  }
}
document.querySelector(""form"").addEventListener(""submit"", function(e) {
  result.innerHTML = """";
  search = document.getElementById(""search"").value;
  var script = document.createElement(""script"");
  script.src = `https://www.googleapis.com/books/v1/volumes?q=${search}&callback=handleResponse`;
  document.body.appendChild(script);
  e.preventDefault();
});
<form>
  <input type=""text"" id=""search"" placeholder=""Pesquise por título, autor, editora, lançamento, ISBN..."" />
  <button type=""submit"">Buscar</button>
</form>
<div id=""result""></div>



Eu gostaria de saber como eu faço para passar o parâmetro book_id no JavaScript para recebê-lo no Python.
","
Você pode passar o book_id pela URL fazendo o seguinte:
@app.route('/add/<int:book_id>')
Dentro da sua função handleResponse altere para add.href = `/add/${item.book_id}`.
Estou assumindo que no item tem um atributo book_id, porque no seu codigo só encontrei cover, title, author.
Referência: https://flask.palletsprojects.com/en/1.1.x/quickstart/
","
            2
        ",,,"['\njavascript', 'html', 'python\n']"
510777,Como utilizar o IDLE dentro de um ambiente virtual?,"
Quando instalamos o Python ele instala automaticamente uma IDLE junto, mas ao criar um Ambiente Virtual ele não instala. Como faço para ter acesso ao IDLE dentro de um ambiente virtual?
","
Não precisa instalar. O IDLE na verdade é um módulo que vem junto com o Python e, quando criado o ambiente virtual, continua disponível para você.
Para executá-lo, basta criar e ativar o seu ambiente virtual:
$ python -m venv venv
$ source ./venv/bin/activate

Depois executar o IDLE a partir da linha de comando:
(venv) $ python -m idlelib.idle

Assim, você executará o módulo idle do pacote idlelib, que é responsável pelo IDLE em si.
Exemplo no Windows com Python 3.9.1:

","
            4
        ",,,"['\npython', 'virtualenv\n']"
510771,Como fazer Split por Letras Maiúsculas e Números ao mesmo tempo?,"
Como posso separar uma string por letras e números ao mesmo tempo?
Por exemplo se eu tiver as strings:
composto1 = 'H2SO4'
composto2 = 'CaCO2'
composto3 = 'C20H17'

Já tentei fazer:
import re
list_composto1 = re.findall('[A-Z][^A-Z]*', composto1)
list_composto2 = re.findall('[A-Z][^A-Z]*', composto2)
list_composto3 = re.findall('[A-Z][^A-Z]*', composto3)
print(list_composto1 , list_composto2 , list_composto3)

output
['H2', 'S', 'O4'] ['Ca', 'C', 'O2'] ['C20', 'H17']

Porém só consegui separar pelas letras maiúsculas. Teria algum método para separar os números juntos e obter o resultado abaixo:
list_composto1 = ['H', '2', 'S', 'O', '4']
list_composto2 = ['Ca', 'C', 'O' , '2']
list_composto3 = ['C', '20', 'H', '17' ]

","
Seu critério é basicamente:

uma letra maiúscula, seguida opcionalmente por uma minúscula, ou
um ou mais números

Sendo assim, basta fazer:
import re
r = re.compile(r'[A-Z][a-z]?|\d+')
composto1 = 'H2SO4'
composto2 = 'CaCO2'
composto3 = 'C20H17'
list_composto1 = r.findall(composto1)
list_composto2 = r.findall(composto2)
list_composto3 = r.findall(composto3)
print(list_composto1 , list_composto2 , list_composto3)

O ? indica que a letra minúscula é opcional, e o | significa ""ou"". Já o atalho \d significa ""um dígito"", e o quantificador + indica ""um ou mais"".
Também usei re.compile, que é recomendado quando você usa a mesma expressão várias vezes.
","
            7
        ","
Apenas por curiosidade.
Também em Python é possível realizar a mesma tarefa sem recorrer a expressões regulares, iterando pelos caracteres e usando uma lista como pilha para separar as partes da fórmula.
composto1 = 'SnBrCl3'
composto2 = 'C6H12O6'
composto3 = 'C7H5N3O6'


def qsplit(s):      
  stack = []                              #Inicializa a pilha de separação.
  result = []                             #Inicializa a lista de resultados.
  index= 0                                #Inicializa o índice indicando o caractere sendo iterado. 

  #Sub-rotina que joga os valore da pilha na lista de resultados e esvazia a pilha.
  def pop():
    result.append("""".join(stack))         #Joga o valor da pilha na lista de resultados.
    stack.clear()                         #Esvazia a pilha.

  #Itera pelos caracteres da string s...
  while index < len(s):
    #...verifica se o caractere é letra maiúscula...
    if (val:= s[index]).isupper():        
      if len(stack)!=0: pop()             #...se a pilha não estiver vazia chama pop()
      stack.append(val)                   #...adiciona o caractere a pilha.
    #...verifica se o caractere é letra minúscula...
    elif val.islower():
      stack.append(val)                   #...adiciona o caractere a pilha.
      pop()                               #... chama a função pop().
    #...verifica se o caractere é um digito decimal...
    elif val.isdecimal():
      if len(stack) !=0 and not stack[-1].isdecimal(): pop() #...se a pilha não estiver vazia chama pop()
      stack.append(val)                   #...adiciona o caractere a pilha.
    else:
      print(f'Caractere {val} inválido.') #...caso o caractere não enquadre em nenhuma opção. 
    index += 1                            #incrementa o índice do caractere sendo iterado.
  else:
    pop()                                 #ao deixar o laço de iteração chama pop().
  return result

print(qsplit(composto1))                  #['Sn', 'Br', 'Cl', '3']
print(qsplit(composto2))                  #['C', '6', 'H', '12', 'O', '6']
print(qsplit(composto3))                  #['C', '7', 'H', '5', 'N', '3', 'O', '6']

Teste o código no Repl.it
","
            5
        ","['\npython', 'string', 'regex', 'lista\n']"
510721,função densidade de probabilidade em python,"
Eu não consigo criar uma função densidade de probabilidade contínua para uma variável aleatória para plotar ela sobre o histograma.
val = df[['posição', 'num']].groupby('num').agg(lambda x: list(set(x))).reset_index()
cont = 0
fprob=[]
for i in val.index:
    cont += len(val.query('index=={}'.format(i))
    fprob.append(len(val.query('index=={}'.format(i))/(cont*(len(df)/len(var)))

Foi isso que eu tentei, onde o val guarda as posições em que o valor num se repete dentro de df. Dai eu tentei buscar para cada valor quantas vezes ele se repete e dividir isso pela quantidade de valores que já foram testados vezes a proporção que cada valor representa do df. Não conheço nenhuma função que já me forneça a função densidade de probabilidade, por isso tentei assim.
",,,,,"['\npython', 'scipy\n']"
510716,Como alinhar números à esquerda usando str.format?,"
Estou estudando sobre formatação de strings e não estou conseguindo obter o mesmo comportamento de alinhamento à esquerda com o sinal de menos (-) utilizando a função format. Qual a forma correta de fazer isso usando format?
>>> for x in range(1, 11):
...     print('%-2d %-3d %-4d %-6d' % (x, x**2, x**3, x**4))
... 
1  1   1    1     
2  4   8    16    
3  9   27   81    
4  16  64   256   
5  25  125  625   
6  36  216  1296  
7  49  343  2401  
8  64  512  4096  
9  81  729  6561  
10 100 1000 10000 

>>> for x in range(1, 11):
...     print('{0:-2d} {1:-3d} {2:-4d} {3:-6d}'.format(x, x**2, x**3, x**4))
... 
 1   1    1      1
 2   4    8     16
 3   9   27     81
 4  16   64    256
 5  25  125    625
 6  36  216   1296
 7  49  343   2401
 8  64  512   4096
 9  81  729   6561
10 100 1000  10000

","
No método format, você deve usar < para alinhar à esquerda:
for x in range(1, 11):
    print('{0:<2d} {1:<3d} {2:<4d} {3:<6d}'.format(x, x**2, x**3, x**4))

Saída:
1  1   1    1     
2  4   8    16    
3  9   27   81    
4  16  64   256   
5  25  125  625   
6  36  216  1296  
7  49  343  2401  
8  64  512  4096  
9  81  729  6561  
10 100 1000 10000 

Mais detalhes sobre os formatos podem ser vistos na documentação.
Aliás, a mesma documentação cita que o - é usado para indicar que o sinal só deve ser mostrado caso o número seja negativo (e como todos os números do seu código são positivos, isso não afeta em nada a saída, e ele usa o alinhamento padrão, que para números é à direita).
Isso é diferente do operador %, que segundo a documentação usa o hífen para alinhar à esquerda.

A partir do Python 3.6 você pode usar f-string, que também usa o < para alinhar à esquerda:
for x in range(1, 11):
    print(f'{x:<2d} {x ** 2:<3d} {x ** 3:<4d} {x ** 4:<6d}')

","
            4
        ",,,"['\npython', 'python-3.x', 'string', 'formatação', 'alinhamento\n']"
510664,Somar dados dentro de um dataframe baseado em uma condição para duas colunas,"
Eu tenho um DF com quatro colunas. Preciso somar os valores da coluna 3 quando os valores da coluna 1 e 2 são duplicados e descartar as duplicatas. Ex:
df = pd.DataFrame({""A"": [1,1,1,1,2,2],
                   ""B"": [4,4,5,5,6,6],
                    ""C"" : [1,2,3,4,5,6]})

Precisaria somar os valores da coluna C quando o par de valores de A e B é duplicado. Ficando com:
Df_resultante:
       A  B  C
       1  4  3
       1  5  7
       2  6  11

","
Se sempre tem essa estrutura, você pode simplesmente usar groupby:
df.groupby(['A','B']).agg({'C':'sum'}).reset_index()

","
            0
        ",,,"['\npython', 'pandas\n']"
510511,Como receber e enviar dados de uma aplicação em React para uma API em Flask?,"
Eu estou fazendo um app em React e gostaria de usar o Flask para salvar os dados do usuário em uma base de dados local. Eu consegui fazer o react e o flask ""rodarem na mesma porta"" e, assim, viabilizar uma conexão entre eles. Para isso, segui os seguintes passos (que podem ser vistos nesse tutorial):
1º Cria App em React
Criei o app usando npx:
npx create-react-app react-flask-app

2º Cria API em Flask
mkdir api
cd api
python3 -m venv venv
source venv/bin/activate
(venv) 

Código mínimo para exemplo:
import time
from flask import Flask

app = Flask(__name__)

@app.route('/time')
def get_current_time():
    return {'time': time.time()}

3º Configura package.json
Adiciono a linha:
""proxy"": ""http://localhost:5000""

No primeiro ""dicionário"" do arquivo package.json. Isso garante que React vai rodar na mesma porta do Flask. Por fim, no mesmo arquivo na chave scripts, adiciono:
""start-api"": ""cd api && venv/bin/flask run --no-debugger""


Com essas configurações - e as duas aplicações rodando em terminais diferentes -, posso receber dados do API usando fetch na minha aplicação em React. Exemplo:
import React, { useState, useEffect } from 'react';

function App() {
  const [currentTime, setCurrentTime] = useState(0);

  useEffect(() => {
    fetch('/time').then(res => res.json()).then(data => {
      setCurrentTime(data.time);
    });
  }, []);

  return (
    <div className=""App"">
      <header className=""App-header"">

        <p>The current time is {currentTime}.</p>
      </header>
    </div>
  );
}

export default App;

Isso funcionou perfeitamente. No entanto, não sei como faço para enviar dados da minha aplicação em React para o API do Flask. Obviamente, se os dados estão dentro de um form, consigo usar os métodos POST e GET para enviar os dados para o Flask.
No meu caso, porém, minha aplicação gera um array de objetos que gostaria de enviar para o API e tratá-la com python. Minha array tem uma cara como essa:
const users= [
  {
    id: 1,
    name: 'Leanne Graham',
    username: 'Bret',
    email: 'Sincere@april.biz'
  },
  {
    id: 2,
    name: 'Ervin Howell',
    username: 'Antonette',
    email: 'Shanna@melissa.tv'
  },
  {
    id: 3,
    name: 'Clementine Bauch',
    username: 'Samantha',
    email: 'Nathan@yesenia.net'
  },
  {
    id: 4,
    name: 'Patricia Lebsack',
    username: 'Karianne',
    email: 'Julianne.OConner@kory.org'
  },
  {
    id: 5,
    name: 'Chelsey Dietrich',
    username: 'Kamren',
    email: 'Lucio_Hettinger@annie.ca'
  },
  {
    id: 6,
    name: 'Mrs. Dennis Schulist',
    username: 'Leopoldo_Corkery',
    email: 'Karley_Dach@jasper.info'
  },
  {
    id: 7,
    name: 'Kurtis Weissnat',
    username: 'Elwyn.Skiles',
    email: 'Telly.Hoeger@billy.biz'
  },
  {
    id: 8,
    name: 'Nicholas Runolfsdottir V',
    username: 'Maxime_Nienow',
    email: 'Sherwood@rosamond.me'
  },
  {
    id: 9,
    name: 'Glenna Reichert',
    username: 'Delphine',
    email: 'Chaim_McDermott@dana.io'
  },
  {
    id: 10,
    name: 'Clementina DuBuque',
    username: 'Moriah.Stanton',
    email: 'Rey.Padberg@karina.biz'
  }
];

Em resumo, creio que entendi como faço para receber dados no React vindos da API do Flask e enviar dados de um form. Mas como faço para enviar uma array de objetos?
P.S: Talvez tenha ficado um pouco abstrato o porquê de eu querer passar uma lista de objetos para a API. Então aqui vai uma explicação menos abstrata: minha aplicação é um pomodoro que gerar uma array com informação das sessões do usuário. Veja o código no Github. A variável que quero enviar para o API do Flask chama-se userData.
","
Como sugerido nos comentários, é possível usar a mesma função fetch para enviar um objeto para o API do flask. Para isso é necessário adicionar alguns parâmetros na função:
useEffect(() => {
    const requestOptions = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({test: ""Mensagem no terminal do flask e no console"")
    };
        fetch('/home', requestOptions)
        .then(response => response.json())
        .then(data => console.log(data));        
    }, []);

No Flask, usa-se request.json para acessar o dado recebido, conforme documentação:
@app.route('/home', methods=['GET', 'POST'])
def post():
    result=request.json
    print(result)
    return result

","
            0
        ",,,"['\njavascript', 'python', 'react', 'flask\n']"
510472,Como faço para deixar em ordem alfabética a lista telefonica que esta separada entre maior e menor de idade?,"
Preiso fazer uma agenda telefonica contendo nome, telefone e idade, após a captura dos dados, preciso separar elas em maiores e menores de 18 anos e imprimir na tela o resultado com todos os dados cadastrados, estou me batendo para que seja realizada a ordem alfabetica. Poderiam me ajudar?
agenda = []
dados = {}
maior = []
menor = []
dados['nome'] = input('Digite o Nome: ')


while dados['nome'] != '':
    dados['idade'] = int(input('Digite a Idade: '))
    dados['telefone'] = int(input('Digite o Telefone: '))
    agenda.append(dados.copy())
    dados['nome'] = str(input('Digite o Nome: '))

print('')
print('Total de Cadastros')
print(f'{""Nome"":<15}{""Idade"":<15}{""Telefone"":<15}')
print('')
for contatos in agenda:
    print(f'{contatos[""nome""]:<15}{contatos[""idade""]:<15}{contatos[""telefone""]:<15}')
    if contatos['idade'] >= 18:
        maior.append(contatos)
    if contatos['idade'] < 18:
        menor.append(contatos)
print('-'*50)
print('Maiores de Idade')
print(f'{""Nome"":<15}{""Idade"":<15}{""Telefone"":<15}')
print('')
for contatoslista in maior:
    dados = dict(sorted(dados.items(), key=lambda chave: chave[0]))
    print(f'{contatoslista[""nome""]:<15}{contatoslista[""idade""]:<15}{contatoslista[""telefone""]:<15}')
print('-'*50)
print('Menores de Idade')
print(f'{""Nome"":<15}{""Idade"":<15}{""Telefone"":<15}')
print('')
for contatoslista in menor:
    print(f'{contatoslista[""nome""]:<15}{contatoslista[""idade""]:<15}{contatoslista[""telefone""]:<15}')

","
A estrutura de dados que você tem atualmente para armazenar os contatos, só conseguirá armazenar um único contato. No primeiro loop while, após preencher o primeiro contato, a segunda iteração do loop vai sobrescrever o contato.
Para resolver isso você pode usar uma lista de dicionários, onde cada dicionário é um contato. No final do while, você adiciona no final da lista.
lsita_de_contatos = []

while dados['nome'] != '':

    contato = {}

    contato['idade'] = int(input('Digite a Idade: '))
    contato['telefone'] = int(input('Digite o Telefone: '))
    contato['nome'] = str(input('Digite o Nome: '))

    lista_de_contatos.append(contato)

Para ordenar os contatos por ordem alfabética dos nomes, você pode fazer:
contatos_por_ordem_alfabetica = sorted(lista_de_contatos, key=lambda k: k['nome'])

Onde lambda é uma pequena função que serve simplismente para coletar o campo que será usado na comparação de ordenação, que nesse caso, é o campo nome.
Por último, para encontrar os contatos que respeitem uma dada condição, você pode fazer uma compreensão de lista que filtrará a lista de contatos:
 maiores_de_idade = [contato for contato in lista_de_contatos if contato['idade'] > 18]

Essas dicas já aajudam você a resolver todo o resto do problema. Lembre-se de manter o código e as ideias organizadas, assim você chegará na solução que precisa. Boa sorte, espero ter ajudado!
","
            2
        ",,,"['\npython', 'lista', 'classificação', 'dicionário\n']"
510430,Como separar por vírgula os termos de uma string no python? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 10 meses.
The community reviewed whether to reopen this question há 2 meses and left it closed:

O(s) motivo(s) de fechamento original(is) não foi(ram) resolvido(s)





                        Melhore esta pergunta
                    



Tenho o seguinte código que lê o nome e a idade de uma pessoa:
pessoas = []

p = [str(input('Digite o nome e a idade da pessoa no formato: ""Nome 23"": '))]
pessoas.append(p)

print(pessoas)

Supondo que eu digitei: ""Marcelo 27"", então pessoas = [['Marcelo 27']].
como faço para pessoas ser igual a [['Marcelo', 27]]?
","
Você pode usar a função split. Um exemplo:
>>> ""Marcelo 27"".split()
['Marcelo', '27']

Mas veja que se o nome for duplo, como Marcos Vinicius, não vai funcionar como você espera, pois vai retornar ['Marcos', 'Vinicius, '27']. Aí eu sugiro que faça duas chamadas de input.
","
            1
        ",,,"['\npython', 'lista', 'input\n']"
510359,Validação dos 2 últimos dígitos de CPF em um único laço for,"
Eu fazendo a verificação dos dois últimos dígitos para validação de CPF.
Fiz o código, mas só está calculando o primeiro dígito. Não estou conseguindo, incluir no mesmo laço para calcular o segundo dígito:

    while True:

    #CPF deve ser inserido sem formatação Ex.16695835009
    cpf = input(""Informe o seu CPF: "")

    if len(cpf) != 11 or not cpf.isnumeric():
        print(""Dados inseridos incorretamente.\nDigite novamente."")
        continue

    novo_cpf = cpf[:-2]
    soma_digitos = 0
    lista_digitos = []

    for key, index in enumerate(novo_cpf):
        key_reverso = len(novo_cpf) + 1 - key
        lista_digitos.append(key_reverso * int(index))
        soma_digitos += lista_digitos[key]

    d = 11 - (soma_digitos % 11)

    if(d > 9):
        d = 11 - d

    '''
    Os prints abaixo é só para verificação da saída do código.
    '''
    print(lista_digitos)
    print(soma_digitos)
    print(d)

","
Até dá para fazer tudo com um único laço, só não sei se faz tanta diferença assim. Mas antes vamos tentar fazer com dois laços, aí comparamos com a versão ""um-laço-só"".

Antes dos laços em si, você já poderia converter a string em uma lista de números, na qual cada elemento desta lista é um dígito. Para isso podemos usar map e int:
def validar_cpf(cpf):
    if len(cpf) != 11:
        return False

    try:
        digitos = list(map(int, cpf))
    except ValueError:
        return False

    # restante da validação...

Assim, se algum caractere da string não puder ser convertido para número, ele cai no bloco except e a função já retorna False. Fiz assim porque posteriormente eu vou precisar converter esses caracteres para número, para poder fazer os cálculos do dígito verificador. Ao mesmo tempo, eu já valido se a string de fato contém dígitos.
Também escolhi desta forma porque isnumeric() pode retornar True para vários caracteres que dão erro ao serem convertidos para número com int(), como por exemplo o ½ (VULGAR FRACTION ONE HALF) - veja aqui a lista completa - então eu acho essa verificação melhor do que simplesmente usar isnumeric() (com a vantagem de que já cria a lista com os caracteres convertidos para números, pois vou precisar desses números posteriormente). Como é o usuário que está digitando os dados, existe a possibilidade dele digitar algum desses caracteres, então já fazemos esta verificação logo no início.

Agora sim, aos cálculos. Primeiro vamos fazer a versão com 2 loops (o algoritmo pode ser facilmente buscado na internet, eu usei este site como fonte):
def validar_cpf(cpf):
    if len(cpf) != 11:
        return False

    try:
        digitos = list(map(int, cpf))
    except ValueError:
        return False

    def calcula_digito(multiplicador):
        total = 0
        for d in digitos:
            if multiplicador >= 2:
                total += d * multiplicador
                multiplicador -= 1
            else: break
        resto = total % 11
        if resto < 2:
            return 0
        else:
            return 11 - resto

    # primeiro dígito não bate, CPF inválido
    if digitos[9] != calcula_digito(10):
        return False

    # segundo dígito não bate, CPF inválido
    if digitos[10] != calcula_digito(11):
        return False

    return True

Eu criei a inner function calcula_digito, que contém o loop para calcular o dígito verificador. Para o primeiro dígito verificador, começamos com 10, que é multiplicado pelo primeiro dígito do CPF, depois multiplicamos o segundo dígito por 9, o terceiro por 8, etc (parando no 2, por isso o if multiplicador >= 2, e um break para interromper o loop caso o multiplicador seja menor que 2).
No segundo dígito verificador, eu faço o mesmo algoritmo, mas começando a multiplicar por 11. A lógica do loop é a mesma, e por isso eu reaproveitei o código da função interna calcula_digito. Mas como essa função é chamada duas vezes, então estou fazendo dois laços.

Repare que o que muda de um loop para outro é somente o valor inicial do multiplicador (10 para o primeiro, 11 para o segundo), e a condição de parada é a mesma (vou até o valor do multiplicador ser 2). Sendo assim, seria possível fazer tudo em um único loop:
def validar_cpf(cpf):
    if len(cpf) != 11:
        return False

    try:
        digitos = list(map(int, cpf))
    except ValueError:
        return False

    def calcula_resto(resto):
        if resto < 2:
            return 0
        else:
            return 11 - resto

    total1 = total2 = 0
    multiplicador = 11
    for d in digitos:
        if multiplicador >= 2:
            if multiplicador >= 3:
                total1 += d * (multiplicador - 1)
            total2 += d * multiplicador
            multiplicador -= 1
        else: break

    # primeiro dígito não bate, CPF inválido
    if digitos[9] != calcula_resto(total1 % 11):
        return False

    # segundo dígito não bate, CPF inválido
    if digitos[10] != calcula_resto(total2 % 11):
        return False

    return True

Eu aproveito o mesmo loop para calcular o somatório referente a ambos os dígitos verificadores (tanto iniciando com 11 quanto com 10), e em seguida calculo os respectivos dígitos usando o resto da divisão segundo as regras do algoritmo.

Neste comentário você disse que queria fazer tudo em um único loop, pois assim ""seria menos código"". Bom, olhe novamente para as funções acima e veja se o ganho foi realmente significativo (na minha opinião, não foi, é praticamente a mesma quantidade de código).
Mas o ponto não é ""escrever menos código"". Um código mais curto não é necessariamente ""melhor"", assim como um código mais longo não é necessariamente ""pior"". Primeiro procure escrever um código claro e correto, e depois você pensa nessas otimizações.
Se está preocupado com o desempenho, sinceramente, esses loops não são tão custosos assim e para a grande maioria dos casos a diferença será irrelevante. Em sistemas reais você faz testes de desempenho para ver onde estão os gargalos e não se preocupa com essas micro-otimizações (até porque em sistemas reais, na grande maioria das vezes, provavelmente o gargalo não estará nesses loops menores).
Pense também na manutenção do código: futuramente pode ser que uma outra pessoa (ou até mesmo você) tenha que mexer no código, então o melhor é que ele esteja claro quanto ao que é feito. Claro que pode ser uma questão de opinião se o algoritmo fica melhor expresso com um loop ou dois, mas você não deveria escrever um código que fica confuso e difícil de entender e manter, só porque ficou menor (o tamanho do código não deve ser um objetivo em si, há outros pontos a se considerar).

Conforme comentado pelo Bacco, daria para otimizar o segundo loop, pois o primeiro elemento é multiplicado por 11, sendo que no final pegamos o resto da divisão por 11, então este elemento não influencia no resultado final. Portanto, o segundo loop poderia começar do segundo dígito em diante:
def validar_cpf(cpf):
    if len(cpf) != 11:
        return False

    try:
        digitos = list(map(int, cpf))
    except ValueError:
        return False

    # incluir o índice no qual começa o loop
    def calcula_digito(multiplicador, inicio = 0):
        total = 0
        for d in digitos[inicio:]:
            if multiplicador >= 2:
                total += d * multiplicador
                multiplicador -= 1
            else: break
        resto = total % 11
        if resto < 2:
            return 0
        else:
            return 11 - resto

    # primeiro dígito não bate, CPF inválido
    if digitos[9] != calcula_digito(10):
        return False

    # segundo dígito não bate, CPF inválido
    if digitos[10] != calcula_digito(10, 1): # começa o loop do segundo elemento
        return False

    return True

Agora a função calcula_digito pode receber o índice no qual o loop será iniciado (ou zero, se nenhum for indicado - lembrando que listas começam no índice zero).
digitos[inicio:] constrói uma sub-lista a partir do índice inicio. Claro que eu poderia fazer um if inicio == 0: faço o for em digitos, e se inicio for um valor diferente, aí eu crio a sub-lista (assim evito de criar uma sub-lista à toa, quando o índice for zero).
Outra alternativa é usar um while:
def calcula_digito(multiplicador, inicio = 0):
    total = 0
    indice = inicio
    while True:
        if multiplicador >= 2:
            total += digitos[indice] * multiplicador
            multiplicador -= 1
            indice += 1
        else: break
    resto = total % 11
    if resto < 2:
        return 0
    else:
        return 11 - resto

Assim, evito a criação de sub-listas. De qualquer forma, repare que as alterações são mais no sentido de criar ou não novas estruturas à toa, se isso faz mais sentido ou não de acordo com o contexto, etc, e o que menos importa aqui é se o código vai ficar menor.
","
            1
        ",,,"['\npython', 'python-3.x\n']"
510358,Como Adicionar user types em grupos no Django?,"
Eu reescrevi o User model do django para CustomUser usando AbstractUSer adicionando dois booleans, como is_admin e is_insurer.
Mais ainda, foram criados dois grupos programaticamente: admin_group e insurer_group cada um com suas respectivas permissoes. Eu estou tentando adicionar cada grupo para tipo de usuario.
No caso:
1 - CustomUser.is_admin igual a admin_group,
2 - CustomUser.is_insurer igual a insurer_group
Sendo assim, assim que eu adicionar o user type, ex: is_admin para True, este usuario tenha acesso para o admin_group.
Eu estou tentando dessa maneira:
models.py:
from django.db import models
from django.contrib.auth.models import AbstractUser, Group, Permission
from django.contrib.contenttypes.models import ContentType

class CustomUser(AbstractUser):
    is_admin = models.BooleanField(default=False)
    is_insurer = models.BooleanField(default=False)



    @property
    def insurer(self):
        insurer_group = Group.objects.get(name='insurer_group')
        self.is_insurer.groups.add(insurer_group)

    @property
    def admin(self):
        admin_group = Group.objects.get(name='admin_group')
        self.is_admin.groups.add(insurer_group)

    def __str__(self):
        return self.username

Porem estou recebendo error:
maximum recursion depth exceeded while calling a Python object
Ja tentei passando a permissao diretamente no modelo de CustomUser porem nao vai.
",,,,,"['\npython', 'django', 'permissões\n']"
510226,Como limitar o numero de linhas escrevendo CSV Python?,"
Sou novo aqui, sou muito iniciante em programação e estou começando com Python. Estou em um projeto pessoal que esta bem adiantado mas estou com uma dificuldade bem especifica, quero escrever em um arquivo CSV somente um número desejado de linhas. Esse comando abaixo gera um arquivo gigante muitas vezes com mais de 30k linhas de dados mas por demonstração do sistema eu quero gravar somente 50 linhas de dados no arquivo;
with open(""arquivo.csv"",""w"",encoding='UTF-8') as f:#Enter your file name.
    writer = csv.writer(f,delimiter="","",lineterminator=""\n"")
    writer.writerow(['username','user id','name','group'])
    for user in all_participants:
        if user.username:
            username= user.username
        else:
            username= """"
        if user.first_name:
            first_name= user.first_name
        else:
            first_name= """"
        if user.last_name:
            last_name= user.last_name
        else:
            last_name= """"
        name= (first_name + ' ' + last_name).strip()
        writer.writerow([username,user.id,name,target_group.title])

Como eu posso fazer para limitar a quantidade de informações gravadas:
Me disseram para usar a função enumerator mas estou apanhando, estou muito verde ainda kkk
Obrigado pela ajuda!
","
A função enumerate é aplicada no iterador que vai na últma parte de um comando for - e o que ela faz é, para cada item, retornar não só o item, mas a sua posição na iteração - então ele funciona como um contador.
Aí, é só usar um if no código, e quando o elemento estiver além do número desejado, usar o comando break para sair do for:

limit = 50

with open(""arquivo.csv"",""w"",encoding='UTF-8') as f:#Enter your file name.
    writer = csv.writer(f,delimiter="","",lineterminator=""\n"")
    writer.writerow(['username','user id','name','group'])
    for counter, user in enumerate(all_participants):
        if limit and counter > limit:
            break
        if user.username:
            username= user.username
        else:
            username= """"
        if user.first_name:
            first_name= user.first_name
        else:
            first_name= """"
        if user.last_name:
            last_name= user.last_name
        else:
            last_name= """"
        name= (first_name + ' ' + last_name).strip()
        writer.writerow([username,user.id,name,target_group.title])

Aqui, em vez de colocar o ""50"" direto dentro de um código, coloquei numa variável: isso permite que o mesmo código seja usado numa função, que pode receber esse limite como parâmetro. Do jeito que coloquei o teste if limit and counter > limit: se a variável limit for None ou 0, o teste sempre falha, e o limite é ignorado.
O enumerate funciona como descrevi acima. Ele retorna uma tupla de 2 elementos - o (contador, item_original) - e a sintaxe de variáveis separadas por vírgula na primeira parte do for funciona certinho com isso, distribuindo os valores para as variáveis respectivas (for counter, user ...);
Por fim, é legal ter em mente que se o enumerate não existisse, ou você não soubesse de sua existência, o problema seria resolvido com um contador mantido manualmente:
...
writer.writerow(...)
counter = 0
for user in all_participants:
     counter += 1
     if counter > limit:
         break
     ...

","
            1
        ",,,['\npython\n']
510208,Percorrer uma lista de string e exibir o resultado de 2 em 2 [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Python, como calcular a média de uma lista de 5 em 5 elementos?

                                (4 respostas)
                            

Fechada há 11 meses.



em determinada parte do código, preciso percorrer uma lista com valores de string. Porém a exibição desse valores precisa ser de 2 em 2, ao invés de 1 a 1. Estou usando a versão Python 3.
Exemplo exibindo 1 a 1:
 seguidores = [""teste"", 'teste2', 'teste3', 'teste4', 'teste5']
     
 for i in seguidores:
    print(i)

No caso preciso que o print(i) imprimisse 2 resultado de cada vez da lista de seguidores.
","
A melhor solução pra isso é utilizar slices da lista.
seguidores = [""teste"", 'teste2', 'teste3', 'teste4', 'teste5']

tamanho = len(seguidores)

# Índice aumenta em 2 a cada iteração
for indice in range(0, tamanho, 2):
  # Mostra os resultados a partir de índice
  # até índice + 2
  print(seguidores[indice : indice + 2])

","
            1
        ","
seguidores = [""teste"", 'teste2', 'teste3', 'teste4', 'teste5', 'teste6', 'teste7', 'teste8', 'teste9']

for i in range(0, len(seguidores), 2):
    try:
        print(f'posicao: {i} e valor:{seguidores[i]} - posicao: {i+1} e valor:{seguidores[i+1]} ')
    except:
        print(f'posicao: {i} e valor:{seguidores[i]}')


","
            1
        ","['\npython', 'lista\n']"
510185,Como acrescentar mais valores em um matriz numpy?,"
Estou fazendo um programa em python que usa matrizes, estou usando o numpy para fazê-las, mas está dando o seguinte problema: eu faço a matriz no intuito de guardar vários valores, mas ela guarda apenas um. Eu estava fazendo primeiro uma lista e dps convertendo para array usando np.array(), mas queria fazer de uma outra forma, será que teria como? Segue abaixo meu programa:
import numpy as np                          #
import math                                 #               importando bibliotecas para criação das matrizes e cálculos com 
                                            #               números reais, respectivamente.

n1=n2=1                                     #               definindo constantes                                    
pi = math.pi                                #
M = 200 
                                            #
gama1 = 2/3                                                        #
b1 = math.sqrt(gama1) / (1+math.sqrt(1-gama1))                     #

gama2 = 2/3                                                        #   definindo os valores de b1 e b2                                               #
b2 = math.sqrt(gama2) / (1+math.sqrt(1-gama2))                     #

for l in range(1,M+1):
  for c in range(1,n1+1):
    w1 = np.array([b1*math.sqrt(1/(pi*(M+1)))*math.sin((l*c*pi)/(M+1))])  # adicionando valor na lista
  for c in range(1,n2+1):
    w2 = np.array([b2*math.sqrt(1/(pi*(M+1)))*math.sin((l*(n1+c)*pi)/(M+1))])  # adicionando valor na lista

no caso as matrizes são w1 e w2, e ao invés de aparecer uma matriz 1x200, mostra uma matrz 1x1
","
O problema do seu código é que, a cada vez que o loop passa, ele cria a linha novamente. Por isso você fica com apenas uma linha no final.
Uma matriz é, basicamente, uma lista de listas, então você pode usar o método append para apensar cada linha em cada iteração do loop. Exemplo:
import numpy as np

linha1=[1,0,0]
linha2=[0,1,0]
linha3=[0,0,1]
linhas=[linha1,linha2, linha3]
matriz=[]

for linha in linhas:
    matriz.append(linha)

A variável matriz aqui já é uma matriz, mas para ter acesso a metódos matemáticos para transformação e análise da matriz, recomendo usar np.matrix do numpy:
M=np.matrix(matriz)

print(M)

[[1 0 0]
 [0 1 0]
 [0 0 1]]

Por xemplo, você pode inverter a matriz, usando:
M.I

Que, nesse caso, retorna a própria matriz identidade, como se sabe.
","
            2
        ",,,"['\npython', 'matriz', 'numpy\n']"
510068,Como chamar uma função por um parametro usando argparse?,"
Consegui chamar funções apenas criando subparsers mas sobraram dois parâmetros que fazem parte do parser, tem alguma forma correta de passar uma função na declaração do argumento? Exemplo:
parser.add_argument(""-l"", ""--list"", chamar_funcao=nome_da_funcao, help=...)

","
Tudo o que o ArgParser faz é ler os parâmetros da linha de comando, de acordo com
a especificação que você monta ao chamar os .add_argument e devolver um objeto que tem os valores das opções passadas, quando você chama .parse_args.
Se quiser chamar funções específicas, você tem que colocar isso no seu programa, usando estruturas como if getattr(args, ...): (ou outras):
Exemplo de argparse:
import argparse

def list(param):
    print(f""listagem de coisas: {param}"")


def main():
    parser = argparse.ArgumentParser(description='Exemplo')
    parser.add_argument('--list', ""-l"", type=str,
                        help='Lista os objetos do tipo citado')

    args = parser.parse_args()

    if getattr(args, ""list"", None):
        list(args.list)
    else:
        print(""Nenhuma opção passada"")

if __name__ == ""__main__"":
    main()

A documentação do argparse é bem doida - por que ela, desde o primeiro exemplo, coloca objetos to tipo função (sum e max) como parâmetros
de ""default"" e ""const"" do exemplo, e depois, ao falar dos sub_parsers, também coloca uma função como ""default"" - mas o objeto Parser não
chama essas funções diretamente: o que chama a função é fazer algo do tipo
# isso cria um ""paramtro escondido"" ""func"" no subparser,
# com o valor sendo a função ""foo"":
parser_foo.set_defaults(func=foo)

...
# isso pega o objeto Python guardado no parâmetro ""escondido""
# e usa esse parâmetro como uma função:

args.func(args)

Eu acho esse approach meio esotérico demais, e um pouco gambiarrístico:
se for usar o parseargs, prefira usar ""if""s puros e simples: fica fácil
entender o que você está fazendo.
Se preferir mesmo agilizar a chamada de várias funções, melhor usar uma lib de argumentos mais limpa que o ArgParse, como a click: ela sim, deixa marcar funções com decoradores, que podem depois ser chamadas automaticamente com opções da linha de comando.
","
            0
        ",,,"['\npython', 'argumento\n']"
510015,Triangulo Alfabetico - Python,"
Estou com um exercicio onde, o enunciando informa o seguinte:
O alfabeto latino é composto por letras, começando em 'A' e encerrando em 'Z'. São vinte e seis caracteres diferentes,
se desconsiderarmos as acentuações e as diferenças entre letras maiúsculas e minúsculas.
Harry, um garoto muito estudioso, percebeu que é possível inclusive desenhar usando letras. Em um dos desenhos,
Harry escreve na primeira linha de uma folha o primeiro caractere do alfabeto, na segunda linha escreve duas vezes o segundo caractere,
na terceira linha escreve três vezes o terceiro caractere e assim por diante. Harry percebeu que com isso consegue formar um triângulo alfabético, semelhante ao visto na Figura 1.
Como Harry precisa estudar para realizar uma prova de programação (que para ele também é uma forma de magia!),
pediu para você ajudá-lo a automatizar os desenhos de ""triângulos alfabéticos"", criando um programa que receba
como entrada um número inteiro N (1 <= N <= 26) e que desenhe um triângulo com exatas N linhas, seguindo a mesma estratégia descrita no texto.
ENTRADA
Um número inteiro N (1 <= N <= 26).
SAÍDA
Um triângulo alfabético com exatas N linhas e com a mesma estratégia de construção mencionada no texto.
Note que as letras são sempre maiúsculas.

O que fiz ate agora de codigo foi:
n = int(input())
x = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
x1 = []
for i in range(1, n+1):
    x1 = x.copy()
    print(f'{x1}')

Porem nao consigo extrair da list e imprimir a quantidade que e informado.
","
Olha, você precisa apenas da variável de quantidade, a lista do alfabeto e um for para percorrer a lista e exibir a letra ao mesmo tempo. Fica assim:
vezes = int(input(""Vezes: ""))


alfabeto = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']


for i in range(vezes):
    print(alfabeto[i]*(i+1))

Desse jeito, digitando 4, por exemplo, o resultado seria:
>>A
BB
CCC
DDDD
Explicando o código, ele funciona assim -> definida a quantidade de vezes, você já sabe o lugar de cada letra no alfabeto, então, alfabeto[0] = 'A', alfabeto[1] = 'B', e assim vai. Logo, você só precisa acessar a letra e imprimir ela na tela. No Python, é possível multiplicar uma variável string, então no for do código quando está na letra 'A' (alfabeto[0]), i = 0, você quer que 'A' apareça 1 vez, então, multiplica por 1 (i+1), para 'B'(alfabeto[1]), i = 1, multiplica por 2 (i+1), e vai indo.
É isso... xD
","
            0
        ",,,['\npython\n']
509809,Método copy do Numpy não cria uma deep copy?,"
Eu estou dando uma olhada nos arrays do Numpy e vi que o método copy deveria fazer um deep copy do array. Quando eu crio um array de strings ou de valores numéricos isso parece ser verdade. Entretanto, quando eu crio um array contendo uma instância de uma classe que eu criei, o método copy copia apenas a referência (shallow copy). Por exemplo:
import numpy as np

class Teste:
   def __init(self, var1, var2):
      self.var1 = var1
      self.var2 = var2

   def __copy__(self):
      return Teste(self.var1, self.var2)

t = Teste(20, 30)

arr1 = np.array([t])
arr2 = arr1.copy()

id(arr1[0) == id(arr2[0]) == id(t)

A comparação na última linha de código retorna True, o que indica que tanto arr1 quanto arr2 guardam a mesma referência para o objeto t. A minha expectativa era que o método copy criasse um novo objeto Teste.
Eu consigo esse comportamento quando eu uso o método deepcopy do módulo copy. Sendo assim, eu queria saber se eu estou usando o método copy do array corretamente e se esse é realmente o comportamento esperado desse método.
","
O comportamento esperado é esse mesmo.
A documentação cita que ndarray.copy é similar a numpy.copy, e a documentação de numpy.copy diz o seguinte:

np.copy is a shallow copy and will not copy object elements within arrays

A mesma documentação recomenda que se use copy.deepcopy caso você queira que os objetos também sejam copiados. E nesse caso, nem precisa do método __copy__:
import numpy as np

class Teste:
    def __init__(self, var1, var2):
        self.var1 = var1
        self.var2 = var2

t = Teste(20, 30)

arr1 = np.array([t])
arr2 = arr1.copy()

# imprimindo o id antes (são todos iguais)
print(id(t))
print(id(arr1[0]))
print(id(arr2[0]), arr2[0].var1, arr2[0].var2)

# usando deepcopy
from copy import deepcopy
arr2 = deepcopy(arr1)
# o id depois mudou, mas o conteúdo dos campos foi copiado
print(id(arr2[0]), arr2[0].var1, arr2[0].var2)

Vale lembrar que você só deve criar os métodos __copy__ e __deepcopy__ se quiser que sua classe use uma implementação específica para criar as cópias, caso contrário não é nem necessário criá-los. Da documentação:

In order for a class to define its own copy implementation, it can define special methods __copy__() and __deepcopy__()

Mas no seu caso não me parece necessário, já que você quer copiar exatamente todos os campos, sem nenhuma lógica adicional.
","
            1
        ",,,"['\npython', 'numpy\n']"
509765,Como printar na mesma linha em python?,"
A função print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False) possui o argumento end e por padrão end='\n', eu sei que se trocar para end=' ' vai printar na mesma linha.
Porém estou avançando meus conhecimentos em Python e pensei numa atividade que preciso 'printar' na mesma linha uma formula matemática lado a lado, exemplo:
 1       2       3
+1      +2      +3
--      --      --

Possui alguma forma de 'printar' desta formula acima usando um for mais ou menos nesse exemplo ""1\n+1\n--"" ou para conseguir esse efeito preciso criar uma matriz e usar dois for (rows,columns) para 'printar' o resultado que eu quero?
Realizei um código de teste. Veja aqui:
my_list=([""1 + 1"",""2 + 2"",""3 + 3""])
for i in my_list:
  print(i, end="" | "")

print(""\n\n\n"")
for j in my_list:
  print(f"" {j.split()[0]}\n{j.split()[1]}{j.split()[2]}\n--"", end="""")

print(""\n\n\n"")
print(""""""
------Espectativa-----
 1     2    3
+1    +2   +3
--    --   -- 
"""""")

Quero entender se é possível fazer como o exemplo.
","
O terminal visto pelo Python e outras linguagens sempre é um conjunto de linhas de cima pra baixo - então, se você tem informação que vai ser distribuida em multiplas linhas, em paralelo com informação que deveria ir em outras colunas, sempre vai ter que criar primeiro na memória uma estrutura com todas as informações que você quer,
e em seguida imprimir essa estrutura linha a linha.
Algo do tipo:
my_list=([""1 + 1"",""2 + 2"",""3 + 3""])

saida = []

for elemento in my_list:
    linhas_por_elemento = elemento.split("" "", 1) # separa os elementos de exemplo - com a parte esperada em cada linha 
    for j, linha_do_elemento in enumerate(linhas_por_elemento):
        if len(saida) <= j:
            # a linha onde essa informação vai entrar ainda não foi criada:
            saida.append([])
        saida[j].append(linha_do_elemento)
# nesse ponto, a variável saída é uma lista de listas - onde cada elemento da mesma é uma lista com as strings que vão em cada coluna

# O print abaixo concatena com ""|"" os elementos de uma mesma linha, e concatena cada linha de texto com ""\n"":
    
print(""\n"".join(""|"".join(f""{elemento:>8s}"" for elemento in linha) for linha in saida))


Alternativamente, você pode usar uma biblioteca que te deixe usar o terminal como uma ""saida 2D"" - eu desenvolvo a lib ""terminedia"" que permite isso:
import terminedia as TM
sc = TM.Screen()

for coluna, elemento in enumerate(my_list):
    for linha, parte in enumerate(elemento.split("" "", 1)):
        sc.print_at((coluna * 8, linha), parte)

sc.update()

(é só instalar o terminedia com ""pip install terminedia"" )
O objeto ""sc"" permite tratar o terminal como uma matriz 2D -e
o print_at requer como primeiro parâmetro uma tupla
com as coordenadas de linha, coluna onde você quer
fazer a impressão)
","
            3
        ",,,"['\npython', 'python-3.x\n']"
509752,É possível criar métodos privados para classes em Python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como definir uma propriedade privada no Python? E existe propriedade protegida?

                                (2 respostas)
                            


Quão protegido está meu código, com variáveis privadas?

                                (2 respostas)
                            


Jeito pythonico de definir setters e getters

                                (3 respostas)
                            


Como acessar um atributo privado em Python, sendo que criei um objeto a partir de de outra classe que tem atributos privados também

                                (1 resposta)
                            

Fechada há 11 meses.



Em Rust, é possível criar um módulo onde alguns métodos associados a um struct são privados. Entendo que a utilidade disso é deixar disponível para o usuário final do módulo apenas os métodos importantes para o uso, enquanto os métodos privados são usados para tarefas internas de quem criou e/ou mantém o módulo.
Exemplo:
pub struct Player {
    pub username: String,
    pub email: String,
    pub age: u32,
    pub rating: f64,
    pub active: bool,
}

impl Player {
    pub fn double_age(&self) -> u32 {
        return 2*self.age
    }
}

impl Player {
    fn half_rating(&self) -> f64 {
        return 0.5*self.rating
    }
}

Se esse módulo for importado por outro arquivo, então o usuário final terá acesso apenas ao método double_age, marcado como público (pub), mas não terá acesso a half_rating (privado por default).
Existe um equivalente dessa característica em Python? Muitas vezes crio métodos para classes em determinados pacotes que gostaria de usar apenas internamente, sem deixar disponível para o usuário final.
",,,,,"['\npython', 'orientação-a-objetos', 'característica-linguagem\n']"
509665,EXIBIR UM DICIONÁRIO EM ORDEM ALFABÉTICA - PYTHON,"
Tenho um dicionário que possui 2 chaves (nome, idade), dentro de cada existe uma lista de valores.
Preciso colocar os nomes em ordem alfabética e que as idades acompanhem os respectivos donos.
Essa foi a maneira que tentei:
lista = ['pedro', 'joao', 'marcelo']
dicionario = {'nome': ['pedro', 'joao', 'marcelo'], 'idade': [9, 4, 5]}

lista.sort()
print(lista)

dicionario['nome'].sort()

for x in range(len(dicionario['nome'])):
    print(dicionario['nome'][x], dicionario['idade'][x])

","
Acho que mais importante que o algoritmo, você precisa entender que a estrutura você escolheu para os seus dados não é adequada. Vou tentar fazer uma comparação aqui pra ver se fica claro como seria melhor:
Você quer guardar informação de várias pessoas, para isso você fez um dicionário que contém listas com as informações:
pessoas = {
    ""nomes"": [""Fulano"", ""Beltrano"", ""Sicrano""],
    ""idades"": [10, 20, 30],
}

Se você fosse representar isso fisicamente, você teria um livro que contém apenas o nome de uma pessoa por página e outro livro com apenas as idades nas páginas. Assim para saber a idade de ""Beltrano"", você teria que abrir o livro de nomes, achar a página em que o nome está e procurar a mesma página no livro de idades.
Como você pode perceber isso não é prático. Uma estrutura mais correta seria ter todas as informações que você quer de uma pessoa na mesma página. Nesse exemplo seria você criar uma lista de dicionário, ao invés de um dicionário de listas.
Veja a diferença:
pessoas = [
    {""nome"": ""Fulano"", ""idade"": 10},
    {""nome"": ""Beltrano"", ""idade"": 20},
    {""nome"": ""Sicrano"", ""idade"": 30},
]

Dessa maneira, quando você acessa pessoas[0] você está vendo todas as informações daquela pessoa numa ""página"" só.

Para ordenar a lista de dicionários basta passar o parâmetro key para a função sorted para ""ensinar"" a função como pegar o valor pelo qual você quer ordenar.
pessoas_ordenado = sorted(pessoas, key=lambda obj: obj[""nome""])

for pessoa in pessoas_ordenado:
    print(f""{pessoa['nome']} tem {pessoa['idade']} anos."")

Saída:
Beltrano tem 20 anos.
Fulano tem 10 anos.
Sicrano tem 30 anos.

Código rodando no Repl.it
A função sorted retorna uma nova lista ordenada, se você não precisa guardar essa lista separa você pode usar o método list.sort() que faz a ordenação inplace, ou seja, altera a lista original.
Usando list.sort() ficaria assim:
pessoas.sort(pessoas, key=lambda obj: obj[""nome""])

for pessoa in pessoas:
    print(f""{pessoa['nome']} tem {pessoa['idade']} anos."")


Usei dicionários como exemplo para deixar as informações de pessoas no mesma estrutura, mas poderia ser qualquer outra estrutura como objetos de uma classe Pessoa, tuplas, tuplas nomeadas, etc..
Alguns exemplos só pra ficar de referência:
Classes:
class Pessoa:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade

pessoas = [
    Pessoa(nome=""Fulano"", idade=10),
    Pessoa(nome=""Beltrano"", idade=20),
    Pessoa(nome=""Sicrano"", idade=30),
]

pessoas_ordenado = sorted(pessoas, key=lambda obj: obj.nome)

for pessoa in pessoas_ordenado:
    print(f""{pessoa.nome} tem {pessoa.idade} anos."")

Tuplas nomeadas:
Pessoa = namedtuple('Pessoa', ['nome', 'idade'])

pessoas = [
    Pessoa(nome=""Fulano"", idade=10),
    Pessoa(nome=""Beltrano"", idade=20),
    Pessoa(nome=""Sicrano"", idade=30),
]

pessoas_ordenado = sorted(pessoas, key=lambda obj: obj.nome)

for pessoa in pessoas_ordenado:
    print(f""{pessoa.nome} tem {pessoa.idade} anos."")

","
            2
        ","
Genericamente falando, acho que a solução mais adequada seria criar uma classe que encapsulasse as duas informações, em dois atributos. Dessa forma elas estariam sempre juntas, e você não precisaria ter essa preocupação adicional de sempre estar vinculando as ações de uma lista em outra.
Porém, respondendo o que foi perguntado, pode-se utilizar a função zip nas duas listas. Essa função é uma função embutida já no Python que agrega os elementos de diferentes iteráveis. Por exemplo:
Se a lista1 possui os elementos [0,1,2,3,4], e a lista2 possui ['a','b','c','d','e'] então o retorno de zip(lista1,lista2) será [(0,'a'),(1,'b')...]
Aplicando no seu caso, temos:
#Mudei os nomes para uns mais simples (A,B,C)
dicionario = {'nome': ['Carolina', 'Ana', 'Beatriz'], 'idade': [1, 4, 5]}
print(dicionario)
# {'nome': ['Carolina', 'Ana', 'Beatriz'], 'idade': [1, 4, 5]}

#Atualizando a chave idade, baseado no que foi ordenado pela chave nome:
dicionario['idade'] = ([x for _, x in sorted(zip(dicionario['nome'], dicionario['idade']))])
print(dicionario)
#{'nome': ['Carolina', 'Ana', 'Beatriz'], 'idade': [4, 5, 1]}

#Por fim, atualizando a chave nome propriamente dita:
dicionario['nome'].sort()
print(dicionario)
#{'nome': ['Ana', 'Beatriz', 'Carolina'], 'idade': [4, 5, 1]}

Ou seja, em linhas gerais:

Com o zip nós associamos as duas listas:  zip(dicionario['nome'], dicionario['idade'])
Ordenamos o resultado com: sorted(zip(...))
Com compreensão de listas, desempacotamos apenas o elemento de idade após a ordenação: [x for _, x in listaDeTuplasOrdenadas]

Para uma leitura mais aprofundada, leia aqui (em inglês).
","
            0
        ","['\npython', 'python-3.x', 'classificação', 'dicionário\n']"
509591,Tamanho de uma String usando Listas,"
Como eu faço pra imprimir o tamanho de cada uma das strings que o usuário digitar? Toda vez que eu peço pra imprimir sai quantas strings tem dentro da lista e não a quantidade de caracteres de cada string dentro
lista = []
while True:
    nome = str(input())
    if nome == 'fim' or nome == 'FIM':
        break

    lista.append(nome)


print(len(lista))``` 

","
se vc quiser printar a quantidade de letras em cada string dentro de uma lista vc deve percorrer ela desta forma:
lista = []
while True:
    nome = str(input())
    if nome == 'fim' or nome == 'FIM':
        break

    lista.append(nome)


for item in lista:
  print(len(item))

","
            0
        ",,,['\npython\n']
509566,Como resolver o erro QObject::connect: Cannot queue arguments of type 'QVector<int>' no PyQT5 usando threading para atualizar interface gui,"
Boa noite,
Sou iniciante na area do python, e estou com dificuldade na parte de threading juntamente com uma interface gui, criada no QT Desegner.
conversando com uns amigos me indicaram este forum, pois talvez pudessem me ajudar/esclarecer qual o problema.
Acontece que não entendo muito dessa area, comecei a poucos meses, e estou tentando aprender sozinho com base em exemplos / videos da internet. fiz o seguinte codigo de exemplo:
from PyQt5 import  uic,QtWidgets
import time
import threading

def atualiza_dados():
    a = 0
    while 1:
        time.sleep(2)
        tela.label_6.setText(str(a))
        tela.tabela1.setItem(0, 0, QtWidgets.QTableWidgetItem('Valor de A: '))
        tela.tabela1.setItem(0, 1, QtWidgets.QTableWidgetItem(str(a)))
        a += 1

app=QtWidgets.QApplication([])
tela=uic.loadUi(""tela_monitor.ui"")
tela.tabela1.setRowCount(1)
threading.Thread(target=atualiza_dados,daemon=True).start()
tela.show()
app.exec()

O codigo acima, incrementa a variavel ""a"" e adciona o valor  dentro de uma label, e dentro de uma linha que por sua vez está dentro de uma tabela. porem estou usando uma threading para executar o loop infinito e não congelar a janela principal. mas rodando o programa eu consigo atualizar somente o valor da label, somente atualiza o valor da tabela quando eu clico nela.
outro problema é que aparece as seguintes mensagens no cmd ao executar o programa:
QObject::connect: Cannot queue arguments of type 'QVector<int>'
(Make sure 'QVector<int>' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'QVector<int>'
(Make sure 'QVector<int>' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'QVector<int>'
(Make sure 'QVector<int>' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'QVector<int>'
(Make sure 'QVector<int>' is registered using qRegisterMetaType().)
QObject::connect: Cannot queue arguments of type 'QVector<int>'
(Make sure 'QVector<int>' is registered using qRegisterMetaType().)

Se eu deixar somente a label, ele não da os erros acima, porem quando adciono a tabela da erro.
Inseri duas imagens da tela também para tentar ilustrar melhor o que está acontecendo.
Vocês poderiam me ajudar a resolver este problema? desde já muito obrigado.


@edit segue o codigo do arquivo ui, pois esqueci de adciona-lo..
    <?xml version=""1.0"" encoding=""UTF-8""?>
<ui version=""4.0"">
 <class>MainWindow</class>
 <widget class=""QMainWindow"" name=""MainWindow"">
  <property name=""geometry"">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>508</width>
    <height>252</height>
   </rect>
  </property>
  <property name=""windowTitle"">
   <string>MainWindow</string>
  </property>
  <property name=""styleSheet"">
   <string notr=""true"">background-color: rgb(170, 255, 255);</string>
  </property>
  <widget class=""QWidget"" name=""centralwidget"">
   <widget class=""QLabel"" name=""label"">
    <property name=""geometry"">
     <rect>
      <x>20</x>
      <y>10</y>
      <width>201</width>
      <height>61</height>
     </rect>
    </property>
    <property name=""font"">
     <font>
      <pointsize>18</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name=""styleSheet"">
     <string notr=""true"">color: rgb(85, 85, 255);
background-color: rgb(170, 255, 255);</string>
    </property>
    <property name=""text"">
     <string>Monitoramento</string>
    </property>
   </widget>
   <widget class=""QLabel"" name=""label_2"">
    <property name=""geometry"">
     <rect>
      <x>50</x>
      <y>80</y>
      <width>181</width>
      <height>51</height>
     </rect>
    </property>
    <property name=""font"">
     <font>
      <pointsize>18</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name=""styleSheet"">
     <string notr=""true"">background-color: rgb(170, 255, 255);</string>
    </property>
    <property name=""text"">
     <string>Valor de A:</string>
    </property>
   </widget>
   <widget class=""QLabel"" name=""label_6"">
    <property name=""geometry"">
     <rect>
      <x>20</x>
      <y>130</y>
      <width>141</width>
      <height>111</height>
     </rect>
    </property>
    <property name=""font"">
     <font>
      <pointsize>46</pointsize>
     </font>
    </property>
    <property name=""styleSheet"">
     <string notr=""true"">color: rgb(85, 0, 0);
background-color: rgb(170, 255, 255);</string>
    </property>
    <property name=""text"">
     <string/>
    </property>
   </widget>
   <widget class=""QTableWidget"" name=""tabela1"">
    <property name=""geometry"">
     <rect>
      <x>240</x>
      <y>80</y>
      <width>251</width>
      <height>101</height>
     </rect>
    </property>
    <column>
     <property name=""text"">
      <string>Nome</string>
     </property>
    </column>
    <column>
     <property name=""text"">
      <string>Valor</string>
     </property>
    </column>
   </widget>
  </widget>
  <widget class=""QMenuBar"" name=""menubar"">
   <property name=""geometry"">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>508</width>
     <height>21</height>
    </rect>
   </property>
  </widget>
  <widget class=""QStatusBar"" name=""statusbar""/>
 </widget>
 <resources/>
 <connections/>
</ui>

","
Não sei exatamente qual a natureza do erro que você vê, mas acredito que seja por alguma incompatibilidade entre o sistema de threads do Qt e do Python. O ideal é que, ao usar o PyQt, você utilize o sistema de threading provido por eles. Há diversos tutoriais por aí mostrando as diferentes formas e módulos do PyQt que você pode usar para rodar uma função em uma thread separada da interface - por exemplo, aqui e aqui (links em inglês).
Abaixo há um exemplo mínimo mostrando uma interface semelhante à sua, que atualiza o contador exibido a cada 2 segundos (tentei criar algo semelhante já que não tenho acesso ao seu arquivo .ui):
import sys

from PyQt5 import QtWidgets as qtw, QtCore as qtc


class MyApp(qtw.QWidget):
    def __init__(self):
        super().__init__()
        
        # Contador que atualiza ao chamar self.update
        self.a = 0  # valor inicial
        
        # Layout do meu app
        layout = qtw.QGridLayout()
        self.setLayout(layout)
        
        # Label estático ""Monitoramento""
        self.monitoramento_label = qtw.QLabel(""Monitoramento"")
        layout.addWidget(self.monitoramento_label, 0, 0, 1, 2)
        
        # Label estático ""Valor de A""
        self.valor_a_label = qtw.QLabel(""Valor de A"")
        layout.addWidget(self.valor_a_label, 1, 0, 1, 1)
        
        # Tabela
        self.table = qtw.QTableWidget(rowCount=1, columnCount=2)
        self.table.setHorizontalHeaderLabels([""Nome"", ""Valor""])
        self.table.setItem(0, 0, qtw.QTableWidgetItem(""Valor de A""))
        self.table.setItem(0, 1, qtw.QTableWidgetItem(str(self.a)))
        layout.addWidget(self.table, 1, 1, 2, 1)
        
        # Label dinâmico - exibe o valor de self.a
        self.a_label = qtw.QLabel(str(self.a))
        layout.addWidget(self.a_label, 2, 0, 1, 1)
        
        # Timer - responsável por chamar o método self.update
        # a cada 2000 milissegundos (2 segundos)
        self.timer = qtc.QTimer()
        self.timer.timeout.connect(self.update)
        self.timer.start(2000)

    def update(self):
        """"""Incrementa self.a em um e atualiza a interface em seguida.""""""
        self.a += 1
        self.a_label.setText(str(self.a))
        self.table.setItem(0, 1, qtw.QTableWidgetItem(str(self.a)))
    

if __name__ == '__main__':
    app = qtw.QApplication(sys.argv)
    gui = MyApp()
    gui.show()
    sys.exit(app.exec_())

Resultado (se você rodar o código, verá o contador sendo incrementado):

O segredo aqui está no objeto QTimer, nas linhas:
self.timer = qtc.QTimer()
self.timer.timeout.connect(self.update)
self.timer.start(2000)

Aqui, criamos o objeto, conectamos ele ao método self.update e pedimos para ele chamar este método a cada 2000 milissegundos (2 segundos).
Note que o código que escrevi envolve a definição de uma classe MyApp e dos seus métodos __init__ e update - caso você não esteja familiarizado com essas coisas, recomendo estudar mais sobre programação orientada a objetos. Vai te ajudar bastante a entender melhor sobre PyQt e Python em geral.
Note também que escrevi os elementos da interface (os labels, a tabela etc) diretamente no código. Dessa forma, não é necessário utilizar o Qt Designer para montar a interface (isso é um pouco de preferência pessoal, mas eu prefiro escrever todo o código da interface porque fica mais fácil de me localizar quando a interface começa a ficar mais complexa).
","
            0
        ",,,"['\npython', 'syntax-error', 'pyqt\n']"
509521,renomear filas de um dataframe,"
Eu tenho um dataframe:
    codcliente  contrato    
    7   1180000007004   
    7   1180000007003   
    7   1090000007038   
    2   1090000007035   
    2   1090000007029   
    ... ...
    3   2023885638001   
    3   1073885769001   
    3   1093885790001   
    3   1183885847001   
    3   6163886005001   

e quero adicionar uma coluna contratos_name ou modificar a coluna contratos para q os nomes dos contratos sejam 01,02,03,04,até 05 mas o numero de contratos por cliente pode ser diferente para cada cliente de (1 até 5) .
Resultando os seguinte dataframe:
codcliente  contrato    
    7   1
    7   2   
    7   3   
    2   1   
    2   2   
    ... ...
    3   1   
    3   2   
    3   3   
    3   4   
    3   5

O q fiz, mas está muito lento para um dataframe de 2 milhoes de registros
def re_nomear(df):
    df_ultimos_contratos = []
    codigos_clientes = df.codcliente.unique()
    for i in codigos_clientes:
        x = df[df[""codcliente""] == i].copy()
        x[""contrato_rotulado""] = [i for i in range(x.shape[0])]
        df_ultimos_contratos.append(x)
    df_ultimos_contratos = pd.concat(df_ultimos_contratos)
    return df_ultimos_contratos

","
Use o groupby() com o cumcount()
Criando DataFrame
df = pd.DataFrame({""codcliente"": [7,7,7,2,2,3,3,3,3,3],""contrato"": [1180000007004, 1180000007003, 1090000007038, 1090000007035, 1090000007029, 2023885638001, 1073885769001, 1093885790001, 1183885847001, 6163886005001]})

Verificando DataFrame
print(df)

   codcliente       contrato
0           7  1180000007004
1           7  1180000007003
2           7  1090000007038
3           2  1090000007035
4           2  1090000007029
5           3  2023885638001
6           3  1073885769001
7           3  1093885790001
8           3  1183885847001
9           3  6163886005001

Criando nova coluna
df['nova_coluna'] = df.groupby('codcliente').cumcount()+1

Resultado
   codcliente       contrato  nova_coluna
0           7  1180000007004            1
1           7  1180000007003            2
2           7  1090000007038            3
3           2  1090000007035            1
4           2  1090000007029            2
5           3  2023885638001            1
6           3  1073885769001            2
7           3  1093885790001            3
8           3  1183885847001            4
9           3  6163886005001            5

","
            2
        ",,,"['\npython', 'pandas', 'dataframe\n']"
509401,Como eu posso criar atualizar função no colab sem precisar restartar o kernel dele?,"
Eu tenho minhas funções feitas fora do colab, em arquivos py, porém eu gostaria de alterar a função e não precisar restartar o kernel do colab. Para que essa função funcione no notebook  eu nesse momento estou precisando restartar todo o notebook, eu gostaria de passar algum parâmetro ou algo do gênero para que eu possa rodar a função, editar novamente e conseguir utilizar ela no estado atual dele.
","
A função ""reload"" da importlib pode forçar o modulo  a ser re-executado, e aí o processo Python do seu Kernel vai ter a nova função.
O problema é que importlib.reload sozinho sempre funciona para o módulo (no caso, seus arquivos .py) e não para a função sozinha -
Então, se você tem um arquivo ""meuarquivo.py"" e lá dentro ""def minhafuncao(): ..."",
precisa fazer essas duas coisas - eu recomendo deixar uma célula de rascunho próxima do ponto onde você está trabalhando com isso, e re-executar esta célula cada vez que alterar a função:
import meuarquivo  # só é necessário se ""meuarquivo"" não foi importado antes

from importlib import reload

reload(meuarquivo)

minhafuncao = meuarquivo.minhafuncao

Em vez da última linha, pode usar a sintaxe de import também, (mas
depois de executar o reload):  from meuarquivo import minhafuncao.
Se tiver mais de uma função ou constantes definidas no arquivo, o assignent
no notebook tem que ser feito para cada elemento que você usar, individualmente.
Por exemplo:  from meuarquivo import funcao1, funcao2, df_horarios
E por fim, se não quiser fazer o reassignment, pode também sempre usar o nome por extenso (qualified name) de tudo o que estiver no arquivo que você for atualizar.
Assim, se em todos os pontos em que você usa a função no notebook sempre usar meuarquivo.minhafuncao em vez de usar o from meuarquivo import funcao, só precisa mesmo fazer a chamada ao reload.
","
            2
        ","
importlib é uma ótima opção, pois ela realmente atualiza a função podendo depois ser utilizada posteriormente, depois de importar sua função pode utilizar o seguinte comando:
import importlib
importlib.reload(suaFuncao)

","
            1
        ","['\npython', 'funções', 'google', 'ipython-notebook', 'kernel\n']"
509277,Python | Selenium | Procurando elemento html,"
Olá pessoal sou iniciante em python e pouco conhecimento em html, estou tentando fazer faz uma busca de informações em um dvr Intelbras via pagina web.

até um certo ponto eu conseguir fazer o que era de esperado, porém não estou seguir em frente na busca de um elemento. segue o caminho do elemento _storage:


Conseguir seguir do Html até o frame_set(Marcado em verde), depois disso não conseguir seguir para o próximo html


Já tentei varias formas e não encontro nada na na internet e nem em documentação
segue codigo python:
from selenium import webdriver
from webdriver_manager.microsoft import IEDriverManager
from time import sleep


driver = webdriver.Ie(IEDriverManager().install())
driver.get('http://192.168.15.2/')
if driver.find_element_by_class_name('login-inputbox').is_displayed():
driver.find_element_by_id('username').send_keys(""py"")
driver.find_element_by_id('password').send_keys(""py"")
driver.find_element_by_class_name('login_confirm').click()
sleep(15)
driver.find_element_by_id('xxtpz').click()
sleep(3)
element_one = driver.find_element_by_id('m')
sleep(3)
element_two = element_one.find_element_by_id('f_setup')
sleep(3)
element_tree = element_one.find_element_by_id('frame_set')

Alguem poderia me dá um help por favor?
","
Pelo que me parece, você está tentando buscar por um elemento que não está localizado dentro do frame principal da página. Por padrão o frame principal ou aquele que está disponível quando você abre uma página é denominado default_content. Se algum elemento estiver dentro de um outro frame você não irá localizá-lo sem ""entrar"" neste frame. Se você estiver dentro de um frame e o elemento estiver no default_content você não conseguirá localizá-lo sem voltar para o frame principal. Tente mudar para este frame antes, com
>> driver.switch_to_frame(frame)

Após feito isso, busque pelo elemento que deseja novamente!
","
            0
        ",,,"['\nhtml', 'python', 'selenium\n']"
509122,variável local erro [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Python - não permite atribuir valor à variável em condicional if, por quê?

                                (1 resposta)
                            


Funções em Python-Variáveis globais e locais

                                (3 respostas)
                            

Fechada há 11 meses.



g = 10
def b():
    g = g + 1
b()

Quando faço isso aparece o erro
UnboundLocalError: local variable 'g' referenced before assignment

Eu não posso colocar a variável g dentro de def b() pois toda vez que eu chamar b() ela vai voltar o valor para 10. Também tentei definir como global, mas não deu certo.
",,,,,"['\npython', 'variáveis\n']"
509096,Recuperar dados do banco no django,"
Meu projeto é uma simples tabela onde mostra países, número de casos de covid, mortes e recuperados. Pelo admin do Django já cadastrei dois países e agora quero recuperar esses dados e mostrar na rota, porém não está mostrando.
Link do projeto completo: https://github.com/PUC-DISCIPLINAS/monitorcoviddjango-monitor-django-guilherme-pedro
Esse é meu arquivo html:
https://github.com/CunhaGuilhermeBR/html/blob/main/index.html
Meu model, estou chamando de dados:

# Create your models here.
class Dados(models.Model):
 casos_confirmados =  models.IntegerField()
 mortes = models.IntegerField()
 recuperados = models.IntegerField()
 pais = models.CharField(max_length=100)

 def __int__(self):
     return(self.id)


 class Meta:
     db_table = 'dados'

E essa é minha view
@login_required(login_url='/login/')
def list_data(request):
    dados = Dados.objects.all()
    print(dados.query)
    for d in dados:
      print(d)
    return render(request, 'index.html',{dados: dados})

O que ele imprime é: Dados object (1)
Dados object (2)
Lembrando que possuo dois países cadastrados. Queria descobrir o que estou fazendo de errado.
","
Para recuperar valores do banco de dados para um html ou diretamente no console
em views
from .models import Dados
#Do model dados
dados = Dados.objects.all()# retorna todos os valores, mesmo são do tipo queryset
for i in list(dados): # para a forma de list e não queryset
   print(i) # valores

A função str(self), dentro do escopo da classe model retorna valores legíveis, pode ser especificado quais serão apresentados
def __str__(self):
        return f'{self.pais} {self.casos_confirmados} {self.mortes} {self.recuperados}' 

A apresentação em um html precisa de um contexto, um dicionário;
def list_data(request):
     conteuto = {""casos"": Dados.objects.all()}
    return render(request, 'index.html',conteuto)

html:
 {% for caso in casos %}
  informações: {{caso}}
{% endfor %}

Esse código resolve a pergunta
","
            2
        ","
Use:
dados = Dados.objects.all().values_list
for d in dados:
   print(d)

Outra opção é usar o values():
dados = Dados.objects.all().values()

Veja a possibilidade de usar __str__()
Exemplo da documentação:
from django.db import models

class Person(models.Model):
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)

    def __str__(self):
        return '%s %s' % (self.first_name, self.last_name)

","
            0
        ","['\npython', 'django', 'django-templates\n']"
508949,Python BaseHTTPRequestHandler - Como inserir caminho correto das imagens [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Quando crio uma aplicação Web em python, mas sem usar Frameworks, apenas usando as classes HTTPServer e BaseHTTPRequestHandler, como insiro uma imagem? Esse é o código:
https://pastebin.com/W6iPK2P2
No mesmo diretório que está meu arquivo PY, tenho uma pasta img com a imagem dentro. Porém a imagem não aparece. Como deve ser minha variável 'imagem' pra que a imagem apareça corretamente?
","
Bom dia. vc tem q fazer uma validação da extenção dos arquivos para retornar o minetype correto segue um ex retirado da net que funciona:
#!/usr/bin/python
from BaseHTTPServer import BaseHTTPRequestHandler,HTTPServer
from os import curdir, sep

PORT_NUMBER = 8080

#This class will handles any incoming request from
#the browser 
class myHandler(BaseHTTPRequestHandler):
    
    #Handler for the GET requests
    def do_GET(self):
        if self.path==""/"":
            self.path=""/index_example2.html""

        try:
            #Check the file extension required and
            #set the right mime type

            sendReply = False
            if self.path.endswith("".html""):
                mimetype='text/html'
                sendReply = True
            if self.path.endswith("".jpg""):
                mimetype='image/jpg'
                sendReply = True
            if self.path.endswith("".gif""):
                mimetype='image/gif'
                sendReply = True
            if self.path.endswith("".js""):
                mimetype='application/javascript'
                sendReply = True
            if self.path.endswith("".css""):
                mimetype='text/css'
                sendReply = True

            if sendReply == True:
                #Open the static file requested and send it
                f = open(curdir + sep + self.path) 
                self.send_response(200)
                self.send_header('Content-type',mimetype)
                self.end_headers()
                self.wfile.write(f.read())
                f.close()
            return


        except IOError:
            self.send_error(404,'File Not Found: %s' % self.path)

try:
    #Create a web server and define the handler to manage the
    #incoming request
    server = HTTPServer(('', PORT_NUMBER), myHandler)
    print 'Started httpserver on port ' , PORT_NUMBER
    
    #Wait forever for incoming htto requests
    server.serve_forever()

except KeyboardInterrupt:
    print '^C received, shutting down the web server'
    server.socket.close()
    

fonte: https://github.com/tanzilli/playground/blob/master/python/httpserver/example2.py
uma outra forma é vc retornar o o jpg como binário
no endswitch das imagens seria assim para jpg
if self.path.endswith("".jpg""):
    f = open(applicationPath + '/' + self.path, 'rb')
    self.send_response(200)
    self.send_header('Content-type','image/jpg')
    self.end_headers()
    self.wfile.write(f.read())
    f.close()
    return

","
            -1
        ",,,['\npython\n']
508927,Programação inciante [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Faça um programa que mostre na tela uma pergunta de múltipla escolha, e que, a partir da resposta do usuário, mostre na tela se ele acertou ou não.
Não conseguir desenvolver essa pergunta, meu código ficou assim:
print(""Exercício 02: "")
print(""O maior rio em extensão territorial é o rio Nilo ?"")

resposta = str(input(""Se for verdadeiro escrava sim""))

if resposta != sim:
    print(""você acertou!"")
else:
    print('Você errou!')

Mas o programa não consegue compilar
","
Seu programa não está executando porque na sua condicional você está comparando resposta com sim, onde sim deveria ser uma string utilizando aspas.
Corrigido
print(""Exercício 02: "")
print(""O maior rio em extensão territorial é o rio Nilo ?"")

resposta = str(input(""Se for verdadeiro escrava sim""))

if resposta != ""sim"":
    print(""você acertou!"")
else:
    print(""Você errou!"")

","
            -1
        ",,,['\npython\n']
508862,Initial Form Django não está funcionando corretamente,"
Bom eu estou desenvolvendo uma aplicação em django e estou tentando usar jquery com django para fazer uma requisição ao ViaCep para consultar o cep que a pessoa digitou e saiu do foco do campo que estava digitando.
essa é a minha view.py
@login_required(login_url=""/login/"")
def cadastro_empresa(request):
    
    cep = request.GET.get('cep')

    try:
        resposta = cep_consulta(cep)
        logradouro = resposta['logradouro']
        bairro = resposta['bairro']
        print(resposta)
    except:
        resposta = ''
    
    
    if request.method == 'POST':

        form = EmpresaForm(request.POST)

        if form.is_valid():
            
            form.save()
            messages.success(request, 'Formulario enviado com sucesso!')
            return HttpResponseRedirect('/cadastro-empresa/')
    else:
        if resposta != '':
            form = EmpresaForm(initial={
                'endereco': logradouro,
                'bairro': bairro
            })
            print(form)
        else:
            form = EmpresaForm()
        
    
    return render(request, 'cadastros/cadastro_empresa.html', locals())

esse é meu bloco que estou colocando o form.
{% block content %}
<div class=""content-wrapper"">
    <div class=""content"">
        <div class=""col-lg-9"">
            <div class=""card card-default"">
                <div class=""card-header card-header-border-bottom"">
                    <h2>Cadastro de Empresa</h2>
                </div>
                <div class=""card-body"">
                    <form action="""" method=""post"">
                        {% csrf_token %}
                        {% if form %}
                            <div class=""form-row"">
                                <div class=""form-group col-md-6 mb-0"">
                                    {{ form.cnpj|as_crispy_field }}
                                </div>
                                <div class=""form-group col-md-6 mb-0"">
                                    {{ form.nome|as_crispy_field }}
                                </div>
                                
                                </div>
                                <div class=""form-row"">
                                    <div class=""form-group col-md-6 mb-0"">
                                        {{ form.ie|as_crispy_field }}
                                    </div>
                                    <div class=""form-group col-md-6 mb-0"">
                                        {{ form.razao_social|as_crispy_field }}
                                    </div>
                                </div>
                                <div class='form-row'>
                                    <div class='form-group col-md-6 mb-0'>
                                        {{ form.email|as_crispy_field }}
                                    </div>
                                    <div class='form-group col-md-6 mb-0'>
                                        {{ form.fone|as_crispy_field }}
                                    </div>
                                </div>
            
                                <div class='form-row'>
                                    <div class=""form-group col-md-4 mb-0"">
                                        {{ form.cep|as_crispy_field }}
                                    </div>
                                    <div class='form-group col-md-4 mb-0'>
                                        {{ form.cidade|as_crispy_field }}
                                    </div>
                                    <div class='form-group col-md-4 mb-0'>
                                        {{ form.uf|as_crispy_field }}
                                    </div>
                                </div>
                                <div class=""form-row"">
                                <div class=""form-group col-md-6 mb-0"">
                                    {{ form.endereco|as_crispy_field }}
                                </div>
                                <div class=""form-group col-md-6 mb-0"">
                                    {{ form.bairro|as_crispy_field }}
                                </div>
                                
                                </div>
                                <div class=""form-row"">
                                <div class=""form-group col-md-6 mb-0"">
                                    {{ form.ativo|as_crispy_field }}
                                </div>
                                <div class=""form-group col-md-6 mb-0"">
                                    {% for message in messages %}
                                    <div class=""alert alert-success"" role=""alert"">
                                        {{ message }}
                                    </div>
                                    {% endfor %}
                                </div>
                                </div>
                                
                                <button type=""submit"" class=""btn btn-primary"">Adicionar</button>
                        {% endif %}
                    </form>
                </div>
            </div>
            
        </div>
    </div>
</div>
{% endblock  %}

esse é o jquery para chamar a url que chama a view lá em cima.
{% block script %}
    <script>
    $(""#id_cep"").blur(function(){
        $.ajax({
            url: ""{% url 'cadastro_empresa' %}"",
            method: 'GET',
            data:{cep: $('#id_cep').val()},
            beforeSend: function(){
                $('#id_nome').val();
            },  
            success: function(response){
                
            }
        })
    });
    </script>
{% endblock  %}

e por fim esse é o retorno de quando dou print no meu form depois do ""if resposta != ''""
<tr><th><label for=""id_endereco"">Endereco:</label></th><td><input type=""text"" name=""endereco"" value=""Rua Nelson Cordeiro"" maxlength=""400"" required id=""id_endereco""></td></tr>
<tr><th><label for=""id_bairro"">Bairro:</label></th><td><input type=""text"" name=""bairro"" value=""Loteamento Marinoni"" maxlength=""200"" required id=""id_bairro""></td></tr>
<tr><th><label for=""id_cep"">Cep:</label></th><td><input type=""text"" name=""cep"" maxlength=""9"" required id=""id_cep""></td></tr>


como podem ver ele está enviando junto com o form as values com os valores da api que estou consultando mas infelizmente esses valores não são renderizados na tela alguém pode me ajudar ?
","
Você vai ter que renderizar esse seu form no HTML. Primeiro, você vai ter que retornar essa variável form como um json. Esse trecho de código vai no lugar do print(form). Assim:
from django.http import JsonResponse
data = {}
data[""form""] = form
return JsonResponse(data)

Em seguida, no javascript, dentro da função success, você vai pegar o retorno que vem na variável response e renderizar em alguma div vazia no html. Assim:
// coloquei o id div-vazia, mas você altera de acordo com a sua necessidade
$('#div-vazia').html(response.form);

Existe também outra forma, que seria jogando os valores diretamente nos inputs.
Esse trecho de código vai no lugar do print(form).
from django.http import JsonResponse
data = {}
data[""endereco""] = logradouro
data[""bairro""] = bairro
return JsonResponse(data)

Esse trecho de código vai dentro do success.
const endereco = response.endereco
const bairro = response.bairro
$(""#id_endereco"").val(endereco);
$(""#id_bairro"").val(bairro);

Resumindo, aqui retornamos json da view, recebemos essas informações na função AJAX e manipulamos o DOM para exibir essas informações. Vlw!
","
            0
        ",,,"['\npython', 'django', 'formulário', 'post', 'get\n']"
508802,Maior numero primo,"
Poderiam me ajudar com meu código? Eu estou tentando fazer o programa imprimir o maior numero primo dos quais o usuário digitou, porém o meu programa ta imprimindo o maior de TODOS e não o maior primo. eis o código.
def primo(numero):     
   if (numero == 1):
       return False

   
   for d in range(2,(int)(numero/2)+1):
    
       if (numero % d == 0):
        return False
       
   else:
    return True

c = maior = 0   
while True:
   numero = int(input())
   if numero == 404:
       break
   if primo(numero):
       c += primo(numero)
   else:
       c -= primo(numero)
   if c == 1:
       maior = (numero)
   else:
       if (numero) > maior:
           maior = (numero)
      
       
if c > 0:
   print(f'{maior}')
else:
   print('SEM PRIMOS')

","
Verifique inicialmente se um numero é primo, isso é feito no segundo if dentro do while, e caso sea primo incremente a quantidadede primos c, verifique se esse numero primo é maior do que o maior caso seja entao maior recebe o numero.
Pelos prints você acompanhar essa troca de valores. Se c for maior do que 0 então existe pelo menos um numero primo
def primo(numero):
    
  if (numero == 1):
      return False 
  for d in range(2,(int)(numero/2)+1):  
      if (numero % d == 0):
        return False    
  return True

c = maior = 0   
while True:
  numero = int(input())
  if numero == 404:
      break
  if primo(numero):
      print('é primo '+str(numero))
      c += primo(numero)
      if numero > maior:
        maior = (numero)
        print('maior '+str(maior))      
      
if c > 0:
  print(f'{maior}')
else:
  print('SEM PRIMOS')

","
            1
        ","
Sabendo que:

f(x) = 2x + 1 | x ∈ N é a função no conjunto dos números naturais que definem os números impares.

range(0) é uma sequência vazia.

A expresão [identificador "":=""] expressão é uma expressão de atribuição(vide PEP 572).

A expresão x if C else y é uma expressão condicional.

O código abaixo não faz testes de validação para entrada do usuário.

O operador // é a divisão para o número inteiro mais próximo(Vide Floor Division).


É possível simplificar o seu algoritmo tornado-o mais eficiente e mais legível:
def primo(n):     
  #Testa n para saber se é 1 ou par diferente de 2...
  if n == 1 or (n != 2 and n % 2 == 0):                  
    return False                             #...caso seja uma ou ambas as condições retorna False. 
  #x percorre o intervalo [0, n/4[ no conjunto do números naturais...
  for x in range(n // 4):
    #...testa o n para saber se é divisível por um ímpar...
    if n % 2*x+1 == 0:
      return False                           #...se sim retorna False.
  return True                                #Passado em todos o testes retorna True.

c = False                                    #Flag que indica e se houve a entrada de um primo pelo usuário.
m = 0                                        #Declara o maior número.
while True:    
   #Testa a entrada n para saber se é 404...
   if (n:= int(input())) == 404:
       break                                 #...se n for 404 abandona o laço.
   #Testa se n é maior que m e se é primo, indicando ou não a entrada dum numero primo pelo usuário.
   if n > m and (c:= primo(n) or c):
     m = n                                   #...se sim a ambas a condições m recebe n.
      
print(f'{m}' if c else 'SEM PRIMOS')

Tete o código no repl.it
","
            1
        ","['\npython', 'revisão-de-código\n']"
508688,Rodar duas funções em loop ao mesmo tempo,"
Gostaria de rodar duas funções ao mesmo tempo em Python, segue meu código:
import socket
from pyftpdlib.handlers import FTPHandler
from pyftpdlib.servers import ThreadedFTPServer 
from pyftpdlib.authorizers import DummyAuthorizer



class MyHandler(FTPHandler):

    def on_connect(self):
        print(str(self.remote_ip)+':'+str(self.remote_port), 'se conectou!')

    def on_disconnect(self):
        # do something when client disconnects
        pass

    def on_login(self, username):
        # do something when user login
        pass

    def on_logout(self, username):
        # do something when user logs out
        pass

    def on_file_sent(self, file):
        # do something when a file has been sent
        pass

    def on_file_received(self, file):
        # do something when a file has been received
        pass

    def on_incomplete_file_sent(self, file):
        # do something when a file is partially sent
        pass

    def on_incomplete_file_received(self, file):
        # remove partially uploaded files
        os.remove(file)

def ftp_server():
    authorizer = DummyAuthorizer()
    authorizer.add_user('user', '', '.', perm='elradfmwMT')
    handler = MyHandler
    handler.authorizer = authorizer
    server = ThreadedFTPServer(('10.1.1.127', 21), handler)
    server.serve_forever()

def socket_server():
    host = '' 
    port = 7000 
    addr = (host, port) 
    serv_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    serv_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) 
    serv_socket.bind(addr) 
    serv_socket.listen(10) 
    print('aguardando conexao')
    con, cliente = serv_socket.accept() 
    print('conectado')
    print('aguardando mensagem')
    recebe = con.recv(1024) 
    print('mensagem recebida:'+ recebe)
    serv_socket.close() 

if __name__ == ""__main__"":
    ftp_server()
    socket_server()
    #Preciso que as duas funções acima funcionem ao mesmo tempo (ou seja, as duas 
    #fiquem ouvindo novas 
    #conexões, tanto FTP, como Socket, e sempre que vier uma conexão, a conexão 
    #deve ser devidamente 
    #atendida e tratada)

Como fazer isso da forma certa e mais simples possível? Achei vários tutoriais mais nenhum trás a simplicidade que eu quero para fazer isso.
","
A ideia inicial de threading é bem simples - e para o que vocẽ quer fazer aí: duas tarefas de I/O não relacionadas, cada uma na sua thread, é talvez um dos cenários em que fica mais simples de manter.
No caso é só criar dois objetos do tipo Thread, e o principal argumento para esses objetos é qual função vai rodar naquela thread (essa é a função que vai iniciar a thread: claro que ela pode chamar outras funções de lá de dentro).
Até daria para organizar tudo dentro do if __name__ == ...  aí - mas é melhor colocar essa lógica em uma função também:

import threading

...

def main():
    t1 = threading.Thread(target=ftp_server)
    t2 = threading.Thread(target=socket_server)
    t1.start()
    t2.start()
    
    t1.join()
    t2.join()
    
    
if __name__ == ""__main__"":
    main()

Perceba que na chamada para threading.Thread você não pode chamar a função,
(colocando os () depois de ftp_server()) - você passa a própria função como parâmetro. Se colocar () o Python vai chamar a função para tentar passar o valor de retorno dela para criar a classe Thread.
","
            3
        ","
facinho ^^ você pode usar Thread
faz assim:
import threading
import time

if __name__ == ""__main__"":
    # e na hora de chamar as funcoes:
    x = threading.Thread(target=ftp_server)
    x.start()
    y = threading.Thread(target=socket_server)
    y.start()
    while True:
        time.sleep(60)
        #isso aki he so pra nao sair do cod emquanto ta tudo rodando

","
            1
        ","['\npython', 'python-3.x', 'multithreading\n']"
508683,Django queries related objects,"
Então com dois modelos criados :
class Questao(models.Model):
    texto = models.CharField(max_length=220)
    quiz = models.ForeignKey(Quiz, on_delete=models.CASCADE)
    created = models.DateTimeField(auto_now_add=True)

    def __str(self):
        return str(self.text)

    def get_answers(self):
        return self.resposta_set.all()

    class Meta :
        verbose_name = ""Questão""
        verbose_name_plural = ""Questões""


class Resposta(models.Model):
    texto = models.CharField(max_length=220)
    correto = models.BooleanField(default=False)
    questao = models.ForeignKey(Questao, on_delete=models.CASCADE, related_name=""respostas"")
    created = models.DateTimeField(auto_now_add=True)

a função que criei para relacionar ambos os objetos ""get_answers"" esta com um erro visível
in get_answers
    return self.resposta_set.all()
AttributeError: 'Questao' object has no attribute 'resposta_set'
```
Podem me explicar como funciona o **_set** no django, e por que essa função não retorna nenhum atributo por favor ?

","
Pela sua pergunta pressuponho que você gostaria de listar as respostas de uma questão no método get_answers, logo entendo que ele deveria ser algo parecido com isso:
def get_answers(self):
    return Resposta.objects.filter(questao=self)

","
            0
        ","
Uma outra solução seria essa:
def get_answers(self):
    return self.respostas.all()

Usa o related_name definido.
","
            -1
        ","['\npython', 'django', 'django-queryset\n']"
508591,Como eu garanto números únicos em uma lista de listas?,"
Boa noite, estou tentando fazer uma cartela de bingo 5x5, usando random para gerar os valores, no entanto não pode haver números iguais. Tentei fazer dessa forma mas ainda surge números iguais:
import random as rd
cart1 = []

for i in range(0, 5):
    cart1.append([])

for l in range(0, 5):
    for c in range(0, 5):
        var = rd.randint(0, 99)

        if var not in cart1:
            cart1[l].append(var)

print(""\n"")
print(""A cartela 1 é:"")
for l in range(0, 5):
    for c in range(0, 5):
        print(f""[{cart1[l][c]:^5}]"", end="""")

    print()

Um dos resultados:
","
import random
lista = random.sample(range(100),10)

Esse comando gera uma lista de 10 números variando de 0 a 99. Com isso você pode organizar da forma que achar melhor.
Se você quiser organizar em matriz, eu recomendo usar numpy array.
Por exemplo:
import random
lista = random.sample(range(100),25)
lista = np.array(lista)
lista = np.reshape(lista, (5, 5))

resultado:
array([[29, 85,  6, 40, 14],
       [78,  2, 77, 41, 46],
       [ 9, 52, 68, 19, 97],
       [65, 90, 75, 93, 50],
       [31,  4, 27, 55, 10]])

","
            0
        ",,,"['\npython', 'array', 'lista', 'for', 'random\n']"
508528,Filtrar DataFrame pandas com duas ou mais condições,"
Estou criando um grafico com o dataset tips, para isso preciso filtrar os dados basedos em duas ou mais condições. Meu objetivo é contar a quantidade de homens, e a quantidade de mulheres. E tambem contar somente a quantidade de homens fumantes e a quantidade de mulher fumantes. O codigo abaixo faz isso mas ao adicionar mais condições dar erro. Como eu podeira fazer essa filtragem usando duas os mais condições?
import pandas as pd
import seaborn as sns

df = sns.load_dataset(""tips"")

men = df[df.sex=='Male'].count()[0]
women = df[df.sex=='Female'].count()[0]

# isso dar erro
men_smoker = df[df.sex=='Male' & df.smoker=='Yes'].count()[0]

Esse é o erro TypeError: unsupported operand type(s) for &: 'str' and 'Categorical'
DataFrame:
    total_bill  tip sex smoker  day time    size
0   16.99   1.01    Female  No  Sun Dinner  2
1   10.34   1.66    Male    No  Sun Dinner  3
2   21.01   3.50    Male    No  Sun Dinner  3
3   23.68   3.31    Male    No  Sun Dinner  2
4   24.59   3.61    Female  No  Sun Dinner  4

","
Usando o & operador, não se esqueça de envolver as subinstruções com ().
men_smoker = df[(df.sex=='Male') & (df.smoker=='Yes')].count()[0]

","
            1
        ",,,"['\npython', 'python-3.x', 'pandas', 'dataframe\n']"
508515,Criar dataframe pandas 1 chave e alguns valores não padronizado no dicionário,"
Tenho um dicionário em Python:
dict = {0:[['tela1'],['tela2'],['tela3']], 1:[['tela2']], 2:[['tela5'],['tela7']], 4:[['tela1'],['tela3']]}
e gostaría de transformar em um dataframe da seguinte maneira:




Id
Valores




0
tela1


0
tela2


0
tela3


1
tela2


2
tela5


2
tela7


4
tela1


4
tela3



 ","
import pandas as pd

dicionario = {0:[['tela1'],['tela2'],['tela3']], 
              1:[['tela2']], 
              2:[['tela5'],['tela7']], 
              4:[['tela1'],['tela3']]}

df = pd.DataFrame.from_dict(dicionario, orient='index')
df = df.T.melt().dropna()
df = df.rename(columns={'variable':'id','value':'Valores'})
df = df.explode('Valores')





id
Valores




0
tela1


0
tela2


0
tela3


1
tela2


2
tela5


2
tela7


4
tela1


4
tela3




Uma das possíveis soluções utilizando from dict do pandas.
O melt serve para transformar colunas em linhas.
O explode serve para remover itens de dentro de uma lista e criar um novo registro.
","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
508484,Mostrar dias da semana,"
Montei esse código para mostrar o dia da semana. Funciona, mas gostaria de saber se tem outro jeito com menos linhas/comandos que poderia usar. Ou um jeito mais 'limpo' por assim dizer.
import datetime

# Pega a data atual
dia = datetime.date.today().day
ano = datetime.date.today().year
mês = datetime.date.today().month
sem = (""Segunda"", ""Terça"", ""Quarta"", ""Quinta"", ""Sexta"", ""Sábado"", ""Domingo"")
ds = (""Segunda"", ""Terça"", ""Quarta"", ""Quinta"", ""Sexta"")

# Verifica que dia é hoje de acordo com o padrão de data em inglês ex:(2021/05/10)
num = datetime.date(ano, mês, dia).weekday()
p = (sem[num])

# De acordo com o número que 'p' tiver, é setado um dia da semana conforme o correspondente na lista 'ds'
# 'ds' é abreviação de Dias da Semana

# Verifica se o dia atual é dia útil, se não for é considerado 'fim de semana'
if p in ds:
    h = 'dia de semana'
else:
    h = 'fim de semana'

# Termina o código mostrando que dia é hoje
if h == 'dia de semana':
    print(f""Tenha uma boa {sem[num]} =D"")
else:
    print(f""Tenha um bom {sem[num]} =D"")

","
Primeiro, não tem porque usar datetime.date(ano, mês, dia) se já esta usando today()
E para checar se é sábado ou domingo basta checar se o valor de weekday é maior que 4, se for menor que 5 é dia de semana, não precisa de num in (5, 6) (tuple) e nem de num in {5, 6} (set), basta fazer num < 5, já que como disse, os ""finais"" são 5 e 6, então você sabe que os dias ""de semana"" são de 0 a 4:




Valor
Dia da semana




0
Segunda


1
Terça


2
Quarta


3
Quinta


4
Sexta


5
Sábado


6
Domingo




Usando a própria biblioteca que já esta usando em seu código:
from datetime import date

num = date.today().weekday()

sem = (""Segunda"", ""Terça"", ""Quarta"", ""Quinta"", ""Sexta"", ""Sábado"", ""Domingo"")

if num < 5:
    print(f""Tenha uma boa {sem[num]}-feira =D"")
else:
    print(f""Tenha um bom {sem[num]} =D"")

","
            4
        ","
Tem bastante código não utilizado no seu algoritmo. Pelo que deu pra entender você quer dar um print em ""Tenha uma boa XXX-Feira"" ou ""Tenha um bom Sábado/Domingo"" mas você cria e não utiliza variáveis ou cria desnecessariamente.
Um exemplo de como poderia ser feito mais concisamente:
from datetime import date

dia_semana = date.today().weekday()
nomes = (""Segunda"", ""Terça"", ""Quarta"", ""Quinta"", ""Sexta"", ""Sábado"", ""Domingo"")

if dia_semana in {5, 6}:
    print(f""Tenha um bom {nomes[dia_semana]} =D"")
else:
    print(f""Tenha uma boa {nomes[dia_semana]} =D"")


Como você não vai usar o objeto ""hoje"" criado com date.today(), não estou salvando em lugar nenhum pois só preciso qual é o dia da semana. Depois basta checar se é fim de semana e printar o nome correto.
","
            4
        ","['\npython', 'data\n']"
508422,Acessando um Widget PyQt5 e módulos dentro de um package,"
Estou fazendo um programa utilizando como GUI o framework PyQt5, usando arquivos UI. Estou tendo problemas para acessar o módulo dentro do arquivo .py que crio para que eu coloque as funções dentro delas e assim organizar melhor o meu programa.

A função que quero chamar é a char_1 que está dentro de characters.py.
No programa principal main.py eu o importo da seguinte maneira from util.images.characters import checar, mas desta forma ele me retorna este erro:
AttributeError: partially initialized module 'util.images.characters' has no attribute 'checar' (most likely due to a circular import)
De alguma forma, ele só consegue acessar a função quando ela está dentro do arquivo __init__.py da pasta images.
Queria saber, a fim de organizar o meu programa, como consigo acessar esta função dentro do arquivo characters.py.
Abaixo se segue os códigos ""resumidos"" do programa.
OBS: actionAlbedo é o nome do item do QAction do QMenu do arquivo ui/tela.ui.

main.py

from PyQt5 import uic, QtWidgets, QtGui
from util.images.characters import checar

app = QtWidgets.QApplication([])

tela = uic.loadUi('ui/tela.ui')
tela.actionAlbedo.triggered.connect(checar)

tela.show()
app.exec_()


characters.py

import main
from PyQt5 import QtGui


def checar():
    main.tela.lb_background.setPixmap(QtGui.QPixmap('img/background/char_1.png'))

Grato!
","
Aqui está o erro:
(most likely due to a circular import)
Quando você importa um arquivo, o código que está dentro dele é executado. Logo, o arquivo main.py está executando o arquivo characters.py que novamente chama o arquivo main.py. Levantando, assim, uma importação circular.
Uma solução pra isso seria passar a variável tela que você quer acessar no arquivo characters.py como um parâmetro da função.
def checar(tela):
    tela.lb_background.setPixmap(QtGui.QPixmap('img/background/char_1.png'))

","
            0
        ",,,"['\npython', 'python-3.x', 'pyqt-5', 'qtgui\n']"
508319,Separar coluna de DataFrame em lista [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Tenho um DataFrame com três colunas:
 Categoria Label   Porcentagem
 Cat1      Label1  40
 Cat1      Label2  10
 Cat1      Label3  25
 Cat1      Label4  25
 Cat2      Label1  50
 Cat2      Label2  50
 Cat3      Label3  100

Preciso transformar a coluna de Porcentagem em lista, preservando as 4 entradas do Label, por Categoria, do tipo:
 lista_porcent = [[40, 10, 25, 25],
                [50,50,0,0],
                [0,0,100,0]]

Como fazer?
Valeu!!!
","
O que você precisa é de um pivot_table:
table=pd.pivot_table(data=df,index='Label',values='Porcentagem', columns='Categoria').fillna(0)

print([table[k].to_list() for k in table.columns])

Output:
[[40.0, 10.0, 25.0, 25.0], [50.0, 50.0, 0.0, 0.0], [0.0, 0.0, 100.0, 0.0]]

","
            0
        ",,,"['\npython', 'python-3.x', 'pandas\n']"
508267,Unir listas baseada em valor de coluna chave,"
Estou convertendo 2 dataframes em 2 listas. E vou agrupa-las pela coluna CNPJ_UF_MES (sempre a 1ª coluna de cada dataframe. No exemplo real, unirei mais de 2 dataframes.
Após agrupar essas listas, terei listas de listas. e preciso uni-las baseados na coluna chave.
import pandas as pd

df1 = pd.DataFrame({
    'CNPJ_UF_MES': ['1-MG', '1-MG', '2-MG'],
    'CLIENTE_PAR_COMEX': ['1_2_3', '2_3_4', '3_4_5'],
    'REG': ['1110', '1110', '1110'],
    'COD_IP_PAR': ['200', '200', '200'],
    'COD_CLIENTE': ['xxr', 'xxv', 'xxw'],
    'IND_COMEX': ['wer', 'cad', 'sder'],
    'IND_EXTEMP': ['key_1', 'key_2', 'key_3'],
    'DT_INI': ['01032021', '01032021', '01032021'],
    'DT_FIN': ['31032021', '31032021', '31032021'],
    'VALOR': ['wer', 'cad', 'sder'],
    'PIPE_FIN': ['', '', '']
})


df2 = pd.DataFrame({
    'CNPJ_UF_MES': ['1-MG', '1-MG', '1-MG', '1-MG', '2-MG', '2-MG'],
    'CLIENTE_PAR_COMEX': ['1_2_3', '2_3_4', '3_4_5','1_2_3', '2_3_4', '3_4_5'],
    'REG': ['1110', '1110', '1110', '1110', '1110', '1110'],
    'COD_MCAPT': ['C-200', 'C-200', 'C-200', 'C-200', 'C-200', 'C-200'],
    'DT_OP': ['07032021', '07032021', '07032021', '08032021', '08032021', '08032021'],
    'VALOR': ['1', '2', '3', '1', '2', '3'],
    'QTD': ['2', '2', '2', '2', '2', '2'],
    'CNPJ_ADQUI': ['123', '123', '123', '123', '123', '123'],
    'PIPE_FIN': ['', '', '', '', '', '']

})



list1 = df1.values.tolist()
#print(list1)

values = set(map(lambda x:x[0], list1))
newlist1 = [[y for y in list1 if y[0]==x] for x in values]

print(newlist1)

list2 = df2.values.tolist()
#print(list2)


values = set(map(lambda x:x[0], list2))
newlist2 = [[y for y in list2 if y[0]==x] for x in values]

print(newlist2)

##Estou tendo problema aqui:
list3 = newlist1.append(newlist2)
print(list3)


Gostaria de ter listas de listas agrupadas pela coluna chave.
Alguma ideia?
Esse é o output desejado:
[[
  ['2-MG', '3_4_5', '1110', '200', 'xxw', 'sder', 'key_3', '01032021', '31032021', 'sder', ''],
  ['2-MG', '2_3_4', '1110', 'C-200', '08032021', '2', '2', '123', ''],
  ['2-MG', '2_3_4', '1110', 'C-200', '08032021', '2', '2', '123', '']
  ],
 [
  ['1-MG', '1_2_3', '1110', '200', 'xxr', 'wer', 'key_1', '01032021', '31032021', 'wer', ''],
  ['1-MG', '2_3_4', '1110', '200', 'xxv', 'cad', 'key_2', '01032021', '31032021', 'cad', ''],
  ['1-MG', '1_2_3', '1110', 'C-200', '07032021', '1', '2', '123', ''],
  ['1-MG', '2_3_4', '1110', 'C-200', '07032021', '2', '2', '123', ''],
  ['1-MG', '3_4_5', '1110', 'C-200', '07032021', '3', '2', '123', ''],
  ['1-MG', '1_2_3', '1110', 'C-200', '08032021', '1', '2', '123', '']
  ]]

Posteriormente vou manipular essas listas e criar arquivos CSV, cada arquivo agrupado pela coluna chave ""CNPF_UF_MES"".
","
Você pode agrupar um Dataframe pelos dados em uma coluna com o método DataFrame.groupby() que divide o objetos em grupos definidos por um critério, nesse caso em especifico serão os dados da coluna CNPJ_UF_MES que definirão os grupos em cada Dataframe.
A partir desses grupos é possível construir um dicionário result cujo as chaves serão os dados da coluna CNPJ_UF_MES e os valores serão uma lista de listas obtidas com a concatenação dos valores de cada grupo:
result = {}                                         #Inicializa o dicionário que irá manter o resultado.
#Itera em df por ambos os Dataframes...
for df in [df1, df2]:
  #...agrupa df onde n é o dado em CNPJ_UF_MES e g é o respectivo grupo...
  for n, g in df.groupby(""CNPJ_UF_MES""): 
      #...testa se já existi a chave n em result...
      if n in result:
        result[n] += g.values.tolist()              #...se sim, concatena a lista em result com a lista obtida do grupo. 
      else:
        result[n] = g.values.tolist()               #...se não, cria a chave em result e adiciona a lista obtida do grupo como valor.

pprint.pprint(list(result.values()), compact=True)  #Imprime a lista com os valores de result.

[[
  ['1-MG', '1_2_3', '1110', '200', 'xxr', 'wer', 'key_1', '01032021','31032021', 'wer', ''],
  ['1-MG', '2_3_4', '1110', '200', 'xxv', 'cad', 'key_2', '01032021','31032021', 'cad', ''],
  ['1-MG', '1_2_3', '1110', 'C-200', '07032021', '1', '2', '123', ''],
  ['1-MG', '2_3_4', '1110', 'C-200', '07032021', '2', '2', '123', ''],
  ['1-MG', '3_4_5', '1110', 'C-200', '07032021', '3', '2', '123', ''],
  ['1-MG', '1_2_3', '1110', 'C-200', '08032021', '1', '2', '123', '']
 ],
 [
  ['2-MG', '3_4_5', '1110', '200', 'xxw', 'sder', 'key_3', '01032021', '31032021', 'sder', ''],
  ['2-MG', '2_3_4', '1110', 'C-200', '08032021', '2', '2', '123', ''],
  ['2-MG', '3_4_5', '1110', 'C-200', '08032021', '3', '2', '123', '']
 ]]

Teste o código no Repl.it
","
            2
        ",,,"['\npython', 'lista', 'pandas\n']"
508239,Como ler um arquivo csv pelo pandas sem apagar o primeiro numero?,"
Olá, eu tenho um arquivo.csv e quero ler com a biblioteca pandas em Python. Quando executo o comando ele tira o primeiro 0 da sequencia de números.
Alguém pode me ajudar com isso?
Eu quero que ele mantenha os zeros na frente igual do arquivo.csv
import pandas as pd
lista=pd.read_csv('~/caminho/meu_arquivo.csv')


#Esse é meu arquivo csv
""""""
teste
01234567899
12345678909
23456789012
09876543211
""""""
#Minha saída
""""""
Out[98]: 
     teste
0   1234567899
1  12345678909
2  23456789012
3   9876543211

https://replit.com/@Dennisrochaa/teste-1#main.py
","
Arquivos CSV não vem com definição dos tipos de dados de suas colunas. Então o módulo Pandas ao ler um CSV deve inferir qual o tipo de dados mais adequado.
No seu caso a coluna teste foi avaliada como uma coluna numérica. Em tipos de dados numéricos os zeros a esquerda são automaticamente suprimidos.
Especifique explicitamente através do parâmetro dtype do método pandas.read_csv() que a coluna é uma string.
O parâmetro dtype pode ser preenchido com um dicionário e onde as chaves são os nomes das colunas e o valores os respectivos tipos de dados:
import pandas as pd

lista = pd.read_csv('./meu_arquivo.csv', dtype={""teste"": str})
print(lista)

         teste
0  01234567899
1  12345678909
2  23456789012
3  09876543211

Teste o código no Rep.it
Também dtype pode ser preenchido com um único tipo de dados onde será aplicado em todas as colunas:
import pandas as pd

lista = pd.read_csv('./meu_arquivo.csv', dtype=str)
print(lista)

","
            5
        ",,,"['\npython', 'pandas', 'csv', 'dataframe\n']"
508219,Problemas com os print no socket python,"
eu já estou a horas tentando resolver esse erro, bom... no socket do python eu fiz um programa em que o cliente envia o nome dele e o programa pega o IP e a data e hora que ele enviou e escreve essas informações num arquivo .txt
Mas eu estou com problema nos prints das informações do cliente
Esse é o código do servidor:
#SERVIDOR
from socket import *
from time import *

sala = socket(AF_INET, SOCK_STREAM)
sala.bind(('', 58117))
sala.listen()
print('Aguardando Clientes...\n')

while True:
   con, adr = sala.accept()
   
   client_nome = con.recv(1024).decode()
   IP = con.recv(1024).decode()
   data = con.recv(1024).decode()
   hora = con.recv(1024).decode()
   print(f'Nome: {client_nome}')
   print(f'IP: {IP}')
   print(f'Data: {data} | Hora: {hora}')

   with open('/storage/emulated/0/python/pessoas.txt', 'a') as ip:
      ip.write(f'\nPessoa: {client_nome}\nIP: {IP}\n{data}\n')

Esse é o do cliente:
#CLIENTE
from time import *
from socket import *
from requests import *

dh = localtime()

client = socket(AF_INET, SOCK_STREAM)
client.connect(('', 58117))

client_nome = str(input('Apelido: '))
IP = get('https://api.ipify.org').text

data = str(f'{dh[2]}/{dh[1]}/{dh[0]}')
hora = str(f'{dh[3]}:{dh[4]}')

client.send(client_nome.encode())
client.send(IP.encode())
client.send(data.encode())
client.send(hora.encode())

Esse é o resultado com os prints bugados:
Aguardando Clientes..


Nome: TESTE PY
IP: THON
Data: 177.107.10 | Hora: 7.24

A parte do nome invadiu a área do ip, o ip ficou na parte de data e hora, e a data e hora sumiram kkk eu realmente não sei oque está errado, sou novo no socket, então por favor alguém me ajuda a tirar esse ""Bug""
","
Se você garantir que a mensagem é menor que 1024, isso servirá
Servidor
#SERVIDOR
from socket import *
from time import *

sala = socket(AF_INET, SOCK_STREAM)
sala.bind(('', 58117))
sala.listen()
print('Aguardando Clientes...\n')

while True:
   con, adr = sala.accept()

   dados = con.recv(1024).decode()

   print(dados)

   client_nome, IP, data, hora = dados.split(""|"")

   print(f'Nome: {client_nome}')
   print(f'IP: {IP}')
   print(f'Data: {data} | Hora: {hora}')

   with open('./pessoas.txt', 'a') as ip:
      ip.write(f'\nPessoa: {client_nome}\nIP: {IP}\n{data}\n')

Cliente
#CLIENTE
from time import *
from socket import *
from requests import *

dh = localtime()

client = socket(AF_INET, SOCK_STREAM)
client.connect(('', 58117))

client_nome = str(input('Apelido: '))
IP = get('https://api.ipify.org').text

data = str(f'{dh[2]}/{dh[1]}/{dh[0]}')
hora = str(f'{dh[3]}:{dh[4]}')

client.send((f'{client_nome}|{IP}|{data}|{hora}').encode())

","
            0
        ",,,"['\npython', 'socket\n']"
508204,Verificar se valor é string ou número [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como verificar se o valor de variável string é numero?

                                (11 respostas)
                            

Fechada há 3 anos.



10) Faça um algoritmo que verifica se um determinado valor é uma String.
valor = str(input(""Informe um valor: ""))

if(type(valor) == str):
    print(""É uma String!"")

No IDLE ou no Python Console do PyCharm, se digito:
valor = ""João""
type(valor)

ele retorna:
<class 'str'>

Pesquisei no Google e ouvi sobre uma função isinstance()
11) Faça um algoritmo que verifica se um determinado valor é do tipo decimal.
valor = input(""Informe um valor: "")

if(isinstance(valor, float)):
    print(""É um decimal!"")
else:
    print(""Não é um decimal!"")

O código acima, da pergunta 11, resulta numa saída errada, pois se eu digito 3, ou 3.2, em ambos ele retorna ""Não é um decimal!""
Gostaria de saber as respostas pra essas 2 perguntas..(uso Python 2.7 ou Python 3.7, ambas estão em Ambientes Virtuais com Anaconda)
Consegui fazer 14 exercícios de 18, porém estes 2 e mais outros 2 que talvez eu poste posteriormente, não consegui.
","

Considerando apenas o sistema decimal (sem levar em conta hexa, octal, etc):

valor='1'
while valor!='0':
    valor = input('Digite o valor:')
    try:
        print(float(valor),' É um numero')
    except ValueError:
        print(valor, 'É uma string')

Obs.:
Com um pouco de esforço vc pode refinar mais para distinguir inteiros de float.
Veja funcionando no repl.it
","
            1
        ","

O código acima, da pergunta 11, resulta numa saída errada, pois se eu digito 3, ou 3.2, em ambos ele retorna ""Não é um decimal!""

O código retrata o que está acontecendo - o valor de retorno do input em Python 3 sempre é uma string.
Para verificar se a string pode ser usada como um inteiro ou um número decimal, você tem que escrever mais código. Por exemplo, strings tem o método .isdigit() que retorna True se todos os caractéres na string são dígitos - isso permite verificar se a string contém um inteiro.
Você pode usar também o método .count e verificar se a contagem do carácter ""."" (ou "","", como preferir) dentro da string é 1. A forma mais prática de verificar se é um número float válido no entanto é tentar converte-la pra float, e capturar um eventual erro, com um try/except - se der erro, é por que não é um float válido. 
a = input(""digite coisas:"")
try:
   b = float(a)
except ValueError:
   eh_decimal = False
else:
   eh_decimal = True

...

Talvez você tenha se confundido com algum exemplo que tenha visto de Python 2, o input tenta interpretar o que for digitado como se fosse uma expressão de Python. Então números são retornados diretamente do input como ""int"" e ""float"" (e texto, em geral vai dar um erro ) . Em Python 2, o correto era usar  raw_input no lugar do input. 
","
            1
        ","['\npython', 'python-3.x\n']"
508203,Dúvida com o contador no while,"
Analisando esse código que serve para calcular progressão aritimética e que está funcionando corretamente:
primeiro_termo = int (input ('Primeiro termo: ')) 
razao = int (input ('Razão: '))
contador = 1
resultado = primeiro_termo
total = 0
a_mais = 10

while a_mais != 0:
    total = total + a_mais
    print ('Resultado = ', end='')
    while contador <= total:
        resultado += razao
        contador += 1
        print (resultado, end=' ')
    a_mais = int (input ('\nQuantos termos a mais você quer mostrar?: '))
print (contador)
print (f'Obrigado por jogar. Você consultou {total} termos.')

Nesse caso a variável contador não devia continuar somando, a medida que eu fosse atribuindo novos valores a variável a_mais?
Isso não impediria a condição while de funcionar? Uma vez que o valor agregado na variável contador seria maior do que o valor da variável total?
O print que eu fiz do contador na penúltima linha mostra que ele está somando normalmente, mas ainda assim, a condição while é executada como se o contador estivesse zerado.
Só para deixar claro, o código está funcionando corretamente, a minha dúvida é entender porque ele funciona, uma vez que no meu entendimento de iniciante a variável contador deveria ser zerada para a condição while poder ser executada.
","
Fazer um teste de mesa já ajudaria a entender melhor. Mas enfim, vamos ver o que acontece:
Supondo que foi digitado primeiro_termo = 1 e razao = 2. As demais variáveis serão:




variável
valor




contador
1


resultado
1


total
0


a_mais
10




Como a_mais vale 10, ele entra no while a_mais != 0.
A linha total = total + a_mais é executada, então temos:




variável
valor




contador
1


resultado
1


total
10


a_mais
10




Depois ele imprime a mensagem ""Resultado = "", e pelos valores acima temos que contador é menor que total e portanto entra no while contador <= total.
Ao executar resultado += razao e contador += 1, temos:




variável
valor




contador
2


resultado
3


total
10


a_mais
10




Ele imprime o resultado (que é 3), e como contador ainda é menor que total, ele continua no while contador <= total.
Esse processo é repetido várias vezes. Vou pular estas etapas porque será repetitivo - afinal, é um loop :-) - mas quando contador chegar a 11, ele sai do while contador <= total. Neste ponto, teremos:




variável
valor




contador
11


resultado
21


total
10


a_mais
10




Aí você lê novamente um valor para a_mais. Vamos supor que agora eu digite 1. Ou seja, agora a_mais será 1 e por isso ele continua no while a_mais != 0. Então ele executa a linha total = total + a_mais, e aí teremos:




variável
valor




contador
11


resultado
21


total
11


a_mais
1




Repare que total foi atualizado, e por isso a condição do while contador <= total continua sendo satisfeita. Por isso que ele executa esse while novamente. Não tem essa história de ""a condição while é executada como se o contador estivesse zerado"". O contador não foi zerado, só que o total foi atualizado e por isso a condição do while continua válida.

Só para constar que esse código não está imprimindo o primeiro termo. No exemplo acima eu digitei primeiro_termo = 1 e razao = 2 e o primeiro número impresso é o 3, mas se o primeiro termo é 1, então não deveria começar por 1?
Enfim, entendo que - provavelmente - este é um exercício e tal, mas só para deixar registrado, dá para fazer isso usando os recursos da própria linguagem. Se quer uma sequência de números, use range, que é feito justamente para isso. Assim você já consegue imprimir e pegar o tamanho mais facilmente (nem precisa mais do contador):
primeiro_termo = int(input('Primeiro termo: ')) 
razao = int(input('Razão: '))
quantidade = 10 # quantidade de termos que será impressa
total = 0

while True:
    numeros = range(primeiro_termo, primeiro_termo + quantidade * razao, razao)
    total += len(numeros)
    print(*numeros, sep=' ', end=' ')
    quantidade = int(input('\nQuantos termos a mais você quer mostrar?: \n'))
    if quantidade == 0:
        break # sai do while
    # nova sequência começa do próximo termo (ou seja, o último a ser impresso + a razão da PA)
    primeiro_termo = numeros[-1] + razao

print(f'Obrigado por jogar. Você consultou {total} termos.')

","
            3
        ",,,"['\npython', 'while\n']"
508161,Retornar elemento contido em tag no BeautifulSoup [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Site: Malha do metrô do município de São Paulo.
Objetivo: Scraping do nome das estações de cada linha.
Dificuldade: Não estou conseguindo isolar os nomes, por exemplo: Jabaquara, Liberdade...
from bs4 import BeautifulSoup
from urllib.request import urlopen
html = urlopen('http://www.metro.sp.gov.br/sua-viagem/trajeto/')
soup = BeautifulSoup(html, 'html.parser')

linha_1 = soup.findAll(class_='linha-1-azul')
linha_1

#[<ul class=""linha-1-azul"">
 <li><a href=""/sua-viagem/linha-1-azul/estacao-jabaquara.aspx"">Jabaquara</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-conceicao.aspx"">Conceição</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-sao-judas.aspx"">São Judas</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-saude.aspx"">Saúde</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-praca-arvore.aspx"">Praça da Árvore</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-santa-cruz.aspx"">Santa Cruz</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-vila-mariana.aspx"">Vila Mariana</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-ana-rosa.aspx"">Ana Rosa</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-paraiso.aspx"">Paraíso</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-vergueiro.aspx"">Vergueiro</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-sao-joaquim.aspx"">São Joaquim</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-liberdade.aspx"">Japão-Liberdade</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-se.aspx"">Sé</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-sao-bento.aspx"">São Bento</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-luz.aspx"">Luz</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-tiradentes.aspx"">Tiradentes</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-armenia.aspx"">Armênia</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-portuguesa-tiete.aspx"">Portuguesa-Tietê</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-carandiru.aspx"">Carandiru</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-santana.aspx"">Santana</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-jardim-sao-paulo.aspx"">Jardim São Paulo-Ayrton Senna</a></li>
 <li><a href=""/sua-viagem/linha-1-azul/estacao-parada-inglesa.aspx"">Parada Inglesa</a></li>
 <li class=""ultimaLinha""><a href=""/sua-viagem/linha-1-azul/estacao-tucuruvi.aspx"">Tucuruvi</a></li>
 </ul>]

","
Caso seu objetivo seja extrair o conteúdo textual de um documento ou conteúdo textual sob uma tag, você pode usar o método get_text() que retorna todo o conteúdo textual do documento ou sob uma tag:
from bs4 import BeautifulSoup
from urllib.request import urlopen
html = urlopen('http://www.metro.sp.gov.br/sua-viagem/trajeto/')
soup = BeautifulSoup(html, 'html.parser')

linha_1 = soup.findAll(class_='linha-1-azul')

#Itera por cada elemento e obtido na consulta...
for e in linha_1:
  print(e.get_text())                 #...extrai e imprime o conteúdo textual sob o elemento.

 Jabaquara 
 Conceição 
 São Judas 
 Saúde 
 Praça da Árvore 
 Santa Cruz 
 Vila Mariana 
 Ana Rosa 
 Paraíso 
 Vergueiro 
 São Joaquim 
 Japão-Liberdade 
 Sé 
 São Bento 
 Luz 
 Tiradentes 
 Armênia 
 Portuguesa-Tietê 
 Carandiru 
 Santana 
 Jardim São Paulo-Ayrton Senna 
 Parada Inglesa 
 Tucuruvi

Teste o código no Repl.it
","
            2
        ",,,"['\npython', 'beautifulsoup\n']"
508155,Selenium - Não foi possivel fazer login ( navegador não seguro ),"
Olá, boa noite, estou tentando desenvolver um web bot em python, usando a biblioteca selenium e webdrive_manager, porem quando tento fazer login em minha conta do google usando o navegador que o bot está atuando, ele me retorna um erro dizendo que não foi possivel fazer login pelo navegador não ser seguro. alguem pode me ajudar? segue o erro e o código abaixo:
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager

browser = webdriver.Chrome(ChromeDriverManager().install())
browser.get('https://classroom.google.com/u/0/h')

error:

não sei se é algum mecanismo de defesa do google ou algum problema com o código, agradeço desde já!! há, e por curiosidade, o bot seria para acessar as aulas online automaticamente, por isso nescessito de fazer login nessa conta
","
Provavelmente você tem que ativar aplicativos menos seguros em https://myaccount.google.com/lesssecureapps, ao acessar clique no botão aonde está marcado DESATIVADA, como na imagem abaixo



Outra possibilidade (mas menos provavel) é que sua conta do google use duplo-fator (mas não estou certo disso).
Ainda sim se a intenção é acessar contas aleatórias, que não possa definir essa permissão, então creio que não vá conseguir (não testei em outros drivers), esse sistema de permissão é justamente para a segurança do usuário.
","
            1
        ","

Crie uma conta nova do Google
Vá em https://myaccount.google.com/lesssecureapps e ative a opção Permitir aplicativos Menos Seguros

","
            -2
        ","['\npython', 'python-3.x', 'selenium', 'selenium-webdriver', 'automatização\n']"
508133,Erro ao converter arquivo bytes em string literal em python [duplicada],"






Essa pergunta já tem uma resposta aqui:
                        
                    



Como mostrar acentos no python?

                                (1 resposta)
                            

Fechada há 11 meses.



Faço um select para trazer um arquivo xml que está armazenado como blob no banco de dados oracle.
Faço a leitura do arquivo e salvo o conteudo em uma variavel. Ao verificar o tipo da variavel é do tipo bytes. Faço a conversão usando o decode mas o conteudo vem corrompido. O que pode ser??
Segue meu codigo:
def retornaXml(seqXml):
# 321527
cur = OracleConfig().conn.cursor()

cur.execute(f""SELECT BinArq FROM SDE_TESTE.N100XML WHERE N100XML.SeqXml = {seqXml}"")    
rows = cur.fetchall()
blobXml = rows[0][0]
xmlDoc = blobXml.read()
xmlDoc = xmlDoc.decode()    
del blobXml

return xmlDoc

A saida que recebo é:
<�?xml version=""1.0"" encoding=""utf-8""?><�cteProc versao=""3.00"" xmlns=""http://www.portalfiscal.inf.br/cte""><�CTe xmlns=""http://www.portalfiscal.inf.br/cte""><�infCte Id=""CTe41210481437048000163570010000319231000321806"" versao=""3.00""><�ide><�cUF>41<�/cUF><�cCT>00032180<�/cCT><�CFOP>5352<�/CFOP><�natOp>Prest.Servico Transporte a Estab.Indl.<�/natOp><�mod>57<�/mod><�serie>1<�/serie><�nCT>31923<�/nCT><�dhEmi>2021-04-22T15:10:00-03:00<�/dhEmi><�tpImp>1<�/tpImp><�tpEmis>1<�/tpEmis><�cDV>6<�/cDV><�tpAmb>1<�/tpAmb><�tpCTe>0<�/tpCTe><�procEmi>0<�/procEmi><�verProc>5.10.1.50<�/verProc><�cMunEnv>4106902<�/cMunEnv><�xMunEnv>CURITIBA...
Como pode ver está corrompida. Como posso corrigir isso?
","
Solução mais simples do eu pensava. Eu estava convertendo para utf-8 que é o padrão do python quando não passado nenhum argumento na função decode. foi só alterar para utf-16 e o problema sumiu
decode('utf-16')

","
            -2
        ",,,"['\npython', 'xml', 'utf8-decode\n']"
508130,"Por que ocorre e como resolver um erro de ""out of bounds"" ou ""out of range"" ou algo de tipo?","
Já vi erros e exceções do tipo ""subscript out of range"" ou ""index out of bounds"" ou alguma combinação de palavras assim. O que esse erro quer dizer e como costuma ser a forma de corrigi-los?
O mesmo vale para outros erros que não acham um elemento de uma coleção, por exemplo:

Cannot read property 'xyz' of abc (Não é possível ler a propriedade 'xyz' de abc)
AttributeError: 'abc' object has no attribute 'xyz'
Undefined property: xyz::$abc
KeyError: “['xyz'] not found in abc”
NameError: name 'xyz' is not defined
coloque aqui a mensagem de erro da sua linguagem quando não achou um elemento


a intenção é ter uma resposta canônica para usar em perguntas que não tem um problema exposto de forma bem específica, por isso se uma pergunta é geral sobre isso, uma resposta geral serve, então aqui já tem uma duplicata ou explicação do fechamento da pergunta e referência para a pessoa perceber o erro (possível de digitação).

","
Erro de programação
Antes de mais nada, esse é um erro de programação. É importante dizer isso porque costuma ser uma exceção em várias linguagens e as pessoas ficam tentadas em capturar a exceção e fazer alguma coisa. Isso é usar exceção para controle de fluxo, é deixar de validar algo que pode ocorrer de errado para só tratar se der o erro. Não faça isso, corrija o erro, mesmo que seja fazer a validação e dar o tratamento antes de dar o erro.
O erro
Esse erro (não vou falar em exceção aqui, porque mesmo que seja lançada uma, ainda é um erro) ocorre apenas em coleções de dados ou objetos compostos que se comportam como coleções (algumas linguagens de tipagem dinâmica possuem composições implementadas como uma coleção, por exemplo uma classe ou algo parecido é implementada como um dicionário que é uma coleção).
Para acessar um elemento da coleção é preciso dizer qual é o elemento desejado, de alguma forma. Esta forma costuma ser chamada de índice, mas em alguns casos pode ser uma chave, e em inglês podem usar o termo subscript. Esse valor que indexa o elemento da coleção tende a ser um número, mas nada impede que seja outros tipos de dados, de fato em dicionários é comum ser strings.
Tipos de coleções
Em algumas coleções os valores são sequenciais e formam uma faixa clara de dados, por exemplo começa em 0 e termina 9, possuindo uniformemente 10 elementos em sequência. Eles possuem uma forma de array, mesmo que não seja exatamente um. Em coleções mais livres podem ter índices/chaves (o termo mais usado nesses casos) esparsos, ou seja, os valores não estão de forma sequencial, então se forem números pode começar em qualquer número e terminar em qualquer outro e não precisa ter todos os números entre eles. O mesmo vale para strings ou outros dados como chave.
for (var i = 1; i <= lista.Count; i++) //erro aqui
for (var i = 1; i < lista.Count; i++) //certo

Uma string é uma coleção de dados, ela é uma sequência de caracteres geralmente começada no caractere de posição 0 e terminando no tamanho menos um. Não tente acessar um caractere que esteja fora desta faixa. É comum a pessoa tentar acessar sem querer fora desta faixa, talvez porque tentou fazer uma busca que não achou a informação (pode retornar -1).
Se considerar que uma tabela ASCII ou algo parecido é uma coleção, pode ocorrer algo semelhante sem dar erro, só resultado ruim. Outro exemplo.
Como ocorre o erro
Como é uma coleção, esse valor de índice/chave precisa existir nela, se não existir ocorre o erro descrito na pergunta ou alguma variante dele.
Em coleções normais como arrays o termo ""faixa"" (range) ou o uso de limites (bounds) de início e fim é mais usado porque ele certamente tem todos os números de uma faixa. O que você não pode fazer é acessar um número que esteja fora dessa faixa. Não é obrigatório começar em 0, mas se começar não pode usar um valor que seja negativo. E não pode acessar um valor que seja maior do que a quantidade de elementos. Então se começa com 0 não pode ser nem o número que indica o tamanho, nem um número maior que este. Porque se começa do 0, por exemplo se tiver 10 elementos, vai de 0 até 9, então o 10 já não é válido. Se começar em 1, então o 10 seria válido, mas o 11 não, e neste caso o 0 também seria inválido.


let r = [2, 5, 6, 18, 20, 10, 23, 12, 19, 10];
let s = [1, 5, 7, 13, 18, 21, 10, 25, 32, 17, 3];
let x = [0];
let i;
console.log(""i = "" + i);
for (i = 0; i <= 9; i++) {
    x[i] = r[i];
    console.log(""i = "" + i);
}
console.log(""i = "" + i);
for (i = 0; i <= 10; i++) {
    x[i + 10] = s[i];
    console.log(""i = "" + i);
}
console.log(""i = "" + i);



Coloquei no GitHub para referência futura.
O erro pode indicar um valor fora da faixa para baixo ou para cima, não importa.
O erro ocorre de forma muito comum quando o índice que é usado é obtido numa fórmula ou é obtido por um dado externo que aquele algoritmo não tem controle. Ou ocorre quando vai acessar um elemento específico ou então quando faz um laço e este laço ou começa no número errado ou tenta terminar depois que já avaliou todos elementos que tinha que analisar.
É comum ocorrer em funções e métodos que tem um laço internamente, um caso muito comum é a Substring().
Tem uma classe que mostra superficialmente como o erro é gerado.
Como evitar
No caso do laço o ideal é usar uma construção da linguagem, se tiver que varrer toda coleção por controle próprio assim não tem muito como errar (desde que a coleção não seja modificada em sua estrutura e não mude a quantidade de elementos existentes). Pode ser um foreach ou um for abstrato que faça isto. Quando usa um for bruto ou while onde o programador controla onde deve parar, é que costuma acontecer o erro. O erro mais comum é a pessoa colocar a comparação verificando o fim se o contador é menor ou igual ao tamanho, mas se começa do zero tem que ser menor que o tamanho total da coleção.
foreach (var item in lista) WriteLine(item); //assim não tem como dar esse erro

Coloquei no GitHub para referência futura.
Há casos que está usando um laço mas não está acessando o elemento de forma direta, mas sim calculando o número usando o contador do laço como parte da fórmula. Este é um caso híbrido, o problema pode ser no limite do contador ou pode ser na fórmula. Por exemplo, se você usa uma fórmula que pega sempre o ""contador mais um"", obviamente não pode ir até o último valor possível na coleção porque o último possível mais um dá um número fora da faixa, por exemplo se a coleção vai de 0 a 9, o contador deve parar em 8, se for no 9 a fórmula resultará em 10 e dará o erro.
Então a solução para o problema é sempre validar certo quando deve parar, nunca deixar passar do número do elemento que não existe na coleção naquele momento. Nunca pressuponha que sabe quantos elementos tem ali, sempre pegue esse número ou use uma construção que garanta isso.
if (n >= 0 && n < opcoes.size()) return opcoes[n]->reproduz();

Coloquei no GitHub para referência futura.
No caso do acesso ser feito individualmente por um dado calculado ou obtido externamente quase sempre é necessário validar o dado variável e que veio sem controle direto do seu algoritmo. Se não passar na validação de estar entre a faixa inicial (geralmente 0) e a final (geralmente o tamanho da coleção menos um), ou ainda se tem aquela chave, então deve fazer alguma operação alternativa, geralmente retornando um erro ou fazendo algo diferente (em alguns casos até pode lançar uma exceção, mas não costuma ser a melhor opção, mas se forma uma exceção mais específica em alguns casos pode ser interessante, só é mais raro ser o certo).
Só acesse um índice/chave condicionalmente, a não ser que seja 100% garantido que não tem como ser um dado inválido, mas são raros casos assim, como pode ser visto nos códigos e links postados aqui. Esta dica serve para qualquer dado, não só esses que são índices/chaves. Quase todos os bugs ocorrem porque algum dado não está no estado que está esperando e não pode confiar em nada.
Note que que vemos muito caso de erro em que a chave (de um dicionário ou objeto) não existe sem mesmo vir de finte externa, ou seja, é simples erro de digitação, é como se tivesse digitado o nome de uma variável errada no código.
E de fato muitas vezes em casos de literais usando como chave elas funcionam como se fossem nomes e variáveis mesmo. O elemento da coleção não deixa de ser uma variável.
O uso de assert(), requires() ou algo semelhante costuma ser uma boa ideia. Aprenda-os.
Nem tudo gera erro
Algumas estruturas de dados não lançam erros ou exceções quando a chave não existe, apenas retornam um código de erro que pode ser um nulo. Algumas tem métodos que permitem escolher o que acontece quando tenta acessar uma chave não existente. Cuidado pode parecer certo porque funciona, mas dará resultado ruim.
Tem linguagens que não dão erro, só ferra tudo. C e C++ em certa medida, são assim.
Onde não dá erro
Se você não está passando uma posição em uma coleção de dados então o erro não acontecerá, então precisa de duas coisas: coleção de dados e posição sendo acessada. A posição pode ser passada por um operador indexador, muito comum ser colchetes objeto[x] (de um array, lista, ou dicionário), mas outras linguagens podem ter outras notações, JS pode fazer assim objeto.x e ainda é uma posição nessa coleção. Também pode ocorrer em métodos que recebem a posição de uma forma ou de outra, pode ser até um dado que será usado para calcular a posição.
Averiguando o erro
Um teste de mesa manual ou auxiliado pelo IDE (debugger) sempre indicará o que está acontecendo. Você executa passo a passo e analisa o valor do elemento sendo usado e verá que um dele logo no momento que dará o erro está acessando um índice/chave que não existe, por isso é preciso saber todas chaves possíveis ou a faixa do índice possível.
Lembre-se sempre de olhar o dado naquele momento, ele pode não ser o que deseja, pode não conter todos elementos que está esperando, isto pode ser a causa do erro. Se o dado estiver ok então seu algoritmo está pegando um valor que não devia.
Não tem milagre, não tem resposta fácil e rápida, tem que analisar o que está acontecendo. Faça a análise e aprenda programar melhor no processo. Aprenda a se virar por conta própria, você vai precisar. Quem não sabe fazer isso não sabe o básico de programação e acessar coleções está além da sua capacidade atual, repense o ritmo de aprendizado.
Esse é um erro chato pois sempre ocorre em tempo de execução (existem poucas situações que poderia ser evitado em tempo de execução e nem costuma valer o esforço fazer isto).
Extra
Não falei, mas já vi erros em que o valor sendo usado era um literal e portanto de total controle do algoritmo sendo escrito ali. Quase sempre o problema não está bem nesse algoritmo, está no dado recebido, provavelmente você esperava receber uma coleção de dados com um número determinado de elementos e por alguma razão não está recebendo isto. Provavelmente o problema está na criação do dado e deve concentrar os esforços em analisá-lo. Você pode melhorar seu algoritmo para lidar com um caso de erro assim, mas quase sempre o resultado melhor fazer o dado vir corretamente já que faz parte do contrato vir assim. Claro, isso pode não ser um bom design, não é robusto, ou para dar robustez complica o código e piora a performance, mas muita gente desenvolve sem pensar nessas coisas (""todos"" que escolhem uma linguagem de tipagem dinâmica). Exemplo.
Conclusão
De uma certa forma pode ser visto como uma variante da divisão por zero. Só ocorre porque está recebendo um valor que não é aceito naquele contexto. Não importa o que faça, a solução sempre está em validar implícita ou explicitamente o dado que será usado como índice/chave antes de usar, tem que ser garantido que ele existe (isso se não for erro de digitação).
Exemplo em C# de código robusto para não deixar acessar um elemento que não existe inadvertidamente.
Exemplos de perguntas que falam deste erro, é quase certo que o seu está coberto em algum.

Var dentro do FOR quando começa em 0(zero) o Count deve ser Count-1?
Como guardar letras em uma variável e exibi-las todas no final formando uma frase/palavra
Variável não designada
Quero salvar 3 números e depois imprimir na tela
Meu programa feito em C++ fica em loop infinito, como corrigir?
Dúvida sobre closures, função dentro de loop
Remover elemento de uma lista por chave (key) e por valor (value)
Laço de repetição com problema
Lançamento de exceções em função de número primo
Como exibir um texto com múltiplas linhas com format?
Listbox items out of range
Erro """"AWT-EventQueue-0"" java.lang.StringIndexOutOfBoundsException: String index out of range: 0"" no Java ao tentar fazer IF


Vou colocar mais exemplos, tentar usar mais linguagens, outras respostas podem ajudar mais pessoas

","
            9
        ",,,"['\nindependente-de-linguagem', 'outofrange\n']"
508008,Virtualenv python entre máquinas Win/Linux [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



tenho um problema, alguém ja passou por isso ?
Tenho um projeto Python/Django em um pc linux, e esse projeto esta num repositorio no github.
Dei git clone nesse repositorio em outro pc windows, até ai tudo bem, agora eu tento instalar qualquer coisa com pip install e a venv ativa ele da erro.
O problema é com a virtual env do projeto do repositorio, pois pra testar, nesse pc windows criei uma nova venv, ativei ela e funciona normalmente
Observe a venv ( teste) esta foi criada no proprio pc windows para teste, funciona normal

esta é a venv da pasta do projeto la do github, essa venv foi criada em outro pc

esse é o erro que dá

alguém pode me ajudar a entender qual é o problema? e como posso fazer pra evitar que aconteça, de forma que eu consiga trabalhar em multiplas maquinas no mesmo projeto.
","
O ""virtualenv"" não deve ser incluso nos arquivos versionados pelo GIT.
As bibliotecas e módulos que são instaladas para um projeto funcionar no virtualenv são sempre dependentes do sistema operacional e arquitetura onde o projeto está rodando.
O correto é excluir a pasta do virtualenv do git - e, em cada computador onde você baixar o projeto, criar um virtualenv específico pra aquele computador (e inclsuive, para aquela pasta onde você clonou o projeto, se clonar mais de um lugar).
Se o projeto estiver configurado direito, um ""pip install ."" ou ""python setup.py develop"" vão instalar as dependencias na máquina destino.
","
            2
        ",,,"['\npython', 'linux', 'windows', 'virtualenv\n']"
507970,Return em laço while - PYTHON,"
Estou começando a aprender python agora e ainda estou perdido na sintaxe. No programa a seguir eu não sei o que fazer pra recomeçar o programa, ou seja, retornar ao inicio caso o usuário digite ""sim"" ou sair do programa caso o usuário digite ""não"". Alguém poderia me explicar como funciona essa função return em python?
""""""
Escreva um programa que determine a pontuação do aluno.
A prova consta de 10 questões, cada uma com cinco alternativas (a, b, c, d, e).
O programa receberá os seguintes dados:
• o gabarito;
• as respostas do aluno, contendo o seu nome e suas respostas.
A partir daí o programa deverá comparar as respostas do aluno com a resposta do gabarito e, no final, exibir a pontuação do aluno.
O programa continua recebendo respostas de vários alunos até que o usuário informe que deseja parar de informar respostas de alunos.
""""""

soma = 0
n = 0


while n < 10:
    print(f""Questão {n+1}:"")
    gabarito = str(input(""Digite o gabarito: ""))
    nota = str(input(""Digite a resposta do aluno: ""))
    print(""\n"")
    n = n + 1
    if nota == gabarito:
        soma = soma + 1
print(f""A pontuação do aluno foi: {soma}"")

resposta = str(input(""Deseja continuar?\n"" ))

","
Bem, vamos lá.
While e for são laços de repetição, ou seja, executam uma parte do código ""n"" vezes, a diferença entre eles é que, o while você usa uma condição para manter a repetição ativa, enquanto no for você delimita quantas vezes ela deve acontecer.
Exemplo:
x = 0
while x < 11:
    print(x)
    x += 1

for y in range(11):
    print(y)

Ambos os casos escrevem do 0 ao 10 na tela porém um usa o 'while' e o outro o 'for'.

O 'return' é utilizado dentro de 'funções' e serve para retornar um valor que está dentro da função para fora dela. Para declarar funções no python usamos do 'def'
Exemplo:
def soma(a, b):
    return a+b

print(soma(1, 2))
print(soma(4, 4))
print(soma(10, 1))


Existem várias maneiras de fazer o seu código ser executado mas de uma vez, uma delas ( sem função/return, seria colocar dentro de um while que verifica se o usuário deseja continuar. (Não é a mais 'linda' do mundo, mas funciona e fica simples)
Algo parecido com isso:
while (input(""Deseja refazer? Sim / Não"")) == ""Sim"":
    //Seu código vem aqui.

","
            2
        ",,,"['\npython', 'while\n']"
507956,Excluir linhas de um Dataframe a partir de uma lista de strings em python,"
Estou com Um DataFrame para análise da Covid-19 e Quando puxo a maior quantidade de casos ou mortes, me retornam os continentes e eu gostaria de excluir apenas as entradas onde os continentes aparecem, deixar apenas os países.
Por exemplo, criei essa lista e então fui capaz de puxar as entradas sem os continentes.
continentes = ['Europe', 'Asia', 'North America', 'South America', 'Oceania', 'Africa', 'European Union']

df.loc[~df.location.isin(continentes)][df.date == '2021-04-27'].sort_values(by='total_cases', ascending=False)

Porém, quando vou criar um gráfico de barras e uso esse comando
df.loc[df.date == '2021-04-27', ['location', 'total_deaths']].sort_values(by=""total_deaths"", ascending=False)[0:6]

É retornado os valores dos continentes, por isso gostaria de excluir essas entradas, alguns comandos que tentei não resolveram ou deram erro, por exemplo:
df.drop(df[df.location == 'Europe', 'North America', 'Asia', 'Oceania', 'South America', 'Africa', 'European Union'].index)

df.drop(df[df.location == continentes].index)


Vou tentar reproduzir quando dou o comando para localizar os países com mais mortes e sua localização
location        total_deaths        

world           3134956.0
europe          1007023.0
north america   843246.0
european union  682014.0
south america   658283.0

Agradeço muito se alguém conseguir me ajudar!!!
",,,,,"['\npython', 'pandas\n']"
507859,Qual a diferença entre random.choice e random.choices em Python?,"
Sei que ambos 'sorteiam' números aleatórios , mas qual a diferença entre eles ?
","
Existem duas diferenças fundamentais:

random.choice retorna um elemento da sequência sorteada, enquanto random.choices retorna uma lista de elementos da sequência sorteada
random.choices aceita pesos para as observações, enquanto o peso das observações é igual para todos os elementos em random.choice

Veja como a diferença nos argumentos da função permitem inferir essas diferenças:
Argumentos random.choice
import random
import inspect

#argumentos random.choice
inspect.getfullargspec(random.choice)

FullArgSpec(args=['self', 'seq'], varargs=None, varkw=None, defaults=None, kwonlyargs=[], kwonlydefaults=None, annotations={})

Argumentos random.choices
#argumentos random.choices
inspect.getfullargspec(random.choices)

FullArgSpec(args=['self', 'population', 'weights'], varargs=None, varkw=None, defaults=(None,), kwonlyargs=['cum_weights', 'k'], kwonlydefaults={'cum_weights': None, 'k': 1}, annotations={})

Um exemplo de seleção aleatória de uma sequência usando random.choices:
import random

#seleciona dois números a partir de um vetor de observações e um vetor de pesos
print(random.choices([1,4,2,7,4,2,8,9], [0.2,0.4,0.6,0.3, 0.5,0.4,0.7,0.3], k=2)) #[4,8] no meu caso

Note que não é possível replicar esse exemplo usando random.choices, pois não há opção para aplicar pesos. Mas se o usuário desejasse criar uma lista, também seria possível, usando list comprehension:
[random.choice([1,4,2,7,4,2,8,9]) for k in range(2)]

","
            6
        ",,,"['\npython', 'python-3.x', 'random\n']"
507808,Dúvida For i Range Python,"
Primeiramente, eu tenho 2 dataframe com vários pontos de latitude e longitude:
db_gas2['lat-long'] = db_gas2['latitude'].astype(str)+', '+db_gas2['longitude']
db_gas2
db_cidades3['lat-long'] = db_cidades3['latitude'].astype(str)+', '+db_cidades3['longitude']
db_cidades3.head()
db_gas2 tem 37 linhas (que são locais)
db_cidades3 tem 5.570 linhas (municipios do Brasil)

Eu consegui criar isso em um simulador, porém não um for i range
#teste se a variavel ""ponto gás"" iria funcionar
ponto_gas = 1
# range de 0 a 36
cidade_origem = 1050
# range de 0 a 5569
p1 = (db_cidades3.iloc[cidade_origem]['lat-long'])
p1_n = (db_cidades3.iloc[cidade_origem]['cidade'])
p2 = (db_gas2.iloc[ponto_gas]['lat-long'])
p2_n = (db_gas2.iloc[ponto_gas]['Ponto de entrega'])
print(""A distância entre a cidade"", p1_n, ""e o ponto de entrega"", p2_n, ""é de:"")
print(round((distance.distance(p1, p2).km),2),""km"")
A resposta vem correta
""A distância entre a cidade Teixeiras e o ponto de entrega TBG Bilac é de:
794.22 km""
Porém como fazer para cada municipio, calcula-se a distancia para os 37 linhas de gás.
Quero automaticamente, pegar a linha 1 da ""db_cidades3"" e calcular distancia para todas as linhas da ""db_gas2"", após isso pegar a linha 2 da ""db_cidades3"" e calcular distancia para todas as linhas da ""db_gas2"" ...
Conseguem me ajudar?
","
Quando usamos pandas ou outras bibliotecas, temos a ideia de que elas resolvem tudo. O Python possui inúmeras bibliotecas que, ao trabalharem em conjunto, fazem dele uma super linguagem de programação.
Isto posto, vamos ao problema: Correlacionar todas as cidades com os pontos de entrega.
Para fazer isso, podemos pensar em um loop aninhado (nested loop) conforme abaixo:
for cidade in cidades:
    for pt_entrega in pontos_de_entrega:
        # seu codigo

Nota: No pandas seria algo como for idx, row in df.iterrows():
Isso, não é nem um pouco performático!!!
Vamos à solução
Carregando bibliotecas
import io               # Esta servirá apenas para este teste
import itertools
import pandas as pd

from geopy import distance

Definindo localidades
cidades1 = """"""
Código IBGE,Nome do Município,Código UF,UF,Estado,Capital,Latitude,Longitude
5200100,Abadiânia,52,GO,Goiás,0,-16.1970,-48.7057
3100203,Abaeté,31,MG,Minas Gerais,0,-19.1551,-45.4444
4314902,Porto Alegre,43,RS,Rio Grande do Sul,1,-30.0318,-51.2065
""""""

cidades2 = """"""
Código IBGE,Nome do Município,Código UF,UF,Estado,Capital,Latitude,Longitude
5200050,Abadia de Goiás,52,GO,Goiás,0,-16.7573,-49.4412
3100104,Abadia dos Dourados,31,MG,Minas Gerais,0,-18.4831,-47.3916
""""""

Nota uma vez que não tenho acesso à base, usei as localidades acima.
Criando dataframes
df1 = pd.read_csv(io.StringIO(cidades1), sep="","")
df2 = pd.read_csv(io.StringIO(cidades2), sep="","")

Transformando em lista de tuplas
campos = ['Nome do Município', 'Latitude', 'Longitude']

l1 = df1[campos].to_records(index=False)
l2 = df2[campos].to_records(index=False)

Gerando o resultado
todos_para_todos = itertools.product(l1, l2)

for par_de_localidades in todos_para_todos:
    c1, lat1, lon1 = par_de_localidades[0]
    c2, lat2, lon2 = par_de_localidades[1]
    distancia = round((distance.distance((lat1, lon1), (lat2,lon2)).km),2)
    print(f""A distância entre a cidade {c1} e o ponto de entrega {c2} é de: {distancia}km"")

Nota: Perceba que a variável todos_para_todos é o pulo do gato
Resultado
A distância entre a cidade Abadiânia e o ponto de entrega Abadia de Goiás é de: 100.06km
A distância entre a cidade Abadiânia e o ponto de entrega Abadia dos Dourados é de: 289.0km
A distância entre a cidade Abaeté e o ponto de entrega Abadia de Goiás é de: 499.64km
A distância entre a cidade Abaeté e o ponto de entrega Abadia dos Dourados é de: 218.31km
A distância entre a cidade Porto Alegre e o ponto de entrega Abadia de Goiás é de: 1481.15km
A distância entre a cidade Porto Alegre e o ponto de entrega Abadia dos Dourados é de: 1336.25km

Nota Final: Não coloquei a saída dos dataframes, lista de tuplas e etc, para não deixar a resposta extensa.
","
            4
        ",,,"['\npython', 'pandas', 'range\n']"
507802,Django oauth2 Facebook autentication,"
Ao tentar incluir a autorização de login pelo facebook no meu site, segui os passos dados em documentações do Django e semelhantes.
E fazendo passo a passo, incluindo o app no settings
""allauth.socialaccount.providers.facebook"",

Incluindo o app no sistema de admin e configurando corretamente o app do facebook no site,
o próximo passo foi incluir a configuração no html corretamente :
{% load socialaccount %}
{% providers_media_js %}
<button><a href=""{% provider_login_url ""facebook"" method=""oauth2"" %}"">Login com Facebook</a></button>
</div>

Ao entrar na url de login no site, no entanto, o erro :
ModuleNotFoundError at /accounts/login/
No module named 'path'
Request Method: GET
Request URL:    http://127.0.0.1:8000/accounts/login/
Django Version: 3.1.3
Exception Type: ModuleNotFoundError
Exception Value:    
No module named 'path'

Esse erro aparentemente permanece mesmo tirando da settings, onde depois de retira-lo é somente :
KeyError at /accounts/login/
'facebook'
Request Method: GET
Request URL:    http://127.0.0.1:8000/accounts/login/
Django Version: 3.1.3
Exception Type: KeyError
Exception Value:    
'facebook'

","
Autentificação usando mídias sociais necessita de um modulo extra no projeto.
O servidor não encontrou um intermediário que faça isso e devido a falta retorno esse aviso.
Indico o social-auth-app-django, para fazer essa autentificação,não apenas para rede social mencionada mais para quais quer outra.
sua configuração é bem explicada na pagina oficial  pagina
após concluir a instalação: pip install social-auth-app-django
Sera necessário registrar no apps
INSTALLED_APPS = (
    ...
    'social_django',
    ...
)

Na página oficial, ""Há um processador de contexto que adicionará back-ends e dados de associações ao contexto do modelo:"":
isso quer dizer que através do social_django sera adicionado nos templates contexto de autentificação como nome foto
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',#<==1
                'social_django.context_processors.login_redirect',#<==2
            ],
        },
    },
]

especificar autentificação pela rede social e não mais pelo django
AUTHENTICATION_BACKENDS = [
    'social_core.backends.facebook.FacebookOAuth2',
   ]

Configurações do app desenvolvedor do facebook, ao utilizar esse recurso não sera recriado uma nova autentificação para o usuario após fazer logout e iniciar novamente o login
SOCIAL_AUTH_FACEBOOK_KEY = 'sua chave'
SOCIAL_AUTH_FACEBOOK_SECRET = 'codigo'
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'user_link'] #parametros a extrair
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email, picture.type(large), link'
}
SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [
    ('name', 'name'),
    ('email', 'email'),
    ('picture', 'picture'),
    ('link', 'profile_url'),
]

view pagina de explanação do login:
from django.views.generic import TemplateView

class LoginView(TemplateView):
    template_name = 'login.html'

na url da app:
from django.urls import path, include
from django.contrib.auth import views as auth_views # autenticação de views

from .views import  LoginView# campos de login 

urlpatterns = [
    path('login/', LoginView.as_view(), name='login'),
    path('logout/', auth_views.LogoutView.as_view(), name='logout'),# logout
    path('social-auth/', include('social_django.urls', namespace='social')), # api extra
 
]

no  html autentificação usando rede social e não o padrão django:
   <a href=""{% url 'social:begin' 'facebook' %}"">rede social</a>
        </button>
          iniciar
        <button>

","
            0
        ",,,"['\npython', 'django\n']"
507769,Ordenar duas listas com base na ordem da primeira,"
Vou dar um exemplo pois fica mais claro para explicar:
x = [7,5,9,4,2,3,8,1,10]
y = ['sete', 'cinco', 'nove', 'quatro', 'dois', 'tres', 'oito', 'um', 'seis', 'dez']

Preciso ordenar a lista x, de modo que x[i] = y[i], ou seja, as listas devem ficar assim:
new_x = [1,2,3,4,5,6,7,8,9,10]
new_y = ['um', 'dois', 'tres', 'quatro', 'cinco', 'seis','sete', 'oito', 'nove', 'dez']

Exemplo:
x[5] = 3
y[5] = 'tres'

Após ordenar:
new_x[5] = 6
new_y[5] = 'seis'

Basicamente precisaria ordenar a segunda lista ao mesmo tempo que ordeno a primeira. De modo que os elementos sigam pareados.
Como poderia fazer isso?
","
Uma alternativa é criar uma lista de índices, e ordenar estes índices de acordo com o respectivo valor em x.
Depois você usa estes índices para ordenar as listas:
x = [7, 5, 9, 4, 2, 3, 8, 1, 6, 10]
y = ['sete', 'cinco', 'nove', 'quatro', 'dois', 'tres', 'oito', 'um', 'seis', 'dez']

# ordene os índices em vez dos elementos em si
indices = list(range(len(x)))
indices.sort(key=lambda i: x[i]) # ordene os índices com relação ao seu respectivo valor em x

# crie as listas baseado na ordem dos índices
new_x = [x[i] for i in indices]
new_y = [y[i] for i in indices]

print(new_x) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(new_y) # ['um', 'dois', 'tres', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez']

list(range(len(x))) cria a lista com os índices (no caso, os números de zero até o tamanho de x).
A seguir, ordenamos os índices, usando como critério o respectivo valor na lista x. Após o sort, a lista indices será [7, 4, 5, 3, 1, 8, 0, 6, 2, 9], o que quer dizer que x[7] é o primeiro elemento de x (quando este for ordenado), x[4] é o segundo, etc, e o mesmo vale para y.
Sendo assim, basta colocar as listas x e y na ordem indicada pela lista indices.

Outra forma de criar a lista de índices já ordenada seria:
indices = sorted(range(len(x)), key=lambda i: x[i])

","
            2
        ","
Tem a caminho da programação funcional utilizando as funções builtin zip() para juntar as duas lista, sorted() para ordenar essa junção e map() para aplicar uma função separadora da listas ordenadas:
x = [7, 5, 9, 4, 2, 3, 8, 1, 6, 10]
y = ['sete', 'cinco', 'nove', 'quatro', 'dois', 'tres', 'oito', 'um', 'seis', 'dez']

xy = zip(x, y)                               #Junta as duas listas numa lista d tuplas: [(7, 'sete'), (5, 'cinco'), (9, 'nove'), (4, 'quatro'), (2, 'dois'), (3, 'tres') (8, 'oito'), (1, 'um'), (6, 'seis'), (10, 'dez')] .

sorted_xy = sorted(xy, key= lambda t: t[0])  #Orderna xy com base no primeiro elemento de cada tupla.

new_x= list(map(lambda t: t[0], sorted_xy))  #Extrai o resultado da ordenação da lista x.
new_y= list(map(lambda t: t[1], sorted_xy))  #Extrai o resultado da ordenação da lista y.

print(new_x)
print(new_y)

Resultando:
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
['um', 'dois', 'tres', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez']

","
            1
        ","['\npython', 'array', 'lista\n']"
507724,Comando PRINT consta como INVALID SYNTAX em Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Estou fazendo um exercício simples em python e não entendi o motivo do meu erro.
num1 = (int(input(""Digite o primeiro número""))
print(""Digite a operação desejada, sendo:"")
print(""* --> MULTIPLICAÇÃO"")
print(""/ --> DIVISÃO"")
print(""+ --> SOMA"")
op = input(""- --> SUBTRAÇÃO"")
num2 = (int(input(""Digite o segundo número""))

O erro está na linha print(""Digite a operação desejada, sendo:"") e diz SyntaxError: invalid syntax
Agradeço quem puder me ajudar!
","

""File """", line 2
print(""Digite a operação desejada, sendo:"")
^ SyntaxError: invalid syntax

o Erro está na primeira linha: num1 = (int(input(""Digite o primeiro número""))
O correto seria: num1 = int(input(""Digite o primeiro número: ""))
Código completo:
num1 = int(input(""Digite o primeiro número: ""))
print(""Digite a operação desejada, sendo:"")
print(""* --> MULTIPLICAÇÃO"")
print(""/ --> DIVISÃO"")
print(""+ --> SOMA"")
op = input(""- --> SUBTRAÇÃO"")
num2 = int(input(""Digite o primeiro número: ""))

","
            -2
        ",,,"['\npython', 'syntax-error\n']"
507700,Problema na hora de declarar 2 variáveis,"
O problema é o seguinte, preciso fazer uma função para somar 2 números que o usuário deverá inserir separando-os através de vírgulas, ex: 2,3, para tais valores 2 + 3 = 5, logo o resultado deverá mostrar 5 como resultado. Até essa parte foi sem problema. O problema é que o programa também precisa entender que o usuário pode colocar somente 1 número ou nenhum e essa parte esta dando erro. Segue nas linhas abaixo o código feito até o momento.
Código
def soma (num1,num2):    
    return num1 + num2

num1,num2 = [int(num1) for num1 in input(""Insira 2 valores separados por vírgula: "").split("","")]

print(soma(num1,num2))

","

O problema é que o programa também precisa entender que o usuário pode colocar somente 1 número ou nenhum

Bom, para isso você precisa analisar o que foi digitado, antes de converter para int e sair fazendo a conta.
Primeiro você pega o input e faz o split:
valores = input(""Insira 2 valores separados por vírgula: "").split("","")

O que acontece se só for digitado um número? Por exemplo, se digitar somente 2, então valores será uma lista com apenas um elemento: ['2'] (faça esse teste, coloque um print(valores) depois da linha acima e digite somente 2).
E se o usuário não digitar nada (só der ENTER)? A string será vazia, e valores terá apenas uma string vazia: [''].
E se digitar qualquer coisa que não seja número, ou números mas separados por qualquer outra coisa que não seja vírgula, ou mais de 2 números? São muitos casos que pode dar tudo errado, e pelo que entendi, o programa só deve funcionar se a lista resultante tiver exatamente dois números separados por vírgula.
Então é isso que você deve validar: se a lista retornada por split tem 2 elementos, e se ambos são números inteiros. Então poderia ser algo do tipo:
def soma(num1, num2):
    return num1 + num2

valores = input(""Insira 2 valores separados por vírgula: "").split("","")
if len(valores) == 2: # foram digitados 2 valores separados por vírgula, agora temos que ver se são números
    try:
        # converte para números
        num1, num2 = map(int, valores)
        # se chegou aqui, é porque a conversão para int deu certo
        print(soma(num1, num2))
    except ValueError: # se não tiver número, vai lançar um ValueError
        print('Algum dos valores digitados não é um número')
else:
    print('você deve digitar exatamente 2 valores separados por vírgula')

Eu resolvi somente imprimir mensagens de erro caso não tenha exatamente dois números (pois se tiver menos, não tem o que somar, e se tiver mais, não ficou claro o que é para fazer com os excedentes). Mas uma vez sabendo fazer a validação, você pode tratar cada caso individualmente da maneira que preferir.
Por exemplo, foi mencionado nos comentários que se for apenas um número, ele próprio deve ser o resultado. Então bastaria adicionar um caso especial para quando tiver apenas um valor:
def soma(num1, num2):
    return num1 + num2

valores = input(""Insira 2 valores separados por vírgula: "").split("","")

if len(valores) == 1: # foi digitado apenas um valor
    try:
        print(int(valores[0])) # imprime somente o número (acho que nem precisa chamar a função soma, é desnecessário)
    except ValueError:
        print('O valor não é um número')
elif len(valores) == 2: # foram digitados 2 valores separados por vírgula, agora temos que ver se são números
    try:
        # converte para números
        num1, num2= map(int, valores)
        # se chegou aqui, é porque a conversão para int deu certo
        print(soma(num1, num2))
    except ValueError: # se não tiver número, vai lançar um ValueError
        print('Algum dos valores digitados não é um número')
else:
    print('você deve digitar exatamente 1 número, ou 2 separados por vírgula')

","
            1
        ","
Mudando somente um pouco
import sys

def soma (num1, num2):    
    return num1 + num2


try:
    s1, s2 = input(""Insira 2 valores separados por vírgula: "").split("","")
except:
    print(""Erro na entrada de dados."")
    sys.exit(0)

try:
    print(soma(float(s1),float(s2)))
except:
    print(""Tem certeza que os valores digitados são numéricos?"")

","
            0
        ","['\npython', 'python-3.x\n']"
507611,Juntar células com python,"
Estou fazendo um web scraping para pegar dados das melhores ações do dia e juntar numa tabela em um arquivo do excel. Estou tentando pelo código:
from selenium import webdriver
from webdriver_manager.microsoft import EdgeChromiumDriverManager
from selenium.webdriver.common.keys import Keys

browser = webdriver.Edge(EdgeChromiumDriverManager().install())

# Access the website with the most popular stocks
link = 'https://br.investing.com/equities/trending-stocks'
browser.get(link)




import pandas as pd
table = (browser.find_element_by_xpath('//*[@id=""trendingInnerContent""]/table').text)
table = table.split(sep='\n')
empty = []
for item in table:
    item = item.split(' ')
    filtered = [x for x in item if x.strip()]
    empty.append(filtered)
   
tb = pd.DataFrame(empty)
tb.to_excel('Atualizado.xlsx', encoding='utf-8', header=False, index = False)
del(empty[0])

Porém está separando os nomes em diversas células, queria juntá-los para a tabela ficar certa
","
O método de leitura da tabela em html que usa é equivocado pois é verboso, complicado e propício a erros, além de ficar sujeito as especificidades de um módulo muito parrudo e específico para a automação de web browsers, o Selenium, quando na verdade tudo o que precisa de um web browser é o cabeçalho personificando um agente do usuário, no caso peguei a string no meu próprio navegador Chrome com a url chrome://version/.
O Módulo Pandas oferece aos seus usuários uma ferramenta para leitura de tabelas em HTML, o método pandas.read_html() que permite a leitura de um caminho, uma URL ou uma string contendo texto HTML.
Alguns sites somente se permitem serem acessados por determinado agentes de usuário, no caso o site que quer acessar faz essa restrição, impedindo assim ferramentas de automação como pandas.read_html() de fazer a leitura direta dos dados.
Para contornar essa limitação é possível utilizar o módulo Requests para acessar o site simulando um navegador conhecido e poder obter o HTML da página.
Para extrair a tabela do HTML use um parser leve com suporte a XPATH, no caso usei o módulo lxml
import pandas as pd
import requests
from lxml import html, etree

url = 'https://br.investing.com/equities/trending-stocks'

#User-Agent vai personificar um Chrome mas pode ser outro navegador. X-Requested-With informa que foi feita uma requisiçãocom XMLHttpRequest
header = {
  ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36"",
  ""X-Requested-With"": ""XMLHttpRequest""
}

#Carrega a página com o cabeçalho preparado.
page = requests.get(url, headers=header)
#Faz a análise do HTML e busca uma tabela específica via XPATH. 
table = html.fromstring(page.content).xpath(r'//*[@id=""trendingInnerContent""]/table')[0]
#Retorna somente a tabela ao texto HTML original e cria o dataframe. 
df = pd.read_html(etree.tostring(table))
print(df)

Resultando:
[    Unnamed: 0                 Nome  Último  Máxima  Mínima Variação   Var. %     Vol.   Hora  Unnamed: 9
0          NaN             Ambev ON    1621    1633    1600    +0,03   +0,19%   22,16M  07/05         NaN
1          NaN               Weg ON    3342    3399    3306     -031   -0,92%   10,12M  07/05         NaN
2          NaN          Petrorio ON    1921    1922    1867    +0,01   +0,05%   13,96M  07/05         NaN
3          NaN         Petrobras PN    2438    2445    2346    +0,88   +3,74%   73,69M  07/05         NaN
4          NaN   Banco do Brasil ON    2994    3048    2976    +0,73   +2,50%   26,70M  07/05         NaN
5          NaN              Rumo ON    2134    2139    2070    +0,64   +3,09%    6,47M  07/05         NaN
6          NaN            Gafisa ON     451     451     436    +0,15   +3,44%    4,08M  07/05         NaN
7          NaN           Neogrid ON     707     720     705    +0,02   +0,28%    1,67M  07/05         NaN
8          NaN       Met. Gerdau PN    1620    1642    1587     -005   -0,31%    9,15M  07/05         NaN
9          NaN     Itau Unibanco PN    2763    2770    2724    +0,33   +1,21%   26,59M  07/05         NaN
10         NaN         JHSF Part ON     731     745     717    +0,19   +2,67%   11,26M  07/05         NaN
11         NaN           Triunfo ON     465     475     410    +0,56  +13,69%   11,62M  07/05         NaN
12         NaN             CTEEP PN    2556    2563    2535    +0,22   +0,87%    1,08M  07/05         NaN
13         NaN                Oi ON     177     180     169    +0,06   +3,51%   79,78M  07/05         NaN
14         NaN  Lojas Americanas ON    1924    1954    1864     -019   -0,98%    7,72M  07/05         NaN
15         NaN              Vale ON   11545   11655   11419    +0,40   +0,35%   21,60M  07/05         NaN
16         NaN          Klabin Unit    2790    2801    2745     -005   -0,18%    4,49M  07/05         NaN
17         NaN        J B Duarte PN     330     336     303     -002   -0,60%  102,40K  07/05         NaN
18         NaN         C&A Modas ON    1247    1253    1221    +0,20   +1,63%  856,70K  07/05         NaN
19         NaN            Itausa PN    1034    1034    1016    +0,14   +1,37%   23,88M  07/05         NaN
20         NaN            TAEE UNIT    3885    3924    3819     -033   -0,84%    3,11M  07/05         NaN
21         NaN          Hercules PN    1056    1079    1030    +0,19   +1,83%    2,60K  07/05         NaN
22         NaN        Via Varejo ON    1216    1231    1200    +0,20   +1,67%   25,89M  07/05         NaN
23         NaN      BR Malls Par ON    1061    1083    1034    +0,29   +2,81%   21,78M  07/05         NaN
24         NaN               JBS ON    3118    3118    2980    +0,54   +1,76%    7,37M  07/05         NaN
25         NaN      Lojas Renner ON    4356    4357    4176    +1,74   +4,16%    9,84M  07/05         NaN
26         NaN    Magazine Luiza ON    1989    1990    1933    +0,43   +2,21%   23,14M  07/05         NaN
27         NaN        Portobello ON    1201    1212    1152    +0,26   +2,21%    2,52M  07/05         NaN
28         NaN         Sanepar Unit    2064    2066    2037    +0,34   +1,67%  905,60K  07/05         NaN
29         NaN        Neoenergia ON    1675    1702    1651    +0,49   +3,01%    4,24M  07/05         NaN]

Teste o exemplo no Google Colab
","
            1
        ","
Opa, acredito que o que esteja acontecendo seja que o item em seu script esteja recebendo o split(' ').
Sendo assim, o resultado para:
    Petrobras PN    23,67   23,81   23,47   +0,05   +0,21%  15,74M  

seria:
['', '', '', '', 'Petrobras', 'PN', '', '', '', '23,67', '', '', '', '23,81', '', '', '', '23,47', '', '', '', '+0,05', '', '', '', '+0,21%', '', '', '', '15,74M', '', '', '', '']

Logo após vc filtra para a variável filtered fazendo o strip
Sua variável filtered está assim:
['Petrobras', 'PN', '23,67', '23,81', '23,47', '+0,05', '+0,21%', '15,74M']

E é aí que os nomes estão se dividindo.
Partindo do princípio que são sempre 6 índices.
Acho que a solução seria:
indices = filtered[-6:]
nome = "" "".join(filtered[:-6])

Neste caso apresentado, teríamos
>>> indices
['23,67', '23,81', '23,47', '+0,05', '+0,21%', '15,74M']

>>> nome
'Petrobras PN'

Caso queira colocar tudo junto:
tudo_junto = [nome] + indices

Resultado
>>> tudo_junto
['Petrobras PN', '23,67', '23,81', '23,47', '+0,05', '+0,21%', '15,74M']

","
            0
        ","['\npython', 'pandas', 'selenium', 'selenium-webdriver', 'web-scraping\n']"
507584,Python-Django - Como fazer template mostrar apenas items associados ao usuário logado [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Tenho um pequeno projeto que é uma ""to-do list"", ou lista de tarefas, feita em Python-Django e vou implementar um sistema de login como já fiz com outros projetos. Porém, dessa vez queria que mostrasse apenas as listas relacionadas aquele usuário logado, como deveria fazer ? Adicionar algo nas views ?
","
Para um usuário poder ver apenas seus itens, é preciso que estes itens estejam marcados com o usuário que é de fato dono dele.
Por isso, seu model de ToDo deve conter também um campo que seja chave estrangeira da tabela de usuários do Django.
class Item(models.Model):
    ...
    usuario = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True)

settings.AUTH_USER_MODEL contém o nome da tabela que o Django utiliza para guardar os usuários.
Dessa forma, na hora de salvar um ToDo na base, você deve indicar qual é o usuário que é dono deste item. O usuário logado encontra-se dentro do objeto request, recebido como parâmetro na view:
def salvarItem(request):
    item.usuario = request.user
    item.save()

E, por fim, na hora de listar os itens apenas do usuário logado, basta filtrar por este campo:
def listarItems(request):
   itens = Item.objects.filter(usuario=request.user)
   return render('tela.html', { 'itens': itens})

","
            0
        ",,,"['\npython', 'django', 'auth\n']"
507511,"Por que ocorre e como resolver um erro de ""out of bounds"" ou ""out of range"" ou algo de tipo?","
Já vi erros e exceções do tipo ""subscript out of range"" ou ""index out of bounds"" ou alguma combinação de palavras assim. O que esse erro quer dizer e como costuma ser a forma de corrigi-los?
O mesmo vale para outros erros que não acham um elemento de uma coleção, por exemplo:

Cannot read property 'xyz' of abc (Não é possível ler a propriedade 'xyz' de abc)
AttributeError: 'abc' object has no attribute 'xyz'
Undefined property: xyz::$abc
KeyError: “['xyz'] not found in abc”
NameError: name 'xyz' is not defined
coloque aqui a mensagem de erro da sua linguagem quando não achou um elemento


a intenção é ter uma resposta canônica para usar em perguntas que não tem um problema exposto de forma bem específica, por isso se uma pergunta é geral sobre isso, uma resposta geral serve, então aqui já tem uma duplicata ou explicação do fechamento da pergunta e referência para a pessoa perceber o erro (possível de digitação).

","
Erro de programação
Antes de mais nada, esse é um erro de programação. É importante dizer isso porque costuma ser uma exceção em várias linguagens e as pessoas ficam tentadas em capturar a exceção e fazer alguma coisa. Isso é usar exceção para controle de fluxo, é deixar de validar algo que pode ocorrer de errado para só tratar se der o erro. Não faça isso, corrija o erro, mesmo que seja fazer a validação e dar o tratamento antes de dar o erro.
O erro
Esse erro (não vou falar em exceção aqui, porque mesmo que seja lançada uma, ainda é um erro) ocorre apenas em coleções de dados ou objetos compostos que se comportam como coleções (algumas linguagens de tipagem dinâmica possuem composições implementadas como uma coleção, por exemplo uma classe ou algo parecido é implementada como um dicionário que é uma coleção).
Para acessar um elemento da coleção é preciso dizer qual é o elemento desejado, de alguma forma. Esta forma costuma ser chamada de índice, mas em alguns casos pode ser uma chave, e em inglês podem usar o termo subscript. Esse valor que indexa o elemento da coleção tende a ser um número, mas nada impede que seja outros tipos de dados, de fato em dicionários é comum ser strings.
Tipos de coleções
Em algumas coleções os valores são sequenciais e formam uma faixa clara de dados, por exemplo começa em 0 e termina 9, possuindo uniformemente 10 elementos em sequência. Eles possuem uma forma de array, mesmo que não seja exatamente um. Em coleções mais livres podem ter índices/chaves (o termo mais usado nesses casos) esparsos, ou seja, os valores não estão de forma sequencial, então se forem números pode começar em qualquer número e terminar em qualquer outro e não precisa ter todos os números entre eles. O mesmo vale para strings ou outros dados como chave.
for (var i = 1; i <= lista.Count; i++) //erro aqui
for (var i = 1; i < lista.Count; i++) //certo

Uma string é uma coleção de dados, ela é uma sequência de caracteres geralmente começada no caractere de posição 0 e terminando no tamanho menos um. Não tente acessar um caractere que esteja fora desta faixa. É comum a pessoa tentar acessar sem querer fora desta faixa, talvez porque tentou fazer uma busca que não achou a informação (pode retornar -1).
Se considerar que uma tabela ASCII ou algo parecido é uma coleção, pode ocorrer algo semelhante sem dar erro, só resultado ruim. Outro exemplo.
Como ocorre o erro
Como é uma coleção, esse valor de índice/chave precisa existir nela, se não existir ocorre o erro descrito na pergunta ou alguma variante dele.
Em coleções normais como arrays o termo ""faixa"" (range) ou o uso de limites (bounds) de início e fim é mais usado porque ele certamente tem todos os números de uma faixa. O que você não pode fazer é acessar um número que esteja fora dessa faixa. Não é obrigatório começar em 0, mas se começar não pode usar um valor que seja negativo. E não pode acessar um valor que seja maior do que a quantidade de elementos. Então se começa com 0 não pode ser nem o número que indica o tamanho, nem um número maior que este. Porque se começa do 0, por exemplo se tiver 10 elementos, vai de 0 até 9, então o 10 já não é válido. Se começar em 1, então o 10 seria válido, mas o 11 não, e neste caso o 0 também seria inválido.


let r = [2, 5, 6, 18, 20, 10, 23, 12, 19, 10];
let s = [1, 5, 7, 13, 18, 21, 10, 25, 32, 17, 3];
let x = [0];
let i;
console.log(""i = "" + i);
for (i = 0; i <= 9; i++) {
    x[i] = r[i];
    console.log(""i = "" + i);
}
console.log(""i = "" + i);
for (i = 0; i <= 10; i++) {
    x[i + 10] = s[i];
    console.log(""i = "" + i);
}
console.log(""i = "" + i);



Coloquei no GitHub para referência futura.
O erro pode indicar um valor fora da faixa para baixo ou para cima, não importa.
O erro ocorre de forma muito comum quando o índice que é usado é obtido numa fórmula ou é obtido por um dado externo que aquele algoritmo não tem controle. Ou ocorre quando vai acessar um elemento específico ou então quando faz um laço e este laço ou começa no número errado ou tenta terminar depois que já avaliou todos elementos que tinha que analisar.
É comum ocorrer em funções e métodos que tem um laço internamente, um caso muito comum é a Substring().
Tem uma classe que mostra superficialmente como o erro é gerado.
Como evitar
No caso do laço o ideal é usar uma construção da linguagem, se tiver que varrer toda coleção por controle próprio assim não tem muito como errar (desde que a coleção não seja modificada em sua estrutura e não mude a quantidade de elementos existentes). Pode ser um foreach ou um for abstrato que faça isto. Quando usa um for bruto ou while onde o programador controla onde deve parar, é que costuma acontecer o erro. O erro mais comum é a pessoa colocar a comparação verificando o fim se o contador é menor ou igual ao tamanho, mas se começa do zero tem que ser menor que o tamanho total da coleção.
foreach (var item in lista) WriteLine(item); //assim não tem como dar esse erro

Coloquei no GitHub para referência futura.
Há casos que está usando um laço mas não está acessando o elemento de forma direta, mas sim calculando o número usando o contador do laço como parte da fórmula. Este é um caso híbrido, o problema pode ser no limite do contador ou pode ser na fórmula. Por exemplo, se você usa uma fórmula que pega sempre o ""contador mais um"", obviamente não pode ir até o último valor possível na coleção porque o último possível mais um dá um número fora da faixa, por exemplo se a coleção vai de 0 a 9, o contador deve parar em 8, se for no 9 a fórmula resultará em 10 e dará o erro.
Então a solução para o problema é sempre validar certo quando deve parar, nunca deixar passar do número do elemento que não existe na coleção naquele momento. Nunca pressuponha que sabe quantos elementos tem ali, sempre pegue esse número ou use uma construção que garanta isso.
if (n >= 0 && n < opcoes.size()) return opcoes[n]->reproduz();

Coloquei no GitHub para referência futura.
No caso do acesso ser feito individualmente por um dado calculado ou obtido externamente quase sempre é necessário validar o dado variável e que veio sem controle direto do seu algoritmo. Se não passar na validação de estar entre a faixa inicial (geralmente 0) e a final (geralmente o tamanho da coleção menos um), ou ainda se tem aquela chave, então deve fazer alguma operação alternativa, geralmente retornando um erro ou fazendo algo diferente (em alguns casos até pode lançar uma exceção, mas não costuma ser a melhor opção, mas se forma uma exceção mais específica em alguns casos pode ser interessante, só é mais raro ser o certo).
Só acesse um índice/chave condicionalmente, a não ser que seja 100% garantido que não tem como ser um dado inválido, mas são raros casos assim, como pode ser visto nos códigos e links postados aqui. Esta dica serve para qualquer dado, não só esses que são índices/chaves. Quase todos os bugs ocorrem porque algum dado não está no estado que está esperando e não pode confiar em nada.
Note que que vemos muito caso de erro em que a chave (de um dicionário ou objeto) não existe sem mesmo vir de finte externa, ou seja, é simples erro de digitação, é como se tivesse digitado o nome de uma variável errada no código.
E de fato muitas vezes em casos de literais usando como chave elas funcionam como se fossem nomes e variáveis mesmo. O elemento da coleção não deixa de ser uma variável.
O uso de assert(), requires() ou algo semelhante costuma ser uma boa ideia. Aprenda-os.
Nem tudo gera erro
Algumas estruturas de dados não lançam erros ou exceções quando a chave não existe, apenas retornam um código de erro que pode ser um nulo. Algumas tem métodos que permitem escolher o que acontece quando tenta acessar uma chave não existente. Cuidado pode parecer certo porque funciona, mas dará resultado ruim.
Tem linguagens que não dão erro, só ferra tudo. C e C++ em certa medida, são assim.
Onde não dá erro
Se você não está passando uma posição em uma coleção de dados então o erro não acontecerá, então precisa de duas coisas: coleção de dados e posição sendo acessada. A posição pode ser passada por um operador indexador, muito comum ser colchetes objeto[x] (de um array, lista, ou dicionário), mas outras linguagens podem ter outras notações, JS pode fazer assim objeto.x e ainda é uma posição nessa coleção. Também pode ocorrer em métodos que recebem a posição de uma forma ou de outra, pode ser até um dado que será usado para calcular a posição.
Averiguando o erro
Um teste de mesa manual ou auxiliado pelo IDE (debugger) sempre indicará o que está acontecendo. Você executa passo a passo e analisa o valor do elemento sendo usado e verá que um dele logo no momento que dará o erro está acessando um índice/chave que não existe, por isso é preciso saber todas chaves possíveis ou a faixa do índice possível.
Lembre-se sempre de olhar o dado naquele momento, ele pode não ser o que deseja, pode não conter todos elementos que está esperando, isto pode ser a causa do erro. Se o dado estiver ok então seu algoritmo está pegando um valor que não devia.
Não tem milagre, não tem resposta fácil e rápida, tem que analisar o que está acontecendo. Faça a análise e aprenda programar melhor no processo. Aprenda a se virar por conta própria, você vai precisar. Quem não sabe fazer isso não sabe o básico de programação e acessar coleções está além da sua capacidade atual, repense o ritmo de aprendizado.
Esse é um erro chato pois sempre ocorre em tempo de execução (existem poucas situações que poderia ser evitado em tempo de execução e nem costuma valer o esforço fazer isto).
Extra
Não falei, mas já vi erros em que o valor sendo usado era um literal e portanto de total controle do algoritmo sendo escrito ali. Quase sempre o problema não está bem nesse algoritmo, está no dado recebido, provavelmente você esperava receber uma coleção de dados com um número determinado de elementos e por alguma razão não está recebendo isto. Provavelmente o problema está na criação do dado e deve concentrar os esforços em analisá-lo. Você pode melhorar seu algoritmo para lidar com um caso de erro assim, mas quase sempre o resultado melhor fazer o dado vir corretamente já que faz parte do contrato vir assim. Claro, isso pode não ser um bom design, não é robusto, ou para dar robustez complica o código e piora a performance, mas muita gente desenvolve sem pensar nessas coisas (""todos"" que escolhem uma linguagem de tipagem dinâmica). Exemplo.
Conclusão
De uma certa forma pode ser visto como uma variante da divisão por zero. Só ocorre porque está recebendo um valor que não é aceito naquele contexto. Não importa o que faça, a solução sempre está em validar implícita ou explicitamente o dado que será usado como índice/chave antes de usar, tem que ser garantido que ele existe (isso se não for erro de digitação).
Exemplo em C# de código robusto para não deixar acessar um elemento que não existe inadvertidamente.
Exemplos de perguntas que falam deste erro, é quase certo que o seu está coberto em algum.

Var dentro do FOR quando começa em 0(zero) o Count deve ser Count-1?
Como guardar letras em uma variável e exibi-las todas no final formando uma frase/palavra
Variável não designada
Quero salvar 3 números e depois imprimir na tela
Meu programa feito em C++ fica em loop infinito, como corrigir?
Dúvida sobre closures, função dentro de loop
Remover elemento de uma lista por chave (key) e por valor (value)
Laço de repetição com problema
Lançamento de exceções em função de número primo
Como exibir um texto com múltiplas linhas com format?
Listbox items out of range
Erro """"AWT-EventQueue-0"" java.lang.StringIndexOutOfBoundsException: String index out of range: 0"" no Java ao tentar fazer IF


Vou colocar mais exemplos, tentar usar mais linguagens, outras respostas podem ajudar mais pessoas

","
            9
        ",,,"['\nindependente-de-linguagem', 'outofrange\n']"
507507,Como utilizar groupBy com pd.Cut?,"
Estou tentando realizar um groupby com a função pd.cut(), mas estou tendo resultados esquisitos. Tenho as seguintes colunas:
    jul/16        Ago/16

 R$ 34.252,00  R$ 52.000,00 
 R$ 33.850,00  R$ 33.850,00 
 R$ 34.850,00  R$ 44.590,00 
 R$ 35.850,00  R$ 45.590,00 
 R$ 36.850,00  R$ 46.590,00 
 R$ 37.850,00  R$ 47.590,00 
 R$ 38.850,00  R$ 48.590,00 
 R$ 39.850,00  R$ 49.590,00 
 R$ 40.850,00  R$ 50.590,00 
 R$ 41.850,00  R$ 51.590,00 
 R$ 42.850,00  R$ 52.590,00

E quando faço o pd.cut() na coluna de Jul/16...
quartis = pd.cut(teste['Jul/16'], 4)

Tenho os seguintes quartis:
[(33841.0, 36100.0] < (36100.0, 38350.0] < (38350.0, 40600.0] < (40600.0, 42850.0]]

Mas, quando uso o groupby com os quartis encontrados, para aplicar funções descritivas na coluna Ago/16, tenho resultados esquisitos:
                      min    max     mean  count
Jul/16                                          
(33841.0, 36100.0]  33850  52000  44007.5      4
(36100.0, 38350.0]  46590  47590  47090.0      2
(38350.0, 40600.0]  48590  49590  49090.0      2
(40600.0, 42850.0]  50590  52590  51590.0      3

Como o máximo para o primeiro grupo, que vai de 33841 até 36100, está abrigando um valor de 52000? É como se os grupos estivessem sendo ignorados, conseguem me ajudar?
","
Acredito que a solução possa ser usando o método between
Criando DataFrame
df = pd.DataFrame({""jul"": [34252, 33850, 34850, 35850, 36850, 37850, 38850, 39850, 40850, 41850, 42850], ""ago"": [52000, 33850, 44590, 45590, 46590, 47590, 48590, 49590, 50590, 51590, 52590]})

Gerando quartis
quartis = pd.cut(df['jul'], 4)

Imprimindo DataFrame baseado se Agosto está dentro do quartil
for quartil in set(quartis):
    print(df[df['ago'].between(quartil.left, quartil.right)])
    print(80*""-"")

Para o exemplo de dados que foi passado na pergunta, a saída seria:
Empty DataFrame
Columns: [jul, ago]
Index: []
--------------------------------------------------------------------------------
Empty DataFrame
Columns: [jul, ago]
Index: []
--------------------------------------------------------------------------------
     jul    ago
1  33850  33850
--------------------------------------------------------------------------------
Empty DataFrame
Columns: [jul, ago]
Index: []
--------------------------------------------------------------------------------

","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
507495,Dados incorretos sendo inseridos no list Widget,"
depois de muito tentar, consegui fazer com que meu programa que é um simulador de caixa (automação comercial) a possibilidade de multiplicar os itens (ao invés do caixa registrar um a um, quando é do mesmo produto). Só que tem um erro, ele insere dados demais conforme mostra a figura.
Existem duas formas de entradas do usuário, com código puro para registro de um único item ou caso ele precise multiplicar é necessário fazer, por exemplo, 10 * 1 (onde 10 é a quantidade a ser multiplicada e 1 o código do produto Dipirona). Conforme mostra a figura, ele reconhece também 10 * 1 (como sendo 10 o código do produto Diovan e 1 o fator de multiplicação).
No exemplo da figura, ele tá registrando os dois tanto 10 * 1 como 10 sendo quantidade a ser multiplicada, quanto 10 como sendo código. Alguém poderia me ajudar? Não estou conseguindo solucionar.
OBS: Eu sempre coloco um saudação, ""olá amigos"" no início das minhas perguntas, mas elas não saem na mensagem, não sei porque.

O código

from PyQt5 import uic, QtWidgets, QtCore, QtGui
from PyQt5.QtWidgets import QTreeView
import mysql.connector

mydb = mysql.connector.connect(host=""localhost"", user=""root"", database=""db_farmacia"", password="""")
cursor = mydb.cursor()

def funcao_1():    # função/método responsável por buscar código correspondente no banco de dados e retornar dados na tela
    cursor = mydb.cursor()
    codigo = pdv.inserir_codigo.text()
    entrada = codigo.strip().split('*')
    pdv.inserir_codigo.setText("" "")
    cursor.execute(f""SELECT nome_produto, preço from tb_produtos WHERE codigo = '{entrada[0]}';"")
    for item in cursor.fetchall():
        descricao = item[0]
        preco = item[1]
        quantidade = 1
        pdv.label_descricao.setText(f'  {descricao}')  # label da descrição
        pdv.label_preco_unit.setText(f'  {preco}')  # label do valor unitário
        pdv.label_quantidade.setText(f' {quantidade}')  # label da quantidade
        pdv.label_total.setText(f'{preco}')  # label total = valor unitário x quantidade

        cursor.execute(f""INSERT INTO tb_registrados(produto, preco, quantidade, total) Values('{descricao}', '{preco}', '{quantidade}', '{preco}');"")
        cursor.execute(f""SELECT SUM(total) FROM tb_registrados;"")

        for p in cursor.fetchall():
            pdv.label_subtotal.setText(f""{p[0]:>7.2f}"")  # label do subtotal

        contador = pdv.listWidget_2.count()  # contando quantos itens aparecem na lista (listWidget)
        contador = contador + 1
        pdv.listWidget_2.insertItem(1000, f"" {contador:0>3}...{codigo}... {descricao} \n {quantidade} x {preco:.>10.2f}...............R${preco:>7.2f}"")


    if '*' in codigo:
        entrada = codigo.strip().split('*')
        cursor.execute(f""SELECT nome_produto, preço from tb_produtos WHERE codigo = '{entrada[1]}';"")
        for item in cursor.fetchall():
            print(entrada)
            descricao = item[0]
            preco = item[1]
            quantidade = int(entrada[0])
            total = preco * quantidade

            pdv.label_descricao.setText(f'  {descricao}')  # label da descrição
            pdv.label_preco_unit.setText(f'  {preco}')  # label do valor unitário
            pdv.label_quantidade.setText(f' {quantidade}')  # label da quantidade
            pdv.label_total.setText(f'{total:>7.2f}') # label total = valor unitário x quantidade

        cursor.execute(f""INSERT INTO tb_registrados(produto, preco, quantidade, total) Values('{descricao}', '{preco}', '{quantidade}', '{total}');"")
        cursor.execute(f""SELECT SUM(total) FROM tb_registrados;"")

        for p in cursor.fetchall():
            pdv.label_subtotal.setText(f""{p[0]:>7.2f}"")  # label do subtotal

        contador = pdv.listWidget_2.count()  # contando quantos itens aparecem na lista (listWidget)
        contador = contador + 1
        pdv.listWidget_2.insertItem(1000, f"" {contador:0>3}...{codigo.split('*')[1]}... {descricao} \n {quantidade} x {preco:.>10.2f}...............R${total:>7.2f}"")


","
Problema resolvido depois que mudei o código para a seguinte forma/sintaxe:
def funcao_1():    # função/método responsável por buscar código correspondente no banco de dados e retornar dados na tela
    cursor = mydb.cursor()
    codigo = pdv.inserir_codigo.text()
    pdv.inserir_codigo.clear()
    if '*' in codigo:
        entrada = codigo.strip().split('*')
        cursor.execute(f""SELECT nome_produto, preço from tb_produtos WHERE codigo = '{entrada[1]}';"")
        for item in cursor.fetchall():
            print(entrada)
            descricao = item[0]
            preco = item[1]
            quantidade = int(entrada[0])
            total = preco * quantidade

            pdv.label_descricao.setText(f'  {descricao}')  # label da descrição
            pdv.label_preco_unit.setText(f'  {preco}')  # label do valor unitário
            pdv.label_quantidade.setText(f' {quantidade}')  # label da quantidade
            pdv.label_total.setText(f'{total:>7.2f}')  # label total = valor unitário x quantidade

            cursor.execute(
                f""INSERT INTO tb_registrados(produto, preco, quantidade, total) Values('{descricao}', '{preco}', '{quantidade}', '{total}');"")

            cursor.execute(f""SELECT SUM(total) FROM tb_registrados;"")
            for p in cursor.fetchall():
                print(p)
                pdv.label_subtotal.setText(f""{p[0]:>7.2f}"")

            contador = pdv.listWidget_2.count()  # contando quantos itens aparecem na lista (listWidget)
            contador = contador + 1
            pdv.listWidget_2.insertItem(1000, f"" {contador:0>3}...{codigo.split('*')[0]}... {descricao} \n {quantidade} x {preco:.>10.2f}...............R${total:>7.2f}"")


    else:
        cursor.execute(f""SELECT nome_produto, preço from tb_produtos WHERE codigo = '{codigo}';"")
        for item in cursor.fetchall():
            descricao = item[0]
            preco = item[1]
            quantidade = 1


            pdv.label_descricao.setText(f'  {descricao}')  # label da descrição
            pdv.label_preco_unit.setText(f'  {preco}')  # label do valor unitário
            pdv.label_quantidade.setText(f' {quantidade}')  # label da quantidade
            pdv.label_total.setText(f'{preco:>7.2f}')  # label total = valor unitário x quantidade

            cursor.execute(
                f""INSERT INTO tb_registrados(produto, preco, quantidade, total) Values('{descricao}', '{preco}', '{quantidade}', '{preco}');"")

            cursor.execute(f""SELECT SUM(total) FROM tb_registrados;"")
            for p in cursor.fetchall():
                print(p)
                pdv.label_subtotal.setText(f""{p[0]:>7.2f}"")

            contador = pdv.listWidget_2.count()  # contando quantos itens aparecem na lista (listWidget)
            contador = contador + 1
            pdv.listWidget_2.insertItem(1000, f"" {contador:0>3}...{codigo}... {descricao} \n 1 x {preco:.>10.2f}...............R${preco:>7.2f}"")

","
            0
        ",,,"['\nmysql', 'python\n']"
507489,Por que a resposta de request HTTP não reconhece caracteres especiais?,"
Por que quando eu faço um request usando BeautifulSoup em Python, a minha resposta não considera caracteres latinos?
Código:
import requests 
from bs4 import BeautifulSoup
req = requests.post(url= f""https://www.linkcorreios.com.br/?id=LE132696585SE"")
soup = BeautifulSoup(req.text,'html.parser')
texto = soup.find('ul', {'class': 'linha_status m-0'}).text
print(req)
print(texto)

Resposta:
<Response [200]>
Status: Objeto em trÃ¢nsito - por favor aguarde
Data  : 29/04/2021 | Hora: 10:29
Origem: Unidade de LogÃ­stica Integrada - Curitiba / PR
Destino: Unidade de Tratamento - Cajamar / SP

Estou usando o VSCode com Python 3.9.4
","
Resumindo, é um problema de encoding (se quer entender a fundo o que é um encoding, leia aqui).
Mas basicamente, toda a informação trafegada vai e vem na forma de bytes, que são transformados em texto e vice-versa. E existem várias formas de converter bytes de/para texto (vários encodings diferentes), e esse tipo de problema acontece ao tentar usar um encoding quando na verdade foi usado outro (por exemplo, se a resposta foi convertida para bytes usando um encoding, mas você tenta converter esses bytes para texto usando outro encoding).
Na documentação do módulo requests podemos ver aqui o seguinte:

When you make a request, Requests makes educated guesses about the encoding of the response based on the HTTP headers.

E aqui:

When you receive a response, Requests makes a guess at the encoding to use for decoding the response when you access the Response.text attribute.

Ou seja, ao ser feita uma requisição, o requests tenta adivinhar o encoding da resposta, baseado nos headers HTTP. Então ao acessar o atributo text da resposta, será usado esse encoding para converter os bytes em texto. Mas o mesmo link acima ainda afirma:

The only time Requests will not do this is if no explicit charset is present in the HTTP headers and the Content-Type header contains text. In this situation, RFC 2616 specifies that the default charset must be ISO-8859-1.

Ou seja, se não houver um charset especificado nos headers HTTP, e o Content-Type contém text, o encoding será setado para ISO-8859-1. Podemos ver que esse é exatamente o caso, imprimindo os headers da resposta:
response = requests.post('https://www.linkcorreios.com.br/?id=LE132696585SE')
print(response.headers)

A saída foi:
{'Date': 'Wed, 23 Jun 2021 11:55:38 GMT', 'Server': 'Apache/2.4.7 (Ubuntu)', 'X-Powered-By': 'PHP/5.5.9-1ubuntu4.21', 'Vary': 'Accept-Encoding', 'Content-Encoding': 'gzip', 'Content-Length': '5090', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html'}

Podemos ver que o Content-Type é text/html (ou seja, contém text) e não há um charset explícito em nenhum dos headers. Por isso o encoding usado será ISO-8859-1, o que pode ser confirmado assim:
response = requests.post('https://www.linkcorreios.com.br/?id=LE132696585SE')
print(response.encoding) # ISO-8859-1

Portanto, ao tentar acessar o atributo text, os bytes foram convertidos para texto usando-se o encoding ISO-8859-1.
Mas como vimos, a página não está em ISO-8859-1, senão os acentos seriam mostrados corretamente.

A solução é simples: em vez de passar o text da resposta, passe o content:
import requests
from bs4 import BeautifulSoup

response = requests.post('https://www.linkcorreios.com.br/?id=LE132696585SE')

# *** Em vez de response.text, use response.content ***
soup = BeautifulSoup(response.content, 'html.parser')
#                             ^^^^^^^

texto = soup.find('ul', {'class': 'linha_status m-0'}).get_text()
print(response)
print(texto)

Assim, o Beautiful Soup lerá os ""bytes brutos"" (em vez de um texto que foi decodificado usando o encoding errado), e ele saberá lidar com isso, convertendo esses bytes em texto (mais detalhes aqui). Com isso, os acentos serão mostrados corretamente.
","
            2
        ",,,"['\nhtml', 'python', 'request', 'python-requests', 'beautifulsoup\n']"
507483,Como executar widgets que utilizam o QTimer a partir de uma Thread diferente?,"
Criei uma aplicação onde o usuário pressiona uma determinada combinação de teclas — utilizando o pacote pynput — e uma mensagem vinda de um ""QToaster"" aparece na tela. Abaixo está um código de exemplo:
from pynput import keyboard
from toaster import show_message         # Toaster criado a partir de um QFrame com QTimer
from PyQt5.QtWidgets import QApplication

def func():
    show_message(""Executado com sucesso."")

app = QApplication([])
thread = keyboard.GlobalHotKeys({""<ctrl>+<alt>+z"": func})
thread.start()
app.exec_()

O problema é que sempre que eu executo o código e pressiono as teclas, o QToaster trava e a seguinte mensagem de erro é impressa no console:
QObject::startTimer: Timers can only be used with threads started with QThread

Eu sei que esse erro está sendo gerado porque o QToaster não é criado na main thread. A minha dúvida é: como executar o QToaster a partir de uma outra Thread sem que ele trave, a partir de um sinal ou algo parecido? Em PyQt5 existe algum recurso que me permita executar um código de uma Thread diferente a partir de um sinal, como no código abaixo?
executor = Executor()
executor.set_function(lambda: show_message(""Executado com sucesso.""))

thread = keyboard.GlobalHotKeys({""<ctrl>+<alt>+z"": executor.start})
thread.start()

","
Eu sinceramente não sei se essa é a melhor solução para este problema, mas ainda assim é uma solução. Sim, existe um recurso no PyQt5 para criar sinais e é a classe QtCore.pyqtSignal.
Através dela, você pode definir uma função a ser executada — utilizando o método connect — e passar para a thread o método emit que, ao ser executado, irá emitir um sinal para executar a função que você conectou.
O problema é que para utilizar o pyqtSignal, você deve seguir algumas regras:

Você só poderá utilizá-lo dentro de uma classe que herda de QCore.QObject.
O objeto de pyqtSignal deve ser criado como um atributo da classe.

Dito isso, o seu código ficaria assim:
from pynput import keyboard
from toaster import show_message  
from PyQt5.QtCore import pyqtSignal, QObject
from PyQt5.QtWidgets import QApplication
import sys

def func():
    show_message(""Executado com sucesso."")

class MyClass(QObject):   # Não estou tão criativo hoje para dar nome de classe, sorry ;)
    signal = pyqtSignal()

app = QApplication([])

myObject = MyClass()
myObject.signal.connect(func)

thread = keyboard.GlobalHotKeys({""<ctrl>+<alt>+z"": myObject.signal.emit})
thread.start()
app.exec_()

","
            0
        ",,,"['\npython', 'python-3.x', 'thread', 'pyqt-5\n']"
507284,Como relacionar uma coluna A com B onde a coluna B começa com caracteres especiais? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    




Tenho o df igual indicado na imagem, e gostaria que o usuário pesquisasse o elemento da coluna B e retornasse o elemento da coluna A correspondente...
O que consegui fazer foi o inverso somente, pesquisar um elemento de A e retornar o B...
O código que fiz relacionando coluna A com B:
dados.loc[dados['A']=='ALAR\AGUA_EXAUSTOR_15MH']['B']

Tentei transformar os dados de B em str mas só consegui com json(), o que não me ajudou muito.
EDIT: Consegui resolver e avançar no que precisava fazendo um replace no caracteres especiais. Vou manter a dúvida aqui pela curiosidade de saber se da certo direto sem fazer replace.
Obrigado a quem responder e desculpa a formatação da pergunta pois é minha primeira.
","
Fiz um exemplinho do que você deseja.
Uma opção é você filtrar o dado e em seguida passar a coluna que deseja e tem mais 2 maneiras que é o loc e iloc.
import pandas as pd

dados = [
         ['Indefinido', 0]
        ,['Domingo',1]
        ,['Segunda-Feira',2]
        ,['Terça-Feira',3]
        ,['Quarta-Feira',4]
        ,['Quinta-Feira',5]
        ,['Sexta-Feira',6]
        ,['Sábado',7]
        ]

df = pd.DataFrame(dados,columns=['Dia','Numero'])
print (df)
print()

numero = int(input(""Digite um número: ""))

'''
#Tratamento
if numero<1 or numero > 7:
    numero = 0
'''

#Filtragem
print(df['Dia'][df.Numero==numero].to_string())


","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
507276,O PyQT5 monitora os eventos de forma Assíncrona no Windows e Síncrona no Raspberry?,"
Contexto
Estou desenvolvendo um programa que usa o OpenCV4 pra identificar alguns fixadores de metal, o programa é relativamente simples e usa em suma filtros de contorno de busca por cores, no Windows até então tudo roda como o desejado, porém tenho que fazer a portabilidade para o RaspBerry Pi3, depois de alguns dias resolvendo problemas de instalação do Python3.9, Opencv4.4 e o PYQT5, consegui fazer o código rodar e exibir a tela principal da aplicação, e as demais 'normalmente'.

Problema
No Windows, quando defino um gatilho que aciona uma função na classe em que estou, ele SEMPRE pode ser acionado, não importa se a função que esta rodando está em um 'while', 'sleep', 'for' ou qualquer outra coisa, então quando eu clico no botão 'Start' ele aciona a função 'onClicked()' que se mantem em um 'while' atualizando a imagem com o 'displayImage()', mas caso eu clique, por exemplo, no botão 'Stop' ele passa pra função 'OnClicked' o paramentro 'False' que quebra o 'while'. (Provavelmente não é o melhor jeito de se fazer, mas funciona).
No RaspBerry quando a minha função 'onCliked()' é acionada e entra dentro do 'while' todo o resto do programa para de responder, como se o eventos não fossem mais monitorados, mas não entendo o porque isso acontece, o código é o mesmo, o funcionamento deveria ser o mesmo certo?. Como faço os eventos serem monitorados a todo momento no RaspBerry?.
Como o código é grande tive que cortar algumas partes, mas vocês podem ver o completo no meu repositório.
class MainWindow(QMainWindow):

    # Define o LayOut e a(s) ação(es) de cada gatilho(s).
    def __init__(self):
        super(MainWindow, self).__init__()
        loadUi(""Ui/mainWindow.ui"", self)
        self.PhotoPath.setText(os.path.normpath(os.path.join(os.path.dirname(__file__), '../Images/')))
        # Associando as classes de outras janelas a um objeto correspondente.
        self.JsonWindow = JsonTree()
        self.ControllerWindow = MachineController()
        self.PopUpWindow = PopUp()

        # Conecta o botão de inicio á execução do programa de identificação.
        self.Start.clicked.connect(
            lambda checked: self.onClicked(True)
        )

        # Conecta o botão de Saida com a função que finaliza a execução do programa.
        self.Stop.clicked.connect(
            lambda checked: self.onClicked(False)
        )

Função que é chamada quando aperto o botão ""Iniciar"".  (Cortei alguns pedaços pra postar aqui)
    def onClicked(self, FDs):
    global cap, img, nominalIndex, Processo
    Processo = FDs
    if Processo:
        last = self.janela

    # Mantem o processo rodando.
    while Processo:

            lower = np.array([
                self.h_min.value(),
                self.s_min.value(),
                self.v_min.value()
            ])
            upper = np.array([
                self.h_max.value(),
                self.s_max.value(),
                self.v_max.value()
            ])
            msk = Op.refineMask(Op.HSVMask(edge_analyze, lower, upper))
            cv2.rectangle(msk, (0, 0), (msk.shape[1], msk.shape[0]), (0, 0, 0), thickness=20)
            chr_k = cv2.bitwise_and(edge_analyze, edge_analyze, mask=msk)

       
        self.displayImage(chr_k, 1)
        cv2.waitKey(1)


Função responsável por exibir a imagem no meu 'QLabel'.  (Cortei alguns pedaços pra postar aqui)
    def displayImage(self, imgs, window=1):
        qformat = QImage.Format_Indexed8
        if self.janela == zProcess and not self.LiveS.isChecked():
            imgs = cv2.resize(imgs, None, fx=0.25, fy=0.25)
        if len(imgs.shape) == 3:
            if (imgs.shape[2]) == 4:
                qformat = QImage.Format_RGBA888
            else:
                qformat = QImage.Format_RGB888
        imgs = QImage(imgs, imgs.shape[1], imgs.shape[0], qformat)
        imgs = imgs.rgbSwapped()
        self.imgLabel.setPixmap(QPixmap.fromImage(imgs))
        self.imgLabel.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)


Demonstração de Funcionamento em ambos os Sistemas:
Raspberry Pi3 com o SO padrão de 2021:


Windows 10:

Essa é a minha primeira pergunta feita aqui no STOF, então caso algo não tenha ficado claro ou possa melhorar por favor avisem.
",,,,,"['\npython', 'opencv', 'raspberry-pi', 'pyqt\n']"
507229,"Boa noite fiz um codigo de votação/pesquisa, mas ele não tá computando o voto quando é dito pelo nome ao invés do número","
Fiz uma linha de código pra fazer uma pesquisa numa rua pra saber qual canal as pessoas assistem, e eu coloquei pra computar o voto pelo número do canal ou pelo nome do canal, mas ele só computa os votos feitos pelo número e não pelo nome, podem me dar uma luz ?
def pesquisa_audiencia (canal):
    global canal_cultura, canal_globo, canal_band, canal_record

    if canal.isalpha():
        if canal== 'Encerrar':
            print('Encerrado')
            print_resultados()

    elif canal.isalnum():
        if canal == '2' or canal == 'Cultura' or canal == '4' or canal == 'Globo' or canal == '7' or canal == 'Band' or canal == '9' or canal == 'Record':
            if canal == '2':
                canal_cultura +=1
            elif canal == 'Cultura':
                canal_cultura +=1
            elif canal == '4':
                canal_globo +=1
            elif canal == 'Globo':
                canal_globo +=1
            elif canal == '7':
                canal_band +=1
            elif canal == 'Band':
                canal_band +=1
            elif canal == '9':
                canal_record +=1
            elif canal == 'Record':
                canal_record +=1
     
        

def print_resultados():
    global canal_cultura, canal_globo, canal_band, canal_record

    print('Porcentagem de Audiência por canal:\n')
    print('Canal 2:' + str(canal_cultura))
    print('Canal 4:' + str(canal_globo))
    print('Canal 7:' + str(canal_band))
    print('Canal 9:' + str(canal_record))


    exit()

if __name__ == '__main__':
    canal_cultura = 0
    canal_globo = 0
    canal_band = 0
    canal_record = 0

    while True:
        canal = input('Qual canal estão assistindo neste momento em sua casa?')
        pesquisa_audiencia(canal)

","
Qual versão do python voce está usando? Dê uma olhada nesse link: A diferença das funções input() e raw_input()
Se estiver usando Python 2, use raw_input ao inves de input.
def pesquisa_audiencia (canal):
    global canal_cultura, canal_globo, canal_band, canal_record

    if canal == ""Encerrar"":
        print('Encerrado')
        print_resultados()

    if canal == '2' or canal == 'Cultura':
        canal_cultura +=1
    elif canal == '4' or canal == 'Globo':
        canal_globo +=1
    elif canal == '7' or canal == 'Band':
        canal_band +=1
    elif canal == '9' or canal == 'Record':
        canal_record +=1     
    else:
        print(""Voto nao computado"")

def print_resultados():
    global canal_cultura, canal_globo, canal_band, canal_record

    print('Porcentagem de Audiencia por canal:')
    print('Canal 2 - ' + str(canal_cultura)) + "" votos""
    print('Canal 4 - ' + str(canal_globo)) + "" votos""
    print('Canal 7 - ' + str(canal_band)) + "" votos""
    print('Canal 9 - ' + str(canal_record)) + "" votos""
    exit()

if __name__ == '__main__':
    canal_cultura = 0
    canal_globo = 0
    canal_band = 0
    canal_record = 0

    while True:
        canal = raw_input('Qual canal estao assistindo neste momento em sua casa?')
        pesquisa_audiencia(canal)

Se estiver usando Python 3, nos dê mais informacoes sobre os erros.
","
            0
        ",,,"['\npython', 'python-3.x', 'idle-ide\n']"
507197,Como faço meu algoritmo de escalonamento de matrizes funcionar em python?,"
Preciso fazer um programa em python que leia uma matriz A nxn e um vetor B e depois resolva o sistema Ax=B, a funçao q estou usando para a primeira parte é
    global n
n= int(input('Qual será a dimensão da matriz A nxn: '))
print(f' ""A"" será uma matriz [{n}x{n}]')
global matrizA
matrizA = []
global i
global j
for i in range(0,n):
    matrizA.append(list())
for i in range(0,n):
    for j in range(0,n):
        matrizA[i].append(list())
for i in range(0,n):
    for j in range(0,n):
        matrizA[i][j].append(float(input(f'Elemento [{i+1}x{j+1}]: ')))
print()
print('='*24)
print('Matriz A'.center(24))
print('='*24)
print()
for i in range(0,n):
    print(f'|{matrizA[i]}|')
print()        
ask= input('Os valores estão corretos? ')
if ask==('nao'):
    print('Refaça a matriz A: ')
    LerMatriz()
              
elif ask==('não'):
    print('Refaça a matriz A: ')
print('='*24)
print('='*24)
print()
print(f'A matriz B será [{n}x1]')
h=1
global matrizB
matrizB = []
for i in range(0,n):
    matrizB.append(list())
for i in range(0,n):
    for j in range(0,h):
        matrizB[i].append(list())
for i in range(0,n):
    for j in range(0,h):
        matrizB[i][j].append(float(input(f'Elemento [{i+n}]: ')))
print()
print('='*24)
print('Matriz B'.center(24))
print('='*24)
print()
for i in range(0,n):
    print(f'|{matrizB[i]}|')
            
ask= input('Os valores estão corretos? ')
if ask==('nao'):
    print('Refaça a matriz B: ')
    LerMatriz()
                  
elif ask==('não'):
    print('Refaça a matriz B: ')  

Já o algorítmo para a eliminação está assim:
def pivoteamento():

for k in range(1, n-1):
    #pivoteamento
    pivo=matrizA[k][k]
    lpivo=k
    for i in range(k+1,n):
        if matrizA[i][k]>pivo:
            pivo= matrizA[i][k]
            lpivo=i
    if pivo==0:
        print('A matriz A é singular.')
        quit()
    elif lpivo !=k:
        for j in range(1,n):
            troca=matrizA[k][j]
            matrizA[k][j]=matrizA[lpivo][j]
            matrizA[lpivo][j]=troca
        troca=matrizB[k]
        matrizB[k]=matrizB[lpivo]
        matrizB[lpivo]=troca

    #eliminação
    for i in range(k+1,n):
        m=matrizA[i][k]/matrizA[k][k]
        matrizA[i][k]=0
        for j in range(k+1,n):
            matrizA[i][j]=matrizA[i][j]-m*matrizA[k][j]
        matrizB=matrizB[i]-m*matrizB[k]

E depois criei um menu printando tudo, não sei como imprimir um sistema Ax=B bem formatado e fazer o algoritmo funcionar, alguém pode me ajudar? Detalhe: não posso importar nada da biblioteca de acordo com o professor, apenas math.
","
voce quer ajuda com fatoração com pivoteamento parcial?
independente do que precisar, pesquise e tente implementar alguma solução e traga o erro, que ai a gente pode ajudar a encontrar alternativas que funcionem mas aqui não é lugar de resolver todo um código ou projeto
","
            0
        ",,,"['\npython', 'python-3.x', 'matriz\n']"
507162,ERRO urllib.error.HTTPError: HTTP Error 404: Not Found,"
Tenho o seguinte código, simples.
from urllib.request import urlopen
from bs4 import BeautifulSoup

word_site = urlopen('https://svnweb.freebsd.org/csrg/share/dict/words?view=markup&pathrev=61569')
bs = BeautifulSoup(word_site, parser='html.parser')

print(bs.h1)

Já procurei por todos os lugares e não encontrei resposta satisfatória. Esse código gera o seguinte erro:
Traceback (most recent call last):
  File ""<input>"", line 1, in <module>
  File ""C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pydev\_pydev_bundle\pydev_umd.py"", line 197, in runfile
    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script
  File ""C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py"", line 18, in execfile
    exec(compile(contents+""\n"", file, 'exec'), glob, loc)
  File ""C:/Users/joaof/OneDrive/Programacao/Cursos/Cursos/curso-de-programacao-em-python-do-basico-ao-avancado/exercicios/secao08/ex60.py"", line 5, in <module>
    word_site = urlopen('https://svnweb.freebsd.org/csrg/share/dict/words?view=markup&pathrev=61569')
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 214, in urlopen
    return opener.open(url, data, timeout)
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 523, in open
    response = meth(req, response)
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 632, in http_response
    response = self.parent.error(
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 561, in error
    return self._call_chain(*args)
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 494, in _call_chain
    result = func(*args)
  File ""C:\Users\joaof\AppData\Local\Programs\Python\Python39\lib\urllib\request.py"", line 641, in http_error_default
    raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 404: Not Found

Por favor, alguém consegue me ajudar?
PS: a URL existe e está funcionando normalmente.
","
Geralmente não precisa mas essa página que você está trabalhando precisa de um agente, usei a identificação sendo o navegador firefox mozilla.
import requests, bs4
url = ""https://svnweb.freebsd.org/csrg/share/dict/words?view=markup&pathrev=61569""
headers = {""User-Agent"":""Mozilla/5.0""}
response = requests.get(url, headers=headers)
soup = bs4.BeautifulSoup(response.text, 'html.parser')

'''
# Imprimir tudo
print(soup.text)
'''

# Imprimir linha por linha, removendo linhas sem dado
for x in soup.text.splitlines():
    if len(x) > 0:
        print(x)


","
            2
        ",,,"['\npython', 'web-scraping', 'urllib\n']"
507161,"Como verificar se um Input Text está ""Vazio"" ou não em pySimpleGUI?","
Olá, estou criando um código simples para treinar tanto python como pysimplegui, e gostaria de verificar se o usuário deixou ou não o campo vazio antes de clicar em salvar, mas olhando a documentação e exemplos da biblioteca, não encontrei nada que remetesse a isso.
vou deixar o código logo abaixo para que possam entender...
import sqlite3 #biblioteca para banco de dados
import PySimpleGUI as sg #biblioteca para interface (GUI)
##################################################

# conectando...
conn = sqlite3.connect('clientes.db')
# definindo um cursor
cursor = conn.cursor()

# criando a tabela (schema)
cursor.execute(""""""CREATE TABLE IF NOT EXISTS clientes (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    idade INTEGER,
    cpf VARCHAR(11) NOT NULL,
    email TEXT,
    fone TEXT,
    cidade TEXT,
    uf VARCHAR(2));"""""")

##################################################

# criando a janela (GUI)
sg.theme('Tan Blue')   # Definindo um tema para a janela
# Desingn da janela.
layout = [  [sg.Text('Nome:', size=(6, 1)), sg.InputText(size=(30,1), key='-NOME-')],
            [sg.Text('Idade:', size=(6, 1)), sg.InputText(size=(30,1), key='-IDADE-')],
            [sg.Text('CPF:', size=(6, 1)), sg.InputText(size=(30,1), key='-CPF-')],
            [sg.Text('e-mail:', size=(6, 1)), sg.InputText(size=(30,1), key='-EMAIL-')],
            [sg.Text('Fone:', size=(6, 1)), sg.InputText(size=(30,1), key='-FONE-')],
            [sg.Text('Cidade:', size=(6, 1)), sg.InputText(size=(30,1), key='-CIDADE-')],
            [sg.Text('UF:', size=(6, 1)), sg.InputText(size=(30,1), key='-UF-')],
            [ sg.Button('Cadastrar', button_color = 'black on orange', font = ['Comics', 12]), 
            sg.Button('Sair', button_color = 'black on red', font = ['Comics', 12]),
            sg.Button('Ver Registros', button_color = 'black on green', font = ['Comics', 12]) ] ]

# Criando a janela
window1 = sg.Window('Cadastro de Clientes', layout)
window2_active = False

# Event Loop to process ""events"" and get the ""values"" of the inputs
while True:
    event1, values1 = window1.read()
    # if user closes window or clicks exit
    if event1 == sg.WIN_CLOSED or event1 == 'Sair':
        break
    
    if event1 == 'Cadastrar':
        try:
            # inserindo dados na tabela
            cursor.execute(""""""INSERT INTO clientes (nome, idade, cpf, email, fone, cidade, uf)
            VALUES (?,?,?,?,?,?,?)"""""", (values1['-NOME-'], values1['-IDADE-'], values1['-CPF-'], 
            values1['-EMAIL-'], values1['-FONE-'], values1['-CIDADE-'], values1['-UF-']))
            conn.commit() #NUNCA ESQUECER ESSE COMANDO
            sg.popup('Cliente cadastrado com sucesso!')
            window1['-NOME-'].update('')
            window1['-IDADE-'].update('')
            window1['-CPF-'].update('')
            window1['-EMAIL-'].update('')
            window1['-FONE-'].update('')
            window1['-CIDADE-'].update('')
            window1['-UF-'].update('')
        except E as Argument:
            print(f'Erro ao gravar os dados:\n{E}')

    if event1 == 'Ver Registros' and not window2_active:
        window2_active = True
        window1.Hide()
        
        # SEMPRE CRIAR LAYOUT NOVO, NUNCA REUTILIZAR
        layout2 = [ [sg.Text('TIPO DE FILTRO', font=('Helvetica', 14), justification='left')],
                    [sg.Radio('Nome', 'loss', default=True, size=(5, 1), font = ['Comics', 14]), 
                    sg.Radio('CPF', 'loss', size=(5, 1), font = ['Comics', 14])],
                    [sg.Text('Busca:', size=(5, 1), font = ['Comics', 13]), sg.InputText(size=(40,1), key='-BUSCA-', font = ['Comics', 13]), sg.Button('Filtrar', button_color = 'black on light blue', font = ['Comics', 12])],
                    [sg.MLine(key='-ML1-'+sg.WRITE_ONLY_KEY, size=(80,15), font='Any 13')],
                    [sg.Button('Sair', button_color = 'black on red', font = ['Comics', 12])] ]
                    
        window2 = sg.Window('Ver/Filtrar Registros', layout2, finalize=True)
        
        #Preenchendo na primeira execução
        window2['-ML1-'+sg.WRITE_ONLY_KEY].print('\nOS DADOS SALVOS NO BANCO DE DADOS SÃO:\n', text_color='yellow', background_color='black')
        cursor.execute(""""""SELECT * FROM clientes;"""""")
        for i, linha in enumerate(cursor.fetchall()):
            if i % 2 == 0:
                window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light yellow')
            else:
                window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light blue')
        
        #Laço da segunda janela
        tipoBusca = True
        while True:
            event2, values2 = window2.read()
            if event2 == sg.WIN_CLOSED or event2 == 'Sair':
                window2.Close()
                window2_active = False
                window1.UnHide()
                break

            if event2 == 'Nome':
                tipoBusca = True
            if event2 == 'CPF':
                tipoBusca = False

            if event2 == 'Filtrar' and tipoBusca:    # if something is highlighted in the list
                #window2.FindElement('-ML1-').Update('') #Não consigo limpar o Multiline
                cursor.execute(f""""""SELECT * FROM clientes WHERE nome LIKE '{values2['-BUSCA-']}%';"""""")
                for i, linha in enumerate(cursor.fetchall()):
                    if i % 2 == 0:
                        window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light yellow')
                    else:
                        window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light blue')
            
            if event2 == 'Filtrar' and not tipoBusca:    # if something is highlighted in the list
                #window2.FindElement('-ML1-').Update('') #Não consigo limpar o Multiline
                cursor.execute(f""""""SELECT * FROM clientes WHERE cpf LIKE '{values2['-BUSCA-']}%';"""""")
                for i, linha in enumerate(cursor.fetchall()):
                    if i % 2 == 0:
                        window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light yellow')
                    else:
                        window2['-ML1-'+sg.WRITE_ONLY_KEY].print(linha, text_color='black', background_color='light blue')
conn.close() # desconectando do banco de dados...
window1.close()
##################################################

","
Olá @Elvis, tudo bem ?
No PySimpleGUI ainda não temos uma solução viável através do Framework, mas você pode usar condições para fazer isso um exemplo base e que pode ser nem melhorado seria usar da seguinte forma:
#Laço de atualização da Janela
while True:
definição de eventos e valores da Janela
event, value = window.read()

definição da Key -NOME- para uma variável de uso
NOME = value['-NOME-']
print(NOME)

Condição da variável para aprovação ser for igual a vazio, retorna Falso ou um Popup
if NOME == '':
    print('False')
    sg.popup('PopUp','Vazio Campo NOME')

Caso True continua o processo da Janela
elif NOME != '' :
    print('True')

Código Completo
import PySimpleGUI as sg

layout = [[sg.Text('Nome:', size=(6, 1)), sg.Input(size=(30, 1), key='-NOME-')],
          [sg.Button('Ver Registros', button_color='black on green')]]

window = sg.Window('Cadastro de Clientes', layout)

while True:
    event, value = window.read()

    NOME = value['-NOME-']
    print(NOME)

    if NOME == '':
        print('False')
        sg.popup('PopUp','Vazio Campo NOME')
    elif NOME != '' :
        print('True')

    if event == sg.WIN_CLOSED :
        break

","
            0
        ",,,['\npython\n']
507147,Como tornar um model campo boolean para aceitar somente 1 valor verdadeiro e vários falsos no django?,"
Um exemplo de model endereço de um cliente:
class Address(models.Model):

    activate = models.BooleanField(null=False, default=False)

    AddressLine1 = models.CharField(max_length=60, blank=True, null=True)
    AddressLine2 = models.CharField(max_length=60, blank=True, null=True)
    country = models.CharField(max_length=50, null=True, blank=True)
    postalCode = models.CharField(max_length=20, null=True, blank=True)
    stateProvinceRegion = models.CharField(max_length=50, null=True, blank=True)
    city = models.CharField(max_length=50, null=True, blank=True)


Como eu faço para informar ao banco que o campo ""activate"" pode ter somente 1 valor do tipo ""true"" e vários do tipo ""false"", ou seja, somente posso ter um endereço ""ativo""(true) e os demais precisam ficar ""desativado""(false).
O cliente precisa ter a liberdade de alterar o seu endereço ativo mas mantendo a mesma regra de somente 1 endereço com status ativo(true) por vez!
","
class Address(models.Model):

    ...

    activate = models.BooleanField(blank=False, null=False, default=False)


    def save(self):
        if self.activate:
            addresses = Address.objects.filter(activate=True)
            for address in addresses:
                address.activate = False
                address.save()
        super().save()


Outros exemplos sobre como resolver o mesmo problema
","
            0
        ",,,"['\npython', 'django', 'django-rest-framework\n']"
507079,Retornar dados com CBV usando paramentos na url em Django,"
Estou tentando retornar os dados de uma consulta, e até consegui fazer a consulta funcionar. O problema se encontra na hora de enviar os dados pro template. Sempre aparece o erro que tem que ser um dicionário e não um QuerySet/list.
O erro quando está certo:

context must be a dict rather than QuerySet

O erro quando quando a categoria não existe:

Categoria matching query does not exist

O que posso fazer pra corrigir?
views.py
class PostagemPorCategoriaView(ListView):
    template_name = 'posts/postagem_lista_por_categoria.html'
    model = Postagem

    def get_context_data(self, *, object_list=None, **kwargs):
        if self.kwargs.get('url', None):
            categoria = Categoria.objects.get(url=self.kwargs.get('url'))
            object_list = get_list_or_404(Postagem.objects.filter(categoria=categoria.pk))
        return object_list

urls.py
urlpatterns = [
    path('categoria/<slug:url>/', PostagemPorCategoriaView.as_view(), name='postagem_por_categoria'),
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

",,,,,"['\npython', 'django', 'url', 'framework', 'django-generic-views\n']"
507059,"Em um DataFrame, modificar dados de uma coluna condicionado ao valor de outra coluna [fechada]","






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 10 meses.




                        Melhore esta pergunta
                    



Estou trabalhando numa automação com relatórios para resultados de operaçõesos de compra e venda de criptomoedas/ações.
Preciso converter o valor positivo de uma célula para negativo caso ela seja compra(BUY). E quando é uma operação de venda(SELL) não preciso alterar nada. Já está positivo e se manterá assim.
Abaixo segue o exemplo do DataFrame original:

O resultado final para a coluna Amount entre as linhas 4 e 9 deveria ser um valor negativo.
Logo, tenho que condicionar a alteração da coluna Amount à presença do valor BUY na coluna Side.
Tentei usar a função .loc do Pandas. Mas travei na operação de conversão do valor original para o valor negativo.
df.loc[df.Side=='BUY','Amount']=""aqui preciso inserir a fórmula para multiplicar por -1""

Fiz um teste colocando uma variável fixa e funciona. Então, preciso só do comando certo de conversão ou então usar outra função.
Ex:
df.loc[df.Side=='BUY','Amount']='negativo'


","
Além da sugestão do @Augusto Vasques, você pode utilizar o loc como você havia tentado anteriormente:
df.loc[df['Side'] == 'BUY', 'Amount'] = -df['Amount']

Loc + isin
df.loc[df['Side'].isin(['BUY']), 'Amount'] = -df['Amount']

","
            3
        ","
Para alterar valores numa coluna onde dependa de valores em outras colunas, use o método Series.mask() que substitui valores onde dadas condições sejam verdadeiras.
Exemplo:
Na coluna Amount, df[""Amount""], onde a condição, df[""Side""]==""BUY"", for verdadeira substitui in loco, inplace=True,  o valor pelo seu simétrico aditivo, -df[""Amount""].
import pandas as pd

df = pd.DataFrame({
    ""Pair"":[""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""BAKEBUSD"", ""CAKEUSDT""],
    ""Side"":[""SELL"", ""SELL"", ""SELL"", ""SELL"", ""BUY"", ""BUY"", ""BUY"", ""BUY"", ""BUY"", ""BUY"", ""SELL""],
    ""Amount"":[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0]
})

print(""DF Original"", df, sep=""\n"")

df[""Amount""].mask(df[""Side""]==""BUY"", -df[""Amount""], inplace=True)

print(""DF Modificado"", df, sep=""\n"")

Resultado:
DF Original
        Pair  Side  Amount
0   BAKEBUSD  SELL     1.0
1   BAKEBUSD  SELL     2.0
2   BAKEBUSD  SELL     3.0
3   BAKEBUSD  SELL     4.0
4   BAKEBUSD   BUY     5.0
5   BAKEBUSD   BUY     6.0
6   BAKEBUSD   BUY     7.0
7   BAKEBUSD   BUY     8.0
8   BAKEBUSD   BUY     9.0
9   BAKEBUSD   BUY    10.0
10  CAKEUSDT  SELL    11.0
DF Modificado
        Pair  Side  Amount
0   BAKEBUSD  SELL     1.0
1   BAKEBUSD  SELL     2.0
2   BAKEBUSD  SELL     3.0
3   BAKEBUSD  SELL     4.0
4   BAKEBUSD   BUY    -5.0
5   BAKEBUSD   BUY    -6.0
6   BAKEBUSD   BUY    -7.0
7   BAKEBUSD   BUY    -8.0
8   BAKEBUSD   BUY    -9.0
9   BAKEBUSD   BUY   -10.0
10  CAKEUSDT  SELL    11.0

Teste o exemplo no Repl.it
","
            2
        ","['\npython', 'pandas', 'dataframe', 'conversão\n']"
507025,Erro ao usar o pandas no pycharm para ler arquivo excel [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    




estou tentando usar o pandas no pycharm para ler um arquivo excel mas me retorna muitos erros como aparece na imagem, já tentei mudar o caminho do arquivo,usar o r antes do caminho, enfim nada da certo e não acho ninguém com erro semelhante.
","
Atualizei o pycharm 2 vezes pois ele estava pedindo, depois instalei o xlrd e openpyxl ( através do pip install )porque o pycharm também tava pedindo e deu certo, não sei exatamente qual desses resolveu o problema mas deu bom :)
","
            0
        ",,,"['\npython', 'pandas', 'pycharm\n']"
507020,"Para que serve input().split("" "") em python?","
Estou resolvendo alguns exercícios em python e quando coloco o código dessa forma:
A = float(input(""""))
B = float(input(""""))
C = float(input(""""))

triangulo = float((A*C)/2)
circulo = float(3.14159*(C**2))
trapezio = float(((A + B)*C)/2)
quadrado = float(B*B)
retangulo = float(A*B)

print(""TRIANGULO: %0.3f"" %triangulo)
print(""CIRCULO: %0.3f"" %circulo)
print(""TRAPEZIO: %0.3f"" %trapezio)
print(""QUADRADO: %0.3f"" %quadrado)
print(""RETANGULO: %0.3f"" %retangulo) 

Dá um erro onde diz que não pode converter string para float, logo na primeira linha (A = float(input(""""))). Porém vendo a resposta, percebi que uma forma correta de se fazer seria:
valor = input().split("" "")
a, b, c = valor
pi = 3.14159
triangulo = (float(a) * float(c))/2
circulo = pi * (float(c)* float(c))
trapezio = float(c) *(float(a) + float(b)) / 2
quadrado = float(b) * float(b)
retangulo = float(a) * float(b)
print(""TRIANGULO: %0.3f\nCIRCULO: %0.3f\nTRAPEZIO: %0.3f\nQUADRADO: %0.3f\nRETANGULO: %0.3f"" % (triangulo, circulo, trapezio, quadrado, retangulo))

e queria entender o motivo e o significado do valor = input().split("" "") nesse código.
",,,,,"['\npython', 'string', 'float', 'split\n']"
506987,Como gerar números aleatórios em Python?,"
Eu gostaria de saber como gerar números aleatórios em Python. Estou com a versão 3.4.
","
from random import randint
print(randint(0,9))

Isto gera números inteiros entre 0 e 9.
É possível usar diversas outras funções disponíveis na documentação. Cada uma pode ser melhor para o que você deseja.
from random import randrange, uniform
print(randrange(0, 9)) #faixa de inteiro
print(uniform(0, 9)) #faixa de ponto flutuante

Você pode importar tudo e usar o que deseja:
from random import *
random.seed() #inicia a semente dos número pseudo randômicos
random.randrange(0, 9, 2) # pares entre 0 e 9
random.choice('abcdefghij') # seleciona um dos elementos aleatoriamente
items = [1, 2, 3, 4, 5, 6, 7]
random.shuffle(items) # embaralha os itens aleatoriamente

Coloquei no GitHub para referência futura.
","
            32
        ","
from random import *
print random()
print uniform(10,20)
print randint(100,1000)
print randrange(100,1000,2)

random() retorna um float x tal que 0 <= x < 1.
uniform(10,20) retorna um float x tal que 10 <= x < 20.
randint(100,1000) retorna um inteiro x tal que 100 <= x < 1000.
randrange(100,1000,2) retorna um inteiro x tal que 100 <= x < 1000 e x é par
","
            13
        ","['\npython', 'python-3.x', 'random\n']"
506983,Atualizar o label de forma automática com Tkinter,"
Gostaria de pegar o valor 1 e subtrair com o valor 2 que o usuário digitar e atualizar o label do resultado de forma automática. Desta forma, conforme o usuário for digitando o label resultado já vai atualizando. Como poderia fazer isso?
    from tkinter import *

    root = Tk()
    root.geometry(""200x300"")

    valor1_content = DoubleVar()
    resultado_content = DoubleVar()

    valor1_content.set(125.55)

    lb_valor1 = Label(root, text=""Valor 1"")
    lb_valor1.place(relx=0.1, rely=0.1)
    lb_valor1_content = Label(root, text="""", textvariable=valor1_content)
    lb_valor1_content.place(relx=0.1, rely=0.2)

    lb_valor2 = Label(root, text=""Insere o valor 2"")
    lb_valor2.place(relx=0.1, rely=0.3)
    valor2_entry = Entry(root, textvariable=resultado_content) 
    valor2_entry.place(relx=0.1, rely=0.4)

    lb_resultado = Label(root, text=""Resultado"")
    lb_resultado.place(relx=0.1, rely=0.5)
    resultado_entry = Label(root, text="""", textvariable=resultado_content) 
    resultado_entry.place(relx=0.1, rely=0.6)

    root.mainloop()

","
Podemos chamar uma função em cada tecla pressionada para efetuar o cálculo.
from tkinter import *

root = Tk()
root.geometry(""200x300"")

valor1_content = DoubleVar()
resultado_content = DoubleVar()
resultado = DoubleVar()

def subtrair(e):
    resultado.set(valor1_content.get() - resultado_content.get())

valor1_content.set(125.55)

lb_valor1 = Label(root, text=""Valor 1"")
lb_valor1.place(relx=0.1, rely=0.1)
lb_valor1_content = Label(root, text="""", textvariable=valor1_content)
lb_valor1_content.place(relx=0.1, rely=0.2)

lb_valor2 = Label(root, text=""Insere o valor 2"")
lb_valor2.place(relx=0.1, rely=0.3)
valor2_entry = Entry(root, textvariable=resultado_content) 
valor2_entry.place(relx=0.1, rely=0.4)
valor2_entry.bind(""<KeyRelease>"", subtrair)

lb_resultado = Label(root, text=""Resultado"")
lb_resultado.place(relx=0.1, rely=0.5)
resultado_entry = Label(root, text="""", textvariable=resultado) 
resultado_entry.place(relx=0.1, rely=0.6)

root.mainloop()

","
            0
        ",,,"['\npython', 'tkinter\n']"
506959,Select - Opção dropdown menu não fica selecionada - Python Selenium,"
Olá,
Estou a fazer um projecto em Python usando o Selenium.
Ao fazer um select para escolher uma opção de um dropdown menu, esta não fica selecionada.
Sempre fiz desta forma e sempre funcionou gostaria de saber se alguem me consegue ajudar.
Segue o meu código.
# Marca
select = Select(WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '/html/body/form/div[3]/div[2]/div[1]/div[4]/div/div[2]/div[1]/div[2]/div[2]/div/select'))))
select.select_by_visible_text(googleSheet.marca)
time.sleep(r)

# Modelo
select = Select(WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '/html/body/form/div[3]/div[2]/div[1]/div[4]/div/div[2]/div[1]/div[3]/div[1]/div/span/select'))))
select.select_by_visible_text(googleSheet.modelo)
time.sleep(r)

# Versão
select = Select(WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '/html/body/form/div[3]/div[2]/div[1]/div[4]/div/div[2]/div[1]/div[3]/div[2]/div/div/select'))))
select.select_by_visible_text(googleSheet.versao)

Será que me estou a esquecer de alguma coisa?
Agradeço a ajuda
",,,,,"['\npython', 'python-3.x', 'selenium', 'selenium-webdriver\n']"
506936,Como obter o código binário de uma string sem caracteres ASCII em Python?,"
Eu estou estudando Unicode e encodings. Eu entendi até agora que Unicode é uma estrutura chave-valor em que cada caractere é representado por um número. Exemplo:
import string

alphabet=list(string.ascii_lowercase)

for letter in alphabet:
    print(letter,"":"",ord(letter))

Retorna:
a : 97
b : 98
c : 99
d : 100
e : 101
f : 102
g : 103
h : 104
i : 105
j : 106
k : 107
l : 108
m : 109
n : 110
o : 111
p : 112
q : 113
r : 114
s : 115
t : 116
u : 117
v : 118
w : 119
x : 120
y : 121
z : 122

Já o encoding é algo completamente diferente. Trata-se da transformação de uma string em bytes. Essa transformação pode se basear em diversas estruturas de chave-valor que podem ou não ter a chave correspondente ao valor desejado. O caractere ä pode ser transformado em bytes usando o codec latin-1, mas gera um erro se o codec utilizado for ascii.
Ocorre que gostaria de recuperar o valor binário de um caractere em um codec específico, mas não estou conseguindo porque o Python sempre imprime o caractere no lugar do byte quando o caractere existe em ASCII. Exemplo:
""a"".encode(""latin-1"")

Retorna:
b'a'

Quando na verdade eu esperava ver 11100001 que, pelo que li, é o código binário de a no codec latin-1.
Note que, quando o caractere não existe em ASCII, o Python imprime o hexadecimal (que posso depois converter em binário):
café.encode(""latin-1"")

Retorna:
b'caf\xe9'

Como faço para fazer o Python imprimir o código binário (ou hexadecimal) correspondente ao caractere em vez do caractere em ASCII?
","
O método encode retorna uma instância de bytes. E um objeto do tipo bytes, segundo a documentação é uma sequência de números, cujos valores estão no intervalo entre 0 e 255.
E um número não ""está"" em um formato específico, ou em determinada base. É claro que no fim das contas, tudo acaba virando um monte de bytes, mas a forma como esses bytes são interpretados e exibidos varia conforme a situação.
O número 97, por exemplo, pode ser interpretado como a letra ""a"" (se considerarmos a tabela ASCII), ou como o próprio valor numérico 97 (que por sua vez pode ser escrito como 61 em hexadecimal, ou 01100001 em binário, ou 141 em octal, ou 97.0, 00097, 97,00, etc). Ou ele ainda poderia ser um código específico que varia conforme o contexto (por exemplo, poderia representar o código de uma cor em RGB). Ou seja, os bits seriam os mesmos, mas a forma como eles são exibidos pode variar.
No caso específico de um objeto bytes, ao ser impresso, os valores que correspondem a caracteres ASCII imprimíveis são mostrados como os próprios caracteres, e outros valores são mostrados em hexadecimal, com o prefixo \x. Essa foi a escolha da linguagem para exibir os valores quando estes fazem parte de um objeto bytes.
Se você quer outro formato, terá que formatar você mesmo. Duas opções são usar f-string (a partir do Python 3.6) ou bin. Exemplo:
for b in ""café"".encode(""latin-1""):
    print(f'{b:08b}  {bin(b)}')

A diferença é que bin coloca o prefixo 0b e não preenche com zeros à esquerda. A saída para o código acima será:
01100011  0b1100011
01100001  0b1100001
01100110  0b1100110
11101001  0b11101001

Claro que uma vez escolhida a maneira de formatar, você pode construir a string da forma que bem entender. Por exemplo:
# 01100011 01100001 01100110 11101001
print(' '.join(f'{b:08b}' for b in ""café"".encode(""latin-1"")))

Para versões anteriores a 3.6 você pode usar '{:08b}'.format(b) no lugar de f'{b:08b}'.

Outra opção, se quiser tudo junto, é converter o objeto bytes para hexadecimal (usando o método hex), depois converter para int e por fim passar esse número para bin:
# 1100011011000010110011011101001
print(bin(int(""café"".encode(""latin-1"").hex(), 16))[2:])

E ainda usei o slice [2:]  para remover o prefixo 0b. Mas creio que unir tudo com join me parece mais simples do que converter para hexadecimal, para depois converter para int, para depois converter para binário.

Já para converter para hexadecimal, bastaria trocar a formatação, ou então usar hex diretamente:
encoded = ""café"".encode(""latin-1"")
print(encoded.hex()) # 636166e9

# a partir do Python 3.8, você pode escolher o separador
print(encoded.hex(' ')) # 63 61 66 e9
print(encoded.hex('-')) # 63-61-66-e9

# para versões anteriores a 3.8, você pode usar join para ter o separador
print('-'.join(f'{b:02x}' for b in encoded)) # 63-61-66-e9
print('-'.join(f'{b:02X}' for b in encoded)) # 63-61-66-E9

A diferença é que hex sempre coloca os dígitos de a a f como letras minúsculas, enquanto que usando f-string você pode escolher tanto minúsculas quanto maiúsculas (usando o formato x ou X). Leia a documentação para saber mais sobre as opções de formatação.

Por fim, vale lembrar que sempre é possível pegar o valor de cada byte individualmente, obtendo o seu respectivo valor numérico:
encoded = ""café"".encode(""latin-1"")
print(encoded[1]) # 97
print(type(encoded[1])) # <class 'int'>

E uma vez tendo esse número, você pode formatá-lo como quiser (usando f-string, por exemplo).
E repare como o número exibido individualmente é mostrado como o valor numérico 97, não mais como o caractere ASCII a, o que mostra que de fato o tipo muda a forma como o byte é interpretado e exibido. O fato deste valor estar dentro de um objeto bytes não faz com que ele ""fique na base 2"", por isso ele não satisfez a sua expectativa de que ele fosse exibido em binário.
","
            2
        ",,,"['\npython', 'string', 'binary\n']"
506774,Ordenação com selection sort por tamanho e alfabeticamente,"
Estou com um exercício da faculdade, mas preciso de uma ajuda. Preciso fazer programa que recebe uma lista contendo N nomes e retorna uma lista com todos os nomes recebidos ordenados pelo tamanho (quantidade de letras) o selection sort. Caso você tenha dois nomes de mesmo tamanho, a ordenação destes dois deverá ser alfabética crescente. Não posso utilizar a função sort.
Fiz a primeira parte de ordenar pelo tamanho da string:
def nome_ordena(nomes):
    for i in range(len(nomes)):
        i_menor = i
        for j in range(i+1, len(nomes)):
            if len(nomes[i_menor]) > len(nomes[j]):
                i_menor= j  
        nomes[i], nomes[i_menor] = nomes[i_menor], nomes[i]           
    return nomes

Tentei de várias formas ordenar alfabeticamente os que tem o mesmo tamanho, mas não estou conseguindo. Alguém pode me ajudar?
","
Basta incluir uma verificação a mais no if:
def nome_ordena(nomes):
    for i in range(len(nomes)):
        i_menor = i
        for j in range(i + 1, len(nomes)):
            # se tamanho é diferente, ou se o tamanho é igual, usa a ordem alfabética
            if ( len(nomes[i_menor]) > len(nomes[j]) ) or ( len(nomes[i_menor]) == len(nomes[j]) and nomes[i_menor] > nomes[j] ):
                i_menor = j
        nomes[i], nomes[i_menor] = nomes[i_menor], nomes[i]           
    return nomes

nomes = ['Agata', 'Bia', 'Ana', 'Carlos', 'Andrea']
print(nome_ordena(nomes)) # ['Ana', 'Bia', 'Agata', 'Andrea', 'Carlos']

Ou seja, eu vejo se o tamanho de um é maior que o outro, ou se os tamanhos são iguais e uma string é maior que outra. Isso funciona pois comparações entre strings com os operadores > e < levam em conta a ordem lexicográfica dos caracteres.
Lembrando que há diferença entre maiúsculas e minúsculas, e também entre letras acentuadas:
nomes = ['Agata', 'Ágata', 'agata']
print(nome_ordena(nomes)) # ['Agata', 'agata', 'Ágata']

","
            4
        ",,,"['\npython', 'python-3.x\n']"
506741,Como fazer interpolação de string em Python?,"
Por exemplo, no PHP, podemos fazer assim:
$preco = 200;
$unidades = 10;

$texto_final = ""O produto custa {$preco} reais e restam {$unidades} unidades."";

É possível fazer algo semelhante em Python ou é necessário concatenar sempre? 
","
Para versões anteriores a 3.6, prefira sempre utilizar o método str.format e eu explico o porquê nesta pergunta:

O que utilizar para formatar uma string, % ou format?

Já, a partir da versão 3.6, foi adicionado um novo modo de realizar a interpolação: as f-strings (PEP 498). Elas são strings definidas com o prefixo f e podem conter expressões entre chaves que serão analisadas em tempo de execução.
preco = 200
unidades = 10

print(f""O produto custa {preco} reais e restam {unidades} unidades."")

Veja funcionando no Repl.it
É permitido, inclusive, utilizar as regras de formação que o método str.format possui, tal como:
pi = 3.14159

print(f'O valor de pi é {pi: >10.3}')

Veja funcionando no Repl.it
","
            7
        ","
Podes fazer assim:
preco = 200
unidades = 10

texto_final = ""O produto custa R$ %.2f reais e restam %s unidades."" % (preco, unidades)

print(texto_final)

# Outros exemplos

nome = 'Thon';
sobre = 'de Souza';

print(""%s %s"" % (nome, sobre))

print(""{} {}"".format(nome, sobre))
print(""{nome} {sobre}"".format(nome=""João"", sobre=""da Silva""))
print(""{sobre} {nome}"".format(nome=""João"", sobre=""da Silva""))

preco = 162.58

print(""R$ %.1f"" % (preco))
print(""R$ %.2f"" % (preco))
print(""R$ %.3f"" % (preco))


%s - String (ou qualquer objeto com uma representação de seqüência de caracteres, como números)
%d - Inteiros
%f - Números de ponto flutuante
%.<número de dígitos>f - Números de pontos flutuantes com uma quantidade fixa de dígitos à direita do ponto.
%x/%X - Inteiros na representação hexadecimal (minúsculas / maiúsculas)


Veja funcionando no repl.it

Referências

String Formatting - Python 3
Custom String Formatting - Python 2

","
            6
        ","['\npython', 'python-3.x', 'interpolação-de-string\n']"
506735,Remover índices de Linhas e Colunas no DataFrame [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Estou aprendendo python e comecei o usar o pyqt5 como interface gráfica e, para forçar o aprendizado, estou fazendo um programinha de sorteio de bolas de concursos. Para análise dos dados estou usando DataFrame e adicionando no QListWidget.listWidget.
No entanto, quando eu envio os dados para visualização, os índices de Linhas e Colunas vão juntos, conforme imagem abaixo. Alguém conhece uma função no DataFrame que não mostre os índices?
temp = pd.DataFrame(jogos)

interface.listWidget_2.addItem(temp.to_string())


","
A função procurada é o próprio método DataFrame.to_string() que já está sendo utilizado.
Único requisito necessário para cumprir a tarefa solicitada é o ajuste de dois parâmetros:

header que determina como escrever os nomes das colunas, deve ser ajustado em False.
index que determina como escrever os índices das linhas, deve ser ajustado em False.

temp = pd.DataFrame(jogos)

interface.listWidget_2.addItem(temp.to_string(header=False, index=False)) 

","
            1
        ",,,"['\npython', 'pandas', 'dataframe', 'pyqt-5\n']"
506699,Como rodo uma imagem docker e assim que terminar o processo salvar no computador host o arquivo gerado dentro do container?,"
Eu tenho um código que deve ser rodado em um container. Assim que ele rodar ele irá gerar um arquivo png. Segue o Dockerfile:
FROM python:3
COPY . /projeto
RUN apt update
RUN yes | apt install libeccodes-tools
RUN yes | apt install -y python3 && yes | apt install python3-pip
RUN pip3 install -r projeto/requirements.txt
WORKDIR /projeto
CMD python3 exemplo.py

exemplo.py:
import pandas as pd
ex = pd.DataFrame({'teste': [1,2,3,4,5,6]})
ex.to_csv('exemplo.csv')

Build da imagem:
docker build -t meu_codigo .

Eu queria poder dar o comando abaixo e no processo de execução programado já salvar as imagens png(Ou qualquer arquivo que eu gerar) em alguma pasta do computador host.
docker run --rm meu_codigo

Como posso fazer isso? Desde já agradeço.
","
Para fazer isso, voce tem que criar um volume, um link entre um diretório seu e um diretório dentro do container
Veja este exemplo, onde o comando vai gerar resultado dentro de um diretório aux e este está ligado a um diretório output
Dockerfile
FROM alpine:3.13.5
RUN mkdir aux
CMD echo ""my text"" > aux/output.txt

mkdir output
docker build . -t my-image
docker run --volume=$(pwd)/output:/aux my-image
cat output/output.txt

no seu caso:
Dockerfile
FROM python:3
COPY . /projeto
RUN apt update
RUN yes | apt install libeccodes-tools
RUN yes | apt install -y python3 && yes | apt install python3-pip
RUN pip3 install -r projeto/requirements.txt
WORKDIR /projeto
CMD python3 exemplo.py

exemplo.py
import pandas as pd
ex = pd.DataFrame({'teste': [1,2,3,4,5,6]})
ex.to_csv('aux/exemplo.csv')

mkdir output
docker build -t meu_codigo .
docker run --rm --volume=$(pwd)/output:/aux meu_codigo
cat output/exemplo.csv

Observe que caso o diretório não exista na imagem, ao se utilizar a opção volume ele é criado sem problemas
","
            1
        ",,,"['\npython', 'docker\n']"
506576,Como somar valores de um model e inserir o resultado em outro utilizando Django?,"
Possuo esse model que tem como objetivo cadastrar os serviços disponíveis e seus respectivos valores:
class Servico(models.Model):
    nome = models.CharField('Nome do serviço', max_length=255)
    preco = models.DecimalField('Preço do serviço', decimal_places=2)
    data_cadastro = models.DateTimeField('Data de cadastro',auto_now_add=True)
    
    def __str__(self):
        return self.nome

Criei outro model chamado venda, onde poderá ser cadastrados vários serviços para uma única venda. Eu gostaria de inserir a soma dos preços dos serviços dentro de valor_total
class Venda(models.Model):
    FORMPAG_CHOICES = (
        ('CC', 'Cartão de Crédito'),
        ('CD', 'Cartão de Crédito'),
        ('D', 'Dinheiro'),
        ('T', 'Transferência (Entre contas/PIX)')
    )

    forma_pag = models.CharField('Forma de pagamento', max_length=2, choices=FORMPAG_CHOICES)
    cliente = models.ForeignKey(Cliente, verbose_name='Cliente', on_delete='models.PROTECT')
    servicos = models.ManyToManyField(Servico, verbose_name='Serviços prestados')
    data_cadastro = models.DateTimeField('Data da venda',auto_now_add=True)
    valor_total = # É aqui onde quero inserir o valor total da venda

","
Talvez criar uma property no model de Venda para sempre calcular isso pra ti. Algo tipo abaixo:
class Venda(models.Model):
  # ...

  @property
  def valor_total():
    servicos = self.servicos.all() # aplicar filtros padroes se precisar
    preco_total = 0.00
    for servico in servicos:
       preco_total += servico.preco
    return preco_total

o @property é praticamente para conseguir chamar venda.valor_total e nao precisa chamar venda.valor_total()
Espero que isso já ajude.
","
            0
        ",,,"['\npython', 'django\n']"
506486,Remover inteiros repetidos lista em Python,"
Gostaria de remover os inteiros repetidos de uma lista e retornar uma lista nova.
lista = [1, 2, 3, 3, 3, 4, 5, 6, 6, 7, 8]

O resultado teria que ser esse:
[1, 2, 3, 4, 5, 6, 7, 8]

","
O set faz justamente isto. Se você fizer questão que o tipo do resultado seja uma list, é só fazer a conversão do  set para tal
a = [1, 2, 3, 3, 3, 4, 5, 6, 6, 7, 8] 
b = set(a) # Conjunto a partir de 'a', vai remover todos os repetidos

c = list(b) # lista a partir de 'b', vai converter o set numa list

print(a) # [1, 2, 3, 3, 3, 4, 5, 6, 6, 7, 8]
print(b) # {1, 2, 3, 4, 5, 6, 7, 8}
print(c) # [1, 2, 3, 4, 5, 6, 7, 8]

","
            6
        ","
Se você deseja apenas remover os inteiros repetidos da lista citada, você pode utilizar o seguinte algoritmo...
lista = [1, 2, 3, 3, 3, 4, 5, 6, 6, 7, 8]

nova_lista = list()
for c in lista:
    if c not in nova_lista:
        nova_lista.append(c)

print(nova_lista)

Observe que neste algoritmo o for percorre lista e, se cada valor de c não existir em nova_lista, adiciona-o em nova_lista. E, caso contrário, não o adiciona.
Ao final teremos a nova_lista formada por todos os elementos de lista sem os valores repetidos.
Agora, se for necessário generalizar a lógica deste algoritmo para tratar casos em que teremos listas variadas, podemos utilizar o seguinte algoritmo...
lista = sorted(list(map(int, input('Digite todos os valores da lista: ').split())))

nova_lista = list()
for c in lista:
    if c not in nova_lista:
        nova_lista.append(c)

print(nova_lista)

Quando executamos este segundo algoritmo recebemos a seguinte mensagem: Digite todos os valores da lista:. Neste momento devemos digitar todos os valores da lista na mesma linha, separados por um só espaço e pressionar enter.
A parir desse momento o algoritmo capturará todos os valores digitados, os converterá para inteiros e os armazenará, ordenadamente de forma crescente em lista. Em seguida, o for percorrerá lista e, se cada valor de c não existir em nova_lista, adiciona-o em nova_lista. E, caso contrário, não o adiciona.
Se as futuras listas utilizadas neste segundo algoritmo contiverem elementos de valor real, basta mudar o tipo de dado de int para float.
","
            0
        ","['\npython', 'lista\n']"
506462,Como retornar o resultado de uma função para um arquivo em python,"
poderiam me ajudar? queria retornar o resultado desta função em um arquivo para depois que gerá-lo o enviar para outra aplicação. já tentei de várias maneiras, porém até abre o arquivo, mas quando olho dentro dele está em branco.
    def inventario():
       print('\n*** Ajuste de Inventário ***\n')
       codprod = input('Código do Produto?: ')
       qt = input('Quantidade Contada: ')
       motivo = input('Motivo do Ajuste: ')
       user = input('Solicitante: ')
       return (codprod, qt, motivo, user)
       resultado = open('resultado.txt', 'r+')
       arq = (codprod, qt, motivo, user)
       for x in arq:
             resultado.write(x)
             resultado.write(""\n"")
             resultado.close()

","
O código precisa de vários ajustes, vejamos:
A função inventario() termina no return (codprod, qt, motivo, user), então as linhas de código após o return precisam ser no início da linha, pois da forma que estava identado, tudo pertenceria a função.
def inventario():
    print('\n*** Ajuste de Inventário ***\n')
    codprod = input('Código do Produto?: ')
    qt = input('Quantidade Contada: ')
    motivo = input('Motivo do Ajuste: ')
    user = input('Solicitante: ')
    return (codprod, qt, motivo, user)

A aplicação fica da seguinte forma, note que está iniciando no começo da linha:
resultado = open('resultado.txt', 'r+')
arq = inventario()
for x in arq:
    resultado.write(x)
    resultado.write(""\n"")

resultado.close() precisa iniciar no começo da linha também para só fechar o arquivo após o loop for.
resultado.close()

O código completo fica assim:
def inventario():
    print('\n*** Ajuste de Inventário ***\n')
    codprod = input('Código do Produto?: ')
    qt = input('Quantidade Contada: ')
    motivo = input('Motivo do Ajuste: ')
    user = input('Solicitante: ')
    return (codprod, qt, motivo, user)

resultado = open('resultado.txt', 'r+')
arq = inventario()
for x in arq:
    resultado.write(x)
    resultado.write(""\n"")

resultado.close()

","
            0
        ",,,"['\npython', 'funções\n']"
506429,"Quero salvar os dados em um arquivo de texto com python, mas ocorre o erro: FileNotFoundError: [Errno 2] No such file or directory: 'agenda.txta+'","
#Quero criar um arquivo assim que o programa rodar pela primeira vez

def novo_contato():
    print('\n=== NOVO CONTATO ===')
    nome = input(' Nome: ')
    numero = int(input(' Número: '))
    email = input(' E-mail: ')
    try: #TRATAMENTO DE ERRO & SALVANDO CONTATO EM UM ARQUIVO
        arquivo = open(""agenda.txt"" ""a"")
        dados = f'{nome};{numero};{email}\n'
        arquivo.write(dados)
        arquivo.close()
        print('\n --- CONTATO SALVO COM SUCESSO! --- \n')
    except:
        print(""\n --- ERRO AO SALVAR CONTATO!! --- \n"")


",,,,,['\npython\n']
506396,Acrescentar um caractere a uma str em python,"
Tenho uma data de nascimento onde preciso q o programa leia a informação e digite o dia, mes e ano usando pyautogui. Pra função WRITE funcionar, preciso transformar a data, que é um número inteiro, em uma str.
O local onde preciso digitar essas datas, possuem 2 digitos: 01, 02, 03... 14... 30 e 31.
Quando a str possue 2 digitos (de 10 adiante) o programa roda tranquilamente e digita as dezenas sem problemas, porém quando a data se torna com 1 digito, ele imprime somente uma casa e não consigo digitar o 06, por exemplo e digitando apenas 6 nao da.
> > import datetime    
    import pyautogui
> > 
> > data_atual = datetime.datetime.now() 
    day = data_atual.day day =
> > str(day)
> > 
> > pyautogui.write(day) # nesse caso imprime 24 pq hj é 24 mas em dias 1,2,3...9 eu tenho problemas.

O pyautogui não imprime numeros inteiros, então existe a necessidade de transformar o numero inteiro em uma str, porém complica em numeros de 1 digito apenas. Uma solução que encontrei pra consertar isso, foi incluir um IF pra todo resultado de 1 a 9:
> if day == '1':
>     pyautogui.write('01')  
elif day == '2':
>     pyautogui.write('02')
 .
 .
 . 
elif day == '9':
>     pyautogui.write('09') else:
>     pyautogui.write(day)

gostaria de algo mais simples pra inserir um 0 na sting day quando ela tivesse apenas 1 digito sem ter q usar tantas linhas de comando como no if. A inserção do 0 deve vir na frente pra transformar 1, 2, 3... em 01, 02, 03...
Outra solução q achei foi:
if day <= '9':
        day = ('0' + day)
else:
    day = day

","
Use fstring:
import pyautogui
from datetime import datetime  
  
data_atual = datetime.now() 

pyautogui.write(f'{data_atual.day:02}')

fstring é um literal string prefixado com 'f' ou 'F'. Essas strings podem conter campos de substituição que são expressões delimitadas por chaves {}.
Opcionalmente um especificador de formato pode ser incluído após a expressão usando : para iniciar esse especificador.
No caso o especificador de formato 02 informa que será formatado um inteiro cujo a representação string deverá ter ao mínimo dois caracteres e os caracteres faltantes serão preenchidos com 0.
Para saber mais veja Mini linguagem de especificação de formato.
Também é possível usando o método datetime.strftime() passando o argumento ""%d"" como um código de formatação:
import pyautogui
from datetime import datetime   

data_atual = datetime.now() 

pyautogui.write(data_atual.strftime(""%d""))

datetime.strftime() converte objeto para uma string conforme um formato fornecido e o código %d solicita o dia do mês como um número decimal completando, se necessário, com zero a esquerda.
","
            2
        ","
Todos esses if's realmente é desnecessário. Talvez seja interessante você verificar a documentação do módulo datetime, existe um método que simplifica o que está tentando fazer...
""strftime"" retorna uma string com valores e formato especificados. Para o atributo day retorna sempre string com dois números.
import datetime    
import pyautogui

data_atual = datetime.datetime.now()
day = data_atual.strftime(""%d"")
pyautogui.write(day)

","
            2
        ",['\npython\n']
506389,Como posso verificar se um coluna de um dataframe está contida em uma coluna de outro dataframe? [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Olá, eu tenho a seguinte questão: eu tenho dois dataframes e quero verificar se os valores de uma coluna contem em outra coluna de outro dataframe que não tem o mesmo nome e nem a mesma ordem
uma coluna tem 22 mil linhas e a outra tem 48 mil linhas. No caso eu quero verificar se o id de uma coluna possui em outra e se sim retornar apenas as as linhas que correspondem.
Por exemplo o df1 tem uma coluna com os seguintes valores,
coluna = [ '1', '2', '3', '4', '5']
no df2
coluna2 = ['1', '3']
quero retornar as linhas do df1 que contém os valores da coluna do df2
curso = cursos.where(cursos['CÓDIGO UNIDADE DE ENSINO'] == cursoAtivo['CO_UNIDADE_ENSINO']).notna()

Recebi o seguinte erro para o código acima
Can only compare identically-labeled Series objects
","
Assumindo que é coluna2 toda tem que estar dentro da coluna, acredito que a melhor forma seja usar set.issubset().
Criando dataframes de teste
>>> df1 = pd.DataFrame({""coluna"": [ '1', '2', '3', '4', '5']})
>>> df2 = pd.DataFrame({""coluna2"": [ '1', '3']})

Dataframes
>>> df1
  coluna
0      1
1      2
2      3
3      4
4      5

>>> df2
  coluna2
0       1
1       3

Criando sets
>>> c1 = set(list(df1[""coluna""]))
>>> c2 = set(list(df2[""coluna2""]))

Checando se uma coluna está dentro de outra
>>> c2.issubset(c1)
True

Nota Importante O set é um conjunto sem repetição. Sendo assim, uma coluna cuja lista seja [1, 2, 1, 2, 2, 2, 2] terá um set igual à {1, 2}. Sendo assim, caso você queira testar se a sequência [1, 2, 1, 2, 2, 2, 2] está em outro dataframe, a solução apresentada não funcionará para este caso.
","
            1
        ",,,"['\npython', 'pandas\n']"
506299,Controle de acesso em API usando Flask JWT Extended,"
Estou trabalhando em uma API (Flask/Python) que deve receber requisições de um aplicativo (React-Native) e um Webapp (Flask/Python). Para algumas requisições será necessário o controle de login. Para isso estou usando autenticação por meio de JWTs (biblioteca Flask-JWT-Extended). Para autenticação no Webapp um post é feito na rota /auth/login da API e um token é retornado caso os dados estejam corretos:
@users.route(""/auth/login"", methods=[""POST""])
def login():
   data = request.get_json()
   if data['email'] and data['password']:
       user = User.query.filter_by(email=data['email']).one_or_none()
       if user and bcrypt.check_password_hash(user.password, data['password']):
           response_object = jsonify({'message': 'Success. Login successful'})
        access_token = create_access_token(identity=user)
        return jsonify(access_token=access_token)
   abort(jsonify(message=""Wrong username or password""))

Minha dúvida é: como fazer o armazenamento desse token retornado pela API no meu Webapp (Flask/Python) para poder enviá-lo a cada requisição que o usuário fizer e, além disso, manter o usuário logado nesse app, pois ele também possui páginas que só podem acessadas por usuários autenticados.
Antes de ter uma API separada para as requisições que conversam diretamente com o banco de dados (quando eu tinha apenas o Webapp), eu estava usando o Flask-login, login_user() e @login_required para fazer esse controle, mas não posso mais seguir esse caminho pois o app também precisa ser atendido pelo API.
",,,,,"['\npython', 'api', 'segurança', 'flask', 'jwt\n']"
506284,Type object 'datetime.datetime' has no attribute 'datetime',"
Eu tenho uma view que importa algumas funções de um modelo, e quando eu importo o modelo dentro da view, tenho problema com o datetime.
A função que existe no modelo funciona perfeitamente, mas na view tenho erro. A função best_month é :
    def best_month(cls):
        res = {}
        month_price = cls.objects.values_list('created_time__month').annotate(total=Sum('price'))
        if month_price:
            res['month'], res['price'] = max(month_price, key=lambda i: i[1])
            res['month_name'] = date(datetime.date(datetime.datetime.now().year, month=res['month'], day=1), 'F')
        return res

mas quando chamo para view :
    
def dashboard(request):
    context = {'segment': 'index'}
    html_template = loader.get_template('account/dashboard.html')

    context.update(dict(Item.total_info()))
    context['best_month'] = Item.best_month()
    context['orders_month_report'], context['orders_month_report_labels'] = Item.orders_month_report()

    context['orders'], context['info'] = set_pagination(request, Item.objects.all().order_by('-id'), item_numer=10)
    if not context['orders']:
        messages.warning(request, context['info'])
    return HttpResponse(html_template.render(context, request))

Tenho o seguinte erro : 

    
---> 71             res['month_name'] = date(datetime.date(datetime.datetime.now().year, month=res['month'], day=1), 'F')
     72         return res
     73

AttributeError: type object 'datetime.datetime' has no attribute 'datetime'

","
Fala Chuck! Tudo bem?
Não consegui achar em seu código qual import você está realizando dentro da biblioteca do datetime. Acredito que o erro está na confusão do nome do módulo.
Para utilizar o datetime.datetime, você pode:
>>> import datetime
>>> date = datetime.datetime(2021, 4, 23) 
>>> print(date)
2021-04-23 00:00:00

Como parâmetros, é possível utilizar datetime.datetime(ano, mes, dia, hora, minuto, segundo, microsegundo, e info).
","
            0
        ",,,"['\npython', 'django', 'datetime', 'django-queryset\n']"
506230,Como definir Loss Function customizada?,"
Olá, estou tentando fazer uma Loss Function personalizada através da API Functional do Keras e estou tendo problemas com essa implementação, visto que nunca fiz algo do tipo.
Quero fazer uma Loss Function que além de receber os dados de y_true e y_pred, ele receba também uma terceira variável (y_teorico) que seria calculada através dos próprios dados de entrada. À seguir, como eu gostaria de fazer a loss:
Loss = MSE (y_true, y_pred) + MSE (y_pred, y_teorico)

À seguir o meu dataset, onde as 14 primeiras linhas são a entrada da rede e a saída é a última coluna 'M', que é uma medição direta.

Essa terceira variável(y_teorico) que quero introduzir na Loss Function é calculada através de uma fórmula com os dados de entrada:
y_teorico = (np.sqrt(
                     2*(CONSTANTE**2) + 
                     2*((E1*E2)) -
                     2*((px1*px2) + (py1*py2) + (pz1*pz2))
                     ))

Não sei como fazer isso dentro da minha loss, estava lendo que poderia ser feito através de um train step customizado como no link à seguir, mas mesmo assim estou tendo dificuldades para tal.
https://keras.io/guides/customizing_what_happens_in_fit/#a-first-simple-example
À Seguir como estou tentando fazer:
Definindo treino e teste:
x_train = data.drop(columns=['M'])
X_train = x.apply(lambda x: (x - np.mean(x)) / (np.max(x) - np.min(x)))

y_train = data.M

Criando o modelo
class CustomModel(keras.Model):
def train_step(self, data):
    X_train, y_train = data
   
    with tf.GradientTape() as tape:
        y_pred = self(x, training=True)

        elec_mass = 0.5109989461
        y_teoric = (np.sqrt(
                      2*(elec_mass**2) + 
                      2*((self.E1*self.E2)) -
                      2*((self.px1*self.px2) + (self.py1*self.py2) + (self.pz1*self.pz2))
                      ))
                        
        # Compute the loss value
        # (the loss function is configured in `compile()`)

        GAMMA = 1
        L_data = self.compiled_loss(y, y_pred, y_teoric, regularization_losses=self.losses)
        L_phy = GAMMA * self.compiled_loss(y_pred, y_teoric)
        custom_loss = L_data + L_phy
        loss = custom_loss

    # Compute gradients
    trainable_vars = self.trainable_variables
    gradients = tape.gradient(loss, trainable_vars)
    
    # Update weights
    self.optimizer.apply_gradients(zip(gradients, trainable_vars))
    
    # Update metrics (includes the metric that tracks the loss)
    self.compiled_metrics.update_state(y, y_pred)
    
    # Return a dict mapping metric names to current value
    return {m.name: m.result() for m in self.metrics}

#Layers
#Model Layers
input = keras.Input(shape=(14,))
hidden1 = keras.layers.Dense(14, activation='relu')(input)
hidden2 = keras.layers.Dense(7, activation='relu')(hidden1)
output = keras.layers.Dense(1, activation= relu_advanced)(hidden2)

model = CustomModel(inputs=input, outputs=output)

#Finalmente o FIT()
model.compile(optimizer=""adam"", loss=""mse"", metrics=[""mse""])
early_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=5)

history = model.fit(X_train, y_train, 
                    epochs           = 100,
                    batch_size       = 100,
                    verbose          = 2,
                    validation_split = 0.2,
                    callbacks=[early_stop]
                    )

",,,,,"['\npython', 'algoritmo', 'classes', 'tensorflow', 'keras\n']"
506228,Como juntar três ou mais arquivos CSVs com algo do tipo PROCV e concatenando certas colunas [fechada],"






Fechada. Essa pergunta necessita detalhes ou ser mais clara e não está aceitando respostas atualmente.
                        
                    










Quer melhorar essa pergunta? Adicione detalhes e deixe mais claro que problema está sendo resolvido ao editar esse post.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



Arquivo1.csv
Codigo  Nome    Catego  Geral                   Model   Ano
A1      JOGO    LAMA    FZ25-A|YS250|FA250AB    44CF    2017
A2      EMBLE   LAMA    FZ25-A|YS250|FA250AB    44CF    2017
A3      TUBO    ADMI    FZ25-A|YS250|FA250AB    44CF    2017
A4      PRESI   ADMI    FZ25-A|YS250|FA250AB    44CF    2017
A5      PARA    ADMI    FZ25-A|YS250|FA250AB    44CF    2017
A6      AR      ADMI    FZ25-A|YS250|FA250AB    44CF    2017
A7      PRESI   ADMI    FZ25-A|YS250|FA250AB    44CF    2017
A8      CILI    CABE    FZ25-A|YS250|FA250AB    44CF    2017

Arquivo2.csv
Codigo  Nome    Catego  Geral                   Model   Ano
A1      JOGO    LAMA    FZ25-A|YS250|FA250AB    BC51    2018
A2      EMBLE   LAMA    FZ25-A|YS250|FA250AB    BC51    2018
B1      CHAVE   LAMA    FZ25-A|YS250|FA250AB    BC51    2018
B2      CHAVE   LAMA    FZ25-A|YS250|FA250AB    BC51    2018
B3      MANU    LAMA    FZ25-A|YS250|FA250AB    BC51    2018
B4      AMOR    LAMA    FZ25-A|YS250|FA250AB    BC51    2018
B5      GUIA    CABE    FZ25-A|YS250|FA250AB    BC51    2018

Arquivo3.csv
Codigo  Nome    Catego  Geral                   Model   Ano
A8      CILI    CABE    FZ25-A|YS250|FA250AB    BC54    2021
B5      GUIA    CABE    FZ25-A|YS250|FA250AB    BC54    2021
C1      ANEL    CABE    FZ25-A|YS250|FA250AB    BC54    2021
C2      PARA    CABE    FZ25-A|YS250|FA250AB    BC54    2021
A6      AR      ADMI    FZ25-A|YS250|FA250AB    BC54    2021
A7      PRESI   ADMI    FZ25-A|YS250|FA250AB    BC54    2021
A3      TUBO    ADMI    FZ25-A|YS250|FA250AB    BC54    2021
B2      CHAV    LAMA    FZ25-A|YS250|FA250AB    BC54    2021

Fiz algo assim:
import tabula 
import tabulate
import pandas as pd
import numpy as np
import csv
import csvs
import ssl
from tabula import read_pdf
from pandas import read_csv
from pandas import Series, DataFrame
primeiro = pd.read_csv('/content/Arquivo1.csv')
segundo = pd.read_csv('/content/Arquivo2.csv')
terceiro = pd.read_csv('/content/Arquivo3.csv')
df = pd.merge(primeiro, segundo, on='Codigo', how='outer') # Aqui faço algo do tipo PROCV
df ['Model'] = df ['Model_x']. map(str) + ' | ' + df ['Model_y']. map(str) # Aqui concateno coluna Model
df ['Ano'] = df ['Ano_x']. map(str) + ' | ' + df ['Ano_y']. map(str) # Aqui concateno coluna Ano
df.drop('Model_x', axis=1, inplace=True) # Deleto o que sobrou
df.drop('Ano_x', axis=1, inplace=True)
df.drop('Model_y', axis=1, inplace=True)
df.drop('Ano_y', axis=1, inplace=True)
df.to_csv (r'/content/Junta.csv', index = False, header = True, encoding='cp1252', na_rep = 'NaN') # Salvo
somados = pd.read_csv('/content/Junta.csv') # Leio trocando para somados
df = pd.merge(somados, terceiro, on='Codigo', how='outer') # Repito tudo de novo
df ['Model'] = df ['Model_x']. map(str) + ' | ' + df ['Model_y']. map(str)
df ['Ano'] = df ['Ano_x']. map(str) + ' | ' + df ['Ano_y']. map(str)
df.drop('Model_x', axis=1, inplace=True)
df.drop('Ano_x', axis=1, inplace=True)
df.drop('Model_y', axis=1, inplace=True)
df.drop('Ano_y', axis=1, inplace=True)
df.to_csv (r'/content/Junta3.csv', index = False, header = True, encoding='cp1252', na_rep = 'NaN')
df


Se você fizer isso vai obter o seguinte resultado:

Mas o resultado correto é deslocar as quadros vermelhos da imagem e depois apagar tudo que ficou no amarelo, veja no detalhe na imagem abaixo:

Mas o resultado correto é o mostrado abaixo.
Então como faço para obter este resultado abaixo:
Arquivo Junta3.csv
Codigo  Nome    Catego  Geral                   Model       Ano
A1      JOGO    LAMA    FZ25-A|YS250|FA250AB    44CF|BC51   2017|2018
A2      EMBLE   LAMA    FZ25-A|YS250|FA250AB    44CF|BC51   2017|2018
A3      TUBO    ADMI    FZ25-A|YS250|FA250AB    44CF|BC54   2017|2021
A4      PRESI   ADMI    FZ25-A|YS250|FA250AB    44CF        2017
A5      PARA    ADMI    FZ25-A|YS250|FA250AB    44CF        2017
A6      AR      ADMI    FZ25-A|YS250|FA250AB    44CF|BC54   2017|2021
A7      PRESI   ADMI    FZ25-A|YS250|FA250AB    44CF|BC54   2017|2021
A8      CILI    CABE    FZ25-A|YS250|FA250AB    44CF|BC54   2017|2021
B1      CHAVE   LAMA    FZ25-A|YS250|FA250AB    BC51        2018
B2      CHAVE   LAMA    FZ25-A|YS250|FA250AB    BC51|BC54    2018|2021
B3      MANU    LAMA    FZ25-A|YS250|FA250AB    BC51        2018
B4      AMOR    LAMA    FZ25-A|YS250|FA250AB    BC51        2018
B5      GUIA    CABE    FZ25-A|YS250|FA250AB    BC51|BC54   2018|2021
C1      ANEL    CABE    FZ25-A|YS250|FA250AB    BC54        2021
C2      PARA    CABE    FZ25-A|YS250|FA250AB    BC54        2021

Por favor, o desafio é grande, em Excel já fiz e deu certo, então quer dizer que usando Python com Pandas também é possível, quem puder ajudar agradeço
","
Minha proposta de solução envolve o uso das funções concat, groupby, map e drop_duplicates. 
Primeiro faça a união de todos os seus arquivos com concat, com o groupby por Codigo concatene as strings das colunas Ano e Model, com o map recrie as colunas Ano e Model com todos os valores encontrados no groupby e por fim, use o drop_duplicates para excluir ocorrências duplicadas.
df = pd.concat([df1,df2,df3], ignore_index = True)
df['Ano'] = df[""Ano""].astype('str')

d = df.groupby('Codigo').agg(
                              Ano = ('Ano', lambda x: '|'.join(x)),
                              Model = ('Model', lambda x: '|'.join(x))
                            )
df['Ano'] = df['Codigo'].map(d['Ano'])
df['Model'] = df['Codigo'].map(d['Model'])
df = df.drop_duplicates()

#resultado
df.head()
       Codigo   Nome   Catego  Geral                 Model      Ano
0      A1       JOGO   LAMA    FZ25-A|YS250|FA250AB  44CF|BC51  2017|2018
1      A2       EMBLE  LAMA    FZ25-A|YS250|FA250AB  44CF|BC51  2017|2018
2      A3       TUBO   ADMI    FZ25-A|YS250|FA250AB  44CF|BC54  2017|2021
3      A4       PRESI  ADMI    FZ25-A|YS250|FA250AB  44CF       2017
4      A5       PARA   ADMI    FZ25-A|YS250|FA250AB  44CF       2017

","
            0
        ",,,"['\npython', 'pandas\n']"
506218,Meu código está retornando só metade do que deveria,"
Estou fazendo uns exercícios simples em Python e esse código deveria retornar uma lista organizada pelo tamanho do nome das frutas, com a fruta com o nome mais curto em primeiro (no caso, 'uva').
lista = ['maça', 'canela', 'morango', 'uva', 'pera', 'laranja', 'banana', 'tomate', 'toranja', 'amora']
retorno = []
nome = ""a""*15

while len(retorno) < len(lista):
    for nome_atual in lista:
        if len(nome_atual) < len(nome):
            nome = nome_atual
    else:
        retorno.append(nome)
        lista.remove(nome)
        nome = ""a""*15

print(retorno)

De 10 itens, a lista de retorno só tem metade.
['uva', 'maça', 'pera', 'amora', 'canela']

Por que isso está acontecendo?
","
O problema está na condição while len(retorno) < len(lista).
Basicamente, você remove um elemento da lista original quando este é inserido no resultado. Então quando a lista retorno tiver 5 elementos, a lista original também terá 5 elementos restantes, e como os tamanhos delas agora são iguais, a condição do while não é mais satisfeita, encerrando o loop.
Então o que você deveria fazer é iterar enquanto tiver elementos na lista original, ou seja, while len(lista) > 0.

Mas na verdade tudo isso é bem ineficiente, pois você percorre a lista várias vezes sem necessidade. Se quer ordenar os elementos pelo tamanho, bastaria fazer:
retorno = sorted(lista, key=len)

Pois isso já retorna a lista ordenada da maneira que você quer: o parâmetro key indica o critério a ser usado, que no caso é a função len.

Vale lembrar também que sorted retorna outra lista, mantendo a original intacta.
Mas se quiser ordenar a própria lista, sem criar uma nova, basta usar o método sort:
lista.sort(key=len)
print(lista)

","
            3
        ","
Uma das forma que você pode utilizar para resolver esta questão é utilizando um dos algoritmos de ordenação. Nesta questão vou dar dois exemplos utilizando o algoritmo de ordenação bubble sort.
O primeiro algoritmo utilizará o laço de repetição for, que podemos implementar da seguinte forma:
lista = ['maça', 'canela', 'morango', 'uva', 'pera', 'laranja', 'banana', 'tomate', 'toranja', 'amora']

n = len(lista)
for i in range(n - 1, 0, -1):
    for j in range(i):
        if len(lista[j]) > len(lista[j + 1]):
            lista[j], lista[j + 1] = lista[j + 1], lista[j]

print(lista)

E o segundo algoritmo utilizará o laço de repetição while, que podemos implementar da seguinte forma:
lista = ['maça', 'canela', 'morango', 'uva', 'pera', 'laranja', 'banana', 'tomate', 'toranja', 'amora']

n = len(lista)
while n > 0:
    i = 0
    while i < n - 1:
        if len(lista[i]) > len(lista[i + 1]):
            lista[i], lista[i + 1] = lista[i + 1], lista[i]
        i += 1
    n -= 1

print(lista)

Observe que ambos os códigos ordena as palavras em ordem crescente de tamanho, ou seja, da palavra de menor tamanho para a de maior tamanho. Observe também que não foi preciso criar uma outra lista. Pois, o que cada um desses algoritmos faz é simplesmente ordenar os elementos da lista.
Executando um dos dois códigos você obterá o seguinte resultado:
['uva', 'maça', 'pera', 'amora', 'canela', 'banana', 'tomate', 'morango', 'laranja', 'toranja']


Agora, por acaso, em um futuro próximo, desejes ordenar as palavras de mesmo tamanho em ordem alfabética, podes utilizar os respectivos códigos.
lista = ['maça', 'canela', 'morango', 'uva', 'pera', 'laranja', 'banana', 'tomate', 'toranja', 'amora']

n = len(lista)
for i in range(n - 1, 0, -1):
    for j in range(i):
        if len(lista[j]) > len(lista[j + 1]) or \
                (len(lista[j]) == len(lista[j + 1]) and lista[j] > lista[j + 1]):
            lista[j], lista[j + 1] = lista[j + 1], lista[j]

print(lista)

ou...
lista = ['maça', 'canela', 'morango', 'uva', 'pera', 'laranja', 'banana', 'tomate', 'toranja', 'amora']

n = len(lista)
while n > 0:
    i = 0
    while i < n - 1:
        if len(lista[i]) > len(lista[i + 1]) or \
                (len(lista[i]) == len(lista[i + 1]) and lista[i] > lista[i + 1]):
            lista[i], lista[i + 1] = lista[i + 1], lista[i]
        i += 1
    n -= 1

print(lista)

Observe que estes dois últimos códigos possuem uma condição para ordenar alfabeticamente as palavras, que porventura, possuam o mesmo tamanho.
A referida condição se encontra na seguinte linha de código:
(len(lista[j]) == len(lista[j + 1]) and lista[j] > lista[j + 1])

","
            2
        ","['\npython', 'lista\n']"
506204,Como eu posso utilizar python com c++?,"
Eu descobri que posso utilizar duas linguagens de programação no mesmo programa, porém não sei exatamente fazer isto... Eu queria apenas uma ideia num exemplo bem simples para fazer funcionar o código abaixo e eu aprender.
Eu tenho um programa em python que possui um input do tipo inteiro (int), o usuário digita qualquer valor nele abaixo de 300:
num = int(input(""Digite o número: ""))

Após isto eu queria de alguma forma passar o valor de num para um código em C++ que apenas executa um laço for com o valor dado em num:
//nota-se que o valor de 'a' seria o valor atribuído na variável 'num' no arquivo .py 
for(a=num; a<300; a++){
   cout << a << endl;
}

Eu tinha primeiramente pensado em colocar por exemplo um #include, mas não sei se fazer tal coisa resultaria algum erro.
","
Você tem de definir se quer a) chamar código C++ a partir do Python e/ou b) chamar código Python a partir de C++.
No caso (a) você deve pesquisar sobre como estender o Python e desenvolver módulos Python em C/C++. O começo é a documentação da linguagem, até para entender os desafios envolvidos: https://docs.python.org/3/extending/extending.html
Há outras opções que devem ser consideradas, por serem mais práticas: Boost.Python, Cython, SWIG, FFI, etc. A melhor ferramenta vai depender do seu caso particular.
No caso (b) o que você deseja é fazer um ""embedding"" da máquina Python dentro de um programa C/C++. Documentação básica: https://docs.python.org/3/extending/embedding.html
Python não é considerada a linguagem mais fácil de ""embebedar""; Lua ganha o troféu neste ponto.
","
            0
        ",,,"['\npython', 'c++\n']"
506091,Obter somente os trechos entre colchetes,"
Em um software de terceiros, um registro de log é gerado com informações separadas através de palavras que vem dentro de um colchetes.
Exemplo: [informação1] [informação2] [informação3]
O problema é que a biblioteca re do Python não aceita que eu faça o split dessas informações separando com base nos colchetes, exemplo:
Caso eu queria pegar tudo que tem dentro dos colchetes, ele irá me apresentar um erro porque não pode fazer os cortes e separação usando caracteres especiais como colchetes, asteriscos, e operadores matemáticos.
Nesse caso não há como mudar no software para as informações não serem entregues através dos parênteses.
Alguém tem alguma ideia de como contornar este problema?
 import re
    
    padrao = ''
    texto = r""[1232131] testando [teste2] [teste3] e [teste4]""
    
    #divide o texto numa lista de acordo com o padrão
    saida = re.split(padrao, texto)
    i = 1
    for pedaco in saida:
        print(""Split {0}: {1}"".format(i, pedaco))
        i+=1

","

não pode fazer os cortes e separação usando caracteres especiais como colchetes, asteriscos, e operadores matemáticos

É claro que pode. Mas em vez de fazer um split, acho mais fácil pegar somente os trechos que você quer (no caso, tudo que está entre colchetes):
import re
    
texto = r""[1232131] testando [teste2] [teste3] e [teste4]""

for i, pedaco in enumerate(re.findall(r'\[([^]]+)\]', texto), start=1):
    print(f""Split {i}: {pedaco}"")

A expressão usada foi \[([^]]+)\]. Explicando por partes:

Ela começa com \[ e termina com \], ou seja, ela pega todo trecho que começa com um [ e termina com um ]. Só que colchetes têm significado especial em regex, por isso eu preciso fazer o escape com \ para que eles sejam considerados caracteres comuns
Entre os colchetes temos [^]], que é uma classe de caracteres negada, que pega qualquer caractere que não seja ]. Depois temos o quantificador +, que indica ""uma ou mais ocorrências""

Ou seja, a regex pega um [, seguido de um ou mais caracteres que não são ], seguido de um ]. Além disso, o trecho que corresponde aos caracteres que não são ] está entre parênteses, o que forma um grupo de captura. E quando há grupos de captura na regex, findall retorna somente os grupos.
Também uso enumerate para já termos os índices juntamente com os valores retornados por findall, assim você não precisa ficar incrementando i (e usei f-string para formatar a saída, disponível a partir do Python 3.6 - mas também pode continuar usando format se quiser). A saída será:
Split 1: 1232131
Split 2: teste2
Split 3: teste3
Split 4: teste4


Também dá para fazer com split, mas aí você teria que separar não só por colchetes, mas também por todo o texto entre cada par de colchetes, o que na minha opinião ficaria bem mais complicado, então achei mais simples você definir o que quer pegar em vez de dizer como quer separar.
Afinal, split e match são dois lados da mesma moeda: no primeiro você diz o que não quer (texto que não está entre colchetes) e separa os dados segundo este critério, no segundo você diz o que quer (texto entre colchetes) e obtém somente isso. E há situações em que definir um é mais fácil do que o outro - neste caso, split me parece ser mais difícil, veja:
r = re.compile(r'\][^\[]+\[|[\[\]]')
for i, pedaco in enumerate(filter(lambda s : len(s) > 0, r.split(texto)), start=1):
    print(f""Split {i}: {pedaco}"")

A ideia é fazer o split por um ] seguido de vários caracteres que não são [, seguido de um [, ou por um colchetes (seja de abertura ou fechamento) sozinho. Só que isso faz com que o resultado tenha strings vazias (quando o separador está no início ou fim da string - conforme explicado na documentação), então preciso filtrar esses valores do resultado usando filter.

Se quiser ser mais específico, pode trocar para algo como re.findall(r'\[([\w]+)\]', texto) - no caso, \w é um atalho para ""letras, dígitos ou o caractere _"".
Isso é um pouco mais restrito, já que [^]] pega qualquer caractere que não seja ] (qualquer um mesmo, incluindo sinais de pontuação, espaços, emojis, quebras de linha, etc). Se quiser ser mais restrito, basta ajustar a regex de acordo (não tem jeito, uma regex mais simples pode acabar pegando coisas a mais, mas uma mais restritiva pode acabar ficando mais complicada - cabe a você escolher o que faz mais sentido de acordo com os dados que você tem).

Sem regex
Outra alternativa é não usar regex, e em vez disso, usar o método find para procurar pelos colchetes, e em seguida obter a substring entre as posições destes:
def texto_entre_colchetes(texto):
    inicio = 0
    while True:
        inicio = texto.find('[', inicio)
        if inicio == -1:
            break
        fim = texto.find(']', inicio + 1)
        if fim == -1:
            break
        yield texto[inicio + 1: fim]
        inicio = fim + 1

texto = r""[1232131] testando [teste2] [teste3] e [teste4]""

for i, pedaco in enumerate(texto_entre_colchetes(texto), start=1):
    print(f""Split {i}: {pedaco}"")

Eu uso o segundo parâmetro de find, que é a posição na qual a busca começa, assim eu posso buscar a partir do último colchete encontrado. Quando não tiver mais, find retorna -1 e eu posso encerrar o loop.
Sobre o uso do yield acima, leia aqui para entender melhor.
","
            3
        ",,,"['\npython', 'python-3.x', 'regex\n']"
506017,Nome 'driver' não está definido,"
Estou fazendo esse bot para acessar o instagram, mas está apresentando um erro que não consigo identificar. Sou um iniciante e estou com problemas para encontrar o erro. Se alguém puder me ajudar, agradeço!!
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import random

class InstagramBot:
    def __init__(self, username, password):
        self.username = username
        self.password = password
        self.driver = webdriver.Firefox(executable_path=r""C:\Users\bruno\Desktop\geckodriver-v0.29.1-win64\geckodriver.exe"")
           
    def login(self):
        driver = self.driver
        driver.get(""https://www.instagram.com/accounts/login/?hl=pt-br"")
   
    campo_usuario = driver.find_element_by_xpath(""//input[@name='username']"")
    campo_usuario.click()
    campo_usuario.clear()
    campo_usuario.send_keys(self.username)
    campo_senha = driver.find_element_by_xpath(""//input[@name='password']"")
    campo_senha.click()
    campo_senha.clear()
    campo_senha.send_keys(self.password)
    campo_senha.send_keys(Keys.RETURN)
 
   
brunoBot = InstagramBot(""user"",""senha1234"")  
brunoBot.login()

Erro:
File ""c:\Users\bruno\Desktop\geckodriver-v0.29.1-win64\igBot.py"", line 16, in InstagramBot
campo_usuario = driver.find_element_by_xpath(""//input[@name='username']"")
NameError: name 'driver' is not defined
PS C:\Users\bruno\Desktop\geckodriver-v0.29.1-win64>```

Obrigado! :) 

","
Alguns pontos precisam ser corrigidos no teu código para que funcione corretamente, vamos lá?
login(self):
    driver = self.driver
    driver.get(""https://www.instagram.com/accounts/login/?hl=pt-br"")

campo_usuario = driver.find_element_by_xpath(""//input[@name='username']"")
campo_usuario.click()
campo_usuario.clear()
campo_usuario.send_keys(self.username)
campo_senha = driver.find_element_by_xpath(""//input[@name='password']"")
campo_senha.click()
campo_senha.clear()
campo_senha.send_keys(self.password)
campo_senha.send_keys(Keys.RETURN)

Na função login, primeiramente você deve identar corretamente seu código para que fique dentro da função. A identação é algo fundamental na linguagem python para delimitação dos blocos de código, o mau uso pode acarretar no mal funcionamento do seu sistema. Então ficaria da seguinte forma:
def login(self):
    driver = self.driver
    driver.get(""https://www.instagram.com/accounts/login/?hl=pt-br"")
    campo_usuario = driver.find_element_by_xpath(""//input[@name='username']"")
    campo_usuario.click()
    campo_usuario.clear()
    campo_usuario.send_keys(self.username)
    campo_senha = driver.find_element_by_xpath(""//input[@name='password']"")
    campo_senha.click()
    campo_senha.clear()
    campo_senha.send_keys(self.password)
    campo_senha.send_keys(Keys.RETURN)

Uma dica.. ainda na função ""login"" você não precisaria criar a variável ""driver"" com o valor ""self.driver"", pois logo acima no construtor ""__ init__"" você já o criou como ""self.driver"". O que isso quer dizer? O ""self"" serve para que você referencie o próprio objeto(instância) tanto quando você for fazer uso de metódos como quando for utilizar atributos pertencentes e este objeto. Então desta forma você pode acessar o seu ""self.driver"" em qualquer lugar dentro da tua classe e a estrutura ficaria assim:
def login(self):
    self.driver.get(""https://www.instagram.com/accounts/login/?hl=pt-br"")
    campo_usuario = self.driver.find_element_by_xpath(""//input[@name='username']"")
    campo_usuario.click()
    campo_usuario.clear()
    campo_usuario.send_keys(self.username)
    campo_senha = self.driver.find_element_by_xpath(""//input[@name='password']"")
    campo_senha.click()
    campo_senha.clear()
    campo_senha.send_keys(self.password)
    campo_senha.send_keys(Keys.RETURN)

","
            1
        ",,,['\npython\n']
506001,Como exportar log das exceções do sqlite e python utilizando Import Error,"
Estou utilizando Python e dando import da biblioteca sqlite3 e do sqlite3 dando import no Error para tratamento de exceção!
import sqlite3
from sqlite3 import Error

def errorlog(erro):
    errlog = open(""err_log.txt"", 'a')
    errlog.write(erro)
    errlog.close()


def conexaoBanco():
    con = None
    try:
        con = sqlite3.connect('banco.db')
    except Error as er:
        errorlog(er)
    return con

Porem a variavel er não contem uma string!
gerando este erro:
TypeError: write() argument must be str, not OperationalError

",,,,,"['\npython', 'exceção', 'sqlite3', 'log\n']"
505998,"Quando abro o programa em Python diretamente no CMD, ele simplesmente fecha","
Quando tento abrir este programa diretamente no CMD, sem abrir em CD caminho -> python arquivo.py, ele chega a abrir, mas ao dar enter, ele simplesmente fecha... Já gerei um executável também, através do cxFreeze, mas ao abrir e clicar o enter, ele fecha... Alguém pode me ajudar?
import random
import numpy


nome = input(""Insira seu nome: "")
nome_do_jogo = input(""Digite o nome do jogo: "")
prim_num = input(""Digite o primeiro numero que pode ser jogado: "")
ult_num = input(""Digite o ultimo numero que pode ser jogado: "")
qtd_numeros = input(""Digite a quantidade de numeros a serem gerados: "")
mega_sena = numpy.random.randint(int(prim_num), int(ult_num), (1, int(qtd_numeros)))
mega_sena.sort()


print(nome + "", na "" + nome_do_jogo + "", você pode jogar os números: "" + str(mega_sena))

","
a questão é que o programa abre o cmd junto com ele. Quando ele se encerra, o programa acaba, e o terminal onde ele estava rodando acaba junto.
A forma de resolver isso é incluir um input() em branco no final do programa. Ou pode ser input(""Pressione <enter> para encerrar!"") - o input suspende o programa até o usuário apertar enter, mesmo que não digite mais nada, e isso evita que o terminal feche.
Se o seu programa der algum erro antes de chegar nesse input final, pode ser que ele feche ""instantaneamente"" ainda - aí o melhor a fazer é abrir um cmd, mudar até a pasta do programa com o comando ""cd"" e executar o programa com ""python .py"" - aí, quando der erro, você vai ter a mensagem completa, que aponta a linha exata onde aconteceu o erro.
Você vai encontrar outras respostas, possivelmente nessa mesma pergunta, sugerindo o uso de os.system('pause') - isso funciona, mas pessoalmente eu considero bastante deselegante: a chamada os.system executa um outro programa além do seu, só pra esperar que uma tecla seja pressionada. Simplesmente chamar input resolve perfeitamente o problema.
","
            0
        ",,,['\npython\n']
505972,Python Django herança com atributo unique,"
estou com um pequeno problema.
class Pessoa(models.Model): 
cpf = BRCPFField(**unique=true**)

class Aluno(Pessoa):
 novo_atributo = ....

class Instrutor(Aluno):
 outro_atributo = ...

class Gestor(Pessoa):
class Meta: 
   proxy = True

Uma pessoa pode ser um aluno, um gestor e um aluno pode se tornar um instrutor, futuramente.
Quando eu cadastro um aluno com um CPF X, 100%. Mas quando eu tento registrar esse mesmo aluno(pessoa) com o CPF X como gestor, acusa erro pois o CPF está como unique. Como posso resolver isso?
Já tentei deixar a classe Pessoa como abstrata, porém o eu quero é deixar a tabela pessoa única, para evitar duplicidade. Pois uma mesma pessoa pode ser gestor, aluno e instrutor. Pensei na herança, pois ajuda bastante em relação ao banco.
Forms:
class PessoaForm(forms.ModelForm):
    class Meta:
    model = Pessoa
    fields = '__all__'


class GestorForm(PessoaForm):
   class Meta:
        model = Gestor
        fields = '__all__'


class AlunoForm(PessoaForm):
   class Meta:
        model = Aluno
        fields = '__all__'

Views:
class AlunoCreate(LoginRequiredMixin, CreateView):
    model = Aluno
    form_class = AlunoForm
    login_url = reverse_lazy('usuarios:login')


class GestorCreate(LoginRequiredMixin, CreateView):
    model = Gestor
    login_url = reverse_lazy('usuarios:login')
    form_class = GestorForm

Template Aluno_form:
<form class=""row gx-3 gy-2 align-items-center needs-validation"" method=""post"" action=""""
      role=""form"" enctype=""multipart/form-data"">
    {% csrf_token %}
    {{ form.media }}
    <div class=""row g-3"">
        <div class=""col-md-3"">
            <div class=""form-floating"">
                {{ form.cpf }}
                <label for=""id_cpf"">CPF</label>
            </div>
        </div>
        <div class=""col-md-6"">
            <div class=""form-floating"">
                {{ form.nome }}
                <label for=""id_nome"">Nome</label>
            </div>
        </div>            
    </div>           
    <div class=""col-auto"">
        <button type=""submit"" class=""btn btn-primary mb-2"">Enviar</button>
    </div>
</form>

Template Gestor_form:
<form class=""row gx-3 gy-2 align-items-center needs-validation"" method=""post"" action=""""
      role=""form"" enctype=""multipart/form-data"">
    {% csrf_token %}
    {{ form.media }}
    <div class=""row g-3"">
        <div class=""col-md-3"">
            <div class=""form-floating"">
                {{ form.cpf }}
                <label for=""id_cpf"">CPF</label>
            </div>
        </div>
        <div class=""col-md-6"">
            <div class=""form-floating"">
                {{ form.nome }}
                <label for=""id_nome"">Nome</label>
            </div>
        </div>
       <div class=""col-md-6"">
            <div class=""form-floating"">
                {{ form.funcao }}
                <label for=""id_nome"">Função</label>
            </div>
        </div>            
    </div>           
    <div class=""col-auto"">
        <button type=""submit"" class=""btn btn-primary mb-2"">Enviar</button>
    </div>
</form>

","
Faça de um modo que ao adicionar um aluno(pessoa) com o CPF X como gestor, esse cpf que está em aluno seja apagado antes de inserir em gestor. Ou então deixe esse CPF como chave estrangeira, pra ser chamado nos outros cargos.
EX:
class Pessoa(models.Model):
    nome = charfield....
    cpf_pessoa = models.charfield(max_length=11,unique=True)

class Aluno(models.Model):
    aluno = models.ForeignKey('Pessoa', on_delete=models.CASCADE)

class Gestor(models.Model):
    gestor = models.ForeignKey('Pessoa', on_delete=models.CASCADE)

Assim, quando voce atribuir qualquer pessoa a gestor, ele ja vai herdar o CPF...
","
            0
        ",,,"['\npython', 'django', 'herança', 'polimorfismo\n']"
505946,Extrair informação específica de uma célula de excel usando pandas no Python,"
Preciso extrair uma informação de uma célula em excel usando pandas e pyautogui. A célula tem uma data contida e preciso tirar os números sem as barras ""/"". Exemplo: 25/12/2000.
O que faço no momento é olhar o que o usuário digitou na célula data de nascimento e separo manualmente na planilha os números 25, 12 e 2000 em outras 3 células (dia mes ano)e utilizo o pandas pra acessar essas 3 células e consigo o efeito desejado, como acesso direto com pandas a celula data de nascimento?
Hoje eu ajusto manualmente e separo a data em 3 células e busco a informação nessas celulas
Minha Planilha:
          A           B                  C                 D     E     F #transformo a celula C em D, E e F
1        nome     sobrenome      data de nascimento       dia   mes   ano
2        Joao       Mendes          25/12/2000            25    12    2000

Quero uma função que busque a informação de dia, mês e ano da Célula data de nascimento e me traga essa informação 1 de cada vez e não todas de uma vez.
import pyautogui import pandas as pd

formulario = pd.read_excel(r'C:\formulario.xlsx', sheet_name='Planilha1')
## Uma amostra de dados para teste...
#formulario = pd.DataFrame({
#  'nome':['João'], 
#  'sobrenome':['Mendes'] , 
#  'data de nascimento': ['25/12/2000']
#})

for i in range(1):
        pyautogui.write(str(formulario['dia'] [0]))
        pyautogui.write(str(formulario['mes'] [0]))
        pyautogui.write(str(formulario['ano'] [0]))

Resolvido:
import pandas as pd
df = pd.DataFrame({'data de nascimento': ['25/12/2000']})

data = df['data de nascimento'] [0]
dia = data[:2]
mes = data[3:5]
ano = data[6:]

print(dia)
print(mes)
print(ano)

","
Para a partir de uma coluna contendo datas de nascimento em string no formato dd/mm/yyyy para a separar em colunas contendo dia, mês e ano dessa data:

Usando um DataFrame de similar estrutura ao da pergunta....

import pandas as pd    
df = pd.DataFrame({
  'nome':['João', 'Maria', 'Daniel'], 
  'sobrenome':['Mendes','Tavares', 'Cunha'] , 
  'data de nascimento': ['25/12/2000', '21/03/1999', '22/10/1981']
})


Como os dados na coluna data de nascimento estão em formato string crie uma coluna temporária data onde receberá a conversão dos dados na coluna data de nascimento usando o método pandas.to_datetime()

df['data'] = pd.to_datetime(df['data de nascimento'], format='%d/%m/%Y')


Crie as colunas dia, mês e ano em outro DataFrame com auxilio das propriedades Series.dt.day, Series.dt.month e Series.dt.year e junte ao DataFrame original usando o método DataFrame.join().

df = df.join(pd.DataFrame({
  'dia': df['data'].dt.day, 
  'mês': df['data'].dt.month, 
  'ano': df['data'].dt.year
}));


Remova a coluna temporária data como o método DataFrame.drop()

df = df.drop(columns=['data'])


Cujo o resultado:

print(df)

     nome sobrenome data de nascimento  dia  mês   ano
0    João    Mendes         25/12/2000   25   12  2000
1   Maria   Tavares         21/03/1999   21    3  1999
2  Daniel     Cunha         22/10/1981   22   10  1981

EDIT:
Parece que o usuário tem dificuldades em ler os dados das colunas de um DataFrame. Existem várias possibilidades uma delas é DataFrame.iterrows que faz a iteração nas linhas de DataFrame como pares (índice, linha).
for i, row in df.iterrows():
  print(f'Registro: {i + 1}')
  print(f'Nome: {row[""nome""]}')
  print(f'Sobrenome: {row[""sobrenome""]}')
  print(f'Dia : {row[""dia""]}')
  print(f'Mês : {row[""mês""]}')
  print(f'Ano : {row[""ano""]}')
  print('-'*30)

Saída:
Registro: 1
Nome: João
Sobrenome: Mendes
Dia : 25
Mês : 12
Ano : 2000
------------------------------
Registro: 2
Nome: Maria
Sobrenome: Tavares
Dia : 21
Mês : 3
Ano : 1999
------------------------------
Registro: 3
Nome: Daniel
Sobrenome: Cunha
Dia : 22
Mês : 10
Ano : 1981
------------------------------

Teste o exemplo no Repl.it
","
            1
        ",,,"['\npython', 'excel', 'pandas', 'pyautogui\n']"
505928,TypeError: not all arguments converted during string formatting (o que devo fazer?) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 12 meses.




                        Melhore esta pergunta
                    



Estou resolvendo uma questão simples de calculo de imposto em um salario:
sal=float(input('digite o valor:'))
if   sal>3000:
    percent=0.25
elif sal>2000:
    percent=0.20
elif sal>1000:
    percent=0.10
else         :
    percent=0.5
imposto=sal*percent
salliquido=sal-imposto
print('salário: R$%6.2f'%sal)
print('imposto: R$%6.2f'%imposto)
print('salário liquido: R$6.2f'%salliquido)

Porém quando dou run o python retorna o seguinte erro:
digite o valor:1500
salário: R$1500.00
imposto: R$150.00
Traceback (most recent call last):
TypeError: not all arguments converted during string formatting

Onde estou errando?
","
você esqueceu de colocar um % no ultimo print apos o cifrão( R$ )
o seu código esta assim:
print('salário liquido: R$6.2f'%salliquido)
e o certo seria assim:
print('salário liquido: R$%6.2f'%salliquido)
é so uma falta de atenção mesmo!
","
            -1
        ",,,['\npython\n']
505923,comp fazer que uma variavel de um banco de dados tenha o total de cadastros que um outro banco possui?,"
opa, me chamo antonio, estou iniciando em django, estou criando uma aplicação onde eu preciso que o atributo totmatérias da tabela ""Escritor"" tenha o numero de noticias escritas por aquele escritor que está guardada na outra tabela, alguma ajuda? segue o código:
from datetime import datetime
from django.utils import timezone
from django.db import models
from django.db.models.fields import CharField, DateField

class Noticias(models.Model):
    titulo = models.CharField(max_length=30, help_text='maximo: 30 caracteres')
    data = models.DateField(auto_now=False, auto_now_add=True)
    editado = models.DateField(auto_now=True, auto_now_add=False)
    escritor = models.ForeignKey('Escritor', on_delete=models.PROTECT)
    texto = models.CharField(max_length=1000)
    resumo = models.CharField(max_length=100, help_text='Um breve resumo da matéria principal, de no maximo 100 caracteres.')

    def __str__(self): return f'{self.titulo} - {self.data}'

class Escritor(models.Model):
    id = models.IntegerField(primary_key=True)
    nome = models.CharField(max_length=50, help_text='maximo 50 caracteres')
    totmatérias = ???
    nascimento = DateField(auto_now=False, auto_now_add=False)
    cidadeNatal = CharField(max_length=40, help_text='cidade onde voce nasceu')

    def __str__(self): return f'{self.id} - {self.nome}'

como visto no código, eu quero que, na classe Escritor, na variavel totmatérias contenha o total de matérias escritas pelo mesmo escritor que estão na classe matérias. Ex: se o escritor 1 registrou 5 matérias, eu quero que fique 5 no totmatérias desse escritor. Espero que tenha dado para entender, obrigado dsd já.
","
Crie esse campo como integer:
totmatérias = models.IntegerField()

Na hora de voce popular essa tabela, voce faz a logica e manda o numero que deseja...
Voce pode sobrescrever o metodo save, para que, na hora de salvar, faça essa logica desejada:
class Escritor(models.Model):
    id = models.IntegerField(primary_key=True)
    totmatérias = models.IntegerField()
    ...

    def save(self, *args, **kwargs):
        numero_total = Noticias.objects.filter(escritor=self.nome).count()
        self.totmatérias = numero_total
        return super().save(*args, **kwargs)

Esse código acima serve apenas para referencia.. Depende muito do que exatamente voce precisa. Nao deve funcionar dessa exata maneira..
Se quiser testar a logica e ir mandando possiveis erros, podemos ir ajustando.
","
            0
        ",,,"['\npython', 'python-3.x', 'django', 'aplicação-web', 'django-templates\n']"
505890,Erro de Sintaxe (Phyton) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



eu estou fazendo um trabalho aqui com python utilizando o Pandas/Matplotlib/Seaborn/Numpy e queria entender porque que deu erro de sintaxe. Estou tentando modificar 3 colunas do meu dataset se String para Date Time.
datetime_cols = ['Start Time', 'End Time', 'Modified Date']
# método para transformar strings em date_time
def to_datetime(DataFrame, columns):
    for col in columns:
        DataFrame[col] = DataFrame[col].apply(lambda _: datetime.strptime(_,""%m/%d/%Y, %H:%M:%S"")

to_datetime(df, datetime_cols)

- O erro dá na chamada do método
","
Mesmo que a sugestão nos comentários tenha funcionado, ela não é performática em dataframes grandes por causa do uso do apply(), que embora seja mais rápido que um for index, row in df.iterrows(); é mais lento que a vetorização. Veja maiores detalhes aqui
Nota: No link que passei, não olhe para a solução aceita como resposta, mas para a que recebeu 100 pontos pela qualidade da mesma.
Isso posto, segue outra solução:
Criando DataFrame de teste
>>> import pandas as pd
>>> df = pd.DataFrame({""A"": ['11/4/2021', '12/4/2021', '13/4/2021'], ""B"": [1, 2, 3], ""C"": ['1/4/2021', '2/4/2021', '3/4/2021']})

>>> df
           A  B         C
0  11/4/2021  1  1/4/2021
1  12/4/2021  2  2/4/2021
2  13/4/2021  3  3/4/2021

Verificando tipo das colunas
>>> df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3 entries, 0 to 2
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype
---  ------  --------------  -----
 0   A       3 non-null      object
 1   B       3 non-null      int64
 2   C       3 non-null      object
dtypes: int64(1), object(2)
memory usage: 200.0+ bytes

Convertendo coluna A
>>> df[""A""] = pd.to_datetime(df[""A""], format='%d/%m/%Y')
>>> df
           A  B         C
0 2021-04-11  1  1/4/2021
1 2021-04-12  2  2/4/2021
2 2021-04-13  3  3/4/2021

Verificando colunas novamente
>>> df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3 entries, 0 to 2
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype
---  ------  --------------  -----
 0   A       3 non-null      datetime64[ns]
 1   B       3 non-null      int64
 2   C       3 non-null      object
dtypes: datetime64[ns](1), int64(1), object(1)

","
            1
        ",,,"['\npython', 'string', 'datetime', 'dataframe', 'conversão\n']"
505799,Inserir aresta num grafo,"
Estou a tentar inserir uma aresta num grafo. O problema consiste em representar uma linha de metro, considerando a informação existente em ficheiros csv. Criei as classes Vertex, Edge, Station(Vertex), Edge_Line(Edge) e a GraphList.
Com este método, consigo inserir os vértices do grafo:
def create_stations(filename='lisbon.stations.csv'):
    stations = []
    with open(filename, 'r', newline='') as stations_info:
        station_info = csv.reader(stations_info, delimiter=',')
        # skip first line, which is just attribute names
        next(station_info)
        # empty list to hold stations

        # parse all the lines and create stations
        for row in station_info:
            #print(row[3],row[2])
            id = row[0]
            latitude = row[1]
            longitude = row[2]
            nome = row[3]
            # assign each attribute of Station based on line in file
            #(id, latitude, longitude, nome) = tuple(row)
            #create Station instance with those attributes
            newstation = Station(id, latitude, longitude, nome)
            #print(newstation)
            stations.append(newstation)
    return stations

map = GraphList()

def station_network():
    for station in create_stations():
        map.insert_vertex(station)
    return map

Criei este método para tentar obter as ligações:
def create_connections(filename = 'lisbon.connections.csv'):
    connections = []
    with open(filename, 'r', newline='') as conections_info:
        conection_info = csv.reader(conections_info, delimiter=',')
        next(conection_info)

        for row in conection_info:
            (origem, destino, linha) = tuple(row)
            connections.append(Edge_Line(origem, destino, linha))
    return connections

Contudo, quando tento criar as arestas, obtenho o erro:
Traceback (most recent call last):
  File ""<input>"", line 1, in <module>
  File ""C:/Users/sandr/PycharmProjects/teste6/main.py"", line 282, in station_network
    map.insert_egde(connection._origem, connection.destination)
  File ""C:/Users/sandr/PycharmProjects/teste6/main.py"", line 217, in insert_egde
    self._outgoing[u].append(edge)
KeyError: '1'

Como é que posso resolver este problema?
","
Baseado na descriçao do CSV que você passou e considerando que não sei o que será feito depois que arestas e vértices estiverem definidos, optei por uma abordagem com um menor número de classes:
from dataclasses import dataclass, field
from enum import Enum

class Line(Enum):
    AMARELA = 1
    AZUL = 2
    VERDE = 3
    VERMELHA = 4

@dataclass
class Edge:
    station: str
    lattitude: float
    longitude: float

    def __str__(self):
        return f""{self.station}""

@dataclass
class Vertex:
    source: Edge
    destination: Edge
    line: Line

    def __str__(self):
        return f""{self.source} -> {self.destination} (Linha {self.line.name})""

A primeira classe, Line, é uma enumeração e serve para deixar mais fácil a identificação das linhas e também redefini-las para os valores que estão no CSV. As classes Edge e Vertex usam Data Classes para deixar o exemplo curto (cuida de criar o __init__() para mim).
Daí criei uma classe para juntar arestas e vértices:
class Graph:
    edges = {}
    vertices = []

    def __init__(self, stations, connections):

        for station in stations:
            station_id, name, lattitude, longitude = station
            self.edges[station_id] = Edge(name, lattitude, longitude)

        for connection in connections:
            source, destination, line = connection
            self.vertices.append(
                Vertex(self.edges[source], self.edges[destination], line)
            )

Ela recebe a lista das estações (seguindo o modelo do CSV com ""id"", ""nome"", ""latitude"" e ""longitude"") e cria um dicionário onde a chave é o id da estação e  o valor uma instância da classe Edge.
Num segundo momento são adicionados os vértices (também seguindo o modelo do CSV com ""origem"", ""destino"" e ""linha""). Como a chave do dicionário é o id da estação eu crio Vertex passando as instâncias de origem, destino (como o Python trabalha por referência não há replicação) e a linha em si.
E claro, a parte importante! (reduzi a lista de estações para não ficar extenso)
stations = (
    (30, ""Marquês de Pombal"", 0.0, 0.0),
    (38, ""Parque"", 0.0, 0.0),
    (39, ""Picoas"", 0.0, 0.0),
    (41, ""Praça de Espanha"", 0.0, 0.0),
    (43, ""Rato"", 0.0, 0.0),
    (48, ""S. Sebastião"", 0.0, 0.0),
    (50, ""Saldanha"", 0.0, 0.0),
)

connections = (
    (41, 48, Line.AZUL),
    (48, 50, Line.VERMELHA),
    (48, 38, Line.AZUL),
    (38, 30, Line.AZUL),
    (30, 43, Line.AMARELA),
    (39, 30, Line.AMARELA),
)

my_graph = Graph(stations, connections)

for vertex in my_graph.vertices:
    print(vertex)

E o resultado:
Praça de Espanha -> S. Sebastião (Linha AZUL)
S. Sebastião -> Saldanha (Linha VERMELHA)
S. Sebastião -> Parque (Linha AZUL)
Parque -> Marquês de Pombal (Linha AZUL)
Marquês de Pombal -> Rato (Linha AMARELA)
Picoas -> Marquês de Pombal (Linha AMARELA)

Os métodos __str__() nas classes Edge e Vertex cuidam de formatar a saída delas para o print().
Ah sim, você pode substituir ""stations"" e ""connections"" pelos teus CSV.
","
            0
        ",,,"['\npython', 'grafo\n']"
505664,"Mesmo se acertar, a mensagem não muda!","
Eu estou tentando criar um jogo em tkinter, é coisa simples, você chuta um número e então aparece uma mensagem se o seu chute está certo ou errado. Eu já fiz isso em CLI, porém, eu fui tentar fazer uma GUI para este jogo e mesmo se você acertar o chute, ainda aparece uma mensagem de erro. Por favor, ajudem.
# Just some tkinter
import tkinter as tk
from tkinter import messagebox
from random import randint as rd

class screen:
    def __init__(self, master):
        self.master = master

        self.frame1 = tk.Frame(self.master)
        self.frame2 = tk.Frame(self.master)
        self.frame1.pack()
        self.frame2.pack(side=tk.BOTTOM)

        self.lbl = tk.Label(self.frame1, text='Test your luck!\nPick a number!')
        self.lbl.pack()

        self.txt = tk.Entry(self.frame1)
        self.txt.get()
        self.txt.pack(side=tk.BOTTOM)

        self.btn = tk.Button(self.frame1, text='Send', command=self.random)
        self.btn.pack(side=tk.BOTTOM)

        self.lbl2 = tk.Label(self.frame2, text='')

    def random(txt):
        random_num = rd(1, 10)
        if txt == random_num:
            messagebox.showinfo('Congratulations!', 'Correct number!')
        else:
            messagebox.showerror('Error', f'Wrong number.\nCorrect number = {random_num}.')



if __name__ == '__main__':
    root = tk.Tk()
    root.title('The Lucky Game!')
    screen(root)
    root.mainloop()

","
No método random é preciso passar a instancia da classe (um objeto) Screen com o self sendo que ela representa sua interface gráfica, e através do self podemos acessar a propriedade txt que é o campo e acessar o valor pelo método get() e efetuar a comparação da seguinte maneira:
def random(self):
    random_num = rd(1, 10)
    if int(self.txt.get()) == random_num:
        messagebox.showinfo(""Congratulations!"", ""Correct number!"")
    else:
        messagebox.showerror(""Error"", f""Wrong number.\nCorrect number = {random_num}."")

Vejá abaixo o comportamento que você espera da sua aplicação:

Código da aplicação:
# Just some tkinter
import tkinter as tk
from tkinter import messagebox
from random import randint as rd


class Screen:
    def __init__(self, master):
        self.master = master

        self.frame1 = tk.Frame(self.master)
        self.frame2 = tk.Frame(self.master)
        self.frame1.pack()
        self.frame2.pack(side=tk.BOTTOM)

        self.lbl = tk.Label(self.frame1, text='Test your luck!\nPick a number!')
        self.lbl.pack()

        self.txt = tk.Entry(self.frame1)
        self.txt.get()
        self.txt.pack(side=tk.BOTTOM)

        self.btn = tk.Button(self.frame1, text='Send', command=self.random)
        self.btn.pack(side=tk.BOTTOM)

        self.lbl2 = tk.Label(self.frame2, text='')

    def random(self):
        random_num = rd(1, 10)
        if int(self.txt.get()) == random_num:
            messagebox.showinfo('Congratulations!', 'Correct number!')
        else:
            messagebox.showerror('Error', f'Wrong number.\nCorrect number = {random_num}.')


if __name__ == '__main__':
    root = tk.Tk()
    root.title('The Lucky Game!')
    Screen(root)
    root.mainloop()

A resposta do usuário @Danizavtz não esta errada e aponta para o mesmo caminho que é fazer a conversão do retorno da função get() que é uma string para um tipo inteiro e efetuar a comparação.
Leia a documentação.
","
            0
        ",,,"['\npython', 'tkinter\n']"
505655,"Deu o erro ""list index out of range"" e não entendo o motivo [duplicada]","






Essa pergunta já tem uma resposta aqui:
                        
                    



Por que ocorre e como resolver um erro de ""out of bounds"" ou ""out of range"" ou algo de tipo?

                                (1 resposta)
                            

Fechada há 12 meses.



notas = [10,5,6,7,8]

for i in range(0,len(notas)+1):
    print(notas[i])

Deu o erro:
line 4, in <module>
    print(notas[i])
IndexError: list index out of range

","
Sua lista possui 5 elementos, então len(notas) retornará o inteiro 5, sendo a primeira posição 0 e a última 4.
Você definiu um laço de repetição de forma que:
for i in range(0,len(notas)+1):
    ...

Ou seja, o seu range irá percorrer o conjunto de valores [0, len(notas) + 1[ (conjunto aberto na direita por definição da linguagem). Como o len é 5, ficará [0, 6[, que tratando de números inteiros será o conjunto (0, 1, 2, 3, 4, 5).
Ou seja, na última iteração, o i valerá 5 e tentará acessar a posição 5 da sua lista, que não existe.
O correto seria sem o + 1:
for i in range(0,len(notas)):
    ...

Mas melhor que isso, você pode percorrer a lista diretamente sem utilizar a variável de controle i e sem depender do tamanho da lista:
for nota in notas:
    print(nota)

Para facilitar a identificação desses tipos de problemas recomendo a leitura:

O que é um Teste de Mesa? Como aplicá-lo?

","
            0
        ",,,"['\npython', 'for\n']"
505601,"Eu estou aprendendo python e não estou descobrindo porque o script não funciona, esse é de um tutorial no youtube alguém pode me ajudar","
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import random

class InstagramBot:
    def __init__(self, username, password):
        self.username = username
        self.password = password
        self.driver = webdriver.Firefox(r""C:\Users\paulo\Desktop\geckdriver.exe"")
        
    def login(self)
    driver = self.driver
    driver.get(""https://www.instagram.com.br"")  

jhonatanBot = InstagramBot('vaca','doido')
jhonatanBot.login()

","
Algumas alterações devem ser realizadas no seu código para que ele funcione, vamos lá!
login(self)
driver = self.driver
driver.get(""https://www.instagram.com.br"")

Primeiro ponto a observar é que na função ""login"" após o fechamento de parênteses você deve adicionar "":"" (dois pontos), caso contrário teremos um erro de sintaxe.
Então ficaria desta forma:
login(self):

Outro ponto a observar é identação do código na função de login. Python requer uma identação padronizada. O mau uso, acarretará na não execução, ou então, no mal funcionamento em geral do programa. Corrigindo ficaria desta forma
login(self):
    driver = self.driver
    driver.get(""https://www.instagram.com.br"")

Deixo também uma dica. Na função login você não precisaria atribuir o ""self.driver"" à uma variável chamada ""driver"" pois, logo acima no construtor def __init __  você já o criou. A palavra reservada self serve para que você referencie o próprio objeto(instância) e basta apenas deixar o codigo desta forma:
login(self):
    self.driver.get(""https://www.instagram.com.br"")

E desta forma você até mesmo consegue reaproveitar ""melhor"" o seu driver em todas as partes do programa.
","
            2
        ",,,['\npython\n']
505587,Como informo pro python que uma celula do excel esta em branco,"
Preciso informar o python que se a célula ""Relação"" estiver em BRANCO, ele pule pra próxima página e se estiver preenchida que ele preencha com o conteúdo da célula.
O código está funcionando normalmente quando a célula está preenchida, porém não funciona se a célula estiver em branco.
Segue código abaixo:
             import pyautogui
             import pandas as pd

             formulario = pd.read_excel(r'C:\formulario.xlsx', sheet_name='Planilha1')
             pyautogui.hotkey('alt', 'tab')

             #se ""Relação"" está em branco, pular pra próxima página

             if formulario['Relação'] [0] == '' :
             pyautogui.hotkey('down')
             pyautogui.hotkey('tab')
             pyautogui.hotkey('enter')
             
             #se relção está preenchida, preencher com os dados contidos e pular pra proxima página.

             elif formulario['Relação'] [0] == 'Mãe/Pai':
             pyautogui.hotkey('tab')
             pyautogui.hotkey('enter')
             pyautogui.sleep(3)
             pyautogui.hotkey('tab')
             pyautogui.write(str(formulario['Sobrenome'] [0]))
             pyautogui.hotkey('tab')
             pyautogui.hotkey('enter')

minha planilha excel:
            ```A            B
       1-   Sobrenome     Relação
       2-    Nunes        Mãe/Pai```

Então gostaria de que quando o usuário deixasse o item ""Relação"" em BRANCO o sistema simplesmente ignorasse e pulasse pra próxima página.
OBS: Se eu colocar um ESPAÇO vazio na célula e colocar o código == ' ':
ele funciona. Porém com célula em branco e o código == '':
este não funciona de jeito nenhum.
Ja tentei:
== None:
== NaN:
== ['']:
== [('')]:
== """":
== (''):
== is None:
","
Tente usar pd.isnull(), esse método verifica se a series ou dataframe está vazio. Retorna True caso esteja e False caso contrário.
Observe um exemplo:
import pandas as pd

data = {'col_1': [3, 2, 1, 0], 'col_2': ['a', 'b', 'c', pd.NA]}
df = pd.DataFrame.from_dict(data)

if pd.isnull(df['col_2'][3]): # Verifica se pd.isnull() retornou True
    print('Está vazio.')
else:
    print('Está preenchido.')

O retorno desse exemplo será um print descrevendo o status do objeto passado para o método pd.isnull().
","
            1
        ",,,"['\npython', 'pandas', 'pyautogui\n']"
505580,Como usar while e if no Python? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Aceitar somente numéricos no input

                                (4 respostas)
                            

Fechada há 12 meses.



Me perdoem se é uma pergunta idiota, mas sou iniciante. Tenho que usar a condição while para finalizar o programa. No caso, o código tem que rodar enquanto o peso for diferente de 0. E, caso o peso seja 0, exibir a mensagem de 'peso inválido' e então, encerra a execução do programa. Podem me ajudar?
nome_lutador = str(input('Digite o nome do lutador: '))
peso_lutador = float(input('Digite o peso do lutador: '))
categoria = 0

if peso_lutador < 65:
    categoria = 'Pena'
if peso_lutador >= 65 and peso_lutador < 72:
    categoria = 'Leve'
if peso_lutador >= 72 and peso_lutador < 79:
    categoria = 'Ligeiro'
if peso_lutador >= 79 and peso_lutador < 86:
    categoria = 'Meio-medio'
if peso_lutador >= 86 and peso_lutador < 93:
    categoria = 'Medio'
if peso_lutador >= 93 and peso_lutador < 100:
    categoria = 'Meio-pesado'
if peso_lutador >= 100:
    categoria = 'Pesado'
print('O lutador', nome_lutador, 'pesa', peso_lutador,  'kg e se enquadra na categoria', categoria)

","
Existem duas boas formas de fazer isso, varia de acordo com o que você quer especificamente.
1º forma:
peso_lutador = float(input('peso aqui'))

while peso_lutador != 0:
    print(peso_lutador)
    peso_lutador = peso_lutador - 1
else:
    print('Peso invalido.')

Neste exemplo você faz a comparação no próprio while, quando o peso do lutador for igual à 0 ele irá parar e printar 'peso invalido'.
Ou
2º forma:
peso_lutador = float(input('peso aqui'))

while True:
    if peso_lutador == 0:
        break # Isso acaba a iteração
        print('Peso invalido.')
        
    print(peso_lutador)
    peso_lutador = peso_lutador - 1

Neste exemplo ele executa a verificação dentro do while em forma de if, caso o peso se torne 0 em algum momento ele acaba com o while usando o break. Note também que neste caso o while é infinito o que acaba com ele é o break.
","
            0
        ","
Existe alguns erros no seu código.
O primeiro erro - e talvez o mais importante - é que você precisa envolver o seu código por um laço de repetição. Neste caso, o laço de repetição mais indicado é o while True.
O segundo erro é que você não precisa utilizar a função str(), pois o retorno da função input() já é uma string.
Então, a forma correta do código seria:
while True:
    nome_lutador = input('Digite o nome do lutador: ')
    peso_lutador = float(input('Digite o peso do lutador: '))

    if peso_lutador != 0:
        categoria = 0
        if peso_lutador < 65:
            categoria = 'Pena'
        elif 65 <= peso_lutador < 72:
            categoria = 'Leve'
        elif 72 <= peso_lutador < 79:
            categoria = 'Ligeiro'
        elif 79 <= peso_lutador < 86:
            categoria = 'Meio-médio'
        elif 86 <= peso_lutador < 93:
            categoria = 'Médio'
        elif 93 <= peso_lutador < 100:
            categoria = 'Meio-pesado'
        elif peso_lutador >= 100:
            categoria = 'Pesado'

        print(f'O lutador {nome_lutador} pesa {peso_lutador:.1f} Kg e se enquadra na categoria {categoria}')
    else:
        print('Peso Inválido!')
        break

Observe que quando o código é executado, devemos digitar o nome do lutador e pressionar Enter. Em seguida, devemos digitar o peso do lutador e pressionar Enter.
Posteriormente o primeiro bloco if verificará se o peso_lutador é diferente de 0. Caso positivo, será verificado a categoria do lutador e, em seguida, será exibido tanto os dados do lutador - nome e peso - quanto a categoria do mesmo. Caso negativo, ou seja, o peso é igual a 0, o programa exibe a mensagem Peso Inválido e encerra sua execução.
OBSERVAÇÃO: Enquanto o peso digitado for diferente de 0, o programa exibirá os dados do lutador e solicita os dados de outro lutador. Desse modo, o encerramento do programa só ocorrerá se for digitado o valor 0.
","
            0
        ","['\npython', 'loop', 'while\n']"
505567,Filtro modelo datetime Django,"
Eu tenho um modelo que é basicamente o seguinte :
class Sample(models.Model):
    date = fields.DateField(auto_now=True)

Agora, com isso eu quero filtrar somente o mês nesse modelo
Como eu pego somente o mês nesse modelo ?
","
Você pode usar o modulo datetime para fazer isso.
Use o método .strftime(). Veja abaixo:
from datetime import datetime

data_hora = datetime.now()
mes = data_hora.strftime('%m')
print(mes)


Ele irá retornar somente o mês do horário atual.
Conclusão
Desta forma você transforma seu objeto datetime para um objeto str. Ele faz isso de acordo com a formatação passada como argumento para o método .strftime().
Para entrar mais a fundo sobre a formatação recomendo esta leitura.
","
            0
        ",,,"['\npython', 'django', 'flask\n']"
505562,Como gerar uma nova lista a partir de outra lista em Python?,"
Estou com dificuldades para realizar operações de listas em Pyhton. Tenho uma lista de valores.
frequencia = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 120, 150, 200,300,400, 
              500, 600, 700, 800, 900, 1000]

A partir dessa lista quero gerar uma nova lista de valores obtidos aplicando a seguinte fórmula em todos os valores de frequência.
at = (7.19 * (10**(-3)) + (6.09/((freq**2)+0.227) + 
     (4.81/(((freq-57)**2)+1.5)))) * freq**2 * (10**(-3))

Aqui está o código que estou tentando.
frequencia = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,97, 98, 99, 100, 120, 150, 200, 300,400, 
              500, 600, 700, 800, 900, 1000]
at_seco = []
for i in range(len(frequencia)):
    while len(freq)<len(frequencia):
        freq = frequencia[0]
        freq = freq + 1
        return freq
at = (7.19 * (10**(-3)) + (6.09/((freq**2)+0.227) + 
     (4.81/(((freq-57)**2)+1.5)))) * freq**2 * (10**(-3))
at_seco.append(at)
return at_seco

","
Pelo que entendi você deseja pegar a lista frequencia e aplicar a fórmula...
(7.19 * (10**(-3)) + (6.09/((freq**2)+0.227) + (4.81/(((freq-57)**2)+1.5)))) * freq**2 * (10**(-3))

... a cada elemento da referida lista.
Pois bem, para você fazer isto você deve iterar sobre a referida lista aplicando a cada valor a referida fórmula.
Desta forma o código pode ser:
frequencia = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 120, 150, 200, 300, 400,
              500, 600, 700, 800, 900, 1000]

at_seco = []
for freq in frequencia:
    at = (7.19 * (10**(-3)) + (6.09/((freq**2)+0.227) + (4.81/(((freq-57)**2)+1.5)))) * freq**2 * (10**(-3))
    at_seco.append(at)

print(at_seco)

Observe que o for percorrerá a lista frequencia e, para cada valor inserido na mesma, será aplicada a referida fórmula.
Posteriormente a nova lista é exibida com auxílio de apenas a função print.
OBSERVAÇÃO: A palavra reservada return só é utilizada para exibir saídas de funções. Neste caso, o return é desnecessário.

Outra forma de resolver esta questão é:
frequencia = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
              85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 120, 150, 200, 300, 400,
              500, 600, 700, 800, 900, 1000]


def at(freq):
    return (7.19 * (10**(-3)) + (6.09/((freq**2)+0.227) + (4.81/(((freq-57)**2)+1.5)))) * freq**2 * (10**(-3))


at_seco = [at(i) for i in frequencia]

print(at_seco)

Observe que este segundo código é gerado a partir de um list comprehension. O laço for percorre a lista frequencia e, para cada valor iterado,  calcula o valor de at - que neste caso é gerado por uma função def - inserido o valor correspondente na lista at_seco.
","
            1
        ",,,"['\npython', 'lista\n']"
505479,Dúvida sobre extração de valores usando soup.findAll() em Python,"
Boa tarde a todos.
Estou estudando python e aprendendo a fazer extração de dados em sites e para dá início a esse aprendizado estou criando um programa que irá extrair os dados da lotofacil do site da caixa econômica e me retornar os valores sorteados em determinado concurso.
Pelos exemplos que vi na internet, é possível fazer a busca pela  e pelo  ou <parâmetro>, no entanto, verifiquei que a página, da caixa, que possui todos os resultados por concurso não possui um , ou seja, só possuem o  e  dentro de uma tabela .
Já consegui extrair os dados de toda a linha de determinado concurso, no entanto, não estou conseguindo tratar os dados da linha e pegar somente: número do concurso e números sorteados. O meu código ele está mostrando todo os valores da linha.
Alguém poderia me dá uma luz?
import requests
from bs4 import BeautifulSoup

req = requests.get( ""http://loterias.caixa.gov.br/wps/portal/loterias/landing/lotofacil/!ut/p/a1/04_Sj9CPykssy0xPLMnMz0vMAfGjzOLNDH0MPAzcDbz8vTxNDRy9_Y2NQ13CDA0sTIEKIoEKnN0dPUzMfQwMDEwsjAw8XZw8XMwtfQ0MPM2I02-AAzgaENIfrh-FqsQ9wBmoxN_FydLAGAgNTKEK8DkRrACPGwpyQyMMMj0VAcySpRM!/dl5/d5/L2dBISEvZ0FBIS9nQSEh/pw/Z7_HGK818G0K85260Q5OIRSC42046/res/id=historicoHTML/c=cacheLevelPage/=/"" )
soup = BeautifulSoup( req.content, ""html.parser"" )

todas_linhas = soup.findAll(""tr"")

## LOCALIZA EM TODAS AS LINHAS 'td' O texto '2208', GUARDA DA VARIÁVEL temp ##
# A CONDIÇÃO if VERFICA NA VARIÁRIL temp E SÓ RETORNA OS VALORES QUE SÃO DIFERENTES DE None #

for tr in todas_linhas:
    temp = tr.find('td', text='2208')
    if temp != None:
        print (tr.text)

Espero que tenham entendido a minha dúvida e obrigado pela atenção.
","
Cara, essa deu trabalho hein. kkkkkk.
Seu código está no caminho correto, o problema está na página que em algumas linhas foi adicionado uma nova tabela, por exemplo, coluna cidade além de algumas sujeirinhas na transformação de tag html para texto.
Segue a solução abaixo, transformando o retorno num dataframe, será perfeito para analises, filtros e gráficos se desejar.
Mais abaixo, um código exibindo linha por linha, veja que ele zera a contagem e trás sujeira de uma linha para outra.
import time
import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np

url = ""http://loterias.caixa.gov.br/wps/portal/loterias/landing/lotofacil/!ut/p/a1/04_Sj9CPykssy0xPLMnMz0vMAfGjzOLNDH0MPAzcDbz8vTxNDRy9_Y2NQ13CDA0sTIEKIoEKnN0dPUzMfQwMDEwsjAw8XZw8XMwtfQ0MPM2I02-AAzgaENIfrh-FqsQ9wBmoxN_FydLAGAgNTKEK8DkRrACPGwpyQyMMMj0VAcySpRM!/dl5/d5/L2dBISEvZ0FBIS9nQSEh/pw/Z7_HGK818G0K85260Q5OIRSC42046/res/id=historicoHTML/c=cacheLevelPage/=/""
req = requests.get(url)
soup = BeautifulSoup(req.content, ""html.parser"" )

todas_linhas = soup.findAll(""tr"")

lista = []
lista_aux = []
for x in todas_linhas:
    z = x.text
    i = 0
    linhas_validas = 'N'
    lista_aux = []

    #Transforma o texto em lista
    for xx in z.split('\n'):

        if i == 1 and xx != """":
            linhas_validas = 'S'

        if linhas_validas == 'S' and i >=1 and i<=17:
            lista_aux.append(xx)

        i += 1

    if linhas_validas == ""S"" and len(lista_aux) ==17:
        lista.append(lista_aux)

#Transformar lista em dataframe
df = pd.DataFrame(lista)

#Pega primeira linha
headers = df.iloc[0]

#Transforma linha em cabeçalho
df.columns = [headers]

#Apaga a primeira linha porque virou cabeçalho
df = df.iloc[1:]

#imprime os 10 primeiros registros
print(df.head(5).to_string())

#Imprime todo o dataframe
#print(df.to_string())

#Imprime a quantidade de linhas e colunas
print()
print('Linhas e Colunas Total:')
print(df.shape)


import time
import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np

url = ""http://loterias.caixa.gov.br/wps/portal/loterias/landing/lotofacil/!ut/p/a1/04_Sj9CPykssy0xPLMnMz0vMAfGjzOLNDH0MPAzcDbz8vTxNDRy9_Y2NQ13CDA0sTIEKIoEKnN0dPUzMfQwMDEwsjAw8XZw8XMwtfQ0MPM2I02-AAzgaENIfrh-FqsQ9wBmoxN_FydLAGAgNTKEK8DkRrACPGwpyQyMMMj0VAcySpRM!/dl5/d5/L2dBISEvZ0FBIS9nQSEh/pw/Z7_HGK818G0K85260Q5OIRSC42046/res/id=historicoHTML/c=cacheLevelPage/=/""
req = requests.get(url)
soup = BeautifulSoup(req.content, ""html.parser"" )

todas_linhas = soup.findAll(""tr"")

for x in todas_linhas:
    z = x.text
    i = 0
    for xx in z.split('\n'):
        print(str(i)+"" - ""+str(xx))
        i += 1



Pesquisar o concurso
print()
print('Digite o Código do Concurso: ')
codigoConcurso = input()


df_desejado = df.iloc[[int(codigoConcurso)-1]]

print(df_desejado)

data = str(df_desejado.iloc[0][1])
bola1 = str(df_desejado.iloc[0][2])
bola2 = str(df_desejado.iloc[0][3])
#outras variaveis
bola15 = str(df_desejado.iloc[0][16])

print()
print('data: '+str(data))
print('bola 1: '+str(bola1))
print('bola 3: '+str(bola2))
print('bola 15: '+str(bola15))


","
            0
        ","
Obrigado por ajudar Gilmar Vaz. Agora vou estudar Interface gráfica para integrar ao código.
import time
import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np

url =""http://loterias.caixa.gov.br/wps/portal/loterias/landing/lotofacil/!ut/p/a1/04_Sj9CPykssy0xPLMnMz0vMAfGjzOLNDH0MPAzcDbz8vTxNDRy9_Y2NQ13CDA0sTIEKIoEKnN0dPUzMfQwMDEwsjAw8XZw8XMwtfQ0MPM2I02-AAzgaENIfrh-FqsQ9wBmoxN_FydLAGAgNTKEK8DkRrACPGwpyQyMMMj0VAcySpRM!/dl5/d5/L2dBISEvZ0FBIS9nQSEh/pw/Z7_HGK818G0K85260Q5OIRSC42046/res/id=historicoHTML/c=cacheLevelPage/=/""
req = requests.get(url)
soup = BeautifulSoup(req.content, ""html.parser"" )

todas_linhas = soup.findAll(""tr"")

lista = []
lista_aux = []
resultado = []
for x in todas_linhas:
    z = x.text
    i = 0
    linhas_validas = 'N'
    lista_aux = []

    #Transforma o texto em lista
    for xx in z.split('\n'):

        if i == 1 and xx != """":
            linhas_validas = 'S'

        if linhas_validas == 'S' and i >=1 and i<=17:
            lista_aux.append(xx)

        i += 1

    if linhas_validas == ""S"" and len(lista_aux) ==17:
        lista.append(lista_aux)

#Transformar lista em dataframe
df = pd.DataFrame(lista)

#Pega primeira linha
headers = df.iloc[0]

#Transforma linha em cabeçalho
df.columns = [headers]

#Apaga a primeira linha porque virou cabeçalho
df = df.iloc[1:]

#imprime, por default, os 5 primeiros registros
#print(df.head().to_string())

#imprime, por default, os 5 últimos registros
print (df.tail().to_string())

#Imprime todo o dataframe
#print(df.to_string())

#Imprime a quantidade de linhas e colunas
print()
print('Linhas e Colunas Total:')
print(df.shape)

print()
print('Digite o Código do Concurso: ')
codigoConcurso = input()

df_desejado = df.iloc[[int(codigoConcurso)-1]]

print(df_desejado)

data = str(df_desejado.iloc[0][1])

print ('-')
resultadoString = (df_desejado.iloc[0][2:17].tolist())
# converter os valores String para int dentro da lista (resultado)
resultadoFinal = []
for i in resultadoString:
    resultadoFinal.append(int(i))
#print (resultadoFinal)
        
print()
print('data: '+str(data))

## Jogos feitos pelo usuário.
jogos = ([2,3,4,5,6,7,8,12,13,15,17,20,21,22,23], [5,6,7,8,9,10,11,12,16,17,19,20,22,23,24])
        
#---variáveis globoais-----#
contador = 0
pontos = 0

## Laço para conferir os 8 jogos feitos.
while (contador <= len(jogos)):
    for i in jogos[contador]:
        for j in resultadoFinal:
            if i == j:
                pontos += 1
    #totais.append(pontos)
    
    print(""O jogo "", jogos[contador], "" conseguiu "", pontos, "" pontos!"")
    pontos = 0
contador += 1


","
            0
        ","['\npython', 'python-2.7', 'beautifulsoup\n']"
505465,Como comparar dois valores strings com pandas?,"
Olá!
Tenho dois dataframes do pandas e selecionei uma coluna de cada com ids. Eu quero comparar os ids para ver se o id de um dataframe está contido em outro, porém, não tem a mesma quantidade de linhas e não estão na mesma ordem.
Tentei comparar dessa forma
#Read data
import pandas as pd

cursos = pd.read_excel(""planilha1.xlsx"")
unidade_ensino = pd.read_excel(""planilha2.xlsx"", na_values=str)   
    
cursos = cursos.loc(cursos['codigo_unidade_ensino'] == unidade_ensino['cod_unidade_ensino'])

Porém, recebi o seguinte erro:

ValueError: Can only compare identically-labeled Series objects

","
Tente usando a função isin, desta forma:
mask = cursos['codigo_unidade_ensino'].isin(unidade_ensino['cod_unidade_ensino'])
cursos = cursos[mask].copy()

","
            2
        ",,,"['\npython', 'excel', 'pandas\n']"
505437,Como mudar o fundo de um gráfico com 'seaborn' em Python,"
Tento mudar o fundo do meu gráfico com o módulo 'seaborn', porém, não tenho sucesso. Fiz a instalação do módulo hoje (16/04/2021).
código:
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

arrayx = np.arange(0,10,0.1)
arrayy = np.sin(arrayx)

dat = {""x"":arrayx,""y"":arrayy}

sns.lineplot(x=""x"",y=""y"",data=dat)

sns.set(style='darkgrid')

plt.show()

Também tentei outras funções, como sns.set_style(""darkgrid"") e também não funcionou.

","
Você deve excluir a seguinte linha de código:
sns.set(style='darkgrid')

Em seguida, você deve adicionar a seguinte linha de código antes da construção do gráfico.
sns.set_style(""darkgrid"")

Desta forma o código completo ficará:
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

sns.set_style(""darkgrid"")
arrayx = np.arange(0, 10, 0.1)
arrayy = np.sin(arrayx)

dat = {""x"": arrayx, ""y"": arrayy}

sns.lineplot(x=""x"", y=""y"", data=dat)

plt.show()


Observação: Existe outros estilos que você pode testar, que são: darkgrid, whitegrid, dark, white, ticks
","
            1
        ",,,"['\npython', 'numpy', 'matplotlib', 'seaborn\n']"
505431,Fazer script que está em JavaScript para Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 11 meses.




                        Melhore esta pergunta
                    



estou com a seguinte função em JavaScript:
function main() {
let data = fazGet(""https://economia.awesomeapi.com.br/json/all"");
let moedaJSON = JSON.parse(data);
console.log(moedaJSON)
const keys = Object.keys(moedaJSON)
keys.forEach(key => {
     document.getElementById(""Nome1"").innerHTML += moedaJSON[key][""name""] + ""<br>"";
     document.getElementById(""Alta1"").innerHTML += moedaJSON[key][""high""] + ""<br>"";
     document.getElementById(""Baixa1"").innerHTML += moedaJSON[key][""low""] + ""<br>"";
     document.getElementById(""Compra1"").innerHTML += moedaJSON[key][""bid""] + ""<br>"";
     document.getElementById(""Venda1"").innerHTML += moedaJSON[key][""ask""] + ""<br>"";
})

Quero fazer a mesma coisa em Python, porém, a variavel ""key"" ela tem diferentes nomes. Ela é referente a um iten de um dicionario da API que irei colocar logo abaixo.
moedas = {
""USD"": {
    ""code"": ""USD"",
    ""codein"": ""BRL"",
    ""name"": ""Dólar Americano/Real Brasileiro"",
    ""high"": ""5.6769"",
    ""low"": ""5.6142"",
    ""varBid"": ""0.0038"",
    ""pctChange"": ""0.07"",
    ""bid"": ""5.6191"",
    ""ask"": ""5.6208"",
    ""timestamp"": ""1618585377"",
    ""create_date"": ""2021-04-16 12:02:59""
},
""DOGE"": {
    ""code"": ""DOGE"",
    ""codein"": ""BRL"",
    ""name"": ""Dogecoin/Real Brasileiro"",
    ""high"": ""2.36"",
    ""low"": ""0.733879"",
    ""varBid"": ""1.43577199"",
    ""pctChange"": ""192.92"",
    ""bid"": ""2.18"",
    ""ask"": ""2.18"",
    ""timestamp"": ""1618584926"",
    ""create_date"": ""2021-04-16 11:55:27""
}}

OBS: Esse dicionario acima ele é o mesmo deste link, só botei uma parte dele como exemplo e para não ficar algo grande. Link aqui
No Json como podem ver, temos ""USD"", ""DOGE"", etc... Como faço para que esses nomes se tornem variaves para assim facilitar o codigo. Isso tudo depois vou colocar com django por isso essa necessidade de mudar o script.
","
Não sei se entendi corretamente mas sua dúvida é como chegar nos valores mais interno do dicionário ?
Se for isso, é o código abaixo, eu faço um for em cima da variavel que trás a chave e o valor e um for interno em cima do valor que também é um dicionário, veja que não precisei especificar o nome da chave do dicionário.
import requests

moedas = {
""USD"": {
    ""code"": ""USD"",
    ""codein"": ""BRL"",
    ""name"": ""Dólar Americano/Real Brasileiro"",
    ""high"": ""5.6769"",
    ""low"": ""5.6142"",
    ""varBid"": ""0.0038"",
    ""pctChange"": ""0.07"",
    ""bid"": ""5.6191"",
    ""ask"": ""5.6208"",
    ""timestamp"": ""1618585377"",
    ""create_date"": ""2021-04-16 12:02:59""
},
""DOGE"": {
    ""code"": ""DOGE"",
    ""codein"": ""BRL"",
    ""name"": ""Dogecoin/Real Brasileiro"",
    ""high"": ""2.36"",
    ""low"": ""0.733879"",
    ""varBid"": ""1.43577199"",
    ""pctChange"": ""192.92"",
    ""bid"": ""2.18"",
    ""ask"": ""2.18"",
    ""timestamp"": ""1618584926"",
    ""create_date"": ""2021-04-16 11:55:27""
}}

#Lendo de uma página
r = requests.get('https://economia.awesomeapi.com.br/json/all')
#Pegar de uma Página http
#moedas = r.json()

for chaveMaster, valorMaster in moedas.items():
    print(f'Chaves Master: {chaveMaster}')
    for chave, valor in valorMaster.items():
        print(f'   Chave: {chave} - Valor: {valor}')


","
            1
        ",,,"['\njavascript', 'python', 'json', 'django\n']"
505423,Listas aninhadas em python,"
Preciso de uma ajuda,digamos que eu tenho a seguinte lista:
lista = [1,2,3,4,5,[6,7,8,9],10,11,12,13,14,15]

Se eu quiser imprimir cada um dos itens dessa lista eu faria um:
for i in lista:
   print(lista)

Até ai tudo certo.
Porém,queria saber como eu posso fazer o mesmo para a lista que está dentro da lista.
Eu pensei no seguinte código,entretanto,não está funcionando:
   for i in lista:
      for i in lista:
          print(i)

Alguém pode me ajudar com esse problema ?
","
Pode resolver utilizando recursividade. Cria uma função para imprimir a lista, e sempre que cada elemento dessa lista é outra lista volta a chamar a mesma função sobre esse elemento.
Para saber se um elemento é uma lista pode utilizar a função isinstance passando como segundo argumento list.
Exemplo:
def imprimir_lista(lista):
    for elemento in lista:
        if isinstance(elemento, list): # se este elemento é uma lista, chama a mesma funçao
            imprimir_lista(elemento)
        else: # caso contrário imprime normalmente
            print(elemento)

Saída:
>>> lista = [1,2,3,4,5,[6,7,8,9],10,11,12,13,14,15]
>>> imprimir_lista(lista)
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

Veja outro exemplo com uma lista ainda mais aninhada:
>>> lista = [1,2,[3,4,[5,6]]]
>>> imprimir_lista(lista)
1
2
3
4
5
6

Veja o código a executar no Ideone
","
            5
        ","
Primeiro, a sua variável i está sendo sobrescrita, deveria usar outra variável, além de você iterar novamente na lista original, quando deveria iterar sobre a var i somente quando é uma list. O segundo for deveria somente ser feito se o elemento da lista original for do tipo list, veja o exemplo abaixo:
lista = [1,2,3,4,5,[6,7,8,9],10,11,12,13,14,15]

for elemento in lista:
    if isinstance(elemento, list):
        for subelemento in elemento:
            print(subelemento)
    else:
        print(elemento)

A função isinstance() verifica se o elemento é um list para assim fazer o laço, senão imprime o elemento normalmente.
","
            3
        ","['\npython', 'python-3.x\n']"
505401,Como comparar se o valor de uma coluna do dataframe esteja em um array se estiver criar uma nova coluna com esse valor?,"
lista = array(['NF', 'BT', 'C', 'N', 'I', 'IP',
       'Aa', 'Sa', 'Gl', 'Et', 'To', 'Hr',
       'Cr', 'Ro', 'X', 'Oa', 'Ml', 'Me'], dtype=object)

""DATAFRAME"" 
  x_1 x_2
0  NF  0
1  A   0 
2  B   0 
3  KK  0 
4  Gl  0
5  Oa  0

A saida desejada seria essa abaixo :
  x_1 x_2
0  NF  NF
1  A   0 
2  B   0 
3  KK  0 
4  Gl  Gl
5  Oa  Oa

Se o valor da coluna for igual à qualquer um dado do array ele retornar a coluna nova com esse valor caso contrario retorne 0
","
Se entendi correto, use o isin()
Criando lista e dataframe para teste
>>> lista = array(['NF', 'BT', 'C', 'N', 'I', 'IP',
...        'Aa', 'Sa', 'Gl', 'Et', 'To', 'Hr',
...        'Cr', 'Ro', 'X', 'Oa', 'Ml', 'Me'], dtype=object)

>>> df = pd.DataFrame({""x_1"": [""NF"", ""A"", ""B"", ""KK"", ""Gl"", ""Oa""]})

Criando nova coluna
>>> df[""x_2""] = df[df[""x_1""].isin(lista)]

>>> df
  x_1  x_2
0  NF   NF
1   A  NaN
2   B  NaN
3  KK  NaN
4  Gl   Gl
5  Oa   Oa

Preenchendo NaN com 0 (zero)
>>> df[""x_2""].fillna(0, inplace=True)

>>> df
  x_1 x_2
0  NF  NF
1   A   0
2   B   0
3  KK   0
4  Gl  Gl
5  Oa  Oa

","
            0
        ",,,"['\npython', 'pandas', 'dataframe\n']"
505314,(python) como eu coloco o for dentro do def,"
numero_sorte = 3
n_tentativas = 4

for rodada  in  range(1,n_tentativas):
  tentativa_2 = input ('qual o numero secreto? ')
  tentativa_2= int (tentativa_2)
  def jogo_adivinha(chute):
    if numero_sorte == chute:
      print('parabens vc acertou')
    elif numero_sorte < chute:
      print('o numero secreto e menor que isso')      
    elif numero_sorte > chute :
      print('o numero secreto e maior que isso')

esse é meu código
","
Amigo, segue o que você quer fazer, para sua dúvida eu coloquei abaixo e comentei como colocar o for dentro da função. Lembrando que o Python trabalha com endentação, talvez não tenha endentado corretamente.
import sys

numero_sorte = 3
n_tentativas = 4

def jogo_adivinha(chute):
    if numero_sorte == chute:
      print('Parabens vc acertou')
      sys.exit()
    elif numero_sorte < chute:
      print('o numero secreto e menor que isso\n')
    elif numero_sorte > chute :
      print('o numero secreto e maior que isso\n')

for rodada  in  range(0,n_tentativas):
  tentativa = int(input ('Qual o numero secreto ? '))
  #chama a funcao
  jogo_adivinha(tentativa)

print('Você perdeu\n')

#For dentro da função    
'''

def Teste():
    for x in range(0,3):
        print('passou por aqui: '+str(x))

#Chama funcao
Teste()

'''

","
            0
        ","
Python é uma linguagem que não possui delimitadores de bloco, como C por exemplo, por isso a indentação faz parte do seu código. Para que o código esteja associado a uma função, estrutura ou laço é necessário dar um espaço de tabulação.
Para colocar o for na função é necessário fazer da seguinte maneira:
funcao():
    for i in valores:
        condicao

","
            -1
        ","['\npython', 'for\n']"
505276,Como faço para o Python não ligar para as letras maiúsculas ou minúsculas do código?,"
Código:
while(1):
    x= str (input ('Meu avô tinha dois cachorros, um se chamava Pet e o outro se chamava Repete, o Pet morreu, quem é que ficou?'))
    if x != 'Repete':
        print(""Errado!"")
        break

A ideia do código é aquela velha piada sem graça do 5° ano, ou seja, toda vez que alguém digitar ""Repete"", o programa vai ficar repetindo, o problema é que se o usuário escrever ""repete"" ao em vez de ""Repete"", o código quebra, não faço ideia de como resolver isso.
","
Como já foi dito nos comentários:

Use os métodos str.lower() ou str.upper() para obter uma cópia da entrada em minúsculas ou maiúsculas e faça a comparação.


Aplicar uma conversão de str() a saída de um input() é desnecessário pois o retorno de input já é uma string.

No exemplo a expressão x:= input(pergunta).upper() != 'REPETE' pode ser entendida assim:

É atribuído input(pergunta).upper() a x por meio de uma expressão de atribuição(operador walrus) x:= input(pergunta).upper().
É feita comparação se x != 'REPETE'.

O resultado dessa expressão é testado a cada iteração do while.
pergunta = 'Meu avô tinha dois cachorros.\nUm se chamava Pet e o outro se chamava Repete.\nO Pet morreu, quem é que ficou?\n'

while(x:= input(pergunta).upper() != 'REPETE'):
  print(""Errado!"")
print(""Você acertou!"")

Teste o código no Repl.it
","
            5
        ","
Observe que este programa, assim como o próprio autor disse, é uma piada de mau gosto.
O intuito deste programa é, caso o usuário digite a resposta CERTA o programa seja reexecutado. E, caso a resposta seja ERRADA o programa exibe uma mensagem de erro e encerra.

A ideia do código é aquela velha piada sem graça do 5° ano, ou seja, toda vez que alguém digitar ""Repete"", o programa vai ficar repetindo...

De acordo com esta parte do enunciado devemos perceber que o programa SEMPRE repetirá caso a palavra digitada seja repete, independentemente se seus caracteres forem maiúsculos ou minúsculos ou misturados.
Uma das formas para resolver esta questão é utilizando expressão de atribuição. Dessa forma podemos:

Capturar a resposta e converter todos os seus caracteres para maiúsculos;
Verificar se esta resposta, de fato, é REPETE;
Reexecutar o laço ou encerrar o programa.

Uma forma que podemos implementar código é:
def fato():
    return 'Meu avô tinha dois cachorros. Um se chamava Pet e o outro ' \
           'se chamava Repete. O Pet morreu.'


while (n := input(f'{fato()} \nQuem é que ficou? ').upper()) == 'REPETE':
    '\t'
print(""ERRADO!"")

Pois bem, enquanto a resposta do usuário for a resposta certa de acordo com a pergunta, o programa será novamente reexecutado. E, caso a resposta seja ERRADA de acordo com a pergunta, o programa irá exibir uma mensagem de erro e  encerrará automaticamente.
Testando o código:
Ao executar o programa, enquanto digitarmos os caracteres pertencentes à palavra repete, na ordem em que os mesmos faz sentido, independentemente que os mesmos sejam maiúsculos ou minúsculos, o programa será reexecutado. Caso contrário, o programa nos exibirá a mensagem ERRADO e encerrará a execução.

Agora se você não quiser utilizar a axpressão de atribuição, você pode implementar o seguinte código:
while 1:
    x = input('Meu avô tinha dois cachorros, um se chamava Pet e o outro se chamava Repete. '
              'O Pet morreu. \nQuem é que ficou? ').capitalize()
    if x != 'Repete':
        print(""Errado!"")
        break

Observe que este código é a forma corrigida do código apresentado na pergunta.
Primeira correção:
Os parênteses que envolve o valor 1 são desnecessários. Por isso os removei.
Segunda correção:
A função str() é desnecessária, uma vez que o retorna da função input() sempre será uma string. Por isso a removi.
Terceira correção:
Se você pretende compara a resposta com a string Repete, você precisa converter a string digitada com a função capitalize. Por isso, inseri a referida função ao final da função input().
Quarta correção:
A principal função do programa é repetir a pergunta, caso a resposta do usuário esteja correta e, caso contrário, exibe a mensagem Errado! e ENCERRA a execução do programa. Por isso é desnecessário exibir as mensagens Acertou! ou Você acertou!.
","
            1
        ","['\npython', 'python-3.x\n']"
505227,Drop valores de um dataframe baseado em um valor booleano,"
Quando leio um arquivo CSV, essas são as 5 primeiras linhas:
     Shape Reported             Time
1          OTHER  6/30/1930 20:00
3           DISK   6/1/1931 13:00
4          LIGHT  4/18/1933 19:00
5           DISK  9/15/1934 15:30
6         CIRCLE   6/15/1935 0:00

Eu quero dar um drop em todos os valores que sejam iguais a 'OTHER', na coluna Shape Reported, mas quando eu tento isso:
ufo.drop(ufo['Shape Reported'] == 'OTHER', axis=0, inplace=True)

Eu recebo esse erro:
  File ""C:\CursoPython\venv\lib\site-packages\pandas\core\indexes\base.py"", line 5591, in drop
    raise KeyError(f""{labels[mask]} not found in axis"")
KeyError: '[False False False ... False False False] not found in axis'

Tem algum jeito de usar o drop para fazer isso? Se sim, é possível não utilizar o ILOC, tentando fazer algo similar ao que eu fiz?
","
É possível realizar esta tarefa sem utilizar o drop, selecionado as linhas de interesse.
ufo = ufo[ufo[""Shape Reported ""] != ""OTHER""]

Assim o novo ufo terá todas as linhas, com exeção daquelas que conter ""OTHER"" na coluna ""Shape Reported""
Este tipo de seleção se chama Boolean indexing, aqui tem na documentação do Pandas tem a explicação detalhada, esta em inglês mas você pode utilizar a tradução do próprio navegador se precisar.
","
            1
        ",,,"['\npython', 'pandas', 'dataframe\n']"
505221,Django Favorite view,"
Estou tentando criar um botão favoritar os posts de um aplicativo, mas não consigo descobrir como criar um porque ele contém um número inteiro.
Quando o usuário clica no botão favoritar. O botão aumentará em 1 e será exibido perto da imagem.
Este é o meu model do Post.
class Post(models.Model):
    title = models.CharField(max_length=100)
    slug = AutoSlugField(unique=True, always_update=False, populate_from=""title"")
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    body = models.TextField(max_length=1050)
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
    image = models.ImageField(null=True, blank=True, upload_to=upload_perfil_user)   
    category = models.ForeignKey(
        Category, related_name=""posts"", on_delete=models.CASCADE, null=True
    )
    class Meta:
        ordering = (""-created"",)

    def __str__(self):
        return self.title

    def get_absolute_url(self):
        return reverse(""blog:detail"", kwargs={""slug"": self.slug})

    def comment_number(self):
        return len(self.comment_set.all())

E esse é o modelo do Favorite : 

 

class Favorite(models.Model):
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    post = models.ForeignKey(Post, on_delete=models.CASCADE)    
    created = models.DateTimeField(auto_now_add=True)    

Mas estou tendo extrema dificuldade em criar a view do sistema :
class Favorite(CreateView):
    model = Favorite
 
    def form_valid(self):    
            form.instance.author=request.user #id do usuario
    #id do post
    #se o usuario ja favoritou, então não faça nada
    #se o usuario não favoriou então suba a info pro banco (id_user, id_post)
    #retorne o mesmo url talvez... Não tive ideia pro retorno da função


Alguém pode me ajudar a criar a view do botão favoritar ? Tenho a tabela no banco devido ao modelo, mas queria entender a lógica de como criar a view de um jeito que os duas foreing keys (User e Post) sejam preenchidas, com a exceção de A foreign key user é one too many Post
",,,,,"['\npython', 'django', 'django-queryset\n']"
505147,Função dentro de um dicionário em Python,"
Estou tentando realizar um exercício onde ao criar um dicionário de arquivo log cuja chave seja retornada um número aleatório entre 100 e 9999 como matrícula da seguinte forma
 from datetime import date, time, datetime, timedelta  
    import random  
    def perguntar():  
     return input(' O que deseja realizar?\n' + 
                 '<I> Para inserir um usuário:  \n' +
                  '<P> Para pesquisar um usuário: \n' +
                  '<E> Para excluir um usuário: \n' +
                  '<L> Para listar um usuário: \n' +
                  '<S> Para sair: ').upper()
    
    def numero_de_matricula():
       num_matricula = random.randint(100, 9999)
    
    def inserir_dados(dicionario):
      dicionario[print('Matrícula: {}' .format(numero_de_matricula()))] = [input('Digite o login: ').upper(),
                        input('Digite o nome: ').upper(),
                         input('Digite a última data de acesso: '),
                         input('Digite a última estação acessada: ').upper()]

usuarios = {}
opcao= perguntar()
while opcao == 'I' or opcao =='P' or opcao =='E' or opcao == 'L':

  if opcao == 'I':
    
      inserir_dados(usuarios)
      print('Usuário cadastrado com sucesso: ')

Não é retornado nenhum erro, porém o valor da chave retornado é Matrícula: None.
Logo, gostaria de saber se:

Estou declarando e chamando a função random corretamente para o que pretendo fazer?

","
Quanto a pergunta.
Não, você não está utilizando corretamente a função random.randint() e as outras respostas apresentadas também não fazem um correto uso da função.
Como está cadastrando os alunos num dicionário fatalmente a função randint() irá sortear um número de matricula que já foi utilizado então haverá uma colisão de chave que implica na perda duma matricula já cadastrada.
Para resolver o problema não use randint(), o problema é mais complexo que caso de uso a qual foi projetada.
O que pode fazer é criar uma lista com a faixa de valores a serem usados como número de matricula e então embaralhar essa lista com a função random.shuffle() e com uma função geradora ir extraindo uma a um, quando solicitado um número de matricula com a função embutida next():
Exemplo:
from random import shuffle

def matricula_gen():  
  matriculas = list(range(100, 1000))    #Cria uma lista com faixa válida de valores de matriculas.
  shuffle(matriculas)                    #Embaralha a lista.
  #Enquanto a lista matriculas não estiver vazia...
  while len(matriculas) > 0:
    yield matriculas.pop(0)              #...remove o primeiro elemento de matriculas e o retorna.

numero_de_matricula= matricula_gen()     #Cria o gerador de matriculas.
for _ in range(15):
  print(next(numero_de_matricula))       #Imprime 15 matriculas de teste.

Inserindo no código da pergunta.
O código da pergunta apresenta muitos problemas:

A função perguntar() pode ser simplificada.
A função numero_de_matricula() não retorna valor e se retornasse gera chaves duplicadas.
Na função inserir_dados() você está utilizando o resultado da função print() que é None como chave num dicionário.
Seu menu de opções é exibido uma única vez.
O laço de atividades não é adequado.

Então fiz algumas modificações para tornar o seu exemplo funcional e embutir a resposta a sua pergunta:
from datetime import date, time, datetime, timedelta  
from random import shuffle

menu = """"""O que deseja realizar?
<I> Para inserir um usuário:
<P> Para pesquisar um usuário:
<E> Para excluir um usuário:
<L> Para listar um usuário:
<S> Para sair: """"""

def matricula_gen():  
  matriculas = list(range(100, 1000))
  shuffle(matriculas)
  while len(matriculas) > 0:
    yield matriculas.pop(0)

proxima_matricula = matricula_gen()
    
def perguntar():  
  return input(menu).upper()
    
def numero_de_matricula():
  return next(proxima_matricula)

def inserir_dados(dicionario):
  try:
    dicionario[numero_de_matricula()] = [
      input('Digite o login: ').upper(),
      input('Digite o nome: ').upper(),
      input('Digite a última data de acesso: '),
      input('Digite a última estação acessada: ').upper()]
  except StopIteration:
    print(""As matriculas estão esgotadas."")
    return False
  return True

usuarios = {}
while True:
  opcao = perguntar()
  if opcao == 'I':
    if inserir_dados(usuarios):
      print('Usuário cadastrado com sucesso. ')
    else:
      print('Usuário não pode ser cadastrado. ')
  elif opcao == 'P':
     pass
  elif opcao == 'E':
     pass
  elif opcao == 'L':
     pass
  else:
    print('Opção inválida.')

","
            1
        ",,,"['\npython', 'funções', 'random', 'dicionário\n']"
505097,"módulo keyboard python: Supress = True/False, pra que serve?","
Olá estava testando o módulo ""keyboard"" no python e não encontrei uma boa explicação nem na documentação do módulo sobre um parâmetro (se eu estiver errado me corrijam) chamado ""Supress"" em algumas funções do programa, como por exemplo:
add_hotkey(hotkey, callback, args=(), suppress=False, timeout=1, trigger_on_release=False)
""suppress defines if successful triggers should block the keys from being
sent to other programs."" - Essa é a explicação que o HELP do programa dá.
Mas na prática, o que significa isso? Imaginei que era pra impedir que comandos fossem lidos fora do terminal mas não parece que esse é o caso.
",,,,,['\npython\n']
505088,Programa executa normalmente porem tem momentos que para no meio da execução e nao sai do lugar,"
Este programa é para sortear numeros para a mega sena. Consegui o resultado que queria, mas tem momentos que o programa para ou no meio ou no inicio da execução.
O usuario coloca a quantidade de palpites que ele quer. Mais o problema que estou tendo é que se o usuario pede 10 palpites, as vezes executa todos, mais tem vezes que nao, e ele nao apresenta erros.
from random import randint
from time import sleep
lista = [[]]
num = 0
cont = 0
print('=' * 30)
print('      JOGA NA MEGA SENA')
print('=' * 30)
quantos = int(input('Qual a quantidade de palpites: '))
print(f'===== Sorteando {quantos} Jogos =====')
while quantos != 0:
    quantos -= 1
    cont += 1
    for i in range(0, 6):
        num = randint(1, 60)
        if num not in lista[0]:
            lista[0].append(num)
        else:
            while num in lista[0]:
                num = randint(1, 60)
                lista[0].append(num)
        if i == 5:
            lista[0].sort()
            print(f'Jogo {cont}:{lista[0]}')
            sleep(1)
            for l in range(0, 6):
                lista[0].pop()


No caso  estou usando lista dentro de lista por conta de exercicios do curso. Se alguem puder me ajudar nisso fico grato.
","
O problema está na sua lógica para não repetir os valores:
num = randint(1, 60)
if num not in lista[0]:
    lista[0].append(num)
else:
    while num in lista[0]:
        num = randint(1, 60)
        lista[0].append(num)

A ideia aqui é adicionar o num apenas se ele ainda não está em lista[0], porém o seu while definirá um laço infinito, visto que a condição while num in lista[0] sempre será verdadeira já que você sempre adiciona num em lista[0].
Você pode simplificar essa lógica fazendo:
num = randint(1, 60)
while num in lista[0]:
    num = randint(1, 60)
lista[0].append(0)

Ou seja, sorteia um valor, enquanto ele estiver em lista[0] sorteia um novo valor. Adiciona o valor em lista[0] apenas quando o laço finalizar.
Alterando isso seu código já funcionará.
Alternativa
Você pode usar a função random.sample para simplificar o seu código. Ele já irá retornar um conjunto de valores únicos sorteados do seu conjunto.
from random import sample

quantos = int(input('Qual a quantidade de palpites: '))

for i in range(quantos):
    print( sorted(sample(range(1, 61), 6)) )
    #                    +----------+  |
    #                          |       |
    #             Conjunto de valores  |
    #                                  +-- Número de valores sorteados

Veja funcionando no Ideone
","
            1
        ",,,"['\npython', 'python-3.x\n']"
505066,Conflito banco sqlite ao realizar o merge no git,"
Estou trabalhando com outra pessoa num projeto Django e ela é dona do repositório principal. Eu tenho um fork desse repositório e quero atualizá-lo com o original.
Criei o upstream: git remote add upstream <endereço-do-repositorio.git>
Depois: git fetch upstream
Até aí correu bem, mas na hora de mergear (git merge upstream/master) apresentou o erro:
warning: Cannot merge binary files: db.sqlite3 (HEAD vs. upstream/master)
Unlink of file 'db.sqlite3' failed. Should I try again? (y/n) n
error: failed to create path 'db.sqlite3': perhaps a D/F conflict?
Auto-merging db.sqlite3
CONFLICT (content): Merge conflict in db.sqlite3
Automatic merge failed; fix conflicts and then commit the result.

Eu entendi que o problema são as divergências do meu banco com o da outra pessoa, mas como podemos resolver pra conseguir trabalhar em equipe sem causar interferências no projeto principal? Obrigada.
","
O Git está tentando fazer o versionamento do arquivo de banco de dados, um binário, e então gerando um conflito que ele não consegue resolver de forma fácil (e muito menos segura) e por este, e outros motivos, não deve ser versionado no projeto. E no caso do Django o histórico de alterações do banco de dados já será armazenado com os arquivos models.py como também nas migrations.
Solução para o seu problema, remover o db.sqlite3 do repositório
git rm --cached db.sqlite3

O --cached diz para o Git só remover do sistema de versionamento e não apagar o arquivo propriamente dito.
Também é recomendável acrescentar o arquivo no .gitignore:
echo 'db.sqlite3' >> .gitignore

Para que ninguém o coloque de volta no projeto e, daí, enviar as alterações:
git add .gitignore
git commit -m ""Remove o 'db.slite3' do repositório""

E aqui há uma recomendação, o pessoal precisará renomear o db.sqlite3 antes de atualizar ou receberão algo como a mensagem:
error: The following untracked working tree files would be overwritten by checkout:
    db.sqlite3
Please move or remove them before you switch branches.

Mas aí é renomear o arquivo, atualizar o repositório e voltar o nome para db.sqlite3.
E havendo a necessidade de fazer um backup dos dados do Django dê uma olhada nos comandos ""dumpdata"" e ""loaddata"" do manage.py.
","
            1
        ",,,"['\npython', 'django', 'git', 'sqlite\n']"
505061,Como acessar uma pasta compartilhada na rede com senha no windows usando python,"
Tenho um programa feito em python que acessa minha impressora usb e então mando ela imprimir algo, estou tentando fazer o meu programa acessar essa impressora conectada em outro computador compartilhando-a na rede, entretanto quando tento dá permissão negada, muito provavelmente, pq o computador que ele está tentando se conectar tem senha, então teria como eu adicionar as credenciais do computador para dá essa permissão tudo pelo python?
from escpos.printer import File

print(""Teste"")
porta  = ""\\\\192.168.0.153\\epson""
t20 = File(porta)
t20.set(align='center')
t20.text(""Ticket\n"")
t20.barcode(""978020137962"", 'EAN13', 70, 3, '', '')
t20.cut()

",,,,,"['\npython', 'windows\n']"
505056,Pandas Dataframe - Como fazer para usar um valor anterior que não seja NA para calculo,"
Tendo um dataframe como o que segue de exemplo:
df = pd.DataFrame([['A',1,100],['B',2,None],['C',3,None],['D',4,182],['E',5,None]], columns=['A','B','C'])
   A  B      C
0  A  1  100.0
1  B  2    NaN
2  C  3    NaN
3  D  4  182.0
4  E  5    NaN

Eu gostaria de calcular, sem usar o apply, a diferença da coluna 'C', da linha 3 para a linha 0.
Detalhe é que não é fixo esse espaço entre linhas com NaN, então não consigo utilizar o df.C.shift(2) por exemplo.
","
Use a função diff() para calcular a diferença entre linhas. Como os NaN devem ser ignorados, basta removê-los antes com df[~df['C'].isnull()]:
>>> df[~df['C'].isnull()]['C'].diff()
0     NaN
3    82.0
Name: C, dtype: float64

Se quiser juntar ao df original, basta fazer um pd.merge pelo index:
diff_series = df[~df['C'].isnull()]['C'].diff()
diff_series.name = 'C diff'
pd.merge(
    df,
    diff_series,
    left_index=True,
    right_index=True,
    how='left'
)

E o resultado será:
    A   B   C      C diff
0   A   1   100.0  NaN
1   B   2   NaN    NaN
2   C   3   NaN    NaN
3   D   4   182.0  82.0
4   E   5   NaN    NaN

","
            1
        ","
Sem usar ""apply"" fica ineficiente - basicamente você tem que olhar o conteúdo de célula por célula da coluna, subindo desde o ""3"". Dá para usar math.isnan para testar se o valor é nan.
Uma função para isso usando um for e if explícitos poderia ser:

def diff_first_previous_valid(series, index):
    for value in series[index - 1::-1]:
        if not math.isnan(value):
            return series[index] - value
    raise ValueError(""No previous valid value"")

E, usando isso interativamente:
In [241]: diff_first_previous_valid(df[""C""], 3)                                                                                                                                    
Out[241]: 82.0

Usando apply, o jeito pode ser criar uma coluna intermediária - que duplique cada valor para baixo se o próximo valor for NaN -
no caso precisamos de uma funçãozinha também, para ""esticar"" os valores válidos para baixo.
Este ""approach"" é melhor se você vai repetir a operação várias (=algumas dezenas) de vezes na mesma coluna - senão, buscar o número em cada operação é melhor:

def fill_nans(col, first=0):
    previous_val = first
    result = []
    for v in col:
        if math.isnan(v):
            result.append(previous_val)
        else:
            result.append(v)
            previous_val = v
    return result

In [245]: x = fill_nans(df[""C""])                                                                                                                                                   

In [246]: x[3] - x[2]                                                                                                                                                              
Out[246]: 82.0

","
            0
        ","['\npython', 'pandas', 'numpy\n']"
505030,Como fazer classes com funções multi-nivel?,"
Estou desenvolvendo um código para o seguinte problema:
Eu tenho uma série de experimentos a serem feitas. Para cada experimento, tenho que fazer diferentes cálculos (que eu chamei de beta, dinâmico e estático no exemplo abaixo) e plotar diferentes gráficos.
Naturalmente, eu pensei em fazer algo assim:
class experiment:
    
    def __init__(self,a,b,c):
        
        self.a=a
        self.b=b
        self.c=c
        
    def beta(self):
        
        def calculate(self):
            
            return self.a+self.b
        
        def plot(self):
            pass
        
    def static(self):
        
        def calculate(self):
            
            return self.a+self.b+self.c
        
        def plot(self):
            pass
        
    def dinamic(self):
        
        def calculate(self):
            
            return self.a+self.b*self.c
        
        def plot(self):
            pass        

Meu objetivo é que fosse possível chamar a função com um comando do tipo exp.beta.calculate() e exp.dinamic.plot(), por exemplo, mas não está funcionando como eu queria. Dessa forma como eu fiz dá os seguintes erros:
teste.beta.calculate()
AttributeError: 'function' object has no attribute 'calculate'

teste.beta().calculate()
AttributeError: 'NoneType' object has no attribute 'calculate'

A dúvida é: como que eu faço para conseguir escrever códigos que tenham múltiplos níveis como esses que eu estou tentando?
P.S.: Eu já tentei fazer usando herança múltipla mas também não funciona do jeito que eu pretendo, pois eu teria que ficar instanciando o mesmo experimento várias vezes.
P.P.S.: Desculpe se o título ficou inapropriado, mas é que eu não tenho ideia do ""nome técnico"" para essa dúvida.
Obrigado.
","
Não estou reproduzindo tudo que está no seu exemplo, mas acho que dá para ter uma ideia.
Definindo Beta
>>> class Beta:
...     def __init__(self, a, b):
...         self.a = a
...         self.b = b
...     def calculate(self):
...         return self.a + self.b

Definindo Experiment
>>> class Experiment:
...     def __init__(self, a, b, c):
...         self.a = a
...         self.b = b
...         self.c = c
...         self.beta = Beta(self.a, self.b)
...

Executando
>>> e = Experiment(1,2,3)

>>> e.beta.calculate()
3

","
            1
        ",,,"['\npython', 'python-3.x\n']"
504987,Intersecção de palavras com dicionários em Python,"
Olá!
No livro do Wendel Melo, Introdução ao Universo da Programação com Python, tentei realizar o último exercício, mas não estou conseguindo.
Enunciado:
Faça um programa que leia três strings do usuário e liste cada palavra
que apareça ao menos uma vez em uma das strings. Cada palavra só
deve ser listada uma única vez, e junto a ela os textos em que a mesma
aparece. Seu programa deve contemplar uma função que receba as strings
lidas e retorne um dicionario onda as chaves são compostas pelas palavras
e os itens são conjuntos indicando os textos em que cada chave (palavra)
aparece.
Exemplo:

Eu fiz este código, ele apresenta os respectivos itens do texto1, texto2 e texto3, porém eu não sei como seguir, porque as palavras se repetem ao decorrer do código. Creio que uma boa solução seria utilizando o intersection, método dos conjuntos, em alguma parte do código, porém eu não sei como transformar essa interseção nas palavras texto1, texto2 e texto3, pois o método só retornará o elemento da interseção e não o conjunto onde ele se encontra. Desde já, agradeço quem me ajudar.
def tDicionario(texto1, texto2, texto3):
    palavras = {}
    
    
    for palavra in texto1:
        print('{}: '.format(palavra))
        
    for palavra in texto2:
        print('{}: '.format(palavra))
        
    for palavra in texto3:
        print('{}: '.format(palavra))
    
    
if __name__ == '__main__':
    
    texto1 = input('Entre com o texto 1: ').split()
    texto2 = input('Entre com o texto 2: ').split()
    texto3 = input('Entre com o texto 3: ').split()
    
    print('Listagem de palavras: ')
    print(tDicionario(texto1, texto2, texto3)) 


","
A forma mais fácil é usando um dicionário em Python onde cada uma de suas chaves representa uma palavra, e o seu valor associado é uma lista dos números dos textos em que uma dada palavra aparece. Utilizar conjuntos também seria viável, mas acredito ser mais simples de seguir a lógica do programa dessa forma.
Também fica mais simples se você pedir o input e logo em seguida colocar os dados pra dentro do dicionário, ao invés de pedir os inputs separadamente. Se você fizer isso dentro de um loop, fica fácil de checar se a palavra já consta no dicionário, ou se ela já apareceu mais de uma vez na mesma frase. Isso inclusive trivializa a generalização do seu programa: dá para pedir um número arbitrário de frases pro usuário apenas modificando uma linha.
Veja o exemplo a seguir:
# Iniciamos com o dicionário vazio
resultado = {}

# Número de frases a pedir para o usuário
numero_de_frases = 3

for n in range(numero_de_frases):
    # n começa de 0, adicionamos 1 e convertemos 
    # para string para simplificar nossa vida 
    num_texto = str(n + 1)
    
    # Pega input do usuário
    texto = input(f'Entre com o texto {num_texto}: ')
    lista_de_palavras = texto.split()
    
    # Itera sobre lista de palavras
    for palavra in lista_de_palavras:
        # Se a palavra é inédita no dicionário, cria uma nova lista
        if palavra not in resultado:
            resultado[palavra] = list()
        # Pega a lista de números dos textos onde a palavra aparece
        lista_num_textos = resultado[palavra]
        # Se a palavra já apareceu no texto, pulamos a linha abaixo
        # (evita entradas repetidas quando a palavra está duplicada)
        if num_texto not in lista_num_textos:
            lista_num_textos.append(num_texto)

# Itera sobre dicionário e mostra os resultados
for palavra, lista_num_textos in resultado.items():
    string_num_textos = ', '.join(lista_num_textos)
    print(f'A palavra ""{palavra}"" aparece no(s) texto(s): {string_num_textos}')

","
            2
        ","
De acordo com a terceira frase do enunciado da questão...

Seu programa deve contemplar uma função que receba as strings lidas e retorne um dicionário onda as chaves são compostas pelas palavras e os itens são conjuntos indicando os textos em que cada chave (palavra) aparece.

...podemos implementar uma função para resolver a questão.
Para montarmos a referida função podemos utilizar algumas lógicas. Neste caso, podemos utilizar a seguinte lógica:

Capturar os três textos sugeridos e armazena-los em uma lista;
Enviar esta lista como parâmetro para a função que montará o dicionário;
Montar o dicionário;
Exibir os resultados idênticos ao sugerido na questão.

Pois bem, um dos códigos possíveis para esta lógica é:
def localiza_palavra(lista_textos):
    o = range(1, len(lista_textos) + 1)
    dicionario = dict()
    for texto, posicao in zip(lista_textos, o):
        for palavra in texto:
            if palavra not in dicionario:
                dicionario[palavra] = list()
            r = dicionario[palavra]
            if posicao not in r:
                r.append(posicao)
    return dicionario


if __name__ == '__main__':
    lista = list()
    for i in range(1, 4):
        lista.append(input(f'Entre com o texto {i}: ').split())

    resultado = localiza_palavra(lista)

    print('Listagem de palavras:')
    for key, item in resultado.items():
        print(f'{f""{key}:"":<10}', *[f'texto {x},' for x in item])

Observe que ao executarmos o código, devemos digitar os três textos. Esses textos são capturados como lista e, em seguida, armazenados em outra lista.
Depois disso esta lista será enviada como parâmetro para a função localiza_palavra().
Chagando lá o primeiro bloco for, com ajuda da função zip(), percorrerá simultaneamente as listas lista_textos - formada por todos os textos digitados - e o - formada pelas ordens dos textos.
Em seguida o segundo bloco for percorrerá cada palavra do texto atual e, com ajuda do bloco if será verificado se a respectiva palavra não está contida no dicionário. Caso a palavra não esteja no dicionário, o dicionário receberá como chave a respectiva palavra cujo valor é uma lista.
Esta lista será montada com as posições dos respectivos textos.
O segundo bloco if verificará se a posicao atual não pertence à r - lista formada pelas posições. Caso, a posição não se encontre em r, a posição será adicionada.
Terminada todas as interações possíveis, os resultados serão exibidos.
A exibição dos valores é realizada pelo último bloco for do código.
A última linha de código...
print(f'{f""{key}:"":<10}', *[f'texto {x},' for x in item])

...executa o seguinte:

Exibe o valor da chave (key) acompanhada de "" : "" no canto esquerdo de um total de 10 espaços;
Exibe o desempacotamento de um lista montada por list comrehension, onde cada elemento  é formado pela palavra texto seguida do número de ordem do texto.

","
            0
        ",['\npython\n']
504985,Como fazer um print formatado? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como fazer interpolação de string em Python?

                                (2 respostas)
                            


O que utilizar para formatar uma string, % ou format?

                                (1 resposta)
                            


Qual o nome desta estrutura em Python?

                                (2 respostas)
                            


Como concatenar multiplas Strings em Python?

                                (2 respostas)
                            

Fechada há 12 meses.



Olá. Desculpa a pergunta tão básica, mas comecei a mexer com python tem 1 semana.
Estou escrevendo um programa que grava os votos de candidatos em um arquivo binário. Mas, na hora de exibir não estou encontrando uma forma de deixar ""bonito"". Gostaria que aparecesse apenas o Nome e a Quantidade de votos. Segue código:
arquivo = open('C:\Users\Cassio\Documents\Python Programs\eleicao.dat', 'rb')
    print ('Os votos dos candidatos serao exibidos a seguir: ')
    for x in range(cont):
        aux = pickle.load(arquivo)
        print('O candidato(a): ', aux['NOME'], 'tem: ', aux['NUM_VOTOS'], 'votos.')
    arquivo.close()

Segue a saída do código:
Os votos dos candidatos serao exibidos a seguir: 
('O candidato(a): ', 'CASSIO', 'tem: ', 50, 'votos.')

Gostaria que fosse exibido sem as aspas e parenteses. Desde já agradeço.
EDIT: consegui resolver de uma forma meio ""grotesca"", mas que funciona. Segue código:
print'Candidato(a): '+aux['NOME']+' - '+str(aux['NUM_VOTOS'])+' votos\n'

Saída:
Candidato(a): CASSIO - 300 votos

","
Poderia utilizar a função str.format (retro-compatível com python 2.6+).
print('O candidato(a): {} tem {} votos.'.format(aux['NOME'], aux['NUM_VOTOS']))

Uma versão compatível apenas para (Python 3.6+) seria utilizando a sintaxe de f-strings em python:
print(f'O candidato(a): {aux[""NOME""]} tem {aux[""NUM_VOTOS""]} votos.')

","
            0
        ",,,"['\npython', 'python-3.x', 'python-2.7\n']"
504911,Resultado de operador bitwise em Python,"
Por que o valor de ~True é -2 e o de ~False é -1?
O equivalente operador lógico not, em not True, resulta em False e vice-versa.
","
Faça:
print(~1)
print(~0)

Dá o mesmo, certo? Afinal True vale 1 e False vale 0. Portanto ele aplicou a operação de complemento nesses números quando está usando os literais booleanos.
O operador de complemento inverte os bits do número, todos os bits existentes mas compensando com o que se chama complemento, ou como se costuma aprender na escola, o ""vai um"". Ele não troca o sinal, ou inverte o número por algum critério, ele inverte o bits que compõe o número, até porque para todos efeitos números no computador são apenas sequência de bits.
Então quando tem um bit 0 ele vira 1, mas quando o bit é 1 ele vira 0 e vai um, portanto ele muda o bit de maior grandeza em seguida, então deve virar 10, que transformando em decimal dá 2.
A conversão ocorre inclusive com o bit do sinal se é positivo ou negativo, e o que era positivo vira negativo.
Então o 0 vira -1, e o 1 vira -2 (-10 em binário).
A fórmula em decimal mesmo para achar o valor correto é -(valor + 1).
Tente isto para ver em binário:
print(bin(1))
print(bin(0))
print(bin(~1))
print(bin(~0))

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
O operador de complemento não é o mesmo do operador relacional de negação, então os resultados são diferentes. Em um valor booleano o normal é usar o operador de negação que dá o resultado esperado e já conhecido pelo AP.
Python é uma linguagem de tipagem forte, pero no mucho, tem exceções, caso contrário essa operação nem seria possível.
","
            2
        ",,,"['\npython', 'operadores', 'bitwise\n']"
504910,"Desejo saber como mostrar, para o usuário, Sim ou Não no lugar de True ou False, respectivamente","
Abaixo está um exemplo do que estou tentando fazer:
lm = input ('Digite uma letra ')
print ('essa é uma letra minúscula? {}' .format(lm.islower()))

Já tentei colocar True = Sim e False = Não.
","
Tem que processar isso condicionalmente e apresentar o que deseja. O resultado de um booleano não foi feito para ser apresentado a não ser em circunstâncias muitos específicas.
lm = input ('Digite uma letra ')
print('essa é uma letra minúscula? {}'.format('Sim' if lm.islower() else 'Não'))

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
Pode ver mais sobre a expressão com operador condicional (que alguns chama de ternário).
Se for o que condicionou ele pega o primeiro resultado antes do if, caso contrário pega o resultado após o else, e o resultado de toda essa expressão é que será impressa.
Você pode usar f-strings também, apenas para modernizar.
","
            1
        ",,,"['\npython', 'python-3.x', 'string', 'booleano\n']"
504893,Select apenas retorna resultado no terminal,"
Estou com dificuldade em entender o porque que o código abaixo apenas retorna resultado quando executado no terminal.
Pretendo retornar hash do últido id inserido na base de dados
connection = psycopg2.connect(""dbname=vone"")
cursor = connection.cursor()
SQL = """"""
  SELECT hash
  FROM pos_order
  WHERE id = ( SELECT max(id) FROM pos_order );""""""
cursor.execute(SQL)
hash = cursor.fetchone()[0]

Quando executo o códido dentro de uma função, o método cursor.fetchone() retorna none.
","
Acredito que o problema esteja em obter a conexão, pois como você mesmo afirmou, a consulta está funcionado quando consulta por meio do terminal.
Para solucionar:
Altere a forma de conexão informando os parâmetros necessários.
import psycopg2
connection = psycopg2.connect(""dbname='vone' user='postgres' host='localhost' password='123456'"")
print(connection)
cursor = connection.cursor()
SQL = """"""
  SELECT hash
  FROM pos_order
  WHERE id = ( SELECT max(id) FROM pos_order )""""""
cursor.execute(SQL)
hash = cursor.fetchone()[0]
print(hash)

Para fins de visualização, adicionei dois prints:
print(connection)
...
print(hash)

","
            0
        ",,,"['\npython', 'postgresql', 'select', 'psql\n']"
504879,Pra que serve a função breakpoint,"
Estou me aprofundando em python, e como um bom iniciante curioso estou pesquisando as funções já presentes no python sem o uso de nenhuma biblioteca, quando me deparo com a função breakpoint().
Não entendi muito qual a função dela em si, já que a linguagem do site oficial é muito formal e eu ainda não tenho a sagacidade de entender alguns termos...
","
A função embutida breakpoint() chama o Depurador de Código-Fonte Interativo Python.
Esse depurador possui como características:

Suporte a definição de pontos de interrupção condicionais e de passagem única na fonte.
Inspeção de stack frame.
Listagem de código-fonte.
Avaliação de código Python arbitrário no contexto de qualquer stack frame.

Executando o exemplo:
a = ""teste""
breakpoint()
print(a)

Quando o interpretador encontrar a função breakpoint() a linha de comando mudará para  o shell do depurador de código-fonte interativo Python(Pdb)
> /home/runner/2608v0dh5c5/main.py(3)<module>()
-> print(a)
(Pdb) ▉

Para saber a lista de comandos disponíveis digite nessa linha de comando h ou help:
> /home/runner/2608v0dh5c5/main.py(3)<module>()
-> print(a)
(Pdb) help

Documented commands (type help <topic>):
========================================
EOF    c          d        h         list      q        rv       undisplay
a      cl         debug    help      ll        quit     s        unt      
alias  clear      disable  ignore    longlist  r        source   until    
args   commands   display  interact  n         restart  step     up       
b      condition  down     j         next      return   tbreak   w        
break  cont       enable   jump      p         retval   u        whatis   
bt     continue   exit     l         pp        run      unalias  where    

Miscellaneous help topics:
==========================
exec  pdb

(Pdb) ▉

Para obter uma descrição de um comando em específico digite help <nome_do_comando>:
(Pdb) help next
n(ext)
        Continue execution until the next line in the current function
        is reached or it returns.
(Pdb) ▉

Os comandos elementares são:

p expressão : Avalia a expressão expressão no contexto atual e imprima seu valor. Exemplo:

(Pdb) p a
'teste'
(Pdb) ▉


whatis expressão : Exibe o tipo da expressão. Exemplo:

(Pdb) whatis a
<class 'str'>
(Pdb) ▉


!declaração : Executa uma declaração de uma linha. Exemplo:

(Pdb) !a = ""não é mais um teste""
(Pdb) p a
'não é mais um teste'
(Pdb) ▉


next : Continua a execução até que a próxima linha na função atual seja atingida ou ela retorne. Exemplo:

(Pdb) next
não é mais um teste
--Return--
> /home/runner/2608v0dh5c5/main.py(3)<module>()->None
-> print(a)
(Pdb) ▉

Uma descrição completa dos comandos disponíveis no depurador de código-fonte interativo Python está  disponível na documentação online.
","
            5
        ",,,"['\npython', 'funções\n']"
504838,Vizualizar filtros convolucionais no tensorflow,"
Estou tentando vizualizar os filtros de uma rede neural e não estou conseguindo entender como exibir os filtros como imagens.
No momento estou usando a base CIFAR10 (imagens coloridas 32x32).
Estou usando essas bibliotecas
import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Activation, Flatten
from tensorflow.keras.layers import Conv2D, MaxPooling2D, BatchNormalization
from tensorflow.keras import layers, models, utils

Essa é a rede de teste
model = models.Sequential()
model.add(layers.Conv2D(64, (10, 10), activation='relu', input_shape=(X.shape[1:])))
model.add(layers.MaxPooling2D((2, 2)))

model.add(layers.Conv2D(16, (6, 6), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))

model.add( layers.Flatten( ) )

model.add( layers.Dense(128, activation='relu') )
model.add( layers.Dense(len(CATEGORIES) , activation='softmax') )

Com esse codigo eu retorno os filtros e mostro as dimensões deles
k=0
for layer in model.layers:

    if 'conv' in layer.name: 

        filter_, bias_= layer.get_weights()

        f_min, f_max = filter_.min(), filter_.max()
        filter_ = (filter_ - f_min) / (f_max - f_min)

        print('Filtros da {}° camada'.format(k+1))
        print('\n')
        print(filter_.shape)
        print('\n')

    k=k+1

Saida
Filtros da 1° camada
(10, 10, 3, 64)
Filtros da 3° camada
(6, 6, 64, 16)
A primeira camada eu consigo, mais as outras eu não entendi como funcionam as dimensões delas
Codigo para exibir os filtros (que so funciona na primeira camada)
k=0
for layer in model.layers:

    if 'conv' in layer.name: 

        fig= plt.figure(figsize=(10,10))

        filter_, bias_= layer.get_weights()

        f_min, f_max = filter_.min(), filter_.max()
        filter_ = (filter_ - f_min) / (f_max - f_min)

        print('Filtros da {}° camada'.format(k+1))
        
        for i in range(filter_.shape[3]):

            p = filter_[:,:,:,i]

            ax = fig.add_subplot(8, 8, i+1)
            ax.imshow(p)

        plt.show()
    k=k+1

","
No Keras, os filtros de uma camada convolucional tem a seguinte formatação: (kernel_size, kernel_size, channels_in, channels_out). Aqui explico um pouco o que cada dimensão do tensor representa:

kernel_size. Tamanho do filtro (3x3, 5x5, 7x7, etc),
channels_in. Número de canais do tensor de entrada da camada convolucional. Fica fácil visualizar da seguinte maneira. Supõe que a tua entrada é uma imagem em tons de cinza (portanto, 1 canal), então o teu tensor vai ser (kenel_size, kernel_size, 1, channels_out).
channels_out. Número de canais do tensor de saída, ou número de filtros.

Pro caso da primeira camada convolucional, é fácil de visualizar: você só precisa mostrar cada filtro como sendo uma imagem (de tamanho kernel_size x kernel_size). Um exeplo disso pode ser encontrado nesse notebook colab, onde cada filtro é visualizado como uma imagem usando a função imshow da biblioteca matplotlib. Para mais camadas, ou com mais canais de cores, a análise fica um pouco mais complicada. Esse post aqui (em inglês) discute isso de maneira aprofundada.
","
            0
        ",,,"['\npython', 'imagem', 'redes-neurais', 'tensorflow', 'keras\n']"
504820,np.savetxt baixa um arquivo desformatado ... (problema com formatação),"
Estou editando um código que agrupa alguns valores vindos de donwloads de HTML e os guarda em uma lista denominada column_b. Junto com a column_a (uma lista de valores já definidos), quero fazer um csv e baixá-lo.
Listas Criadas
column_a = [user1,user2,user3,user4,user5,user6,user7,user8,user9,user10,user11,user12,user13,user14,user15,user16,user17]


column_b = [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,r]


Agrupando as listas em um arquivo por np.savetxt:
archive = np.savetxt('instaproject.csv',np.c_[column_a,column_b], delimiter = '@', fmt = '%s %s')

from google.colab import files

files.download('instaproject.csv')

estou achando muito duvidosa essa formatação do np.savetxt que inseri, mas não achei nada que divergisse disso no diretório da biblioteca numpy. A intenção é baixar o csv com uma lista em cada coluna, sem header mesmo.
Será que o problema está mesmo na formatação?
",,,,,"['\npython', 'numpy\n']"
504790,Quando é feito um slice os dados são copiados?,"
Quando eu faço assim:
a = [ 1, 2, 3]
b = a[1:]

b usará a mesma lista de a ou ele cria uma outra lista e copia os dados que são pertinentes? Se tiver muitos itens ficará lento?

Acontece até se eu não guardar em variável?
Se copia, tem alguma forma de fazer sem copiar?
Tem como demonstrar isso com alguma função ou biblioteca de Python?
Isso vale para outras formas de slice ou só para lista?

","
Análise
Podemos fazer algumas considerações iniciais para entender melhor o que acontece com o código apresentado.
Quando você faz sequence[start:stop:step], a parte entre colchetes funcionará como um açúcar sintático (extended indexing syntax) para a instanciação de um objeto do tipo slice. Ou seja, ao interpretar o código, o Python (interpretador) irá gerar o objeto slice(start, stop, step) e passá-lo para a sequência.
>>> sequence = [1, 2, 3, 4, 5]
>>> sequence[1:3]
[2, 3]
>>> sequence[slice(1, 3)]
[2, 3]
>>> sequence[1:3] == sequence[slice(1, 3)]
True

Outra consideração importante é que quando fazemos sequence[key], por baixo dos panos, o que será executado é sequence.__getitem__(key), pois o método chamado de dunder get item é o responsável por sobrescrever o operador de acesso a uma chave do objeto. Sendo o objeto em questão um list, podemos afirmar ainda que o código será equivalente à list.__getitem__(sequence, key), onde é chamado a função __getitem__ diretamente da classe list.
Por que isso importa?
Sabendo agora que quando é feito sequence[start:stop], o que é executado é list.__getitem__(sequence, slice(start, stop)), podemos então analisar como é a implementação da função __getitem__ dentro da classe list. É importante ressaltar aqui que o tipo list, no Python, é implementado em C, então o código a ser analisado será nessa linguagem, embora seja fácil de entendê-lo mesmo sem conhecer muito tal linguagem.
A implementação do objeto list pode ser encontrado no repositório original do Python (CPython, na verdade, que é o interpretador oficial da linguagem, implementado em C), em especial a função PyList_GetSlice que será executada:
PyObject *
PyList_GetSlice(PyObject *a, Py_ssize_t ilow, Py_ssize_t ihigh)
{
    if (!PyList_Check(a)) {
        PyErr_BadInternalCall();
        return NULL;
    }
    if (ilow < 0) {
        ilow = 0;
    }
    else if (ilow > Py_SIZE(a)) {
        ilow = Py_SIZE(a);
    }
    if (ihigh < ilow) {
        ihigh = ilow;
    }
    else if (ihigh > Py_SIZE(a)) {
        ihigh = Py_SIZE(a);
    }
    return list_slice((PyListObject *)a, ilow, ihigh);
}

Trecho de código retirado do repositório oficial, linhas 477 a 497
Em resumo, a função recebe como argumento o PyObject *a, que será a nossa sequence, e também os argumentos Py_ssize_t ilow e Py_ssize_t ihigh que são, respectivamente, o start e o stop. Nesta função é feita uma validação dos valores recebidos e feita a chamada de list_slice((PyListObject *)a, ilow, ihigh).
static PyObject *
list_slice(PyListObject *a, Py_ssize_t ilow, Py_ssize_t ihigh)
{
    PyListObject *np;
    PyObject **src, **dest;
    Py_ssize_t i, len;
    len = ihigh - ilow;
    np = (PyListObject *) list_new_prealloc(len);
    if (np == NULL)
        return NULL;

    src = a->ob_item + ilow;
    dest = np->ob_item;
    for (i = 0; i < len; i++) {
        PyObject *v = src[i];
        Py_INCREF(v);
        dest[i] = v;
    }
    Py_SET_SIZE(np, len);
    return (PyObject *)np;
}

Trecho de código retirado do repositório oficial, linhas 455 a 475
Valendo destacar deste código o seguinte:

Sabendo os valores de start e stop é possível determinar o tamanho da lista a ser retornada: len = ihigh - ilow;
Uma nova lista é definida, PyListObject *np, com a memória alocada, np = (PyListObject *) list_new_prealloc(len);
É feito um laço de repetição, for (i = 0; i < len; i++), em que é buscado o valor na sequência original, PyObject *v = src[i], e copiado na nova sequência, dest[i] = v;
A instrução Py_INCREF(v) é responsável por incrementar o número de referências apontadas para aquele objeto - objetos com zero referências são descartados da memória pelo garbage collector;
A função retornará a nova lista criada, return (PyObject *)np;

Perguntas

Utilizará a mesma lista ou copiará os dados que são pertinentes?

Copiará uma referência para aquele valor, como podemos ver em destaque no código em C:
for (i = 0; i < len; i++) {
    PyObject *v = src[i];
    Py_INCREF(v);
    dest[i] = v;
}

O valor a ser manipulado será um ponteiro, PyObject *v, então uma referência ao próprio valor, mas o valor em si continuará sendo o mesmo. Podemos perceber isso inclusive quando o tipo é mutável. Se eu possuir uma lista de listas, qualquer alteração que fizermos em uma sub-lista será refletida em qualquer lista criada a partir de um slice.
>>> a = [[1], [2]]
>>> b = a[1:]
>>> b
[[2]]
>>> a[1].append(2)  # Manipulando a lista original após o slice
>>> b
[[2, 2]]


Se tiver muitos itens ficará lento?

Depende de quanto é o ""muitos"", mas é difícil concluir isso. Dependerá ainda mais da configuração do seu computador, sistema operacional que está gerenciando a memória, etc. Com certeza tem um certo impacto, pois o Python precisará alocar memória para guardar esse novo objeto, mas se isso começar a inviabilizar a sua aplicação, é possível que tenha que cogitar outra linguagem.

Acontece até se eu não guardar em variável?

Sim. A execução de todo o processo comentado acontecerá independente se o resultado foi atribuído ou não. A diferença que quando você não atribuir, o Python perceberá que o objeto retornado possuirá zero referências apontadas para ele e o garbage collector fará o trabalho de ""limpar a sujeira"", liberando as memórias que foram alocadas e atualizando os contadores de referências de cada valor da lista.

Se copia, tem alguma forma de fazer sem copiar?

Se você não necessitar de todos os valores ao mesmo tempo, você pode otimizar a sua solução utilizando geradores.

Para que serve o Yield?
Como o Python trata o comando ""yield"" internamente?


Tem como demonstrar isso com alguma função ou biblioteca de Python?

Sim, vide análise da implementação em C estudada nesta resposta.

Isso vale para outras formas de slice ou só para lista?

Para os tipos que aceitam o slicing, acredito que o comportamento será o mesmo, incluindo lista, tupla e string. Obviamente que você definir os seus próprios tipos e sobrescrever o operador __getitem__ e definir a lógica que desejar para o slicing.
","
            5
        ","
Como foi dito nos comentários:

Quando você utiliza slice, você está fazendo uma cópia dessa lista, o mesmo comportamento funciona usando o copy() do Python.

Aqui um teste simples onde é tirada uma fatia(slice) de a e sua referência é atribuida em b:
a = [ 1, 2, 3]
b = a[1:]

print(""Antes da modificação a[1] = 'teste':"")
print(*b)
a[1] = ""teste""
print(""\nApós modificação a[1] = 'teste':"")
print(*b)
#Antes da modificação a[1] = 'teste':
#2 3

#Após modificação a[1] = 'teste':
#2 3

Ainda no mesmo comentário:

Para evitar esse comportamento você pode definir b = a para usar por referência.

Aqui um código de teste simples, não deve ser usado em ambiente de produção, onde é criado um objeto BasicListView descendente de collections.abc.Sequence que mantém uma referência para uma lista e cujo uma alteração na lista original é refletida na instancia de BasicListView:
#É implementação limitada e código serve apenas como ilustração
from collections.abc import Sequence

class BasicListView(Sequence):
  def __init__(self, seq, start=0, stop=None, step=1):
    self._seq = seq                                    #Guarda a referência a sequencia seq.
    self._start = start                                #Inicio da fatia.
    self._stop = len(seq)-1 if stop is None else stop  #Final da fatia.
    self._step = step                                  #O salto entre os elementos.

  #Essa função é abstrata na classe base deve ser implementada.
  def __len__(self):
    return (self._stop - self._start) // self._step

  #Essa função deve ser sobrescrita pois é ela que permite o objeto ser indexado.
  def __getitem__(self, key):
    k = self._step * key + self._start    
    return self._seq[k]

    
a = [ 1, 2, 3]
b = BasicListView(a,1,3)

print(""Antes da modificação a[1] = 'teste':"")
print(*b)
a[1] = ""teste""
print(""\nApós modificação a[1] = 'teste':"")
print(*b)
#Antes da modificação a[1] = 'teste':
#2 3

#Após modificação a[1] = 'teste':
#teste 3

Os dois exemplo no IdeOne
Respondendo suas perguntas:

Acontece até se eu não guardar em variável?

Para sequencias nativas sim. Toda vez que fatiar uma sequencia nativa será feita uma cópia superficial da sequencia original. O segundo exemplo mostra uma sequencia não nativa cujo o comportamento padrão foi alterado.

Se copia, tem alguma forma de fazer sem copiar?

Para sequencias nativas sim copia e sim tem fazer sem copiar, para isso trabalhe com referências. O segundo exemplo mostra uma sequencia não nativa cujo o comportamento padrão foi alterado.

Tem como demonstrar isso com alguma função ou biblioteca de Python?

Sim, foi demostrado nos dois exemplos.

Isso vale para outras formas de slice ou só para lista?

Isso é valido para toda sequência nativas. O segundo exemplo mostra uma sequencia não nativa cujo o comportamento padrão foi alterado.
","
            3
        ","['\npython', 'desempenho', 'memória', 'slice\n']"
504762,Usando LoginRequiredMixin com FormView de Login,"
Basicamente, tenho um FormView onde faço validações para logar usuários em minha plataforma, caso o resultado seja positivo, o mesmo é redirecionado para a URL /dashboard/, como mostra o código abaixo.
class EntrarView(FormView):
    template_name = 'entrar.html'
    form_class = FormEntrar
    success_url = '/dashboard/'

    def get_context_data(self, **kwargs):
        context = super(EntrarView, self).get_context_data(**kwargs)
        return context

    def form_valid(self, form):
        if str(self.request.method)=='POST':
            # validações
            login(self.request, usuario)
            return super().form_valid(form)

Esse redirecionamento está funcionando perfeitamente, no entanto, tenho várias Views que só podem ser acessadas se o usuário estiver logado. Para isso, estou usando o LoginRequiredMixin. Porém, ao realizar o login, ao invés do usuário ser redirecionado para o success_url do TemplateView (conforme segue exemplo abaixo), ele continua sendo redirecionado para o success_url do FormView.
class Carreiras_UsuarioView(LoginRequiredMixin, TemplateView):
    template_name = 'carreiras_usuario.html'
    login_url = '/entrar/'
    redirect_field_name = 'redirect_to'
    success_url = '/carreiras/'

No meu urls.py tenho:
from django.urls import path
from . import views

urlpatterns = [
    path('', views.IndexView.as_view(), name='index'),
    path('dashboard/', views.DashboardView.as_view(), name='dashboard'),
    path('entrar/', views.EntrarView.as_view(), name='entrar'),
    path('carreiras/', views.Carreiras_UsuarioView.as_view(), name='carreiras_usuario'),
]

Já tentei alterar o redirect_field_name para next e nextpage porém não obtive sucesso, assim como setar a success_url do TemplateView para reverse_lazy('core:carreiras_usuario') (o nome do meu app é ""core"").
Lembrando que a classe Carreiras_UsuarioView é apenas uma de várias outras views que quero atribuir esse mesmo comportamente, isto é, dependendo va View que ""chama"" o EntrarView, eu quero redirecionar o usuário para a sua respectiva URL.
","
Para fazer com que a view seja utilizada somente se o usuário estiver logado, veja abaixo:
Configure no settings
LOGIN_REDIRECT_URL = 'login_page/'
LOGOUT_REDIRECT_URL = '/'

Decore a view
from django.contrib.auth.decorators import login_required

@login_required()
def minha_view(request):
     # código aqui...

Para maiores detalhes, veja aqui
","
            0
        ",,,"['\npython', 'django', 'url', 'login\n']"
504736,Um exercício proposto em PYTHON de loop infinito,"
OLÁ, estou tentando resolver a questão abaixo, mas não consigo fazer funcionar o LOOP, já que o exercício pede que mesmo após escolher um tipo de média, a instrução volte pedindo infinitamente a mesma coisa:
***Implemente um script python com:

uma função que recebe três valores numéricos e um carácter por parâmetro .
se o carácter passado como argumento for 'A' ou 'a', a função retorna o cálculo da média aritmética dos valores numéricos
se o carácter passado como argumento for 'P' ou 'p', a função retorna o cálculo da média ponderada (pesos: 5, 3 e 2) dos valores numéricos;
e se o carácter passado como argumento for for 'H' ou 'h', a função retorna a média harmônica dos valores numéricos.
este script deve interagir com o usuário consultando os três valores e também qual tipo de média o usuário deseja calcular.
este script deve ser interativo, ou seja, ele deve consultar se o usuário deseja realizar um novo calculo ao final de cada execução e, caso a resposta seja afirmativa, repetir o processo.***


O meu código referente a questão acima:
    num1=float(input('Digite um primeiro número: ')) 
    num2=float(input('Digite um segundo número: ')) 
    num3=float(input('Digite um terceiro número: '))
        
        #FORMULAS DAS MEDIAS: 
    med_arit=((num1 + num2 + num3) / 3) 
    med_harm=((1/num1 + 1/num2 + 1/num3)/3) 
    med_pond=((num1*5 + num2*3 + num3*2) / 10)
        
    print('Os números inseridos respectivamente são: {:.0f}, {:.0f} e {:.0f}.'.format(num1,num2,num3)) print('================================', '\n')
        
    med=str(input('Agora para saber as MÉDIAS: 
\nARITMÉTICA, digite [A]; 
\nHARMÔNICA digite [H]'
\nPONDERADA digite [P]' 
\nDIGITE A LETRA DA MÉDIA DESEJADA: '))
        
        
        while True:
            try:
            if med in 'Aa':
                print('A MÉDIA ARITMÉTICA é igual a ', med_arit)
                break
            elif med in ""Hh"":
                print('A MÉDIA HARMÔNICA é igual a ', med_harm)
                break
            elif med in ""Pp"":
                print('A MÉDIA PONDERADA é igual a ',med_pond)
                break
            else:
                print(input('Voçê inseriu um valor errado, tente novamente: '))

","
Podemos criar uma função com os parâmetros do cálculo e criar uma condição para sair do programa no fim.
def media(num1, num2, num3, med):
    if med in 'Aa':
        med_arit=((num1 + num2 + num3) / 3) 
        return 'A MÉDIA ARITMÉTICA é igual a ' + str(med_arit)
    elif med in ""Hh"":
        med_harm=((1/num1 + 1/num2 + 1/num3)/3) 
        return 'A MÉDIA HARMÔNICA é igual a ' + str(med_harm)
    elif med in ""Pp"":
        med_pond=((num1*5 + num2*3 + num3*2) / 10)
        return 'A MÉDIA PONDERADA é igual a ' + str(med_pond)
    else:
        return 'Voçê inseriu um valor errado, tente novamente: '
    
med = """"
while med.lower() != ""n"":
    med=str(input('''Agora para saber as MÉDIAS: 
    \nARITMÉTICA, digite [A] 
    \nHARMÔNICA digite [H]
    \nPONDERADA digite [P]
    \nDIGITE A LETRA DESEJADA: '''))

    num1=float(input('Digite um primeiro número: ')) 
    num2=float(input('Digite um segundo número: ')) 
    num3=float(input('Digite um terceiro número: '))
    print('Os números inseridos respectivamente são: {:.0f}, {:.0f} e {:.0f}.'.format(num1,num2,num3)) 
    print('================================', '\n')

    print(media(num1, num2, num3, med))
    print('================================', '\n')
    med = input(""Deseja efetuar um novo cálculo? [S]im ou [N]ão: "")
    print('================================', '\n')

","
            0
        ","
Outra forma interessante para resolver esta questão é implementando uma classe englobando todas as médias que desejamos. Desta forma podemos implementar o seguinte código:
class Medias:
    def __init__(self, num1, num2, num3):
        self.v1, self.v2, self.v3 = num1, num2, num3

    def media_aritmetica(self):
        return (self.v1 + self.v2 + self.v3) / 3

    def media_ponderada(self):
        return ((self.v1 * 5) + (self.v2 * 3) + (self.v3 * 2)) / 10

    def media_harmonica(self):
        return (1 / self.v1 + 1 / self.v2 + 1 / self.v3) / 3


while True:
    numero_1 = float(input('Digite o primeiro valor: '))
    numero_2 = float(input('Digite o segundo valor: '))
    numero_3 = float(input('Digite o terceiro valor: '))

    medias = Medias(numero_1, numero_2, numero_3)

    while (me := input('Média Aritmética, Ponderada ou Harmônica? [A/P/H] ').upper()) \
            not in {'A', 'P', 'H'}:
        print('Valor INVÁLIDO!')

    if me == 'A':
        m_aritmetica = medias.media_aritmetica()
        print(f'A média aritmética é: {m_aritmetica:.2f}')
    elif me == 'P':
        m_ponderada = medias.media_ponderada()
        print(f'A média ponderada é: {m_ponderada:.2f}')
    else:
        m_harmonica = medias.media_harmonica()
        print(f'A média harmônica é: {m_harmonica:.2f}')

    while (resp := input('Desejas realizar outro cálculo? [S/N] ').upper()) not in {'S', 'N'}:
        print('Valor INVÁLIDO!')
    if resp == 'N':
        break

Observe que quando executamos o referido código devemos digitar cada um dos três valores e pressionar Enter. Em seguida será instanciada a classe Medias. Posteriormente, recebemos a seguinte mensagem:
Média Aritmética, Ponderada ou Harmônica? [A/P/H]

Nesse momento devemos escolher uma das médias sugeridas. Para isso, devemos digitar a primeira letra da média desejada. Em seguida, será verificado se a expressão atribuída à variável me corresponde a uma das três letras - A, P ou H. Se a expressão atribuída à variável me NÃO for uma dessas três letras, seremos novamente solicitado uma das opções. Caso contrário, será verificada qual letra foi digitada e, de acordo com a letra digitada, será chamado um método específico, pertencente à classe Medias.
Exemplo: Se a letra digitada for a ou A, será chamado o método media_aritmetica() e, consequentemente, será realizado o cálculo da média aritmética, sendo, posteriormente, exibido o resultado com duas casa decimais.
Tendo realizado o primeiro cálculo o script nos perguntará:
Desejas realizar outro cálculo? [S/N]

Nesse momento devemos digitar s ou S para SIM ou n ou N para NÃO.
Caso digitarmos s ou S o script será novamente executado nos solicitando novamente os três valores e, consequentemente o nova operação. Caso Digitarmos n ou N, o script encerra sua execução.
","
            0
        ","['\npython', 'loop', 'while\n']"
504710,XPATH de span dentro de div,"
Estou tentando pegar dados do site: Thing Verse, mas não obtenho sucesso.
Tentei por o código html aqui, mas ficaria muito grande...
De qualquer modo eu busco pelos Xpath e encontro os elementos que quero extrair, mas ao rodar o código python nada é retornado.
Aqui estão os Xpath:
//div[@class=""SearchResult__searchResultItem--c4VZk""]
//span[@class=""ThingCardHeader__cardNameWrapper--3xgAZ""]

Consigo encontrar de várias maneiras diferentes os elementos com Xpath, mas quando rodo o código não retorna nada.
O código:
import scrapy

class ThSpider(scrapy.Spider):

name = 'th'
start_urls = ['https://www.thingiverse.com/']

def parse(self, response):
    results = response.xpath('//div[@class=""SearchResult__searchResultItem--c4VZk""]')
    for result in results:
        yield{
            'title' : result.xpath('//span[@class=""ThingCardHeader__cardNameWrapper--3xgAZ""]/text()').get
        }
       

",,,,,"['\npython', 'python-3.x', 'scrapy\n']"
504639,Preciso unir varios arquivos do excel em um só dividido em pastas com python. Fiz desse método mas queria criar uma função:,"
Fiz essa função que recebe o diretório de destino e o mês que foi gerado os relatórios, queria fazer ela ficar menor utilizando um for que percorra essa lista:
ufv_name = ['CB1', 'CB2', 'CB3', 'GM1', 'IM1', 'JD2', 'PIU', 'STR'] #sigla das ufvs

Segue a função:
def unir(dir, mes):
    #IMPORTANDO OS RELATORIOS PARA UNIR EM UM SÓ
    CB1 = pd.read_excel('{}PR_CB1_{}.xlsx'.format(dir, mes))
    CB2 = pd.read_excel('{}PR_CB2_{}.xlsx'.format(dir, mes))
    CB3 = pd.read_excel('{}PR_CB3_{}.xlsx'.format(dir, mes))
    PIU = pd.read_excel('{}PR_PIU_{}.xlsx'.format(dir, mes))
    IM1 = pd.read_excel('{}PR_IM1_{}.xlsx'.format(dir, mes))
    STR = pd.read_excel('{}PR_STR_{}.xlsx'.format(dir, mes))
    JD2 = pd.read_excel('{}PR_JD2_{}.xlsx'.format(dir, mes))
    GM1 = pd.read_excel('{}PR_GM1_{}.xlsx'.format(dir, mes))

    with pd.ExcelWriter('{}Relatorio_total.xlsx'.format(dir), engine='xlsxwriter') as writer:
        CB1.to_excel(writer, sheet_name='CB1', index = False)
        CB2.to_excel(writer, sheet_name='CB2', index = False)
        CB3.to_excel(writer, sheet_name='CB3', index = False)
        PIU.to_excel(writer, sheet_name='PIU', index = False)
        IM1.to_excel(writer, sheet_name='IM1', index = False)
        STR.to_excel(writer, sheet_name='STR', index = False)
        JD2.to_excel(writer, sheet_name='JD2', index = False)
        GM1.to_excel(writer, sheet_name='GM1', index = False)

    print('Relatórios Unidos em um só arquivo')

Pode perceber que os relatorios importados tem sempre o mesmo padrão.
","
Espero que ajude você.
import pandas as pd

ufv_names = ['CB1','CB2','CB3']

def unir(dir, mes):
    files = [_load_file(f'{dir}PR_{name}_{mes}.xlsx') for name in ufv_names]
    names_files = list(zip(ufv_names, files))
    
    with pd.ExcelWriter('{}Relatorio_total.xlsx'.format(dir), engine='xlsxwriter') as writer:
        [_write_file(writer, f, name) for name, f in names_files]
        print('Relatórios Unidos em um só arquivo')

def _load_file(file):
    return pd.read_excel(file)

def _write_file(writer, file, name):
    file.to_excel(writer,sheet_name=name, index= False)

","
            0
        ","
Uma possível refatoração usando uma função parcial:
from functools import partial
import pandas as pd
 
ufv_name = ['CB1', 'CB2', 'CB3', 'GM1', 'IM1', 'JD2', 'PIU', 'STR']
 
def readxlsx(ufv, d, m):
  return (pd.read_excel(f'{d}PR_{ufv}_{m}.xlsx'), ufv)
 
def unir(dir, mes):
  f = partial(readxlsx, d=dir, m=mes)
  planilhas = list(map(f, ufv_name))
  with pd.ExcelWriter(f'{dir}Relatorio_total.xlsx', engine='xlsxwriter') as writer:
    for p in planilhas:
      p[0].to_excel(writer, sheet_name=p[1], index = False)

Uma função parcial é uma função criada a partir de outra função onde parte dos seus argumento estão previamente definidos. Em Python é disponibilizado o módulo no functools a função partial() para criar funções parciais.
A lógica do algoritmo é simples:

foi criada a readxlsx(ufv, d, m) que lê uma planilha no caminho f'{d}PR_{ufv}_{m}.xlsx' e a associa a ufv em uma tupla.
é criada uma função parcial f sobre readxlsx() fixando os d em dia e m em mes e deixando ufv como parâmetro vaiável.
então em planilhas = list(map(f, ufv_name)) é obtida uma lista a partir dum mapeamento entre cada elemento de ufv_name e uma respectiva planilha.
Então é só percorrer a lista e adicionar a cada planilha a arquivo Relatorio_total.xlsx.

","
            0
        ","['\npython', 'excel', 'pandas\n']"
504634,Quando uma function terminar a outra termina também multiprocessing funções assíncronas,"
Estou usando a biblioteca multiprocessing, rodando duas def ao mesmo tempo, porém quero que ao terminar uma das duas def a outra que ainda está executando também termine no meio do processo.
Exemplo:
from multiprocessing import Process

def a():
    while True:
        print('a')
        break
        
def b():
    while True:
        print('b')

if __name__ == '__main__':
    pA = Process(target=a)
    pB = Process(target=b)
    

Então... no código acima que jeito que faria para quando der o break na função a, consequentemente também terminasse a função b (que está se repetindo).
Agradeço Desde já
","
Se não há necessidade de termino imediato do processo pB é possível com o método terminate() sinalizar de um processo a outro que seja finalizado passando sua referência por meio dos parâmetros args ou kwargs do constructor da classe Process.
from multiprocessing import Process

#Parâmetro p é o processo que será finalizado ao termino dessa função.
def a(p):
    while True:
        print('a')            
        break
    p.terminate()             #Termina o processo p.
        
def b():
    while True:
        print('b')

#Troca a ordem de criação dos processos para que a referência pB fique disponível a pA no momento de sua criação.
pB = Process(target=b)                 
pA = Process(target=a,kwargs={""p"":pB})
pB.start()                     #pB é inicializado primeiro pois do contrário pA pode terminar antes de pB começar.
pA.start()
pA.join()
pB.join()

Infelizmente inverter o raciocínio para testar dentro de pB se o processo pA inda está vivo com is_alive() não funciona pois só o processo pai pode testar seus filhos:
#Esse código irá gerar erro...
from multiprocessing import Process

def a():
    while True:
        print('a')            
        break
      
def b(p):
    while p.is_alive():
        print('b')

          
pA = Process(target=a)
pB = Process(target=b, kwargs={""p"": pA})       
pA.start()
pB.start()
pA.join()
pB.join()

Process Process-2:
Traceback (most recent call last):
  File ""/usr/lib/python3.8/multiprocessing/process.py"", line 315, in _bootstrap
    self.run()
  File ""/usr/lib/python3.8/multiprocessing/process.py"", line 108, in run
    self._target(*self._args, **self._kwargs)
  File ""main.py"", line 9, in b
    while p.is_alive():
  File ""/usr/lib/python3.8/multiprocessing/process.py"", line 160, in is_alive
    assert self._parent_pid == os.getpid(), 'can only test a child process'
AssertionError: can only test a child process

Mas a verificação pode ser feita no processo principal onde tanto pA e pB são processos filhos:
from multiprocessing import Process

def a():
    i = 0
    while i < 100:
        print('a')
        i+=1
        
def b():
    while True:
        print('b')

pA = Process(target=a)
pB = Process(target=b)
pB.start()
pA.start()
while pA.is_alive():
  pass
pB.terminate()
pA.join()
pB.join()

","
            1
        ","
Neste seu caso eu usaria uma classe e consideraria uma variável interna da classe como parâmetro, faça o teste:
from multiprocessing import Process


class Classe:
    processar = True

    def a(self):
        while True:
            print('a')
            break

        self.processar = False

    def b(self):
        while self.processar is True:
            print('b')


if __name__ == '__main__':
    classe = Classe()
    pA = Process(target=classe .a)
    pB = Process(target=classe .b)

Segue abaixo um modelo do que uso pessoalmente:
import threading
import time


def run_thread(job_function):
    job_thread = threading.Thread(target=job_function)
    job_thread.start()


class Classe:
    processar = True

    def processar_a(self):
        for x in range(1, 100):
            print(""processar_a: {}"".format(str(x)))

        self.processar = False

    def processar_b(self):
        while self.processar is True:
            print(""processar_b"")


if __name__ == ""__main__"":
    classe = Classe()

    run_thread(job_function=classe.processar_a)
    run_thread(job_function=classe.processar_b)

    while classe.processar is True:
        time.sleep(3)

","
            1
        ","['\npython', 'python-3.x\n']"
504510,Armazenar valores obtidos no calculo da distancia de pontos em uma matriz,"
Estou dando os primeiros passos me python e  quero armazenar uma série de valores que obtive no cálculo de distância entre pontos numa matriz NxN para depois selecionar os valores de cada linha e estabelecer uma condição de valor limite, e armezenar os valores desse limite meu código ficou assim:
import numpy as np

n = int(input('numero de elementos = '))
print('-=' *30)
v =np.zeros(n)
X = np.zeros(n)
Y = np.zeros(n)
for i in range(n):
    X[i] = float(input('x ='))
    Y[i] = float(input('y ='))
print(X,Y)
print('-=' *30)

for i in range(0,n):
    for j in range(0,n):
        dist = (((X[i]-X[j])**2)+((Y[i]-Y[j])**2))**(0.5)
        print(f'[{dist}]', end='')
    print()

R=2
for dist in range(0,n):
    if dist<=R:
        mat_distancia = dist
    print(mat_distancia)

","
o método np.matrix() permite criar a matriz, depois podemos filtrar por condição dentro do limite definido.
m = []
for i in range(0,n):
    m.append([])
    for j in range(0,n):
        dist = (((X[i]-X[j])**2)+((Y[i]-Y[j])**2))**(0.5)
        m[i].append(dist)
        print(f'[{dist}]', end='')
    print()

M = np.matrix(m)
R=2
print(M[M < R])

","
            0
        ",,,['\npython\n']
504497,Imprimir todas as condições if,"
Queria um modo que quando o usuário digitasse a key = 4, todas as condições que eu atribui fossem impressas, tem algum modo ou eu teria que atribuir uma condição if e repetir tudo novamente?
import math
import sys

print()
print(""#"" * 51)
print(""Este programa calculará o SENO, COSSENO e TANGENTE."")
print(""#"" * 51)
print()

lista1 = [1,2,3,4,5]

a = int(input(""Para realizar os cálculos digite: \n\nSENO = 1 \nCOSSENO = 2 \nTANGENTE = 3 \nTODOS = 4 \nENCERRAR PROGRAMA = 5 \n\nDigite a seguir: ""))
print(""#"" * 51)
print()
 
while a not in lista1:
        print(""Ei, digite um dos números informados!"")
        print()
        a = int(input(""Para realizar os cálculos digite: \n\nSENO = 1 \nCOSSENO = 2 \nTANGENTE = 3 \nTODOS = 4 \nENCERRAR PROGRAMA = 5 \n\nDigite a seguir: ""))
        print(""#"" * 51)
        print()

if a == 1:
    co = float(input(""Digite o valor do CATETO OPOSTO: ""))
    hi = float(input(""Digite o valor da HIPOTENUSA: ""))
    print(""#"" * 51)
    print()
                  
    sen = co / hi

    print(f""O valor do SENO é igual à {round(sen, 3)}!"")
    print()
    
if a == 2:
    ca = float(input(""Digite o valor do CATETO ADJACENTE: ""))
    hi = float(input(""Digite o valor da HIPOTENUSA: ""))
    print(""#"" * 51)
    print()
                  
    cos = ca / hi

    print(f""O valor do COSSENO é igual à {round(cos, 3)}!"")
    print()

if a == 3:
    co = float(input(""Digite o valor do CATETO OPOSTO: ""))
    ca = float(input(""Digite o valor do CATETO ADJACENTE: ""))
    print(""#"" * 51)
    print()
                  
    tan = co / ca

    print(f""O valor da TANGENTE é igual à {round(tan, 3)}!"")
    print()

if a == 5:   
    print(""Encerrando programa..."")
    print()
    sys.exit(0)

#Quando o usuario digitasse a key 4 todos os cáculos seriam impressos

","
É uma simples questão de lógica. Se você quer que um código seja executando quando a = 1 ou quando a = 4, basta fazer tal condição.
Hoje você tem:
if a == 1:
  ...

Basta fazer:
if a == 1 or a == 4:
  ...

Ou, como alternativa, você pode criar um conjunto dos possíveis valores e verificar se o a está nesse conjunto:
# testa se a é 1 ou 4
if a in {1, 4}:
  ...

","
            1
        ","
Primeiro separe o código recorrente em funções.
Em linguagem de programação a ideia básica de função é encapsular um código que poderá ser invocado/chamado por qualquer outro trecho do programa, ou seja uma função nada mais é do que uma sub-rotina a ser usada em seu programa.
A utilização de funções visa modularizar um sistema podendo dividi-lo em várias partes no qual cada parte realizará uma tarefa bem definida.
Em python definimos uma função com o uso da palavra chave def.
Como todas as operações realizam o mesmo processamento, coletar dois valores e os dividir, foi criada uma função calc(opr, l1, l2) que aceita três parâmetros de texto onde:

opr é o texto a ser exibido informando qual a operação realizada.
l1 é o texto a ser exibido informando um dos lados do triangulo a ser operacionalizado.
l2 é o texto a ser exibido informando o outro lado do triangulo a ser operacionalizado.

As funções seno(), cosseno() e tangente() apenas chamam calc() com os argumentos adequados.
Em seguida melhore simplifique o laço onde serão escolhidas as opções de processamento do sistema, removendo o código verboso pela chamada das respectivas funções para cada opção.
Para simplificar o exemplo nenhum código de verificação e validação de entrada foi adicionado.
def calc(opr, l1, l2):
  a = float(input(f""Digite o valor do {l1}: ""))
  b = float(input(f""Digite o valor da {l2}: ""))                
  r = a / b
  print(f""\nO valor do {opr} é igual à {round(r, 3)}!\n{'#' * 51}\n"")

def seno():
  calc(""SENO"", ""CATETO OPOSTO"", ""HIPOTENUSA"")
  
def cosseno():
  calc(""COSSENO"", ""CATETO ADJACENTE"", ""HIPOTENUSA"")

def tangente():
  calc(""TANGENTE"", ""CATETO OPOSTO"", ""CATETO ADJACENTE"")

print(f""\n{'#' * 51}\nEste programa calculará o SENO, COSSENO e TANGENTE.\n{'#' * 51}\n"")    
while True:
  a = int(input(""Para realizar os cálculos digite: \n\nSENO = 1 \nCOSSENO = 2 \nTANGENTE = 3 \nTODOS = 4 \nENCERRAR PROGRAMA = 5 \n\nDigite a seguir: ""))
  print(f'{""#"" * 51}\n')
  if a == 1:
    seno()
  elif a == 2:
    cosseno()
  elif a == 3:
    tangente()
  elif a == 4: #Quando o usuário digitar 4 todos os cálculos serão realizados.
    seno()
    cosseno()
    tangente()
  elif a == 5:   
    print(""Encerrando programa...\n"")
    break
  else:
    print(""Ei, digite um dos números informados!\n"")

Teste o código no Repl.it
","
            0
        ",['\npython\n']
504469,Por que o erro 'list' object has no attribute 'cheques' ocorre? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 12 meses.




                        Melhore esta pergunta
                    



Estou construindo um programa com base em um diagrama de classes, e aparece

AttributeError: 'list' object has no attribute 'cheques'
quando vou imprimir a lista com os cheques do cliente

class Cheque:
    def __init__(self, **D):
       self.numConta = D.pop('nc', '------ -')
       self.numCheque = D.pop('nch', '?')
       self.valor = D.pop('v', '0.00')
       self.dta_emissao = D.pop('em', 'dd/mm/aaaa')
       self.dta_vcto = D.pop('vcto', 'dd/mm/aaaa')
       self.dta_deposito = D.pop('dep', 'dd/mm/aaaa')
       self.obs_verso = D.pop('obs', '?')

class Cliente:
    def __init__(self,*listaCheque,**D):
        self.codigo   = D.pop('cod','--')
        self.nome     = D.pop('n','--')
        self.fone     = D.pop('fone','(--) ----- ----')
        self.data     = D.pop('dt','--/--/----')
        self.Endereco = D.pop('end','--')
        self.Cidade   = D.pop('cid','--')
        self.UF       = D.pop('uf','--')
        self.cheques  = []
        for x in listaCheque:
            self.cheques.append(x)
        self.tipo     = D.pop('tipo', '--')
    def listaCheque(self):
        return self.cheques
    def adicionaCheque(self, novoCheque):
        if novoCheque not in self.cheques:
            self.cheques.append(novoCheque)
    def excluiCheque(self, chequeAtual):
        if chequeAtual in self.cheques:
            self.cheques.remove(chequeAtual)

cheque1 = Cheque(nc = '123516-0', nch ='aaaa', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque2 = Cheque(nc = '123516-0', nch ='bbbb', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque3 = Cheque(nc = '123516-0', nch ='cccc', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque4 = Cheque(nc = '193516-0', nch ='dddd', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque5 = Cheque(nc = '163516-0', nch ='eeee', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque6 = Cheque(nc = '183516-0', nch ='ffff', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')

clientef1 = Cliente([cheque1,cheque3],cod = 44, n= 'Carlos', fone ='(41)9 93356-8903',\
                   dt ='08/03/2016', end = 'Rua X,123', cid ='Curitiba',\
                       uf = 'Pr', tipo = 'PF')

novoCheque = clientef1.adicionaCheque(cheque4)
for c in clientef1.listaCheque():    
    print(c.cheques)

","
Você está recebendo uma lista de cheques e com o for pega cada um deles, então não existe nada chamados cheques dentro de cada cheque, tem por exemplo, valor.
Mas tem um outro problema que fará isso não funcionar. Quando passar como argumento uma lista tem que receber apenas um argumento, portanto não pode usar o asterisco que é para pegar vários argumentos como se fosse uma lista (formalmente uma tupla).
Ou não deveria passar uma lista e sim vários argumentos, mas eu não faria isto, na verdade eu nem passaria os cheques na hora de criar a conta, isso é confuso e faz o construtor ter mais de uma responsabilidade.
De verdade deveria fazer um construtor que recebe os argumento que deseja de forma explícita, o jeito que fez usando kwargs é pedir para cometer erros na hora de codificar. Especialmente em um construtor isso não deveria ser aceito.
Eu mudaria outras coisas, mas por enquanto já tem algumas dicas.
class Cheque:
    def __init__(self, **D):
       self.numConta = D.pop('nc', '------ -')
       self.numCheque = D.pop('nch', '?')
       self.valor = D.pop('v', '0.00')
       self.dta_emissao = D.pop('em', 'dd/mm/aaaa')
       self.dta_vcto = D.pop('vcto', 'dd/mm/aaaa')
       self.dta_deposito = D.pop('dep', 'dd/mm/aaaa')
       self.obs_verso = D.pop('obs', '?')

class Cliente:
    def __init__(self, listaCheque, **D):
        self.codigo   = D.pop('cod','--')
        self.nome     = D.pop('n','--')
        self.fone     = D.pop('fone','(--) ----- ----')
        self.data     = D.pop('dt','--/--/----')
        self.Endereco = D.pop('end','--')
        self.Cidade   = D.pop('cid','--')
        self.UF       = D.pop('uf','--')
        self.cheques  = []
        for x in listaCheque:
            self.cheques.append(x)
        self.tipo     = D.pop('tipo', '--')
    def listaCheque(self):
        return self.cheques
    def adicionaCheque(self, novoCheque):
        if novoCheque not in self.cheques:
            self.cheques.append(novoCheque)
    def excluiCheque(self, chequeAtual):
        if chequeAtual in self.cheques:
            self.cheques.remove(chequeAtual)

cheque1 = Cheque(nc = '123516-0', nch ='aaaa', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque2 = Cheque(nc = '123516-0', nch ='bbbb', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque3 = Cheque(nc = '123516-0', nch ='cccc', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque4 = Cheque(nc = '193516-0', nch ='dddd', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque5 = Cheque(nc = '163516-0', nch ='eeee', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')
cheque6 = Cheque(nc = '183516-0', nch ='ffff', v ='1' , em = '2', vcto ='3' , dep ='4' , obs ='5')

clientef1 = Cliente([cheque1,cheque3],cod = 44, n= 'Carlos', fone ='(41)9 93356-8903',\
                   dt ='08/03/2016', end = 'Rua X,123', cid ='Curitiba',\
                       uf = 'Pr', tipo = 'PF')

novoCheque = clientef1.adicionaCheque(cheque4)
for c in clientef1.listaCheque():    
    print(c.valor)

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
","
            1
        ",,,"['\npython', 'lista', 'classes\n']"
504452,Contar palavras em arquivo CSV,"
Estou tentando ler um arquivo CSV e criar uma lista com todas as palavras do arquivo e a quantidade de vezes que ela aparece. Originalmente o arquivo era em PDF, mas julguei que poderia ser mais simples a leitura em csv. Estou usando o Google Collab.
Comecei procurando essa informação no Stack Overflow em EN e fiz uma pequena adaptação para o Google Colab, já que preciso importar o arquivo.
import csv
from google.colab import files
from collections import Counter
from collections import defaultdict

words= []
arquivo = files.upload()

with open(str(arquivo), 'rt') as csvfile: #aqui eu coloquei a variável arquivo em str
    reader = csv.reader(csvfile)
    next(reader)
    for col in reader:
         csv_words = col[0].split("" "")
         for i in csv_words:
              words.append(i)

Já recebi o erro ""File name is too long"" (OSERROR 36). Não sei como continuar daqui. Se alguém puder me orientar, agradeço!
Bom final de semana para todos.
","
Mano, fiz no Pycharm, mas será fácil jogar no collab.
Obs: Como Python é case sensitive, ou seja, um 'a' minusculo é diferente de 'A' maiusculo, talvez colocar um upper ou lower melhore a analise e remover os acentos, deixei a biblioteca e exemplo abaixo comentada ( unicodedata )
import csv

words = dict()
arquivo = 'teste_arquivo1.csv'

with open(arquivo, 'r', encoding='utf-8') as csvfile:  # aqui eu coloquei a variável arquivo em str
    reader = csv.reader(csvfile)
    for row in reader:

        for palavra in row[0].split():

            # Se existir é verdadeiro
            if palavra in words:
                words[palavra] = int(words[palavra]) + 1
            else:
                words[palavra] = 1

# Imprime o dicionario
print(words)

print()

# For do dicionario por linha
for chave, valor in words.items():
    print('Palavra = ' + str(chave)+((20-len(str(chave)))*' ') + ' - Quantidade = ' + str(valor))

'''
from unicodedata import normalize

def remover_acentos(txt, codif='utf-8'):
    palavra =  normalize('NFKD', txt).encode('ASCII', 'ignore').decode('ASCII')
    
    #Minusculo 
    palavra = palavra.lower()
    
    return palavra
    
print(remover_acentos('gráfico'))   
'''


","
            1
        ",,,"['\npython', 'csv\n']"
504428,Como eu poderia resolver esta questão utilizando dicionários em Python? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 12 meses.




                        Melhore esta pergunta
                    



Faça um programa que leia duas strings do teclado e informe:
• Os caracteres do primeiro texto que não estão no segundo;
• Os caracteres do segundo texto que não estão no primeiro;
• Os caracteres que estão em ambos os textos;
• O número total de caracteres distintos em ambos os textos.
Exemplo:
Entre com o primeiro texto: wendel
Entre com o segundo texto: alexandre
Caracteres do primeiro texto que não estão no segundo:
w
Caracteres do segundo texto que não estão no primeiro:
r a x
Caracteres em ambos os textos:
e l n d
Numero total de caracteres distintos em ambos os textos: 8
Ele deu exemplo de como fazer a frequência de caracteres
def contaFrequencia(texto):
    frequencia = {}

    for c in texto:
        if c not in frequencia:
            frequencia[c] = 0

        frequencia[c] = frequencia[c] + 1
    return frequencia

if __name__ == ""__main__"":
    texto = input('Entre com um texto: ')
    freqs = contaFrequencia(texto)

    print('Frequência de caracteres:')
    for c in freqs.keys():
        print('%s : %s ' % (c, freqs[c]))


","
Uma maneira de resolver esse problema é utilizando conjuntos.
Um objeto conjunto é uma coleção não ordenada de objetos hasheáveis distintos, não há repetição de elementos. Usos comuns incluem testes de associação, remover duplicatas de uma sequência e computar operações matemáticas tais como interseção, união, diferença e diferença simétrica.
Converta cada strings de entrada em um conjunto de caracteres e aplique os operadores relacionais para obter as informações desejadas:

Para saber os caracteres do primeiro texto que não estão no segundo faça a diferença entre texto1 e texto2.

Para saber os caracteres do segundo texto que não estão no primeiro faça a diferença entre texto2 e texto1.

Para saber os caracteres que estão em ambos os textos faça a intercessão entre os dois textos.

Para saber o número total de caracteres distintos em ambos os textos faça a união entre os dois conjuntos e meça o comprimento do resultado.


texto1 = ""wendel""#input('Entre com um texto: ')
texto2 = ""alexandre""#input('Entre com outro texto: ')

#Converte as entradas em conjuntos.
s1 = set(texto1)
s2 = set(texto2)

r1 = s1 - s2      #Os caracteres do primeiro texto que não estão no segundo.
r2 = s2 - s1      #Os caracteres do segundo texto que não estão no primeiro.
r3 = s1 & s2      #Os caracteres que estão em ambos os textos.
r4 = len(s1 | s2) #O número total de caracteres distintos em ambos os textos.

print(f'Os caracteres do primeiro texto que não estão no segundo:\n {r1}')
print(f'Os caracteres do segundo texto que não estão no primeiro:\n {r2}')
print(f'Os caracteres que estão em ambos os textos:\n {r3}')
print(f'O número total de caracteres distintos em ambos os textos:\n {r4}')

Resultando:
Os caracteres do primeiro texto que não estão no segundo:
 {'w'}
Os caracteres do segundo texto que não estão no primeiro:
 {'a', 'x', 'r'}
Os caracteres que estão em ambos os textos:
 {'n', 'e', 'd', 'l'}
O número total de caracteres distintos em ambos os textos:
 8

Teste o exemplo no IdeOne
","
            2
        ",,,['\npython\n']
504423,"como diminuo um arquivo csv de 3 gb, para conseguir importar no pandas no google colab?","
No colab da um erro:

""A sessão falhou depois de usar toda a RAM disponível. Se você tiver
interesse em acessar ambientes de execução com mais memória RAM,
confira o Colab Pro.""

Eu queria diminuir o arquivo csv para nao dar mais este problema ao importar, o que faço?
Ele é muito grande 3 GB, devido a isto a RAM disponível no google Colab não é suficiente para importá-lo.
O arquivo esta em https://download.inep.gov.br/microdados/microdados_enem_2019.zip , e so fazer o download se precisar. Este e o caminho ao baixar no drive para pegar o arquivo que estou me referindo /content/drive/MyDrive/Microdados_Enem_2019/DADOS/MICRODADOS_ENEM_2019.csv.
Se poderem me ajudar a diminuir o arquivo csv para conseguir importa-lo no google colab, agradeceria muito, e simples e so me ajudar a diminuir a quantidade de linha no arquivo csv, neste arquivo possui 5 milhao, seria mais facil se tivesse meio milhao ou menos, para conseguir importar no colab.
from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

#aqui que dá o erro, ao importar o arquivo csv, eu só queria diminuir ele para conseguir importar
microdados = pd.read_csv('/content/drive/MyDrive/Microdados_Enem_2019/DADOS/MICRODADOS_ENEM_2019.csv',sep="";"", encoding=""ISO-8859-1"")
microdados.head()

","
Sugiro que você faça o download de um aplicativo que tem o objetivo de dividir um arquivo CSV gigante em pequenos pedaços, ou seja, em vários arquivos CSVs menores que apresentarão uma quantidade de linhas definidas por você.
Sugiro o aplicativo  Split CSV File. Com este aplicativo, você informa quantas linhas quer em cada arquivo menor. No seu caso, basta parametrizar o campo ""Line Count"" com a quantidade de linhas e clicar no botão ""Split File"".

É um aplicativo simples, basta executar, não precisa instalar, já utilizei várias vezes.
Caso queira ver outras opções de aplicativos, consulte este site sobre como dividir arquivo CSV
Caso particular
Para resolver seu caso em particular, baixei seu arquivo e o dividi em arquivos com 100 mil linhas. Como você disse que gostaria de trabalhar com 500 mil linhas ou menos, estou disponibilizando um arquivo zip com 5 CSVs de 100 mil linhas, basta clicar nesse link MICRODADOS_ENEM_2019_500_mil_Linhas.zip
","
            0
        ",,,"['\npython', 'arquivo', 'csv', 'data-science\n']"
504419,Erro ao concatenar ramos/modelos distintos de CNN,"
Estou a tentar implementar um algoritmo de reconhecimento facial 3D usando redes neuronais de convolução (CNN). Implementei um image generator para as imagens rgb e um image generator para as imagens em profundidade (grayscale). Tendo em conta que possuo duas inputs distintas, concebi dois modelos CNN um com input_shape=(height,width,3) e outro com input_shape=(height,width,1). Independentemente consigo efetuar o treino das redes com o seu respetivo image generator, no entanto, após concatenar os dois ramos/modelos, e fundir ambos os generators, dei de caras com este aviso e erro:

WARNING:tensorflow:Model was constructed with shape (None, 400, 400, 1) for input KerasTensor(type_spec=TensorSpec(shape=(None, 400, 400,
1), dtype=tf.float32, name='Depth_Input_input'),
name='Depth_Input_input', description=""created by layer
'Depth_Input_input'""), but it was called on an input with incompatible
shape (None, None)
""ValueError: Input 0 of layer Depth_Input is incompatible with the
layer: : expected min_ndim=4, found ndim=2. Full shape received:
(None, None)""

O que posso fazer para resolver o problema? Desde já agradeço qualquer ajuda
Segue abaixo o meu código:
height=400
width=400
shape=(height,width)

    # ########################### RGB ############################
model_rgb = tf.keras.models.Sequential()

model_rgb.add(Conv2D(filters=16, kernel_size=3, activation='relu', name=""RGB_Input"", input_shape=(height,width, 3)))
model_rgb.add(MaxPooling2D(pool_size=2))
model_rgb.add(Dropout(0.3))

model_rgb.add(Conv2D(filters=32, kernel_size=3, activation='relu'))
model_rgb.add(MaxPooling2D(pool_size=2))

model_rgb.add(Conv2D(filters=32, kernel_size=3, activation='relu'))
model_rgb.add(MaxPooling2D(pool_size=2))

model_rgb.add(Conv2D(filters=64, kernel_size=3, activation='relu'))
model_rgb.add(MaxPooling2D(pool_size=2))

model_rgb.add(Conv2D(filters=64, kernel_size=3, activation='relu'))
model_rgb.add(MaxPooling2D(pool_size=2))
#model_rgb.add(Dropout(0.2))

model_rgb.add(Conv2D(filters=128, kernel_size=3, activation='relu'))
model_rgb.add(MaxPooling2D(pool_size=2))
#model_rgb.add(Dropout(0.2))

model_rgb.add(Flatten())
model_rgb.add(Dense(units=512, activation='relu'))
model_rgb.add(Dropout(0.3))
model_rgb.add(Dense(units=128, activation='relu'))
model_rgb.add(Dropout(0.3))

# ########################### DEPTH ###########################
model_depth = tf.keras.models.Sequential()

model_depth.add(Conv2D(filters=16, kernel_size=3, activation='relu', name=""Depth_Input"", input_shape=(height, width, 1)))
model_depth.add(MaxPooling2D(pool_size=2))
model_depth.add(Dropout(0.3))
                   
model_depth.add(Conv2D(filters=16, kernel_size=3, activation='relu'))                      
model_depth.add(MaxPooling2D(pool_size=2))

model_depth.add(Conv2D(filters=32, kernel_size=3, activation='relu'))                      
model_depth.add(MaxPooling2D(pool_size=2))

model_depth.add(Conv2D(filters=32, kernel_size=3, activation='relu'))                      
model_depth.add(MaxPooling2D(pool_size=2))

model_depth.add(Conv2D(filters=64, kernel_size=3, activation='relu'))                
model_depth.add(MaxPooling2D(pool_size=2))

model_depth.add(Conv2D(filters=64, kernel_size=3, activation='relu'))                      
model_depth.add(MaxPooling2D(pool_size=2))

model_depth.add(Flatten())
model_depth.add(Dense(units=512, activation='relu'))
model_depth.add(Dropout(0.3))
model_depth.add(Dense(units=128, activation='relu'))
model_depth.add(Dropout(0.3))

#### Concatenating branches ####

merge = Concatenate()([model_rgb.output, model_depth.output])
merged_out = Dense(units=16, activation='relu')(merge)
merged_out = Dense(units=2, activation='softmax')(merged_out)

merged_model = Model([model_rgb.input, model_depth.input], merged_out) 

merged_model.compile(optimizer=Adam(learning_rate=0.0001), loss='categorical_crossentropy', metrics=['accuracy'])


history_merged = merged_model.fit(gen_flow,
                                  epochs=70,
                                  shuffle=True,
                                  )

Código para os image generators:
train_datagen = ImageDataGenerator(rescale=1./255,
                                    rotation_range=20, 
                                    width_shift_range=0.4, 
                                    height_shift_range=0.4, 
                                    shear_range=0.4, 
                                    zoom_range=0.4, 
                                    horizontal_flip=True,
                                    fill_mode='nearest')

val_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)

# ########################### RGB ###########################
print(""RGB Generators: \n"")
train_generator_rgb = train_datagen.flow_from_directory(directory=train_data_rgb, target_size=shape,
                                                        class_mode='categorical', 
                                                        batch_size=16)

val_generator_rgb = val_datagen.flow_from_directory(directory=val_data_rgb, 
                                                    target_size=shape,
                                                    class_mode='categorical', 
                                                    batch_size=12)
# ########################### --- ###########################

# ########################### DEPTH ###########################
print(""\n\nDepth Generators: \n"")
train_generator_depth = train_datagen.flow_from_directory(directory=train_data_depth, 
                                                          target_size=shape, 
                                                          color_mode=""grayscale"",
                                                          class_mode='categorical', 
                                                          batch_size=16)

val_generator_depth = val_datagen.flow_from_directory(directory=val_data_depth, 
                                                      target_size=shape, 
                                                      color_mode=""grayscale"",
                                                      class_mode='categorical', 
                                                      batch_size=12)
# ########################### ----- ###########################

def gen_flow_for_two_inputs(X1, X2):
    
    while True:
            X1i = train_generator_rgb.next()
            X2i = train_generator_depth.next()
            yield [X1i[0], X2i[1]], X1i[1]

# Create generator
gen_flow = gen_flow_for_two_inputs(train_data_rgb, train_data_depth)

Imagem da junção do modelo:

",,,,,"['\npython', 'concatenação-de-string', 'redes-neurais', 'tensorflow', 'keras\n']"
504391,Existe alguma forma parecida com o método .format do python para o VBA no Excel?,"
No python usando o .formato para isso:

usuários = ['perfil1', 'perfil2']
print(""www.instagram.com/f{usuários[0]}/"")

Logo sairia:
www.instagram.com/perfil1/
Existe algum método parecido no vba?
","
Desconheço forma de passar a variável diretamente no corpo da string, o VBA não interpreta assim.
Você pode concatenar a string + variável + string com o operador &
Sub exemplo()

Dim usuários As Variant

usuários = Array(""pedro"", ""paulo"")

Debug.Print ""www.instagram.com/"" & usuários(0) & ""/""

Debug.Print ""www.instagram.com/"" & usuários(1) & ""/""

End Sub


","
            1
        ","
Tudo bem com você?
Acredito que o que você procura seria algo como o código abaixo, ou seja, atribuir um valor a uma variável de texto e criar um link usando o valor dessa variável:
Sub Perfil()

Dim Usuario As String

Usuario = ""perfil1""

ActiveSheet.Range(""A1"").Select

'Cria o link
ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:=""https://www.instagram.com/"" & Usuario


End Sub


Nesse código, é criado um link do Instagram usando o usuário mencionado na célula selecionada pelo código (célula ""A1"").
Espero que ajude!
","
            1
        ","['\njava', 'python', 'vba', 'excel-vba\n']"
504355,Count e length em Django,"
Tenho um projeto Django e uma das funcionalidades dele é gerar números estatísticos. Por exemplo: tenho um modelo de funcionários e ele tem campos booleanos, tipo, se está ativo ou não, presente ou não, etc. Daí quero mostrar no template um card contendo o total de funcionários cadastrados e quantos desses estão ativo e em determinado dia quantos estavam presentes, etc. Ou seja, a quantidade será mostrada conforme o estado do objeto, se true ou false. Confira um exemplo de modelo:
models.py
class Funcionario(models.Model):
    nome = ...
    ativo = models.BooleanField()
    ...

views.py
from .models import Funcionario

class IndexView(TemplateView): # TemplateView mesmo
    template_name = 'index.html'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['funcionarios'] = Funcionario.objects.all()
        return context

Sei que é tranquilo mostrar o total no template usando {{ funcionarios.count }} ou {{ funcionarios|length }}. Mas ainda não entendi realmente a diferença entre os dois modos. Porém, minha pergunta é sobre como mostrar o número de funcionário ativos e inativos. Alguns alternativas que pensei foi criar várias chaves no def get_context_data:
def get_context_data(self, **kwargs):
    context = super().get_context_data(**kwargs)
    context['funcionarios'] = Funcionario.objects.all()
    context['funcionarios_ativos'] = Funcionario.objects.filter(ativo=True)
    context['funcionarios_inativos'] = Funcionario.objects.filter(ativo=False)
    ...

    return context

Ou poderia criar @propety no model Funcionario; ou poderia criar tag personalizadas. Enfim, gostaria de uma opinião sobre qual seria a forma mais adequada de se fazer isso.
",,,,,"['\npython', 'django\n']"
504295,Pegando valores de um for,"
dúvida bem simples mesmo.
Tenho a seguinte lista:
fruits = {""apple"":""123"", ""banana"":""456"", ""cherry"":""789""}
for fruit in fruits:
  print(fruit) 

Como faço para no meu retorno apareça os números de cada?
Da forma que está o retorno é: apple, banana e cherry
mas preciso que o retorno seja: 123, 456, 789
","
Voce pode usar o valor que voce ja conseguiu extrair como chave no dicionario:
fruits = {""apple"":""123"", ""banana"":""456"", ""cherry"":""789""}
for fruit in fruits:
  print(fruits[fruit]) 

ou pedir os valores do dicionario com values():
fruits = {""apple"":""123"", ""banana"":""456"", ""cherry"":""789""}
for value in fruits.values():
  print(value)

","
            1
        ","
Você deve imprimir assim:
print(fruits[fruit])

","
            -1
        ",['\npython\n']
504236,Criar uma lista de contatos e a separar em duas outras listas,"
Tenho que criar uma lista de contatos em Python, com nome, idade e número do telefone, e depois tenho que separar em 2 listas: uma lista só com os contatos de maior de 18 anos e outra lista apenas com menor de 18 anos e imprimir na tela as 2 listas separadas em ordem alfabética.
Mas eu não estou conseguindo separar as listas, elas saem desse jeito aqui:
[['joao', 'maria'], [33, 12], ['1234567', '98765432']]

[['joao', 'maria'], [33, 12], ['1234567', '98765432']]

Mas era pra sair dessa maneira:
Lista1:
nome: joao, idade: 33, Numero:1234567

Lista2:
nome: maria, idade: 12, Numero:98765432

O código é esse:
contatoNome = []
contatoIdade = []
contatoNumero = []
contato = {""nome"" : contatoNome, ""idade"" : contatoIdade, ""numero"" : contatoNumero}

lista1 = []
lista2 = []

entrada = """"
while entrada != ""s"":
    nome = input('Qual o nome? ')
    contatoNome.append(nome)
    idade = int(input('Digite a idade: '))
    contatoIdade.append(idade)
    numero = input('Digite o numero: ')
    contatoNumero.append(numero)
    entrada = input(""Deseja sair? "")
    print()
    if entrada.lower() == ""s"":
        verificar = contato[""idade""]
        for n in verificar:
            if n > 18:
                 lista1.append(contatoNome)#{""nome"" : contatoNome, ""idade"" : contatoIdade, ""numero"" : contatoNumero}
                 lista1.append(contatoIdade)
                 lista1.append(contatoNumero)
            else:
                lista2.append(contatoNome)  # {""nome"" : contatoNome, ""idade"" : contatoIdade, ""numero"" : contatoNumero}
                lista2.append(contatoIdade)
                lista2.append(contatoNumero)
        print()
        print(lista1)
        print()
        print(lista2)

","
As suas listas contatoNome, contatoIdade e contatoNumero estão guardando todos os valores, então não adianta adicioná-las em lista1 e lista2, pois aí ambas terão todos os valores também.
Na verdade eu sugiro rever a forma como está estruturando os dados. Se o nome, idade e número estão relacionados (se todas as informações referem-se à mesma pessoa), faz mais sentido mantê-las juntas, em vez de ter listas separadas.
Uma opção seria criar uma tupla para cada pessoa, e guardar essas tuplas em uma lista:
# lista que guarda todos os contatos
contatos = []

while True:
    nome = input('Qual o nome? ')
    idade = int(input('Digite a idade: '))
    numero = input('Digite o numero: ')
    # adiciona a tupla (nome, idade, numero) na lista de contatos
    contatos.append((nome, idade, numero))
    entrada = input(""Deseja sair?\n"")
    if entrada.lower() == ""s"":
        break # sai do while

maiores = []
menores = []
# separa os contatos por idade
for contato in contatos:
    if contato[1] > 18:
        maiores.append(contato)
    else:
        menores.append(contato)

print(maiores)
print(menores)

Repare que eu fiz contatos.append((nome, idade, numero)): esses parênteses parecem redundantes, mas não são.
Se eu fizesse apenas contatos.append(nome, idade, numero) daria erro, porque o método  append estaria recebendo 3 parâmetros (mas ele só recebe 1). Ao colocar um par de parênteses a mais, estou criando uma tupla contendo o nome, idade e número, e essa tupla é que está sendo inserida na lista contatos.
Ao final do while, a lista contatos terá várias tuplas, cada uma referindo-se aos dados de uma pessoa.
Depois é só fazer um loop em contatos e filtrar de acordo com a idade, inserindo a pessoa na respectiva lista.
Se quiser mostrar os dados em ordem alfabética do nome, basta usar sorted e definir o critério de ordenação (que entendo que será o nome):
def getnome(contato):
    return contato[0]

print(sorted(maiores, key=getnome))
print(sorted(menores, key=getnome))

E claro que, uma vez tendo os dados que você precisa, você pode imprimir da maneira que quiser. Por exemplo:
print('maiores de 18:')
for nome, idade, fone in sorted(maiores, key=getnome):
    print(f'nome: {nome}, idade: {idade}, fone: {fone}')

Mas aí já é questão de formatação, pois o mais importante (separar os dados corretamente) já foi resolvido.

Outra opção é guardar os dados em dicionários em vez de tuplas:
# lista que guarda todos os contatos
contatos = []

while True:
    nome = input('Qual o nome? ')
    idade = int(input('Digite a idade: '))
    numero = input('Digite o numero: ')
    # adiciona um dicionário na lista de contatos
    contatos.append({ 'nome': nome, 'idade': idade, 'numero': numero })
    entrada = input(""Deseja sair?\n"")
    if entrada.lower() == ""s"":
        break # sai do while

maiores = []
menores = []
# separa os contatos por idade
for contato in contatos:
    if contato['idade'] > 18:
        maiores.append(contato)
    else:
        menores.append(contato)

def getnome(contato):
    return contato['nome']

print(sorted(maiores, key=getnome))
print(sorted(menores, key=getnome))

# ou, mostrando os dados de outra maneira:
print('maiores de 18:')
for contato in sorted(maiores, key=getnome):
    print(f'nome: {contato[""nome""]}, idade: {contato[""idade""]}, fone: {contato[""numero""]}')

# repita para a lista menores (ou crie uma função para imprimir os dados)

Independente da forma escolhida (tupla ou dicionário), o importante é que agora todas as informações de uma pessoa estão juntas em uma única estrutura (cada tupla ou dicionário representa uma pessoa), o que fica bem melhor na hora de trabalhar com os dados: em vez de ficar ""caçando"" informações em listas diferentes, você tem tudo em um elemento só.
","
            2
        ",,,"['\npython', 'python-3.x', 'lista', 'dicionário\n']"
504208,Jupyter notebook parou de funcionar [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 12 meses.




                        Melhore esta pergunta
                    



Estava usando o jupyer notebook há horas e do nada ele começou a dar erro em todas as células. Quando fui rodar tudo desde o começo ele deu erro em TUDO. O que pode ter acontecido? O que eu faço?
import numpy as np

numpy.version.full_version

NameError                                 Traceback (most recent call last)

< ipython-input-2-62e0f0393730> in <module>

      1 import numpy as np

----> 2 numpy.version.full_version

NameError: name 'numpy' is not defined

No meu prompt de comando recebo uma notificação assim:
c:\program files\python39\lib\site-packages\jupyter_server\transutils.py:13: FutureWarning: The alias `_()` will be
 deprecated. Use `_i18n()` instead.
warnings.warn(warn_msg, FutureWarning)

","
Bom dia, veja que vc primeiro importou o numpy e criou uma alias np
import numpy as np

na linha seguinte deveria usar esta alias
np.version.full_version

","
            2
        ",,,['\npython\n']
504179,Python: Executar classe ou elemento que esteja dentro de uma classe,"
existe alguma maneira de executar uma def que esteja dentro de uma classe ou de algum outro elemento que eu desconheço sem a necessidade de incluir o () da classe, somente com o nome? Veja no exemplo abaixo de como eu desejo que funcione, caso seja possível.
Não precisa ser necessariamente uma classe dentro de outra, pode ser outro elemento, mas que seja possível executar desta forma crud_regionalspc.CrudTabelaDados.select()
class CrudRegionalSPC:
    class CrudTabelaDados:
        def select(self):
            print(""select"")

        def delete(self):
            print(""delete"")


crud_regionalspc = CrudRegionalSPC()

# como funciona
crud_regionalspc.CrudTabelaDados().select()

# como eu gostaria que funcionasse
crud_regionalspc.CrudTabelaDados.select()

","
Tenho que dizer que é uma estrutura bastante confusa e muito tendenciosa a ser um Problema XY.
Mas a título de conhecimento, ao definir o método como estático ele passará a atuar basicamente como uma função normal dentro da classe, então nem há a necessidade do self como parâmetro, visto que pertencerá à classe e não à instância.
class CrudRegionalSPC:
    class CrudTabelaDados:
        @staticmethod
        def select():
            print(""select"")

        @staticmethod
        def delete():
            print(""delete"")


crud_regionalspc = CrudRegionalSPC()

# como eu gostaria que funcionasse
crud_regionalspc.CrudTabelaDados.select()  # select

Veja funcionando no Ideone
Inclusive você não precisaria nem da instância para chamar a função desejada:
CrudRegionalSPC.CrudTabelaDados.select()

Pois assim as classes estariam atuando basicamente como namespaces.
","
            3
        ","
Eu não sei exatamente o que quer fazer, mais vão algumas ideias:
Inicialmente pode remover o aninhamento de classes e instanciar uma propriedade:
class CrudTDados:
  def __init__(self, parent):
    self._parent = parent
    
  def select(self):
    print(""select"")

  def delete(self):
    print(""delete"")

 
class CrudRegionalSPC():   
  def __init__(self):
    self.CrudTabelaDados = CrudTDados(self)

    
crud_regionalspc = CrudRegionalSPC()

crud_regionalspc.CrudTabelaDados.select()

Pode obter o mesmo resultado usando decorators. Decorators podem ser funções ou classes que adicionam funcionalidade às funções existentes.
class CrudTDados:
  def __init__(self, parent):
    self._parent = parent
    
  def select(self):
    print(""select"")

  def delete(self):
    print(""delete"")

 
class CrudRegionalSPC():   
  @CrudTDados
  def CrudTabelaDados(self): pass


    
crud_regionalspc = CrudRegionalSPC()

crud_regionalspc.CrudTabelaDados.select()

Você também pode criar uma classe abstrata e a subclassear. Dessa forma pode intercambiar essas subclasses:
from abc import ABC, abstractmethod

class ICrud(ABC):
  @abstractmethod
  def select(self): pass
    
  @abstractmethod
  def delete(self): pass

class CrudMudo(ICrud):
  def select(self): pass
  def delete(self): pass

class CrudTDados(ICrud):
  def select(self):
    print(""select Dados"")

  def delete(self):
    print(""delete Dados"")

class CrudTClientes(ICrud):    
  def select(self):
    print(""select Clientes"")

  def delete(self):
    print(""delete Clientes"")

 
class CrudRegionalSPC():   
  def __init__(self, crud=CrudMudo()):
    self.CrudTabelaDados = crud;

  def MudarCrud(self, crud):
    self.CrudTabelaDados = crud

    
crud_regionalspc = CrudRegionalSPC()

crud_regionalspc.CrudTabelaDados.select()

crud_regionalspc.MudarCrud(CrudTClientes())

crud_regionalspc.CrudTabelaDados.select()

crud_regionalspc.MudarCrud(CrudTDados())

crud_regionalspc.CrudTabelaDados.select()

","
            1
        ","['\npython', 'python-3.x\n']"
504153,Criar uma variável dentro de um xpath,"
Estou tentando criar uma automação em python - (Web scraping) que possui um loop no qual o xpath vai se alterando toda vez que realiza um click no local desejado, então percebi que no xpath só se altera um digito:
//*[@id=""j_id184:dados:0:j_id306""]
//*[@id=""j_id184:dados:1:j_id306""]
//*[@id=""j_id184:dados:2:j_id306""]

Teria como colocar esse número como uma variável?
Ou existe outra forma se fazer isso?
código considerando apenas um objeto:
self.webDriverWait(self.driver,15).until(self.ec.element_to_be_clickable((self.by.XPATH,'//[@id=""j_id184:dados:0:j_id306""]')))
click_nfs = self.driver.find_element_by_xpath('//*[@id=""j_id184:dados:0:j_id306""]')

","
Você pode utilizar formatar a string. Para isso o as strings em python possuem um método chamado format.
Segue um exemplo:
format_xpath = '//*[@id=""j_id184:dados:{numero}:j_id306""]'

for i in range(10):
    # para cada interacao o valor de numero é alterado
    # Exemplo quando i vale 0: '//*[@id=""j_id184:dados:0:j_id306""]'
    # Exemplo quando i vale 1: '//*[@id=""j_id184:dados:1:j_id306""]'
    # Exemplo quando i vale 9: '//*[@id=""j_id184:dados:9:j_id306""]'
    xpath = format_xpath.format(numero=i)
    print(xpath)
    element = self.driver.find_element_by_xpath(xpath)
    element.click()

","
            0
        ","
Você pode formatar a string do xpath. Exemplos:
click_nfs = self.driver.find_element_by_xpath(f'//*[@id=""j_id184:dados:{n}:j_id306""]')

ou
click_nfs = self.driver.find_element_by_xpath('//*[@id=""j_id184:dados:%d:j_id306""]' % n)

onde n é o número em que você está.
","
            0
        ","['\npython', 'aplicação-web', 'while', 'selenium-webdriver', 'xpath\n']"
504106,Python com MYSQL - ERRO: 'NoneType' object is not subscriptable,"
Estou tentando praticar criando um pequeno programa com TELA DE LOGIN.
Esse programa tem acesso a um banco de dados MYSQL e quero fazer a VALIDAÇÃO dos dados de login para permitir a entrada.
Estou tentando aprender sozinho e tendo muitas dificuldades.
Acontece que quando eu tento entrar com um usuario que já existe no banco, mas erro a senha, o programa funciona normal.
Porém, quando tento um LOGIN que não está no banco, o programa exibe esse erro. Não consegui encontrar solução ainda.
login_user = tela_login.lineEdit.text()
senha_user = tela_login.lineEdit_2.text()

cursor = banco.cursor()
cursor.execute(
    ""SELECT senha FROM quadro_funcionarios WHERE login = '{}'"".format(login_user))
senha_banco = cursor.fetchone()

if senha_user == senha_banco[0]:
    tela_login.close()
    menu_principal.show()

O erro gerado é este:
 22     senha_banco = cursor.fetchone()
 23 
 24     if senha_user == senha_banco[0]: #Erro nesta linha aqui.
 25         tela_login.close()
 26         menu_principal.show()

TypeError: 'NoneType' object is not subscriptable
Estou procurando em todo canto, como solucionar, mas não entendo o erro.
","
O erro acontece quando você está acessando o índice de um objeto que é None.
spam = None

print(spam[0])
# TypeError: 'NoneType' object is not subscriptable

Considerando que no seu código existe apenas o senha_banco[0], então senha_banco é None.
Verificando a documentação do fetchone você tem:

This method retrieves the next row of a query result set and returns a single sequence, or None if no more rows are available.

Ou seja, ele pode retornar None quando não há nenhum registro para ser retornado. No seu caso, tudo indica que não foi encontrado o registro com o login informado.
Você pode validar isso com o rowcount:
if cursor.rowcount == 0:
  raise Exception(f'Nenhum registro encontrado com o login {login_user}')

Mas será interessante você debugar o código e certificar-se se o registro existe, ou não, no banco de dados.
","
            1
        ",,,"['\nmysql', 'python\n']"
504085,O .append() não está funcionando em meu dicionário - Python,"
Olá, o meu problema é o seguinte: tenho um dicionário chamado pessoas: pessoas = {} que me permite cadastrar o nome e a idade da pessoa. Eu fiz um input perguntando quantas pessoas o usuário gostaria de cadastrar: quantidade = int(input(""Quantas pessoas serão cadastradas? "")).
Após isso ele executa um for: for a in range(0, quantidade):.
Até ai tudo bem... Eu pergunto o nome e a idade da pessoa a após isso eu faço um .append() em meu dicionário e ele me retorna o seguinte erro:
AttributeError: 'dict' object has no attribute 'append'

Eu realmente não entendi o porque do erro. Alguém sabe explicar?
O código completo:
pessoas = {}

quantidade = int(input(""Quantas pessoas serão cadastradas? ""))

for a in range(0, quantidade):
    nome = input(f""Digite o nome da pessoa {a + 1}: "")
    idade = input(f""Digite a idade de {nome}: "")
    pessoas.append(nome)
    pessoas.append(idade)

","
Dicionários em Python não tem .append: eles sempre guardam uma chave e um valor, e isso independe da ordem de inserção - Dada a chave (no caso, o ""nome""), ele sempre vai levar o mesmo tempo para te devolver o valor correspondente (""idade""):
pessoas = {}

quantidade = int(input(""Quantas pessoas serão cadastradas? ""))

for a in range(0, quantidade):
    nome = input(f""Digite o nome da pessoa {a + 1}: "")
    idade = input(f""Digite a idade de {nome}: "")
    pessoas[nome] = idade

print(pessoas)

Para aprender é importante fazer desse jeito.
Na hora de criar programas mais complexos é importante que um dado que possa ser repetido (o nome), não seja a chave do dicionário: os valores que vem por último vão sobre-escrever os primeiros - mas isso você pega com o tempo  - por exemplo, nesse caso, pode ser melhor ter uma ""lista de dicionários"", em que cada dicionário tem a chave ""nome"" e ""idade"" separados. Mas pra chegar lá, é necessário entender dicionários primeiro.
","
            2
        ","
Da forma que você quer fazer, só usar listas dentro do dicionário, assim vai funcionar :)
pessoas = {'Nome': [''],
           'Idade': [0]}

quantidade = int(input(""Quantas pessoas serão cadastradas? ""))

for a in range(0, quantidade):

nome = input(f""Digite o nome da pessoa {a + 1}: "")
idade = input(f""Digite a idade de {nome}: "")
pessoas['Nome'].append(f'{nome}')
pessoas['Idade'].append(f'{idade}')

print(pessoas)

","
            0
        ","['\npython', 'python-3.x\n']"
504070,Como chegar a um elemento de um dropdown através de texto parcial em selenium - python,"
Como posso selecionar um elemento de um dropdown através de parte do seu nome?
Quero selecionar uma opção baseada em valores retirados de uma base de dados, mas estes valores não têm o nome completo dos elementos do elemento do dropdown, há alguma forma de fazer o selenium procurar o elemento através do texto parcial?
    modelo = googleSheet.modelo.upper().strip()
    select = Select(WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '/html/body/div/div/div/div[1]/form/fieldset[6]/div/ul/fieldset[3]/div/ul/fieldset[3]/div/ul/fieldset/div/ul/li/label'))))
    select.select_by_visible_text(modelo)

Na opção de dropdown eu quero selecionar ""Terrano II 2.7 xpto ol"", mas o valor da minha base de dados é apenas Terrano II 2.7
Obrigado pela ajuda
","
Para filtros mais complexos que os disponibilizados nativamente, sugiro fazer manualmente, algo assim:
for option in select.options:
    if 'Terrano II 2.7' in option.text:
        select.select_by_visible_text(option.text)
        break

","
            1
        ",,,"['\npython', 'python-3.x', 'selenium', 'selenium-webdriver', 'dropdown\n']"
503974,eu não estou conseguindo herde a classe cliente com uma das duas,"
eu crio um cliente que será PFísica como faço para  classe PFisica herde da classe cliente.
class Cliente:
    def __init__(self,*lista,**D):
        self.codigo   = D.pop('cod','--')
        self.nome     = D.pop('n','--')
        self.fone     = D.pop('f','(--) ----- ----')
        self.data     = D.pop('d','--/--/----')
        self.Endereco = D.pop('end','--')
        self.Cidade   = D.pop('cid','--')
        self.UF       = D.pop('uf','--')
        self.tipo     = D.pop('t', 'PF ou PJ')
        self.cheques  = []
        for x in lista:
            self.cheques.append(x)
    def listaCheque(self):
        return self.cheques
    def adicionacheque(self,novocheque):
        if novocheque not in self.cheques:
            self.cheques.append(novocheque)
    def excluicheque(self,exccheque):
        if exccheque not in self.cheques:
            self.cheques.append(exccheque)


class PFisica:
    def __init__(self,**D):
        self.cliente = Cliente
        self.CPF     = D.pop('cpf','---.---.--- --')
        self.RG      = D.pop('rg','-.---.--- -')
    def getCliente(self):
        return self.cliente
    def emitirFicha(self):
        resposta='Nome: '+self.cliente+'\nCPF: '+self.CPF+'\nRG: '+self.RG+'\nEndereço: '+self.Endereco+'\nCidade: '+self.Cidade+'UF :'+self.UF
        return resposta
    
    
class PJuridica:
    def __init__(self,**D):
        self.cliente = Cliente
        self.CNPJ    = D.pop('cnpj','---.---.---/---- --')
        self.INSC    = D.pop('insc','--')
    def getCliente(self):
        return self.cliente
    def emitirFicha(self):
        resposta='Nome: '+self.cliente+'\nCNPJ: '+self.CNPJ+'\nEndereço: '+self.Endereco+'\nCidade: '+self.Cidade+'UF :'+self.UF
        return resposta

","
Para usar com herança fica assim:
suas classes tem que herdar da classe base comum (cliente),  e chamar
os métodos da superclasse, usando a chamada especial super() - no
caso, o único método comum entre a base e as classes derivadas é
o __init__ , então só ali precisamos usar o super():
class Cliente:
    def __init__(self,*lista,**D):
        self.codigo   = D.pop('cod','--')
        self.nome     = D.pop('n','--')
        self.fone     = D.pop('f','(--) ----- ----')
        self.data     = D.pop('d','--/--/----')
        self.Endereco = D.pop('end','--')
        self.Cidade   = D.pop('cid','--')
        self.UF       = D.pop('uf','--')
        self.tipo     = D.pop('t', 'PF ou PJ')
        self.cheques  = []
        for x in lista:
            self.cheques.append(x)
            
    def listaCheque(self):
        return self.cheques
    def adicionacheque(self,novocheque):
        if novocheque not in self.cheques:
            self.cheques.append(novocheque)
    def excluicheque(self,exccheque):
        if exccheque not in self.cheques:
            self.cheques.append(exccheque)


class PFisica(Cliente):
    def __init__(self,**D):
        # extrair dos parâmetros ""D"" os dados específicos de pessoa física:
        self.CPF     = D.pop('cpf','---.---.--- --')
        self.RG      = D.pop('rg','-.---.--- -')
        # Chamar o __init__ de ""cleinte"" para completar a inicialização:
        super().__init__(**D)
        
        
    """"""    
    def getCliente(self):
        # Esse método não faz sentido: uma PFisica ""é"" um cliente, não tem como obter um cliente separado
        # a partir dela.
        return self.cliente
    """"""
    
    
    def emitirFicha(self): 
        ...
    
    
class PJuridica(Cliente):
    def __init__(self,**D):
        self.CNPJ    = D.pop('cnpj','---.---.---/---- --')
        self.INSC    = D.pop('insc','--')
        super().__init__(**D)

    def emitirFicha(self):
        resposta='Nome: '+self.cliente+'\nCNPJ: '+self.CNPJ+'\nEndereço: '+self.Endereco+'\nCidade: '+self.Cidade+'UF :'+self.UF
        return resposta

","
            0
        ",,,"['\npython', 'orientação-a-objetos', 'classes', 'objetos\n']"
503961,Como atribuir uma função em um botão do kivy?,"
Sou iniciante no python e quero que sempre que um determinado botão seja apertado, execute uma função. Aqui está o código:
application.py
import kivy
kivy.require(""1.8.0"")

from kivy.app import App

class application(App):
    def printar(self):
        print(""Hello World"")
        
application().run()

application.kv
BoxLayout:
    orientation: ""vertical""
    BoxLayout:
        spacing: 130
        padding: [30, 30, 30, 30]
        size_hint: [1, .1]
        orientation: ""horizontal""
        
        Button:
            id: option
            text: ""Options""
            
        Label:
            text: ""Connected""
            bold: True
            color: [0, 1, 0, .8]
            font_name: ""DejaVuSans""
            
        Button:
            id: onoff
            text: ""On/Off""
            
    BoxLayout:
        orientation: ""horizontal""
        spacing: 20
        padding: [30, 30, 30, 30]
        
        TextInput:
            size_hint: [.7, .05]
            pos_hint: {""y"": .5}
            multiline: False
            hint_text: ""Write""
        
        Button:
            id: send
            text: ""Send""
            size_hint: [.2, .05]
            pos_hint: {""y"": .5}
            on_release: root.printar()

","
def printar(self):
   print(""ação"")


Button:
    id: option
    text: ""Options""
    on_press: root.printar()

Sempre que houver uma ação no botão a função chamada  printar()  sera iniciada, se só chamar a função ""printar()"" não sera encontrada  tem que fazer referencia a instancia.
Pode fazer a parte das especificações diretamente no código python qual tipo de layout:
import kivy
kivy.require(""1.8.0"")

from kivy.app import App
from kivy.uix.boxLayout import BoxLayout


class Programa(BoxLayout):
    def printar(self):
       print(""inicado"")

class application(App):
    pass
        

iniciar.application()
iniciar.run()




<Programa@BoxLayout>:
    orientation: ""vertical""
    ...resto do código
        
        Button:
            id: option
            text: ""Options""
            on_press: root.printar()

","
            1
        ",,,"['\npython', 'python-3.x', 'python-kivy', 'kivy\n']"
503935,Como adicionar marcadores em um contato do Google via People API?,"
Estou adicionando contatos via People API com o seguinte código:
SCOPES = ['https://www.googleapis.com/auth/contacts']
def start_service():
    creds = None
    if os.path.exists('token.pickle'):
        with open('token.pickle', 'rb') as token:
            creds = pickle.load(token)
    # Se as credenciais não estiverem válidas é feito um novo login.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Salva as credênciais.
        with open('token.pickle', 'wb') as token:
            pickle.dump(creds, token)

return build('people', 'v1', credentials=creds)

Usando o campo userDefined para marcar os contatos:
service = start_service()
def criar_contato(service, name, phone, tag):
    return service.people().createContact(body={
        ""names"": [
            {
                ""givenName"": name[0], ""middleName"": name[1], ""familyName"": name[2] 
            }
        ],
        ""phoneNumbers"":[
            {
                ""value"": phone, ""type"": ""main""
            }
        ],
        ""userDefined"": [
            {
                ""key"": ""Tag"", ""value"": tag
            }
        ]
    }).execute()

Porém uso a interface WEB para gerenciar e uso o campo Marcadores para agrupar alguns contatos.
https://contacts.google.com/

Existe algum campo em que posso definir esses marcadores dentro da API?
",,,,,"['\npython', 'python-3.x', 'google\n']"
503915,"Tabela vazia (""Empty DataFrame"") e ambiguidade de comparação no Pandas","
Olá, estou tentando a uns dias montar um programa, o grosso nele está funcionando porém existem duas exigências que não se realizam de jeito nenhum. que são elas:

Quantidade e o total cobrado de exames envolvendo EcoDoppler e Doppler que foram efetuados;
Quantidade de exames com valores unitários(""vl_unit"") 30% acima ou abaixo do valor de referência(""vl_ref"").

No primeiro eu já tentei usar todo tipo de comando para realizar a busca das palavras ""Doppler"" e ""Ecodoppler"", porém ele só me retorna Empty DataFrame; se caso eu colocar  na busca da coluna servico >= Doppler ele me retorna uma lista de palavras que até contem o doppler mas também retornar palavras que não contem ao mesmo tempo, mas se eu colocar == ele da uma tabela vazia e se eu colocar <= funciona tambpem porem no mesmo esquema do >=.
E no segundo eu já tentei usar todo tipo de separação para a condição if comparar mas ele sempre fala que o termo está ambíguo, não sei mais o que fazer para conferir se tem algum numero na coluna ""vl_unit"" que seja 30% maior, ou menor, na ""vl_ref"".
Segue o Código:
import pandas as pd
contas= pd.read_csv('contas.csv', sep = ';')
#Quantidade e o total cobrado de exames envolvendo EcoDoppler e Doppler foram efetuados
doppler = contas.query(""servico == 'Doppler'"")
dopplerMaior = contas.query(""servico >= 'Doppler'"")
print(""\n\nTabela vazia:\n"",doppler)
print(""\n\nTabela mostrando o dopplerMaior (que não é o que quero): \n"",dopplerMaior['servico'])
#Quantidadede exames com valores unitários 30% acima ou abaixo do valor de referência
MaiorQueTrinta = []
if ((contas['vl_unit']) == (contas['vl_ref']*(1.3))):
MaiorQueTrinta.append(contas['vl_unit'])
print(MaiorQueTrinta)
Gostaria apenas de saber o que está acontecendo e o que está dando errado. Para malhor ajuda vou colocar um treixo do arquivo CSV para teste:
matric;sexo; idade ;atend;tuss;servico;plano;vl_unit;vl_ref;qtde
14993;F; 60 ;06/12/2017;20201010;ACOMPANHAMENTO CLINICO DE TRANSPLANTE RENAL NO PERIODO DE INTERNACAO DO RECEPTOR;1077 ;210.00;202.01;1
10258;F; 27 ;14/03/2016;31602037;ANESTESIA GERAL OU CONDUTIVA PARA REALIZACAO DE BLOQUEIO NEUROLITICO;1145 ;492.99;316.02;1
12343;M; 86 ;14/02/2016;16020065;ANESTESIA P/ANGIOGRAFIA CAROTIDA BILAT;1132 ;338.02;160.20;2
10535;M; 50 ;14/07/2016;16020065;ANESTESIA P/ANGIOGRAFIA CAROTIDA BILAT;1091 ;325.21;160.20;11
11500;F; 38 ;31/08/2016;16020065;ANESTESIA P/ANGIOGRAFIA CAROTIDA BILAT;1112 ;257.92;160.20;4
10352;F; 14 ;05/09/2017;10101020;CONSULTA EM DOMICILIO;1127 ;107.07;101.01;1
11096;F; 62 ;08/09/2017;10101020;CONSULTA EM DOMICILIO;1190 ;208.08;101.01;1
10616;F; 45 ;01/10/2016;40901360;DOPPLER COLORIDO DE VASOS CERVICAIS ARTERIAIS BILATERAL (CAROTIDAS E VERTEBRAIS);1069 ;625.79;409.01;1
11861;M; 57 ;02/11/2016;40901360;DOPPLER COLORIDO DE VASOS CERVICAIS ARTERIAIS BILATERAL (CAROTIDAS E VERTEBRAIS);1075 ;392.65;409.01;1
13610;F; 58 ;07/03/2016;40901076;ECODOPPLERCARDIOGRAMA COM ESTRESSE FARMACOLOGICO;1085 ;797.57;409.01;2
10191;M; 29 ;24/10/2016;40901076;ECODOPPLERCARDIOGRAMA COM ESTRESSE FARMACOLOGICO;1065 ;813.93;409.01;1
14771;M; 56 ;27/09/2017;31602614;PORTE ANESTESICO 2;1011 ;445.60;316.03;4
10023;M; 59 ;28/09/2017;31602614;PORTE ANESTESICO 2;1003 ;347.63;316.03;1

Por favor, preciso muito apenas dessas duas condições.

","
Você pode buscar entradas no DataFrame da seguinte forma:
df_with_filter = df[ df['coluna'] == 'condicao' ]

Na questão de verificar dois valores da mesma linha que satisfaçam uma condição, você precisa iterar sobre cada valor dentro de um dataframe.
Para obter os valores de um DataFrame, basta usar df.values.
O código abaixo usa esses métodos que comentei anteriormente. Acredito que seja suficiente para resolver seu problema.
import numpy as np
import pandas as pd

contas= pd.read_csv('contas.csv', sep = ';')

# Obtém todas as entradas que contém Doppler ou EcoDoppler na coluna ""servico""
df_doppler = contas[(contas['servico'] == 'Doppler') |  contas['servico'] == 'EcoDoppler']

# Quantidade de exames com valores unitários(""vl_unit"") 30% acima ou abaixo do valor de referência(""vl_ref"").
# Obtém os valores do dataframe em formado de array (numpy)
values = contas.values
# Obtém o nome das colunas
column_names = contas.column


# Obtém os índices das colunas val_unit e val_ref
val_unit_idx = np.where(column_names == 'val_unit')
val_ref_idx = np.where(column_names == 'val_ref')
# Itera os dados presentes do dataframe para buscar valores que satisfaçam a condição
val_match = []
for entry in values:
  if( (entry[val_unit_idx] == entry[val_ref_idx] * 1.3) or  (entry[val_unit_idx] == entry[val_ref_idx] * 0.7) ):
    # Adiciona a linha do dataframe (em formato de array) na lista val_match
    val_match.append(entry)

","
            0
        ",,,"['\npython', 'pandas\n']"
503737,encontrar intersecções em dois graficos em python,"
Eu tenho um código bem simples mas funcional. Ele obedece a duas funções matemáticas, testando diferentes valores de x e retornando as coordenadas do ponto caso o resultado das duas funções sejam o mesmo (y):

def funcs():
    for x in range(-100, 100):
        funcA = (x**2) + x - 2 
        funcB = 6 - x
        if funcA == funcB:
            print(""###intersecção enctontrada###"") 
            print(f'({x},{funcA})')
        else: 
            pass


funcs()

output:
###intersecção enctontrada###
(-4,10)
###intersecção enctontrada###
(2,4) 

Mas eu tenho um grande problema, isso só funciona quando a intersecção se encontra quando o valor de x é um número inteiro, quando a intersecção ocorre quando o valor é quebrado, ele não mostra nada.
O Python suporta até 16 casas decimais, e fazer um range de todas as casas decimais é completamente inviável. Então eu pensei que talvez seria possível fazer o Python parar de calcular as casas decimais depois de um certo número de casas decimais, pois eu acredito que se eu apenas arredondar o valor não impedirá o Python de contar as outras casas.
E eu preciso de uma solução prática de resolver esse problema e retornar todas as intersecções independente se são inteiros ou não.
alguém me ajuda, por favor, obrigado.
","
Da matemática, sabemos que as interseções de duas curvas podem ser definidas igualando as funções geradoras. Isto é, se você possui duas funções, A(x) e B(x), então a interseção ocorrerá nos valores de x tal que A(x) = B(x). Para encontrar os valores de x, basta resolver a equação.


Igualando as duas:



Resolvendo essa equação de segundo grau, você obterá:

Ou seja, encontrará os valores de x=2 e x=-4 que resolvem a equação.
De forma dinâmica, você pode utilizar a biblioteca sympy para isso.
import sympy

x = sympy.symbols('x')

A = x**2 + x - 2
B = 6 - x

equation = sympy.Eq(A, B)

print( sympy.solveset(equation) )
# FiniteSet(-4, 2)

Veja que o Python resolveu a equação para você e retornou um conjunto finito de soluções contendo o -4 e 2. Caso queira o par (x, f(x)) como saída, basta fazer:
solutions = sympy.solveset(equation)

for s in solutions:
  print(s, A.subs(x, s))

# -4 10
# 2 4

","
            2
        ","
No Python, usar o for i in range te retorna apenas valores inteiros.
Para você obter valores do tipo .float, uma possível solução seria:
import numpy as np
def funcs():
    for x in np.arange(-100.0, 100.0, 0.1, dtype = float):

Porém como o Woss respondeu acima, acho que sua equações retornam apenas esses valores, precisaríamos testar outra equação (com os pontos de intersecção conhecidos) para testarmos a hipótese de retornar os valores float.
Muito legal sua pergunta!
links uteis:
Python - Float Range
How to print float number using foor loop
","
            -1
        ","['\npython', 'funções', 'matemática', 'gráfico\n']"
503692,Print do menor número de uma tabela pandas,"
Olá,
Tenho um Arquivo CSV com 1000 linhas e 10 colunas, uma das colunas mostra a idade das pessoas, a idade mínima masculina é 0 e a máxima é 96, mas na hora de dar o print o resultado sai com um traço ""-"".
por exemplo, se printar o min e o max irá sair:

até 96
Mas eu preciso que saia:
0 até 96

segue o código abaixo
import pandas as pd

contas = pd.read_csv('contas.csv', sep=';')
Feminino = contas.loc[contas['sexo'] == 'F']
Masculino = contas.loc[contas['sexo'] == 'M']
print('''Faixa etária Feminina: {} até {}'''.format(min(Feminino['idade']),max(Feminino['idade'])))
print('''Faixa etária Masculina: {} até {}'''.format(min(Masculino['idade']),max(Masculino['idade'])))

cont_F = 0
cont_M = 0
for i in contas['sexo']:
    if i == 'F':
        cont_F +=1
    elif i == 'M':
        cont_M += 1
print('Feminino: {} Masculino: {}'.format(cont_F,cont_M))


Preciso que apenas no lugar que esteja circulado em vermelho esteja o valor de 0.
","
Usando os dados postados no comentário.
Importando biblioteca
>>> import pandas as pd

Carregando arquivo
>>> contas = pd.read_csv('dados.csv', delimiter="";"")

Filtrando dataframe
>>> Masculino = contas.loc[contas['sexo'] == 'M']

Verificando filtro
>>> Masculino
   matric sexo  idade       atend  ...  plano vl_unit  vl_ref  qtde
0   14993    M      0  06/12/2017  ...   1077  210.00  202.01     1
1   10258    M     27  14/03/2016  ...   1145  492.99  316.02     1

[2 rows x 10 columns]

Imprimindo resultado
>>> print('''Faixa etária Masculina: {} até {}'''.format(min(Masculino['idade']),max(Masculino['idade'])))
Faixa etária Masculina: 0 até 27

Entretanto, caso vc tenha um hífen nos dados, isso vai gerar o resultado apresentado por você.
>>> import pandas as pd

>>> contas = pd.read_csv('dados-com-hifen.csv', delimiter="";"")

>>> contas
   matric sexo idade       atend  ...  plano vl_unit  vl_ref  qtde
0   14993    M     -  06/12/2017  ...   1077  210.00  202.01     1
1   10258    M    27  14/03/2016  ...   1145  492.99  316.02     1

[2 rows x 10 columns]

>>> Masculino = contas.loc[contas['sexo'] == 'M']

>>> Masculino
   matric sexo idade       atend  ...  plano vl_unit  vl_ref  qtde
0   14993    M     -  06/12/2017  ...   1077  210.00  202.01     1
1   10258    M    27  14/03/2016  ...   1145  492.99  316.02     1

[2 rows x 10 columns]

>>> print('''Faixa etária Masculina: {} até {}'''.format(min(Masculino['idade']),max(Masculino['idade'])))

Faixa etária Masculina: - até 27

Conforme disse nos comentários, deve ser alguma coisa com seus dados.
Tire a prova dos nove com o comando abaixo
>>> contas.loc[contas['idade'] == '-']

   matric sexo idade       atend  ...  plano vl_unit  vl_ref  qtde
0   14993    M     -  06/12/2017  ...   1077   210.0  202.01     1

[1 rows x 10 columns]

ou
>>> contas.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2 entries, 0 to 1
Data columns (total 10 columns):
 #   Column   Non-Null Count  Dtype
---  ------   --------------  -----
 0   matric   2 non-null      int64
 1   sexo     2 non-null      object
 2   idade    2 non-null      object    <--- Veja que foi identificado como object e não como int64 como era de se esperar.
 3   atend    2 non-null      object
 4   tuss     2 non-null      int64
 5   servico  2 non-null      object
 6   plano    2 non-null      int64
 7   vl_unit  2 non-null      float64
 8   vl_ref   2 non-null      float64
 9   qtde     2 non-null      int64
dtypes: float64(2), int64(4), object(4)
memory usage: 288.0+ bytes

","
            0
        ",,,"['\npython', 'pandas', 'csv\n']"
503690,Como definir diretório especifico para o Render_template flask?,"
Estou renderizando um relatório em html utilizando o render_template do Flask. Como padrão o render_template renderiza o que está na pasta template, porém, necessito alterar para que o diretório seja outro. Tentei forçar um diretório padrão mas não obtive sucesso.
from flask import Blueprint, request, jsonify, send_from_directory, render_template, Flask

admin = Blueprint('admin', __name__, template_folder='././production/fiscal/relatorios')

return render_template(apuracao.html)

","
app = Flask(name,
template_folder=""views"")
Esse ""views"", no caso é o nome no qual eu troquei de templates para views. Sendo assim, vc terá que mudar o nome pra views no diretório. (views foi um nome sugestivo. você muda o diretório conforme o nome que vc da no ""template_folder=""nome que vc deseja mudar"")
","
            -1
        ",,,"['\npython', 'python-2.7', 'flask\n']"
503680,Com criar um programa que leia 10 números e escreva o menor e maior valor lido (Python)? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada há 12 meses.




                        Melhore esta pergunta
                    



Estou com uma certa dificuldade nesse exercício.
Aqui está meu código:
python
num = float(input('Digite o 1 numero: '))

guarda_maior = num
guarda_menor = num

for n in range(1, 10):

    num = float(input(f'Digite o valor de {n}: '))

    if num > guarda_maior:

        num = guarda_maior

    elif num < guarda_menor:

        num = guarda_menor

print(f'{guarda_maior}, {guarda_menor}')

Se alguém puder me ajudar.
Grato.
","
O problema estava no fato de que o num estava recebendo a var ao invés da var estar recebendo o num
if num > guarda_maior:

        guarda_maior = num #troquei a ordem, agora guarda_maior recebera num ao inves de num receber guarda_maior

    elif num < guarda_menor:

        guarda_menor = num #troquei a ordem, agora guarda_menor recebera num ao inves de num receber guarda_menor

print(f'{guarda_maior}, {guarda_menor}')

Dessa forma acredito que será resolvido.
","
            -2
        ",,,"['\npython', 'for', 'while\n']"
503591,Como filtrar opções do formulário por chave estrangeira? - Django Admin,"
Preciso mostrar apenas os objetos que possuem a mesma chave estrangeira company em Django na view de admin. O que eu consegui foi mostrar apenas os objetos relacionados utilizando get_queryset, mas nos campos do formulário aparecem todos os registros.
Meu código:
models.py
class Company(models.Model):
    name = models.CharField(max_length=64)
    cnpj = models.CharField(max_length=14)
    active = models.BooleanField(default=False)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(null=True, blank=True)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name_plural = ""Companies""


class User(models.Model):
    user = models.OneToOneField(BaseUser, on_delete=models.CASCADE)
    company = models.ForeignKey(Company, on_delete=models.CASCADE)
    department = models.ForeignKey(Department, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(null=True, blank=True)

    def __str__(self):
        return f""{self.user.first_name} {self.user.last_name}""


class Category(models.Model):
    name = models.CharField(max_length=32)
    company = models.ForeignKey(Company, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(null=True, blank=True)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name_plural = ""Categories""

class Resource(models.Model):
    name = models.CharField(max_length=64)
    model = models.CharField(max_length=64)
    location = models.CharField(max_length=64)
    manufacturer = models.CharField(max_length=64)
    provider = models.CharField(max_length=64)
    serial = models.CharField(max_length=32)
    user = models.ForeignKey(
        User, null=True, blank=True, on_delete=models.CASCADE)
    category = models.ForeignKey(Category, on_delete=models.CASCADE)
    company = models.ForeignKey(Company, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(null=True, blank=True)

    def __str__(self):
        return self.name

admin.py
@admin.register(Resource)
class ResourceAdmin(admin.ModelAdmin):
    list_display = (
        'name',
        'model',
        'location',
        'manufacturer',
        'provider',
        'serial',
        'user', # Campo que precisa ser filtrado pela chave estrangeira de company
        'category', # Campo que precisa ser filtrado pela chave estrangeira de company
        'created_at'
    )

    def get_queryset(self, request):
        user = User.objects.get(user=request.user)
        return Resource.objects.filter(company=user.company)

","
Use dois underscores para fazer referência à chave estrangeira (mais sobre o assunto aqui):
def get_queryset(self, request):
    return Resource.objects.filter(user__company=request.user.company)

","
            1
        ",,,"['\npython', 'django', 'django-admin', 'django-queryset\n']"
503569,Alterar eixo dos xx em Python,"
Estou a tentar criar um gráfico em Python, mas queria separar as linhas e os pontos na parte esquerda e direita, de forma a se verem esses pontos e não ficar tão junto. Como poderia fazer isso?
Código em Python feito por mim
#trabalho abandono escolar taxas de conclusao do ensino básico e secundário
import matplotlib.pyplot as plt
from numpy import *
import numpy as np
import pandas as pd
import time
import numpy as np
from scipy import interpolate
from matplotlib import style
style.use('ggplot')
plt.rcParams[""figure.figsize""] = [14,8]
x = np.array(['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'])
y = np.array([28.3, 23.0, 20.5, 18.9, 17.4, 13.7, 14.0, 12.6, 11.8, 10.6])
y0 = np.array([28.2, 26.3, 24.7, 23.6, 21.9, 20.0, 19.0, 18.3, 17.9, 17.3])
y1 = np.array([18.6, 17.8, 17.3, 16.8, 15.0, 14.7, 13.8, 14.0, 14.5, 13.5])
y2 = np.array([13.5, 12.9, 11.3, 10.1, 9.0, 7.9, 6.2, 6.0, 4.7, 4.1])
y3 = np.array([12.7, 12.3, 11.8, 9.7, 8.8, 9.2, 8.8, 8.8, 8.7, 8.2])
y4 = np.array([17.4, 16.6, 14.8, 13.7, 11.7, 10.2, 10.9, 10.4, 9.9, 9.9])
y5 = np.array([13.8, 13.2, 12.6, 11.8, 11.1, 11.0, 10.6, 10.5, 10.5, 10.2])
y6 = np.array([14.8, 14.9, 13.4, 12.4, 11.8, 10.8, 11.2, 10.6, 10.7, 10.9])
#y7 = np.array([13.9, 13.4, 12.7, 11.9, 11.2, 11.0, 10.7, 10.5, 10.5, 10.3])

n = len(x)
x_map = np.arange(0,n)
dx = 0.001
x_int = np.arange(0, n - 1, dx)  # vector where we interpolate

# We create the interpolants our three datasets separately:
f_y = interpolate.interp1d(x_map, y, 'cubic')
f_y0 = interpolate.interp1d(x_map, y0, 'cubic')
f_y1 = interpolate.interp1d(x_map, y1, 'cubic')
f_y2 = interpolate.interp1d(x_map, y2, 'cubic')
f_y3 = interpolate.interp1d(x_map, y3, 'cubic')
f_y4 = interpolate.interp1d(x_map, y4, 'cubic')
f_y5 = interpolate.interp1d(x_map, y5, 'cubic')
f_y6 = interpolate.interp1d(x_map, y6, 'cubic')
#f_y7 = interpolate.interp1d(x_map, y7, 'cubic')

# And interpolate in the resampled x-coordinates:
y_int = f_y(x_int)
y0_int = f_y0(x_int)
y1_int = f_y1(x_int)
y2_int = f_y2(x_int)
y3_int = f_y3(x_int)
y4_int = f_y4(x_int)
y5_int = f_y5(x_int)
y6_int = f_y6(x_int)
#y7_int = f_y7(x_int)

# Finally, plot the interpolated data:
fig, ax = plt.subplots()
ax.plot(x_int, y_int, lw = 4, alpha = 0.8, color = 'red')
ax.plot(x_int, y0_int, lw = 4, alpha = 0.8, color = 'Blue')
ax.plot(x_int, y1_int, lw = 4, alpha = 0.8, color = 'pink')
ax.plot(x_int, y2_int, lw = 4, alpha = 0.8, color = 'Black')
ax.plot(x_int, y3_int, lw = 4, alpha = 0.8, color = 'Green')
ax.plot(x_int, y4_int, lw = 4, alpha = 0.8, color = 'Orange')
ax.plot(x_int, y5_int, lw = 4, alpha = 0.8, color = 'Purple')
ax.plot(x_int, y6_int, lw = 4, alpha = 0.8, color = 'Brown')
#ax.plot(x_int, y7_int, lw = 4, alpha = 0.8, color = 'Blue')
# Set the correct xticks
ax.set_xticks(x_map)
ax.set_xticklabels(x)
plt.rc('xtick', labelsize=14)
plt.rc('ytick', labelsize=14)
ax.tick_params(axis='x', colors='black')
ax.tick_params(axis='y', colors='black')
ax.yaxis.label.set_color('black')
ax.xaxis.label.set_color('black')
ax.set_xlabel('Ano letivo', fontsize=16, labelpad=15)
ax.set_ylabel('Taxas de conclusão dos Ensinos Básico e Secundário (%)', fontsize=16, labelpad=15)
plt.ylim([0, 30])
plt.plot(x, y, ""o"", color = 'red', label = 'Portugal', markersize = 12)
plt.plot(x, y0, ""^"", color= 'Blue', label = 'Espanha', markersize = 12)
plt.plot(x, y1, ""s"", color= 'pink', label = 'Itália', markersize = 12)
plt.plot(x, y2, ""v"", color= 'Black', label = 'Grécia', markersize = 12)
plt.plot(x, y3, ""D"", color= 'Green', label = 'França', markersize = 12)
plt.plot(x, y4, ""p"", color= 'Orange', label = 'Noruega', markersize = 16)
plt.plot(x, y5, ""H"", color= 'Purple', label = 'União Europeia (desde 2020)', markersize = 12)
plt.plot(x, y6, ""*"", color= 'Brown', label = 'Reino Unido', markersize = 16)
#plt.plot(x, y7, ""^"", color= 'Blue', label = 'União Europeia (2013-2020)', markersize = 12)
ax.legend(loc=9, 
          bbox_to_anchor=(.65,1),
          labelspacing=1.5,
          columnspacing=0.5,
          ncol=4, fontsize=16,
          frameon=False)


ax.set_facecolor('xkcd:blue')
ax.patch.set_alpha(0.1)
plt.savefig('output.png', dpi=500, bbox_inches='tight', facecolor='white', transparent=False)
plt.show()

Gráfico obtido:

",,,,,"['\npython', 'gráfico\n']"
503568,"Como criar uma nova coluna 'ANO_NASCIMENTO' e inserir dados a ela de forma sequenciada, considerando cada linha da coluna NOME","
Olá!! Sou iniciante no Python e gostaria de contar com o ajuda de vocês para os problemas abaixo.
Tenho um df com 2 colunas.

NOME                      N.CELULAR           
João Pedro                98 – 9112 1632
Luís Antônio              98 – 8513 4545
Renato gome               98 – 9002 4012
Selma lira                98– 8807 1943
Luiza ving                98 – 8125 1448
Paulo junior              98 – 9056 1435
Manoel mendonça           98 – 9115 1616


Preciso criar uma terceira coluna de nome ANO_NASCIMENTO e inserir/adicionar dados a ela de forma sequenciada, considerando cada linha da coluna NOME. Acredito que esteja longe do que quero, mas tentei a função append. O fato é que não tenho certeza de como fazer isso.
df[""ANO_NASC""] = ' '
ANO_NASC = [ ]
Ano_nasc = int(input('Qual o ano de seu Nascimento?'))
if Ano_nasc > 0:
    ANO_NASC.append(Ano_nasc)
else:
    print('Fim')

Qualquer ajuda será bem vinda.
","
Você tem duas opções, inserir diretamente na coluna ou criar uma lista e depois adicionar os valores de uma vez. Seguem os detalhes.
Código base:
import pandas as pd

dados = [
    {""NOME"": ""João Pedro"", ""N.CELULAR"": ""98 – 9112 1632""},
    {""NOME"": ""Luís Antônio"", ""N.CELULAR"": ""98 – 8513 4545""},
    {""NOME"": ""Renato gome"", ""N.CELULAR"": ""98 – 9002 4012""},
    {""NOME"": ""Selma lira"", ""N.CELULAR"": ""98 – 8807 1943""},
    {""NOME"": ""Luiza ving"", ""N.CELULAR"": ""98 – 8125 1448""},
    {""NOME"": ""Paulo junior"", ""N.CELULAR"": ""98 – 9056 1435""},
    {""NOME"": ""Manoel mendonça"", ""N.CELULAR"": ""98 – 9115 1616""}
]

df = pd.DataFrame(dados)

Opção 1 - Inserir diretamente na coluna:
df['ANO_NASCIMENTO_Opcao_1'] = """"
for index, nome in enumerate(df['NOME']):
    texto = f'{nome}, qual o ano de seu Nascimento? '
    data = int(input(texto))
    df['ANO_NASCIMENTO_Opcao_1'].iat[index] = data

Opção 2 - Inserir valores depois de obtidos:
datas = list()
for nome in df['NOME']:
    texto = f'{nome}, qual o ano de seu Nascimento? '
    data = int(input(texto))
    datas.append(data)

df['ANO_NASCIMENTO_Opcao_2'] = datas

Imprimir dataframe
print(df)


","
            2
        ",,,"['\npython', 'funções', 'data\n']"
503512,Json do Facebook - Problemas com acentuação - Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





Estou tentando importar o arquivo friends.json do Facebook, mas estou com problema na acentuação. O arquivo friends.json é algo como:
{
  ""friends"": [
    {
      ""name"": ""Marco Aur\u00c3\u00a9lio Ferreira"",
      ""timestamp"": 1617453534
    },
    {
      ""name"": ""Tha\u00c3\u00ads Everton D. Soares Papaleo"",
      ""timestamp"": 1617420287
    }
          ]
 }

O código que eu estou usando é:
# encoding in UTF-8
import json

with open(""friends.json"", ""r"", encoding='UTF-8') as read_file:
    data = json.load(read_file)
    data = (data['friends'])
    for n in data:
        nome = n['name'] 
        print(nome)

Entretanto o retorno é o seguinte:
Marco AurÃ©lio Ferreira
ThaÃ­s Everton D. Soares Papaleo

Sinceramente eu já tentei de tudo, mas não consigo arrumar a acentuação. Alguém tem alguma luz?
","









Bloqueadas. Comments on this answer have been disabled, but it is still accepting other interactions. Learn more.
                        
                    





# -*- encoding: utf-8 -*-
import json

with open(""friends.json"", ""r"", encoding='UTF-8') as read_file:
    data = json.load(read_file)
    data = (data['friends'])
    for n in data:
        nome = n['name'].encode('latin-1').decode('unicode-escape').encode('latin-1').decode('utf-8')
    print(nome)

","
            -3
        ",,,"['\npython', 'json', 'facebook', 'acentuação\n']"
503502,Está dando variável não definida dentro de um if [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Art. 42. Podem adotar os maiores de 18 (dezoito) anos, independentemente do estado civil.

§ 1º Não podem adotar os ascendentes e os irmãos do adotando.


§ 2º Para adoção conjunta, é indispensável que os adotantes sejam casados civilmente ou mantenham união estável, comprovada a estabilidade da família.


§ 3º O adotante há de ser, pelo menos, dezesseis anos mais velho do que o adotando.

Art. 45. A adoção depende do consentimento dos pais ou do representante legal do adotando.

§ 1º. O consentimento será dispensado em relação à criança ou adolescente cujos pais sejam desconhecidos ou tenham sido destituídos do poder familiar.


§ 2º. Em se tratando de adotando maior de doze anos de idade, será também necessário o seu consentimento.

Escreva um programa que captura as seguintes informações:
A Idade do Adotante
O adotante é irmão ou ascendente?
É Adoção Conjunta?
Os adotantes são casados ou união estável?
Idade do Adotando
Pais Desconhecidos ou Adotando Destituído do Poder Familiar?
Consentimento dos pais quando não desconhecidos?
Consentimento do adotando (se maior de doze anos de idade)?
A partir das informações fornecidas, o programa deve informar se é possível ou não realizar a adoção!
Fiz o seguinte código:
p1 = int(input(""Digite a sua idade: ""))

p2 = int(input(""Digite a idade do adotando: ""))

p3 = str(input(""Você é irmão ou ascendente do adotando? [S/N]: ""))

p4 = str(input(""É adoção conjunta? [S/N]: ""))

p5 = str(input(""Os pais do adotando é desconhecido ou ele foi destituído do poder familiar? [S/N]: ""))

if p1 < 18:

  print(""Você não pode adotar!!"")

elif p1 - p2 < 16:

  print(""Você não pode adotar!!"")

elif p3 == ""S"":

  print(""Você não pode adotar!!"")

elif p4 == ""S"":

  p6 = str(input(""Vocês são casados ou possui união estável? [S/N]: ""))

elif p6 == ""N"":

  print(""Você não pode adotar!!"")

elif p5 == ""N"":

  p7 = str(input(""Os pais do adotando conscentiu a adoção? [S/N]: ""))

elif p5 == ""S"" and p2 >= 12:

  p8 = str(input(""O adotando conscentiu essa adoção? [S/N]: ""))

elif p7 == ""N"":

  print(""Você não pode adotar!!"")

elif p8 == ""N"":

  print(""Você não pode adotar!!"")

else:

  print(""PARABÉNS!! VOCÊ PODE ADOTAR."")

Dá o seguinte erro:


Digite a idade do adotando: 12

Você é irmão ou ascendente do adotando? [S/N]: N

É adoção conjunta? [S/N]: N

Os pais do adotando é desconhecido ou ele foi destituído do poder
familiar? [S/N]: S

---------------------------------------------------------------------------

NameError                                 Traceback (most recent call
last)

<ipython-input-3-64423a1d7de4> in <module>()

     12 elif p4 == ""S"":

     13   p6 = str(input(""Vocês são casados ou possui união estável? [S/N]: ""))

---> 14 elif p6 == ""N"":

     15   print(""Você não pode adotar!!"")

     16 elif p5 == ""N"":

NameError: name 'p6' is not defined ```


","
Não analisei o enunciado com atenção então se a lógica do código está errada eu não arrumei. Mexi apenas para executar o que se pretende olhando apenas o código resolvendo o problema relatado.
Eu tirei as chamadas de função str() porque não faz sentido converter para string o que já é string. Não tratei o erro que gerará quando a pessoa digitar algo que não é número onde se espera um número, deixo isso para você, aqui no site tá cheio de exemplo corretos com relação a isso usando try except.
Não é tão simples fazer a lógica quando há caminhos diversos para seguir. Não dá para seguir um único bloco if porque ele executará apenas um desses caminhos, e no caso existem situações que alguns deles serão executados mesmo que os anteriores também sejam.
Na situação simples de verificação pode fazer um único if para definir a não adoção.
Para facilitar a legibilidade do código preferi colocar em uma função e quando a pessoa não consegue adotar ele encerra função. Tem como fazer de outras formas, mas acho essa a mais fácil. Somete mostrará que pode adotar quando não retornar antes, então toda vez que avisar que não pode adotar encerra a função.
O erro se dá porque está tentando verificar o valor de uma variável que não existe, ela só existira se entrasse no elif anterior, porém se entrar no anterior não entra mais no que deu erro, o if é exclusivo, só entra em um deles. Por isso precisa de ifs diferentes e controlar o fluxo de alguma outra forma, como mostra no parágrafo anterior.
Quando uma variável só é criada dentro de um if, usar essa variável só pode acontecer dentro desse if, não pode ser outro if, a existência dele é condicional.
Também não consertei o fato de alguns casos digitar qualquer coisa é o mesmo que escolher sim e tem caso que não, isso é inconsistente e só deveria aceitar a letra específica. Também não acertei para aceitar tanto maiúsculo como minúsculo.
Não sei se eu gosto muito da ordem das perguntas. E os nomes das variáveis poderiam ser mais significativos, foi difícil entender o código com nomes mnemônicos que eu desconheço e não são universais.
def adocao():
    p1 = int(input(""Digite a sua idade: ""))
    p2 = int(input(""Digite a idade do adotando: ""))
    p3 = input(""Você é irmão ou ascendente do adotando? [S/N]: "")
    p4 = input(""É adoção conjunta? [S/N]: "")
    p5 = input(""Os pais do adotando é desconhecido ou ele foi destituído do poder familiar? [S/N]: "")
    if p1 < 18 or p1 - p2 < 16 or p3 == ""S"":
        print(""Você não pode adotar!!"")
        return
    if p4 == ""S"":
        p6 = input(""Vocês são casados ou possui união estável? [S/N]: "")
        if p6 == ""N"":
            print(""Você não pode adotar!!"")
            return
    if p5 == ""N"":
        p7 = input(""Os pais do adotando consentiu a adoção? [S/N]: "")
        if p7 == ""N"":
            print(""Você não pode adotar!!"")
            return
    if p5 == ""S"" and p2 >= 12:
        p8 = input(""O adotando consentiu essa adoção? [S/N]: "")
        if p8 == ""N"":
            print(""Você não pode adotar!!"")
            return
    print(""PARABÉNS!! VOCÊ PODE ADOTAR."")
    
adocao()

Veja funcionando no ideone. E no repl.it. Também coloquei no GitHub para referência futura.
","
            1
        ",,,"['\npython', 'python-3.x', 'if', 'else\n']"
503486,Como substituir extensões de arquivos?,"
Estou aprendendo python no coursera, e me deparei com o seguinte exercício. Minha dúvida refere-se com a forma de alterar as extensões de strings .hpp para para .h dentro ali da list comprehension:
filenames = [""program.c"", ""stdio.hpp"", ""sample.hpp"", ""a.out"", ""math.hpp"", ""hpp.out""]

newfilenames = [ i for i in filenames if _____] 

print(newfilenames) 
# Should be [""program.c"", ""stdio.h"", ""sample.h"", ""a.out"", ""math.h"", ""hpp.out""]



","
Se quer trabalhar com nomes de arquivos, você até poderia manipular as strings diretamente, como indica a outra resposta.
Mas também tem a opção de usar um módulo específico para tal, como o pathlib. Assim você pode verificar a extensão do arquivo e mudá-la de acordo:
from pathlib import Path

def change_extension(nome_arq):
    path = Path(nome_arq)
    # se a extensão é .hpp, troca por .h e retorna o novo nome
    if path.suffix == '.hpp':
        return path.with_suffix('.h').name
    # senão, retorna o nome sem modificação
    return nome_arq

filenames = [""program.c"", ""stdio.hpp"", ""sample.hpp"", ""a.out"", ""math.hpp"", ""hpp.out""]

newfilenames = [ change_extension(name) for name in filenames ] 
print(newfilenames) # [""program.c"", ""stdio.h"", ""sample.h"", ""a.out"", ""math.h"", ""hpp.out""]

# outra opção: aplicar a função a todos os elementos usando map
newfilenames = list(map(change_extension, filenames))

Desta forma me parece mais simples do que ficar fatiando strings e trocando pedaços dela.
E a função é facilmente extensível, pois se precisar trocar mais extensões, você pode por exemplo ter um dicionário que mapeia o antes e depois:
from pathlib import Path

def change_extension(nome_arq, substituicoes):
    path = Path(nome_arq)
    if path.suffix in substituicoes: # se a extensão deve ser substituída
        return path.with_suffix(substituicoes[path.suffix]).name
    return nome_arq

substituicoes = {
    '.hpp': '.h', # trocar .hpp por .h
    '.cpp': '.c', # trocar .cpp por .c
    '.out': ''    # extensão .out é removida
}
filenames = [""program.cpp"", ""stdio.hpp"", ""sample.hpp"", ""a.out"", ""math.hpp"", ""hpp.out"", ""abc.txt"", ""def.c""]
newfilenames = [ change_extension(name, substituicoes) for name in filenames ] 
print(newfilenames) # ['program.c', 'stdio.h', 'sample.h', 'a', 'math.h', 'hpp', 'abc.txt', 'def.c']

","
            0
        ","
Como você precisa substituir uma extensão por outra você deve trabalhar com fatiamento de strings.
Observe que as extensões que precisas substituir possuem 4 caracteres que são; .hpp. desse modo você precisa percorrer a lista que contém todas as strings, verificando se alguma delas - que vou chama-la de i - possui a extensão igual à .hpp, ou seja, se o fatiamento da respectiva string do índice -4 até o final forma a extensão .hpp. Em outras palavras...
i[-4:] == '.hpp'

Caso, alguma dessas extensões seja .hpp, devemos substituí-las por .h. O que conseguimos com uma concatenação entre a parte da string SEM a extensão com a nova extensão .h, ou seja:
i[:-4] + '.h'

Utilizando esta lógica juntamente com List Comprehension, podemos implementar o seguinte código:
filenames = [""program.c"", ""stdio.hpp"", ""sample.hpp"", ""a.out"", ""math.hpp"", ""hpp.out""]
newfilenames = [i[:-4] + '.h' if i[-4:] == '.hpp' else i for i in filenames]

print(newfilenames)

Dessa forma, obtemos como saída, o seguinte resultado:
['program.c', 'stdio.h', 'sample.h', 'a.out', 'math.h', 'hpp.out']


Outra forma ágil de resolver esta questão é chamando a função replace. Desta forma o código ficaria:
filenames = [""program.c"", ""stdio.hpp"", ""sample.hpp"", ""a.out"", ""math.hpp"", ""hpp.out""]
newfilenames = [i.replace('.hpp', '.h') for i in filenames]

print(newfilenames)

Neste código, o bloco for percorre a lista filename, substituindo todas as substrings .hpp por .h.
","
            0
        ","['\npython', 'python-3.x\n']"
503421,Não está salvando a imagen no caminho,"
Estou criando um campo de ImageField no django, mas quando coloco pra salvar, ele salva no banco o nome da imagem mas nao salva o caminho para a imagem.
models:
class Cliente(models.Model):
    photo = models.ImageField(upload_to='static/media/imagens/', blank=True)


settings:
MEDIA_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = ""/static/""
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'core/static')
]

MEDIA_URL = '/media/' 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


caminho do arquivo:
core
 -static
  -geral
  -media
   -imagens


Espero que me ajudem.
","
O campo ImageField requer a instalação da biblioteca Pillow para que ele possa fazer a validação da imagem mas se você não quiser/puder instalá-la substitua o ImageField por FileField no modelo:
...
class Cliente(models.Model):
    photo = models.FileField(upload_to='imagens', blank=True)

Aliás, a definição para o diretório de mídia não correto pois você está dizendo que ele fica em ""core/media"" e não em ""core/static/media"", daí você pode colocar no ""settings.py"" algo como:
MEDIA_ROOT = os.path.join(BASE_DIR, 'static', 'media')

O se quiser separar o conteúdo estático do de mídia, deixe como está e acrescente no começo ""urls.py"" da tua aplicação:
from django.conf import settings

E na última linha...
urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

Daí o Django irá entendê-lo também como um diretório de conteúdo estático (ou seja, o ""/static"" e o ""/media"").
","
            0
        ",,,"['\nmysql', 'python', 'django', 'back-end', 'django-2.0\n']"
503396,Produto entre vetores [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



O usuário escolhe a quantidade de posições de dois vetores e faz o produto entre eles e exibe na lista o resultado, o código que fiz está abaixo
v1 = int(input(""Digite a quantidade de posições do seu vetor: ""))

lista1 = []

for i in range(v1):

  lista1.append(int(input(""Informe o valor da posição %d: "" % (i+1))))

vetor1 = lista1

v2 = int(input(""Digite a quantidade de posições do seu vetor: ""))

lista2 = []

for i in range(v2):

  lista2.append(int(input(""Informe o valor da posição %d: "" % (i+1))))

vetor2 = lista2

lista3 = []

if len(vetor1) == len(vetor2):

  p = vetor1 * vetor2

  p = lista3

else:

  print(""Não é possível calcular o produto escalar de vetores com dimensões distintas."")

Mensagem de erro:
TypeError                                 Traceback (most recent call last)

<ipython-input-75-a40e9ce08c1c> in <module>()

     11 lista3 = []

     12 if len(vetor1) == len(vetor2):

---> 13   p = vetor1 * vetor2

     14   p = lista3

     15 else:

TypeError: can't multiply sequence by non-int of type 'list'

","
Não existe uma implementação de multiplicação entre sequências no python, por isso a mensagem de erro.
Você pode calcular o produto escalar usando a função zip para iterar sobre as duas listas ""ao mesmo tempo"" e multiplicando os seus valores.
produto_escalar = [a * b for a, b in zip(vetor_1, vetor_2)]

Acima estou usando list comprehensions para gerar a lista de resultado, mas você poderia criar uma lista e inserir os valores manualmente.
produto_escalar = []
for a, b in zip(vetor_1, vetor_2):
    produto_escalar.append(a * b)

","
            2
        ","
Olá,
Pelo que eu compreendi, o problema está na tentativa de multiplicar diretamente os vetores. Como tais vetores estão representados por listas, esta operação não é possível de forma direta. Uma saída possível é a seguinte, com a realização das multiplicações de maneira isolada entre os valores de cada vetor:
v1 = int(input(""Digite a quantidade de posições do seu vetor: ""))
lista1 = []
for i in range(v1):
  lista1.append(int(input(""Informe o valor da posição %d: "" % (i+1))))
vetor1 = lista1
v2 = int(input(""Digite a quantidade de posições do seu vetor: ""))
lista2 = []
for i in range(v2):
    lista2.append(int(input(""Informe o valor da posição %d: "" % (i+1))))
vetor2 = lista2
lista3 = []
print(vetor1)
print(vetor2)
if len(vetor1) == len(vetor2):
    n = 0
    for c in vetor1:
        lista3.append(vetor1[n] * vetor2[n])
        n = n + 1
    print(f'O produto escalar do vetor informado corresponde a', sum(lista3))
else:
    print(""Não é possível calcular o produto escalar de vetores com dimensões distintas."")

","
            1
        ","['\npython', 'python-3.x', 'array', 'lista\n']"
503340,Para que serve export FLASK_APP e FLASK_ENV?,"
Eu estou aprendendo flask agora e entendi que, toda vez que vou rodar minha aplicação, preciso rodar antes:
export FLASK_APP=app.py
export FLASK_ENV=development

Eu apenas decorei que preciso fazer isso, mas não entendi o porquê. Para onde estou exportando esses comandos? Qual a função deles? Realmente preciso fazer isso toda vez (mesmo em um projeto que já fiz isso antes)?
","
São variáveis de ambiente que ajudam o Flask a entender como se comportar.
A primeira,FLASK_APP pode ser deixada vazia e então ele procurará por ""app"" ou ""wsgi"" (com ou sem o "".py"" no final, ou seja, pode ser um arquivo ou um módulo) mas você pode ausar:

Um arquivo/módulo no diretório atual, por exemplo FLASK_APP=src/hello;
Um módulo a ser importado, como FLASK_APP=hello.web;
Uma instância específica dentro do módulo, algo como FLASK_APP=hello:app2 ou
Executar diretamente a factory create_app() e até com passagem de parâmetros, tipo FLASK_APP=hello:create_app('dev')"".

Estes exemplos eu pequei da documentação do Flask.
Já a FLASK_ENVdefine o tipo de ambiente de execução do projeto, os valores reconhecidos são dois, ""production"" e ""development"", se nada for definido ele usará ""production"" por padrão.
E sua função é ligar/desligar determinados comportamentos dentro do Flask e extensões, por exemplo, usar ""development"" ligará o modo de depuração (""DEBUG"").
","
            2
        ",,,"['\npython', 'flask\n']"
503322,Desenhar coisas no pygame,"
Estou lendo um livro de python teve um codigo que não conseguir entender:
minha duvida
Duvidas:
1.O que é esse get_rect() ?
2.Como funciona essa coisa de tratar coisas como retangulo ?
3.O que é self.screen_rect = screen.get_rect() ?
4.Que é self.rect.centerx = self.screen_rect_centerx ,self.rect.bottom = self.screen_rect.bottom ?
me tirem essas duvidas pfv.
import pygame

class nave():
    
    def __init__(self,screen):

        self.tela = tela
        
        self.image = pygame.image.load('images/ship.bmp')
        self.rect = self.image.get_rect()
        
        self.screen_rect = screen.get_rect()

        self.rect.centerx = self.screen_rect_centerx
        self.rect.bottom = self.screen_rect.bottom

    def blitme(self):
        self.screen.blit(self.image,self.rect)
    

","
Olá, com o get_rect() recebes as coordenadas do objecto no ecrã.
Por exe:
# Aqui recebes o tamanho da imagem
tamanho = self.image.get_size()
print(tamanho)

Vais receber (comprimento, altura) da imagem.
# Aqui recebes as coordenadas da imagem.
coordenadas = self.image.get_rect()
print(coordenadas)

Vais receber (esquerda, cima, comprimento, altura) que é (x, y, width, height).
O x e y é igual a um ponto no ecrã, o primeiro ponto do rect que fica no canto superior esquerdo, o x é a contagem de píxeis da esquerda para a direita e o y é a contagem de cima para baixo.
Neste caso que recebes o width e height não são coordenadas absolutas de outro ponto do rect no ecrã como o x e o y.
Mas se fosse right e bottom (x, y, right, bottom) é o segundo ponto do rect que fica no canto inferior direito.
Imagina as linhas a sair desses 2 pontos, quando elas se cruzarem fazem o rect.
","
            0
        ",,,"['\npython', 'pygame\n']"
503319,Como substituir virgula por ponto de um df inteiro sem precisar fazer coluna por coluna - Python,"
tenho o seguinte código:
df10['Total_Forecast'] = df10['Total_Forecast'].apply(lambda x: float(x.replace(""."","""").replace("","",""."")))

Está funcionando, mas eu preciso aplicar o replace coluna por coluna do df10. Já tentei tirar o nome da coluna, mas o código não funciona para varrer todas as colunas do df10 que tem virgula, virar ponto. Tem algum jeito de fazer isso para o df inteiro?
","
é só aplicar a regra em todo dataframe
Criando dataframe teste
>>> import pandas as pd

>>> df = pd.DataFrame({""A"": [""Teste com, virgula"", ""Outro, teste""], ""B"": [""Nada aqui"", ""Mas, aqui tem""], ""C"": [1, 2]})

O dataframe
>>> df
                    A              B    C
0  Teste com, virgula      Nada aqui  1.0
1        Outro, teste  Mas, aqui tem  2.2

Convertendo
df1 = df.replace({',': '.'}, regex=True)

O Resultado
>>> df1
                    A              B    C
0  Teste com. virgula      Nada aqui  1.0
1        Outro. teste  Mas. aqui tem  2.2

","
            2
        ",,,['\npython\n']
503295,Como armazenar valores a cada interação durante a repetição de uma estrutura - Python,"
lista= [""2,55"",""3,4"",""3,83"",""5,1"",""6,8""]


for i in range(len(lista)):


    lista[i] = lista[i] 


    #PREEENCHER VALOR

    navegador.find_element_by_xpath('...').send_keys(lista[i])
    time.sleep(3)
    #obter valor #
    valor = navegador.find_element_by_xpath('...')
    valor = valor.text[:-3].replace(',', '.')

Gostaria de armazenar cada valor gerado para cada interação feita.
","
Se eu entendi bem a pergunta, você deve criar uma nova lista para armazenar os valores gerados.
Crie uma nova variável de valor lista vazia.
Exemplo:
valores = []
...
valor = valor.text[:-3].replace(',', '.')
valores.append(valor)

Infelizmente, não consigo entender seu código exatamente, as variáveis não estão no escopo desse código, não sei de onde vem usinas, por exemplo.
","
            -1
        ",,,"['\npython', 'loop', 'selenium\n']"
503275,Como receber dados do usuário e retornar valor de função usando flask? [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Eu tenho um projeto onde gostaria de aplicar uma função em python usando informações dadas pelo usuário e devolver o resultado da função para o html. Eu sei que normalmente se usa javascript para esses casos, mas minha função usa algumas funcionalidade do pandas e seria difícil escrever o mesmo código em javascript.
Ocorre que não sei como faço para acessar valores dados pelo usuário e nem como retornar o resultado da função para o html. O que tentei foi usar o comando:
<button action=""{{ url_for('myfunction') }}"">Mybutton</button> 

Isso funcionou para a função, mas não consigo pegar o valor do usuário e nem retornar o resultado da função para o html.
Aqui um exemplo replicável do que tentei até agora:
arquivo python
#app.py
from flask import Flask, render_template

app=Flask(__name__)

@app.route('/')
def render_index():
    return render_template('index.html', name='')

@app.route('/result')
def upper_name(name):
    return render_template('index.html', name=name.upper())

arquivo html:
#templates/index.html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>
    <form>
        <label for=""fname"">First name:</label><br>
        <input type=""text"" id=""fname"" name=""fname""><br>
        <p>Your upper case name is {{ name }}</p>
        <button action=""{{ url_for('upper_name') }}"">Upper</button> 
    </form>
</body>
</html>

Note que esse exemplo carrega a página, permite que o usuário entre um nome, mas quando o botão Upper é aplicado, a página não é atualizada da forma desejada.
Como faço para acessar valores dados pelo usuário e retorna os valores da minha função para o html usando flask?
","
O seu ""problema"" não está bem no Python mas sim no HTML. Acontece que o atributo action não existe em <button> (<button>: The Button element) e sim em <form>, então o teu formulário ficaria assim:
<!DOCTYPE html>
  ...
    <form action=""{{ url_for('index') }}"" method=""post"">
      <label for=""fname"">First name:</label><br>
      <input type=""text"" id=""form_name"" name=""name""><br>
      <p>Your upper case name is {{ name }}</p>
      <button type=""submit"">Upper</button>
    </form>
  ...

Veja que o action foi colocado em <form> e <button> recebeu o tipo ""submit"" para indicar que ele deve submeter o formulário ao ser clicado. A adição do method=""post"" serve para que o navegador use o método HTTP POST ao invés do GET para enviar o formulário.
Quando você envia por GET os dados vão codificados na própria URL, tipo ""/?name=fulano"", agora imagine um formulário completo com nome, telefone, senha etc...
Mas há uma coisa que podem ser acertadas no Python já que você não precisa criar duas rotas se no final elas irão exibem o mesmo conteúdo:
from flask import Flask, render_template, request

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():

    if request.method == 'POST':
        name = request.form['name'].upper()
    else:
        name = ''

    return render_template('index.html', name=name)

Veja que esta rota agora aceita tanto o método GET quanto o *POST.
Quando ela é acessada via POST (ou seja, ao receber os dados do formulário) o valor de ""nome"" é recuperado, o método .upper() usado para colocar a string em maiúsculas e o ""index.html"" rasterizado.
Caso contrário, que é o acesso via GET (o modo padrão), o ""index.html"" é rasterizado mas usando um valor vazio para ""nome"".
Agora uma dica, você pode colocar uma condição no ""index.html"":
{% if name != """" %}
<p>Your upper case name is {{ name }}.</p>
{% endif %}

E assim só exibir esta mensagem caso realmente exista um nome a ser impresso.
","
            2
        ",,,"['\npython', 'flask\n']"
503247,Problema na importação no Flask (Unable to import 'controllers' pylint(import-error),"
Boa noite, estou começando a programar agora e estou tentando fazer um sistema simples usando o framework Flask, porém durante a organização dos arquivos me deparei com o problema do título, não estou conseguindo importar o default localizado na pasta controllers, onde que eu estou errando?
","
Basicamente o problema é porque você não está utilizando '.'
Existem duas opções possíveis para resolver o seu problema.

Importar um único arquivo:

from .controller import default


Importar todos os módulos do diretório

from . import controller

","
            0
        ",,,"['\npython', 'mvc', 'flask', 'importação\n']"
503141,Ajuda com python Tkinter,"
Bom dia,
Tem uma coluna a mais mas não estou conseguindo perceber onde esta o erro.
segue o código:
from tkinter import*
from tkinter import messagebox
from tkinter import ttk
class arquivo:
     def __init__(self,master=None):
         self.widget1=Tk()
         self.widget1.title(""Programa Transanches"")
         self.tabela=ttk.Treeview(self.widget1,selectmode=""browse"",column=(""column1"",""column2"",""column3"",""column4"",""column5""))
         self.tabela.column(""column1"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#1"", text=""Numero Carga"")
         self.tabela.grid(row=1, column=0)
         self.tabela.column(""column2"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#2"", text=""Cidades"")
         self.tabela.grid(row=1, column=1)
         self.tabela.column(""column3"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#3"", text=""Estados"")
         self.tabela.grid(row=1, column=2)
         self.tabela.column(""column4"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#4"", text=""Total de Peso"")
         self.tabela.grid(row=1, column=3)
         self.tabela.column(""column5"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#5"", text=""Total de Volumes"")
         self.tabela.grid(row=1, column=4)
         self.widget1.mainloop()

","
Boa tarde, o erro que ocorre é que não aparece nada certo? Eis o pq:
vc tem que instanciar a classe pois ela foi construida mas não foi instanciada, outra questão apenas um conselho de boas práticas nomeie as classes com LetraMausculaNasPrimeirasPalavras ok? segue o código:
from tkinter import*
from tkinter import messagebox
from tkinter import ttk
class Arquivo:
     def __init__(self,master=None):
         self.widget1=Tk()
         self.widget1.title(""Programa Transanches"")
         self.tabela=ttk.Treeview(self.widget1,selectmode=""browse"",column=(""column1"",""column2"",""column3"",""column4"",""column5""))
         self.tabela.column(""column1"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#1"", text=""Numero Carga"")
         self.tabela.grid(row=1, column=0)
         self.tabela.column(""column2"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#2"", text=""Cidades"")
         self.tabela.grid(row=1, column=1)
         self.tabela.column(""column3"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#3"", text=""Estados"")
         self.tabela.grid(row=1, column=2)
         self.tabela.column(""column4"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#4"", text=""Total de Peso"")
         self.tabela.grid(row=1, column=3)
         self.tabela.column(""column5"", width=200, minwidth=50, stretch=NO)
         self.tabela.heading(""#5"", text=""Total de Volumes"")
         self.tabela.grid(row=1, column=4)
         self.widget1.mainloop()


if __name__ == '__main__':
    Arquivo()


","
            -1
        ",,,"['\npython', 'tkinter\n']"
503109,Como comparar se um número digitado pelo usuário é igual a determinado valor [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Como converter uma variável string para int?

                                (7 respostas)
                            

Fechada no ano passado.



Tenho este código:
idade = input('Qual a sua idade? ')
if(idade == 33):
    print('Ok, não parece que você está mentindo.')
else:
    print('Você tem certeza que não pulou alguns dígitos?')

Independente da idade que eu coloque, o código executa o else - mesmo quando insiro a resposta correta - que no caso seria 33.
","
Quando você faz:
idade = input('Qual a sua idade? ')

Você está atribuindo uma string à variável idade e, portanto, o seu código nunca irá executar o if. Pois, o if só será executado se a idade for do tipo int. Dessa forma, o código sempre executará o else.
Por padrão, a função input() sempre retorna uma string. Por isso, para consertar este problema, basta converter o valor capturado para inteiro - int. Tal como listado na primeira linha do código abaixo.
idade = int(input('Qual a sua idade? '))
if idade == 33:
    print('Ok, não parece que você está mentindo.')
else:
    print('Você tem certeza que não pulou alguns dígitos?')

Observe que a primeira linha de código captura o valor digitado e converte para inteiro e, só em seguida, realiza as verificações.
Outra coisa, os parênteses que você tinha colocado na linha do if são desnecessários.

Agora para você reexecutar o código, você pode envolve-lo em um bloco while True. Desta forma o código ficaria:
while True:
    idade = int(input('Qual a sua idade? '))
    if idade == 33:
        print('Ok, não parece que você está mentindo.')
    else:
        print('Você tem certeza que não pulou alguns dígitos?')
    
    while (resp := input('Desejas continuar? [S/N] ').upper()) not in {'S', 'N'}:
        print('Valor INVÁLIDO!')
    if resp == 'N':
        break

Observe que o código será reexecutado todas as vezes que sua resposta for s ou S.
Observe que as linhas de código...
while (resp := input('Desejas continuar? [S/N] ').upper()) not in {'S', 'N'}:
        print('Valor INVÁLIDO!')

...formam um recurso disponibilizado pelo Python 3.8 ou superior que se chama
Assignment Expression.
Esta linhas de código verifica se a expressão atribuída à variável resp é S ou N. Caso o valor de resp não seja nem S e nem N, receberemos a mensagem Valor INVÁLIDO e seremos novamente solicitado uma resposta. Caso seja S, o código será reexecutado. Caso, seja N, o código será finalizado.
","
            1
        ",,,['\npython\n']
503064,Django - adicionar usuario como membro da equipe na view,"
Como permitir que um usuário ao se cadastrar já consiga se tornar membro da equipe pela própria view em Django?
Tentei da seguinte forma, mas nada aconteceu.
views.py:
def cadastro(request):
    form = ParticipanteForm()

    if request.method == 'POST':
        form = ParticipanteForm(request.POST)
        
        if form.is_valid():
            form.save()
            request.user.is_staff = True
            return redirect('dashboard')

    return render(request, 'cadastro.html', locals())

","
Olá, esse comportamento desejado faz relação com o modelo já existente:
.virtualenvs/nome_do_projeto/lib/python3.7/site-packages/django/contrib/auth/models.py
Um dos modelos dentro desse arquivo python é o seguinte:
class AbstractUser(AbstractBaseUser, PermissionsMixin):
    """"""
    An abstract base class implementing a fully featured User model with
    admin-compliant permissions.

    Username and password are required. Other fields are optional.
    """"""
    username_validator = UnicodeUsernameValidator()

    username = models.CharField(
        _('username'),
        max_length=150,
        unique=True,
        help_text=_('Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.'),
        validators=[username_validator],
        error_messages={
            'unique': _(""A user with that username already exists.""),
        },
    )
    first_name = models.CharField(_('first name'), max_length=30, blank=True)
    last_name = models.CharField(_('last name'), max_length=150, blank=True)
    email = models.EmailField(_('email address'), blank=True)
    is_staff = models.BooleanField(
        _('staff status'),
        default=False,
        help_text=_('Designates whether the user can log into this admin site.'),
    )
    is_active = models.BooleanField(
        _('active'),
        default=True,
        help_text=_(
            'Designates whether this user should be treated as active. '
            'Unselect this instead of deleting accounts.'
        ),
    )
    date_joined = models.DateTimeField(_('date joined'), default=timezone.now)

    objects = UserManager()

    EMAIL_FIELD = 'email'
    USERNAME_FIELD = 'username'
    REQUIRED_FIELDS = ['email']

    class Meta:
        verbose_name = _('user')
        verbose_name_plural = _('users')
        abstract = True

    def clean(self):
        super().clean()
        self.email = self.__class__.objects.normalize_email(self.email)

    def get_full_name(self):
        """"""
        Return the first_name plus the last_name, with a space in between.
        """"""
        full_name = '%s %s' % (self.first_name, self.last_name)
        return full_name.strip()

    def get_short_name(self):
        """"""Return the short name for the user.""""""
        return self.first_name

    def email_user(self, subject, message, from_email=None, **kwargs):
        """"""Send an email to this user.""""""
        send_mail(subject, message, from_email, [self.email], **kwargs)



O Django permite vc sobrescrever esse modelo padrão, mas vc precisará criar um app chamado ""usuarios"" e aí sim, no arquivo models.py desse app sobrescrever a função (app criado, a lista do settings deve ser atualizada)
is_staff = models.BooleanField(
        _('staff status'),
        default=True, #o Padrão é False
        help_text=_('Designates whether the user can log into this admin site.'),
    )

Mas vc vai copiar o arquivo e só modificar uma coisa nele?
Não... Um jeito mais fácil é vc herdar ele no modelo:
class MeuUsuario(AbstractUser):
""""""e aqui se atentar ao que pretende modificar""""""
""""""por exemplo, quer cadastrar email, nome e modificar a ação is_staff""""""
    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)


Obviamente que como foi mudado o nome de um item ""username"" para nome e você pretende considerá-lo como campo de usuário, precisa informar:
class MeuUsuario(AbstractUser):

    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)
 
    USERNAME_FIELD = 'nome' #aqui você indica o campo que predente usar como identificação do do namoe de usuário

Mas é só isso que pode fazer?
Não... se quiser ainda utilizar algumas outras opções padrão, pode acrescentar, por exemplo:
class MeuUsuario(AbstractUser):

    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)
 
    USERNAME_FIELD = 'nome'
    REQUIRED_FIELDS = ['first_name', 'last_name'] #aqui você pode colocar outros campos que já existem no modelo padrão.

e terminar chamando o Manager
class MeuUsuario(AbstractUser):

    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)
 
    USERNAME_FIELD = 'nome'
    REQUIRED_FIELDS = ['first_name', 'last_name']

    objects = UsuarioManager() #aqui foi mudado o nome do modelo padrão

Esse é o primeiro passo.
O segundo é: como foram alterado algumas coisas, você precisa sobrescrever o Manager, e por isso, antes dessa classe recém escrita terá de praticamente copiar e colar o UserManager(BaseUserManager) que está no mesmo arquivo do AbstractUser(AbstractBaseUser, PermissionsMixin) citado anteriormente:
class UserManager(BaseUserManager):
    use_in_migrations = True

    def _create_user(self, username, email, password, **extra_fields):
        """"""
        Create and save a user with the given username, email, and password.
        """"""
        if not username:
            raise ValueError('The given username must be set')
        email = self.normalize_email(email)
        username = self.model.normalize_username(username)
        user = self.model(username=username, email=email, **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_user(self, username, email=None, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', False)
        extra_fields.setdefault('is_superuser', False)
        return self._create_user(username, email, password, **extra_fields)

    def create_superuser(self, username, email, password, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)

        if extra_fields.get('is_staff') is not True:
            raise ValueError('Superuser must have is_staff=True.')
        if extra_fields.get('is_superuser') is not True:
            raise ValueError('Superuser must have is_superuser=True.')

        return self._create_user(username, email, password, **extra_fields)

class MeuUsuario(AbstractUser):

    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)
 
    USERNAME_FIELD = 'nome'
    REQUIRED_FIELDS = ['first_name', 'last_name']

    objects = UsuarioManager()

Mas é só isso?
Não, primeiro lembre-se que você (pra evitar conflitos), trocou o nome do Manager, então terá de trocar o nome da classe que acabou de copiar.
Você também trocou username por nome então precisa verificar todo o manager pra evitar problemas
Note também que você poderá retirar o campo extra_fields.setdefault('is_staff', False) do create_user sabendo que é um usuário que auto-cadastrar-se-á (essa palavra é bonita... deve tá errada):
class UsuarioManager(BaseUserManager):
    use_in_migrations = True

    def _create_user(self, **nome**, email, password, **extra_fields):
        """"""
        Create and save a user with the given username, email, and password.
        """"""
        if not username:
            raise ValueError('The given username must be set')
        email = self.normalize_email(email)
        nome = self.model.normalize_username(nome)
        user = self.model(username=nome, email=email, **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_user(self, nome, email=None, password=None, **extra_fields):
        extra_fields.setdefault('is_superuser', False)
        return self._create_user(username, email, password, **extra_fields)

    def create_superuser(self, username, email, password, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)

        if extra_fields.get('is_staff') is not True:
            raise ValueError('Superuser must have is_staff=True.')
        if extra_fields.get('is_superuser') is not True:
            raise ValueError('Superuser must have is_superuser=True.')

        return self._create_user(username, email, password, **extra_fields)

class MeuUsuario(AbstractUser):

    email = models.EmailField(_('email address'), blank=True)
    nome = models.CharField('nome', max_length=15, unique=True)
    is_staff = models.BooleanField('Funcionário', default=True)
 
    USERNAME_FIELD = 'nome'
    REQUIRED_FIELDS = ['first_name', 'last_name']

    objects = UsuarioManager()

Acho que isso é tudo... pelo menos no que se refere à pergunta.
Aí você diz, mas eu tenho o meu formulário... o procedimento é o mesmo, como se fosse um model comum, a idéia aqui é modificar uma ação padrão do django pra daí vc manipular isso de acordo com a estética que achar mais conveniente.
=]
","
            1
        ",,,"['\npython', 'django', 'forms-authentication\n']"
502974,Ordenação Matplotlib usando index como denominador das barras,"
estou num impasse e não encontro uma solução. Eu desejo gerar um Bar Plot a partir de um dataframe que está reordenado em ordem decrescente. Eu gostaria que o nome das barras fosse o índice (0 a 5) Quando eu ploto o meu plot, ele não aparece na ordem decrescente. Como eu posso mudar a ordem das barras?
Operações que eu já tentei:
import pandas as pd
import matplotlib.pyplot as plt 
plt.style.use('seaborn')
des = ['0. item A', '1. item B', '2. item C', '3. item D','4. item E','5. item F']
total = [100,75,5,30,3,5]

df = pd.DataFrame({'des': des,
                   'total':total}) 
df = df.sort_values(by=['total'], ascending=False)

df


# Solução 1
xs = df.index
ys = df['total']

plt.bar(xs, ys, color='#DDA63A')


# Solução 2:
plt.bar('index', 'total', color='#DDA63A', data=df)


#Solução 3
plt.bar(df.index, df.total, color='#DDA63A', data=df)


","
Uma solução é não usar Matplotlib, e sim o plot do próprio DataFrame do Pandas. Você pode ordenar o DataFrame e plotar da seguinte forma:
df.sort_values('total', ascending=False)[['des','total']].plot.bar();


Pra mais respostas semelhantes, em inglês: 
https://stackoverflow.com/questions/40902958/pandas-dataframe-bar-plot-with-sort-values-by-other-column
","
            1
        ","
Uma das forma que podes obteres o resultado desejado é:
import matplotlib.pyplot as plt
plt.style.use('seaborn')
des = ['0. item A', '1. item B', '2. item C', '3. item D','4. item E','5. item F']
total = [100,75,5,30,3,5]

df = pd.DataFrame({'des': des,
                   'total':total})
df = df.sort_values(by=['total'], ascending=False)

xs = df.index
ys = df['total']

plt.bar(sorted(xs), ys, color='#DDA63A')
plt.show()

Observe que a única alteração feita foi na penúltima linha reordenando a variável xs com a função sorted().

","
            1
        ","['\npython', 'matplotlib\n']"
502967,Como percorrer um JSON dentro de outro JSON em Python?,"
Gostaria de saber como posso percorrer um JSON dentro de outro JSON em Python.
Nessa caso, tenho um arquivo que está no seguinte link:
https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicao/570
E estou utilizando a biblioteca urllib.request para ler o meu arquivo main.py da seguinte maneira:
import urllib.request  #importando biblioteca urllib.request
import json #importando biblioteca json

url = 'https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicao/570' #atribuindo valor link a variável url
resp = urllib.request.urlopen(url+str()).read() #Abrindo e lendo URL - Atribuindo valor a variável resposta
resp = json.loads(resp.decode('utf-8')) #Codificando URL para codificação UTF-8

for x in resp:  #Percorrendo toda variável resp
   print(x['co_oferta']+' - '+x['no_curso']) #Imprimindo somente os campos necessários
   print("""") #Imprimindo linha em branco


No saída do terminal, ele me retorna um erro:
Traceback (most recent call last):
  File ""...\Documents\Projetos\Python\python-json-ufs\main.py"", line 9, in <module>
    print(x['co_ies']+' - '+x['no_ies']) #Imprimindo somente os campos necess�rios
TypeError: string indices must be integers

[Done] exited with code=1 in 0.956 seconds

Percebi que o arquivo inicia-se com:
{
  ""search_rule"":""UFRN - UNIVERSIDADE FEDERAL DO RIO GRANDE DO NORTE"",
  ""0"":{
        ""co_oferta"":""184760"",
        ""co_termo_adesao"":""4316"",
         .
         .
         .
         .

Como fosse um arquivo JSON dentro de outro.
Gostaria de saber se alguém pode me ajudar a ler corretamente esse arquivo.
","
Não existe uma maneira única de iterar por uma estrutura de dados JSON, mas essa estrutura é um dicionário composto por dicionários aninhados então após fazer a análise do JSON com json.loads() itere pelo itens usando dict.items() desempacotando em k e v, onde k é a chave no dicionário principal e v é o valor ou dicionário aninhado.

Como comentado pelo autor da pergunta as chaves de interesse são co_oferta e no_curso.

import json
import urllib.request

#Carrega um JSON
url = 'https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicao/570'
with urllib.request.urlopen(url) as response:
  resp = response.read()

#Faz a análise desse JSON.
resp = json.loads(resp.decode('utf-8'))

#Itera por todos os itens do dicionário principal....
for k, v in resp.items():
  #...se a 'co_oferta' está contida no dicionário aninhado...
  if 'co_oferta' in v:
    print(v['co_oferta'], end="" "")         #...se sim, imprime seu valor.
  else:
    print(""XXX"")                        #...se não, imprime `XXX`
  #...se a 'no_curso' está contida no dicionário aninhado...
  if 'no_curso' in v:
    print(v['no_curso'])                  #...se sim, imprime seu valor.
  else:
    print(""XXXXXXXXXXXXXXX XXXXXXXXX "") #...se não, imprime `XXX.......`
  print()

Teste o código no Repli.it
","
            2
        ","
Conforme acima segue todo o código:
import urllib.request
import json

url = 'https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicoes'
resp = urllib.request.urlopen(url).read()
resp = json.loads(resp.decode('utf-8'))



for i, x in enumerate(resp):
    print(x['co_ies']+"" -  ""+x['no_ies'])

saída:

21503 -  COLÉGIO PEDRO II
593 -  CENTRO FEDERAL DE EDUCAÇÃO TECNOLÓGICA CELSO SUCKOW DA FONSECA
26 -  ESCOLA NACIONAL DE CIÊNCIAS ESTATÍSTICAS
3223 -  ESCOLA SUPERIOR DE CIÊNCIAS DA SAÚDE
12 -  UNIVERSIDADE FEDERAL DO RIO GRANDE
1120 -  INSTITUTO FEDERAL DE EDUCAÇÃO, CIÊNCIA E TECNOLOGIA FLUMINENSE
1303 -  INSTITUTO FEDERAL DE EDUCAÇÃO, CIÊNCIA E TECNOLOGIA GOIANO...

com a url 'https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicao/570'
import urllib.request
import json

url = 'https://sisu-api-pcr.apps.mec.gov.br/api/v1/oferta/instituicao/570'
resp = urllib.request.urlopen(url).read()
resp = json.loads(resp.decode('utf-8'))

print(json.dumps(resp['search_rule']))

for i in range(len(resp['search_rule']) - 48):
    print(""============="")
    print((resp[str(i)]['no_curso']))


esta acima veja que as chaves são strings
","
            1
        ","['\npython', 'json', 'urllib\n']"
502962,Como somar valores de um dicionário com arrays pela chave em Python?,"
Tenho o seguinte dicionário:
{
    'tvmv': [121, 250, 48, 45, 54, 120, 115, 138, 60, 30, 274],
    'avic': [358, 60, 40],
    'hotels_resorts': [60, 31, 45, 50, 300, 165, 40, 46],
    'avani': [70, 40],
    'seteais': [164, 115, 78, 54, 45, 17, 180, 220],
    'tvpo': [54],
    'tlis': [54, 45],
    'coimbra': [54],
    'oriente': [54],
    'tvca': [350, 340, 230, 120, 45]
}

O que preciso é de conseguir somar os valores presentes nas listas individualmente pela chave, de modo a ficar com alguma coisa como:
{ 'tvmv': 1255, 'avic': 458, 'hotel_resorts': 737 , e por ai vai... }

Tentei desta forma:
time = 0
for x, y in times_min.items():
    for min  in y:
        time += min

Mas isso vai somar todos os valores, do dicionário todo.
","
Você pode utilizar o método dict.items para iterar sobre cada chave e valor do dicionário.
Como o valor de cada elemento do dicionário é uma lista de números (e lista são valores iteráveis), você pode utilizar a função sum para somar todos os valores.
A partir disso, você tem várias opções. Uma alternativa é já ir modificando o próprio dicionário conforme o percorre:
for key, val in di.items():
    # Modifica o dicionário:
    di[key] = sum(val)

Ou pode criar um novo dicionário (para evitar modificar o original):
newDi = {}
for key, val in di.items():
    # Adiciona a soma ao `newDi` com chave `key`:
    newDi[key] = sum(val)

E ainda nesse sentido de criar um novo dicionário, poderia utilizar um dicionary comprehension:
newDi = { key: sum(val) for key, val in di.items() }

","
            2
        ","
Basico de um dicionario  para percorre-lo:
 'get', 'items', 'keys' 'values'

interando pela chaves:
for i in a.keys():
  print(i)

interando pelo valores contido na chave:
for i in a.values():
  print(i)

buscando pela chave:
 a.get(""tvmv"")

integrando pelo conteudo:
k = chave
v= valor
for k,v in a.items():
   print(k, "" = "", v)

sem a indicação da chave ou valor sera retornado uma tuple.

A função sum() ela somara conteudo na lista sendo apenas inteiro, como foi mencionado pelo parceiro no post.
","
            2
        ","['\npython', 'python-3.x', 'array', 'dicionário', 'sum\n']"
502961,Pergunta urgente Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





Sabendo o número da linha específica em um arquivo TXT, como eu faço para converter todo o texto dessa linha em uma variável do tipo String?
Por exemplo: eu tenho na linha 5 escrito : "" Hello world""; e eu quero transformar o ""Hello World"" em uma variável do tipo String sabendo somente o número da linha.
",,,,,['\npython\n']
502960,Como tratar um valor de uma função como uma variável já existente?,"
Eu estou fazendo um simples jogo, somente para testar a biblioteca PyGame. Acontece que como no jogo eu teria diversos objetos eu achei mais viável criar uma função para move-los:
def mover(objeto,direcao,velocidade):
if direcao == 'dir':
    objeto = (objeto + int(velocidade))
if direcao == 'esq':
    objeto = (objeto - int(velocidade))
if direcao == 'cima':
    objeto = (objeto - int(velocidade))
if direcao == 'baixo':
    objeto = (objeto + int(velocidade))

Onde ""objeto"" é onde coloco a variável que guarda a posição do objeto que estou me referindo.
Criei uma bolinha e pra guardar sua posição criei a variável ""y_bola"", e pra move-la eu simplesmente aumento, ou diminuo esse valor. O problema é que quando eu coloco ""y_bola"" na função ""mover"" ela pega o valor de ""y_bola"" e não a variável em si.
Queria saber como atualizar o valor da variável (y_bola) dentro da função.
Aqui segue o código inteiro:
import pygame, time
pygame.init()

# Configurando a janela
tela = pygame.display.set_mode((400,300))
pygame.display.set_caption('Meu Jogo!')

# Preparando para inciar
jogando = True
 #configurando cores
branco = (255,255,255)
preto = (0,0,0)
vermelho = (255,0,0)
verde = (0,255,0)
azul = (0,0,255)
 #valores incicias
y_bola = (1890)
direcao = True

# Funções e procedimentos
def mover(objeto,direcao,velocidade):
    if direcao == 'dir':
        objeto = (objeto + int(velocidade))
    if direcao == 'esq':
        objeto = (objeto - int(velocidade))
    if direcao == 'cima':
        objeto = (objeto - int(velocidade))
    if direcao == 'baixo':
        objeto = (objeto + int(velocidade))

# Iniciando
while jogando == True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            jogando = False
    
    # Desenhando atores e objetos
    tela.fill(branco)
     #bola subindo
    if direcao == True:
        y_bola = (y_bola - 7)
        cor = (azul)
        if y_bola < 50:
            direcao = False
            cor = (vermelho)
     #bola descendo
    else:
        y_bola = (y_bola + 17)
        if y_bola > 1870:
            direcao = True
    pygame.draw.circle(tela,cor,(550,y_bola),70)
    pygame.display.update()

pygame.quit()```

","
A solução ideal seria criar um objeto para armazenar a posição e outros atributos das bolas, por exemplo:
VERMELHO = (255, 0, 0,)

class Bola:
    def __init__(self, x, y, tamanho, cor):
        self.x = x
        self.y = y
        self.tamanho = tamanho
        self.cor = cor

Daí você pode criá-la usando algo como:
bola = Bola(0, 0, 50, VERMELHO)

Para acessar os valores ""lá de dentro"" como bola.x, bola.y, bola.tamanho e bola.cor, por exemplo:
>>> print(bola.x)
0
>>> bola.y = 100

Daí a rotina de movimentação poderia ser colocada no laço principal (lá dentro do while):

    CIMA = 1
    BAIXO = 2
    PASSO = 5

    ALTURA = 500
    LARGURA = 500

    DIRECAO = random.choice([CIMA, BAIXO])

    tela = pygame.display.set_mode((LARGURA, ALTURA))

    while True:
        ...
        if direcao == CIMA:
            bola.y -= PASSO
            if bola.y < 0:
                direcao = BAIXO
        elif direcao == BAIXO:
            bola.y += PASSO
            if bola.y > ALTURA:
                direcao = CIMA
        ...
        pygame.draw.circle(tela, bola.cor, (bola.x, bola.y), bola.tamanho)

Ou mesmo colocar esta rotina em uma função que retorne os novos valores de X e Y para o objeto.
E para não deixar a resposta muito longa, preparei uma versão completa e comentada deste código.
","
            0
        ",,,"['\npython', 'funções', 'pygame\n']"
502919,Como acessar a posição de múltiplos matchs de um regex em uma string?,"
Eu sei que posso acessar a posição de um match de um regex em uma string usando os métodos start, end e span. Exemplo de um programa que identifica repetições em um texto:
import re
from colorama import Fore,Style

text='''Dorsey was born and raised in St. Louis, Missouri,[8][9] 
the son of Tim and Marcia (née Smith) Dorsey.[10][11][12] He is of English, Irish, and Italian descent.[13] 
His father worked for a company that developed mass spectrometers and his mother was a homemaker.[14] 
He was raised Catholic, and his uncle is a Catholic Catholic priest in Cincinnati.[15] He attended the Catholic 
Bishop DuBourg High School. In his younger days, Dorsey worked occasionally as a fashion model.
[16][17][18][19][20] By age 14, Dorsey had become interested in dispatch dispatch routing. Some of the open-source software he created in the area of dispatch logistics is still used by taxicab companies.[10] Dorsey enrolled at the University of Missouri–Rolla in 1995 and attended for two-plus years[15] before transferring to New York University in 1997, but he dropped out two years later,[21] one semester short of graduating.[15] 
He came up with the idea that he developed as Twitter while studying at NYU.[15][22]
'''

print(""Searching for repeated words ..."", ""\n"")
try:
    result=re.search(r'(\w{3,}\s)\1',text)
    start=result.start()
    end=result.end()
    value=result.group()
    print(""The word \""{}\"" is repeated at: "".format(value.split(' ')[0]),""\n\n"")

    print(text[start-100:start]+ Fore.RED + text[start:end]+ Style.RESET_ALL+text[end:end+200])
except:
    print(""No repeated words found"")

Retorna:

Note que o problema desse programa é que ele identifica apenas uma ocorrência. Eu imaginei que o método start retornaria uma lista ou tuple quando existe mais de um match, mas não é isso que acontece.
Como posso acessar a posição de todos os matchs de uma expressão regular em uma string? Por exemplo, a palavra dispatch também se repete no texto, mas não sei como faço para pegar a posição dela.
","
Você está utilizando a função re.search para fazer o match da expressão regular. De acordo com a documentação:

Escaneia através da string procurando pela primeira posição onde a expressão regular produz um match e retorna o match object correspondente. [...]

Portanto, como a função search (assim como match e fullmatch) permitem apenas uma busca, você deve utilizar outra função, que permita realizar múltiplas buscas sucessivas em uma string.
O Python fornece as funções re.findall re.finditer para realizar a busca ""completa"", indo além da primeira ocorrência se presente. De modo que:

re.findall retorna todos os matches sem sobreposição como uma lista de strings.
re.finditer retorna um iterador que produz match objects para cada match na string.

Como o seu código utiliza métodos presentes em match objects, finditer me parece mais ideal.
Observe que como finditer retorna um iterador, é necessário utilizar algum tipo de meio para iterar sobre cada match objeto por ele produzido. No caso da string não tiver fornecido nenhum match, o iterador será vazio, de modo que nenhuma iteração ocorrerá.
No exemplo da pergunta, seria algo como:
import re
from colorama import Fore, Style

text = '''Dorsey was born and raised in St. Louis, Missouri,[8][9]
the son of Tim and Marcia (née Smith) Dorsey.[10][11][12] He is of English, Irish, and Italian descent.[13]
His father worked for a company that developed mass spectrometers and his mother was a homemaker.[14]
He was raised Catholic, and his uncle is a Catholic Catholic priest in Cincinnati.[15] He attended the Catholic
Bishop DuBourg High School. In his younger days, Dorsey worked occasionally as a fashion model.
[16][17][18][19][20] By age 14, Dorsey had become interested in dispatch dispatch routing. Some of the open-source software he created in the area of dispatch logistics is still used by taxicab companies.[10] Dorsey enrolled at the University of Missouri–Rolla in 1995 and attended for two-plus years[15] before transferring to New York University in 1997, but he dropped out two years later,[21] one semester short of graduating.[15]
He came up with the idea that he developed as Twitter while studying at NYU.[15][22]
'''

print(""Searching for repeated words ..."", ""\n"")

all_matches_iter = re.finditer(r'(\w{3,}\s)\1', text)

for match in all_matches_iter:
    start = match.start()
    end = match.end()
    value = match.group()

    print(""The word \""{}\"" is repeated at: "".format(
        value.split(' ')[0]), ""\n\n"")
    print(text[start-100:start] + Fore.RED +
          text[start:end] + Style.RESET_ALL+text[end:end+200])

","
            5
        ","
Apenas para dar outra alternativa (pois o que eu usaria mesmo é finditer, conforme a outra resposta já explicou).
Você pode usar search indicando a posição em que a busca deve começar, e fazer um loop até que não haja mais matches:
import re

r = re.compile(r'(\w{3,}\s)\1')
end = 0
print(""Searching for repeated words ..."", ""\n"")
while True:
    result = r.search(text, end)
    if not result: break # se não achou, sai do while
    start = result.start()
    end = result.end()
    value=result.group()
    # o resto é igual (print, etc)

Repare que cada busca começa na posição em que a anterior termina (exceto pela primeira, que parte do início da string).
Curiosamente, esta opção de passar a posição inicial como parâmetro só está disponível para o método da classe Pattern (que é o que compile retorna), mas não na função re.search do módulo.

Aproveitando, sua regex pode ser melhorada pois ela tem alguns problemas.
Por exemplo, se o texto tiver algo como ""Não seria ria etc..."", o trecho ""ria ria"" será encontrado (o primeiro ""ria"" é da palavra ""seria"").
E se tiver algo como ""etc etc."", ele não é encontrado, pois você colocou o espaço dentro do grupo de captura, então \1 só vai encontrar a palavra se também tiver um espaço depois.
Para arrumar isso, a regex deveria ser: r'(\b\w{3,}\b)\s\1' - no caso, o \b serve para delimitar a palavra (leia aqui para mais detalhes) e coloquei o espaço fora dos parênteses (assim, result.group() retornará a palavra sem o espaço - no seu código, está retornando com o espaço depois, não sei se era essa a intenção).
Vale lembrar que \w pega não só letras, mas também dígitos e o caractere _. Se quiser somente letras (incluindo as acentuadas), pode trocar para r'(\b[^\W\d_]{3,}\b)\s\1'.
","
            3
        ","['\npython', 'regex\n']"
502864,Como armazenar em Python valores de um print em uma variável?,"
Importei dados de uma tabela em Google Sheets usando o Pandas e criei um data frame. Renomeei suas colunas e fiz um for loop para filtrar dentre uma dessas colunas, os valores a abaixo de 20, porém, só consigo ver o resultado com um print. Além disso, não consigo armazenar esses valores em uma variável. Por exemplo, para usa-las posteriormente em um gráfico.
Já tentei criar a variável antes do print. Já tentei converter em str ou em int.
from google.colab import auth
auth.authenticate_user()
import gspread
from oauth2client.client import GoogleCredentials
gc = gspread.authorize(GoogleCredentials.get_application_default())
worksheet = gc.open('CSV').sheet1
rows = worksheet.get_all_records()
import pandas as pd
tabela = pd.DataFrame.from_records(rows)
tabela.set_index(([""nome"",""idade"",""pet"",""jardim"",""casada""]))
idades =tabela[""idade""]

for x in idades:
    if x <=20:
        print(x)

","
Uma maneira é usar o loc
Exemplo:
Criando dataframe de teste
>>> df = pd.DataFrame({""idade"": [18, 22, 19, 21], ""nome"": [""Joao"", ""Pedro"", ""Sergio"", ""Murilo""]})

>>> print(df)
   idade    nome
0     18    Joao
1     22   Pedro
2     19  Sergio
3     21  Murilo

Filtrando
>>> df.loc[df[""idade""] <= 20]
   idade    nome
0     18    Joao
2     19  Sergio

Nota vc pode associar o resultado a um novo dataframe
>>> df1 = df.loc[df[""idade""] <= 20]

>>> print(df1)
   idade    nome
0     18    Joao
2     19  Sergio

Usando mais de uma condição
>>> df1 = df.loc[(df[""idade""] <= 20) & (df[""nome""] == ""Sergio"")]

>>> print(df1)
   idade    nome
2     19  Sergio

Nota Repare que cada condição está entre parentesis.
Nota Use & para and, | para or e ~ para not
","
            2
        ",,,"['\npython', 'pandas\n']"
502778,Classificação de gramatica no nltk,"
Estou usando a lib Natural Language Tool Kit para tratamento de alguns textos e nessa lib  possui o recurso RSLPStemmer() remove quase toda a palavra e deixa o radical.
Mas a palavras Homônimos perfeitos e parônimos o  RSLPStemmes() remove e ao passar para FreqDist  são classificadas como frequências de uma palavra.
A uma forma de lidar com essa situação usando o RSLPStemmer() sem perder a palavra e ao passar para FreqDist sem que
ocorra repetições que não deveria contar ?
","
Veja o exemplo abaixo:
import nltk
from nltk.stem.snowball import SnowballStemmer


def stemming_bag(words, stemmer):
    return [stemmer.stem(w) for w in WORDS]


def imprime(w, result):
    return list(zip(w, result))


WORDS = [""correr"", ""corria"", ""correndo"", ""correio"", ""corredor"", ""corredora"", ""corredeira"", ""correia""]

porter = stemming_bag(WORDS, nltk.PorterStemmer())
print(imprime(WORDS, porter))


lancaster = stemming_bag(WORDS, nltk.LancasterStemmer())
print(imprime(WORDS, lancaster))

rslp = stemming_bag(WORDS, nltk.stem.RSLPStemmer())
print(imprime(WORDS, rslp))

snowball_pt = stemming_bag(WORDS, SnowballStemmer(""portuguese""))
print(imprime(WORDS, snowball_pt))

O resultado seria
[('correr', 'correr'), ('corria', 'corria'), ('correndo', 'correndo'), ('correio', 'correio'), ('corredor', 'corredor'), ('corredora', 'corredora'), ('corredeira', 'corredeira'), ('correia', 'correia')]
[('correr', 'cor'), ('corria', 'corr'), ('correndo', 'correndo'), ('correio', 'correio'), ('corredor', 'cor'), ('corredora', 'corredor'), ('corredeira', 'corredeir'), ('correia', 'corre')]
[('correr', 'corr'), ('corria', 'corr'), ('correndo', 'corr'), ('correio', 'correi'), ('corredor', 'corr'), ('corredora', 'corr'), ('corredeira', 'corred'), ('correia', 'corre')]
[('correr', 'corr'), ('corria', 'corr'), ('correndo', 'corr'), ('correio', 'correi'), ('corredor', 'corredor'), ('corredora', 'corredor'), ('corredeira', 'corredeir'), ('correia', 'corr')]

Particularmente eu usaria o Snowball neste caso.
Porém, caso vc precise da frequência por palavra (ex.: corredor é diferente de corredora), isso teria que ser feito antes de fazer o stemming.
Veja também sobre Lemmatization e olhe a biblioteca NLPyPort
","
            1
        ",,,"['\npython', 'texto', 'nltk\n']"
502766,Como ordenar uma lista de dicionário de forma alfabética e gerar novos dicionários com condição if com Python?,"
Boa noite,
Estou com um exercício de Python que me travou, é o seguinte:
Leia e armazene em um dicionário o nome, a idade e o número do telefone de seus contatos, sendo que a chave deve ser o nome. Ao digitar uma string vazia para o nome, o programa interrompe a leitura e se encerra.
Apresente na tela os dados lidos em ordem alfabética pelo nome dos contatos. Uma possível solução de ordenar alfabeticamente é usar o método sort.
Em seguida, armazene os contatos em outros dois dicionários, utilizando como critério a idade: menores de 18 anos em um e os maiores em outro dicionário, eliminando o original. Apresente na tela os dois dicionários resultantes da separação.
Eu consegui gerar o dicionário e suas listas de acordo com a entrada e o break do programa caso a primeira entrada do nome seja string vázia.
Porém não consigo imprimir em ordem alfabética o dicionário, visto que se aplico o sort na chave name, ajusta apenas ela e se aplico nas demais bagunça todas as informações.
Também não consegui pensar em uma forma de fazer essa separação dos dicionários, dividindo os contatos que forem maiores que 18 anos em um e os menores em outro dicionário e eliminando o original.
Alguém poderia me dar uma ideia por favor?
Código até o momento:
informations = {'name':[], 'age':[], 'cellphone':[]}

for i in range(3):
  name = str(input('Qual o nome do seu contato? '))
  if name == """":
    print('Programa encerrado...')
    break
  age = int(input('Qual a idade do seu contato? '))
  cellphone = int(input('Qual o número de celular do seu contato? '))
  
  informations['name'].append(name)
  informations['name'].sort()
  informations['age'].append(age)
  informations['cellphone'].append(cellphone)

print('')
print(informations)

","
Opa! Há um problema no desenho do teu programa pois você não está armazenando nome, idade e telefone em um dicionário e sim, armazenando nomes, idades e telefones não relacionado entre si.
Ou seja, ao invés de:
informations = {'name':[], 'age':[], 'cellphone':[]}

Você deveria usar:
informations = []

Com cada item da lista fica armazenando as informações do contato:
informations.append({'name': name, 'age':age, 'cellphone':cellphone})

Então é possível usar o sort() para ordenar a lista:
informations.sort(key=lambda contact: contact[""name""])

Esta parte depois do ""key="" é uma função que o sort() usará para recuperar o valor a ser usado na ordenação. E a função lambda cuida justamente de retornar o nome do contato e apenas para exemplificar:
>>> c = {""name"": ""José"", ""age"": 10, ""cellphone"": ""9876-5432""}
>>> c = lambda i: i[""name""]
>>> a(c)
'José'

Este lambda é equivalente a um
def c(i):
    return i[""name""]

Só que mais simples.
Ah, e para maiores detalhes consulte o Sorting HOW TO do Python.
E quanto a separar em dois dicionários, há diversas maneiras mas como você faria se se fossem fichas de papel? Você olharia cadastro por cadastro e faria duas pilhas com quem é maior, ou não de 18 anos:
greater_than_18, lesser_than_18 = [], []

for contact in information:
    if contact[""age""] > 18:
        greater_than_18.append(...)
    else:
        lesser_than_18.append(...)

È possível fazer isto de várias formas mas este é o jeito mais simples.
","
            1
        ",,,['\npython\n']
502745,Posicionamento do mouse no centro de um retângulo com pygame.mouse.get_pos(),"
Olá!
Li o seguinte código com Pygame:
import pygame

PRETO = (0,0,0)
AMARELO = (255,255,0)
VERMELHO = (255,0,0)
VERDE = (0,255,0)
AZUL = (0,0,255)
BRANCO = (255,255,255)

LARGURAJANELA = 500
ALTURAJANELA = 400

pygame.init()

janela = pygame.display.set_mode((LARGURAJANELA, ALTURAJANELA))
label = pygame.display.set_caption(""Retang acompanha o mouse com delay_CLOCK"")
relogio = pygame.time.Clock()

ret = pygame.Rect(10, 10, 100, 50)

cont = True

while cont:
    relogio.tick(20) # Altere o valor para alterar o delay
    pygame.display.update()
    janela.fill((PRETO))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            cont = False

    (ret.left, ret.top) = pygame.mouse.get_pos()
    ret.left -= ret.width/2
    ret.top -= ret.height/2

    janela.fill(AMARELO)
    pygame.draw.rect(janela, AZUL, ret)
    pygame.display.update()

pygame.quit()

Eu não entendi esse trecho para centralizar o ponteiro do mouse no retângulo quando há movimento:
(ret.left, ret.top) = pygame.mouse.get_pos()
ret.left -= ret.width/2
ret.top -= ret.height/2

Quando era, apenas, (ret.left, ret.top) = pygame.mouse.get_pos(), ok. A posição do ponteiro o mouse é igual a posição left e top do retângulo.
Mas, quando você decrementa o ret.left e o ret.top, por que o mouse fica no centro? O valor de ret.left, por exemplo, não seria o valor atual dele menos a metade da largura?
De fato, eu não entendi. Se alguém puder me explicar eu agradeço. Já pesquisei na web e não achei nada.
Obrigado
","
Bem tem algumas coisas sobre seu codigo quê são bem estranhas tipo pygame.display .update no começo e no final, e janela.fill sendo substituido de toda forma, mas acredito que talvez seja um projeto maior.  Mas sobre o quê você perguntou:
(ret.left, ret.top) = pygame.mouse.get_pos()
o ponteiro do mouse vai ficar na cordenada x0/y0 do retangulo.
ret.left -= ret.width/2
ret.top -= ret.height/2

se você tirar o dividido por 2 (""/2"") vai ficar nas ultimas cordenadas o seja o contrario de 0/0 (por assim dizer)
E então se você dividir por dois por exemplo width100 / 2 = width50 então ficara no meio da tela. A mesma coisa serve para a altura da tela (height).
","
            0
        ",,,"['\npython', 'pygame\n']"
502735,"Como disponibilizar funções no ""Python/C API""?","
olá estou desenvolvendo um modulo python e estou com o seguinte problema.
Quando o modulo é compilado, só a uma função fica disponível (fun1). como faço para que
fun2 fique disponível também?
#define PY_SSIZE_T_CLEAN
#include <Python.h>


static PyObject* spam_fun2(PyObject *self) 
{
    # codigos
    return Py_None;
}

static PyObject* spam_fun1(PyObject *self) 
{
    # codigos
    return Py_None;
}

static struct PyModuleDef spammethods[] = {
    { ""fun1"", spam_fun1, METH_NOARGS, "" "" },
    { ""fun2"", spam_fun2, METH_NOARGS, "" "" },
    { NULL, NULL, 0, NULL }
};

static struct PyModuleDef spammodule = {
    PyModuleDef_HEAD_INIT,
    ""spam"",
    ""Lib exe command"",
    -1,
    spammethods
};

PyMODINIT_FUNC PyInit_spam()
{
    return PyModule_Create(&spammodule);
}

compilando:
from distutils.core import setup
from distutils.core import Extension


setup(
    name='spam',
    version='1.0',
    ext_modules=[Extension('spam', ['spam.c'])]
)

",,,,,"['\npython', 'c', 'python-c-api\n']"
502705,Como fazer procedimento no Pyhton Jupyter lab com uma lista de número e não só com um item da lista,"
Estou tentando fazer o procedimento abaixo porém x e y são uma lista de números e por isso esta dando erro. Usei o seguinte código:
theta = [180* math.atan(y/x)/math.pi for x,y in zip(media_v1, media_v2)] 

if x > 0 and y <0:
    theta = theta + 90
elif x < 0 and v < 0:
    theta = theta + 180
elif x < 0 and v > 0:
    theta = theta + 270

O primeiro eu consegui fazer o procedimento com a lista (media_v1 e media_v2) toda usando o 'for', porém quando tento fazer o 'if' ele não faz para a lista toda e dá o seguinte erro:
TypeError: '>' not supported between instances of 'list' and 'int'
","
Acredito que o list comprehension não irá te ajudar nisso, por causa do if. Use uma estrutura normal de for
theta_list = []

for x,y in zip(media_v1, media_v2):
    theta = 180 * math.atan(y/x)/math.pi
    if x > 0 and y <0:
        theta = theta + 90
    elif x < 0 and y < 0:
        theta = theta + 180
    elif x < 0 and y > 0:
        theta = theta + 270

    theta_list.append(theta)

Depois use o valor dos theta dentro da lista iterando. Por exemplo:
for t in theta_list:
    print(t)

","
            0
        ","
Você pode separar a lógica em uma função e aplicar dentro da list comprehension visto que o seu IF se aplica a cada iteração e não ao resultado final:
import math


def calculate_theta(x, y):
    t = 180 * math.atan(y/x) / math.pi
    if x > 0 and y <0:
        return t + 90
    elif x < 0 and y < 0:
        return t + 180
    elif x < 0 and y > 0:
        return t + 270
    else:
        return t


media_v1 = [1, 2, 3, 4, 5]
media_v2 = [4, 1, 5, 2, 3]


theta = [calculate_theta(x, y) for x, y in zip(media_v1, media_v2)]

Código executando Repl.it
","
            0
        ",['\npython\n']
502604,Como posso conferir se existem numeros iguais na mesma coluna ou linha em uma matriz numpy?,"
from random import sample
import numpy as np

a = sample(range(1, 5), 4)
b = sample(range(1, 5), 4)
c = sample(range(1, 5), 4)
d = sample(range(1, 5), 4)

jogo = np.array([[a[0], a[1], b[1], b[2]],
                [a[2], a[3], b[2], b[3]],
                [c[0], c[1], d[0], d[1]],
                [c[2], c[3], d[2], d[3]]])

caso existam numeros iguais na mesma linha ou na mesma coluna, preciso embaralhar os sample para atualizar a array ate que não existam valores iguais por linha e coluna.
","
Pode usar o método nunique() do pandas para te retornar quantas entradas únicas tem em cada linha ou coluna. Se tiver 4 entradas únicas, é porque os valores são todos diferentes. Em seguida, use o método all() do numpy para verificar se todas as linhas/colunas tem 4 entradas únicas.
Para verificar se todas as colunas tem somente entradas únicas:
import pandas as pd
valores_unicos = [pd.Series(jogo[:,coluna]).nunique() for coluna in range(4)]
todas_colunas_sem_repeticao = (np.array(valores_unicos) == 4).all()
todas_colunas_sem_repeticao

Para verificar se todas as colunas tem somente entradas únicas:
import pandas as pd
valores_unicos = [pd.Series(jogo[:,linha]).nunique() for linha in range(4)]
todas_colunas_sem_repeticao = (np.array(valores_unicos) == 4).all()
todas_linhas_sem_repeticao

Ambos os códigos vão retornar um booleano (True caso todas linhas/colunas tenha somente valores únicos ou False caso contrário). Se o resultado for False, sorteie novamente.
","
            0
        ",,,"['\npython', 'numpy\n']"
502602,Como posso remover 'R$\xa0' de um resultado obtido?,"
Estou coletando dados de um determinado site, onde ao coletar alguns valores estou enfrentando algumas dificuldades e gostaria de ajudar para resolver.
Tenho o seguinte código:
valores = soup_anuncio.find_all('span', attrs='ek9a7p-0')
categoria_valores = []
for i in valores:
    valor = i.get_text()
    categoria_valor.append(valor)
    print(categoria_valor)

E o valor retornado (em str) é:
['R$\xa01.417', 'R$\xa01.200', 'R$\xa0185', 'R$\xa018', 'R$\xa028', 'R$\xa02.848']

Eu tentei tirar o R$\xa0 do resultado de algumas formas, mas não consegui.
Como eu posso conseguir apenas os números em formato int?
","
Se o objetivo é remover de uma string o símbolo de moeda brasileira e o ponto separador de milhar, itere por cada uma das strings pegue uma fatia do quarto caractere ao último para remover o símbolo de real mais o espaço e do que sobrar remova o ponto separador de milhar com str.replace() e então a converta para int pois como dito nos comentários os valores não possuem centavos.
categoria_valor = ['R$\xa01.417', 'R$\xa01.200', 'R$\xa0185', 'R$\xa018', 'R$\xa028', 'R$\xa02.848']

vals= [int(v[3:].replace('.','')) for v in categoria_valor]

print(vals)
#[1417, 1200, 185, 18, 28, 2848]

Teste o código no IdeOne
Aplicando no seu código:
valores = soup_anuncio.find_all('span', attrs='ek9a7p-0')
categoria_valor = [int(v.get_text()[3:].replace('.','')) for v in valores]

","
            1
        ",,,"['\npython', 'lista', 'int', 'slice\n']"
502600,Criação de dois dicionários a partir de um dicionário com um critério,"

Leia e armazene em um dicionário o nome, a idade e o número do telefone de seus contatos, sendo que a chave deve ser o nome. Ao digitar uma string vazia para o nome, o programa interrompe a leitura e se encerra.
Apresente na tela os dados lidos em ordem alfabética pelo nome dos contatos. Uma possível solução de ordenar alfabeticamente é usar o método sort.
Em seguida, armazene os contatos em outros dois dicionários, utilizando como critério a idade: menores de 18 anos em um e os maiores em outro dicionário, eliminando o original. Apresente na tela os dois dicionários resultantes da separação.
Imprima na tela um teste do seu programa usando como primeiro cadastro o seu nome, como telefone o seu RU, e como idade os dois últimos dígitos do seu RU.

Se alguém puder me ajudar, estou totalmente perdido no que fazer a partir do primeiro passo.
Já resolvi até a parte em negrito no código abaixo. Não estou sabendo como fazer a parte de baixo, já pesquisei em tudo que é lado, sempre gera erro atrás de erro.
lista = []


while True:
    sair = input('Deseja cadastrar um contato ? [S/N]:')
    if sair == ' ':
        break
    nome = input('Qual o nome do contato?:')
    idade = int(input('Qual a idade?:'))
    tel= int(input('Qual o telefone do contato:?'))
    lista.append([nome,idade,tel])

print(lista)

listaordenada = sorted(lista)

for item in listaordenada:
    print('Nome:{}  Idade :{}  Telefone:{}'.format(item[0], item[1], item[2]))

","
Para separar um dicionário ""d"" em dois dicionários ""d1"" e ""d2"", à partir de uma ""condicao"", podemos usar ""dict comprehensions"":
d1 = {k:v for k, v in d.items() if condicao}
d2 = {k:v for k, v in d.items() if not condicao}

Ou, para percorrer o dicionário apenas uma vez:
d1 = {}
d2 = {}
for k, v in d.items():
    if condicao:
        d1[k] = v
    else:
        d2[k] = v

Portanto, a ideia é mais ou menos assim (os comentários são para chamar sua
atenção para as partes mais relevantes):
# Dicionário vazio (não confundir com um set vazio):
d = {}

while True:
    nome = input('Qual o nome do contato?:')
    # Interrompe execução se o nome for uma string vazia:
    if nome == '':
        break
    idade = int(input('Qual a idade?:'))
    tel = int(input('Qual o telefone do contato:?'))
    d[nome] = (idade, tel)

print(d)

# cria um dicionário ordenado pelas chaves:
sd = {k:d[k] for k in sorted(d)}

print(sd)

# menores_18 = {k:v for k, v in d.items() if v[0] < 18}
# maiores_18 = {k:v for k, v in d.items() if v[0] >= 18}

menores_18 = {}
maiores_18 = {}

for k, v in sd.items():
    if v[0] < 18:
        menores_18[k] = v
    else:
        # maior ou IGUAL a 18:
        maiores_18[k] = v

# Não ""elimina"" os originais, apenas ""esquece"" deles.
del d, sd

print(menores_18)
print(maiores_18)

","
            1
        ","
lista = []
list(lista)
dados = dict()
dadosm18 = dict()
lista18 = []
dados['nome'] = str(input('Nome: ')).title()
while dados['nome'] != '':
    dados['idade'] = int(input('Idade: '))
    dados['telefone'] = int(input('Telefone: '))
    lista.append(dados.copy())
    dados['nome'] = str(input('Nome: ')).title()
print(f'{""NOME"":<15}{""IDADE"":<10}{""TELEFONE"":<10}')
for contatos in lista:
    print(f'{contatos[""nome""]:<15}{contatos[""idade""]:<10}{contatos[""telefone""]:<10}')
if dados['idade'] < 18:
    lista18.append(dados.copy())
    print('-='*60)
    print('LISTA TELEFÔNICA COM DE MAIOR')
    print(f'{""NOME"":<15}{""IDADE"":<10}{""TELEFONE"":<10}')
    for contatos1 in lista18:
        print(f'{contatos1[""nome""]:<15}{contatos1[""idade""]:<10}{contatos1[""telefone""]:<10}')

A PRIMEIRA PARTE DEU BOM, SÓ A SEPARAÇÃO EM OUTROS DICIONÁRIOS QUE NÃO TÁ DANDO CERTO...
","
            -3
        ","['\npython', 'python-3.x', 'string', 'funções', 'lista\n']"
502577,Não consigo entender esse tipo de import,"
Sou iniciante no Python é me deparei com uma coisa que eu não entendi:
import pygame

from pygame.sprite import Sprite

    class Bullet(Sprite):

        def __init__(self,ai_settings,screen,ship):

Minha pergunta é o que seria pygame.sprite import Sprite?
","
O primeiro import carregará o módulo pygame no escopo (namespace) do teu arquivo/módulo enquanto que o segundo carregará apenas a classe ""Sprite"" nele. Na verdade o segundo import está aí como um atalho já que nada te impede de escrever:
import pygame

class Bullet(pygame.sprite.Sprite):
    ...

Talvez só a praticidade já que ""Sprite"" é bem menor que ""pygame.sprite.Sprite"". :-)
Pois do ponto de vista da linguagem eles correspondem ao mesmo objeto:
>>> import pygame
pygame 2.0.1 (SDL 2.0.14, Python 3.8.6)
Hello from the pygame community. https://www.pygame.org/contribute.html
t>>> id(pygame.sprite.Sprite)
43004016
>>> from pygame.sprite import Sprite
>>> id(Sprite)
43004016

","
            2
        ",,,"['\npython', 'import\n']"
502516,Os processos executados em paralelo tem relação com o numero de núcleos das CPUs? [duplicada],"






Essa pergunta já tem respostas aqui:
                        
                    



Paralelismo e Simultaneidade

                                (3 respostas)
                            


Programação Concorrente x Paralela x Distribuída

                                (1 resposta)
                            


É sempre garantido que uma aplicação com múltiplas threads rode mais rápido que usando uma única thread?

                                (8 respostas)
                            


Qual a diferença entre os async, multithreading, paralelismo e concorrência?

                                (3 respostas)
                            


Execução em multiprocessadores

                                (1 resposta)
                            

Fechada no ano passado.



Estou estudando o módulo multiprocessing do Python, no qual me permitir rodar vários processos em paralelo (no meu entendimento). Como um caso de ilustração vamos ver o exemplo abaixo:
import time
from multiprocessing import Process


def create_process(func):    
    return Process(target=func)
    

def run_process(process_list):
    for process in process_list:
        process.start()

    for process in process_list:
        process.join()


def task1():
    for i in range(5):
        print('Task 1', i + 1)
        time.sleep(1)


def task2():
    for i in range(5):
        print('Task 2', i + 1)
        time.sleep(1)


run_process([create_process(task1), create_process(task2)])

No qual gera a seguinte saída:

Task 2 1
Task 1 1
Task 2 2
Task 1 2
Task 1 3
Task 2 3
Task 1 4
Task 2 4
Task 1 5
Task 2 5

Perceba que para o nosso exemplo de ilustração eu criei 2 processos, e é neste ponto que começa a surgir minhas dúvidas que estão ligadas com a quantidade de núcleos do processador e a capacidade de executar a tarefa em paralelo.
Dúvidas

Cada processo é executado em um núcleo da CPU de maneira
independente/paralelo?
Quando eu for criar vários processos em paralelo eu devo considerar o
número de núcleos da CPU? Exemplo: uma CPU de 8
núcleos devo criar apenas oito processos?

",,,,,"['\npython', 'paralelismo', 'cpu\n']"
502437,Return de uma função em Pyton,"
Pessoal como faço pra retornar somente a lista dessa função sem executar os comandos de print e input
que estão dentro ?
def entrada_soma():
    parcela1 = list()
    parcela2 = list()
    print(""Digite a opção desejada :"")
    print(""[1] - Valores pelo Teclado / [2] - Gerar aleatoriamente"")
    entrada = int(input())
    print(""Quantos inteiros cada sequência terá ?"")
    n = int(input())
    if entrada == 1:
        print(""Digite a sequência de inteiros da parcela 1 :"")
        for c in range(0, n):
            x = int(input())
            parcela1.append(x)
        print(""Digite a sequência de inteiros da parcela 2 :"")
        for c in range(0, n):
            x = int(input())
            parcela2.append(x)
    else:
        print(""Valores gerados para a parcela 1 :"", end=' ')
        for c in range(0, n):
            parcela1.append(random.randint(0, 9))
            print(parcela1[c], end=' ')
        print()
        print(""Valores gerados para a parcela 2 :"", end=' ')
        for c in range(0, n):
            parcela2.append(random.randint(0, 9))
            print(parcela2[c], end=' ')

    print()
    return parcela1, parcela2

","
Uma função executa um algoritmo que retorna um valor.
A sua função inicial utiliza variáveis que precisam da interação do usuário para informar o que ele deseja.
Para você deixar apenas a função retornando as listas, precisará:

Retirar da função as requisições de informações do usuário
A Função passará a receber os valores das variáveis como parâmetros da função.

Ou seja, você precisa dividir sua função atual em duas partes, sendo a primeira parte o ""aplicativo"" que coletará as entradas necessárias que serão passadas como parâmetro para a função.
Com base no seu exemplo, teríamos que a função passa a prever o recebimento de 4 possíveis parâmetros def entrada_soma(entrada,n,x1,x2):.
A Função
def entrada_soma(entrada,n,x1,x2):
    parcela1 = list()
    parcela2 = list()
    if entrada == 1:
        for c in range(0, n):
            parcela1.append(x1)
        for c in range(0, n):
            parcela2.append(x2)
    else:
        for c in range(0, n):
            parcela1.append(random.randint(0, 9))
        for c in range(0, n):
            parcela2.append(random.randint(0, 9))
    return parcela1, parcela2

Note que a função acima não requisita mais nada ao usuário, pois essa requisição estará separada da função.
O Aplicativo utilizando a função
O Aplicativo será responsável por coletar as informações necessárias a serem passadas para a função como parâmetro e exibir o resultado recebido.
print(""Digite a opção desejada :"")
print(""[1] - Valores pelo Teclado / [2] - Gerar aleatoriamente"")
entrada = int(input())

print(""Quantos inteiros cada sequência terá ?"")
n = int(input())

x1 = 0  #  Declarando variáveis possíveis a serem utilizadas
x2 = 0  #  A segunda variável ""x"" que havia sido utilizada na função original

if entrada == 1:
    print(""Digite a sequência de inteiros da parcela 1 :"")
    x1 = int(input())
    print(""Digite a sequência de inteiros da parcela 2 :"")
    x2 = int(input())

p1, p2 = entrada_soma(entrada, n, x1, x2)

print(""Valores gerados para a parcela 1 :"", end=' ')
print(p1)
print(""Valores gerados para a parcela 2 :"", end=' ')
print(p2)

Busquei alterar o mínimo possível o nome de suas variáveis e não realizei análise da lógica do seu algoritmo. Aparentemente não está funcionando corretamente.
A função tem o objetivo de reutilizar código.
Não vejo como boa prática a realização de requisições ao usuário no corpo da função.
O aplicativo que fará a chamada da função é que será encarregado de fazer a coleta dos valores a serem repassados para a função como parâmetro.
A função deve declarar parâmetros que serão utilizados no corpo do algoritmo.

Abaixo, vamos fazer uma analogia com outro código, digamos que você tivesse o código seguinte e quisesse retirar as requisições da função:
Função com prints e inputs
# Função com prints e requisições do usuário
def somaDoisNumeros():
    print('Soma de 2 números')
    print('Informe o primeiro número:')
    numero1 = int(input())
    print('Informe o segundo número:')
    numero2 = int(input())
    resultado = numero1 + numero2
    return resultado

# Aplicativo utilizando a função
soma = somaDoisNumeros()
print('A soma é:',soma)

Agora vamos retirar os prints e inputs da função, passando as requisições a serem realizadas ao usuário para o corpo do ""aplicativo""
Função sem prints nem inputs
# Função sem prints e sem requisições do usuário
def somaDoisNumeros(numero1, numero2):
    resultado = numero1 + numero2
    return resultado

# Aplicativo utilizando a função. Coleta entradas necessárias
print('Soma de 2 números')
print('Informe o primeiro número:')
n1 = int(input())

print('Informe o segundo número:')
n2 = int(input())

soma = somaDoisNumeros(n1, n2)
print('A soma é:',soma)


A principal finalidade da função é nos ajudar a organizar programas em pedaços que correspondam a como imaginamos uma solução do problema.
Exemplo para solicitar opção do usuário
def lerOpcao():
    print(""Informe como deseja gerar suas listas"")
    print(""[1] - Valores pelo Teclado"")
    print(""[2] - Gerar aleatoriamente"")
    entrada = int(input())
    return entrada

Esta função lerOpcao() poderia ser chamada enquanto o usuário informasse um valor diferente de 1 ou 2 da seguinte forma:
opcao = 0
# Garantir que seja informada umas das opções possíveis
while opcao not in [1,2]:
    opcao = lerOpcao()

Dessa forma, foi criada uma função para solicitar a opção do usuário, não estou dizendo que é a melhor forma, mas você é que fará as funções conforme sua lógica de programação.
Função para retornar lista dos números informados manualmente
Você poderia criar uma função para ser utilizada sempre que precisar que o usuário informa a lista do número que deverão constar na sequência, ondo o n será a quantidade de números da sequência, como no exemplo a seguir:
def lerNumerosManuais(n):
    lista = []
    print(f'Informe os {n} números da lista')
    for i in range(0,n):
        print(""Informe um número :"", end=' ')
        valor = int(input())
        lista.append(valor)
    return lista

Utilizaria a função lerNumerosManuais forma seguinte:
if opcao == 1:
    print(""Digite a sequência de inteiros da parcela 1 :"")
    parcela1 = lerNumerosManuais(n)

Função para retornar lista dos números quando a opção for Aleatórios
def geraNumerosAleatorios(n):
    lista = []
    for i in range(0,n):
        valor = random.randint(0, 9)
        lista.append(valor)
    return lista

Exemplo da chamada:
parcela1 = geraNumerosAleatorios(n)

Espero que ajude.
","
            -2
        ",,,"['\npython', 'return\n']"
502429,Como importar arquivos CSV de uma pasta de mesmo nível (e/ou acima) em Python?,"
Já busquei diversos tópicos aqui, sem sucesso entretanto. Assim, se já existe alguma pergunta igual, me perdoem e indiquem por favor uma solução. O meu projeto está articulado da seguinte maneira:
linuxServer # /
----bin
----data
    ----arquivoCsv.csv
----packages
    ----lib
        ----module
            ----module.py
__init.py__ 
main.py

A minha ideia é por meio do module.py, chamar o arquivoCsv.csv. Não consigo de maneira nenhuma executar o leitor csv dentro de module.py. Mas se eu testar no main.py ele funciona:
funcional:
#linuxServer/main.py
import csv

somelist = []
with open('data/arquivoCsv.csv', 'r', encoding='ISO-8859-1')as csvFile:
    itens = csv.reader(csvFile, delimiter =';')
    for line in itens:
        somelist.append(line)

Não funcional:
#linuxServer/package/lib/module/module.py

import csv

somelist = []
with open('linuxServer/data/arquivoCsv.csv', 'r', encoding='ISO-8859-1')as csvFile:
    itens = csv.reader(csvFile, delimiter =';')
    for line in itens:
        somelist.append(line)

FileNotFoundError: [Errno 2] No such file or directory: 'linuxServer/data/arquivoCsv.csv'

PS: dicas se a estrutura ta legal ou preciso mudar algo serão bem vindas.
","
No main.py faça algo como:
import os

diretorio_base = os.path.dirname(os.path.abspath(__file__))  # ou use ""."" no lugar do `__file__`
diretorio_data = os.path.join(diretorio_base, ""data"")

Ao chamar a função que está em modulo.py passe o diretorio_data como parâmetro
Aí, é só fazer:
with open(os.path.join(PARAMETRO_RECEBIDO_PARA_DIRETORIO_DATA, 'arquivoCsv.csv'), 'r', encoding='ISO-8859-1')as csvFile:

","
            -1
        ",,,"['\npython', 'csv\n']"
501399,Como somar valores de dentro de uma lista em Python?,"
Fiz um código que armazena dados em um dicionário, e o dicionário é armazenado em uma lista, mas quando eu tento somar e dividir os valores, a primeira média é a que acaba valendo para todos os alunos.
print('RU do aluno: - ')

alunos = []
notas = []
N = int(input('Qual o número de alunos? '))
for i in range(N):
    boletim = {'nome' : 0, 'n1' : 0, 'n2' : 0, 'n3' : 0, 'n4' : 0, 'media' :0}
    boletim['nome'] = input('Digite o nome do aluno: ')
    boletim['n1'] = float(input('Digite a primeira nota: '))
    boletim['n2'] = float(input('Digite a segunda nota: '))
    boletim['n3'] = float(input('Digite a terceira nota: '))
    boletim['n4'] = float(input('Digite a quarta nota: '))
    boletim ['media'] = boletim ['n1'], boletim ['n2'], boletim ['n3'], boletim ['n4']
    alunos.append(boletim)
    notas.append(boletim['media'])
    soma_das_notas = 0
    for nota in notas[0]:
        soma_das_notas += nota
    boletim['media'] = soma_das_notas / 4
    if boletim['media'] >= 7:
        boletim['media'] = 'aprovado'
    else:
        boletim['media'] = 'reprovado'
print('\nNota dos alunos')
print('-' * 90)
for aluno in alunos:
    print(f'{aluno[""nome""]}       {aluno[""n1""]}   {aluno[""n2""]}   {aluno[""n3""]}   {aluno[""n4""]}   {aluno[""media""]}')

Ele me retorna o seguinte:

","
Olá, amigo. Bom, o erro está acontecendo, mais especificamente, por causa da linha 17 do seu código:
for nota in notas[0]:

Você definiu o cálculo somente para o primeiro elemento da lista notas, o elemento 0. Logo, a média só será calculada com as notas do primeiro aluno cadastrado. Uma opção bem simples para resolver o problema é acrescentar uma variável no início do código com valor igual a 0 e, em cada repetição do loop, somar 1 a esta variável, de modo que o índice acompanhará a quantidade de alunos na lista.
No código abaixo, escolhi a variável z para executar o que expliquei.
  print('RU do aluno: - ')

alunos = []
notas = []
z = 0 #Definindo a variável
N = int(input('Qual o número de alunos? '))
for i in range(N):
    boletim = {'nome' : 0, 'n1' : 0, 'n2' : 0, 'n3' : 0, 'n4' : 0, 'media' :0}
    boletim['nome'] = input('Digite o nome do aluno: ')
    boletim['n1'] = float(input('Digite a primeira nota: '))
    boletim['n2'] = float(input('Digite a segunda nota: '))
    boletim['n3'] = float(input('Digite a terceira nota: '))
    boletim['n4'] = float(input('Digite a quarta nota: '))
    boletim ['media'] = boletim ['n1'], boletim ['n2'], boletim ['n3'], boletim ['n4']
    alunos.append(boletim)
    notas.append(boletim['media'])
    soma_das_notas = 0
    for nota in notas[z]: #Garantindo que o índice acompanhará o número de alunos
        soma_das_notas += nota
    boletim['media'] = soma_das_notas / 4
    if boletim['media'] >= 7:
        boletim['media'] = 'aprovado'
    else:
        boletim['media'] = 'reprovado'

    z += 1
print('\nNota dos alunos')
print('-' * 90)
for aluno in alunos:
    print(f'{aluno[""nome""]}       {aluno[""n1""]}   {aluno[""n2""]}   {aluno[""n3""]}   {aluno[""n4""]}   {aluno[""media""]}')

Essas duas pequenas alterações devem resolver o problema. Avise-me se consegui ajudar você. Boa sorte!
","
            1
        ",,,['\npython\n']
501397,"Como faço para verificar quais itens da Lista2 estão na Lista1, em seguida sua contagem e ordem","
Sou iniciante no Python e gostaria de contar com o ajuda de vocês para os problemas abaixo.
Tenho trabalhado em duas listas como os seguintes objetivos:
1.Verificar quais itens da Lista2 estão na lista1
2.Fazer a contagem de cada item da Lista2 na Lista1 e ordená-los na Lista_ordenada.
Lista1 = ['a', 'k', 'j', 'd', 'p', 'u', 'j', 'h', 'k', 'k', 'c', 'p', 'e', 'u', 'z', 'z', 'f', 's', 'u', 'k', 'p', 'u', 'j', 'h', 'b', 'k', 'j', 'd', 'e', 'u', 'j', 'z']

Lista2 = ['j', 'u', 'z', 'k', 'u', 'p']

Lista_ordenada = [ ]


for i in  Lista1:
  if i == 'j' :
    break
Lista_ordenada.append('j')
.
.
.
for i in  Lista1:
  if i == 'p' :
    break
Lista_ordenada.append('p')

Dos problemas:

Embora o código funcione, vejo que está muito repetitivo e apresenta lentidão;
Embora tenha conseguido coloca-los na Lista_ordenada (de forma desordenada), não conseguir fazer a contagem, tão pouco ordena-los.

Qualquer ajuda será bem vinda.
","
A abordagem que usou não é a mais eficiente pois para cada elemento de Lista2 você teve que escrever um código específico para realizar a comparação e adição do elemento a Lista_ordenada, caso Lista2 seja modificada seu código deixaria de cumprir o seu propósito e teria que ser escrito um novo laço de comparação para os novos elemento. Outra coisa nítida é questão da performance a verificação Lista1 é reiterada tornando o algoritmo ineficiente.
Reanalisado a questão, são três os seus problemas:

Verificar quais itens da Lista2 estão na Lista1.
Fazer a contagem de cada item da Lista2 na Lista1.
Ordenar os itens na Lista_ordenada.

Para verificar quais itens da Lista2 estão na Lista1 tranforme-as em conjuntos e faça a intercessão com o operador &.
Para fazer fazer a contagem de cada item da Lista2 na Lista1 crie contadores e use apenas os elementos que estejam em Lista_ordenada para filtrar o resultado(pois seus elementos são comuns as duas listas).
Para ordenar os itens na Lista_ordenada use a função embutida sorted().
from collections import Counter

Lista1 = ['a', 'k', 'j', 'd', 'p', 'u', 'j', 'h', 'k', 'k', 'c', 'p', 'e', 'u', 'z', 'z', 'f', 's', 'u', 'k', 'p', 'u', 'j', 'h', 'b', 'k', 'j', 'd', 'e', 'u', 'j', 'z']
Lista2 = ['j', 'u', 'z', 'k', 'u', 'p']

#Faz a intercessão de Lista1 e Lista2 e ordena o resultado.
Lista_ordenada = sorted(set(Lista1) & set(Lista2))

#Conta a frequencia de cada elemento de Lista1 e Lista2.
Contagem1 = Counter(Lista1)
Contagem2 = Counter(Lista2)

print(f""Elementos comuns as duas listas {Lista_ordenada}"")

for k in Lista_ordenada:
  print(f""O elemento '{k}' aparece {Contagem1[k]} vez{'es' if Contagem1[k]>1 else '' } na lista1."")
  print(f""O elemento '{k}' aparece {Contagem2[k]} vez{'es' if Contagem2[k]>1 else '' } na lista2."")
  print(f""Num total de {Contagem1[k] + Contagem2[k]} aparições."")

#Elementos comuns as duas listas ['j', 'k', 'p', 'u', 'z']
#O elemento 'j' aparece 5 vezes na lista1.
#O elemento 'j' aparece 1 vez na lista2.
#Num total de 6 aparições
#O elemento 'k' aparece 5 vezes na lista1.
#O elemento 'k' aparece 1 vez na lista2.
#Num total de 6 aparições
#O elemento 'p' aparece 3 vezes na lista1.
#O elemento 'p' aparece 1 vez na lista2.
#Num total de 4 aparições
#O elemento 'u' aparece 5 vezes na lista1.
#O elemento 'u' aparece 2 vezes na lista2.
#Num total de 7 aparições
#O elemento 'z' aparece 3 vezes na lista1.
#O elemento 'z' aparece 1 vez na lista2.
#Num total de 4 aparições

Teste o código no IdeOne
","
            0
        ","
Acredito que a solução abaixo atenda sua necessidade:
Input:
lista1 = ['a', 'k', 'j', 'd', 'p', 'u', 'j', 'h', 'k', 'k', 'c', 'p', 'e', 'u', 'z', 'z', 'f', 's', 'u', 'k', 'p', 'u', 'j', 'h', 'b', 'k', 'j', 'd', 'e', 'u', 'j', 'z']
lista2 = ['j', 'u', 'z', 'k', 'u', 'p']
lista_ordenada = []

for i in  lista2:
  if i in lista1:
    item_tuple = (i, lista1.count(i))
    lista_ordenada.append(item_tuple)
 
lista_ordenada = sorted(lista_ordenada, key=lambda tup: tup[1], reverse = True)
print(lista_ordenada)

Output:
[('j', 5), ('u', 5), ('k', 5), ('u', 5), ('z', 3), ('p', 3)]

O loop do For checa se cada item da Lista2 está na Lista1 e, caso positivo, cria um tuple (item_tuple) do próprio item (i) com o número de ocorrências (lista1.count(i)).
Após criar o tuple, ele adiciona este conjunto na lista_ordenada através do método .append(item_tuple).
Por fim, a função sorted() ordena a lista_ordenada pelo segundo item do tuple, que é o número de ocorrências. Reverse = True foi utilizado para ordenar de maneira decrescente, visto que o padrão da função é a ordenação crescente.
","
            0
        ","['\npython', 'lista', 'for\n']"
501391,Transformação de imagem de acordo com parâmetros de uma foto,"
Eu tenho uma foto aérea de um lago e tenho um arquivo .geojson com um polígono que representa o contorno desse lago num mapa real.
Estou fazendo a conversão de latitude, longitude e altitude para X, Y, Z usando o seguinte código:
lonDiff = lonMax - lonMin
latDiff = latMax - latMin
altDiff = altMax - altMin

if (lonDiff > latDiff and lonDiff > altDiff):
    distMax = lonDiff
if (latDiff > lonDiff and latDiff > altDiff):
    distMax = latDiff
if (altDiff > lonDiff and altDiff > latDiff):
    distMax = altDiff

adjustment = imgSize/distMax

vectors = []
vetores = np.zeros((len(coordList),3))

vectorsX = []
vectorsY = []
vectorsZ = []

for i in range(0,len(coordinates)):
    vectors[i][0] = (coordinates[i][0] - lonMin) * adjustment
    vectors[i][1] = (coordinates[i][1] - latMin) * adjustment
    vectors[i][2] = (coordinates[i][2] - altMin) * adjustment
    
    vectorsX.append((coordinates[i][0] - lonMin) * adjustment)
    vectorsY.append((coordinates[i][1] - latMin) * adjustment)
    vectorsZ.append((coordinates[i][2] - altMin) * adjustment)

O que eu preciso é plotar esses valores (X,Y,Z) na tela, porém com uma distorção baseada nos parâmetros de angulação do momento em que a foto foi tirada para que o contorno se alinhe perfeitamente ao lago. Tenho um arquivo txt com os parâmetros (como X_pos, Y_pos, Altitude, Yaw, Pitch, Roll, etc) de 16 fotografias diferentes desse lago.
Segue um exemplo simples do que preciso (feito no Paint):


Já tentei utilizar as transformações afins do pacote OpenCV, que parece ser a melhor opção aqui, mas não consegui implementar pois preciso do input de pontos específicos para serem usados como referência e não consigo fazer isso pois as coordenadas vão mudar para cada arquivo geojson que for inserido no programa.
Não sei mais o que posso tentar além disso. Não me parece ser algo muito complexo em termos de código, basta aplicar os parâmetros no contorno visto de cima, mas a matemática/transformação da imagem não está clara na minha cabeça, e não tenho certeza se realmente preciso do OpenCV pra isso.
Qualquer resposta ou ajuda será muito bem recebida, e se algo não ficou suficientemente claro, por favor, me diga para que eu explique melhor e possamos encontrar alguma solução.
","
Como foi informado, tu já tem os pontos do polígono em relação ao sistema de referências

(vamos chamar os pontos de
),
bem como os parâmetros do ponto de observação
.
Uma nova variável a ser adicionada é o centro do ponto de observação do Polígono .
A diferença de

e

lhe informará a distância entre o ponto central do mapa e o ponto de observação da fotografia. Essa distância em álgebra linear, no que diz respeito a Matrizes de Transformação, se chama Translação
. A relação entre os pontos

e

lhe fornece também os ângulos de onde a foto foi tirada, vamos chamar esse ângulo aqui de matriz de rotação denominada por
.
O conjunto de operações de rotação e translação representa uma matriz de transformação
,
conforme definida abaixo:

A figura abaixo demonstra gráficamente as operações de uma Matriz de Transformação para um sistema de referências X,Y.

Desta forma, tu consegue aplicar uma transformação homogênea nos pontos do polígono com a finalidade de ""alinhar"" a mesma perspectiva da foto aplicando a seguinte operação:

A composição das matrizes de rotação tu pode encontrar aqui Matriz de Rotação.
Como não tenho os dados originais, vou fazer uma demonstração de um conjunto de pontos que formam o polígono de um losango. A rotação será de 45° apenas em um ângulo (gamma), no entanto, pode ser usada a rotação nos demais ângulos, conforme é mostrado em Matriz de Transformação. A translação ocorrerá em 0.4 para x e 0.6 para y, ou seja, os pontos serão deslocados em x e y, conforme os valores informados.
import numpy as np
import matplotlib.pyplot as plt


def H(R_gamma, T, angle = 'rad'):
    if angle == 'deg':
        R_gamma = np.deg2rad(R_gamma)
    th_matrix = np.array([[np.cos(R_gamma),   -np.sin(R_gamma), 0.,      T[0]],
                          [np.sin(R_gamma),   np.cos(R_gamma),  0.,      T[1]],
                          [0.,          0.,                     1.,      T[2]],
                          [0.,          0.,                     0.,      1]])
    return th_matrix


pP = np.array(
    [
     [-0.5, 0, 0, 0.5], # x
     [0, 1, -1, 0],     # y
     [1, 1, 1, 1],      # z
     [1, 1, 1, 1]       # escala
     ])

# translacao
T = np.array([0.6, 0.5, 0])
# rotacao
R_gamma = 45

coP =  H(R_gamma, T, angle = 'deg') @ pP

fig, (ax1, ax2) = plt.subplots(1, 2, figsize = (6*2,6))
ax1.plot(pP[0,:], pP[1,:], 'b .', label=r'$\mathbf{{}^oP}$')
ax1.plot(0, 0, 'x')
ax1.set_xlim(-2,2)
ax1.set_ylim(-2,2)
ax1.legend()
ax2.plot(coP[0,:], coP[1,:], 'r .', label=r'$\mathbf{{}^{co}P}$')
ax2.plot(0, 0, 'x')
ax2.set_xlim(-2,2)
ax2.set_ylim(-2,2)
ax2.legend()


O resultado pode ser visto pelo gráfico abaixo:

","
            1
        ",,,"['\npython', 'opencv\n']"
501387,ALTERAÇÃO DE VALORES EM UM DATFRAME,"
Boa tarde. Tenho um DataFrame com o seguinte head():

Observem que na coluna bmi existem valores NaN, mais precisamente, existem 201 linhas.
Quero alterar esse valor baseado na coluna age, então criei estas regras:
median1 = base.loc[(base['age'] >= 18) & (base['age'] < 30)].mean().age # media entre 18 a 30 anos

median2 = base.loc[(base['age'] >= 30) & (base['age'] <= 45)].mean().age # media entre 30 a 45 anos

median3 = base.loc[(base['age'] >= 46) & (base['age'] <= 65)].mean().age # media entre 46 a 65 anos

median4 = base.loc[(base['age'] >= 66) & (base['age'] <= 83)].mean().age # media entre 30 a 45 anos

Como faço para alterar a coluna bmi seguindo essas condições?
tentei usando loc, usando np.select e por ai vai.
Ex do código:
base.loc[(base['age'] >= 18) & (base['age'] < 30) & (base['bmi'] ==np.nan), 'bmi'] = median1.age
Na documentação diz que posso passar uma condição e o novo valor, mas quando acontece esse tipo de condição mais complexa, simplesmente não vai.
","
Tem uma maneira de fazer o que você quer, mas não é tão direta quanto gostaria:

Crie uma função dedicada para implementar o cálculo do bmi de acordo com seu critério.
Crie separadamente os valores da coluna bmi com a função para todas as linhas.
Use o método where() para substituir os valores NaN pelos seus valores calculados.

É um overkill, tem que calcular esse valor substituto para todas as linhas ao invés de somente as necessárias, mas funciona.
# função que retorna o índice bmi para um valor de idade
def median(df, age):
    if age >= 18 and age < 30:
        return df.loc[(df.age >= 18) & (df.age < 30)].bmi.mean()
    elif age >= 30 and age < 45:
        return df.loc[(df.age >= 30) & (df.age < 45)].bmi.mean()
    elif age >= 45 and age < 65:
        return df.loc[(df.age >= 45) & (df.age < 65)].bmi.mean()
    elif age >= 65:
        return df.loc[df.age >= 65].bmi.mean()

# lista com o valor bmi para todas as entradas na coluna age
new_bmi = [median(base, age) for age in base.age]

# data frame com a coluna bmi substituída pelos valores novos somente onde tem NaN
base.bmi = base.bmi.where(base.bmi.notna(), new_bmi)

Faça o teste aí com seu data frame e avise se tiver resolvido. Abraço.
","
            0
        ",,,"['\npython', 'pandas', 'dataframe', 'data-science\n']"
501376,Cópia de Arquivos utilizando biblioteca shutil,"
Olá,
Estou aprendendo  a progamação em Python e surgiu uma dúvida referente a biblioteca shutil.
Teoricamente, consigo realizar a cópia do arquivo utilizando esta biblioteca, porém, gostaria de saber se há uma forma de ao colar o arquivo em outro diretório, o nome do arquivo seja alterado, adicionando a data do dia atual, de maneira automática, para executar todos os dias.
Para copiar o arquivo para o diretorio de maneira bem rústica, realizo a troca manual no destino, alterando seu nome diretamente no código.
Estou utilizando a seguinte programação:
from shutil import copy

orig = r 'diretorio1\arquivo.txt'
des = r 'diretorio2\arquivo_(dia_de_hoje).txt' #aqui realizo o preenchimento manual do dia do hoje, e gostaria que essa parte fosse automática.

copy(orig, des)


O resultado que busco é :
arquivo(dia_de_hoje).txt sendo gerado sem eu precisar realizar essa substituição manual no código.
","
Olá, amigo. Então, tem uma forma pouco rebuscada de fazer essa transferência de dados + mudança de diretório + alteração do nome do arquivo. Não sei se vai simpatizar, mas vou colocar o código aqui.
Definindo a data
Há uma forma bem mais rápida de definir a data, utilizando a função datetime(), mas não costumo utilizá-la para ter uma liberdade maior de manipulação do output. Eis como uso:
import time
t = time.localtime ()

dia = t.tm_mday
mês = t.tm_mon

if dia < 10:
    dia = str(0) + str(dia) #Acrescentando o 0 em dias menores que 10
if mês < 10:
    mês = str(0) + str(mês) #Acrescentando o 0 em meses menores que 10
    
ano = t.tm_year

data = str(dia) + str(mês) + str(ano)

Arquivo de origem e arquivo de saída
Observe: esta parte do código parte do pressuposto que o arquivo de origem esteja na mesma pasta em que o código está sendo executado. Para mudar isso, basta acrescentar o caminho (path) da pasta, assim como foi feito em ""saída"".
origem = input(""Digite o nome do arquivo de origem: "")
arquivo = open(origem + "".txt"", ""r"")
saída = open(""/users/HP/"" + origem + str(data) + "".txt"", ""w"") #Nome com data. Note que você pode alterar o path para o que deseja. Este ""/users/HP/"" é apenas um exemplo.

Escrevendo no novo arquivo
for linha in arquivo.readlines():
    palavra = linha
    saída.write(palavra)

saída.close()

Código completo
import time
t = time.localtime ()

dia = t.tm_mday
mês = t.tm_mon

if dia < 10:
    dia = str(0) + str(dia)
if mês < 10:
    mês = str(0) + str(mês)
    
ano = t.tm_year

data = str(dia) + str(mês) + str(ano)

origem = input(""Digite o nome do arquivo de origem: "")
arquivo = open(origem + "".txt"", ""r"")
saída = open(""/users/HP/"" + origem + str(data) + "".txt"", ""w"")

for linha in arquivo.readlines():
    palavra = linha
    saída.write(palavra)

saída.close()

Por fim, basta procurar o novo arquivo no diretório que você escolheu. Espero que tenha conseguido ajudar. Boa sorte!
","
            0
        ","
Pelo que entendi você está tentando implementar um código que seja capaz de copiar um arquivo de um diretório para outro renomeando de modo que o novo nome contenha o nome antigo, mais o carácter de ""_"", mais a data atual do sistema no modo AAAAMMDD, mais extensão.
OBSERVAÇÂO:
A extensão do arquivo é importantíssimo. Pois, o arquivo só poderá ser manipulado, se o mesmo tiver uma extensão válida.
Para implementarmos um código descente devemos prestar atenção na seguinte lógica:

Importar as bibliotecas necessárias;
Capturar e tratar a data atual;
Capturar o caminho de origem do arquivo;
Informar o nome completo do arquivo desejado;
Capturar o caminho de destino;
Copiar e renomear o arquivo.

Pois bem, seguindo esta lógica podemos implementar o seguinte código:
from os import chdir, listdir, rename
from shutil import copy
from os.path import isfile
import time

t = time.localtime()
t1, t2, t3 = f'{t[0]}', f'{t[1]:02}', f'{t[2]:02}'

cam = input('Informe o caminho arquivo: ')
chdir(cam)
for i in listdir():
    if isfile(i):
        print(i)
nome = input('Informe o nome completo do arquivo desejado: ')
cam2 = input('Informe o caminho destino: ')
copy(nome, cam2)

chdir(cam2)
for j in listdir():
    if isfile(j) and j == nome:
        rename(nome, nome[:-4] + '_' + t1 + t2 + t3 + nome[-4:])

Observe que a primeira coisa no código é a importação das bibliotecas e métodos necessários. Em seguida, é capturada e tratada a data atual. Pois, o método time.localtime() nos retorna uma tupla contendo 9 parâmetros, dentre os quis, sevemos nos importar apenas com os três primeiros, que nos fornece, respectivamente, as informações de ano, mês e dia. Desse modo temos t[0] = ano, t[1] = mês e t[2] = dia.
Prosseguindo a lógica, o código nos solicitará o caminho do diretório de origem do arquivo. Este caminho, obviamente, é o caminho da pasta que contém o arquivo, o qual desejamos copia-lo.
Depois de informarmos o caminho do arquivo, o código foca no caminho especificado e o primeiro bloco for irá percorrer a pasta indicada, listando todos os arquivos da referida pasta.
Nesse momento devemos escolher e informar o nome completo - nome + extensão - do arquivo desejado. Posteriormente, devemos informar o caminho do diretório de destino.
Em seguida, o código copia o arquivo na pasta de destino e, depois, o renomeia.
","
            0
        ",['\npython\n']
501349,Dicionario Python Ordem alfabética e duplicar dicionario já existente,"
Pessoal estou com dúvida em como escrever na tela para o usuário os valores do dicionario sem o colchete e em ordem alfabética.
Estou com dúvida também em como fazer dois novos dicionários para selecionar somente os contatos com 18 anos ou mais e o outro com 18 anos ou menos.
Segue o enunciado da questão:
Leia e armazene em um dicionário o nome, a idade e o número do telefone de seus
contatos, sendo que a chave deve ser o nome. Ao digitar uma string vazia para o nome, o
programa interrompe a leitura e se encerra.
Apresente na tela os dados lidos em ordem alfabética pelo nome dos contatos. Uma
possível solução de ordenar alfabeticamente é usar o método sort.
Em seguida, armazene os contatos em outros dois dicionários, utilizando como
critério a idade: menores de 18 anos em um e os maiores em outro dicionário, eliminando
o original. Apresente na tela os dois dicionários resultantes da separação.
Meu código:

from operator import itemgetter

nomesContatos = {}

for i in range(0, 300):
    nome = input('Digite o nome do contato: ')
    nome = nome.capitalize()
    grade = []

    if nome == '':
        break

    for j in range(0, 1):
        while True:
            try:
                idade = int(input('Digite a idade: '))
                grade.append(idade)
                break
            except ValueError:
                print('Idade inválida...')
                continue

        for k in range(0, 1):
            while True:
                try:
                    telefone = int(input('Digite o telefone: '))
                    grade.append(telefone)
                    break
                except ValueError:
                    print('Número inválido...')

    nomesContatos[nome] = grade
    print('\n')


for contatos in sorted(nomesContatos, key=nomesContatos.get):
    a = (nomesContatos[contatos])

    print(a)

","

Pessoal estou com dúvida em como escrever na tela para o usuário os
valores do dicionario sem o colchete e em ordem alfabética.

Você pode dar sort nas chaves do dicionario e depois interar chave a chave:

nomes=  {
    ""Joao"":[1,11999999],
    ""Maria"":[5,21123451],
    ""Ana"":[6,4123212451],
}

ordem_alfabetica = sorted(nomes.keys())
ordem_alfabetica

#output
>> ['Ana', 'Joao', 'Maria']

for nome in ordem_alfabetica:
  print(f""{nome} --->  Nota : {nomes.get(nome)[0]} ---> telefone : {nomes.get(nome)[1]}"")

#ouput
>> Ana --->  Idade: 6 ---> telefone : 4123212451
>> Joao --->  Idade: 1 ---> telefone : 11999999
>> Maria --->  Idade: 5 ---> telefone : 21123451



Estou com dúvida também em como fazer dois novos dicionários para
selecionar somente os contatos com 18 anos ou mais e o outro com 18
anos ou menos.

não é necessario fazer 2 dicionários para isso vc pode colocar uma condição e tratar caso a caso, com isso se quiser vc pode criar 2 dicionarios tbm
menor = {}
maior = {}
for nome in ordem_alfabetica:

  if nomes.get(nome)[0] < 18:
    print(""Eu tenho menos de 18"")
    menor[nome] = nomes[nome]
    #Do Stuff
  else:
    print(""Eu tenho 18 ou mais"")
    maior[nome] = nomes[nome]
    #Do Stuff

","
            1
        ",,,"['\npython', 'classificação\n']"
501303,ERRO AO INSTALAR PYAUDIO,"
Para usar o speech recognition com microfone, preciso instalar o Pyaudio, mais ao executar a instalação pip install pyaudio recebo o seguinte erro:
Collecting pyaudio
  Using cached PyAudio-0.2.11.tar.gz (37 kB)
Using legacy 'setup.py install' for pyaudio, since package 'wheel' is not installed.
Installing collected packages: pyaudio
    Running setup.py install for pyaudio ... error
    ERROR: Command errored out with exit status 1:
     command: 'c:\python39\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\grave\\AppData\\Local\\Temp\\pip-install-svyt8sdr\\pyaudio_a8a346e98970466681cc9c80c30e69cd\\setup.py'""'""'; __file__='""'""'C:\\Users\\grave\\AppData\\Local\\Temp\\pip-install-svyt8sdr\\pyaudio_a8a346e98970466681cc9c80c30e69cd\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\grave\AppData\Local\Temp\pip-record-mu8_l4wl\install-record.txt' --single-version-externally-managed --compile --install-headers 'c:\python39\Include\pyaudio'
         cwd: C:\Users\grave\AppData\Local\Temp\pip-install-svyt8sdr\pyaudio_a8a346e98970466681cc9c80c30e69cd\
    Complete output (17 lines):
    running install
    running build
    running build_py
    creating build
    creating build\lib.win-amd64-3.9
    copying src\pyaudio.py -> build\lib.win-amd64-3.9
    running build_ext
    building '_portaudio' extension
    creating build\temp.win-amd64-3.9
    creating build\temp.win-amd64-3.9\Release
    creating build\temp.win-amd64-3.9\Release\src
    C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x64\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -DMS_WIN64=1 -Ic:\python39\include -Ic:\python39\include -IC:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\include -IC:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt -IC:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\winrt -IC:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\cppwinrt /Tcsrc/_portaudiomodule.c /Fobuild\temp.win-amd64-3.9\Release\src/_portaudiomodule.obj
    _portaudiomodule.c
    c:\python39\include\pyconfig.h(117): warning C4005: 'MS_WIN64': redefini‡Æo de macro
    src/_portaudiomodule.c: note: consulte a defini‡Æo anterior de 'MS_WIN64'
    src/_portaudiomodule.c(29): fatal error C1083: NÆo ‚ poss¡vel abrir arquivo incluir: 'portaudio.h': No such file or directory
    error: command 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe' failed with exit code 2
    ----------------------------------------
ERROR: Command errored out with exit status 1: 'c:\python39\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\grave\\AppData\\Local\\Temp\\pip-install-svyt8sdr\\pyaudio_a8a346e98970466681cc9c80c30e69cd\\setup.py'""'""'; __file__='""'""'C:\\Users\\grave\\AppData\\Local\\Temp\\pip-install-svyt8sdr\\pyaudio_a8a346e98970466681cc9c80c30e69cd\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\grave\AppData\Local\Temp\pip-record-mu8_l4wl\install-record.txt' --single-version-externally-managed --compile --install-headers 'c:\python39\Include\pyaudio' Check the logs for full command output.

e ao executar  pip install PyAudio-0.2.11-cp39-cp39-win_amd64 recebo:
ERROR: Could not find a version that satisfies the requirement PyAudio-0.2.11-cp39-cp39-win_amd64
ERROR: No matching distribution found for PyAudio-0.2.11-cp39-cp39-win_amd64

tenho instalado aqui:
Python 3.9, speech_recognition, Google API Client Library for Python e pywin.
","
Tente instalar primeiro o modulo pywin pip install pipwin 
E logo em seguida rode o seguinte comando pipwin install pyaudio
Pronto, provavelmente o modulo pyaudio agora irá funcionar!
","
            0
        ",,,['\npython\n']
501280,Qual a relação entre unhashable e mutabilidade?,"
Eu sempre uso strings como chaves em dicionários, mas, estudando o tema, notei que é possível usar qualquer objeto imutável. Então, além de strings, dicionários aceitam como chaves objetos como inteiros, floats e tuples. Todos os exemplos abaixo funcionam:
d={""name"":""Lucas"", 1:'01', (9,10):3}
type(d) #dict

No entanto, se definirmos um dicionário usando listas como chaves, temos o erro TypeError: unhashable type: 'list'. Eu não sei bem o que é hashable, mas li nesta pergunta que tabelas hashes permitem pesquisas eficientes e, ao que me parece, dicionários são um exemplo desse tipo de implementação (isso explicaria o porquê de dicionários serem muito mais eficientes para busca que listas). Mas qual a relação com um objeto ser hashable e sua mutabilidade? A restrição de não usar objetos mutáveis como chaves de dicionário é algo específico do python ou comum a todas as linguagens? Por que dessa restrição?
","
Imagine que você tem uma lista:
lista = [1,2,3,4,5,6,7,8,9,10]

Se você quiser verificar se um elemento está presente nessa lista, o Python irá precisar percorrer elemento a elemento e comparar um a um:
if (11 in lista): #Irá comparar 11 com 1, depois 11 com 2, depois 11 com 3...

Apenas após comparar todos os elementos da lista ele pode ter a certeza que não achou o elemento que você quer. Um exemplo na vida real seria você procurar um CD de música em um álbum que não está organizado. Você precisa ir página por página até achar (ou não).
Se sua lista tivesse muitos elementos a sua busca demoraria mais.
Dicionário, por sua vez, não importando a quantidade de itens que ele contém, demora em média sempre o mesmo tempo para acessar o conteúdo de uma chave. Um paralelo com a vida real seria você procurar uma palavra em um dicionário. Como ele está organizado alfabeticamente, você sabe exatamente aonde achar a definição (Ou por exemplo se os CD's do exemplo anterior tivessem sido organizados de alguma forma).
Como ele faz isso? As chaves do dicionário precisam ser Hashable (com um neologismo poderíamos dizer Hasheáveis). Não vou entrar em detalhes sobre essa implementação, dado que a outra resposta citada na pergunta já faz isso bem. Mas basicamente o que uma função Hash faz é:
Alguma coisa -> | Função Hash | -> Inteiro (exemplo: 7036520087640895475)

Isto é, se você fornece alguma coisa para essa função, ela calcula um inteiro baseado neste conteúdo fornecido. Boas funções Hash prometem (mas não garantem) que conteúdos diferentes gerem inteiros diferentes, dentre outras características. Nem sempre isso é possível, e é justamente nesse caso em que o acesso pode ser mais demorado. Quando dois conteúdos diferentes geram o mesmo valor, diz-se que houve uma colisão.
Quando você adiciona um par chave-valor ao dicionário, basicamente o que ele faz é:

Calcula o hash da chave que você forneceu. Exemplo: (Chave ""Azul"" gerou o hash 123)
Armazena o valor em uma posição da memória vinculada a essa hash 123.

(Se for mais didático, ou mais fácil de entender, pode-se pensar que cada dicionário tem uma lista, e segundo o exemplo acima salva na posição 123 dessa lista. Embora a implementação verdadeira não seja bem assim pois teria muitos ""espaços vazios"".)
Se em uma ocasião futura você quer acessar o conteúdo de uma chave, você não precisa percorrer todos os elementos do dicionário. Você pode simplesmente calcular novamente o Hash, ir nessa posição da memória e verificar o item que está lá. Por isso o acesso (e verificar se contém) demoram tempo constante independente do tamanho do dicionário. Ele vai direto na posição da memória que o objeto está.

Mas qual a relação com um objeto ser hashable e sua mutabilidade?

O que acontece se o conteúdo desse objeto mudar? Seu hash iria mudar também, e seria impossível localizá-lo no dicionário novamente. Então apenas objetos imutáveis podem garantir uma hash para si.

A restrição de não usar objetos mutáveis como chaves de dicionário é algo específico do python ou comum a todas as linguagens?

Por definição, é algo comum a todas as linguagens. O que pode acontecer que talvez algumas linguagens façam, é utilizar como conteúdo para a hash algum ID do objeto em questão. Por exemplo um ponteiro para o objeto em específico ou algum número que defina esse objeto unicamente. Muitas linguagens permitem você definir sua própria função hash também.
Para uma outra explicação, veja esta pergunta (em inglês).
","
            4
        ","
Conforme visto na pergunta que você citou, o que as tabelas de hash fazem é calcular o valor do hash de cada chave, para que saibam em qual posição da tabela o elemento ficará.
No caso do Python, objetos podem implementar o método __hash__ para retornar o seu respectivo hash code. E de acordo com a documentação, um objeto é hashable se ""o valor do seu hash não muda durante o seu tempo de vida, e pode ser comparado com outros objetos"" (em suma, além do método __hash__, ele precisa implementar também o __eq__).
A documentação também cita que objetos que são considerados iguais devem retornar o mesmo valor do hash. Então geralmente o que os tipos imutáveis fazem é retornar o hash baseado no seu valor. E como eles são imutáveis, o valor não muda, e portanto o hash também não.
Isso é importante porque se o hash ficar mudando, o objeto não servirá mais como chaves de dicionários, já que eles usam o valor do hash internamente, para fazer o lookup. Veja este exemplo:
class Teste:
    def __init__(self, value):
        self.value = value

    def __hash__(self):
        # implementação simples, retorna o hash do valor
        h = hash(self.value)
        print(f'calculando hash de {self.value}={h}')
        return h

    def __eq__(self, other):
        return self.value == other.value

    def __repr__(self):
        return f'Test({self.value})'

t1 = Teste(1)
t2 = Teste('xyz')
d = {}
print('adicionar 1')
d[t1] = 'abc'

print('adicionar xyz')
d[t2] = 2

print(d) # {Test(1): 'abc', Test(xyz): 2}
print('acessando uma chave')
print(d[t1]) # abc
# mesmo sendo outro objeto, se o hash é o mesmo, ele encontra
print(d[Teste(1)]) # abc

Criei uma classe Teste que é hashable (implementa __hash__ e __eq__, e instâncias iguais sempre retornam o mesmo hash). Usei instâncias dessa classe como chaves de um dicionário, e veja como o método __hash__ é chamado, tanto para setar um valor quanto para recuperá-lo. Repare também na última linha, que mesmo sendo outra instância, ele encontra o mesmo valor, já que o valor do hash retornado é o mesmo.
A saída é:
adicionar 1
calculando hash de 1=1
adicionar xyz
calculando hash de xyz=2899992705165252900
{Test(1): 'abc', Test(xyz): 2}
acessando uma chave
calculando hash de 1=1
abc
calculando hash de 1=1
abc

No caso da string ""xyz"", o hash pode variar a cada execução do Python, conforme explicado aqui - mas ao longo do mesmo processo, ele permanece o mesmo (aqui também explica isso).

Mas se eu mudar o value do objeto, consequentemente o seu hash code também mudará (já que o método __hash__ se baseia no valor do value):
t1 = Teste(1)
d = {}
print('adicionar 1')
d[t1] = 'abc'

print(d) # {Test(1): 'abc', Test(xyz): 2}
print('acessando uma chave')
print(d[t1]) # abc

# mudando o value, o hash code também muda
t1.value = 2
print(d[t1]) # KeyError

Ao mudar o value, o valor do hash code também muda, e ao tentar usar o objeto como chave, dá erro:
adicionar 1
calculando hash de 1=1
{Test(1): 'abc'}
acessando uma chave
calculando hash de 1=1
abc
calculando hash de 2=2

KeyError: Test(2)

Por isso que objetos mutáveis não são bons candidatos a chaves, pois o hash costuma ser baseado no seu valor (seguindo a regra de que objetos iguais retornam hashes iguais). E se o valor pode mudar, consequentemente o hash também muda, e aí não será mais possível localizar o respectivo valor no dicionário, já que este usa o valor do hash para tal.
Algumas linguagens permitem que objetos mutáveis sejam usados como chaves (e aí você que se vire para garantir que eles não mudarão), mas o Python optou por deixar que apenas objetos hashable possam ser usados como chaves.
Vale lembrar que uma tupla só é hashable se os seus elementos também forem:
d = {}

# tupla só contém elementos hashable
t = (1, 'abc')
d[t] = 1

# tupla contém uma lista, que não é hashable
t = (1, [2, 3])
d[t] = 2 # TypeError: unhashable type: 'list'


Isso é comum a todas as linguagens, já que tabela de hash é um conceito mais geral (Estruturas de Dados), e o que muda é a implementação. Em Python, objetos que não são hashable já dão erro logo que você tenta usá-los como chave de um dicionário. Mas Java, por exemplo, é diferente: todos os objetos possuem uma implementação padrão de hashCode (mas que deve ser sobrescrita para que seja de fato útil). Mas a ideia geral é sempre a mesma: calcula-se um valor de hash para encontrar a posição do elemento na tabela de hash (e se esse valor pode mudar, o objeto não é um bom candidato a chave).
Mais detalhes sobre tabelas de hash podem ser vistos nesta pergunta.
","
            3
        ","['\npython', 'dicionário\n']"
501199,Como filtrar as linhas se a coluna está sem nome de variável - Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Tenho alguns dados em excel que importei para um dataframe em Python (Base_Eventos). Preciso sumarizar uma variável (idPartida), então uso:
Base_Eventos.groupby (by = 'idPartida '). count()

Só que o resultado sai com a coluna do contador sem um nome de variável. E vou precisar usar essa saída de contagem para fazer um filtro. base ex:

A segunda coluna está em branco (nome da variável).
É possível adicionar um nome?
Ou há outra forma de filtrar sem precisar adicionar um nome.
Pois quero selecionar os idPartida com mais de 1000 eventos.
",,,,,"['\npython', 'python-3.x\n']"
501160,Valor incorreto do agg mean,"
Preciso chegar no mesmo resultado da media, moda e mediana dessa tabela
Televisores/dia   Freq. absoluta
 0 |----- 20           5
 20|----- 40           25
 40|----- 60           40
 60|----- 80           15
 80|----- 100          10
100|----- 120          5

media=53 moda=50 mediana=50

A ideia é calcular a média de cada valor da primeira coluna e depois a frequência de cada um. Cheguei nesse resultado:
televisores = [*range(0, 120)]
frequencia = [5, 25, 40, 15, 10, 5]

df = pd.DataFrame({'televisores': televisores})

bins = pd.cut(df['televisores'], [0, 20, 40, 60, 80, 100, 120])
df = df.groupby(bins)['televisores'].agg(Media='mean')

df['Freq. absoluta'] = frequencia

count = [x for x,y in zip(df['Media'], df['Freq. absoluta']) for i in range(y)]

O problema é que a media retorna os valores com 0.5 a mais
    df
                 Media   Freq. absoluta
    televisores
    (0, 20]       10.5         5
    (20, 40]      30.5         25
    (40, 60]      50.5         40
    (60, 80]      70.5         15
    (80, 100]     90.5         10
    (100, 120]   110.0         5

    mean(count), mode(count), median(count)
      53.475       50.5         50.5

Queria entender o problema e saber se tem algum modo mais fácil de chegar no resultado.
","
O script está fazendo o que deveria. Assumir que as médias estão erradas em 0.5 está errado.
Alguns pontos:

range(0, 120) irá criar uma lista iniciando em zero e terminando em 119.
pd.cut irá criar 6 intervalos onde, por padrão, tem o formato (x...y]. Onde o lado x é aberto e o lado y fechado. Para inverter use: right=False no cut
pd.cut não inclui o valor mais baixo. para fazê-lo use: include_lowest=True

Usando o cut, vc teria intervalos como
>>> import numpy as np
>>> for sdf in np.array_split(df, 6):
...     print(list(sdf.televisores))
...
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
[40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]
[80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]

Perceba que
>>> mean([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
9.5

>>> mean([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])
10

>>> mean([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])
10.5

Entretanto, caso vc use .loc:
>>> import pandas as pd
>>> import numpy as np
>>> from statistics import mean, median, mode

>>> televisores = [*range(0, 120)]
>>> frequencia = [5, 25, 40, 15, 10, 5]

>>> df = pd.DataFrame({'televisores': televisores})

>>> df.loc[0:20].mean()
televisores    10.0
dtype: float64
>>> df.loc[20:40].mean()
televisores    30.0
dtype: float64
>>> df.loc[40:60].mean()
televisores    50.0
dtype: float64
>>> df.loc[60:80].mean()
televisores    70.0
dtype: float64
>>> df.loc[80:100].mean()
televisores    90.0
dtype: float64

Embora vc receba as médias que você estava esperando, isso está errado. No caso acima, df.loc[0:20].mean() e df.loc[20:40].mean() usam o mesmo 20 para ambos cálculos de média.
Nota o .loc inclui os indices inicial e final no resultado
>>> df.loc[0:3]
   televisores
0            0
1            1
2            2
3            3

","
            0
        ",,,"['\npython', 'pandas\n']"
501110,Ao importar um dado CSV no jupyter notebook e transformar uma variável para 0 e 1 hora de mostrar novamente a tabela esta como NaN,"
import pandas as pd
train = pd.read_csv('base de dados')
train.head()

#Mapear o sexo e trasnformar em 0 e 1
train['Sex_num']= train.Sex.map({'Female':0, 'Male':1})
#comparar utilizando a função loc para localizar os dados da linha 0 a 4 e a coluna Sex e Sex_Num
train.loc[0:4, ['Sex', 'Sex_num']]

","
Embora tenha visto que já foi solucionado.
Quando temos uma variável categórica, dependendo do caso, o uso de ""category"" é o ideal.
Criando dataframe de teste
>>> df = pd.DataFrame({""Sex"": [""male"",""male"",""female"",""male"",""female"",""female"",""male"",""male""]})
>>> df
      Sex
0    male
1    male
2  female
3    male
4  female
5  female
6    male
7    male

Aplicando categoria
>>> df[""Category""] = df[""Sex""].astype(""category"")
>>> df[""Category""].cat.categories = [0,1]
>>> df
      Sex Category
0    male        1
1    male        1
2  female        0
3    male        1
4  female        0
5  female        0
6    male        1
7    male        1

Editado em 25/3/2021
Baseado na pergunta do @Woss: ""Como seria definido qual será 0 e qual será 1?""
Resposta: A definição é por ordem alfabética. Por isso o 0 é associado a female e 1 ao male
Veja outro exemplo:
Nova base de teste
>>> df = pd.DataFrame({""Sex"": [""outro"", ""male"",""male"",""female"",""male"",""outro"",""female"",""female"",""outro"",""male"",""male"",""outro""]})
>>> df
       Sex
0    outro
1     male
2     male
3   female
4     male
5    outro
6   female
7   female
8    outro
9     male
10    male
11   outro

Aplicando categorias
>>> df[""Category""] = df[""Sex""].astype(""category"")
>>> df[""Category""].cat.categories = [0,1,2]
>>> df
       Sex Category
0    outro        2
1     male        1
2     male        1
3   female        0
4     male        1
5    outro        2
6   female        0
7   female        0
8    outro        2
9     male        1
10    male        1
11   outro        2

Perceba que mesmo outro sendo o primeiro item, ele recebe a categoria 2. Caso queira associar em outra ordem, algo como [0,2,1] levaria a 0=female, 2=male, 1=outro
","
            1
        ",,,['\npython\n']
501105,Como lidar com 2 pythons instalados (e.g. python instalado em Miniconda vs python instalado em WindowsApps),"
Eu geralmente uso o python por meio do Miniconda, porém devido a alguns projetos precisei baixar o node.js diretamente do site (sem usar o conda para isso) e ele instala a ultima versão do python pois não reconhece o que existe dentro da Miniconda. Com isso:

Como eu lido com este python que foi instalado ao baixar o node a fim de utilizar somente o do Miniconda? (é só remover ele do PATH?)
Quais as diferenças em baixar o node via conda install e pelo instalador direto do site?

Obs: Ao digitar where python ele me retorna:
C:\Users\henri\Miniconda3\python.exe
C:\Users\henri\AppData\Local\Microsoft\WindowsApps\python.exe

",,,,,"['\npython', 'instalação', 'anaconda\n']"
501074,Como capturar o data-tooltip usando selenium no Python,"
Olá, é o seguinte o meu problema: Estou fazendo um web scraping na seguinte URL > https://www.maze.com.br/produto/tenis-nike-air-jordan-ma2-ultramarine-branco/4749595.
Acabei me deparando com um leve problema, na hora de selecionar o tamanho do produto (39.5; 40; 41; etc) eu simplesmente pensei num input no qual o usuário digita o tamanho do tênis:
tamanho = input('Tamanho do tênis? ')

Após isso eu iria fazer um find_elements_by_class_name e ver qual das classes possuem o valor da variável tamanho.
Acontece que isto não deu certo... 
Por algum motivo eu estou recebendo um array vazio []. Após o erro pensei em pegar o valor que está em data-tooltip e comparar se o valor bate com a da variável inicial tamanho, ai que está o ponto todo! Eu não sei como eu posso pegar o valor descrito em data-tooltip para fazer a comparação de valores. Eu já pesquisei sobre o assunto e acabei por não encontrar nada e por isso estou aqui fazendo está pergunta.
Se também você souber qualquer outro método para eu conseguir selecionar o tamanho do tênis estou a ouvidos.
","
Sou novo no python, mas pelo que entendi é mais ou menos isso a sua ideia ? Qualquer duvida com o código só perguntar, eu deixei um while no código para que você possa testar ele passando pelos tamanhos digitados no input
from selenium import webdriver
from time import sleep

url = 'https://www.maze.com.br/produto/tenis-nike-air-jordan-ma2-ultramarine-branco/4749595'
options = webdriver.ChromeOptions()
options.add_argument(""--start-maximized"")
driver = webdriver.Chrome(executable_path='chromedriver.exe', options=options)

try:
    driver.get(url)
    sleep(2)
    xpath = driver.find_element_by_xpath('//div[@class=""references""]').find_elements_by_xpath(
        '//button[@class=""ui basic button""]')
    tamanhos = [tamanho.text for tamanho in xpath if tamanho.text != '']
    print(f""Os tamanhos disponíveis são: {tamanhos} "")
    print(len(tamanhos))
    while True:
        escolha = input(""Escolha o tamanho que deseja: "")
        if escolha not in tamanhos:
            print(""O tamanho não existe na lista"")
        else:
            opcao = driver.find_element_by_xpath('//div[@class=""references""]').find_element_by_xpath(
                f'//button[@data-tooltip=""{escolha}""]')
            opcao.click()
except Exception as e:
    print(e)
finally:
    driver.close()

","
            0
        ",,,"['\nhtml', 'python', 'selenium', 'web-scraping\n']"
501024,"Em um df, como selecionar itens em coluna com formato datetime, classifica-los em períodos (manhã, tarde e noite) e coloca-los em uma nova coluna","
Olá!!!  Estou em busca de ajuda para solução do problema abaixo.
Meu df tem uma coluna ‘DATA’  com formato 29/01/2019  17:50:11), que por padrão é convertida para 'objeto' do tipo pandas. Ao todo, ele tem 640 linhas.  já tentei muitas coisas, meu melhor avanço foi.
Criar um range para cada período e compara-los com os dados da coluna.
periodo1 = pd.date_range('2020-10-15 05:00','2021-03-18 12:00',freq='1T')
periodo2 = pd.date_range('2020-10-15 12:01','2021-03-18 18:00',freq='1T')
periodo3 = pd.date_range('2020-10-15 18:01','2021-03-18 04:59',freq='1T')

for index, row in df.iterrows( ):
     if row ['DATA1'] in periodo1:
        df.loc[index,'DATA1'] = 'Manhã'
    if row ['DATA1'] in periodo2:
        df.loc[index,'DATA1'] = ‘Tarde'
    if row ['DATA1'] in periodo3:
        df.loc[index,'DATA1'] = 'Noite'

A primeira parte no tocante a periodo1 o cod. roda perfeitamente. No entanto ele preenche DATA1 (nova coluna),  todos com ‘Manhã’ e  desconsidera o restante do código.
Qualquer ajuda é bem-vinda. Desde já agradeço.
","
Siga os passos abaixo
Criando dataframe de teste
>>> import pandas as pd
>>> df = pd.DataFrame({""DataString"": [""29/01/2019 17:50:11"", ""29/01/2020 3:50:00"", ""29/01/2021 21:50:11""]})
>>> df
            DataString
0  29/01/2019 17:50:11
1   29/01/2020 3:50:00
2  29/01/2021 21:50:11

Convertendo data string para tipo datetime
>>> df[""Data""] = pd.to_datetime(df[""DataString""], format=""%d/%m/%Y %H:%M:%S"")
>>> df
            DataString                Data
0  29/01/2019 17:50:11 2019-01-29 17:50:11
1   29/01/2020 3:50:00 2020-01-29 03:50:00
2  29/01/2021 21:50:11 2021-01-29 21:50:11

Definindo função. (para determinar manhão, tarde e noite, só é preciso da hora, uma vez que a mensma está em formato 24h)
def categoriza(x):
    if x.hour in range(6, 13):
        return ""manha""
    elif x.hour in range(12, 19):
        return ""tarde""
    elif x.hour in range(18, 24):
        return ""noite""
    elif x.hour in range(0, 6):
        return ""madrugada""

Aplica função
>>> df['categoria'] = df[""Data""].apply(categoriza)

>>> df

            DataString                Data  categoria
0  29/01/2019 17:50:11 2019-01-29 17:50:11      tarde
1   29/01/2020 3:50:00 2020-01-29 03:50:00  madrugada
2  29/01/2021 21:50:11 2021-01-29 21:50:11      noite

Nota Vc pode ir sobrescrevendo as colunas. Somente fiz deste jeito para ficar mais didático
","
            0
        ",,,"['\npython', 'pandas', 'classificação', 'dataframe', 'comparação\n']"
501016,Selecionando uma coluna a partir de um laço condicional em um dataframe do pandas,"
Eu tenho um dataframe do pandas com cinco linhas 3 três colunas. Eu quero criar uma função onde o meu código retorne quais colunas o valor da última linha seja maior que a primeira linha. No exemplo do meu código eu quero que ele me gere uma lista com o nome da coluna 'Temp01'. Eu me atrapalhei na hora de criar o if/else para verificar as colunas cuja ultima linha seja maior que a primeira. Abaixo segue meu código:
#Importa as Bibliotecas Pandas e Numpy
import pandas as pd

#Cria do Dataframe
df0 = pd.DataFrame({'Temp01':[10,20,30,40,15],'Temp02':[50,60,70,70,45],'Temp03':[80,90,100,100,75]})

#Separa Colunas cuja ultima linha seja maior que a primeira
teste =[]#Lista c o nome de cada coluna do Dataframe df0

for column in df0.columns:

#df0.column[-1] para pegar a ultima linha de cada coluna 
#df0.column[0] para pegar a primeira linha de cada coluna

  if df0.column[-1]> df0.column[0]:
    text = column
    teste.append(text)
  else:
    pass
print(teste)

","
#Importa as Bibliotecas Pandas e Numpy
import pandas as pd

#Cria do Dataframe
df0 = pd.DataFrame({'Temp01':[10,20,30,40,15],'Temp02':[50,60,70,70,45],'Temp03':[80,90,100,100,75]})

#Separa Colunas cuja ultima linha seja maior que a primeira
teste =[]#Lista c o nome de cada coluna do Dataframe df0

def Ultimo_Maior_Valor(p1,p2):
    '''Função retorna Verdadeiro ou Falso se ultimo valor é maior ou não'''
    if (p1 < p2):
        return True
    else:
        return False

for column in df0.columns:

    #Head pega n primeiro valor
    #Tail pega n ultimo valor
    p1 = int(df0[column].head(1))
    p2 = int(df0[column].tail(1))

  #Se o retorno for True, ele entra no if
    if Ultimo_Maior_Valor( p1, p2 ):
        teste.append(column)

print('Coluna(s) com último valor maior que o primeiro:')
print(teste)


","
            0
        ",,,"['\npython', 'pandas\n']"
501009,Conectar um lineEdit a um método de uma classe,"
estou tendo uma problema que dá a seguinte mensagem

TypeError: consultaCodigo() missing 1 required positional argument:
'self'

Eu tenho um projeto que até o momento funciona bem em paradigma estruturado, mas estou tentando reescrever o código em POO.
Tenho o seguinte arquivo py "" conexao"" com o seguinte código:
import mysql.connector


# Classe responsável pela conexão ao banco de dados

class Conexao():
    def __init__(self):
        try:
            self.conectar = mysql.connector.connect(host=""localhost"", user=""root"", database=""db_farmacia"", password="""")
        except mysql.connector.Error as e:
            print(e)
        return self.conectar

    def ConsultarTabela(self, consulta):
        try:
            self.cursor = self.conexao_db()
            lista = self.cursor.execute(""SELECT nome_produto, preço FROM tb_produtos WHERE codigo=?;"", [consulta])
            return lista.fetchall()

        except mysql.connector.Error as e:
            print(e)
        return self.conectar

E o seguinte arquivo py com o seguinte código:
from PyQt5 import uic, QtWidgets, QtCore, QtGui
from conexao import Conexao

#Função que insere código

# OBS: inserir_codigo = é um linedEdit


class frenteCaixa:

    def consultaCodigo(self):

        codigo = pdv.inserir_codigo.text()
        pdv.inserir_codigo.setText("""")
        consultados = Conexao()
        busca = consultados.ConsultarTabela(codigo)
        print(busca)

app = QtWidgets.QApplication([])
pdv = uic.loadUi(""interface_2.ui"")
tela_total = uic.loadUi(""interface_total.ui"")
dial_forma_pgto = uic.loadUi(""dialogo_forma_pgto.ui"")

pdv.inserir_codigo.returnPressed.connect(frenteCaixa.consultaCodigo) # Utiliza o enter para enviar o código sem necessidade do pushButtom
pdv.showFullScreen()
pdv.show()
app.exec()

O meu erro está no código : pdv.inserir_codigo.returnPressed.connect(frenteCaixa.consultaCodigo). No código estruturado está : pdv.inserir_codigo.returnPressed.connect(funcao_1) e funciona perfeitamente. No que eu estaria errando?
","
como sua classe esta com  o atributo self ela precisa ser instanciada antes de usar
você pode instanciar e chamar o metodo consultaCodigo() ou transformar o seu metodo em um class method
# 1 solução
pdv.inserir_codigo.returnPressed.connect(frenteCaixa().consultaCodigo)

# 2 solução
@classmethod
def consultaCodigo(cls):
     #seu codigo

pdv.inserir_codigo.returnPressed.connect(frenteCaixa.consultaCodigo)

","
            0
        ",,,"['\nmysql', 'python\n']"
500992,Comparar valores de matrizes e adicioná-los a outra (python) [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Não estou conseguindo fazer a estrutura para comparar se o valor na posição[l][c] de uma matriz é maior que na mesma posição de outra, e se sim, esse valor vai para essa mesma posição em uma terceira matriz:
matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]

matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

matrixTrhee = [[], [], [], []]

for l in range(0, 4):

    for c in range(0, 4):

        if matrixOne[l][c] > matrixTwo[l][c]:

            matrixTrhee[l][c] = matrixOne[l][c]

        else:

            matrixTrhee[l][c] = matrixTwo[l][c]

for l in range(0, 4):

    for c in range(0, 4):

        print(f'[{matrixTrhee}{[l]}{[c]}:^5]', end=' ')

    print()

","
Fazendo funcionar o código da pergunta:
matrixOne = [
[ 1,  12, 45], 
[58, 524, 78], 
[ 1,   2,  3],
[45, 456,  8]]

matrixTwo = [
[ 0,  1,  2], 
[85,  1,  74], 
[27, 63,  21], 
[25, 47, 962]]

#Inicializa a lista com todas as posições definidas
matrixTrhee = [[0,0,0] for _ in range(4)]

for l in range(0, 4):   
    #Aqui são três colunas e não quatro. 
    for c in range(0, 3):    
        if matrixOne[l][c] > matrixTwo[l][c]:    
            matrixTrhee[l][c]=matrixOne[l][c]    
        else:    
            matrixTrhee[l][c]=matrixTwo[l][c]

print(*matrixTrhee, sep=""\n"")
#[ 1,  12,  45]
#[85, 524,  78]
#[27,  63,  21]
#[45, 456, 962]

Uma alternativa mais compacta seria achatar(converter em vetor 1D) as matrizes e com o método da biblioteca padrão itertools, chain.from_iterable(iterable) e comparar os pares correspondentes de itens das matrizes.
O algoritmo é simples:

Achata uma matriz e a enumera os elementos.
Achata a outra matriz.
Itere pela matriz enumeração e compare se aproveitando dos indices qual o maior valor.
Reagrupe o resultado na estrutura de matriz requerida.

Exemplo:
from itertools import chain

matrixOne = [
[ 1,  12, 45], 
[58, 524, 78], 
[ 1,   2,  3],
[45, 456,  8]]

matrixTwo = [
[ 0,  1,  2], 
[85,  1,  74], 
[27, 63,  21], 
[25, 47, 962]]


m1 = enumerate(chain.from_iterable(matrixOne))             #Achata e enumera matrixOne .
m2 = list(chain.from_iterable(matrixTwo))                  #Achata matrixTwo.
m3 = [max(v, m2[i]) for i, v in m1]                        #Itera por m1 e encontra o maior valor.

matrixTrhee= [m3[r: r+3] for r in range(0, len(m3), 3)]  #Reorganiza o resultado em uma matriz 4x3.

print(*matrixTrhee, sep=""\n"")
#[ 1,  12,  45]
#[85, 524,  78]
#[27,  63,  21]
#[45, 456, 962]

Teste o código no IdeOne
","
            1
        ","
Uma das forma válidas para resolver esta questão é:
matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]
matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

matrixTrhee = []
for l in range(4):
    line = []
    for c in range(3):
        if matrixOne[l][c] > matrixTwo[l][c]:
            line.append(matrixOne[l][c])
        else:
            line.append(matrixTwo[l][c])
    matrixTrhee.append(line)

print(matrixTrhee)

Observe que o primeiro bloco for percorre o range(4) - equivalente ao número de linhas da matriz matrixTrhee. Em seguida, o segundo bloco for percorre o range(3) - equivalente ao número dae colunas da matriz matrixTrhee - verificando se cada elemento da matrixOne é maior que o correspondente elemento da matrixTwo. Caso positivo, será adicionado em line o elemento matrixOne[l][c]. Caso contrário, o elemento matrixTwo[l][c] é adicionado em line.
Para cada encerramento do 2º bloco for é adicionado line à matrixTrhee.
Finalizando as atividades dos dois blocos for é exibida a seguinte saída.
[[1, 12, 45], [85, 524, 78], [27, 63, 21], [45, 456, 962]]


Agora, se preferir exibir a matriz em forma tabular, pode utilizar a biblioteca numpy. Dessa forma o código ficará:
import numpy as np

matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]
matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

matrixTrhee = []
for l in range(4):
    line = []
    for c in range(3):
        if matrixOne[l][c] > matrixTwo[l][c]:
            line.append(matrixOne[l][c])
        else:
            line.append(matrixTwo[l][c])
    matrixTrhee.append(line)

print(np.array(matrixTrhee))

Depois de realizado todas as operações será exibida a seguinte saída:
[[  1  12  45]
 [ 85 524  78]
 [ 27  63  21]
 [ 45 456 962]]


Se preferir também podes utilizar List Comprehension. Desta forma o código ficará:
import numpy as np

matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]
matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

matrixTrhee = [[matrixOne[l][c] if matrixOne[l][c] > matrixTwo[l][c] else matrixTwo[l][c]
                for c in range(3)] for l in range(4)]

print(np.array(matrixTrhee))

Produzindo a seguinte saída:
[[  1  12  45]
 [ 85 524  78]
 [ 27  63  21]
 [ 45 456 962]]


Se não houver necessidade em exibir os delimitadores - [] - podemos utilizar Expressões Geradoras. Desta forma o código ficaria:
matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]
matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

matrixTrhee = ((matrixOne[l][c] if matrixOne[l][c] > matrixTwo[l][c] else matrixTwo[l][c]
                for c in range(3)) for l in range(4))

for i in matrixTrhee:
    for j in i:
        print(f'{j:>5}', end='')
    print()

Obtendo a seguinte saída:
    1   12   45
   85  524   78
   27   63   21
   45  456  962

Ou, podemos simplesmente comparar os valores e exibir os resultados.
matrixOne = [[1, 12, 45], [58, 524, 78], [1, 2, 3], [45, 456, 8]]
matrixTwo = [[0, 1, 2], [85, 1, 74], [27, 63, 21], [25, 47, 962]]

print(f'A matrixTrhee é:')
for l in range(4):
    for c in range(3):
        if matrixOne[l][c] > matrixTwo[l][c]:
            print(f'{matrixOne[l][c]:>5}', end='')
        else:
            print(f'{matrixTwo[l][c]:>5}', end='')
    print()

Então, obtemos a seguinte saída:
A matrixTrhee é:
    1   12   45
   85  524   78
   27   63   21
   45  456  962

","
            -2
        ","['\npython', 'python-3.x\n']"
500983,Para que serve memoryview em Python?,"
Eu estou lendo sobre arrays em Python e me deparei com uma função embutida chamada memoryview. Entendi que uma diferença das listas para arrays é que nas últimas é possível usar o memoryview, enquanto, nas primeiras, não.
Por exemplo:
from array import array
lista = [0.0, 1.0, 1.0, 1.0, 2.0, 3.0, 4.0,
         4.0, 5.0, 6.0, 6.0, 7.0, 7.0, 8.0, 8.0]

# Retorna erro TypeError: memoryview: a bytes-like object is required, not 'list'
memoryview(lista)

# Mas isto funciona:
numbers = array('d', lista)
memoryview(numbers)

Eu imaginei que memoryview poderia ser uma espécie de equivalente à função id que, da forma como entendo, retorna o local na memória do objeto. Fiquei especialmente tentado por essa interpretação porque memoryview(numbers) retorna <memory at 0x7fe5fca911f0>, no meu caso. No entanto, id(numbers) retorna um valor completamente diferente.
Então para que serve memoryview? Qual a vantagem que o memoryview oferece de usar arrays em lugar de listas?
","
Resumidamente, no Python, os tipos básicos para manipular dados binários são bytes e bytearray. Eles, assim como arrays, por exemplo, são suportados pela classe memoryview, que usa o ""buffer protocol"" para permitir o acesso à memória de outros objetos binários sem a necessidade de fazer cópia.
Confesso que é a primeira vez que deparo com isso no Python, mas o conceito me parece similar ao de slices do Rust. Acho interessante mencionar isso porque esse tipo de coisa é geralmente interessante ao se trabalhar com operações de ""nível mais baixo"", que é o nicho do Rust.
Qual a vantagem?
A vantagem é justamente a rapidez e o menor custo para o acesso, uma vez que jamais será feita nenhum tipo de cópia para o acesso.
Por conta disso, você pode indexar e realizar slices sem implicar em quase nenhum custo, já que, reitero, não haverá cópia.
Entenda o que memoryview retorna como uma ""lente"" que te permite ler os elementos diretamente ""olhando para a memória"", o que nem é o caso com os mecanismos mais ""comuns"" do Python. Um slicing em listas, por exemplo, copia as referências.
Como disse no começo da pergunta, o memoryview pode ser visto como uma API um pouco mais ""low level"" do Python. Na maioria dos casos, não fará diferença utilizar um array com memoryview ou uma lista normal. No entanto, existem casos em que o custo de cópias realmente pode implicar em um grande custo adicional. Nesses casos, é ideal utilizá-la.
Por que não funciona com listas?
A API memoryview é válida somente para objetos que implementem o buffer protocol, o que não é o caso das listas.
Como o valor a ser ""envolvido"" pela memoryview deve possuir cada ""elemento"" com um mesmo tamanho de memória, você não é capaz de utilizar isso com listas, por exemplo, já que cada elemento dessa estrutura pode ocupar uma quantidade de memória diferente.
No seu caso não deu certo por causa disso: você estava utilizando uma lista, estrutura de dados que pode potencialmente ter valores com tamanhos variados. Mas, ao utilizar um array de floats (como feito no segundo exemplo da pergunta), funciona, já que cada elemento do array tem garantidamente o tamanho de um float, isto é, todos os elementos do array ocupam a mesma quantidade de memória. Portanto, o memoryview conseguirá fazer uma distinção clara e performática entre cada elemento, permitindo os acessos sem grandes custos.
","
            2
        ",,,"['\npython', 'array\n']"
500966,Python - consumir api com loop para paginação,"
Atualmente eu consumo dados de uma api paginada utilizando python. Coloquei um número de paginas x, o problema é quando existem mais paginas, ou quando tem menos paginas e fica fazendo loop sem necessidade.
Sempre que a api tem uma proxima pagina, a mesma retorna a seguinte informação:
""has_next"":true

e quando não tem
""has_next"":false.

Seria possível eu fazer um loop olhando se existe a informação true,avanço para nova pagina, se retornar false ele encerra o loop ?
subd = 6
a=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
if subd >= 2:
    for page in a:
        request = curl.curlEc(subd, page)

segue o trecho de retorno em Json
[
   {
      ""resultados"":{
         ""has_next"":true,
         ""current_page"":1,
         ""pedidos"":[
            {
               ""id"":8809,
               ""user"":{
                  ""id"":2361,
                  ""name"":"""",
                  ""cpf"":"""",
                  ""cnpj"":"""",
                  ""sexo"":""feminino"",
                  ""data_nascimento"":"" "",
                  ""devices"":[
                     
                  ]
               },
               ""loja"":"""",
               ""tipo_frete"":null,
               ""endereco_entrega"":null,
               ""forma_pagamento_entrega"":""Débito"",
               ""cupom_desconto"":null,
               

","
Usando requests seria algo como:
import requests

page = 1

while True:
    # supondo que a chamada passe a página como parâmetro
    r = requests.get(f'https://dominio?page={page}')

    # testando resposta, se for diferente de 200 (OK), sai do loop
    if r.status_code != 200:
        break

    #assumindo que é uma lista com um único item
    results = r.json()[0]

    #
    # AQUI VC PROCESSA O RESULTADO
    #

    # apenas para ficar claro
    has_next = results[""resultados""][""has_next""]
    
    page = page + 1

    if not has_next:
        break

","
            1
        ",,,['\npython\n']
500886,Não estou conseguindo mudar a exibição do campo impacto de numérico para um caractere especial [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    










Bloqueadas. Os comentários nessa pergunta foram desativados, mas ainda são aceitos novas respostas e outras interações. Leia mais.
                        
                    





from bs4 import BeautifulSoup
import requests
import time


headers = requests.utils.default_headers()
headers.update({'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0'})

data = requests.get('http://br.investing.com/economic-calendar/', headers=headers)

resultados = []

if data.status_code == requests.codes.ok:
    info = BeautifulSoup(data.text, 'html.parser')
    
    blocos = ((info.find('table', {'id': 'economicCalendarData'})).find('tbody')).findAll('tr', {'class': 'js-event-item'})
    time.sleep(3)
    
    for blocos2 in blocos:
        impacto = str((blocos2.find('td', {'class': 'sentiment'})).get('data-img_key')).replace('bull','')
        horario = str(blocos2.get('data-event-datetime')).replace('/', '-')
        moeda = (blocos2.find('td', {'class': 'left flagCur noWrap'})).text.strip()
        
        resultados.append({'par': moeda, 'horario': horario, 'impacto': impacto})
        
        
        

for info in resultados: 
        print('PARIDADE:',info['par'],'\nHORARIO:',info['horario'],'\nIMPACTO:',info['impacto'],'\n--------\n')

APARECE ASSIM:
PARIDADE: GBP 
HORARIO: 2021-03-24 04:00:00 
IMPACTO: 1 
--------

PARIDADE: GBP 
HORARIO: 2021-03-24 04:00:00 
IMPACTO: 1 
--------

PARIDADE: GBP 
HORARIO: 2021-03-24 04:00:00 
IMPACTO: 1 
--------

Gostaria que ao invés de mostrar número mostrasse ('⭐')
",,,,,"['\npython', 'pycharm\n']"
500885,Imprimir dados de uma lista que está dentro de um dicionário - Python,"

Considere o seguinte conjunto de dados: Nome + (N1, N2, N3, N4). Nome
representa o nome de um aluno e deve ser usado como chave. Já N1, N2,
N3, N4 representam as notas de provas desse aluno. Utilize uma
estrutura de dicionário com listas para resolver este exercício.  As
notas devem ser exibidas ao final do programa com uma casa decimal de
precisão.

Eu preciso imprimir o Nome do que é recebido via input, e suas notas que também são, mas não faço ideia de como faço isso.
Queria que retornasse algo tipo:
joaozinho 1.0  3.0  4.0  5.0
O código está assim:

for i in range(1):
    nome = input('Digite o nome do aluno: ')
    n1 = float(input('Digite a primeira nota: '))
    n2 = float(input('Digite a segunda nota: '))
    n3 = float(input('Digite a terceira nota: '))
    n4 = float(input('Digite a quarta nota: '))
    alunos['Nome'].append(nome)
    alunos['N1'].append(n1)
    alunos['N2'].append(n2)
    alunos['N3'].append(n3)
    alunos['N4'].append(n4)

for nome, nota in alunos.items():
    print(nome, nota)```

","
Para resolver esta questão você deve prestar atenção na seguinte lógica:

Capturar o nome da pessoa;
Montar uma lista com as notas da pessoa;
Alimentar o dicionário com nome e notas;
Exibir chave, valor do dicionário.

Uma das forma para se resolver tal questão é:
nome = input('Digite o nome: ')

nome_nota = dict()
notas = list()
for i in range(1, 5):
    notas.append(float(input(f'Digite a {i}º nota: ')))

nome_nota.update({nome: notas})

for j, k in nome_nota.items():
    print(j, *k)

Observe que ao executar o código devemos informar o nome da pessoa. Em seguida, devemos digitar cada uma das quatro notas para ser inseridas na lista notas.
Observação: Para adicionar valores em uma lista utilizamos o método append() e para adicionarmos chave/valor em dicionário utilizamos o método update().
Depois que o bloco for inserir todos os valores na lista notas serão adicionados nome e notas ao dicionário.
Posteriormente o segundo bloco for irá percorrer chave/valor do dicionário exibindo respectivamente a chave e o valor. Como o valor é formado por elementos de uma lista devemos desempacotá-los, o que conseguimos, inserindo o sinal de (*) - asterisco - imediatamente antes da lista notas.

Existe outra forma mais concisa de resolver esta questão utilizando os conceitos de dictionary comprehensions. Desta forma podemos implementar o seguinte código:
nome = input('Digite o nome: ')
nome_nota = {nome: [float(input(f'Digite a {i}º nota: ')) for i in range(1, 5)]}

for j, k in nome_nota.items():
    print(j, *k)

Observe que neste código foi implementado um Dictionary Comprehension. Onde a chave corresponde à nome e o valor corresponde à lista montada com auxílio de List Comprehensions no qual cada elemento é o valor da cada uma das 4 notas do aluno.
","
            1
        ","
Analisando o código, cheguei a uma outra forma, mas ainda não consigo imprimir na tela do jeito que pede no enunciado:
boletim = {'nome':[], 'n1':[], 'n2':[], 'n3':[], 'n4':[]}

num = int(input('Qual o número de alunos? '))
for i in range(num):
    nome = input('Digite o nome do aluno: ')
    n1 = float(input('Digite a primeira nota: '))
    n2 = float(input('Digite a segunda nota: '))
    n3 = float(input('Digite a terceira nota: '))
    n4 = float(input('Digite a quarta nota: '))
    boletim['nome'].append(nome)
    boletim['n1'].append(n1)
    boletim['n2'].append(n2)
    boletim['n3'].append(n3)
    boletim['n4'].append(n4)
print('\nNota dos alunos')
print('-' * 90)

","
            1
        ","['\npython', 'python-3.x\n']"
500861,Retornar os elementos de uma lista de forma randomizada,"
Eu tenho uma array gerada por um string.split(), e o valor dessa string é obtido por um input.
Ou seja:
string = input(""Digite os Nomes separados por Vírgula"")
arrTeste = string.split("","")

O número de elementos no array é indefinido, visto que o usuário pode digitar 5 nomes, 10 nomes... etc
É possível retornar todos os elementos do array de forma aleatória?
Exemplo (Supondo que o usuário tenha digitado os três nomes abaixo no input):
arrTeste = [""Junior"", ""Gabriel"", ""Henrique""]

O output desejado seria algo como:
print(funcaoAleatorizar)  ## suposição da função

@Gabriel, @Junior, @Henrique  ## output do terminal

Ainda tenho o detalhe que preciso concanetar um @ antes dos elementos gerados, mas isso eu mesmo faço.
","

É possível retornar todos os elementos do array de forma aleatória?

Sim, basta usar a função shuffle do módulo random:
from random import shuffle

arrTeste = [""Junior"", ""Gabriel"", ""Henrique""]
shuffle(arrTeste)

print(', '.join('@' + nome for nome in arrTeste))

Com isso os elementos da lista são ""embaralhados"" aleatoriamente.
Depois, basta imprimir os nomes com o @ na frente, e separados por vírgula, conforme desejado.

Lembrando que shuffle altera a lista in-place.
Mas se você quer manter a lista original intacta, uma alternativa é usar sample:
from random import sample

arrTeste = [""Junior"", ""Gabriel"", ""Henrique""]
embaralhado = sample(arrTeste, len(arrTeste))
print(', '.join('@' + nome for nome in embaralhado))
print(arrTeste) # lista original permanece intacta

sample gera uma amostra da lista, garantindo que não há elementos repetidos. Mas como no segundo parâmetro eu passei o tamanho da lista, então no fim ele irá gerar uma amostra do tamanho da lista (e como ele garante que não há repetição, o resultado terá todos os elementos da lista em ordem aleatória). E a lista original permanecerá intacta.
","
            4
        ",,,"['\npython', 'lista', 'random\n']"
500834,Calculando diferença entre primeira e ultima linha em um pandas dataframe,"
Eu tenho um dataframe do pandas com cinco linhas 3 três colunas. Eu quero criar uma função onde o meu código retorne as colunas em que a última linha seja maior que a primeira linha. No exemplo do meu código eu quero que ele me gere uma lista com o nome da coluna 'Temp01'. Eu me atrapalhei na hora de criar o if/else para verificar as colunas cuja ultima linha seja maior que a primeira. Abaixo segue meu código:
#Importa as Bibliotecas Pandas e Numpy
import pandas as pd

#Cria do Dataframe
df0 = pd.DataFrame({'Temp01':[10,20,30,40,15],'Temp02':[50,60,70,70,45],'Temp03':[80,90,100,100,75]})

#Separa Colunas cuja ultima linha seja maior que a primeira
alta =[]#Tendência de Alta

for column in df0.columns: 
  if df0.column[-1]> df0.column[0]:
    text = column
    alta.append(text)
  else:
    pass
print(alta)

","
Caso você não tenha NaN como primeiro ou último elemento, siga os passos abaixos
Criando dataframe
df0 = pd.DataFrame({'Temp01':[10,20,30,40,15],'Temp02':[50,60,70,70,45],'Temp03':[80,90,100,100,75]})

print(df0)
   Temp01  Temp02  Temp03
0      10      50      80
1      20      60      90
2      30      70     100
3      40      70     100
4      15      45      75

Primeiro elementos
first = df0.loc[df0.first_valid_index()]

print(first)
Temp01    10
Temp02    50
Temp03    80
Name: 0, dtype: int64

Últimos elementos
last = df0.loc[df0.last_valid_index()]

print(last)
Temp01    15
Temp02    45
Temp03    75
Name: 4, dtype: int64

Resultados
print(last - first)
Temp01    5
Temp02   -5
Temp03   -5
dtype: int64


resultados = list(last - first)

print(resultados)
[5, -5, -5]

","
            0
        ",,,"['\npython', 'pandas\n']"
500825,Problema ao tentar resolver um desafio [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Boa noite, pessoal...
Preciso da ajuda de vocês para escrever um pequeno código que seja capaz de receber um número, bem como o seu índice e retornar o próximo elemento da sequência...
O problema e que eu ainda não consegui descobrir a lógica que está por trás disso


O código que eu escrevi é o seguinte...
def next(a,i):
  """"""
  1,0,2,−1,3,−2,4,-3,5,-4
  """"""
  if i%2 == 0:
    return 1 + 1*i//2
  else:
    return  1 + (-1)*i//2
print(next(17, 31))

","
Se a sua função recebe ai e i como parâmetros, o mínimo que podemos esperar é que a expressão que definirá o próximo valor dependa desses dois valores.
Pelos exemplos fica mais claro que os valores dos parâmetros estão diretamente ligados ao resultado.
next(1, 1) = 0 ... 1 - 1 = 0
next(-1, 4) = 3 ... -1 + 4 = 3
next(-4, 10) = 6 ... -4 + 10 = 6
...

E por essa ligação podemos ver que se i é ímpar, nós subtraímos os dois valores para obter o próximo termo da sequência; já se i é par, basta somá-los.
Logo:
def next(ai, i):
  signal = 1 if i % 2 == 0 else -1
  return ai + signal * i

assert next(1, 1) == 0
assert next(-1, 4) == 3
assert next(-4, 10) == 6

Se não for muito fã do if para definir o sinal, pode fazer a expressão equivalente utilizando potenciação, pois (-1)**i será negativo para i ímpar e positivo para i par:
def next(ai, i):
  return ai + (-1)**i * i

","
            1
        ",,,"['\npython', 'tarefa\n']"
500819,PREENCHER MATRIZ COM VALORES ALEATÓRIOS EM PYTHON [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Preciso criar uma matriz de valores aleatórios, estava pensando em usar o random mas estou tendo dificuldade em adicionar esses dados à matriz; eu já tenho definido que é uma matriz 3x3. Alguém poderia me ajudar, por favor?
Tentei assim e fiz outra tentativa com o numpy também, porém sem sucesso:
import random

matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

for l in range(0,3):
    num = random.randint(0, 100)
    matrix[l].append(num)
    for c in range(0, 3):
        matrix[c].append(num)

for l in range(0, 3):
    for c in range(0, 3):
        print(f'[{matrix[l][c]:^5}]', end='')
    print()

","
Podemos manipular matrizes de diversas formas. Uma das mais interessantes é utilizando o biblioteca numpy. Esta biblioteca possui diversos métodos especializados em matrizes.
Pois bem uma das forma que podes resolver tal questão é:

Sortear de forma aleatória os valores que serão montados na matriz;
Exibir de forma agradável a matriz montada.

Como percebi - pelos seus comentários - que você deseja implementar uma matriz sem valores repetidos, sugiro utilizar o método sample da biblioteca random.
Uma das forma que podemos implementar o código é:
import numpy as np
from random import sample

numeros = sample(range(1, 100 + 1), 9)
print(np.array([numeros[i:i + 3] for i in range(0, len(numeros), 3)]))

Observe que números é um vetor formado por 9 valores sorteados, de forma não repetida, a partir do range(1, 100 + 1).
O método que garante a não repetição de valores sorteados é o método sample da biblioteca random.
Por que serão sorteados 9 valores?
Como você está querendo uma matriz 3 x 3, isso implica que o total de elementos da referida matriz é 3 x 3 = 9.
Então o que este código faz basicamente é:

Monta um vetor com 9 elementos sorteados e sem repetições;
Organiza visualmente a distribuição dos elementos sorteados em uma matriz 3 x 3.

Desta forma a matriz gerada será exibida de forma mais agradável.
","
            1
        ","
A lista valores tem uma lista com os numero aleatorios a serem gerados. O random gera valores no intervalo 0 ate a quantidade de numeros em valores, e ao ser gerado o o indice do valor ele é removido da lista, para impedir que se repita novamente.
import random
import numpy as np

matrix = []
valores =  list(np.arange(100))

for l in range(0,3):
    subMatriz= []
    
    for c in range(0, 3):
      i = random.randint(0, len(valores)-1)
      num = valores[i]
      valores.pop(i)
      subMatriz.append(num)
    matrix.append(subMatriz)

for l in range(0, 3):
    for c in range(0, 3):
        print(f'[{matrix[l][c]:^5}]', end='')
    print()

","
            0
        ",['\npython\n']
500806,Replace de Valor com Python e Pandas,"
Olá, estou tentando fazer a remoção de um caractere de uma base que extrai de um arquivo TXT, carreguei o arquivo com o pandas porem não consigo remover ele usando o comando replace, abaixo os valores que tenho em uma determinada coluna.
0 [23/Mar/2021:00:00:00
1 [23/Mar/2021:00:00:00
2 [23/Mar/2021:00:00:00
3 [23/Mar/2021:00:00:00
4 [23/Mar/2021:00:00:00

estou usando o seguindo código para fazer a remoção do ""["" com o seguinte comando:
y[3]replace(""["","""")
0 [23/Mar/2021:00:00:00
1 [23/Mar/2021:00:00:00
2 [23/Mar/2021:00:00:00
3 [23/Mar/2021:00:00:00
4 [23/Mar/2021:00:00:00
Name: 3, dtype: object

pelo que estou entendendo ele nao esta removendo o caractere porque o tipo do campo esta como objeto, estou precisando fazer isso para outras colunas do meu arquivo porem estou esbarrando nesta conversão, ja tentei o comando abaixo para mudar a coluna para string porem sem sucesso:
y[3] = y[3].astype(str)
y[3]
Name: 3, dtype: object

","
Tendo o dataframe abaixo:
>>> df
                     txt
0  [23/Mar/2021:00:00:00
1  [23/Mar/2021:00:00:00
2  [23/Mar/2021:00:00:00
3  [23/Mar/2021:00:00:00

Basta fazer
df['txt'] = df['txt'].str.replace('\[', '')

print(df)
0    23/Mar/2021:00:00:00
1    23/Mar/2021:00:00:00
2    23/Mar/2021:00:00:00
3    23/Mar/2021:00:00:00
Name: txt, dtype: object

Acredito que você queira transformar o campo em datetime também, então faça
df['data'] = pd.to_datetime(df['txt'], format='%d/%b/%Y:%H:%M:%S')

print(df)

                    txt       data
0  23/Mar/2021:00:00:00 2021-03-23
1  23/Mar/2021:00:00:00 2021-03-23
2  23/Mar/2021:00:00:00 2021-03-23
3  23/Mar/2021:00:00:00 2021-03-23

Caso vc somente precise das datas, pode fazer isso de uma vez
df['data'] = pd.to_datetime(df['txt'], format='[%d/%b/%Y:%H:%M:%S')

print(df)
                     txt       data
0  [23/Mar/2021:00:00:00 2021-03-23
1  [23/Mar/2021:00:00:00 2021-03-23
2  [23/Mar/2021:00:00:00 2021-03-23
3  [23/Mar/2021:00:00:00 2021-03-23

depois jogue a coluna txt fora:
df.drop(""txt"", axis=1, inplace=True)

","
            1
        ","
Utiliza assim que dá:
text = pd.read_csv('dados.txt', header=None)
text = text.replace('\[', '', regex=True)

","
            -5
        ","['\npython', 'pandas', 'numpy\n']"
500796,Preciso somar algumas linhas específicas em um data frame,"
Preciso somar o valor das linhas no qual aparece ""Resposnsável C', de modo prático eu preciso somar as linhas 3, 4 e 9 a partir da coluna 2, o resultado deverá ser  112. Até o momento consegui printar as linhas que quero usando o iloc, mas não consigo soma-las. Segue o código.
ps: Preciso somar o que está em vermelho.
import pandas as pd
def trans_excel_py(arquivocsv):
    df = pd.read_csv(arquivocsv, sep=';', header = None)
    return df
def soma_colunas(arquivocsv):
    df = pd.read_csv(arquivocsv, sep=';')
    matriz = pd.DataFrame(df.values)
    somas = []
    for i in range(len(matriz)):
        Total = matriz[i].sum()
        somas.append(Total)
    return somas
teste = trans_excel_py('cronograma.csv')
print(teste)
teste_sum = soma_colunas(""cronograma.csv"")
df = pd.DataFrame([teste_sum[2:10]],columns=['S1', 'S2', 'S3','S4','S5','S6','S7','S8'])
print(""\n"",df)

print(sum(teste_sum[2:10]))

df1 = teste.iloc[[3,4,9]]
print(""\n"",df1)


","
Após selecionar as linhas, como você fez:
df1 = teste.iloc[[3,4,9]]

df2 = df1.sum(axis=1) # soma cada linha individualmente no eixo horizontal

df2.sum() # soma os resultados de cada linha

Também é possível fazer tudo em apenas uma linha:
teste.iloc[[3,4,9]].sum(axis=1).sum()

Mais informações estão na documentação:
https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sum.html
Para selecionar também as colunas que serão usadas (da 2 até a 9):
teste[[2,3,4,5,6,7,8,9]].iloc[[3,4,9]].sum(axis=1).sum()

Você também pode substituir os NaN por algum valor usando fillna(valor):
teste[[2,3,4,5,6,7,8,9]].iloc[[3,4,9]].fillna(0).sum(axis=1).sum()

","
            0
        ",,,"['\npython', 'pandas', 'dataframe', 'soma\n']"
500746,Problemas na comunicação serial com python,"
Então, estou desenvolvendo um projeto para universidade, é basicamente o desenvolvimento de um supervisório. Tenho que fazer a leitura de alguns módulos I/O que se comunicam através de uma rede RS485.
A comunicação com o módulo principal se dá através da comunicação serial, mas estou com problemas nessa leitura.
Utilizando o pacote serial, em python, realizo a leitura da seguinte forma:
response = bytearray()
print(""Sending "" + cmd)

ser.open()

if ser.inWaiting() > 0:
        ser.reset_input_buffer()

# Envia os dados e recebe a resposta
if ser.isOpen():
    ser.write(cmd.encode('ascii'))
    time.sleep(SLEEP_VALUE)
    while ser.inWaiting() == 0:
        ser.write(cmd.encode('ascii'))
        time.sleep(SLEEP_VALUE)

    response.extend(ser.read((BIGGEST_N_OUTPUT * 8) + 2))  # Leitura de até 8 sinais + '>'
else:
    print(""ERRO DE CONEXAO COM PORTA SERIAL"")

Onde ""cmd"" é a variável que contém os códigos a serem enviados para o módulo. Ao final dele existe uma quebra de linha (conforme solicitado pelo manual de fabricante do módulo):
# Comando a ser escrito
cmd = '#' + str(ID) + str(channel) + '\r\n'

Este trecho de código fica em um eventual loop para realizar diversas leituras sequenciais. Acontece que, em algumas escritas aleatórias, ao utilizar o comando ser.Write, não recebo nenhuma resposta do módulo, resultando em um buffer de entrada (ser.inWaiting) igual a zero. Por este motivo escrevi o loop while para que o programa tente fiar escrevendo repetidamente até se obter uma resposta.
Existe alguma forma melhor de realizar as leituras? Já tentei mudar o tempo de timeout, ou mesmo acrescentar um valor maior de pausa no time.sleep(), porém mesmo com uma pausa muito grande o resultado é o mesmo. Também reseto o buffer antes de cada leitura, para assegurar a ausência de demais erros.
",,,,,"['\npython', 'serial', 'usb\n']"
500672,Dicionario Python [fechada],"






Fechada. Essa pergunta é fora de escopo e não está atualmente aceitando respostas.
                        
                    










Quer melhorar essa pergunta? Update the question so it's on-topic for Stack Overflow em Português.
                
Fechada no ano passado.




                        Melhore esta pergunta
                    



Alguém pode me ajudar? Estou tendo muita dificuldade em fazer esse exercicio.
Considere o seguinte conjunto de dados: Nome + (N1, N2, N3, N4). Nome representa
o nome de um aluno e deve ser usado como chave. Já N1, N2, N3, N4 representam as
notas de provas desse aluno. Utilize uma estrutura de dicionário com listas para resolver
este exercício.
Escreva um programa que leia os dados de N alunos e apresente na tela se foram
aprovados ou reprovados. O critério que garante a aprovação é que a média aritmética das
4 notas seja maior ou igual 7,0. O valor de N é a quantidade de alunos, e esse valor deve
ser lido do teclado no começo do programa. Faça um laço de repetição para a leitura destes
N alunos. As notas devem ser exibidas ao final do programa com uma casa decimal de
precisão.
Este foi o código que estou fazendo.
n = int(input('Quantos alunos?  '))
nome = {}
notas = []
i = 0
while i < n:
    nome['Aluno'] = str(input('Nome do aluno: ')).capitalize().strip()
    n1 = float(input('1ª nota:  '))
    notas.append(n1)

    n2 = float(input('2ª nota:  '))
    notas.append(n2)

    n3 = float(input('3ª nota:  '))
    notas.append(n3)

    n4 = float(input('4ª nota:  '))
    notas.append(n4)

    nome['Notas'] = notas

    media = (n1 + n2 + n3 + n4) / 4
    if media >= 7:
        nome['status'] = 'Aprovado'
    else:
        nome['status'] = 'Reprovado'

    i += 1

    continue
for i in nome['Notas']:
    for j, k, l in nome.values():
        print('{} {} {} '.format(nome['Aluno'],nome['Notas'],nome['status'], end=''))

","
Bom, basicamente o problema é que você usa o mesmo dicionário e a mesma lista para armazenar as informações de todos os alunos e isso se perde no meio do seu código.
No enunciado é bem claro que o nome do aluno deve servir como chave do dicionário: ""Nome representa o nome de um aluno e deve ser usado como chave"", mas você definiu duas chaves, Aluno e Notas.
Então, basicamente falta seguir o que o enunciado pede:
N = int(input('Quantos alunos? '))

students = {}

for i in range(1, N+1):
  name = input(f'Nome do aluno {i}: ')
  grades = []

  for j in range(1, 5):
    grade = float(input(f'Nota {j} do aluno {i}: '))
    grades.append(grade)

  students[name] = grades

for name, grades in students.items():
  average = sum(grades) / len(grades)
  result = 'aprovado' if average >= 7.0 else 'reprovado'
  print(f'O aluno {name} foi {result} com média {average:.1f}')

","
            2
        ",,,"['\npython', 'dicionário\n']"
